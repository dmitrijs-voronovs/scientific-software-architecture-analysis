quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Performance,; 17: Value assigned to 'h1' in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:199; 18: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 19: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 20: Assuming 'cell_value' is not equal to kValue in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 21: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 22: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:208; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86:36: warning: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') [clang-analyzer-core.NullDereference]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 3: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 3: Passing null pointer value via 1st parameter 'foam' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 4: Calling 'PDEFoamKernelLinN::WeightLinNeighbors' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112; /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:80:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 2: Taking true branch in /opt/root_src/tmva/tmva/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:108293,load,loaded,108293,https://root.cern,https://github.com/root-project/root/issues/7526,1,['load'],['loaded']
Performance,; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4528,load,load,4528,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_5:1:2: error: unknown type name 'ifdef'; >#ifdef PI; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_6:1:2: error: unknown type name 'ifdef'; >#ifdef ERROR; > ^; ><<< cling interactive line includer >>>:1:1: error: expec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:6209,load,load,6209,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module Ma,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5386,load,load,5386,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4599,load,load,4599,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to lo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4267,load,load,4267,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module FitPanel; Failed to load module Unuran; Failed to load module Quadp; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUti,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:1980,load,load,1980,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module FitPanel; Failed to load module Unuran; Failed to load module Quadp; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Faile,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:1950,load,load,1950,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,"; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:8491,optimiz,optimized,8491,https://root.cern,https://github.com/root-project/root/issues/15799,6,['optimiz'],['optimized']
Performance,; Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---; 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules; 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm; 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm; 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm; 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm; 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm; 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm; 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm; 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm; 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm; 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm; 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm; 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm; 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm; 0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:1501,Load,Loading,1501,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"; ```. Loading A.sl. Processing macro.cc...; In file included from ADictUX dictionary payload:6:; ./B.h:5:18: error: base class has incomplete type; class B : public A {; ~~~~~~~^; ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'; class A {; ^; In file included from ADictUX dictionary payload:6:; ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'; B(int arg) : A(arg) {}; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""A.h""; #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""A.h""; #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H; ```. ### What is the expected behaviour?. The correct output is:; ```. Loading A.sl. Processing macro.cc...; init A with arg=0; test A; init A with arg=0; test A; ```. ### How to reproduce?. ```; unzip linker_example.zip; make; root.exe -b -q -q macro.cc; ```. ### ROOT version. Any v6 version. ### How did you install ROOT?. any. ### Which operating system are you using?. linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:; ```; diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx; index f56ce23b7a..7cd24d2c63 100644; --- a/core/dictgen/src/rootcling_impl.cxx; +++ b/core/dictgen/src/rootcling_impl.cxx; @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,; if (!gOptCxxModule) {; headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,; detectedUmbrella,; - true);; + false);; if (!gDriverConfig->fBuildingROOTStage1) {; if (!gOptWriteEmptyRootPCM); fwdDeclsString = GenerateFwdDeclString(scan, interp);; ```; This introd",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13034:1379,Load,Loading,1379,https://root.cern,https://github.com/root-project/root/issues/13034,1,['Load'],['Loading']
Performance,; tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1454,Optimiz,OptimizeConfigParameters,1454,https://root.cern,https://github.com/root-project/root/issues/9792,1,['Optimiz'],['OptimizeConfigParameters']
Performance,"; where (starting at some point) it is invalidated at each entry *and* the basket; from the previous cluster boundary up to some entry number less than the current; entry are loaded over and over again (until the entry number reaches the next cluster; boundary).; ; In a case encountered by CMS, a TTree has a recorded cluster size of 165 events. However the TTree; appears to not have been clustered; most basket size are the same and seem to be flushed at 139 events; interval. A few branches are flushed less frequently, for example EventAuxiliary is flushed every 459; entries.; ; As a consequence when entry 417 is requested, the cluster boundary is calculated as 330 and; the first end as 495. Then all basket containing entries in that range are loaded, including; EventAuxiliary's basket containing entries 459 to 917. Then 917 is the highest available (partial); entry available. Thus the next time the TTreeCache is invalidated is when entry 918 is requested.; As that point the cluster boundary is calculated as 845 and the first end as 495, however; (with the small enough TTreeCache size), the cache is full as soon as the basket for EventAuxiliary; is added. This resulted in a 'valid' range for this cache of 845 to 917 and lead to the reading; all the baskets added so far ... and thus eventhough none of them would be used for reading; and they already had been read once in memory. Then for entry 919, the exact same behavior; repeated.; ; The solution consist on marking the 'minimum' valid range as being 'at least' one cluster wide.; ; Thus in the example above for entry 918 through 989, **only** the missing baskets are read; individually resulting in 'degraded' performance but **not** a wild over-read.; ; A future enhancement would be, in those cases, restart the next buffer from the last valid; entry + 1 rather than the previous event boundary. This would result in a 'slightly' over-read; (some baskets might be read twice) rather than the wild useless over-read we had.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1778:1334,cache,cache,1334,https://root.cern,https://github.com/root-project/root/pull/1778,3,"['cache', 'perform']","['cache', 'performance']"
Performance,"<G__G__ANALYSIS_215_0_109(G__value*, char const*, G__param*, int)>, result7=result7; entry=0x7ffcac8c2c90, funcname=funcname; entry=0x249df80 """", libp=libp; entry=0x7ffcac8c2cd0, hash=hash; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/Api.cxx:393; #10 0x00007fba3322b094 in G__execute_call (result7=result7; entry=0x7ffcac8c2c90, libp=libp; entry=0x7ffcac8c2cd0, ifunc=ifunc; entry=0x249df80, ifn=ifn; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/newlink.cxx:2408; #11 0x00007fba3322b38b in G__call_cppfunc (result7=result7; entry=0x7ffcac8c2c90, libp=libp; entry=0x7ffcac8c2cd0, ifunc=ifunc; entry=0x249df80, ifn=ifn; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/newlink.cxx:2612; #12 0x00007fba33212c9f in G__interpret_func (result7=result7; entry=0x7ffcac8c2c90, funcname=0xfa4210 ""InitAnalysis"", libp=libp; entry=0x7ffcac8c2cd0, hash=1240, p_ifunc=0x249df80, funcmatch=funcmatch; entry=1, memfunc_flag=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/ifunc.cxx:5791; #13 0x00007fba33204f55 in G__getfunction (item=item; entry=0xe73375 ""InitAnalysis()"", known3=known3; entry=0x7ffcac8ce1a4, memfunc_flag=<optimized out>, memfunc_flag; entry=1) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/func.cxx:2660; #14 0x00007fba332cc07c in G__getstructmem (store_var_type=store_var_type; entry=112, varname=..., membername=membername; entry=0xe73375 ""InitAnalysis()"", memnamesize=memnamesize; entry=2147483647, tagname=tagname; entry=0xfa35e0 ""mgr"", known2=0x7ffcac8ce1a4, varglobal=0x7fba33a89180 <G__global>, objptr=2) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/var.cxx:6821; #15 0x00007fba332c51b5 in G__getvariable (item=item; entry=0xe73370 ""mgr->InitAnalysis()"", known=known; entry=0x7ffcac8ce1a4, varg",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:3197,optimiz,optimized,3197,https://root.cern,https://github.com/root-project/root/issues/6977,1,['optimiz'],['optimized']
Performance,"<https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. [Detaching after vfork from child process 800350]; root [0] double f(double x) { return x*x; }; root [1] double y = ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1871,load,loading,1871,https://root.cern,https://github.com/root-project/root/pull/11882,1,['load'],['loading']
Performance,"=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",; ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273; #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",; ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607; #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",; isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176; #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250; #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156; #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48; #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48; #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314; #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94; #15 THashTable::Add (this=0xe65a20, o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:4486,optimiz,optimized,4486,https://root.cern,https://github.com/root-project/root/pull/2776,2,['optimiz'],['optimized']
Performance,"=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:6502,optimiz,optimized,6502,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:14136,optimiz,optimized,14136,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922; #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965; #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354; #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458; #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400; #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45; #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91; #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178; #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503; #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542; #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178; #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:5216,optimiz,optimized,5216,https://root.cern,https://github.com/root-project/root/issues/6640,1,['optimiz'],['optimized']
Performance,"=<synthetic pointer>, start=<synthetic pointer>, N=32, head=0x45a0a0) at src/linked_list.h:88; #1 tcmalloc::SLL_PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, head=0x45a0a0) at src/linked_list.h:79; #2 tcmalloc::ThreadCache::FreeList::PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, this=0x45a0a0) at src/thread_cache.h:238; #3 tcmalloc::ThreadCache::ReleaseToCentralCache (this=this@entry=0x45a040, src=src@entry=0x45a0a0, cl=<optimized out>, N=N@entry=32) at src/thread_cache.cc:206; #4 0x00007ffff57dff2c in tcmalloc::ThreadCache::ListTooLong (this=0x45a040, list=0x45a0a0, cl=<optimized out>) at src/thread_cache.cc:164; #5 0x00007ffff6dc2465 in TString::UnLink (this=0xcbb820) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/inc/TString.h:265; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007ffff68a2266 in TString::~TString (this=0xcbb820, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TString.cxx:249; #7 0x00007ffff68ac37f in TStyle::~TStyle (this=0xcbb500, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TStyle.cxx:478; #8 0x00007ffff68ac46c in TStyle::~TStyle (this=0xcbb500, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TStyle.cxx:483; #9 0x00007ffff68fa74e in TCollection::GarbageCollect (obj=0xcbb500) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/cont/src/TCollection.cxx:736; #10 0x00007ffff6902c6f in TList::Delete (this=0xcb8070, option=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429:2382,optimiz,optimized,2382,https://root.cern,https://github.com/root-project/root/issues/13429,1,['optimiz'],['optimized']
Performance,"=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:9142,optimiz,optimized,9142,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,"=======; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fe989ecb46c in waitpid () from /lib64/libc.so.6; #1 0x00007fe989e48f62 in do_system () from /lib64/libc.so.6; #2 0x00007fe98ba740bc in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libCore.so; #3 0x00007fe98ba716d5 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libCore.so; #4 <signal handler called>; #5 0x00007fe98b1ddee9 in TPad::FillCollideGrid(TObject*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fe98b1de2eb in TPad::PlaceBox(TObject*, double, double, double&, double&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /afs/cern.ch/user/a/averbyts/Projects/zevis/test/pad2.cxx:84; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fe98b1ddee9 in TPad::FillCollideGrid(TObject*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fe98b1de2eb in TPad::PlaceBox(TObject*, double, double, double&, double&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x0000000000401293 in main (argc=<optimized out>, argv=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428:1247,optimiz,optimized,1247,https://root.cern,https://github.com/root-project/root/issues/6428,2,['optimiz'],['optimized']
Performance,"=============; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; rax 0xfffffffffffffe00 rbx 0x00007ffe6d80d638 rcx 0x00007ff0e8af95c7; rdx 0x0000000000000000 rsi 0x00007ffe6d80d638 rdi 0x00000000000d979c; rbp 0x00007ffe6d80d6a0 rsp 0x00007ffe6d80d628 r8 0x0000000000000001; r9 0x0000000000000000 r10 0x0000000000000000 r11 0x0000000000000202; r12 0x0000000000000000 r13 0x00007ffe6d80d660 r14 0x00007ffe6d80df50; r15 0x0000000000691200 rip 0x00007ff0e8af95c7 eflags [ IF ] ; cs 0x00000033 ss 0x0000002b ds 0x00000000 ; es 0x00000000 fs 0x00000000 gs 0x00000000 ; #0 0x00007ff0e8af95c7 in __GI___wait4 (pid=890780, stat_loc=stat_loc; entry=0x7ffe6d80d638, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007ff0e8af958b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffe6d80d638, options=options; entry=0) at waitpid.c:38; #2 0x00007ff0e8a7035b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007ff0e930771d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x691200) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x691200) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007ff0e9305774 in TUnixSystem::DispatchSignals (this=0x691200, sig=kSigSegmentationViolation) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:12575,optimiz,optimized,12575,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"================; #0 0x00007fffa80f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa805a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8ba9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x11eee5850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa8bac1c8 in TUnixSystem::DispatchSignals (this=0x11eee5850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #6 0x00007fffa8ba308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #7 0x00007fffa8b9d428 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fffa8db70c0 <textinput::TerminalConfigUnix::Get()::s>, signum=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #8 0x00007fffa8b9d47c in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #9 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ==============",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:13550,optimiz,optimized,13550,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"======================; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:19052,optimiz,optimized,19052,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,"========================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running from Python:. ~~~; 427/1192 Test #397: pyunittests-dataframe-histograms ....................................***Failed 191.35 sec; test_histo1D (dataframe_histograms.HistogramsFromRDF) ... *** Break *** segmentation violation; ===========================================================; There was a crash (#8 0x00007fff7c7ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fff89ef2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fff89e5a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fff8ac49ad8 in system_compat () from /lib64/glibc-hwcaps/power9/libpthread-2.28.so; #3 0x00007fff7c7a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x16573fa50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007fff7ca8eefc in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:195; #7 0x00007fff7c7ac09c in TUnixSystem::DispatchSignals (this=0x16573fa50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3610; #8 0x00007fff7c7ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #9 0x00007fff7c7a308c in sighandler (sig=<optimized out>) at /buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:27109,optimiz,optimized,27109,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,"===========================; rax 0xfffffffffffffe00 rbx 0x00007ffe6d80d638 rcx 0x00007ff0e8af95c7; rdx 0x0000000000000000 rsi 0x00007ffe6d80d638 rdi 0x00000000000d979c; rbp 0x00007ffe6d80d6a0 rsp 0x00007ffe6d80d628 r8 0x0000000000000001; r9 0x0000000000000000 r10 0x0000000000000000 r11 0x0000000000000202; r12 0x0000000000000000 r13 0x00007ffe6d80d660 r14 0x00007ffe6d80df50; r15 0x0000000000691200 rip 0x00007ff0e8af95c7 eflags [ IF ] ; cs 0x00000033 ss 0x0000002b ds 0x00000000 ; es 0x00000000 fs 0x00000000 gs 0x00000000 ; #0 0x00007ff0e8af95c7 in __GI___wait4 (pid=890780, stat_loc=stat_loc; entry=0x7ffe6d80d638, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007ff0e8af958b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffe6d80d638, options=options; entry=0) at waitpid.c:38; #2 0x00007ff0e8a7035b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007ff0e930771d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x691200) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x691200) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007ff0e9305774 in TUnixSystem::DispatchSignals (this=0x691200, sig=kSigSegmentationViolation) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #10 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:12679,optimiz,optimized,12679,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"=============================; #0 0x00007fc0d7d5e46c in waitpid () from /lib64/libc.so.6; #1 0x00007fc0d7cdbf62 in do_system () from /lib64/libc.so.6; #2 0x00007fc0d99070bc in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libCore.so; #3 0x00007fc0d99046d5 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libCore.so; #4 <signal handler called>; #5 0x00007fc0d9056288 in TPad::Close(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fc0d905f746 in TPad::~TPad() [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x00007fc0d905f919 in TPad::~TPad() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #8 0x000000000040124b in main (argc=<optimized out>, argv=<optimized out>) at test/pad6.cxx:9; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fc0d9056288 in TPad::Close(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fc0d905f746 in TPad::~TPad() [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x00007fc0d905f919 in TPad::~TPad() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6453:1329,optimiz,optimized,1329,https://root.cern,https://github.com/root-project/root/issues/6453,2,['optimiz'],['optimized']
Performance,"===============================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #10 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #11 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #12 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x22dedd8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #13 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x22dedd8, this=<optimized out>) at /usr/include/c++/12/bits/new_allocator.h:181; #14 std::allocator_traits<std::allocator<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:23327,optimiz,optimized,23327,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"========================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f05215c1076 in TClingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f052152ab45 in TCling::SetClassInfo(TClass*, bool) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #8 0x00007f0525f60963 in TClass::SetUnloaded() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #9 0x00007f0525f07b38 in ROOT::RemoveClass(char const*) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #10 0x00007f0525f7c1cf in ROOT::TGenericClassInfo::~TGenericClassInfo() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #11 0x00007f05257728a7 in __run_exit_handlers (status=0, listp=0x7f0525918718 <__exit_funcs>, run_list_atexit=run_list_atexit; entry=true, run_dtors=run_dtors; entry=true) at exit.c:108; #12 0x00007f0525772a60 in __GI_exit (status=<optimized out>) at exit.c:139; #13 0x00007f052575008a in __libc_start_main (main=0x556722a83100 <main>, argc=5, argv=0x7ffc6b5a37b8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffc6b5a37a8) at ../csu/libc-start.c:342; #14 0x0000556722a8568e in _start (); ===========================================================. [bash][atspot01]:self-reference >; ```. ### Setup. I tried various (but not too many) ROOT 6.2X/YY versions. They all failed to handle this example type correctly. ### Additional context. This is connected to (for ATLAS users only): https://its.cern.ch/jira/browse/ATLASG-2456",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:10955,optimiz,optimized,10955,https://root.cern,https://github.com/root-project/root/issues/12358,4,['optimiz'],['optimized']
Performance,"===========================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007fc2c245846c in __libc_waitpid (pid=25123, stat_loc=stat_loc; entry=0x7ffefaecb520, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007fc2c23d5f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007fc2c55d95dc in TUnixSystem::StackTrace (this=0xcf6980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007fc2c55dc06a in TUnixSystem::DispatchSignals (this=0xcf6980, sig=kSigSegmentationViolation) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007fc2c54dd41d in TObject::AppendPad (this=0x190c210, option=0x400c96 """") at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fc2c54dd41d in TObject::AppendPad (this=0x190c210, option=0x400c96 """") at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. ```. ## Expected behavior; No crash. ## To Reproduce; Code:. ```; #include <TCanvas.h>; #include <TText.h>; #include <TPad.h>; #include <fenv.h>. int ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6447:1194,optimiz,optimized,1194,https://root.cern,https://github.com/root-project/root/issues/6447,2,['optimiz'],['optimized']
Performance,>Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5487,load,load,5487,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"@bbockelm @pcanal @dpiparo . Here is the new imt unzipping basket with TTaskGroup interface. Comparing to #785 , I noticed there are still 3%(in Real Time) ~ 5%(in CPU Time) performance drops in new implementation. The degradation is caused by tbb function:. tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::receive_or_steal_task(long&). I suspect the reason is because #785 in the following function:. https://github.com/zzxuanyuan/root/blob/15cceff19b48dfe4a4b0c69c1ec07ea75bd1ccb5/tree/tree/src/TTreeCacheUnzip.cxx#L708. CreateTasks() explicitly creates 2 tasks (empty_task and MappingTask; and set_ref_count(2) means 2 tasks in total). The scheduler might make a better decision here since it knows there will be only one task except empty_task running in future. On the other hand, TTaskGroup uses tbb::task_group which calls the following function:. https://github.com/01org/tbb/blob/b9805bacadd4d0474fd3358cf0c7153042ce50c3/include/tbb/task_group.h#L108. task_group_base() also first creates a empty_task. However, it only creates 1 task(itself) by setting reference count as 1 (set_ref_count(1)). When it invoke another task by calling . https://github.com/01org/tbb/blob/b9805bacadd4d0474fd3358cf0c7153042ce50c3/include/tbb/task_group.h#L103. allocate_additional_child() will create a new task as child and increment reference count by 1. I guess accumulating tasks on-the-fly might degrade the performance since the tbb scheduler could spend more time on finding tasks to work on. In a short, I think explicitly defining the total number of tasks and task graph should have better performance (more efficient for scheduler I guess) than adding more tasks to task_group as the program runs. There are two alternative approaches that might improve the performance. ; 1. Since we have already know we will only have one task (except empty_task) to add into the task_group, we could revise TTaskGroup interface and notify it what task is going to run in advance.; 2. We coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010:174,perform,performance,174,https://root.cern,https://github.com/root-project/root/pull/1010,1,['perform'],['performance']
Performance,"@bbockelm @pcanal This patch copies the code of signal handling in CMSSW. It avoids async-unsafe functions in signal handler functions. . For reference, see the link https://github.com/bbockelm/cmssw/blob/stacktrace_handler_revisit/FWCore/Services/src/InitRootHandlers.cc. I tried this patch with some simple multi-thread test cases and it worked fine. Is there any complicated test cases I can run? I think this patch is not very ready to merge, but it achieved basic functions. Any criticisms are welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/97:309,multi-thread,multi-thread,309,https://root.cern,https://github.com/root-project/root/pull/97,1,['multi-thread'],['multi-thread']
Performance,"@gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5376:310,load,loading,310,https://root.cern,https://github.com/root-project/root/pull/5376,2,['load'],"['load', 'loading']"
Performance,"@vepadulano @dpiparo . This PR fixes. - https://github.com/root-project/root/issues/7196. This issue is very case-dependent.; When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:; `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree; - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```; const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;; host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;; ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. This PR implements the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```; Int_t fMemAvailable; // available RAM in MB; Int_t fMemCached; // cached RAM in MB; Int_t fMemBuffer; // buffer RAM in MB; Int_t fMemShared; // shared RAM in MB; Int_t fSwapCached; // cached swap in MB; Int_t fSReclaimable // slab that might be reclaimed; ```. Results:. ```; ➜ ROOT free -h; total used free shared buff/cache available; Mem: 23Gi 3.4Gi 7.4Gi 214Mi 12Gi 19Gi; Swap: 7.6Gi 2.1Gi 5.5Gi; ```. ```; ➜ ROOT root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 23877 2786 7562; root [2] ; ```; Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14695:231,cache,cached,231,https://root.cern,https://github.com/root-project/root/pull/14695,10,"['Cache', 'cache']","['Cached', 'cache', 'cached', 'cachedMem']"
Performance,"A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return; a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9557:368,optimiz,optimizes,368,https://root.cern,https://github.com/root-project/root/pull/9557,1,['optimiz'],['optimizes']
Performance,"A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return; a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9568:368,optimiz,optimizes,368,https://root.cern,https://github.com/root-project/root/pull/9568,4,['optimiz'],['optimizes']
Performance,"A bug or lack of optimization is causing the tutorial `tutorial-tmva-TMVAMulticlass` to take forever to process. @ashlaban is working on optimizing this particular issue, so the ignore should be disabled once his patch is upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/438:17,optimiz,optimization,17,https://root.cern,https://github.com/root-project/root/pull/438,2,['optimiz'],"['optimization', 'optimizing']"
Performance,"A context is responsible for preparing a cluster, and will be the unit of parallelisation for concurrent writing. Also has a commit to return `const` reference from `RNTupleWriter::GetModel()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14391:94,concurren,concurrent,94,https://root.cern,https://github.com/root-project/root/pull/14391,1,['concurren'],['concurrent']
Performance,"A reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main() {; {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 42; });; df.Snapshot(""t"", ""f.root"");; df.Snapshot(""fr"", ""fr.root"");; }. TFile f(""f.root"");; auto *t = f.Get<TTree>(""t"");; TFile frf(""fr.root"");; auto *fr = frf.Get<TTree>(""fr"");; t->AddFriend(fr);; ROOT::RDataFrame df(*t);; df.Filter(""x > 0 && fr.x > 0"").Count().GetValue();; }; ```. errors out with:. ```; input_line_32:2:67: error: use of undeclared identifier 'fr'; auto func0(const Int_t var0, const Int_t var1){return var0 > 0 && fr.var0 > 0; ^; ```. The reason is that in this case we substitute column names with `var0`, `var1` placeholder names starting with `""x""`, resulting in the broken expression with `fr.var0`. I think a possible fix is to perform these substitutions from the longest to the shortest column names. First reported at https://root-forum.cern.ch/t/rdataframe-string-filter-question/50872 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11002:781,perform,perform,781,https://root.cern,https://github.com/root-project/root/issues/11002,1,['perform'],['perform']
Performance,"A self-contained reproducer:. ```python; import ROOT. code = """"""; #include <ROOT/RDataFrame.hxx>. int Foo(ROOT::RDF::RNode d) {; ROOT::RDF::RResultPtr<int> ptr;; return 42;; }; """""". def main():; print(""first CompileMacro""); with open(""generatedcode.cpp"", ""w"") as f:; f.write(code); ROOT.gSystem.CompileMacro(""generatedcode.cpp""). d = ROOT.RDataFrame(10); r = ROOT.Foo(ROOT.RDF.AsRNode(d)). print(""second CompileMacro""); with open(""generatedcode.cpp"", ""w"") as f:; f.write(code); ROOT.gSystem.CompileMacro(""generatedcode.cpp"") # crashes. if __name__ == ""__main__"":; main(); ```. results in:. ```; ~/S/d/optimized_template_helper python repro_crash_compilemacro.py (cern-root) ; first CompileMacro; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; second CompileMacro; Info in <ACLiC>: modified script has already been compiled and loaded; Info in <ACLiC>: it will be regenerated and reloaded!; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:180:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t begin(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7199:907,load,loaded,907,https://root.cern,https://github.com/root-project/root/issues/7199,1,['load'],['loaded']
Performance,A shortcut to perform Modified and Update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14671:14,perform,perform,14,https://root.cern,https://github.com/root-project/root/pull/14671,1,['perform'],['perform']
Performance,"ALICE has reported regular crashes due to MT unsafe access in `TDirectory::RegisterGDirectory`. Example backtrace:. ```. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):; #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213; #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109; #5 R__zipMultipleAlgorithm (cxlevel=cxlevel; entry=1, srcsize=srcsize; entry=0x7ff4299869ac, src=src; entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S; \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300; zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <inco",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:930,optimiz,optimized,930,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,"According to my benchmarks with gcc 8.1, it brings ~3% performance improvement in the serialization of floats.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2089:55,perform,performance,55,https://root.cern,https://github.com/root-project/root/pull/2089,1,['perform'],['performance']
Performance,Add .cache directory to .gitignore,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8838:5,cache,cache,5,https://root.cern,https://github.com/root-project/root/pull/8838,1,['cache'],['cache']
Performance,Add 1-vs-rest and 1-vs-1 performance measures to TMVA multiclass output,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/597:25,perform,performance,25,https://root.cern,https://github.com/root-project/root/pull/597,1,['perform'],['performance']
Performance,"Add Size() interface to TListOfFunctions and call this from GetNmethods,; so that we don't have to allocate memory for this. Profiled the peak meory performance in valgrind; total(B) ; master: 427,544,680; HEAD: 427,542,328",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1762:149,perform,performance,149,https://root.cern,https://github.com/root-project/root/pull/1762,1,['perform'],['performance']
Performance,Add a class to perform compensate summation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/372:15,perform,perform,15,https://root.cern,https://github.com/root-project/root/pull/372,1,['perform'],['perform']
Performance,Add a new option in PyKeras to execute user python code before loading the model,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5632:63,load,loading,63,https://root.cern,https://github.com/root-project/root/pull/5632,1,['load'],['loading']
Performance,"Add a new page source and sink that use S3 as the backing store. Davix; is used as the S3 interface. The implementation is nearly identical; to the DAOS backend and there is a lot of duplicated code. ```cpp; std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");; {; auto model = RNTupleModel::Create();; auto pt = model->MakeField<float>(""pt"");; auto vec = model->MakeField<std::vector<int>>(""vec"");; // create a new RNTuple named `my_ntuple`; // -- objects are written to /bucket/my_ntuple/; auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);; for (int i = 0; i < 100; i++) {; *pt = 42.0;; *vec = {1, 2, 3};; writer->Fill();; }; }. // opens the RNTuple at the path /bucket/my_ntuple/; auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);; ```; results in the following objects stored in the bucket:; ```shell; my_ntuple/0 # page 0, 1, ... ; my_ntuple/1; my_ntuple/18446744073709551613 # footer; my_ntuple/18446744073709551614 # header; my_ntuple/18446744073709551615 # anchor; my_ntuple/2; ```; Like the current DAOS backend, one object is allocated for every page,; plus three for the header, footer, and anchor. Performance will not be; very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There; are three reserved keys:; * anchor: u64(-1); * header: u64(-2); * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:; * S3_REGION; * S3_SECRET_KEY; * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:; - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`; - [ ] implement `LoadCluster`; - [ ] test mocks; - [ ] test with real RNTuples; - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8525:1140,Perform,Performance,1140,https://root.cern,https://github.com/root-project/root/pull/8525,3,"['Load', 'Perform', 'concurren']","['LoadCluster', 'Performance', 'concurrent']"
Performance,Add a unit test that checks RNTuple serialization/deserialization of classes using empty base optimization. ## Checklist:; - [X] tested changes locally. This PR fixes #10323.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10481:94,optimiz,optimization,94,https://root.cern,https://github.com/root-project/root/pull/10481,1,['optimiz'],['optimization']
Performance,"Add methods TBufferMerger::GetQueueSize() and TBufferMerger::RegisterCallback() to alow user; to control the rate at which data is pushed into the merging queue. In our test, we use the callback; function to launch tasks asynchronously whenever a buffer is done processing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1001:155,queue,queue,155,https://root.cern,https://github.com/root-project/root/pull/1001,1,['queue'],['queue']
Performance,Add option to selectively turn off const optimization for pdf components,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9338:41,optimiz,optimization,41,https://root.cern,https://github.com/root-project/root/pull/9338,1,['optimiz'],['optimization']
Performance,"Add support for visualization of digit sets in the context of physics collections:; * tooltip related to selected collection item; * optimization for filtered items, e.g. only visible digits are streamed to client. Exmaple of RecHits visualization in CMS; ![Untitled](https://user-images.githubusercontent.com/2516492/175380176-3bf84d88-cd9a-410a-80db-264db1c5bed8.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10821:133,optimiz,optimization,133,https://root.cern,https://github.com/root-project/root/pull/10821,1,['optimiz'],['optimization']
Performance,"Add the concept of column representations to fields. Every fields can have a set of possible column representations for writing and additional column representations for reading. When reading, the column representation is fixed by the on-disk data. On writing, there is a default column representation but the user can pick a different one. This provides the framework to store data in different encodings (e.g., split, unsplit) and to load data from ""compatible columns"", e.g. `kInt32` column into `std::int64` type. As an example, the PR adds support for split and unsplit storage of `double`s. Follow-up PRs will complete the available encodings and select split encode as the default for writing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12133:436,load,load,436,https://root.cern,https://github.com/root-project/root/pull/12133,1,['load'],['load']
Performance,"Add thread-safe, bounded queue to sychronize producer-consumer threads",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8715:25,queue,queue,25,https://root.cern,https://github.com/root-project/root/pull/8715,1,['queue'],['queue']
Performance,Adding -ffast-math flag to really activate Optimized builds for interpreter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1051:43,Optimiz,Optimized,43,https://root.cern,https://github.com/root-project/root/pull/1051,1,['Optimiz'],['Optimized']
Performance,"Address a number of AddressSanitizer failures with Python tests, due to the way we need to preload the ASan runtime and our configuration. If I count correctly (there were a number of failures introduced last night, so I don't have a proper baseline), this fixes 7 tests:; * `pyunittests-pyroot-import-load-libs`; * `tutorial-roofit-rf104_classfactory-py`; * `roottest-python-JupyROOT-simpleCppMagic_notebook`; * `roottest-python-JupyROOT-thread_local_notebook`; * `roottest-python-JupyROOT-ROOT_kernel_notebook`; * `roottest-python-basic-basic`; * `roottest-python-regression-regression`. Moreover, `tutorial-rcanvas-df104-py` will show a proper AdressSanitizer failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11621:302,load,load-libs,302,https://root.cern,https://github.com/root-project/root/pull/11621,1,['load'],['load-libs']
Performance,"Address: https://github.com/root-project/root/pull/12650#issuecomment-1517450219. From @hahnjo:. Hi @pcanal, our AddressSanitizer build reports a heap-buffer-overflow: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roottest.root.tree/stl/roottest_root_tree_stl_make/. I bisected this to commit https://github.com/root-project/root/commit/2fa93de2a51e248a56418d8c6488b043746d0925; the error message says ""0x60700022d458 is located 8 bytes to the left of 80-byte region"". However, the stack trace points to the loop immediately after the added condition to perform the binary search. Could you take a look, please? What does TMath::BinarySearch return in case the element is not found?. Answer: yep it was missing the error handling (return value of -1)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12695:647,perform,perform,647,https://root.cern,https://github.com/root-project/root/pull/12695,1,['perform'],['perform']
Performance,"Adds `RPageSource::LoadStructure[Impl]()`. This allows to load header and footer without processing them. Decompression and deserialization will still happen in Attach(), which calls LoadStructure if it hasn't been called before. This will facilitate asynchronous open of files for RDF MT scheduling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15909:19,Load,LoadStructure,19,https://root.cern,https://github.com/root-project/root/pull/15909,3,"['Load', 'load']","['LoadStructure', 'load']"
Performance,"Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for; - unified access to files, either local or remote; - Automatic handling of UNIX and Windows line breaks ; - Control of the I/O buffer mechanism. Current todos:; - [ ] Use upcoming `RStatus` / `RException` based error handling; - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation ; - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX; - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3030:684,perform,performance,684,https://root.cern,https://github.com/root-project/root/pull/3030,1,['perform'],['performance']
Performance,"Adds a new constructor to the RNTuple RDF data source that takes an ntuple name and a list of files. The data source then treats these files as a chain. Slightly simplifies the prototype construction in the RNTuple data source: instead of constructing full column reader prototypes, only the corresponding field prototypes are constructed. Multi-threaded work scheduling is as follows:. - As long as there are more files than slots: every slots get a file; - For the tail: slots get distributed over the remaining files and align on cluster boundaries. Some optimizations for follow-up PRs:. - Load the next ranges in the background. In particular that would open the next batch of files in the backgound; - Clone page sources without reopening the file; - The next set of ranges currently gives up to number of slots ranges. However, it would make more sense to use resource constraints such as available memory or number of open file descriptors as a limit and let slots work on more ranges at a time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13329:340,Multi-thread,Multi-threaded,340,https://root.cern,https://github.com/root-project/root/pull/13329,3,"['Load', 'Multi-thread', 'optimiz']","['Load', 'Multi-threaded', 'optimizations']"
Performance,"Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial; - [x] Support changing active columns during the lifetime of an ntuple reader; - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5377:552,cache,cache,552,https://root.cern,https://github.com/root-project/root/pull/5377,4,"['Load', 'cache', 'concurren', 'load']","['LoadCluster', 'cache', 'concurrent', 'loaded']"
Performance,"After #10005 is merged, a couple of tests will fail due to a `heap-use-after-free`:; * `pyunittests-pyroot-pyz-rdataframe-makenumpy`; * `pyunittests-pyroot-numbadeclare`; * `gtest-tree-dataframe-test-dataframe-friends`; * `gtest-tree-dataframe-test-dataframe-cache`; * `gtest-tree-dataframe-test-dataframe-simple`; * `gtest-tree-dataframe-test-dataframe-snapshot`; * `gtest-tree-dataframe-test-datasource-more`; * `gtest-tree-dataframe-test-datasource-trivial`; * `gtest-tree-dataframe-test-dataframe-concurrency` (`RJittedDefine`); * `pyunittests-dataframe-misc` (`RJittedDefine`); * `pyunittests-dataframe-histograms` (`RJittedDefine`); * `pyunittests-dataframe-cache`; * `pyunittests-dataframe-merge-results`; * `tutorial-dataframe-df019_Cache`; * `tutorial-tmva-tmva003_RReader`; * `tutorial-dataframe-df000_simple-py` (`RJittedDefine`); * `tutorial-dataframe-df002_dataModel-py` (`RJittedDefine`); * `tutorial-dataframe-df003_profiles-py`; * `tutorial-dataframe-df007_snapshot-py` (`RJittedDefine`); * `tutorial-dataframe-df010_trivialDataSource-py` (`RJittedDefine`); * `tutorial-dataframe-df014_CSVDataSource-py` (`RJittedDefine`); * `tutorial-dataframe-df016_vecOps-py` (`RJittedDefine`); * `tutorial-dataframe-df017_vecOpsHEP-py` (`RJittedDefine`); * `tutorial-dataframe-df019_Cache-py`; * `tutorial-dataframe-df021_createTGraph-py` (`RJittedDefine`); * `tutorial-dataframe-df024_Display-py`; * `tutorial-dataframe-df031_Stats-py` (`RJittedDefine`); * `tutorial-dataframe-df103_NanoAODHiggsAnalysis-py` (`RJittedDefine`); * `tutorial-dataframe-df105_WBosonAnalysis-py` (`RJittedDefine`); * `tutorial-dataframe-df106_HiggsToFourLeptons-py` (`RJittedDefine`); * `tutorial-dataframe-df107_SingleTopAnalysis-py` (`RJittedDefine`); * `tutorial-pyroot-pyroot004_NumbaDeclare-py` (`RJittedDefine`); * `tutorial-rcanvas-df105-py` (`RJittedDefine`); ; According to the stack traces, `~RDefineBase` / `~RJittedDefine` calls `RLoopManager::Deregister` on an already freed `RLoopManager`. Note: There may",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10007:259,cache,cache,259,https://root.cern,https://github.com/root-project/root/issues/10007,3,"['cache', 'concurren']","['cache', 'concurrency']"
Performance,"After changes to RDF's internal logic, some of the classes used; during the event loop were triggering unnecessary, slow cling nullptr; checks. This patch turns these checks off. This resolves a performance regression in v6.23 w.r.t. v6.22 for RDF; macros run via the interpreter (`root dfMacro.C`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7004:195,perform,performance,195,https://root.cern,https://github.com/root-project/root/pull/7004,1,['perform'],['performance']
Performance,"After importing `ROOT` in a Jupyter Notebook in which Jupyter Widgets are used, the performance of figure interactions like panning and zooming drastically falls off. After identifying ROOT as the culprit, I found that the poor performance is caused by sleeping invoked during [these hooks](https://github.com/root-project/root/blob/aedbc69c9c41a9d3eb6a5e24eb7382547141d85a/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L400-L401) which are run for each kernel execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7684:84,perform,performance,84,https://root.cern,https://github.com/root-project/root/issues/7684,2,['perform'],['performance']
Performance,"After messing up my git repository, I closed pull request 796 and re-created this one with the same changes. This pull request is the result of work done by David Clark as a summer intern at Argonne:; To prepare for multi-threaded workflows, a preloading and retaining clusters feature is introduced. This change will prevent additional reads from occurring when reading events out of sequence.; By setting TTree::SetClusterPrefetch(), an entire clusters will be loaded into memory, rather than single baskets.; By setting the MaxVirtualSize of the tree to a negative value, previous clusters will be retained - the absolute value of MaxVirtualSize indicates how many additional clusters will be kept in memory. If TTree CacheDoClusterPrefetch is set to true, GetEntry() will load the entire cluster into memory, not just the first basket. For this, GetBasket() is modified to call a new function GetFreshCluster(). This function is responsible for returning a new basket and clearing out clusters from memory. Because clusters can have varying numbers of baskets, GetFreshCluster() reuses the first basket and clear the rest of the baskets. Reusing all baskets may be more efficient, but adds significant complexity and would not affect the typical case where each cluster only contains a single basket (all the baskets will be reused here). To test the performance of the change, I read 1000 entries (about 1 GB) from a tree of randomly generated data consisting of 2000 branches. Every read had a 2.5% chance of reading 10 entries back or a 2.5% chance of reading 10 entries forward from the current entry.; Without the change enables there were 1.5 GB read in 31102 read calls.; With MaxVirtualSize set to -1 and CacheDoClusterPrefetch true, there were 1.1 GB read in 90 read calls.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1065:216,multi-thread,multi-threaded,216,https://root.cern,https://github.com/root-project/root/pull/1065,6,"['Cache', 'load', 'multi-thread', 'perform']","['CacheDoClusterPrefetch', 'load', 'loaded', 'multi-threaded', 'performance']"
Performance,"After pull-request #11525 is merged (which introduces `RField` support for user-defined classes that have an associated collection proxy), it is planned to apply further optimizations to the base implementation. ### Optional: share how it could be improved; Three different optimizations can be applied, in order:; - [x] Iteration over collection elements: suggestion by @pcanal [here](https://github.com/root-project/root/pull/11525#discussion_r997334570) is to use iterators instead of relying in `TVirtualCollectionProxy::At()`.; - [x] Reuse vs. destruct/reallocate for collection items: suggested by @pcanal [here](https://github.com/root-project/root/pull/11525#discussion_r997337292) and [here](https://github.com/root-project/root/pull/11525#discussion_r997343681).; - [ ] Maybe optimize the case of a `kSTLvector` collection, as elements are contiguous in memory (see [here](https://github.com/root-project/root/pull/11525#discussion_r997335574)). [marked as `TODO` in the source code]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11671:170,optimiz,optimizations,170,https://root.cern,https://github.com/root-project/root/issues/11671,3,['optimiz'],"['optimizations', 'optimize']"
Performance,"After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:; ```; Integrating log(a*x), relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04; 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03; 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14; Integrating log(a*x), relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19; 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41; 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3; Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06; Integrating log(a*x), relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26; 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48; 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38; [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4; Integrating Polynomial 4th order, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04; 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05; 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05; Integrating Polynomial 4th order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.383",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:197,perform,performance,197,https://root.cern,https://github.com/root-project/root/pull/6632,1,['perform'],['performance']
Performance,"After the update to Visual Studio v16.4.0, the /O2 optimization flag in the interpreter make many (25%) of the tests failing.; Try to re-enable /O2 after the upgrade of llvm & clang, or after updating Visual Studio (v16.5.0-pre.2.0 still doesn't work)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4948:51,optimiz,optimization,51,https://root.cern,https://github.com/root-project/root/pull/4948,1,['optimiz'],['optimization']
Performance,"After the upgrade to LLVM 13, the test `roottest-root-meta-tclass-execInitOrder` will *crash* with AddressSanitizer instrumentation:; ```; 2187: Processing /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx+...; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Derived is found to inherit from TObject; 2187:; 2187: *** Break *** segmentation violation; 2187:; 2187:; 2187:; 2187: ===========================================================; 2187: There was a crash.; 2187: This is the entire stack trace of all threads:; 2187: ===========================================================; 2187: #0 0x00007f2a616e15db in waitpid () from /lib64/libc.so.6; 2187: #1 0x00007f2a61643ce7 in do_system () from /lib64/libc.so.6; 2187: #2 0x00007f2a630125cb in TUnixSystem::StackTrace (this=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2395; 2187: #3 0x00007f2a6301c2df in TUnixSystem::DispatchSignals (this=0x617000000080, sig=kSigSegmentationViolation) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:3615; 2187: #4 <signal handler called>; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:253,Load,LoadClassInfo,253,https://root.cern,https://github.com/root-project/root/issues/11867,4,['Load'],['LoadClassInfo']
Performance,"Also fix TClusterIterator for the case of TTree with 1 entry (and no basket flush). Also Remove unnecessary thread local in TKey.cxx. And more changes to address issues seen in variation of the failing code in ROOT-10702. In particular, after this PR, the following will always work; ```; chain->SetBranchAdress(fullnameofbranch, &address_of_numerical_type);; ```. Prior to this PR, if the requested branch is a sub-branch of a split object, the user needs to **also** turn on MakeClass mode (also called Decomposed Object mode) explicit, now it is done implicitly. Prior to this PR doing:; ```; // Not setting the top level branch address.; chain->SetBranchAdress(sub_branch_name, &address);; chain->GetEntry(0);; ```; Resulted in the address set to be forgotten. Note that a work-around was:; ```; // Not setting the top level branch address.; chain->GetEntry(0);; chain->SetBranchAdress(sub_branch_name, &address);; ```; But also the address needed to (in most cases) also be set again after each new tree was loaded. Note that, the following:; ```; chain->SetBranchAdress(sub_branch_name, &address);; chain->SetBranchAdress(top_level_branch_name, &other_address);; chain->GetEntry(0);; ```; will result (as one would expect) with the first SetBranchAddress being ignored/over-ridden. With this PR, in addition to checking the address type in the case:; ```; chain->LoadTree(0);; chain->SetBranchAdress(branch_name, &address);; ```; will also check them in the case:; ```; chain->SetBranchAdress(branch_name, &address);; chain->LoadTree(0);; ```; (yep, it would silently fail before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5721:1013,load,loaded,1013,https://root.cern,https://github.com/root-project/root/pull/5721,3,"['Load', 'load']","['LoadTree', 'loaded']"
Performance,"Also provide latest JSROOT; And provide `ui5/canv/Component-preload.js`. Used for `RCanvas` and `TWebCanvas` components; Includes compressed versions of `Component.js`, `manifest.json`, views and controllers. ; Speed-up loading of the web components. Preliminary code to generate such file is:; https://github.com/linev/misc/tree/master/ui5comp. CAUTION! All changes in original scripts only will take effect after changes in preload script",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9213:220,load,loading,220,https://root.cern,https://github.com/root-project/root/pull/9213,1,['load'],['loading']
Performance,"An attempt to build ROOT against the system Python3 on MacOS11/12 results in a build with no errors, but with some test failures:. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12,SPEC=soversion,V=master/3084/. The following is the relevant error:. ```; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/mac12/SPEC/soversion/V/master/build/lib/libROOTTPython.6.25.02.so, 0x0009): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; ```. According to:. ```; $ otool -l lib/libROOTTPython.so | grep -C2 Python3; cmd LC_LOAD_DYLIB; cmdsize 72; name @rpath/Python3.framework/Versions/3.8/Python3 (offset 24); time stamp 2 Thu Jan 1 01:00:02 1970; current version 3.8.0; --; cmd LC_RPATH; cmdsize 104; path /Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib (offset 12); Load command 20; cmd LC_FUNCTION_STARTS; ```. RPATH is set, but the dylib load directive doesn't match.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9793:316,load,loadLibrary,316,https://root.cern,https://github.com/root-project/root/issues/9793,4,"['Load', 'load']","['Load', 'load', 'loadLibrary', 'loaded']"
Performance,"An empty list of linked libraries was interpreted as failure to extract; the list of linked libraries; the default ""-lCore -lRint..."" was taken instead.; When running python, no libs show up as linked. That caused ""-lRint"" to be claimed; as linked, which was preventing gSystem.Load(""libRint"") within python, claiming; that it is already loaded (as it is linked). Instead, if the library signaling the end of linked libraries is seen, and so far; no libraries have been found as linked, set the list-of-linked-libraries to "" "",; i.e. not empty, triggering the ""success"" path in TSystem::GetLibraries(), and correctly; reporting the linked libraries. This fixes JupyROOT-cppcompleter-doctest, JupyROOT-ROOT-kernel-notebook not finding; TTabCom::TTabCom() because loadling libRint was mistakenly a no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5864:278,Load,Load,278,https://root.cern,https://github.com/root-project/root/pull/5864,3,"['Load', 'load']","['Load', 'loaded', 'loadling']"
Performance,An small bug detected in LCG98 that only affect python2; JupyROOT is not loaded when you are importing ROOT in the notebook. this code fix this problem. Omar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6305:73,load,loaded,73,https://root.cern,https://github.com/root-project/root/pull/6305,1,['load'],['loaded']
Performance,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9103:355,perform,performance-,355,https://root.cern,https://github.com/root-project/root/pull/9103,2,['perform'],['performance-']
Performance,"Appears when TGrpah2D drawn with ""cont5"" option; Many TGraph objects are leaked, especially when zooming is performed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4984:108,perform,performed,108,https://root.cern,https://github.com/root-project/root/pull/4984,1,['perform'],['performed']
Performance,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14011:501,perform,performance-inefficient-algorithm,501,https://root.cern,https://github.com/root-project/root/pull/14011,8,['perform'],"['performance-faster-string-find', 'performance-inefficient-algorithm', 'performance-inefficient-vector-operation', 'performance-move-const-arg']"
Performance,"Apply several improvements and fixes in MethodDL , mainly: . - Use now Float instead of Double. This makes the network 2 times faster without loosing performances in quality of results; - Compute now the regularisation term in the loss once/epoch when evaluating ; - Optimise the MultiThread execution on CPU by setting a minimum number of elements to execute per task ; - Optimise evaluation of the networks, by implementing GetMvaValues in MethodDL. This reduces significantly the time spent for network testing and evaluating in a TMVA session",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219:150,perform,performances,150,https://root.cern,https://github.com/root-project/root/pull/2219,1,['perform'],['performances']
Performance,"Arguments for removing the splash screen:; * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS.; * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)).; * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then.; * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record).; * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819).; * `root -b -a` turns on display even if you think it should run in batch mode; * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine.; * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819.; Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15056:526,load,loading,526,https://root.cern,https://github.com/root-project/root/pull/15056,2,['load'],"['load', 'loading']"
Performance,"As RVec is a class template, even if ROOT is compiled with -DNDEBUG; these asserts might be compiled in user code depending on whether or; not they remember to include `-DNDEBUG` in their debug flags.; I think the performance penalty is too high w.r.t. the benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9376:214,perform,performance,214,https://root.cern,https://github.com/root-project/root/pull/9376,1,['perform'],['performance']
Performance,"As agreed in the last ROOT planning meeting:. https://indico.cern.ch/event/884189/. This PR switches experimental PyROOT by default to `ON` in master. Note that, before 6.22, a more elaborated switch will be performed: the concept of experimental PyROOT will disappear and there will be a legacy PyROOT, which is the current one. Edit: the switch is not done on Windows for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5020:208,perform,performed,208,https://root.cern,https://github.com/root-project/root/pull/5020,1,['perform'],['performed']
Performance,"As discussed here:. https://bitbucket.org/wlav/cppyy/issues/65. some functions/classes in Cppyy's `TPython` are broken, e.g. `Import`, `LoadMacro` and `TPyClassGenerator`. They rely on some ROOT meta functionality that should be now be hidden to CPyCppyy, but they have not been reimplemented yet. Therefore, this PR disables the build of Cppyy's `TPython` and ports the `TPython` present in the old PyROOT to the new Cppyy API, so that all the functionality is still provided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4195:136,Load,LoadMacro,136,https://root.cern,https://github.com/root-project/root/pull/4195,1,['Load'],['LoadMacro']
Performance,"As discussed in https://github.com/root-project/root/issues/9312, long generated functions triggers edge cases in the optimizer passes and takes very long to compile for little to no gain in runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9467:118,optimiz,optimizer,118,https://root.cern,https://github.com/root-project/root/pull/9467,1,['optimiz'],['optimizer']
Performance,"As discussed with @Axel-Naumann, in the interest of more concise RNTuple tutorials this PR removes the ifdef around `R__LOAD_LIBRARY`. The library is simply always loaded.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6149:164,load,loaded,164,https://root.cern,https://github.com/root-project/root/pull/6149,1,['load'],['loaded']
Performance,"As found here:; https://gitlab.kitware.com/cmake/cmake/-/issues/21947. we need to specify:; target_link_options(target-name PRIVATE ${Python3_LINK_OPTIONS}). so that libROOTTPython and libPyMVA are linked with the right; RPATH, when linking against the XCode Python(3) on MacOS(11,12). Otherwise, the following error appears when loading the libraries:; cling::DynamicLibraryManager::loadLibrary():; dlopen(.../mac12/SPEC/soversion/V/master/build/lib/libROOTTPython.6.25.02.so, 0x0009):; Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Fixes #9793 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9802:330,load,loading,330,https://root.cern,https://github.com/root-project/root/pull/9802,3,['load'],"['loadLibrary', 'loaded', 'loading']"
Performance,"As it is now, cling is not capable to load library for outlined; functions. As long as modules not enabled by default - add; R__LOAD_LIBRARY macro to all test scripts",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4517:38,load,load,38,https://root.cern,https://github.com/root-project/root/pull/4517,1,['load'],['load']
Performance,"As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed.; Example:; ```; root [0] gSystem->ListLibraries(""Core""); ; Loaded shared libraries; =======================; -----------------------; 0 libraries loaded; =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE); ; Loaded shared libraries; =======================; /Users/couet/git/couet-root-bin/lib/libCore.so; /Users/couet/git/couet-root-bin/lib/libMathCore.so; -----------------------; 2 libraries loaded; =======================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11776:597,Load,Loaded,597,https://root.cern,https://github.com/root-project/root/pull/11776,4,"['Load', 'load']","['Loaded', 'loaded']"
Performance,"As report by @scott-snyder in https://github.com/root-project/root/pull/11263. Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see ATR-25049). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.). See also https://github.com/root-project/root/pull/11263#issuecomment-1231069071",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12552:113,race condition,race condition,113,https://root.cern,https://github.com/root-project/root/issues/12552,5,"['load', 'race condition']","['load', 'loaded', 'loading', 'race condition']"
Performance,"As reported at https://github.com/root-project/roottest/pull/946#issuecomment-1519645135 and can be seen in the test; `roottest-root-meta-race-12552-exec_dlopenrace-auto`. The relevant output is below and the problem is a (real) quirk of the test. It linked to the repeated unload and loading of the same library in parallel. During the unloading and loading cycle the TClass object representing the user classes (from that library) are created and deleted and it seems that the pointer value is captured and used outside the main lock (and this is done concurrently we the deletion). This needs to be fixed but is unlikely to happen in the wild. ```; ==1544443==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000617c20 at pc 0x7f8857c557ae bp 0x7f88265b3e60 sp 0x7f88265b3e50; READ of size 4 at 0x616000617c20 thread T1; #0 0x7f8857c557ad in TClass::Size() const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8; #1 0x7f8851923388 in TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TBufferFile.cxx:1605:25; #2 0x7f8851cc28c1 in TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1364:11; #3 0x7f8851cc28c1 in int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short)), &(TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int))>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1407:10; #4 0x7f8851931ee7 in TStreamerInfoActions::TConfigu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715:285,load,loading,285,https://root.cern,https://github.com/root-project/root/issues/12715,3,"['concurren', 'load']","['concurrently', 'loading']"
Performance,"As reported by @behrenhoff MethodDL did not have so far an implementation for the dropout. ; (see https://root-forum.cern.ch/t/method-kdl-in-tmva/32863); This PR fixes the dropout for dense layers, implementing what has been done for the previous MethodDNN. . The implementation removes (by setting to zero) randomly input nodes and re-scale the surviving ones by a factor 1/(1.- dropout_probability). In this way no changes are needed for testing and evaluating a trained network with dropout. . The PR applies also some other small improvements such as print out of optimizer names and some fixes in the cross-evaluation function to avoid NaN outputs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3516:568,optimiz,optimizer,568,https://root.cern,https://github.com/root-project/root/pull/3516,1,['optimiz'],['optimizer']
Performance,"As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62; > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11794:176,race condition,race condition,176,https://root.cern,https://github.com/root-project/root/pull/11794,4,"['perform', 'race condition']","['performance', 'race condition']"
Performance,As reported in https://root-forum.cern.ch/t/tmva-read-image-data-for-application-of-a-cnn-model/54181/15 ; and shown in this notebook example; https://cernbox.cern.ch/s/U7p6sgH7QN4GRlX. A CNN model that is trained on GPU and containing a BNORM layer produces wring results (all 0 or 1) when is evaluated (e.g. using RReader) on CPU. ; The evaluation that is done in the Classification macro (in `Factory::EvcaluateAllMethods`) is performed on GPU. ; This happens only when the model contains the BNORM layer.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12589:430,perform,performed,430,https://root.cern,https://github.com/root-project/root/issues/12589,1,['perform'],['performed']
Performance,"As said in TODO, LoadDictionaryForSTLType is passing ""#include <...>"" to; CINT interface to parse and process it, and was expensive. In Cling, we; have a new interface GenerateDictionary which we can instead use to; generate dictionary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1752:17,Load,LoadDictionaryForSTLType,17,https://root.cern,https://github.com/root-project/root/pull/1752,1,['Load'],['LoadDictionaryForSTLType']
Performance,"As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:; ```; {; auto cls = TClass::GetClass(""std::vector<int>"");; auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);; auto args = meth->GetListOfMethodArgs();; auto methArg = dynamic_cast<TMethodArg*>(args->First());; cout << args->GetEntries() << endl;; cout << methArg->GetTypeName() << endl;; }; ```; print; ```; 1; vector<TClass*>::size_type; ```; where one would expect; ```; 1; vector<int>::size_type; ```; This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7955:813,load,load,813,https://root.cern,https://github.com/root-project/root/issues/7955,1,['load'],['load']
Performance,As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157773/console which the result of; ```; @phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On -Droofit=OFF; ```. Several tutorials fails because they can load the intentionally non existent roofit libraries. ```; 15:15:19 The following tests FAILED:; 15:15:19 	909 - tutorial-roostats-FourBinInstructional-py (Failed); 15:15:19 	910 - tutorial-roostats-IntervalExamples-py (Failed); 15:15:19 	911 - tutorial-roostats-MultivariateGaussianTest-py (Failed); 15:15:19 	912 - tutorial-roostats-Zbi_Zgamma-py (Failed); 15:15:19 	913 - tutorial-roostats-rs101_limitexample-py (Failed); 15:15:19 	914 - tutorial-roostats-rs401c_FeldmanCousins-py (Failed); 15:15:19 	915 - tutorial-roostats-rs601_HLFactoryexample-py (Failed); 15:15:19 	916 - tutorial-roostats-rs701_BayesianCalculator-py (Failed); 15:15:19 	917 - tutorial-roostats-rs_bernsteinCorrection-py (Failed); 15:15:19 	918 - tutorial-roostats-rs_numbercountingutils-py (Failed); 15:15:19 	1193 - roottest-python-pickle-write (Failed); 15:15:19 	1194 - roottest-python-pickle-read (Failed); 15:15:19 	1195 - roottest-python-pythonizations-pythonizations (Failed); 15:15:19 	1197 - roottest-python-regression-regression (Failed); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11605:155,perform,performance-,155,https://root.cern,https://github.com/root-project/root/issues/11605,2,"['load', 'perform']","['load', 'performance-']"
Performance,"As seen in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/38, there is missing dependency on Rint that leads to out of order creation:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. while indeed. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. This out of order build is seen when using `CMake` with `gnu make` on Ubuntu 22 (on WSL). On the same platform, using `Ninja` leads to the creation in the right order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11686:563,load,load,563,https://root.cern,https://github.com/root-project/root/issues/11686,2,['load'],"['load', 'loading']"
Performance,"As the title reads: TChain Add does not properly resolve globs with `?#`. Consider:; ```cpp; auto dfWriter0 = ROOT::RDataFrame(5).Define(""z"", ""42"");; dfWriter0.Snapshot<int>(""tree"", ""specTestFile0.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile00.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile000.root"", {""z""});. TChain c{};; c.Add(""specTestFile0*.root?#tree"");; for(auto i = 0u; i < c.GetEntries(); ++i); 	c.GetEntry(i);. gSystem->Unlink((""specTestFile0.root""));; gSystem->Unlink((""specTestFile00.root""));; gSystem->Unlink((""specTestFile000.root""));; ```; Current behaviour --> invalid parsing:; ```; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile0.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile00.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile000.root#tree; ```; ; @vepadulano and I just saw [here](https://root.cern/doc/master/classTChain.html#a78a896924ac6c7d3691b7e013bcbfb1c) that the question mark is a valid wildcard in the glob expansion of `Add`. Note that in this particular minimal reproducer, I can alternatively use:; ```cpp; TChain c{""tree""};; c.Add(""specTestFile0*.root"");; ```; I used precisely this example in order to show that even a single `Add` results in undesired behaviour.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11483:649,Load,LoadTree,649,https://root.cern,https://github.com/root-project/root/issues/11483,3,['Load'],['LoadTree']
Performance,"As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to; skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8924:107,optimiz,optimization,107,https://root.cern,https://github.com/root-project/root/pull/8924,1,['optimiz'],['optimization']
Performance,"As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to; skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8929:107,optimiz,optimization,107,https://root.cern,https://github.com/root-project/root/pull/8929,1,['optimiz'],['optimization']
Performance,Assign directly to static variable to avoid race condition,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/48:44,race condition,race condition,44,https://root.cern,https://github.com/root-project/root/pull/48,1,['race condition'],['race condition']
Performance,"At least with the [llvm13 branch](https://github.com/vgvassilev/root/tree/llvm13) on macOS, `cling::DynamicLibraryManager::searchLibrariesForSymbol` sometimes finds non-exported symbols and confuses the rest of the autoloading infrastructure because the symbol is not available after loading that library. ### Reproducer. Slightly modify the new `AutoloadLibraryGenerator`:; ```diff; diff --git a/core/metacling/src/TClingCallbacks.cxx b/core/metacling/src/TClingCallbacks.cxx; index 1401f04ee6..b538695533 100644; --- a/core/metacling/src/TClingCallbacks.cxx; +++ b/core/metacling/src/TClingCallbacks.cxx; @@ -188,6 +188,8 @@ public:; continue;; }. + printf(""found symbol '%s' in '%s'\n"", (*name).str().c_str(), libName.c_str());; +; found[libName].push_back(name);; }. ```. Then execute the following Python file:; ```py; import ROOT; print(ROOT.kTRUE); ```. The output (on `macitois22`) is:; ```; found symbol '__ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libCling.so' ; found symbol '__ZL5kTRUE' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so'; 1; ```; where `kTRUE` should not be found. Or at least the symbols is still not available after loading `libRIO`, and:; ```; $ nm /Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so | grep kTRUE; 0000000000272988 s __ZL5kTRUE; ```; From the `man`-page of `nm`:; > If the symbol is local (non-external), the symbol's type is instead represented by the corresponding lowercase letter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10970:284,load,loading,284,https://root.cern,https://github.com/root-project/root/issues/10970,2,['load'],['loading']
Performance,Attempt to solve race conditions on roostats tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/362:17,race condition,race conditions,17,https://root.cern,https://github.com/root-project/root/pull/362,1,['race condition'],['race conditions']
Performance,"Avoid global stack for TCling's mutex states. This solves race condition and ordering issues for the content of TCling::fInitialMutex. Rather than relying on a global stack of state, leverage the fact that the code that temporarily; suspend the interpreter lock during user-code execution is already keeping/stashing away some; information. Extend that code to stash all the necessary information (was 'only' the delta; and is now the delta + initial state + recurse count.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6301:58,race condition,race condition,58,https://root.cern,https://github.com/root-project/root/pull/6301,1,['race condition'],['race condition']
Performance,"Avoid loading ROOT modules while Clang is instantiating a template class from STL, leading to ODR checks with an incomplete class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11514:6,load,loading,6,https://root.cern,https://github.com/root-project/root/pull/11514,1,['load'],['loading']
Performance,Avoid race condition between tutorial/roofit/rf512_wsfactory_oper.C and tutorial/roofit/rf512_wsfactory_oper.py,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11643:6,race condition,race condition,6,https://root.cern,https://github.com/root-project/root/pull/11643,1,['race condition'],['race condition']
Performance,"BUILD/root-6.28.00/core/meta/inc/TClass.h:651; #49 EmitModel (inputfile=..., outname=""Add"") at /builddir/build/BUILD/root-6.28.00/ppc64le-redhat-linux-gnu/tmva/sofie/test/EmitFromRoot_all.cxx:26; #50 0x0000000108cd23dc in main (argc=<optimized out>, argv=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; ===========================================================; pure virtual method called; terminate called without an active exception; Subprocess aborted; ~~~. Disabling the SOFIE parser, so that the build completes. There are error during testing:. There are failures when running in interpreter mode:. ~~~; 98/1192 Test #779: tutorial-roofit-rf104_classfactory ..................................***Failed Error regular expression found in output. Regex=[segmentation violation]126.58 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C...; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa80f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa805a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8ba9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x11eee5850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa8bac1c8 in TUnixSystem::DispatchSignals (this=0x11eee5850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUn",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:12316,optimiz,optimized,12316,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #18 0x00007fff76a50690 in cling::IncrementalExecutor::getPointerToGlobalFromJIT (this=0x165848f30, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #19 0x00007fff7699fe04 in cling::Interpreter::compileFunction (this=0x165715770, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #20 0x00007fff768fea38 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #21 0x00007fff76908a68 in TClingCallFunc::make_wrapper (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1006; #22 0x00007fff76908e78 in TClingCallFunc::IFacePtr (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:2004; #23 0x00007fff7682c3bc in TCling::CallFunc_IFacePtr (this=<optimized out>, func=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:7888; #24 0x00007fff7ca8f81c in GetCallFunc (method=<optimized out>) at /usr/include/c++/8/bits/locale_facets.h:877; #25 WrapperCall (method=6088041216, nargs=2, args_=0x7fffc4480880, self=0x16b1482f0, result=0x16b0b6990) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (method=6088041216, self=0x16b1482f0, nargs=2, args=0x7fffc4480880, result_type=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:31066,optimiz,optimized,31066,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,"Backport fix for ROOT-9556 ""Users might silently get wrong results when they process two trees as friends, one of which has been produced by a multi-thread Snapshot of the other""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5239:143,multi-thread,multi-thread,143,https://root.cern,https://github.com/root-project/root/pull/5239,1,['multi-thread'],['multi-thread']
Performance,Backport mitigation of TFile caching race condition to v6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9534:37,race condition,race condition,37,https://root.cern,https://github.com/root-project/root/pull/9534,2,['race condition'],['race condition']
Performance,"Based on PR #858. Implements only parts relevant for CV. Rudimentary performance benchmark with ~60000 events with 2-fold CV; ```; Multiproc: root -l -b -q TMVACrossValidation.C 15.82s user 0.46s system 152% cpu 10.679 total; Standard: root -l -b -q TMVACrossValidation.C 14.31s user 0.25s system 99% cpu 14.652 total; ```; Which translates into a 4 second speed up. A different example, with a deeper bdt forest and 10-fold CV, almost halves the required time on my machine :); ```; Single : root -l -b -q TMVACrossValidation.C 33.66s user 1.99s system 98% cpu 36.369 total; Multiproc 2: root -l -b -q TMVACrossValidation.C 39.14s user 2.68s system 167% cpu 25.016 total; Multiproc 4: root -l -b -q TMVACrossValidation.C 46.52s user 3.50s system 233% cpu 21.420 total; ```. For the second example, these changes to `TMVACrossValidation.C` were used.; ```; /* ...snip... */; TString cvOptions = Form(""!V:NumWorkerProcs=4""; /* ...snip... */; cv.BookMethod(TMVA::Types::kBDT, ""BDTG"",; ""!H:!V:NTrees=1000:MinNodeSize=2.5%:BoostType=Grad""; "":NegWeightTreatment=Pray:Shrinkage=0.10:nCuts=20""; "":MaxDepth=6"");; /* ...snip... */; // cv.BookMethod(TMVA::Types::kFisher, ""Fisher"",; // ""!H:!V:Fisher:VarTransform=None"");; /* ...snip... */; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1869:69,perform,performance,69,https://root.cern,https://github.com/root-project/root/pull/1869,1,['perform'],['performance']
Performance,"Basic functionality remains in TRootSniffer class, ; extra methods for scanning TH1, TPad, TGraph, TTree classes moved to TRootSnifferFull. Default behavior of THttpServer will remain - it will create TRootSnifferFull.; But in webgui only basic functionality is required, therefore all ROOT6 libraries will not be loaded. Also add few parameters in rootrc file to configure THttpServer, used in webgui.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1695:314,load,loaded,314,https://root.cern,https://github.com/root-project/root/pull/1695,1,['load'],['loaded']
Performance,"Basically, the problem was twofold:; 1. Using the number of entries for scaling the basket size can be really incorrect -- rather, we want the cluster size. This is only available it OptimizeBaskets is called via AutoFlush.; 2. We only need to set aside extra metadata if there is an entry offset buffer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1998:183,Optimiz,OptimizeBaskets,183,https://root.cern,https://github.com/root-project/root/pull/1998,1,['Optimiz'],['OptimizeBaskets']
Performance,"Batch mode, which is now only supported by Chrome, allows to run; JS code loaded from file and dump result to output file - no any; communication with host application required. Now extra headless mode is introduced, which allows to run client; code in the headless browser and communicate with it. It was original; way to produce batch images, therefore need to rename some methods; to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified.; In such case macro waits until 200 round-trip packets arrived and automatically ends.; Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7839:74,load,loaded,74,https://root.cern,https://github.com/root-project/root/pull/7839,1,['load'],['loaded']
Performance,Bdt performance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/100:4,perform,performance,4,https://root.cern,https://github.com/root-project/root/pull/100,1,['perform'],['performance']
Performance,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5946:178,load,load,178,https://root.cern,https://github.com/root-project/root/pull/5946,2,['load'],['load']
Performance,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```. @hageboeck i'm not sure whether this interferes with #5938",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5943:178,load,load,178,https://root.cern,https://github.com/root-project/root/pull/5943,1,['load'],['load']
Performance,"Before importing cppyy from PyROOT, instead of specifying the location of the PCH, we can just use the magic word 'none' to tell cppyy not to check the PCH. In both cases, the objective is to avoid a warning from cppyy when importing it. This needs to be merged after the next update of `cppyy-backend`, when a new release is out. The related discussion with Wim is here:; https://bitbucket.org/wlav/cppyy/issues/62/new-check-in-loaderpy-uses-wrong-include",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3555:429,load,loaderpy-uses-wrong-include,429,https://root.cern,https://github.com/root-project/root/pull/3555,1,['load'],['loaderpy-uses-wrong-include']
Performance,"Before this commit, RVec<T> objects were written to file as a normal; object with a single data member of type `std::vector<T, RAdoptAllocator<T>>`.; However, we want to:; - make use of the more generic ""collection proxy"" I/O mechanism that; reads/writes STL-like collections in a generic way making use of their; begin()/end()/size() API. This makes it possible to implicitly convert; RVec to any other collection at the I/O level, and it also makes it possible to...; - evolve RVec internals to implement a small-buffer optimization and; remove the `std::vector<T, RAdoptAllocator<T>>` data member without; breaking I/O. The most important changes performed:; - added ROOT::ESSTLType::kROOTRVec; - added special case for RVec in dictionary generation:; - RVecs are setup to use CollectionProxy; - RVecs are treated as an STL container (even if not in namespace std); - added special treatment of RVec<bool> (reusing the VectorLooper; specialized for std::vector<bool>). Philippe, Axel: what tests would you like to see?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6960:522,optimiz,optimization,522,https://root.cern,https://github.com/root-project/root/pull/6960,2,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"Before this commit, a Cache call without template parameters would; trigger jitting and execution of the corresponding typed Cache call; on the spot, separately from the rest of RDF's jitting. With these changes the code needed by Cache is merged with the rest of; the code booked for jitting. Jitting is then triggered on the spot,; because a jitted Cache call needs the jitted code to produce its return; value. This resolves the Cache-related part of ROOT-9790, ""Lazy jitting of; Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6590:22,Cache,Cache,22,https://root.cern,https://github.com/root-project/root/pull/6590,6,['Cache'],"['Cache', 'Cache-related']"
Performance,"Before this commit, if an action with a sample callback (currently; only Snapshot) or a DefinePerSample went out of scope, we did not; deregister the corresponding callbacks from the RLoopManager, which; would try to run them anyway during the following event loop.; As callbacks typically perform a call on the original action or; define objects, this could cause a use-after-delete. With this patch, we now associate each callback to the address of; the corresponding node of the computation graph and remove callbacks; when the nodes go out of scope. This fixes https://github.com/root-project/root/issues/11222.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11251:290,perform,perform,290,https://root.cern,https://github.com/root-project/root/pull/11251,1,['perform'],['perform']
Performance,"Before this commit, in single-thread event loops RDF was throwing; in case TTreeReader had an error flag at the end of the loop.; Now multi-thread loops perform the same check at the end of each task.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8748:134,multi-thread,multi-thread,134,https://root.cern,https://github.com/root-project/root/pull/8748,2,"['multi-thread', 'perform']","['multi-thread', 'perform']"
Performance,"Before this patch, TTreeProcessorMT::Process activated implicit; multi-threading features (and never disabled them). One undesired; side-effect was that ROOT's thread-pool was not destructed after; TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT; multi-thread TTree processing and activation of implicit; multi-threading features are disentangled, and users are; required to call EnableImplicitMT explicitly to activate IMT.; This is consistent with TThreadExecutor's behavior.; This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5304:65,multi-thread,multi-threading,65,https://root.cern,https://github.com/root-project/root/pull/5304,3,['multi-thread'],"['multi-thread', 'multi-threading']"
Performance,"Before this patch, if a RLoopManager went out of scope before running; its event loop (a rare occurrence, but indeed possible, especially in; interactive sessions), we were leaking certain weak_ptrs and shared_ptrs; to components of the computation graph, that were meant to be used by; lazily jitted code that was never actually jitted in the end. With this change, when _any_ RLoopManager runs the event loop, we; trigger execution of _all_ jitted code that was registered, even if; it was registered by an RLoopManager that is now out of scope. In the; latter case, the code only performs clean-up of the heap-allocated; weak_ptrs and shared_ptrs and exits. We still ""leak"" in the odd case; in which RDF jitted code is registered but the application never actually; triggers any RDF event loops, in which case the code to be lazily jitted; remains in the pipeline until the end of the application, and parts of; the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. For this to work, we need to detect when compiled objects went out of scope and we don't actually have to run the jitted code but just perform the clean-up, so we switch from heap-allocated shared_ptrs to heap-allocated weak_ptrs for those objects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5488:583,perform,performs,583,https://root.cern,https://github.com/root-project/root/pull/5488,2,['perform'],"['perform', 'performs']"
Performance,"Before we do name lookups, we must ensure any later redeclaration of the DeclContext has been loaded, since they may add names to the result of this lookup.; Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11423:94,load,loaded,94,https://root.cern,https://github.com/root-project/root/pull/11423,1,['load'],['loaded']
Performance,"Before, it was loading the library which doesn't exists(by checking gSystem->DynamicPathName). It made no sence. This also fix our runtime cxxmodules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167:15,load,loading,15,https://root.cern,https://github.com/root-project/root/pull/2167,1,['load'],['loading']
Performance,"Before, the expensive `TUUID::AsString` function was used to generate; the key. This is a performance optimization that speeds up the RooRealVar; destructor by about a factor ten, which measurably benefits workflows; with large workspaces. Here a profile of a CMS combine toy experiment workflow to show this:; * before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys; * after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10151:90,perform,performance,90,https://root.cern,https://github.com/root-project/root/pull/10151,2,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"Both `Foo<double>` and `Foo<Double32_t>` have the same typeid.; Before this commit, TClass::GetClass(typeid(Foo<double>)) would return; whatever was registered *last*. This is not ""stable""; it depends on which; branch is accessed first, or which TClass::GetClass call happens first, or; which library is loaded first. Make this more reporducible by consistently preferring types will less; Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it; really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12480:304,load,loaded,304,https://root.cern,https://github.com/root-project/root/pull/12480,1,['load'],['loaded']
Performance,"Boundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from TGeoVoxelFinder --> BVH+GRID. ----. Outlook:. Similar techniques could be applied to ordinary TGeoNavigator routines. Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:2384,Perform,Performance,2384,https://root.cern,https://github.com/root-project/root/pull/16442,1,['Perform'],['Performance']
Performance,"Bring down the number of address sanitizer failures to ~ 36. In detail:; - Add use-after-scope checks for clang builds.; - Disable new/delete and malloc/free consistency checks.; Since interpreted code cannot be instrumented, address sanitizer cannot; check whether memory is managed consistently.; (Technical details: asan replaces new, delete, malloc and free. In non-instrumented code, the new/delete replacement doesn't work, though. To asan it therefore looks like something was `new`ed in instrumented code, but `free`d in JITted code and vice versa.); - Change the order in which libaries are `LD_PRELOADED`. Address sanitizer needs the config first, and runtimes later. Otherwise, it will ignore the configs.; - Fix a regex, so address sanitizer is `LD_PRELOADED` only when python is used. Before, it would be loaded twice for command lines such as `root.exe .... ..../python/....`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5660:818,load,loaded,818,https://root.cern,https://github.com/root-project/root/pull/5660,1,['load'],['loaded']
Performance,"Buffer (this=<optimized out>, b=..., obj=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1232; #29 0x00007fffa933ff7c in TCollectionClassStreamer::Stream (onfileClass=0x10a860aa0, obj=0x109986cc0, b=..., this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:177; #30 TCollectionClassStreamer::Stream (this=<optimized out>, b=..., obj=0x109986cc0, onfileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:172; #31 0x00007fffa8f04014 in TClass::StreamerExternal (pThis=<optimized out>, object=0x109986cc0, b=..., onfile_class=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6783; #32 0x00007fffa92db554 in TClass::Streamer (onfile_class=0x10a860aa0, b=..., obj=<optimized out>, this=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #33 TBufferFile::ReadFastArray (streamer=0x0, onFileClass=0x10a860aa0, n=1, cl=0x10a860aa0, start=<optimized out>, this=0x7ffff83ea100) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1609; #34 TBufferFile::ReadFastArray (this=0x7ffff83ea100, start=<optimized out>, cl=0x10a860aa0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1596; #35 0x00007fffa94a224c in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x10a395fa0, addr=<optimized out>, buf=...) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1362; #36 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x109986ba0, conf=0x10a395fa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1405; #37 0x00007fffa92d3130 in TStreamerInfoActions::TConfiguredAction::operator() (this=0x109f4d790, this=0x109f4d790, object=0x109986ba0, buffer=...) at /builddir/build/BUILD/root-6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:8345,optimiz,optimized,8345,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,Bug in ROOT library loading - .dot sub-directories,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:20,load,loading,20,https://root.cern,https://github.com/root-project/root/issues/10704,1,['load'],['loading']
Performance,Build built-in LZMA with O3 optimization level,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6144:28,optimiz,optimization,28,https://root.cern,https://github.com/root-project/root/pull/6144,3,['optimiz'],['optimization']
Performance,Build performance does not scale to many cores/threads,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432:6,perform,performance,6,https://root.cern,https://github.com/root-project/root/issues/6432,1,['perform'],['performance']
Performance,"Building ROOT with gcc 11.2.0 on a centos7 system with the following configuration:. cmake -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_EXTENSIONS=Off -DCMAKE_INSTALL_PREFIX=/opt/root/v6-26-02_gc112_c17 -GNinja ../src. fails with the following error:; ```; [2542/9705] Performing download step (download, verify and extract) for 'XROOTD'; FAILED: builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download ; cd /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src && /bld4/opt/cmake/3.22.2/bin/cmake -P /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release.cmake && /bld4/opt/cmake/3.22.2/bin/cmake -E touch /bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download; CMake Error at XROOTD-stamp/XROOTD-download-Release.cmake:49 (message):; Command failed: 1. '/bld4/opt/cmake/3.22.2/bin/cmake' '-Dmake=' '-Dconfig=' '-P' '/bld6/root/bld/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/XROOTD-download-Release-impl.cmake'. ```. attached are the XROOTD-download-err.log and XROOTD-download-out.log; [XROOTD-download-err.log](https://github.com/root-project/root/files/8624870/XROOTD-download-err.log); [XROOTD-download-out.log](https://github.com/root-project/root/files/8624872/XROOTD-download-out.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10527:260,Perform,Performing,260,https://root.cern,https://github.com/root-project/root/issues/10527,1,['Perform'],['Performing']
Performance,"Building external applications that use ROOT oftentimes fail if there is a mismatch in the C++ standard between ROOT and the application. To make this visible, diagnose if there is a mismatch in the value of the `__cplusplus` macro w.r.t. when ROOT was configured.; The check is performed in `RConfigure.h`, a common header also included in backports, e.g. RStringView.hxx. ## Changes or fixes:; - Generated `RConfigure.h` during build defines `ROOT__cplusplus`, which contains the value of the `__cplusplus` macro at the time ROOT was configured.; - Because `RConfigure.h` is included from many ROOT headers (e.g., backports), it seems a viable candidate to also add the mismatch check.; On mismatch, emit a warning (should it be an `#error` instead?). ## Checklist:; - [X] tested changes locally. This PR fixes #8063.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10517:279,perform,performed,279,https://root.cern,https://github.com/root-project/root/pull/10517,1,['perform'],['performed']
Performance,"By setting a new bit in the TTree object, `kFlushAtCluster`, one can enter the ""one basket per event cluster"" mode. This forces baskets to line up with event clusters, at the cost of extra memory use. This new mode simplifies the basket layout within the file, reducing the amount of time handling special cases for the bulk IO mode. Because the baskets *must* grow to the size of an event cluster, we do not invoke `OptimizeBaskets` when one-basket-per-cluster mode is enabled. As this mode is expected to cause increased memory usage (the memory utilized by the `TTree` is more strongly tied to the variations in event size), we combine this with a technique borrowed from a CMS patchset to more aggressively shrink basket sizes after very large objects. The new basket shrinking algorithm will trigger whenever the basket is flushed. If the actual object size in the last clusters is significantly below the buffer size, then the basket will be shrunk. Given this tradeoff, I do not currently see this being enabled by default. The ideal ratio of `(basket buffer size)/(occupied buffer size)` is controlled by a new tunable in the `TTree`, defaulting to 1.1. A lower setting reduces overall memory usage at the cost of extra allocations; a higher setting increases aggregate memory usage. In writing out a 10k event CMS file (total CPU time is 32 minutes):. - Base case (without this patch):; - 888MB RSS; - 30 reallocations (shrinking of baskets due to low occupancy).; - 0.173ms taken for reallocation.; - New shrinking algorithm (this patch with defaults):; - 866MB RSS; - 4434 reallocations; - 97.0ms; - One basket per cluster mode with new shrinking algorithm:; - 902MB RSS; - 2882 reallocations; - 93.6ms. The CPU-time cost of the reallocation is 0.005% of total runtime (considering the file has to be read also, maybe 0.01% of output time?). This patch purposely leaves in the code that measures reallocation time in order to allow others to experiment; the intent is to disable / remove th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774:417,Optimiz,OptimizeBaskets,417,https://root.cern,https://github.com/root-project/root/pull/774,1,['Optimiz'],['OptimizeBaskets']
Performance,"C++ modules have two concepts -- a modulemap and a module file. The modulemap gives the mapping between a set of header files present in the module file. Clang has two ways to discover these artifacts -- modulemaps must be either explicitly specified or they have to be on the include paths (-I). Module files must be in the module cache path or the prebuilt module path. ROOT enforces the module files to be next to the library files. In some cases it the LD_LIBRARY_PATH is considered to extend the set of discoverables ROOT libraries. Over the years we have considered the LD_LIBRARY_PATH as the prebuilt module file locations. Relying on it leads to a number of issues. First, the osx system integrity protection filters its contents. Second, the LCG distribution mechanism can set the LD_LIBRARY_PATH to point to a complementary location of ROOT. In this case we will start loading irrelevant module files. This patch disables the LD_LIBRARY_PATH module discovery and relies on ROOT to provide its set of locations where modules should be present. Nowadays the current state of the implementation allows us to enforce this finer granularity.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4540:332,cache,cache,332,https://root.cern,https://github.com/root-project/root/pull/4540,2,"['cache', 'load']","['cache', 'loading']"
Performance,Cache LZ4_VERSION in case of system LZ4 (not builtin),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3817:0,Cache,Cache,0,https://root.cern,https://github.com/root-project/root/pull/3817,1,['Cache'],['Cache']
Performance,Cache improvements for non-sequential reads,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1065:0,Cache,Cache,0,https://root.cern,https://github.com/root-project/root/pull/1065,1,['Cache'],['Cache']
Performance,Cache improvements for non-sequential reads.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796:0,Cache,Cache,0,https://root.cern,https://github.com/root-project/root/pull/796,1,['Cache'],['Cache']
Performance,"Caches and precomputes data for this calculation, resulting in a; much more cache friendly access pattern. Leads to increased memory; usage during optimisation, which is subsequently released.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/443:0,Cache,Caches,0,https://root.cern,https://github.com/root-project/root/pull/443,2,"['Cache', 'cache']","['Caches', 'cache']"
Performance,Caching and initialization of TClass::fIsAMethod have been changed; to make them thread safe and for calls to the TMethodCall can happen; concurrently.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/28:138,concurren,concurrently,138,https://root.cern,https://github.com/root-project/root/pull/28,1,['concurren'],['concurrently']
Performance,Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat16_t:' at line 180 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181:35: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:59394,load,loaded,59394,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kShort_t:' at line 175 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176:35: warning: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:50920,load,loaded,50920,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,Change Snapshot option from file cache to TTree auto-flush parameter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/595:33,cache,cache,33,https://root.cern,https://github.com/root-project/root/pull/595,1,['cache'],['cache']
Performance,"Change hard coded optimizer efficiency and parse the number in the string. Give users more flexibility and go beyond the hard coded optimizer list. User can now write numbers as before, or as a fraction (using a decimal place)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3414:18,optimiz,optimizer,18,https://root.cern,https://github.com/root-project/root/pull/3414,2,['optimiz'],['optimizer']
Performance,"Change signature of methods in TEntryList and derived class that expect; an entry index. Usually this is stored as Long64_t, but in `GetEntry`; and `GetEntryAndTree` methods this was passed as `Int_t` leading to; integer overflows. Fixes https://github.com/root-project/root/issues/11026. With respect to the reproducer in the linked issue, this PR outputs the following; ```; $: ./repro.o; std::numeric_limits<int>::max(): 2147483647; Total entries in chain: 2168958436; Total entries in entrylist: 2168958436; Giving input entry 2147483647; Got input index: 2147483647; Got tree index 100 and entry index 47; Giving input entry 2147483648; Got input index: 2147483648; Got tree index 100 and entry index 48; Got input index: 2147483648; With entryAfterList=2147483648 got loadResult=48; What is the entry status? not kEntryBeyondEnd; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11028:774,load,loadResult,774,https://root.cern,https://github.com/root-project/root/pull/11028,1,['load'],['loadResult']
Performance,"Change the buffer management in the new RooFit BatchMode such that; queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get; when doing different fits in one go with different numbers of events,; such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10736:68,queue,queues,68,https://root.cern,https://github.com/root-project/root/pull/10736,1,['queue'],['queues']
Performance,"Change the logic in `RClusterPool` such that it will prefetch the next _bunch_ of clusters while the current bunch of clusters is being processed. The bunch size is configurable on construction of `RClusterPool`. At the moment, it needs to be explicitly set (if different from 1) via `RNTupleReadOptions`. Eventually, there should be some mechanism to figure out a sensible default, given the source of data (e.g., remote or local) and the set of active columns. Compared to the current cluster prefetching, the combined set of pages of a bunch of clusters can now be given to a single vector read requests. That increases the size of vector reads and leads to significant throughput increases in certain cases. In particular for remote I/O but also, within limits, for SSDs. This PR is based on the fixes of #9096",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9100:673,throughput,throughput,673,https://root.cern,https://github.com/root-project/root/pull/9100,1,['throughput'],['throughput']
Performance,"Changes to HistFactory ROOT tutorial. Since people usually use HistFactory to build models and then fit it, it is better to show, how models can be fitted in the same tutorial. Changes are performed both for python and c++ tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16323:189,perform,performed,189,https://root.cern,https://github.com/root-project/root/pull/16323,1,['perform'],['performed']
Performance,Check if the RNTuple code correctly serializes and deserializes object hierarchies if the [empty base optimization](https://en.cppreference.com/w/cpp/language/ebo) is used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10323:102,optimiz,optimization,102,https://root.cern,https://github.com/root-project/root/issues/10323,1,['optimiz'],['optimization']
Performance,Checks if JSROOT was loaded before,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8132:21,load,loaded,21,https://root.cern,https://github.com/root-project/root/pull/8132,1,['load'],['loaded']
Performance,"Clang allows third party shared libraries to provide user-defined; extensions. For example, a custom libTemplateInstantiation.so can; visualize all template instantiation chains in clang. To enable it; one needs to pass a set of options such as -fplugin. Cling should be able to inherently work with clang plugins. However,; cling still does not make full use of the clang driver where the plugin; setup is handled. This patch enables plugins in cling and extends them in some aspects.; In particular, cling allows loading of plugins from shared libraries; but also if they are linked to the same library where cling is. This is; very useful in cases where cling runs itself in a shared library (eg; libCling). Users of libCling (such as ROOT) prefer to keep all llvm and; clang related symbols local to avoid symbol clashes if there is another; version of clang and llvm linked against a package. This can be done by; dlopen-ing libCling with RTLD_LOCAL visibility mode. Then the only way; for clang plugins to work in this scenario is to be linked to libCling. Patch by Aleksandr Efremov (@efremale) and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2371:515,load,loading,515,https://root.cern,https://github.com/root-project/root/pull/2371,1,['load'],['loading']
Performance,"Clang has a quite new LTO mode that doesn't blow up linking; times as much as with vanilla LTO but still brings similar; performance improvements. It's quite easy for us to migrate; to this new mode, so it would make sense to just activate; it in Optimized builds where users are obviously looking; for performance. More information: https://clang.llvm.org/docs/ThinLTO.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1242:121,perform,performance,121,https://root.cern,https://github.com/root-project/root/pull/1242,3,"['Optimiz', 'perform']","['Optimized', 'performance']"
Performance,"Clang's search for the standard C++ headers is complex, up to messy. It is a combination of build-time decisions in `interpreter/cling/lib/Interpreter/CMakeLists.txt` and runtime searches in `interpreter/cling/lib/Interpreter/CIFactory.cpp`. Below I'm listing a number of things I noticed, and I think it would be worth it to clean up this business:. - [ ] Let's start with the obvious: `CLING_CXX_PATH` and `CLING_CXX_HEADERS` are declared as `option`s in `interpreter/cling/lib/Interpreter/CMakeLists.txt`. This gives them a type of `BOOL` instead of `STRING` (or maybe `FILEPATH` for `CLING_CXX_PATH`?).; - [ ] If these variables are not set by the user, the build system starts to make some guesses. These choices are not `FORCE`d back into the `CACHE`, so it will be re-computed on every CMake invocation.; - [ ] The code for determining `CLING_CXX_PATH` has a large section dealing with `ccache` and `distcc`, which can only be taken if users set the environment variable `CXX=""ccache g++""`. Since CMake 3.4, it is recommended to instead use `CMAKE_CXX_COMPILER_LAUNCHER=ccache`, or ROOT's `ccache=ON`, so this may be obsolete?; - [ ] The header lookup is inconsistent between the build system and the `CIFactory`: The messages during configuration suggest that the order is; 1. Determined directories of C++ headers, or if not found; 2. Invocation of the compiler's full path, or as a fallback; 3. Invocation of the compiler's relative path. I think this matches the initial implementation, but it's not true anymore since commit afabc3b63885427251fd69b4aeda887bae35a289 switched to asking the compiler in the `PATH` first, to address a problem report from CMS.; - [ ] It also appears that the default guess from the build system is to *either* set the compiler's full path *or* its relative path. This is potentially problematic because changing the `PATH` could make the interpreter pick up a different compiler, even though it could still ask the existing full path. It's also inconsistent w",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11612:750,CACHE,CACHE,750,https://root.cern,https://github.com/root-project/root/issues/11612,1,['CACHE'],['CACHE']
Performance,Cleaned up dependencies for TMVA tuts for avoiding race conditions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/426:51,race condition,race conditions,51,https://root.cern,https://github.com/root-project/root/pull/426,1,['race condition'],['race conditions']
Performance,Cling optimization option,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/493:6,optimiz,optimization,6,https://root.cern,https://github.com/root-project/root/pull/493,1,['optimiz'],['optimization']
Performance,Cling triggers a huge number of `openat` calls when loading libraries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14277:52,load,loading,52,https://root.cern,https://github.com/root-project/root/issues/14277,1,['load'],['loading']
Performance,"Commit ff86c30992 (""[RF] Implement SumW2 correction in new BatchMode with RooFitDriver"") introduced some `static constexpr`. When building with C++14, at least `weightVarName` requires a declaration because it is odr-used. Provide them for all three variables to avoid undefined references seen in debug builds without compiler optimizations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10263:328,optimiz,optimizations,328,https://root.cern,https://github.com/root-project/root/pull/10263,1,['optimiz'],['optimizations']
Performance,"Compared to `GetAtSlotUnchecked`, `GetAtSlotRaw` trades some more; safety for some more performance: not only it avoids checking for; slot initialization (as `GetAtSlotUnchecked` does) but it also avoids; (copy-)construction of a `shared_ptr`. I can add a test, just tell me where :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/934:88,perform,performance,88,https://root.cern,https://github.com/root-project/root/pull/934,1,['perform'],['performance']
Performance,"Compared with latest dev version, new fixes:. 1. Fix v7 hist updates, repair draw_mt.cxx tutorial; 2. Fix TH2 col drawing (small bins were not shown at all); 3. Fix text drawing in TPave - not always draw completion was done properly; 4. Fix axes context menu in the frame; 5. Small performance optimization. Only JavaScript code, therefore skipping CI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6652:283,perform,performance,283,https://root.cern,https://github.com/root-project/root/pull/6652,2,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"Complete code reformatted to use JS classes.; Makes layout more clear and compact.; Optimize io code - use more internal constants, which; very well can be optimized by JS. Exclude `rawinflate.js` - code integrated and optimized in io script; Update `dat.gui.js`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9779:84,Optimiz,Optimize,84,https://root.cern,https://github.com/root-project/root/pull/9779,3,"['Optimiz', 'optimiz']","['Optimize', 'optimized']"
Performance,"Could not find any duplicate. ### Describe the bug; When starting ROOT on an arm64 machine a symbol-not-found message appears for about 10 times before getting to the prompt.; The message is related to SOFIE:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; Symbol found in '/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'; did you mean to load it with '.L /cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'?; ```. ROOT 6.24/06 works fine. ### Expected behavior; No warning message. ### To Reproduce; Steps to reproduce the behavior:; 1. Login on an ARM amchine with cvmfs, e.g. techlab-arm64-thunderx2-01 ; 2. Source dev4arm; `source /cvmfs/sft.cern.ch/lcg/views/dev4/Wed/aarch64-centos7-gcc11-opt/setup.sh`; 3. Start ROOT, e.g. `root -b -q`. ### Setup; 1. ROOT version: 6.26/04; 2. Operating system: aarch64, centos7; 3. LCG stack. ### Additional context; Affecting ATLAS ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10877:1228,load,load,1228,https://root.cern,https://github.com/root-project/root/issues/10877,1,['load'],['load']
Performance,"Created a new library for RooFit that contains the computation functions of the PDFs. It gets compiled for specific architectures (SSE, AVX, AVX2, AVX512) and automatically loaded at runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6665:173,load,loaded,173,https://root.cern,https://github.com/root-project/root/pull/6665,1,['load'],['loaded']
Performance,"Currently modules in ACLiC are not properly loaded, that's why we; suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3714:44,load,loaded,44,https://root.cern,https://github.com/root-project/root/pull/3714,1,['load'],['loaded']
Performance,"Currently we are using ROOT 6.22 for CMS offline SW (CMSSW). It works great on all our supported archs e.g. **amd64, ppc64le, aarch64, slc7/cc8** using **gcc 9.3 10.3, 11.2**. Now we are trying to move to ROOT 6.24 for CMS Offline Software ( CMSSW) but for . **OS: slc7; Compiler: GCC 9.3; ARCH: ppc64le**. when we try to load CMSSW dictionaries then pyROOT fails with error [see full log](https://cmssdt.cern.ch/SDT/cgi-bin/buildlogs/slc7_ppc64le_gcc9/CMSSW_12_2_ROOT624_X_2021-11-14-2300/DataFormats/Math); ```; #8 <signal handler called>; #9 0x000010081a5b0038 in ?? (); #10 0x00001000026e2df4 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /scratch/cmsbuild/jenkins_b/workspace/build-any-ib/w/tmp/BUILDROOT/6b889b481d3981a81f0cdda02720a661/opt/cmssw/slc7_ppc64le_gcc9/cms/cmssw/CMSSW_12_2_ROOT624_X_2021-11-14-2300/external/slc7_ppc64le_gcc9/lib/libCling.so; #11 0x000001000c853a50 in ?? (); ```. In order to debug this issue when I tried to build root in debug mode `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug` then root failed to build with error [see full log](https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_12_2_ROOT624_X_2021-11-15-1100/slc7_ppc64le_gcc9/118878/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/log); ```; root.exe: /scratch/cmsbuild/jenkins_a/workspace/build-any-ib/w/BUILD/slc7_ppc64le_gcc9/lcg/root/6.24.07-e593e28202aa32887e370aba99847071/root-6.24.07/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:81: std::unique_ptr<llvm::TargetMachine> cling::{anonymous}::CreateHostTargetMachine(const clang::CompilerInstance&): Assertion `TM->getCodeModel() >= CodeModel::Large' failed.; ```. Any idea what could be wrong here ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297:322,load,load,322,https://root.cern,https://github.com/root-project/root/issues/9297,1,['load'],['load']
Performance,"Currently, 36 tests are failing for runtime modules:; https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/; We want to make these test pass so that we can say that the runtime modules is; finally working. This patch enables ROOT to preload all modules at startup time. In my; environment, this patch fixes 14 tests for runtime cxxmodules. Preloading all the modules has several advantages. 1. We do not have to; rely on rootmap files which don't support some features (namespaces and; templates) 2. Lookup would be faster because we don't have to do; trampoline via rootmap files. The only disadvantage of preloading all the modules is the startup time performance.; `root.exe -q -l memory.C`; This is a release build without modules:; ```; cpu time = 0.091694 seconds; sys time = 0.026187 seconds; res memory = 133.008 Mbytes; vir memory = 217.742 Mbytes; ```; This is a release build with modules, with this patch:; ```; cpu time = 0.234134 seconds; sys time = 0.066774 seconds; res memory = 275.301 Mbytes; vir memory = 491.832 Mbytes; ```; As you can see, preloading all the modules makes both time and memory 2; to 3 times worse **at a startup time**. **Edit** : With hsimple.C; `root.exe -l -b tutorials/hsimple.C -q ~/CERN/ROOT/memory.C`; Release build without modules:; ```; Processing tutorials/hsimple.C... ; hsimple : Real Time = 0.04 seconds Cpu Time = 0.05 seconds ; (TFile *) 0x555ae2a9d560 ; Processing /home/yuka/CERN/ROOT/memory.C... ; cpu time = 0.173591 seconds ; sys time = 0.011835 seconds ; res memory = 135.32 Mbytes ; vir memory = 209.664 Mbytes ; ```; Release build with modules, with this patch:; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; (TFile *) 0x55d1b036d230; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.290742 seconds; sys time = 0.043851 seconds; res memory = 256.844 Mbytes; vir memory = 438.484 Mbytes; ```. However, it is a matter of course that we get slower startup t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1814:677,perform,performance,677,https://root.cern,https://github.com/root-project/root/pull/1814,1,['perform'],['performance']
Performance,"Currently, `TGraph::Sort` does not check if the data is already sorted (stored in bit `TGraph::kIsSortedX`). For the implemented quicksort, sorting already sorted data is the worst case performance scenario, so I believe a check would be helpful.; Since the user can supply a custom `greaterfunc`, a check similar to https://github.com/root-project/root/blob/1dba738f4e5c472d7b6777da49e00ef041696dba/hist/hist/src/TGraph.cxx#L2394 might be appropriate.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6352:186,perform,performance,186,https://root.cern,https://github.com/root-project/root/issues/6352,1,['perform'],['performance']
Performance,"Currently, all user-provided build flags are overwritten without notice.; By making the build flags cache variables, they are only set if the user; didn't set them explicitly.; Further, the printing of the build flags now also correctly prints the; flags being set by the build type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4196:100,cache,cache,100,https://root.cern,https://github.com/root-project/root/pull/4196,1,['cache'],['cache']
Performance,"Currently, if ::Name() interface is called we pretty print the Decl name. This is suboptimal because it causes many memory allocations for something which is essentially immutable. This PR introduces step-by-step working cache if ::Name() was called. It reduces the temporary memory allocations by 12 Mb in standard ROOT and 130Mb in -Druntime_cxxmodules=On cache. The benchmarking test was provided by @pcanal in #3012. It is important to reduce the temporary allocations because they can contribute to increasing of the peak memory usage of ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3616:221,cache,cache,221,https://root.cern,https://github.com/root-project/root/pull/3616,2,['cache'],['cache']
Performance,"Currently, some sections of TFile::ReadProcessID are only protected; from concurrent access if Internal::IsParTreeProcessingEnabled(); is true. The only entity that enables ParTreeProcessing in ROOT; is TTreeProcessorMT::Process. With this patch, concurrent access to TFile::ReadProcessID is always protected. Rationale: if TTreeProcessorMT::Process needs that protection, everyone needs it. Note that `TParTreeProcessing` is unused after this change, so if you agree the change can go in, I'll add a commit that removes `TParTreeProcessing` from ROOT. If you _don't_ agree the change can go in: why does `TTreeProcessorMT::Process` need this protection but other usecases do not (note that `TParTreeProcessing` is in `ROOT::Internal`, so we do not expect users to activate these locks)?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288:74,concurren,concurrent,74,https://root.cern,https://github.com/root-project/root/pull/5288,2,['concurren'],['concurrent']
Performance,Custom functionality loaded as modules and not as prerequicities.; Although old method with `_prereq` will continue to work. Fix minor problems with TTree player in JSROOT. Small code adjustments in THttp classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10267:21,load,loaded,21,https://root.cern,https://github.com/root-project/root/pull/10267,1,['load'],['loaded']
Performance,"DF::TActionImpl<Helper>; * Helper(Helper &&): a move-constructor is required. Copy-constructors are discouraged.; * ColumnTypes_t: alias for a ROOT::TypeTraits::TypeList instantiation that specifies the types of the; columns to be passed to this action helper.; * Result_t: alias for the type of the result of this action helper. Must be default-constructible.; * ROOT::Detail::TDF::ColumnNames_t GetColumnNames() const: return the names of the columns processed by this; action. The number of names must be equal to the size of ColumnTypes_t.; * void Exec(unsigned int slot, ColumnTypes...columnValues): each working thread shall call this method; during the event-loop, possibly concurrently. No two threads will ever call Exec with the same 'slot' value:; this parameter is there to facilitate writing thread-safe helpers. The other arguments will be the values of; the requested columns for the particular entry being processed.; * void InitTask(TTreeReader *, unsigned int slot): each working thread shall call this method during the event; loop, before processing a batch of entries (possibly read from the TTreeReader passed as argument, if not null).; This method can be used e.g. to prepare the helper to process a batch of entries in a given thread. Can be no-op.; * void Initialize(): this method is called once before starting the event-loop. Useful for setup operations.; Can be no-op.; * void Finalize(): this method is called at the end of the event loop. Commonly used to finalize the contents; of the result.; * Result_t &PartialUpdate(unsigned int slot): this method is optional, i.e. can be omitted. If present, it should; return the value of the partial result of this action for the given 'slot'. Different threads might call this; method concurrently, but will always pass different 'slot' numbers.; * std::shared_ptr<Result_t> GetResultPtr() const: return a shared_ptr to the result of this action (of type; Result_t). The TResultPtr returned by Book will point to this object.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1905:2194,concurren,concurrently,2194,https://root.cern,https://github.com/root-project/root/pull/1905,1,['concurren'],['concurrently']
Performance,"Data sources such as RNTuple that have efficient ways to get the; size of a collection can recognize the `__rdf_sizeof_` prefix and; connect that variable to the column representing the size of `var`. To do:; - [x] test interaction of `#var` and `Alias`; - [x] nicer error handling in case of column name that is just `""#""` (Jakob's comment); - [x] do not expand `#define`, `#pragma` and other preprocessor directives; - [x] do not return `__rdf_sizeof_XXX` columns from `GetColumnNames` (RNTupleDS can, but RDF should filter them out); - [x] ignore `__rdf_sizeof_XXX` columns in `Snapshot` (~~printing a warning~~ throwing if passed explicitly by the user); - [x] same for `Cache`; - [x] document interaction of `Snapshot` and `Cache` with the `#var` columns; - [x] test interaction of `Cache` and `#var`; - [x] RNTuple's `#var` columns should probably be `std::size_t` instead of `unsigned int`s? that would be the less surprising. Also I got _some_ numbers out rather than an exception when I used the wrong type",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7354:675,Cache,Cache,675,https://root.cern,https://github.com/root-project/root/pull/7354,3,['Cache'],['Cache']
Performance,"Data {; std::unique_ptr<RBrowserDataCleanup> fCleanupHandle; ///<! cleanup handle for RecursiveRemove; };. // RBrowserData.cxx; class RBrowserDataCleanup : public TObject {};; ```. Which leads to failures in `roottest-root-core-execStatusBitsCheck` when building with `runtime_cxxmodules=OFF`:. ```; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 0 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> > for parent ROOT::Experimental::RFileDialog!; 1548: +Error in <TProtoClass::FindDataMember>: data member with index 1 is not found in class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> >; 1548: +Error in <CreateRealData>: Cannot find data member # 1 of class tuple<ROOT::Experimental::RBrowserDataCleanup*,default_delete<ROOT::Experimental::RBrowserDataCleanup> > for parent ROOT::Experimental::RFileDialog!; ```. As per the discussion in the linked PR, it seems that `TClass` is always generating dictionaries for the `std::unique_ptr` data member, even if it's transient. As things stand, the only ""fix"" is to move the `RBrowserDataCleanup` class from the implementation file to the header, and adding `ClassDef` macro since it inherits from `TObject`. An alternative workaround was changing `std::unique_ptr<RBrowserDataCleanup>` to `RBrowserDataCleanup *`, which is treated transparently in case of a transient member. ### Reproducer. 1. Revert the changes in #13134 ; 2. Run the following macro; ```cpp; void rbrowserdatacleanup(){; gSystem->LoadAllLibraries();; ROOT::Detail::TStatusBitsChecker::CheckAllClasses();; }; ```. ### ROOT version. master. ### Installation method. built from sources. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13361:2142,Load,LoadAllLibraries,2142,https://root.cern,https://github.com/root-project/root/issues/13361,1,['Load'],['LoadAllLibraries']
Performance,"DataClass->InheritsFrom(cl)) {; (gdb) bt; #0 0x00007ffff23d256b in TBuildRealData::Inspect (this=this@entry=0x7fffffffbc70, cl=cl@entry=0x97df820, pname=0x97df410 """", mname=mname@entry=0x7ffff274a79b ""fClassName"", ; add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:549; #1 0x00007ffff2538d3a in ROOTDict::TClassRef_ShowMembers (obj=0x432d540, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/core/meta/G__Meta.cxx:3082; #2 0x00007ffff23c55e1 in TClass::CallShowMembers (this=this@entry=0x97dc950, obj=obj@entry=0x432d540, insp=..., isATObject=isATObject@entry=-1); at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1866; #3 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97dc950, pointer=pointer@entry=0x432d540, isTransient=true); at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719; #4 0x00007ffff23d29b4 in TBuildRealData::Inspect (this=this@entry=0x7fffffffbe50, cl=cl@entry=0x97b0bf0, pname=<optimized out>, mname=mname@entry=0x7fffefc2b0d9 ""fTargetClass"", ; add=add@entry=0x432d540) at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:620; #5 0x00007fffefba86af in TBranchElement::ShowMembers (this=0x432d290, R__insp=...) at /u/rlalik/hades/software/root-v5/build_cmake/tree/tree/G__Tree.cxx:3835; #6 0x00007ffff23c571d in TClass::CallShowMembers (this=this@entry=0x97b0bf0, obj=obj@entry=0x432d290, insp=..., isATObject=<optimized out>, isATObject@entry=-1); at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1883; #7 0x00007ffff23d215d in TClass::BuildRealData (this=this@entry=0x97b0bf0, pointer=pointer@entry=0x432d290, isTransient=isTransient@entry=false); at /u/rlalik/hades/software/root-v5/core/meta/src/TClass.cxx:1719; #8 0x00007ffff1447bad in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0x97b0bf0, pointer=pointer@entry=0x432d290); at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3960; #9 0x00007fffefbd0606 in TBranchElement::Streamer (this=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9564:1802,optimiz,optimized,1802,https://root.cern,https://github.com/root-project/root/issues/9564,1,['optimiz'],['optimized']
Performance,"Dear ROOT developers,. this Pull Request tries to address [this issue](https://root-forum.cern.ch/t/using-tfitshdu-to-read-a-table-with-arrays-as-column-elements/37867) I have opened in the ROOT forum. A limitation of the `TFITSHDU` class was its impossibility to read within columns of a FITS table containing a variable-length array. My patch adds such a possibility. I have modified the `Column` and `Cell` `struct`s adding objects necessary to read a variable-length arrays embedded in a cell. The`LoadHDU` function (fundamentally the initialiser of the `TFITSHDU` class) was modified accordingly such that this objects could be assigned. I have modified the functions dealing with printing and reading values from a table such that the occurrence of a column with variable-length arrays embedded can be properly signalled. In order not to interfere with the previous development of data handling I created a function to read within a cell for this specific case: it is called `GetTabVarLengthVectorCell`. I believe it does not make sense to read the entire column in this case (returning an array of variable-length arrays). The user is allowed to access the single cell, when attempting to use any other function (e.g. `GetTabRealVectorColumn`) to read the entire column, a warning is issued pointing him to this specific function. Last I added a tutorial in `tutorials/fitsio/FITS_tutorial8.C` with a test file illustrating the application of this case. I would kindly ask for a review,. Best. Cosimo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5099:502,Load,LoadHDU,502,https://root.cern,https://github.com/root-project/root/pull/5099,1,['Load'],['LoadHDU']
Performance,"Dear ROOT team,. I am attempting to compile LHCb's Allen with the following command on a RHEL9 machine with CVMFS:. ```; mkdir build; cd build; cmake -DSTANDALONE=ON -DCMAKE_TOOLCHAIN_FILE=/cvmfs/lhcb.cern.ch/lib/lhcb/lcg-toolchains/LCG_103/x86_64_v3-el9-gcc11-opt+g.cmake -GNinja ..; ninja; ```. Compilation works fine, but upon execution of the produced executable I encounter the following error:. ```; $ ./Allen --sequence hlt1_pp_default; ...; <<< cling interactive line includer >>>: fatal error: module file '/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.28.00/src/ROOT-6.28.00-build/lib/Vc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-98349/x86_64-centos9-gcc11-opt/lib/MathCore.pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; ...; Failed to load module SessionViewer; input_line_4:2:2: error: unknown type name 'include'; #include ""TError.h""; ^; input_line_4:2:1: error: expected unqualified-id; #include ""TError.h""; ^; input_line_4:4:2: error: unknown type name 'define'; #define _ClassDefInterp_(name,id,virtual_keyword, overrd) \; ^; input_line_4:21:7: error: expected ';' after top level declarator; #undef ClassDef; ^; ;; input_line_5:1:2: error: unknown type name 'include'; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; input_line_5:1:1: error: expected unqualified-id; #include ""cling/Interpreter/DynamicLookupRuntimeUniverse.h""; ^; Failed to load module MathCore; Info in <TInterpreter::TCling::RegisterModule>: Module MathCore in modulemap failed to load.; ```. Please note that the folder `/build/jenkins` does not exist in the machine I am building on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12458:850,load,load,850,https://root.cern,https://github.com/root-project/root/issues/12458,8,['load'],['load']
Performance,"Dear ROOT team,. This is the code for Interior Point OPTimizer (Ipopt) . You can find more documentation on http://oproject.org/pages/Ipopt.html. Thanks; Omar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3249:53,OPTimiz,OPTimizer,53,https://root.cern,https://github.com/root-project/root/pull/3249,1,['OPTimiz'],['OPTimizer']
Performance,"Depends on: #1317, adds only one other commit:. It seems automatically loading TreePlayer when TDataFrame is used; without the appropriate include never worked. This was previously; fixed by just adding TreePlayer (which contains TDF) to the PCH.; ; As always, let's recreate this hack with modules to make restore; the old behavior with modules turned on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1328:71,load,loading,71,https://root.cern,https://github.com/root-project/root/pull/1328,1,['load'],['loading']
Performance,"Describe the bug; When starting ROOT on an arm64 machine a symbol-not-found message appears for about 10 times before getting to the prompt.; The message is related to SOFIE:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; Symbol found in '/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'; did you mean to load it with '.L /cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'?; ```. ROOT 6.24/06 works fine. ### Expected behavior; No warning message. ### To Reproduce; Steps to reproduce the behavior:; 1. Login on an ARM amchine with cvmfs, e.g. techlab-arm64-thunderx2-01 ; 2. Source dev4arm; `source /cvmfs/sft.cern.ch/lcg/views/dev4/Wed/aarch64-centos7-gcc11-opt/setup.sh`; 3. Start ROOT, e.g. `root -b -q`. ### Setup; 1. ROOT version: 6.26/04; 2. Operating system: aarch64, centos7; 3. LCG stack. ### Additional context; Affecting ATLAS (first noticed by Asoka Da Silva)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10877:1410,load,load,1410,https://root.cern,https://github.com/root-project/root/issues/10877,1,['load'],['load']
Performance,"Direct I/O bypasses the OS page cache and allows to reach much higher bandwidths. However, it introduces strict alignment requirements to the offset and size of all write requests, as well as the userspace pointer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16144:32,cache,cache,32,https://root.cern,https://github.com/root-project/root/pull/16144,1,['cache'],['cache']
Performance,Disable Cling optimizations in TCanvas::SaveSource,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9467:14,optimiz,optimizations,14,https://root.cern,https://github.com/root-project/root/pull/9467,1,['optimiz'],['optimizations']
Performance,Disable validation of the diagnostic options when loading the C++ module,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2680:50,load,loading,50,https://root.cern,https://github.com/root-project/root/pull/2680,1,['load'],['loading']
Performance,Distributed RunGraphs always submits concurrently,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13344:37,concurren,concurrently,37,https://root.cern,https://github.com/root-project/root/pull/13344,1,['concurren'],['concurrently']
Performance,"Do not set up the iterator in the ctor.; ; Many interfaces in ROOT namely TCling do not need to iterate over decls to find what they look for. They use the regular lookup facilities which are provided by cling or clang.; ; In a few cases we still use the pattern:; `TClingClassInfo(fInterpreter) ci; ci.GetDataMember(..);`; where we are supposed to look for a ROOT's definition of a data member on the global scope. In turn, this pattern does not walk the decls but performs a 'regular' lookup.; ; This patch removes the expensive setup of the iterators (triggering humongous amount of deserializations). We lazily set up the iterators only when we are about to start iterating (most notably coming from the legacy PyROOT interfaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1668:466,perform,performs,466,https://root.cern,https://github.com/root-project/root/pull/1668,1,['perform'],['performs']
Performance,"Do not skip the condition to avoid to build a normalization ratio integrals for the composite terms of the conditional RooProdPdf. The code which was avoid to create the ratio of integrals when the provided range is equal to the default range of the variables was skipped. Not clear why, it is now re-added. This seems to fix the performance issue observed in ; https://root-forum.cern.ch/t/bug-range-command-enforces-numerical-integral/43350.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7178:330,perform,performance,330,https://root.cern,https://github.com/root-project/root/pull/7178,1,['perform'],['performance']
Performance,Done! I think I've integrated all changes. **TODO:**. - [x] Make commit message more expressive; - [x] Try to make the counters in `RDefineBase` and `GraphNode` atomics; - [x] Look for another solution for the static `TRegex` members; - [x] Add a random sleep to the test cases to stir things up; - [x] Add tests for `Cache` and `Snapshot`; - [x] Point out in the docs that `SaveGraph` is not thread safe,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6266:318,Cache,Cache,318,https://root.cern,https://github.com/root-project/root/pull/6266,1,['Cache'],['Cache']
Performance,"Due to a failing test and the resulting investigation, we decide to change the pythonization of Get() and __getattr__ in the classes TDirectory, TDirectoryFile and TFile.; The situation is now the following:; . - __getattr__ : TDirectory --> TDirectoryFile --> TFile; - caches the returned object for future attempts; - raises AttributeError if object not found; ; - Get() : TDirectoryFile --> TFile; - does not cache the returned object; - returns nullptr if object not found. A new test to check the caching functionality has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4156:270,cache,caches,270,https://root.cern,https://github.com/root-project/root/pull/4156,2,['cache'],"['cache', 'caches']"
Performance,"Due to some planned major improvements to RVec (namely the addition of; a small buffer optimization) the layout of RVec objects will change in; a backward-incompatible way between v6.24 and v6.26. Because of this, we now print a warning if an application is reading or; writing a ROOT::RVec object from/to a ROOT file. We assume this is an; exceedingly rare case, as the ROOT interface typically used to; manipulate RVecs is RDataFrame, and RDataFrame performs an on-the-fly; RVec <-> std::vector conversion rather than writing RVecs to disk. Note that, currently, RVecs written e.g. in a TTree cannot be read back; using certain ROOT interfaces (e.g. TTreeReaderArray and RDataFrame).; These limitations will also be lifted in v6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7222:87,optimiz,optimization,87,https://root.cern,https://github.com/root-project/root/pull/7222,2,"['optimiz', 'perform']","['optimization', 'performs']"
Performance,"Due to the way it works by default, sourcing a root version built with; current pyroot was failing, due to the fact that operations such as:. for pyroot_libs_dir in ${old_rootsys}/lib/python*. were performed both in experimental and current. In zsh, if a path specified with '*' is not found, an error like the; following is raised:. clean_environment:20: no matches found: zsh_build/lib/python*. and the program aborts, without sourcing anything. With these change, such loops are performed only if root is built with; pyroot experimental.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4693:198,perform,performed,198,https://root.cern,https://github.com/root-project/root/pull/4693,2,['perform'],['performed']
Performance,DynamicLibraryManager::loadLibrary if the parameter resolve is false,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10593:23,load,loadLibrary,23,https://root.cern,https://github.com/root-project/root/pull/10593,1,['load'],['loadLibrary']
Performance,"EDIT: to merge if nightlies are green for master. This resolves ROOT-9456, ""[Jenkins][DF] Sporadic failures in test_snapshotNFiles"". The issue is due to interleaved TBB task execution in the same thread. When nested task spawning is present (i.e. when TBB tasks spawn other; TBB tasks and the thread pool contains at least three threads), the TBB; task stealing mechanism makes it possible that a thread starts executing; a new instance of the ""parent"" tasks before it finishes the execution of; the previous parent task (this happens when the thread is waiting for a; ""stolen"" child task to finish, so it steals another threads' parent; task). In the case of a multi-thread snapshot, one needs to write at least two; branches for the multi-thread branch writing to kick in and have nested; task spawning. The crash was caused by a new parent task overwriting the output TTree; of the previous parent task in a given thread. When the previous parent; task resumed execution, it ended up trying to flush out the contents of; the deleted output TTree. The solution adopted is to use thread-local stacks of output TTrees (as; opposed to single output TTrees), that tasks push and pop when they; start and finish respectively.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2228:662,multi-thread,multi-thread,662,https://root.cern,https://github.com/root-project/root/pull/2228,2,['multi-thread'],['multi-thread']
Performance,"Each module has a set of identifier tables which aid lookup. Based on this information clang decides if it needs a declaration to be deserialized. Namespace partitions and other C++ entities may have semantically the same identifier lookup tables across multiple modules. Since lookup is a heavily used operation in compilers clang tries to optimize it as much as possible. In case it sees more than 4 such lookup tables it merges them together into a single table aiming to keep the lookup algorithmic complexity of O(1). This logic approach has several assumptions:; * The progam will use only a small superset of the modules it needs;; * The program will be compiled in multiple TUs and merging of tables will not be called often;. In the interpreter context where we make all module available the merging of such tables becomes CPU intense operation at runtime which produces a lot of temporary reallocations. Moreover, we have seen a lot of profiles where the merging operation dominates (by around 18%). This patch tries to make the merging far less often. On some short benchmarks ran locally we get (70-80%) runtime improvement and ~10% reduction in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4761:341,optimiz,optimize,341,https://root.cern,https://github.com/root-project/root/pull/4761,1,['optimiz'],['optimize']
Performance,"Each module has a set of identifier tables which aid lookup. Based on this; information clang decides if it needs a declaration to be deserialized. Namespace partitions and other C++ entities may have semantically the same; identifier lookup tables across multiple modules. Since lookup is a heavily used; operation in compilers clang tries to optimize it as much as possible. In case; it sees more than 4 such lookup tables it merges them together into a single; table aiming to keep the lookup algorithmic complexity of O(1). This logic approach has several assumptions:; * The progam will use only a small superset of the modules it needs;; * The program will be compiled in multiple TUs and merging of tables will not; be called often;. In the interpreter context where we make all module available the merging of; such tables becomes CPU intense operation at runtime which produces a lot of; temporary reallocations. Moreover, we have seen a lot of profiles where the; merging operation dominates (by around 18%). This patch tries to make the merging far less often. On some short benchmarks ran; locally we get (70-80%) runtime improvement and ~10% reduction in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4774:344,optimiz,optimize,344,https://root.cern,https://github.com/root-project/root/pull/4774,1,['optimiz'],['optimize']
Performance,"Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see [ATR-25049](https://its.cern.ch/jira/browse/ATR-25049)). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11263:34,race condition,race condition,34,https://root.cern,https://github.com/root-project/root/pull/11263,5,"['load', 'race condition']","['load', 'loaded', 'loading', 'race condition']"
Performance,Elements with zero size after loading a std::array<std::array<std::vector<std::vector<Int_t>>,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11722:30,load,loading,30,https://root.cern,https://github.com/root-project/root/issues/11722,1,['load'],['loading']
Performance,EmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kFloat_t:' at line 118 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Forming reference to null pointer in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:118; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:120:28: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'helper') [clang-analyzer-core.NullDereference]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapPro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:25251,load,loaded,25251,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,Enable CMake race condition checking for linking/generating dicts,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3395:13,race condition,race condition,13,https://root.cern,https://github.com/root-project/root/pull/3395,1,['race condition'],['race condition']
Performance,Enable the semantic global module index to boost performance. Add GMI tabcompletion support.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5847:49,perform,performance,49,https://root.cern,https://github.com/root-project/root/pull/5847,1,['perform'],['performance']
Performance,"Enabled with `TWebCanvas::BatchImageMode()` static method. Allows to process many images with single headless browser invocation and; increase performance of image production - without change of user code. . When many canvases are stored as image in difference places, ; they first collected in batch as JSON and then processed; when at least `n` images are there. Only then headless browser invoked; and create all these images at once. . Provide macro demonstrating this functionality.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16414:143,perform,performance,143,https://root.cern,https://github.com/root-project/root/pull/16414,1,['perform'],['performance']
Performance,Ensures that the cluster prefetch thread flushes all queued requests before processing the termination signal.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9224:53,queue,queued,53,https://root.cern,https://github.com/root-project/root/pull/9224,1,['queue'],['queued']
Performance,"Env: Macos 13.3.1, xcode 14.3. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_cppzmq builtin_freetype builtin_ftgl builtin_gl2ps builtin_glew builtin_gtest builtin_llvm builtin_nlohmannjson builtin_openssl builtin_openui5 builtin_pcre builtin_tbb builtin_unuran builtin_vdt builtin_veccore builtin_xxhash builtin_zeromq cefweb clad cocoa dataframe davix exceptions fortran gdml http imt libcxx mlp minuit2 minuit2_mpi minuit2_omp mpi opengl pyroot qt5web roofit roofit_multiprocess webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum unuran vdt veccore XML. The error is following:. [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingMethodInfo.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingRdictModuleFileExtension.cxx.o; [ 79%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingTypedefInfo.cxx.o; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from ./include/Rtypes.h:195:; In file included from <module-includes>:4:; ./include/TClassEdit.h:29:10: fatal error: 'cxxabi.h' file not found; #include <cxxabi.h>; ^~~~~~~~~~; In file included from input_line_3:2:; ./include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; #include ""TIsAProxy.h""; ~~~~~~~~^~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12644:1427,load,loading,1427,https://root.cern,https://github.com/root-project/root/issues/12644,1,['load'],['loading']
Performance,"EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:18587,optimiz,optimized,18587,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:27235,optimiz,optimized,27235,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,Evaluate using Profile-Guided Optimization (PGO) for optimizing Root's performance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15778:30,Optimiz,Optimization,30,https://root.cern,https://github.com/root-project/root/issues/15778,3,"['Optimiz', 'optimiz', 'perform']","['Optimization', 'optimizing', 'performance']"
Performance,"Even if something within the event loop throws, we still need to call `CleanUpTask` to make sure `SnapshotHelperMT::FinalizeTask` gets called, to avoid teardown issues due to input and output TTrees of a Snapshot being deleted concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5214:227,concurren,concurrently,227,https://root.cern,https://github.com/root-project/root/pull/5214,1,['concurren'],['concurrently']
Performance,"Even though cloning the constraint term is technically only required when the computation graph is changed because global observables are taken from data, it is safer to clone the constraint model in general to reset the normalization integral caches and avoid ASAN build failures (the PDF of the main measurement is cloned too anyway, so not much overhead). This can be reconsidered after the caching of normalization sets by pointer is changed to a more memory-safe solution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11669:244,cache,caches,244,https://root.cern,https://github.com/root-project/root/pull/11669,1,['cache'],['caches']
Performance,"Even though the `RooResolutionModel` inherits from RooAbsPdf, it is; special because it has it's own overload of `getValV`. This is; problematic for the new RooFit batch mode, because it doesn't use; `getValV` but instead `RooAbsReal::evaluate()` directly. Then for pdfs; it does the normalization, and for non-pdfs it doesn't. The `RooResolutionModel::getValV` is implemented such that the; resolution model behaves like a pdf when used on it's own (i.e., it will; be normalized), but when used for an analytical convolution via; `RooAbsAnaConvPdf`, it is not normalized. In this commit, the function `RooResolutionMode::selfNormalized` is; implemented to return `true` if the resolution model is used in a; convolution. Like this, it's behavior as a pdf is consistent with the; `getValV` implementation and the batch mode had no problems using that; class anymore. One complication after this change was the integral code in; `RooAbsAnaConvPdf`. In that code, the RooResolutionModel's integral; value is retrieved by getting it's normalization integral, but now that; the resolution model is proclaiming to be self-normalized the integral; is always trivially one. This problem is solved by getting the; normalization integral directly via `getNormObj` from the normalization; integral cache manager, in which case the check for self-normalization; is not done. In fact, this has already been done before in the case of; ranged fits, so the change in this commit is actually a simplification; of the code because it removes a code branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9212:1288,cache,cache,1288,https://root.cern,https://github.com/root-project/root/pull/9212,1,['cache'],['cache']
Performance,"Every worker stores the RDataFrame created and the computation graph jitted during the first task in a process-wide dictionary serving as a cache. This is required in order to avoid having to re-jit the computation graph at each task. This commit introduces a post-execution cleanup job for the Dask workers so that when a distributed execution ends, the workers are instructed to remove the artifacts generated by the execution from the caches. In particular, if the RDataFrame execution was processing a TTree-based dataset, removing the artifact from the cache also notably deallocates the corresponding TTreeCache, one per RDataFrame in-flight in the process. Here are some memory usage flamegraphs obtained with memray running the AGC analysis script. https://cernbox.cern.ch/s/YPEmBfULdvy8CbN. You will find the following:; * report_1sample_1file_2task_master.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 293 MB; * report_1sample_1file_2task_cleancache.html : 1 RDataFrame, 1 file, 2 partitions. Total memory seen 238 MB; * report_5sample_1file_2task_master.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 521 MB; * report_5sample_1file_2task_cleancache.html: 5 RDataFrames, 1 file each, 2 partitions each. Total memory seen 249 MB. One can search for the `TTreeCache` symbol and notice that e.g. between the second and the first flamegraphs the difference is ~40MB which is the size of the TTreeCache. Similarly between the 4th and 3rd there is approximately a difference of ~5 TTreeCache sizes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094:140,cache,cache,140,https://root.cern,https://github.com/root-project/root/pull/16094,3,['cache'],"['cache', 'caches']"
Performance,Extremely long startup time when loading dictionaries with pyroot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14223:33,load,loading,33,https://root.cern,https://github.com/root-project/root/issues/14223,1,['load'],['loading']
Performance,FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_5:1:2: error: unknown type name 'ifdef'; >#ifdef PI; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_6:1:2: error: unknown type name 'ifdef'; >#ifdef ERROR; > ^; ><<< cling interactive ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:6174,load,load,6174,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to l,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3024,load,load,3024,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Faile,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4939,load,load,4939,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to loa,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4686,load,load,4686,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to l,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3728,load,load,3728,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module Pro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4559,load,load,4559,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load modul,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5547,load,load,5547,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Failed to load module Thread.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4632,load,load,4632,https://root.cern,https://github.com/root-project/root/issues/11901,31,['load'],['load']
Performance,Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundat,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3547,load,load,3547,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,"Feature: Save training progress to root file, present it in TMVAGui. Add training history object for TMVA, here I incorporate usage to log DNN epoch performance with DNN_CPU and PyKeras. The tool is intended to be general enough that it can be used by any ML algorithm. For example, XGBoost could also record its progress per iteration with this object. A request for this functionality can be found on the root forums; https://root-forum.cern.ch/t/how-to-get-training-history-using-tmva-keras-interface/28799. My solution does not require tensorboard and records are stored within the root file. Test:; ```; . bin/thisroot.sh; cd tutorials/tmva/; make; ./TMVAClassification; root -l; TMVA::TMVAGui(""TMVA.root""); //Click on Training History... See the DNN_CPU_valError and trainingError plotted, not that data points are only added for every epoch printed in MethodDNN.cxx ; .q. cd keras; python ClassificationKeras.py; root -l; TMVA::TMVAGui(""TMVA.root""); //Click on Training History... See Keras training history for PyKeras_val_acc, PyKeras_acc, PyKeras_loss and PyKeras_val_loss; ```. Feedback welcomed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4337:149,perform,performance,149,https://root.cern,https://github.com/root-project/root/pull/4337,1,['perform'],['performance']
Performance,"First reported at https://root-forum.cern.ch/t/question-about-aliases-in-rdataframe/51155 . Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TTree.h>. int main() {; TTree t(""t"", ""t"");; auto x = std::make_pair(42, 84);; // This is a weird way to build a tree, but for the purposes of this test; // we we just need to mock a TTree with branches ""topbranch"" and; // ""topbranch.something"" where `something` must not be a data member of the type of ""topbranch""; // (otherwise things ""happen"" to work due to the order in which we do substitutions in RDF, see below).; t.Branch(""topbranch"", &x);; t.Branch(""topbranch"", &x, ""a/I:b/I"");; t.Fill();. auto df = ROOT::RDataFrame(t).Alias(""alias"", ""topbranch"");; // Here we transform `""alias.a == 42""` into `[](std::pair<int, int> &var0) { return var0.a == 42; }`,; // which is not valid C++.; return df.Filter(""alias.a == 42"").Count().GetValue();; }; ```; which yields:. ```; input_line_8:2:45: error: no member named 'a' in 'std::pair<int, int>'; auto func0(pair<int,int>& var0){return var0.a == 42; ~~~~ ^; terminate called after throwing an instance of 'std::runtime_error'; what():; RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash; All RDF objects that have not run an event loop yet should be considered in an invalid state. fish: Job 1, './repro2' terminated by signal SIGABRT (Abort); ```. The solution is to perform alias substitution in the expression first and then, in a second pass, substitute branch names with dummy variable names (`var0`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11207:1437,perform,perform,1437,https://root.cern,https://github.com/root-project/root/issues/11207,1,['perform'],['perform']
Performance,"First reported at https://root-forum.cern.ch/t/sequence-of-loading-root-file/48601 . The following is a reproducer:. ```cpp; #include <TFile.h>; #include <TNtuple.h>; #include <iostream>. int main() {; TFile f0(""o1.root"");; TFile f1(""o2.root"");. TNtuple *B2L = f0.Get<TNtuple>(""B2Lc"");; std::cout << ""No clone:\n"";; B2L->GetEntry(0);; std::cout << ""done\n"";. //f0.cd(); uncommenting fixes the issue; TNtuple *B2Lc = static_cast<TNtuple *>(B2L->Clone());; f1.cd();; std::cout << ""Clone:\n"";; B2Lc->GetEntry(0);; std::cout << ""done\n"";; return 0;; }; ```; prints; ```; No clone:; done; Clone:; Error in <TBasket::Streamer>: The value of fKeylen is incorrect (-23644) ; trying to recover by setting it to zero; Error in <TBasket::Streamer>: The value of fObjlen is incorrect (-2020426277) ; trying to recover by setting it to zero; Error in <TBranch::GetBasket>: File: o2.root at byte:3872444835, branch:m, entry:0, badread=1, nerrors=1, basketnumber=0; done; ```. [files.zip](https://github.com/root-project/root/files/7969912/files.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9757:59,load,loading-root-file,59,https://root.cern,https://github.com/root-project/root/issues/9757,1,['load'],['loading-root-file']
Performance,"First, this PR factors out common parts of the code in commit/load of (sealed) pages. Specifically, this affects:; - `CommitPageImpl` and `CommitSealedPageImpl`.; - `PopulatePageFromCluster()` and `LoadSealedPage()`. Locating the RPageInfo from the cluster index is now a member function of RPageRange. Second, it provides support for sealed pages in the DAOS backend. Closes issue #8079.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8309:62,load,load,62,https://root.cern,https://github.com/root-project/root/pull/8309,2,"['Load', 'load']","['LoadSealedPage', 'load']"
Performance,"Fits using bin integrals or fits of ThnSparse where not working in multi-thread mode due to a usage of the non thread-safe function BinData::BinUpEdge; This was showing by failures of bin integral fits and thnsparse fits in the stressHIstoFit.cxx when running with ROOT MT. . This PR fixes this issues. Improvements have been done also for stressHIstoFit such as adding an option ""-t"" to run the tes in MT mode",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5626:67,multi-thread,multi-thread,67,https://root.cern,https://github.com/root-project/root/pull/5626,1,['multi-thread'],['multi-thread']
Performance,Fix #7093: race condition tripping TEnum::GetEnum,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7094:11,race condition,race condition,11,https://root.cern,https://github.com/root-project/root/pull/7094,2,['race condition'],['race condition']
Performance,Fix Load and Save in TASPaletteEditor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14970:4,Load,Load,4,https://root.cern,https://github.com/root-project/root/pull/14970,1,['Load'],['Load']
Performance,"Fix ROOT-10753, ""Wrong entries are loaded in case of TChain+TEntryList""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5667:35,load,loaded,35,https://root.cern,https://github.com/root-project/root/pull/5667,1,['load'],['loaded']
Performance,"Fix ROOT-9118 ""TDF: Cache and Snapshot do not trigger column definitions""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1342:20,Cache,Cache,20,https://root.cern,https://github.com/root-project/root/pull/1342,1,['Cache'],['Cache']
Performance,Fix ROOT-9662 race condition in TStreamerInfo loading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2710:14,race condition,race condition,14,https://root.cern,https://github.com/root-project/root/pull/2710,4,"['load', 'race condition']","['loading', 'race condition']"
Performance,"Fix ROOT-9694, GetStreamerInfoList infinite recursion. Commit b6523df introduces the infinite recursion whenever; there was a problem reading the StreamerInfo record and; introduces a useless attempt to read from file in the case; of a class derived from TFile that overrid GetStreamerInfoList. To allow for increase run-time performance and increase thread; scalability the override ability of TFile::GetStreamerInfoList; is replaced by an override of TFile::GetStreamerInfoListImp with; updated return type and arguments. If a class override; TFile::GetStreamerInfoList you will now see a compilation error like:; {code}; /opt/build/root_builds/rootcling.cmake/include/TSQLFile.h:225:19: error: declaration of 'GetStreamerInfoList' overrides a 'final' function; virtual TList *GetStreamerInfoList();; ^; /opt/build/root_builds/rootcling.cmake/include/TFile.h:231:24: note: overridden virtual function is here; virtual TList *GetStreamerInfoList() final; // Note: to override behavior, please override GetStreamerInfoListImpl; ^; {code}. Instead you need to override the protected method:. {code}; InfoListRet GetStreamerInfoListImpl(bool lookupSICache);; {code}. which can be implemented as; {code}; InfoListRet DerivedClass::GetStreamerInfoListImpl(bool /*lookupSICache*/) {; ROOT::Internal::RConcurrentHashColl::HashValue hash;; TList *infolist = nullptr;; //; // Body of the former Derived::GetStreamerInfoList with the; // return statement replaced with something like:. // The second element indicates success or failure of the load.; // (i.e. {nullptr, 0, hash} indicates the list has already been processed; // {nullptr, 1, hash} indicates the list failed to be loaded; return {infolist, 0, hash};; }; {code}. See TFile::GetStreamerInfoListImpl implementation for an example on how to implement the caching.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2725:326,perform,performance,326,https://root.cern,https://github.com/root-project/root/pull/2725,4,"['load', 'perform', 'scalab']","['load', 'loaded', 'performance', 'scalability']"
Performance,Fix ROOT-9779 and improve performance for ROOT-9133,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3385:26,perform,performance,26,https://root.cern,https://github.com/root-project/root/pull/3385,1,['perform'],['performance']
Performance,Fix TROOT::LoadClass for C++runtime modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167:11,Load,LoadClass,11,https://root.cern,https://github.com/root-project/root/pull/2167,1,['Load'],['LoadClass']
Performance,"Fix `TColor::SaveColor`, optimize `SavePrimitive` methos",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11925:25,optimiz,optimize,25,https://root.cern,https://github.com/root-project/root/pull/11925,1,['optimiz'],['optimize']
Performance,Fix a race condition for copymodulemap target,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3577:6,race condition,race condition,6,https://root.cern,https://github.com/root-project/root/pull/3577,1,['race condition'],['race condition']
Performance,"Fix detected bugs, add separate function for chunk loading with filters, add tests",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15510:51,load,loading,51,https://root.cern,https://github.com/root-project/root/pull/15510,1,['load'],['loading']
Performance,Fix diagnostics for `cling pragma load` with missing library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7509:34,load,load,34,https://root.cern,https://github.com/root-project/root/pull/7509,2,['load'],['load']
Performance,Fix gSystem->Load() failure caused by recent macOS default,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1360:13,Load,Load,13,https://root.cern,https://github.com/root-project/root/pull/1360,1,['Load'],['Load']
Performance,Fix initialization of TFormula in multi-threads,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6218:34,multi-thread,multi-threads,34,https://root.cern,https://github.com/root-project/root/pull/6218,1,['multi-thread'],['multi-threads']
Performance,Fix issues with friends auto-loaded from file in RDF and TTreeReader,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6995:29,load,loaded,29,https://root.cern,https://github.com/root-project/root/pull/6995,1,['load'],['loaded']
Performance,Fix lazy loading of template specializations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13139:9,load,loading,9,https://root.cern,https://github.com/root-project/root/pull/13139,1,['load'],['loading']
Performance,Fix lazy loading of template specializations [v6.28],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13240:9,load,loading,9,https://root.cern,https://github.com/root-project/root/pull/13240,1,['load'],['loading']
Performance,Fix lazy template loading for macOS with C++17,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062:18,load,loading,18,https://root.cern,https://github.com/root-project/root/pull/12062,1,['load'],['loading']
Performance,"Fix nullptr dereference bugs in TClass and TList, wrap TClass.cxx to 120 columns to follow coding conventions, and avoid StreamerInfo lookup when it is cached.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/953:152,cache,cached,152,https://root.cern,https://github.com/root-project/root/pull/953,1,['cache'],['cached']
Performance,Fix race condition in SnapshotHelper.; After this fix I am not able to reproduce crashes on this test in master anymore.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/783:4,race condition,race condition,4,https://root.cern,https://github.com/root-project/root/pull/783,1,['race condition'],['race condition']
Performance,Fix race condition when building RCastor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/765:4,race condition,race condition,4,https://root.cern,https://github.com/root-project/root/pull/765,1,['race condition'],['race condition']
Performance,Fix race condition when generating RGL module.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/763:4,race condition,race condition,4,https://root.cern,https://github.com/root-project/root/pull/763,1,['race condition'],['race condition']
Performance,Fix race condition when loading dictionary shared libraries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11263:4,race condition,race condition,4,https://root.cern,https://github.com/root-project/root/pull/11263,2,"['load', 'race condition']","['loading', 'race condition']"
Performance,Fix some race conditions in the build system,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/752:9,race condition,race conditions,9,https://root.cern,https://github.com/root-project/root/pull/752,1,['race condition'],['race conditions']
Performance,"Fix the `ntpl002_vector.C`, `ntpl005_introspection.C`, `ntpl006_friends.C`, and `ntpl007_mtFill.C` tutorials failing with the following errors:; ```; Processing ntpl002_vector.C...; IncrementalExecutor::executeFunction: symbol '_Smtx_unlock_shared' unresolved while linking [cling interface function]!; You are probably missing the definition of _Smtx_unlock_shared; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_Smtx_lock_shared' unresolved while linking [cling interface function]!; You are probably missing the definition of _Smtx_lock_shared; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10262:385,load,load,385,https://root.cern,https://github.com/root-project/root/pull/10262,2,['load'],['load']
Performance,"Fix the following compilation errors when using the /std:c++17 flag on Windows:; ```; roofit\roofitcore\src\RooDataSet.cxx(2073,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2073,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2074,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 1 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2074,17): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; roofit\roofitcore\src\RooDataSet.cxx(2075,43): error C2664: 'RooDataSet::RooDataSet(std::string_view,std::string_view,RooDataSet *,const RooArgSet &,const RooFormulaVar *,const char *,size_t,size_t,Bool_t,const char *)': cannot convert argument 2 from 'TString' to 'std::string_view'; roofit\roofitcore\src\RooDataSet.cxx(2075,23): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; roofit\roofitcore\src\RooDataSet.cxx(625,13): message : see declaration of 'RooDataSet::RooDataSet'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8789:483,perform,perform,483,https://root.cern,https://github.com/root-project/root/pull/8789,3,['perform'],['perform']
Performance,Fix the following errors on Windows:; ```; 362: Error in <TCling::LoadPCM>: ROOT PCM C:\Users\bellenot\build\release\tree\tree\test\Release\libElementStructDict_rdict.pcm file does not exist; 362: [ OK ] TOffsetGeneration.offsetArrayValues (3014 ms); 362: [ RUN ] TOffsetGeneration.primitiveTest; 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied; 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode; 362: [ OK ] TOffsetGeneration.primitiveTest (142 ms); 362: [ RUN ] TOffsetGeneration.elementsTest; 362: SysError in <TFile::TFile>: could not delete C:\Users\bellenot\build\release\tree\tree\test\TOffsetGeneration2.root (errno: 13) Permission denied; 362: Warning in <TFile::Write>: file TOffsetGeneration2.root not opened in write mode; 362: [ OK ] TOffsetGeneration.elementsTest (136 ms); 362: [----------] 3 tests from TOffsetGeneration (3293 ms total); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9320:66,Load,LoadPCM,66,https://root.cern,https://github.com/root-project/root/pull/9320,1,['Load'],['LoadPCM']
Performance,"Fix the isssue with the static constexpr class members of RColor not being properly exported, even with `CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS`, and causing the following kind of error, for example when trying to execute the root7 box.cxx macro:; ```; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6157:579,load,load,579,https://root.cern,https://github.com/root-project/root/pull/6157,3,['load'],['load']
Performance,"Fix the replacement of S,B with x,y in formula used for performance metrics when S and B appear in function name and not as variables. ; Example: RooStats::AsimovSignificance(S,B) which has a S in its function name",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3626:56,perform,performance,56,https://root.cern,https://github.com/root-project/root/pull/3626,1,['perform'],['performance']
Performance,Fix the support for 3d input tensors when performing 1d convolution.; Add also a test for 1D convolution in TestSofieModels,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9442:42,perform,performing,42,https://root.cern,https://github.com/root-project/root/pull/9442,1,['perform'],['performing']
Performance,Fix the update of time step for DL optimizer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5042:35,optimiz,optimizer,35,https://root.cern,https://github.com/root-project/root/pull/5042,1,['optimiz'],['optimizer']
Performance,Fixed more race conditions in the build system.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/769:11,race condition,race conditions,11,https://root.cern,https://github.com/root-project/root/pull/769,1,['race condition'],['race conditions']
Performance,"Fixes for bug ROOT-1036 (FitResult::Scan); When fitting histograms a shared_pointer of FitData must be passed to the Fitter class, in Fitter::Fit( data,...) functions instead of a row pointer !; This fixes the shared ownership of the fitting data between the Fitter and the FitResult classes and avoid that the data are deleted when exiting TH1::Fit. ; One can then use FitResult::Scan , FitResult::Contour or FitResult::GetConfidenceIntervals.; Before the data were accidentally not deleted, when multi-thread wad not enabled, because in that case a reference for the data was kept in the global TVirtualFitter class, available only in non-mt mode/. This PR also fixes the case of bin integral fit in multithreading. The problem was caused by using the GSL integrator from Mathmore. . testFit has been improved by adding test for FitResult::Scan and tests for multi-threading fitting",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4557:498,multi-thread,multi-thread,498,https://root.cern,https://github.com/root-project/root/pull/4557,2,['multi-thread'],"['multi-thread', 'multi-threading']"
Performance,Fixes for fitting when Multi-threading is enabled. This fixes FitResult::Scan (ROOT-10360) and also fitting with bin integrals,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4557:23,Multi-thread,Multi-threading,23,https://root.cern,https://github.com/root-project/root/pull/4557,1,['Multi-thread'],['Multi-threading']
Performance,"Fixes unnecessary loading of (wrong) cppyy library because a symbol named ""_PyExc_SyntaxError"" cannot be found by dlsym.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5829:18,load,loading,18,https://root.cern,https://github.com/root-project/root/pull/5829,1,['load'],['loading']
Performance,Fixing filemerger test and usage of __FAST_MATH__ with gcc for Optimized builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/971:63,Optimiz,Optimized,63,https://root.cern,https://github.com/root-project/root/pull/971,1,['Optimiz'],['Optimized']
Performance,"Following up on a case reported by a CMS user, we identified a series of potential bottlenecks in the present implementation of TTreeReaderArray. An example can be seen bellow*. The profiles can be seen in attachment. One of the symptoms is the presence of multiple deserialisations. The problem appears when several TTreeReaderArrays bind to the same branch. This seems to be an exotic case, but it can happen easily in TDataFrame, for example creating several define nodes starting from the same column storing a collection. As the profiles show, optimisations for the individual TVirtualCollectionReader implementations: it's a non-negligible amount of work but it can be done. I was wondering if TTreeReaderArray could be really lazy and have all instances binding to the same branch share the same memory for the deserialised collections. For the multi threading, this would not be a problem given that nothing can be done anyway from different threads on a single branch (meaning, the very same one, with the same pointer). *; ```.cpp. #include <TFile.h>; #include <TStopwatch.h>; #include <TTreeReader.h>; #include <TTreeReaderArray.h>; #include <vector>; #include <iostream>. /*. // Dataset created with this function; void createFile(); {. // First create an instance of an engine.; random_device rnd_device;; // Specify the engine and distribution.; mt19937 mersenne_engine(rnd_device());; uniform_int_distribution<int> dist(1, 42);; auto gen = std::bind(dist, mersenne_engine);. std::vector<int> vec(983);; generate(begin(vec), end(vec), gen);. ROOT::Experimental::TDataFrame d(10000);; d.Define(""v"", [&](){std::shuffle(begin(vec), end(vec), mersenne_engine); return vec;}); .Snapshot<std::vector<int>>(""t"",""mytree.root"",{""v""});; }; */. void checkTTreeReaderArrayCost(); {; TFile f(""mytree.root"");; TTreeReader reader(""t"", &f);. auto nevents = 10000;; auto nreaderarrays = 3000;. std::vector<TTreeReaderArray<int>*> readerarrays(nreaderarrays);. for (auto &&raa : readerarrays) {; raa = new",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1765:83,bottleneck,bottlenecks,83,https://root.cern,https://github.com/root-project/root/pull/1765,1,['bottleneck'],['bottlenecks']
Performance,"For LLVM we don't have Optimized build, but only Debug, Release, RelWithDebInfo, and MinSizeRel.; Thats why to have correctly interpreted __FAST_MATH__ in ROOT macroses we need to add -ffast-math flag for LLVM default Release build type.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1039:23,Optimiz,Optimized,23,https://root.cern,https://github.com/root-project/root/pull/1039,1,['Optimiz'],['Optimized']
Performance,"For my project (based on PyROOT) I regularly test it against decv LCG nightly builds.; For last days I see a significant degradation in the CPU performance ; e.g. for the very simple simple [script](https://gist.github.com/VanyaBelyaev/66b08ae5b974ae3a279e67ddd0ae33e8); I see a huge factor, almost an order of magnitude, degradation CPU performance with respect to ROOT 6.24 or 6.26.; I've checked the exiting dev3 builds and I see tat while even the earliest (laet week Tue) build is much slower than 6.24&6.26, ; but a factor of 2 in the performance comes from the last Friday build. ; Something bad happens between Thu and Fri slots... . You can find some numbers in the comment; to [this gist](https://gist.github.com/VanyaBelyaev/66b08ae5b974ae3a279e67ddd0ae33e8)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927:144,perform,performance,144,https://root.cern,https://github.com/root-project/root/issues/11927,3,['perform'],['performance']
Performance,"For our users, it's important to fix certain parameters in the likelihood easily with any overhead. So far, this didn't work when using gradients from AD, because the gradients were only produced for the parameters that are floating at the time where the likelihood is created. However, it has no additional runtime overhead in backwards AD mode to simply generate the gradient for **all** parameters, and then filter out the right elements in the the RooMinimizer-related code. This is what is implemented in the second commit of this PR. Some changes in the RooAbsMinimizerFcn were necessary to do this filtering: so far it didn't store any information on all the parameters in order. It only stored two separate lists for floating and constant parameters. The first commit in this PR adds the necessary data members (`_allParams` and `_allParamsInit`) to the RooAbsMinimizerFcn for the filtering of parameters. Furthermore, the previous datamembers that stored the parameters separately are removed to avoid duplication and possible desync of information. On this occasion, the parameter management was completely rewritten to be more concise and robust. This will also help later when we integrate the discrete profiling from CMS combine, where changing the state and filtering of minimization parameters is also relevant. It was validated with the ATLAS and CMS likelihoods from ICHEP 2024 that this PR results in no performance regression, even though we are now generating the gradient for more parameters (roughly up to two times more, because for every floating nuisance parameter there is usually one constant global observable that constrains it).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16750:1422,perform,performance,1422,https://root.cern,https://github.com/root-project/root/pull/16750,1,['perform'],['performance']
Performance,"For some ROOT files, RDF and TTreeReader failed to retrieve branch `""i.x""`. Fixed by using `FindBranch` instead of `GetBranch` in the relevant routines. ~~Unfortunately, this seems to be a noticeable performance pessimization, but I'm out of ideas.~~ Fixed, see Axel's suggestion. Relevant tests are added, but will fail as long as `GetBranch(""x"")` returns `i.x` instead of the top-level `x` branch. **About test failures**. * the failures in `dataframe_snapshot`, `testTTreeRegressions` and `treetreeplayertestUnit` are those I mention above, and are expected; * if I understand correctly the failures in `roottest_root_tree_selectorreader_make` and `roottest_root_tree_reader_make` show that, surprisingly, `FindBranch` is not strictly more powerful than `GetBranch`: there are nested branches that could be found before and cannot be found now (EDIT: fixed by Axel's suggestion to default to `GetBranch` and go to `FindBranch` only if it returns a nullptr); * I don't understand the failures in `roottest_root_tree_entrylist_make` and `roottest_root_tree_chain_make`, my PR does not touch anything related to TTree/TChain/TEntryList",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5603:200,perform,performance,200,https://root.cern,https://github.com/root-project/root/pull/5603,1,['perform'],['performance']
Performance,"For some of the args created in the RooProdPdf cache, the ownership; model was wrong. They were attempted to be added to a list that is; actually not owning, but they should be added to the owning container of; the cache. This fixes an issue with 6.28 reported on the forum:; https://root-forum.cern.ch/t/plot-normalization-after-rooaddpdf-fixaddcoefrange/54480",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12660:47,cache,cache,47,https://root.cern,https://github.com/root-project/root/pull/12660,2,['cache'],['cache']
Performance,"For some reason root-config calls on macOS 10.13.2 are extremely slow (not sure if this is related to the meltdown / spectre mitigations). ```bash; [O2/latest] ~/work/active/sw/BUILD/ROOT-latest/ROOT %> time root-config --version; 6.13/01; root-config --version 0.24s user 1.06s system 131% cpu 0.989 total; ```. which than means that whatever dependent project using `FindROOT.cmake` is slowed down quite a lot when trying to do incremental builds. This is because of the multiple `root-config` invocations in such a macro, which are also not cached so they get done on any `make` invocation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1569:544,cache,cached,544,https://root.cern,https://github.com/root-project/root/pull/1569,1,['cache'],['cached']
Performance,For some types of changes incremental builds are expected to fail (e.g. if source files are moved or removed). For those cases we probably need a way to ask the CI to rebuild from scratch rather than perform an incremental build.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12302:200,perform,perform,200,https://root.cern,https://github.com/root-project/root/issues/12302,1,['perform'],['perform']
Performance,"For the new RooFit BatchMode, the model pdf had to be ""compiled"" for a; fixed normalization set before being evaluated by the RooFit driver. This step was implemented in a rather hacky way, because it only became; clear gradually how important this step is, as many changes need to be; done to the computation graph before it can be used by the BatchMode. It started by ""unrolling"" the normalization integrals such that they are; separate nodes that can be evaluated by the RooFit driver. Then, it also covered the transformation of every RooProdPdf into a new; object that exposes the full intenal computation graph that is cached by; the RooProdPdf for a given norm set. These two changes where done in separate passes through the compute; graph, and there was also a third pass to figure out dependencies and; normalization sets in the graph, and some more recursive passes the; attach new servers. This all became very compilcated and hard to debug, as the separate; passes through the graph interfered with each other as well. With all the lessons learned, this commit suggests a new more general; way to compile a model for a given normalization set. It is now done in a **single recursive pass through the graph** via the; newly-proposed function; `RooAbsArg::compileForNormSet(RooAbsArg const& normSet, context)`. It's job is to make a clone of the RooAbsArg where the normalization set; is fixed to `normSet`, given some context. Now, the details of unrolling the integrals of a RooAbsPdf and replacing; the RooProdPdfs can be implemented in the overload for this function of; the specific class. There is even an overload for the RooSimultaneous; now, which contains all the logic of making the RooSimultaenous ready; for the NLL creation. There are still some rough edges in the new interface, but it is already; a big step forward that will make debugging much easier because it's now; much less compilcated to understand how the computation graph is set up; by the BatchMode. Also, this m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12079:625,cache,cached,625,https://root.cern,https://github.com/root-project/root/pull/12079,1,['cache'],['cached']
Performance,"Force deserialization also for unevaluated ESTs.; Deserializing the decl chain (as part of the linkage spec calculation); will update the EST between Start and End EH emission, causing an; asymmetry and triggering the assert. This forces the decl chain to be; loaded. Fixes roottest/root/treeformula/stl/assertSparseSelection.C on MacOS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5534:260,load,loaded,260,https://root.cern,https://github.com/root-project/root/pull/5534,1,['load'],['loaded']
Performance,Foundation_C; >Failed to load module ROOT_Rtypes; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Core; >Failed to load module Rint; >Failed to load module RIO; >Failed to load module MathCore; >Failed to load module Hist; >Failed to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module F,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4174,load,load,4174,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,From Axel: Empty token queue for late parsed templates also for pending instantiations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1838:23,queue,queue,23,https://root.cern,https://github.com/root-project/root/pull/1838,1,['queue'],['queue']
Performance,"Full discussion at https://github.com/root-project/roottest/pull/880 . Taking a look with `gdb` it looks like `kNotDeleted` is reset, but then those bits are immediately modified again by `_int_free`:. ```cpp; #0 tcache_put (tc_idx=0, chunk=0x55555562e400) at malloc.c:3183; #1 _int_free (av=0x7ffff4dfdbc0 <main_arena>, p=0x55555562e400, have_lock=0) at malloc.c:4481; #2 0x00007ffff4c9c8f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3391; #3 0x00007ffff7b30e64 in TStorage::ObjectDealloc (vp=0x55555562e410) at ../core/base/src/TStorage.cxx:362; #4 0x00007ffff7b14518 in TObject::operator delete (ptr=0x55555562e410) at ../core/base/src/TObject.cxx:1001; #5 0x00007ffff7b11cba in TObject::~TObject (this=0x55555562e410, __in_chrg=<optimized out>) at ../core/base/src/TObject.cxx:91; #6 0x0000555555556242 in main () at foo.cpp:9; ```. where the line that accidentally sets the bit again is 3181 here:. ```cpp; 3172 /* Caller must ensure that we know tc_idx is valid and there's room; 3173 for more chunks. */; 3174 static __always_inline void; 3175 tcache_put (mchunkptr chunk, size_t tc_idx); 3176 {; 3177 tcache_entry *e = (tcache_entry *) chunk2mem (chunk);; 3178; 3179 /* Mark this chunk as ""in the tcache"" so the test in _int_free will; 3180 detect a double free. */; 3181 e->key = tcache_key;; 3182; 3183 e->next = PROTECT_PTR (&e->next, tcache->entries[tc_idx]);; ```. and this version of the test circumvents that behavior of `_int_free` so it does not crash (at least on my laptop):. ```cpp; void *mem = malloc(sizeof(TObject));; auto o = new (mem) TObject();; auto l = new TList();; l->SetName(""my own list"");; l->Add(o);; o->~TObject();; l->Clear();; free(mem);; ```. If my understanding is correct, this also means that the test failure is real in the sense that the `kNotDeleted` mechanism does not correctly work on platforms where `free` has that behavior. From Philippe (https://github.com/root-project/roottest/pull/880#issuecomment-1239663370):. > We (I) need to extend ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11330:418,optimiz,optimized,418,https://root.cern,https://github.com/root-project/root/issues/11330,2,['optimiz'],['optimized']
Performance,"Functor::operator() (this=0x3167128); at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/art/v3_06_03-buildFW/src/art/Framework/Principal/Worker.cc:527; #10 0x00007ffff63e88f3 in hep::concurrency::SerialTaskQueueChain::runFunc<art::(anonymous namespace)::RunWorkerFunctor> (this=0x337e350, func=...); at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/hep_concurrency/v1_05_00/slf7.x86_64.e19.debug/include/hep_concurrency/SerialTaskQueueChain.h:83; #11 0x00007ffff63e8ce6 in hep::concurrency::SerialTaskQueueChain::<lambda()>::operator()(void) (this=0x337e350); at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/hep_concurrency/v1_05_00/slf7.x86_64.e19.debug/include/hep_concurrency/SerialTaskQueueChain.h:69; #12 0x00007ffff63e9939 in hep::concurrency::QueuedTask<hep::concurrency::SerialTaskQueueChain::passDown(unsigned int, const T&) [with T = art::(anonymous namespace)::RunWorkerFunctor]::<lambda()> >::execute(void); (this=0x7fffe8ec7940) at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/hep_concurrency/v1_05_00/slf7.x86_64.e19.debug/include/hep_concurrency/SerialTaskQueue.h:86; #13 0x00007ffff4e9db71 in tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::process_bypass_loop (this=0x7fffe8ed2600, context_guard=..., t=0x7fffe8ec7940, isolation=0); at ../../src/tbb/custom_scheduler.h:474. === end of File opening stack.; ```. On Dec 9, 2020, at 2:30 PM, Kyle Knoepfel <knoepfel@fnal.gov> wrote:. > Hi Philippe,; > ; > I have spent hours trying to debug a multi-threading error that appears when processing concurrent events with art's ROOT-based facilities. There are three ingredients required to reproduce the problem:; > • Must use multiple events and threads in flight; > • Must enable either art's TFileService or RootOutput module; > • Must use art's product-mixing module that wraps around to the beginning of",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:5333,concurren,concurrency,5333,https://root.cern,https://github.com/root-project/root/issues/6939,3,"['Queue', 'concurren']","['QueuedTask', 'concurrency']"
Performance,"GNU ld has a way to control the symbol versions by 'fixing' the library; appending @@somelib_version. In practice, ROOT's libraries contain a lot of undefined symbols which; are supposed to be resolved either in libc or glibc which are system; libraries. Our symbol dependency chain builder does not look into system; libraries for performance (and legacy reasons). Thus the undefined symbols; from the C/C++ runtime cause us to scan every time all non-system libraries; when we know what would be the outcome. More information can be found in the binutils documentation:; https://sourceware.org/binutils/docs/ld/VERSION.html. This patch optimizes dependency resolution speed for libTreePlayer by 450%",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4112:332,perform,performance,332,https://root.cern,https://github.com/root-project/root/pull/4112,2,"['optimiz', 'perform']","['optimizes', 'performance']"
Performance,"GarbageCollect (obj=0x7fffd4017590) at ../core/cont/src/TCollection.cxx:736; #9 0x00007ffff7cfbe70 in TObjArray::Delete (this=0x7fffd4011ab8) at ../core/cont/src/TObjArray.cxx:376; (More stack frames follow...). Thread 1 (Thread 0x7ffff42bec00 (LWP 312681) ""repro_ttreeproc""):; #0 0x00007ffff767d973 in TGenCollectionProxy::PopProxy (this=0x7fffd4016090) at ../io/io/src/TGenCollectionProxy.cxx:1333; #1 0x00007ffff656b78d in (anonymous namespace)::TCollectionLessSTLReader::GetSize (this=0x5555577ccb80, proxy=0x5555577cdde0) at ../tree/treeplayer/src/TTreeReaderArray.cxx:130; #2 0x0000555555561837 in ROOT::Internal::TTreeReaderArrayBase::GetSize (this=0x7fffffffc1c0) at /home/blue/ROOT/master/cmake-build-foo/include/TTreeReaderArray.h:35; #3 0x00005555555612bc in workload (r=...) at repro_ttreeprocmt.cpp:10; #4 0x0000555555563ef5 in std::__invoke_impl<void, void (*&)(TTreeReader&), TTreeReader&> (__f=@0x7fffffffde50: 0x555555561269 <workload(TTreeReader&)>) at /usr/include/c++/11.2.0/bits/invoke.h:61; #5 0x0000555555563784 in std::__invoke_r<void, void (*&)(TTreeReader&), TTreeReader&> (__fn=@0x7fffffffde50: 0x555555561269 <workload(TTreeReader&)>) at /usr/include/c++/11.2.0/bits/invoke.h:111; #6 0x0000555555562df8 in std::_Function_handler<void (TTreeReader&), void (*)(TTreeReader&)>::_M_invoke(std::_Any_data const&, TTreeReader&) (__functor=..., __args#0=...) at /usr/include/c++/11.2.0/bits/std_function.h:291; #7 0x00007ffff659e8a9 in std::function<void (TTreeReader&)>::operator()(TTreeReader&) const (this=0x7fffffffde50, __args#0=...) at /usr/include/c++/11.2.0/bits/std_function.h:560; #8 0x00007ffff659881c in operator() (__closure=0x7fffffffcf10, c=...) at ../tree/treeplayer/src/TTreeProcessorMT.cxx:555; #9 0x00007ffff6599d8c in operator() (__closure=0x7fffffffceb0, i=0) at ../core/imt/inc/ROOT/TThreadExecutor.hxx:231; (More stack frames follow...); ```. First reported at https://root-forum.cern.ch/t/root-6-26-00-issue-with-multi-threaded-rdataframe-and-rvec/49310 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10357:4452,multi-thread,multi-threaded-rdataframe-and-rvec,4452,https://root.cern,https://github.com/root-project/root/issues/10357,1,['multi-thread'],['multi-threaded-rdataframe-and-rvec']
Performance,Generate offset map performance improvement,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4568:20,perform,performance,20,https://root.cern,https://github.com/root-project/root/pull/4568,1,['perform'],['performance']
Performance,Go back to use .h5 files instead of .keras due to a problem in Keras loading .keras files on MacOS ARM ; (see https://github.com/keras-team/tf-keras/issues/46 ),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13592:69,load,loading,69,https://root.cern,https://github.com/root-project/root/pull/13592,1,['load'],['loading']
Performance,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:10664,Perform,Performing,10664,https://root.cern,https://github.com/root-project/root/issues/10528,22,['Perform'],['Performing']
Performance,"Handle line and fill attribute from individual bins ; Support ""p"" and ""*"" for markers drawing; Switch off color draw optimization. Now JSROOT should be very close to ROOT graphics. Other changes in JSROOT as:; - use localStorage instead of cookies (not exposed to network); - support URL options export when using ""Show in new tab"" menu command",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15000:117,optimiz,optimization,117,https://root.cern,https://github.com/root-project/root/pull/15000,1,['optimiz'],['optimization']
Performance,Handle the case where a typedef as a dictionary entry and thus an autoload entry (rootmap case) and this typedef point to an instance a class template with a default paramter. In this case we do not have a (forward) declaration of the typedef in the rootmap file (because we can't have a forward declaration of the class template). In those case our only source of information is in the list of type which is loaded as part of the dictionary for the typedef. If in addition the dictionary for the target of the typedef is in another library we actually need to load that library based on the resolved name of the typedef). This fixes #12378,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12488:409,load,loaded,409,https://root.cern,https://github.com/root-project/root/pull/12488,4,['load'],"['load', 'loaded']"
Performance,"Happens when try to find and execute static class method without arguments and which returns `void`. First detected with `TPluginHandler`. This is only plugin handler which defined with 0 arguments:; ```; gPluginMgr->AddHandler(""TGeoManagerEditor"", ""*"", ""TGeoManagerEditor"", ""GeomBuilder"", ""LoadLib()"");; ```; ROOT crashes when executed this plugin.; Problem can be cooked down to the reproducer - code which is executed by plugin handler:; ```; {; TClass *cl = TClass::GetClass(""TGeoManagerEditor"");. TString fCtor = ""LoadLib()"";. TString method = fCtor(0, fCtor.Index(""(""));; TString proto = fCtor(fCtor.Index(""("")+1, fCtor.Index("")"")-fCtor.Index(""("")-1);. auto fMethod = cl->GetMethodWithPrototype(method, proto);. auto fCallEnv = new TMethodCall;; fCallEnv->Init(fMethod);. fCallEnv->SetParams();. Longptr_t ret = 0;; fCallEnv->Execute(ret);; }. ```; It crashed when `fCallEnv->Execute` is called. . There is simple workaround:; ```; if (proto.Length() == 0) proto = ""()"";; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11930:291,Load,LoadLib,291,https://root.cern,https://github.com/root-project/root/issues/11930,2,['Load'],['LoadLib']
Performance,"Having that bit set on TBranches causes _a lot_ of thread; contention (~TBranch -> ~TNamed -> RecursiveRemove).; Similarly for leaves. This mitigates performance issues with MT runs on certain samples; where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10729:150,perform,performance,150,https://root.cern,https://github.com/root-project/root/pull/10729,1,['perform'],['performance']
Performance,"Hello there. I fail to see the difference between:; ```; h->Fill(3.1415); ``` ; and ; ```; h->Fill(3.1415,1.); ``` ; Why are we using defining different functions for both of them? I came across this when performing `h->Fill(""StringBarLabelHere"")` which fails as I always have to set the weight to `1.` in every call.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5010:205,perform,performing,205,https://root.cern,https://github.com/root-project/root/pull/5010,1,['perform'],['performing']
Performance,"Hello,. At the moment, the `ROOT::TLorentzVector` class uses a pseudorapidity-based calculation for the commonly-used DeltaR distance between vectors. For massive objects, such as jets, the rapidity should often be used instead. I have implemented a small switch within the `TLorentzVector::DeltaR` function to allow users to make this calculation with the vector's rapidity, instead of pseudorapidity. This has a default value of `kFALSE`, which means that the current behaviour will be the default one. I have cross-checked this new functionality with the `fastjet::pseudojet::delta_R` implementation and an internal ATLAS one, which all give the same results when performing the rapidity-based calculation. Please let me know if I have violated any contribution guidelines, and I will update this PR accordingly!. 🍻 Matt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7087:667,perform,performing,667,https://root.cern,https://github.com/root-project/root/pull/7087,1,['perform'],['performing']
Performance,"Hello,. I was trying to improve the throughput of a program that deals with ROOT files containing gazillions of histograms. I ended up using linux perf, and found that the culprit is; ```TDirectoryFile::GetObjectChecked(const char *namecycle, const TClass* expectedClass)```. A quick read through the code shows that the problem is that in the case of a histogram not yet read in memory, the iteration through the list of keys is linear !!! On the other hand the function; ```TKey *TDirectoryFile::GetKey(const char *name, Short_t cycle) const```; is correctly implemented, i.e see; ```TIter next( ((THashList *)(GetListOfKeys()))->GetListForObject(name) );```; to make use of the `THashList` capabilities of the list of keys. I ended up cutting the running time of my program by a factor 4-5 by replacing; ```m_baseDir->GetObject(hname, res);```; by; ```; TKey* res_key = m_baseDir->GetKey(hname);; if(res_key) {; res = (TH1*)(res_key->ReadObj());; }; ```. Would be nicer to fix `TDirectoryFile::GetObjectChecked` directly, as well as `TDirectoryFile::Get`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8046:36,throughput,throughput,36,https://root.cern,https://github.com/root-project/root/issues/8046,1,['throughput'],['throughput']
Performance,"Hello,. after I installed the most recent ROOT release 6.22.00, I noticed that the drawing performance of the marker styles 6 and 7 became significantly worse. Unfortunately, I got to admit this is due to the additions of my PR #4772.; The implementation of the marker line width required to use different line joins and line caps than default to look nice, but are a little bit slower. In usual cases you won't notice this, but when you draw 100.000+ points, it becomes significant. I wrote this patch to fix this problem and make the markers 6 and 7, which are meant to be used for huge amounts of points, fast again. I confirmed that the fix works in an X11 environment. It would be good if someone can approve it also on Windows and MacOS. Since this is a fix, it should also become part of the v6-22-00-patches branch, how ever I don't know exactly how to do this. Do I need to open a second PR for this?. All the best,; Simon",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6027:91,perform,performance,91,https://root.cern,https://github.com/root-project/root/pull/6027,1,['perform'],['performance']
Performance,"Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>; `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```; Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script.; at JSRoot.core.js:325:21; at JSRoot.core.js:3:77; at JSRoot.core.js:5:3; ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed?. To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```; <!DOCTYPE html>; <html>; <head>; <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>; </head>; <body>; </body>; </html>. ```. Cheers,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10727:1008,load,load,1008,https://root.cern,https://github.com/root-project/root/issues/10727,1,['load'],['load']
Performance,"Here is some performance information for the reproducer code attached to [ROOT-9133](https://sft.its.cern.ch/jira/browse/ROOT-9133):. **perf stat (before)**; ```; Performance counter stats for 'root-9133':. 135566.779101 task-clock (msec) # 4.167 CPUs utilized ; 481,078 context-switches # 0.004 M/sec ; 710 cpu-migrations # 0.005 K/sec ; 3,512,992 page-faults # 0.026 M/sec ; 456,851,617,713 cycles # 3.370 GHz ; 310,271,051,553 instructions # 0.68 insn per cycle ; 65,664,345,345 branches # 484.369 M/sec ; 723,033,852 branch-misses # 1.10% of all branches . 32.535328793 seconds time elapsed; ```; **perf stat (after)**; ```; Performance counter stats for 'root-9133':. 115840.232563 task-clock (msec) # 6.254 CPUs utilized ; 343,733 context-switches # 0.003 M/sec ; 327 cpu-migrations # 0.003 K/sec ; 1,567,401 page-faults # 0.014 M/sec ; 391,763,587,760 cycles # 3.382 GHz ; 273,699,878,762 instructions # 0.70 insn per cycle ; 57,799,809,349 branches # 498.961 M/sec ; 635,168,730 branch-misses # 1.10% of all branches . 18.522277829 seconds time elapsed; ```; *Note the reduced number of cpu-migrations, page-faults, and context switches, as well as lower runtime.*. **massif (before)**; ![screenshot](https://user-images.githubusercontent.com/249404/52358705-ca2d1c80-2a38-11e9-823e-ea35219fbca1.png); ![screenshot](https://user-images.githubusercontent.com/249404/52359262-d5cd1300-2a39-11e9-8159-73730cbd79e6.png). **massif (after)**; ![screenshot](https://user-images.githubusercontent.com/249404/52358746-db762900-2a38-11e9-9f63-5d2340860f4d.png); ![screenshot](https://user-images.githubusercontent.com/249404/52359437-30666f00-2a3a-11e9-94ed-67dfad3cdbec.png); *Note how `TBuffer::Expand()` goes from 1.8GB allocated memory down to just ~50MB. Also, total memory used drops from 3.8GB to 3.1GB. The size of the output file is 3.1GB. The total amount of used memory is still high since tasks are accumulating large chunks of data into the `TBufferMergerFile`s before calling `Write()` to ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3385:13,perform,performance,13,https://root.cern,https://github.com/root-project/root/pull/3385,3,"['Perform', 'perform']","['Performance', 'performance']"
Performance,"Here you can find reports about performance of new zlib: https://indico.cern.ch/event/658075/; New zlib is showing ~3 ~4 times faster in case of ""write"" operations for 109 and 106 compression settings.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/956:32,perform,performance,32,https://root.cern,https://github.com/root-project/root/pull/956,1,['perform'],['performance']
Performance,"Here, HistFactory is streamlined a bit. The models are restructured from this:; [HFTest4_old.pdf](https://github.com/root-project/root/files/6466419/HFTest4_old.pdf). To this:; [HFTest4.pdf](https://github.com/root-project/root/files/6466420/HFTest4.pdf). The main difference is that first, all binned parts of the calculation are executed (in batches), and then all scale factors are applied to the fully interpolated binned distributions. This reduces the number of function calls and allows for non-uniform binning (ROOT-4958), since the bin width correction is not applied as the last step, but during the binned calculations. Further, prototypes of batch evaluations functions were added for all objects in HistFactory calculations. There are some possibilities for optimisations:; - [ ] ParamHistFunc::evaluateSpan always recalculates all indices; - [ ] RooBinIntegrator doesn't support multi-dimensional batch evaluations; - [ ] Auto-vectorisation should be checked, especially for performance-critical things like the piecewise interpolation; - [ ] Profiling with an example like in `testHistfactory` but with more bins should be done.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8167:989,perform,performance-critical,989,https://root.cern,https://github.com/root-project/root/pull/8167,1,['perform'],['performance-critical']
Performance,"Hi Jonas (@guitargeek) and Lorenzo (@lmoneta) ,. I am opening a draft pull request with the bulk of the code for the morphing class. The morphing class consist of the RooLagrangianMorphFunc which builds the necessary morphing function and is assisted by a lightweight config class which allows to configure the morphfunc in various ways. ; ; The code is WIP and there are more updates expected in subsequent PRs. The main discussion is the way the objects are handled by the config and the morphfunc and support for factory style syntax. The code for the tutorials and the optimizer for the choice of input templates is also postponed to a subsequent PR as this is tied to the previous issue. There are some more issues regarding having boost high precision which can be a separate PR.; ; Feel free to comment on this version to get the review started !; ; Cheers,; Rahul and Carsten (@cburgard)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7766:573,optimiz,optimizer,573,https://root.cern,https://github.com/root-project/root/pull/7766,1,['optimiz'],['optimizer']
Performance,"Hi please check here:; https://root-forum.cern.ch/t/6-24-00-does-not-complile-on-redhat-8-3/45161. details:. Hello,; I’m running into problems compiling root 6.24.00:. $ cmake -Dclad=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j8. …; [ 76%] Linking CXX static library …/…/…/…/lib/libclingInterpreter.a; [ 76%] Built target clingInterpreter; Scanning dependencies of target CLING; [ 76%] Built target CLING; Scanning dependencies of target LLVMRES; [ 76%] Copying LLVM resource and header files; [ 76%] Built target LLVMRES; (stucks…). $ cmake --build . --install; [ 0%] Built target AFTERIMAGE; [ 0%] Built target OPENUI5; [ 0%] Built target LZMA; [ 0%] Performing download step (download, verify and extract) for ‘VDT’; (stucks). seems that vdt uses network access, which I do not have (not mentioned in the docs).; I think I do not need it anyhow…. so again:; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . --install; …; [ 79%] Generating G__Thread.cxx, …/…/lib/Thread.pcm; [ 79%] Generating G__forward_listDict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292:697,Perform,Performing,697,https://root.cern,https://github.com/root-project/root/issues/8292,1,['Perform'],['Performing']
Performance,"Hi, . Some time ago, I have had issues when invoking an `RDataFrame` analysis on a `TChain` that consisted of trees with **different names** in the **same file** (the canonical thing is just the other way around...). I first described the problem [here in the ROOT forum, rather long read, not absolutely necessary to understand this issue](https://root-forum.cern.ch/t/really-solved-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/41756). Unluckily only my entire analysis chain was able to trigger the bug; i.e. I was not able to produce a condensed reproducer of the problem. The clearest indicator of the occurring mismatch was the following line repeatedly being printed on the terminal:; ```; Error in <TTreeReader::SetEntriesRange()>: first entry out of range 0..946274; ```. I also found a work-around, but the problem was still bothering me, which is why I invested some time in debugging it:. * The number of the error statement is identical to the number of entries in the *first* tree, which has fewer entries than its partner. It only occurs once `EntryClusters` from the second tree are being processed. I.e. the tree-switch is insufficient.; * The error seems to be caused by the following line:; https://github.com/root-project/root/blob/312dacbfdb2b76bfb1fa7af9532a01b3b08d03f1/tree/treeplayer/src/TTreeProcessorMT.cxx#L143; * Changing it as shown in this diff here seems to solve the problem:; ```; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:22:19.290883093 +0000; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx	2021-02-07 20:32:00.000483321 +0000; @@ -140,8 +140,12 @@; const std::vector<Long64_t> &nEntries, const std::vector<std::vector<Long64_t>> &friendEntries); {; const bool usingLocalEntries = friendInfo.fFriendNames.empty() && entryList.GetN() == 0;; - if (fChain == nullptr || (usingLocalEntries && fileNames[0] != fChain->GetListOfFiles()->At(0)->GetTitle())); + if (fChain == nullptr || ( usingLocalEntries && (; +			 (fileNames[0] != fCh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7143:406,load,loaded-with-ttrees-with-different-names,406,https://root.cern,https://github.com/root-project/root/issues/7143,1,['load'],['loaded-with-ttrees-with-different-names']
Performance,"Hi,. ATLAS would like to request the addition of a mechanism to control the number of threads used by ROOT with implicit multi-threading enabled, ideally via an environment variable (e.g. `ROOT_MAX_THREADS`). The primary motivation for this is to give GRID sites an easier way to limit the number of threads to match that of a queue. Thanks!. Ed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9805:121,multi-thread,multi-threading,121,https://root.cern,https://github.com/root-project/root/issues/9805,2,"['multi-thread', 'queue']","['multi-threading', 'queue']"
Performance,"Hi,. I need to install ROOT 6.16 in my laptop (macOS Monterey M1 chip), but it's becoming so difficult due to the installation of TBB, and it also cannot detect the arm architecture (so when I configure the cmake building, I get ```Targeting X86```). . Regarding the TBB issue, this is the output; ```cmake; -- TBB download command succeeded. See also /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-download-*.log; [ 0%] No update step for 'TBB'; [ 0%] No patch step for 'TBB'; [ 0%] No configure step for 'TBB'; [ 0%] Performing build step for 'TBB'; CMake Error at /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-RelWithDebInfo.cmake:49 (message):; Command failed: 2. 'make' 'compiler=clang' 'CXXFLAGS= -mno-rtm -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk' 'CPLUS=/Library/Developer/CommandLineTools/usr/bin/c++' 'CONLY=/Library/Developer/CommandLineTools/usr/bin/cc'. See also. /Users/apereiro/root-histfact-test/new_build/TBB-prefix/src/TBB-stamp/TBB-build-*.log; ```. I have been following [this](https://github.com/root-project/root/pull/6120/commits) pull request made by Axel and I made the same changes from the commits, but it's not sufficient to fix the whole problem. . Also I tried to configure with ```-Dbuiltin_tbb=OFF``` since I have the latest tbb from homebrew, but I get; ```cmake; -- Found TBB: /opt/homebrew; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:1159 (if):; if given arguments:. ""VERSION_LESS"" ""2018""; ```. Can you point me to a solution, or propagate the patches you have been developing to older versions like this one?. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10370:546,Perform,Performing,546,https://root.cern,https://github.com/root-project/root/issues/10370,1,['Perform'],['Performing']
Performance,"Hi,. When compiling and attempting to run the Celeritas example (see https://github.com/celeritas-project/celeritas) with a build of ROOT v6.26/00 with gcc 11 we get the following errors:; ```; Error in <TCling::RegisterModule>: Dictionary trigger function for libCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libMathCore not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libThread not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libRIO not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libNet not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libTree not found; Error in <TCling::RegisterModule>: Dictionary trigger function for libceleritas_root not found; Error in <TClass::LoadClassInfo>: no interpreter information for class celeritas::ImportData is available even though it has a TClass initialization routine.; ```; A simple use of root works fine (eg. simple.root is created just fine). However loading the celeritas library:; ```; root[0] .L path_to_celeritas_build/libceleritas_root.so; ```; leads to a weird error about not find `path_to_root_installation/*bin*/libNet_rdict.pcm`. We trace is down to the line in `TCling.cxx`:; ```; std::string dyLibName = cling::DynamicLibraryManager::getSymbolLocation(triggerFunc);; ```; for `libNet` returning the name of executable (`blahblah/bin/root.exe`). However loading the slightly simpler library `libceleritas.root` (which is used by `libceleritas_root.so`), works just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162:828,Load,LoadClassInfo,828,https://root.cern,https://github.com/root-project/root/issues/10162,3,"['Load', 'load']","['LoadClassInfo', 'loading']"
Performance,"Hi,. when building with -DCMAKE_BUILD_TYPE=Debug; how should I set the -O flag level - using the CXXFLAGS; or using RelWithDebInfo or Optimized.; I see RelWithDebInfo is setting -03. . Our aim would be to get as much debug info as possible (thats one), and know how change optimization levels",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6846:134,Optimiz,Optimized,134,https://root.cern,https://github.com/root-project/root/issues/6846,2,"['Optimiz', 'optimiz']","['Optimized', 'optimization']"
Performance,"Hi,. when doing some more testing on the OptimizeBaskets() changes made last year, I found that getting the numbers of entries in the basket causes a disc read for each branch. This could be expensive and it is better to use the numbers of entries in the tree instead, as OptimizeBaskets() is called only on the first flush and most branches will have only one basket. Larger branches, may have more baskets, but overestimating their size by a few bytes is still a good approximation (and much better than an additional 4,000 disc reads (e.g. for ATLAS xAOD)). Thanks, Peter",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/369:41,Optimiz,OptimizeBaskets,41,https://root.cern,https://github.com/root-project/root/pull/369,2,['Optimiz'],['OptimizeBaskets']
Performance,"HistFactory -- zjets_2b_emu_OS_2b has no variation histograms ; [#2] ERROR:HistFactory -- could not find variable minusONE could not set it to constant. *** Break *** segmentation violation; ```. While the relevant variable is present in the XML file:; ```xml; <Measurement Name=""BLIND_separate_tt_Z_29IFB_Apr_29"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"" >; <POI>mu_ttbar mu_Z b</POI>; <ParamSetting Const=""True"">Lumi minusONE</ParamSetting>; </Measurement>; ```. The crash did not happen in ROOT 6.28.04. This is the relevant stack trace from the crash:. ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f86acb0fd4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f86aca5509b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f86ae5282a1 in TUnixSystem::StackTrace() () from /home/tomas/ROOT/root_install/lib/libCore.so; #4 0x00007f86ae527c14 in TUnixSystem::DispatchSignals(ESignals) () from /home/tomas/ROOT/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007f86ad4a0f34 in RooAbsArg::setAttribute(char const*, bool) () from /home/tomas/ROOT/root_install/lib/libRooFitCore.so; #7 0x00007f86abf40164 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #8 0x00007f86abf42e81 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelModel(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_inst",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225:2176,optimiz,optimized,2176,https://root.cern,https://github.com/root-project/root/issues/14225,1,['optimiz'],['optimized']
Performance,"HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105; #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:24009,optimiz,optimized,24009,https://root.cern,https://github.com/root-project/root/issues/8931,4,['optimiz'],['optimized']
Performance,How to set the debug build optimization level in -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6846:27,optimiz,optimization,27,https://root.cern,https://github.com/root-project/root/issues/6846,1,['optimiz'],['optimization']
Performance,I added the RooMCMC class into roofitcore. It is used as the RooMinuit class except that it is using a Monte Carlo Markov Chain as a minimizer. I also added a Tutorial to the roofit section where a basic comparison with Minuit can be performed. This is my first contribution to ROOT so I except that some thing will not be right.; But I compiled ROOT on my computer exactly with the changes I am committing here and everything went fine.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1327:234,perform,performed,234,https://root.cern,https://github.com/root-project/root/pull/1327,1,['perform'],['performed']
Performance,"I added the minimal infrastructure for performing end-to-end test of the correctness of the header files generated by SOFIE.; There are 3 ONNX models as an example. # How it works; In order to create the Google Test, CMake scans a given directory (i.e. input_models) looking for `.onnx` files then generates a target called `SofieCompileModels_ONNX` with the only purpose of generating the `.hxx` headers (output of SOFIE compilation). A file called `Emit.cxx` acts like a command line SOFIE compiler, called by the test target before building the final comprehensive GTest `TestCustomModels`. - [x] tested changes locally; - [x] added example models (Linear16, Linear32, Linear64)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8782:39,perform,performing,39,https://root.cern,https://github.com/root-project/root/pull/8782,1,['perform'],['performing']
Performance,"I already told Axel I was ""playing"" with clang-tidy. Here are some first results, basically low-hanging fruits only. I also included some of my own TMVA patches (more progress bars / unordered_map) and code modernization for TMVA. Biggest improvement is probably the missing TString move assignment operator, that makes sorting a vector<TString> much much faster if the strings are too long for short string optimization. Most of these patches can be applied in any order, they do not depend on each other. We can discuss the large modernize-loops commit. I didn't have enough time to go through the loop variable names. The autogenerated names are not always the best (especially if the name ""i"" is generated). Nevertheless I wanted to push all these changes before SB52 :-)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1585:408,optimiz,optimization,408,https://root.cern,https://github.com/root-project/root/pull/1585,1,['optimiz'],['optimization']
Performance,"I am using root version 5. My code ran on the cern grid (PID 2095060486) successfully and it did not give me any errors. But when I try to merge all the jobs (changed the command ""full"" into ""terminate""), it gives me the following error. ; ```; PIDResponse: Initialising AliAnalysisTaskPIDResponse; ==============================================================================; E-AddTaskTender: No supply added to tender, so tender not created. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fba2e69317c in waitpid () from /lib64/libc.so.6; #1 0x00007fba2e610e52 in do_system () from /lib64/libc.so.6; #2 0x00007fba37e843f9 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0xe50280) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/unix/src/TUnixSystem.cxx:2172; #3 TUnixSystem::StackTrace (this=0xe50280) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/unix/src/TUnixSystem.cxx:2419; #4 0x00007fba37e8638c in TUnixSystem::DispatchSignals (this=0xe50280, sig=kSigSegmentationViolation) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/unix/src/TUnixSystem.cxx:1294; #5 <signal handler called>; #6 0x00007fba36ddb793 in AliAnalysisTask::SetUsed (this=0x27a9980, flag=flag; entry=true) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ANALYSIS/ANALYSIS/AliAnalysisTask.cxx:540; #7 0x00007fba36dc471a in AliAnalysisManager::InitAnalysis (this=0x24a9f30) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ANALYSIS/ANALYSIS/AliAnalysisManager.cxx:1633; #8 0x00007fba36df65e1 in G__G__ANALYSIS_215_0_109 (result7=result7; entry=0x7ffcac8c2c90, funcname=funcname; entry=0x249df80 """", libp=libp; entry=0x7ffcac8c2cd0, hash=hash; entry=0) at /home/gnp78160/alice/sw/BUILD/ec8cb744704e066b1ec26fcf535125d0830c6a08/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:848,optimiz,optimized,848,https://root.cern,https://github.com/root-project/root/issues/6977,1,['optimiz'],['optimized']
Performance,"I believe this is what happens:; - In a ProductPdf, the values of the different components are precomputed & cached if `Optimize(2)` is activated. This caches PDF values **with** normalisation.; - If the ProductPdf is integrated, those PDF values are not re-evaluated, the pre-cached values are used. That means that already normalised PDF values are used to compute the integrals, and then the PDFs are divided by the now wrong integrals.; - The fix is to clone the terms that are multiplied for computing the integrals. This side-tracks the pre-cached values when integrals are computed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6315:109,cache,cached,109,https://root.cern,https://github.com/root-project/root/pull/6315,5,"['Optimiz', 'cache']","['Optimize', 'cached', 'caches']"
Performance,"I know this is not a small change, so any comments are welcome!. Background:; RooCintUtils was providing a wrapper between Cint and roofit. This implementation is very old, and is; using Cint iteration interface a lot. Recently we were trying to kill; RooCintUtils code where its using iteration and to change them to new; Cling interface in order to improve the performance. RooCintUtils is an utility class, so this is internal namespace which is only used inside roofit.; Since there are just 3 methods left, this RooCintUtils is no longer; worth spending a file. Let's delete this and migrate methods to; RooFactoryWSTool.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1722:363,perform,performance,363,https://root.cern,https://github.com/root-project/root/pull/1722,1,['perform'],['performance']
Performance,"I noticed that `roofit_legacy_eval_backend` variable in CMake was not; cached, and therefore it didn't propagate to the RooFit test; subdirectories. This meant several unit tests were not executed. This commit is fixing that. Furthermore, another commit in this PR reduces the time of the tutorial tests by reducing the number of toys in the RooStats tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14919:71,cache,cached,71,https://root.cern,https://github.com/root-project/root/pull/14919,1,['cache'],['cached']
Performance,"I noticed while debugging Minuit, that `MnMachinePrecision`'s constructor is called many times during minimization. Every time it is created, it goes through a loop to computes the machine precision. Since the number is the same every time, this is a waste of CPU cycles. This patch runs the loop only once and caches the result. New instances of MnMachinePrecision use the pre-computed value. The patch has no side effects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2215:311,cache,caches,311,https://root.cern,https://github.com/root-project/root/pull/2215,1,['cache'],['caches']
Performance,I previously implemented a check for ensuring that we never again; run into the problem that we get race conditions between generating; and linking dictionaries. This check however was commented out as; it falsely reported some dictionaries as being a possible source; for race conditions. The reason for this is that there are a few; libraries that only use ROOT_LINKER_LIBRARY for linking but; not ROOT_GENERATE_DICTIONARY for generating a dictionary. This; commit adds a whitelist for dictionaries that are allowed to; call ROOT_LINKER_LIBRARY like this and don't introduce any race; conditions (as they don't call ROOT_GENERATE_DICTIONARY and don't; have any depndency on a G__*.cxx source file).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3395:100,race condition,race conditions,100,https://root.cern,https://github.com/root-project/root/pull/3395,2,['race condition'],['race conditions']
Performance,"I think there's a potentially nasty backward incompatibility issue arising from this commit: https://github.com/root-project/root/commit/90ba866a65bd44e74a995aa330e0a950114443d6#diff-896028fd27621f8bfe9d0774c5529e27df523e5bd7fcfe2ac54f6fd1ced316f9. Details of how the problem appeared to me are below, but I will say that the problem went away when I compiled 6.22 branch with the `_value` data member removed (since it masks the RooAbsReal one). I am guessing here that a RooConstVar version 2 written to disk isn't properly loaded as a RooConstVar version 1. But what is odd is that under some circumstances it seems that the const var value is correctly loaded -- it seems connected to if the arg is ""dirty"" or not. Sorry for being a bit vague, I dont fully understand why it is sometimes a problem and sometimes not but the problem goes away when the above commit is effectively ported back into 6.22. The issue first appeared for me when I opened a workspace (I wanted to attach to this issue but it wont let me attach a root file) created in 6.23.01 in 6.22.00 ... the only warning I get is: . ```; Warning in <TStreamerInfo::BuildOld>: Cannot convert RooRealVarSharedProperties::_altBinning from type: unordered_map<string,RooAbsBinning*> to type: RooLinkedList, skip element; ```. But when I tried to evaluate the pdf in the workspace like this:. ```; RooWorkspace* w = f1.Get<RooWorkspace>(""Test"");; auto func = w->pdf(""SR_model"");; auto obs = w->var(""obs_x_SR"");; func->getVal(*obs);; ```. I got this:. ```; message : p.d.f normalization integral is zero or negative: 0; server values: !funcList=(L_x_bkg_SR_overallSyst_x_StatUncert = 47.1,L_x_sig_SR_overallSyst_x_StatUncert = 3.82), !coefList=(binWidth_obs_x_SR_0 = 5.5,binWidth_obs_x_SR_1 = 5.5); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7646:526,load,loaded,526,https://root.cern,https://github.com/root-project/root/issues/7646,2,['load'],['loaded']
Performance,"I use TTree objects with branches storing ULong64_t variables. When I use Tree::Scan() to printi these variables and perform mathematical operations, I encounter unexpected results. I wrote a following program to demonstrate the issue:; ```; #include <TROOT.h>; #include <TFile.h>; #include <TTree.h>; #include <TString.h>. #include <iostream>; #include <iomanip>. void write(ULong64_t x) {; TFile f(""f.root"", ""recreate"");; TTree t(""t"", ""t"");; t.Branch(""x"", &x, ""x/l"");; t.Fill();; t.Write();; f.Close();; std::cout<<""Written to tree: ""<<x<<""\n"";; }. void read(const ULong64_t x) {; TFile f(""f.root"");; TTree* t = (TTree*)(f.Get(""t""));; ; ULong64_t x1;; t->SetBranchAddress(""x"", &x1);; t->GetEntry(0);; std::cout<<""Read from tree: ""<<x1<<"" (""<<((x==x1)?""correct"":""incorrect"")<<"")\n"";; ; std::cout<<""\n"";; TString formula = ""x"";; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<x<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; std::cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7844:117,perform,perform,117,https://root.cern,https://github.com/root-project/root/issues/7844,1,['perform'],['perform']
Performance,"ILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default; ```. ### Expected behavior. no libMathMore ==> tutorials disabled for ctest. ### To Reproduce; https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/2577/BUILDTYPE=Release,COMPILER=default,LABEL=performance-cc8,SPEC=default/parsed_console/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8145:1352,perform,performance-,1352,https://root.cern,https://github.com/root-project/root/issues/8145,5,['perform'],['performance-']
Performance,IX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load modul,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4651,load,load,4651,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"Ideally we could stop generating rdict when runtime_cxxmodules is ON, like:; ```; if (!hasCxxModules && gDriverConfig->fInitializeStreamerInfoROOTFile) {; gDriverConfig->fInitializeStreamerInfoROOTFile(modGen.GetModuleFileName().c_str());; }; ```; but doing that caused many errors in dictionary generation. So; apparently we can't do that. Instead, we can stop loading them at; runtime which gives around 1MB of improvement in memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2912:362,load,loading,362,https://root.cern,https://github.com/root-project/root/pull/2912,1,['load'],['loading']
Performance,"If -Ofast is the optimization level, then -ffast-math should be enabled for GCC builds (Linux) to be able to activate ```__FAST_MATH__``` macros (order of flags is important apparently too)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/971:17,optimiz,optimization,17,https://root.cern,https://github.com/root-project/root/pull/971,1,['optimiz'],['optimization']
Performance,"If IMT is disabled, TTree::Fill() is constructing and destructing the; imtHelper object at every call and never using it. By moving its; declaration into the #ifdef, we avoid this penalty. This commit also; avoids the penalty of checking for fIMTEnabled if IMT is disabled. VTune performance analysis (comparison of two basic hotspots analyses):. ![screenshot](https://user-images.githubusercontent.com/249404/27871466-078e31c0-61a6-11e7-99f7-295d7282bc5c.png). Note the time difference in `TTree::Fill()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/741:280,perform,performance,280,https://root.cern,https://github.com/root-project/root/pull/741,1,['perform'],['performance']
Performance,"If `libPyROOT` is loaded with `gSystem->Load`, the static initialization block in `TMemoryRegulator.cxx` is executed and ends up invoking `PyCFunction_New`, which causes a crash from Python 3.7. The crash is due to Python not being initialized, so we need to protect that case. Note that when loading `libPyROOT` from `ROOT.py`, which is what happens when someone uses PyROOT, the Python interpreter already exists and is initialized, so invoking `PyCFunction_New` does not crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3111:18,load,loaded,18,https://root.cern,https://github.com/root-project/root/pull/3111,3,"['Load', 'load']","['Load', 'loaded', 'loading']"
Performance,"If a dictionary's headers are in the PCH, they get #includes at; startup. There is no need for forward declarations (to be parsed; at library load time) nor payloads (to be parsed at autoparsing time). This should reduce the effect we see with recursive parsing, and; speed up ROOT (e.g. but not only the startup).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1929:142,load,load,142,https://root.cern,https://github.com/root-project/root/pull/1929,1,['load'],['load']
Performance,"If a server is redirected, the cached normalization sets in `RooAbsPdf`; and `RooAddPdf` might not point to the right observables anymore. We; need to reset them. A unit test based on the code that originally unveiled this issue is; also implemented. This is a backport of https://github.com/root-project/root/pull/9552.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9560:31,cache,cached,31,https://root.cern,https://github.com/root-project/root/pull/9560,1,['cache'],['cached']
Performance,"If a server is redirected, the cached normalization sets in `RooAbsPdf`; and `RooAddPdf` might not point to the right observables anymore. We; need to reset them. This bug was discovered thanks to a [forum post](https://root-forum.cern.ch/t/problems-with-2d-simultaneous-fit/48249/4) that provided a code snippet that crashed in ROOT master and 6.24 because the cached normalization sets were used after the servers were redirected. Needs to be backported to 6.24.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9552:31,cache,cached,31,https://root.cern,https://github.com/root-project/root/pull/9552,2,['cache'],['cached']
Performance,"If an object inside a workspace is cloned, its pointer to the expensive; object cache inside the original workspace is copied. This creates a; dangling pointer when the original workspace is deleted. This excludes; the pointer from cloning, so clones will store their cache RooFit's; global cache or (after they have been assigned to a new workspace) in; their new workspace. Fixes root-project/root#6529",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6555:80,cache,cache,80,https://root.cern,https://github.com/root-project/root/pull/6555,3,['cache'],['cache']
Performance,"If an object inside a workspace is cloned, its pointer to the expensive; object cache inside the original workspace is copied. This creates a; dangling pointer when the original workspace is deleted. This excludes; the pointer from cloning, so clones will store their objects in RooFit's; global cache or (after they have been assigned to a new workspace) in; their new workspace. Fixes root-project/root#6529. (cherry picked from commit b4008a13853b9a341a779f73f9aa4c966719d5c1)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6581:80,cache,cache,80,https://root.cern,https://github.com/root-project/root/pull/6581,2,['cache'],['cache']
Performance,"If arbitrary macro executed when `RBrowser` is running and new RWebWindow is started,; RBrowser will intercept such call and can automatically embed ""known"" widgets. Usecase:; * start browser; * load `rbox.cxx` macro; * launch that macro. Before always new web browser with `RBox` drawings was started, now just new tab will be embed into `RBrowser`. Support `RCanvas`, `TCanvas` and `RGeomViewer`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9165:195,load,load,195,https://root.cern,https://github.com/root-project/root/pull/9165,1,['load'],['load']
Performance,"If class name in TKey not directly match with registered classes,; try to call `TClass::GetClass()` to check base classes - but without trying to load library.; Should allow to handle user-derived classes for TTree, histograms, ...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10109:146,load,load,146,https://root.cern,https://github.com/root-project/root/pull/10109,1,['load'],['load']
Performance,"If respective widget (TBrowser, TCanvas, TTreeViewer) want to start web-based implementation,; only minimal graphics initialization is necessary. Let possibility to really initialize graphics when web display is disabled and normal widget is started. In TCanvas use batch gui factory to create web-based TWebCanvas. It is done for the case when normal graphics (with its gui factory) was loaded, but then web display was enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11857:388,load,loaded,388,https://root.cern,https://github.com/root-project/root/pull/11857,1,['load'],['loaded']
Performance,"If the G__X filenames don't match with a module called X, then; CMake can't find the right dependencies and we get race conditions.; This patch fixes all a few more typos that caused those problems. Found by our debug code in RootNewMacros (which is now nearly silent).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/769:115,race condition,race conditions,115,https://root.cern,https://github.com/root-project/root/pull/769,1,['race condition'],['race conditions']
Performance,If the GetCheckSum value was already cached then the argument passed; to the function was not set. This now properly sets the value.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/93:37,cache,cached,37,https://root.cern,https://github.com/root-project/root/pull/93,1,['cache'],['cached']
Performance,"If the method `__str__` is already defined on the C++ side, don't inject; the cling based pretty printing. Related to ROOT-10967. @etejedor You see any performance implications with the check added below? Do we trigger lookups with the `dir(...)`? Just to be sure :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6119:152,perform,performance,152,https://root.cern,https://github.com/root-project/root/pull/6119,1,['perform'],['performance']
Performance,"If we call TCling::Load on an already loaded library we dlclose and dlopen the library. However, currently we do not have a facility to 'reload'/undo the effect of TCling::LoadPCM. This patch adds a section in the dictionary for de-registration which is reverse to TCling::RegisterModule -- TCling::UnRegisterModule. It tracks down which library is being reloaded and does not trigger a re-read of the rdict pcm. The current stub is can be further expanded to undo the effects caused by TCling::RegisterModule and/or improve the TCling shutdown by running the interpreter-dependent shutdown of the dictionary. The intent of this patch is to fix the failing OSX tests with. Error in <TCling::LoadPCM>: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420:19,Load,Load,19,https://root.cern,https://github.com/root-project/root/pull/5420,6,"['Load', 'load']","['Load', 'LoadPCM', 'loaded']"
Performance,"If we don't cache the PyROOT library, include dir and version variables, they will not be found by CMake in the loop over `CACHE_VARIABLES` which sets `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, and therefore `root-config --config` will not show them. This affects master and 6.22. This was reported by:; https://root-forum.cern.ch/t/python-in-root-6-22/39891. Note that `PYTHON_EXECUTABLE` is not cached, since caching it can interfere with the user setting of that same variable, when specifying that only one Python installation should be considered (if we cache it and reconfigure, CMake thinks it is the user who is setting it). This is not a problem, since `PYTHON_EXECUTABLE` was never offered in `root-config --config` in previous ROOT versions (the loop over `CACHE_VARIABLES` in the main `CMakeLists.txt` filters it out). The alternative to this implementation, if we don't want to cache these PyROOT variables, would be to add them to `ROOT_CONFIGARGS` in the main `CMakeLists.txt`, independently of `CACHE_VARIABLES`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5906:12,cache,cache,12,https://root.cern,https://github.com/root-project/root/pull/5906,4,['cache'],"['cache', 'cached']"
Performance,If we generate a dictionary with a C++ module with rootcling we; should write in the payload that we generated a C++ module.; This way we can actually print a *reliable* warning when we fail; to load the C++ module during runtime. Without this we can only; speculate if a missing C++ module is intentional.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1511:195,load,load,195,https://root.cern,https://github.com/root-project/root/pull/1511,1,['load'],['load']
Performance,"If we use -fimplicit-module-maps this means that cling will find all files called module.modulemap on the include paths. In certain cases the same modulemap can be present in two locations causing module redefinition errors. This patch teaches cling to work with explicitly specified modulemaps in -fno-implicit-module-maps mode. It moves the generation of the overlay file closer to the CIFactory so that we can reuse the modulemap loading code before the interpreter object was set up. The patch also turns off the implicit module map discovery and explicitly specifies the ROOT-related modulemap files. The modulemap files need to be enumerated in both TCling and rootcling. Rootcling requires -fno-rtti build mode and we cannot use the utilities in TROOT (also because rootcling_stage1 is built before libCore). This requires the extraction of the `GetSysRoot`, `GetIncludeDir` and `GetEtcDir` in the `ROOT::FoundationUtils` which is can be used throughout the entire core component. This fixes ROOT-10354.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4553:433,load,loading,433,https://root.cern,https://github.com/root-project/root/pull/4553,1,['load'],['loading']
Performance,"If we use more than 2 GB of memory on a 32bit Windows machine, the test; will break because of the memory limit. This happens if we run the tests; with a high concurrency, e.g., with 32 threads. Fix the concurrency to 8; threads to prevent this issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6842:159,concurren,concurrency,159,https://root.cern,https://github.com/root-project/root/pull/6842,2,['concurren'],['concurrency']
Performance,"Implement ""miss cache"" for TTreeCache",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/240:16,cache,cache,16,https://root.cern,https://github.com/root-project/root/pull/240,1,['cache'],['cache']
Performance,Implement parsing cache for the LookupHelper.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483:18,cache,cache,18,https://root.cern,https://github.com/root-project/root/pull/2483,1,['cache'],['cache']
Performance,"Implement two improvements to the RNTuple RDF scheduler for the multi-threaded case:. 1. Files of a chain are opened in batches the background: while a batch of files (batch size == number of slots) is processed, the next batch is opened.; 2. For the tail scheduling (multiple slots sharing the same files), the clones of the page source pointing to the same file do not need to re-read meta-data (anchor, header, footer) again. The patch results in a speed improvement of about 10% for AGC, EOS cached, 32 cores.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15952:64,multi-thread,multi-threaded,64,https://root.cern,https://github.com/root-project/root/pull/15952,2,"['cache', 'multi-thread']","['cached', 'multi-threaded']"
Performance,"Implements a basic `RRawFileUnix::ReadV` implementation using the `io_uring` async backend. ; Note: `ReadV` performs many disjoint reads on one file, not scatter IO using `readv`. Basic means: ; * simple error-handling ; * no interrupt considerations; * ~~no submission queue event batching (large `nReq` may exhaust memory resources)~~ implemented in 8c8a841 . The idea is to benchmark whether io_uring allows us to take advantage of modern IO devices, e.g. SSD queue depth etc. . I also factored out a common test header `io_test.hxx` from `test/RRawFile.cxx` for use in `test/RIoUring.cxx`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162:108,perform,performs,108,https://root.cern,https://github.com/root-project/root/pull/6162,3,"['perform', 'queue']","['performs', 'queue']"
Performance,Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage()`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15921:136,Load,LoadSealedPage,136,https://root.cern,https://github.com/root-project/root/pull/15921,1,['Load'],['LoadSealedPage']
Performance,Improve loading system fonts,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16229:8,load,loading,8,https://root.cern,https://github.com/root-project/root/issues/16229,1,['load'],['loading']
Performance,Improve performance of FastCGI by processing several requests in parallel.; Could be real alternative now to pure `civetweb` solution concerning performance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7117:8,perform,performance,8,https://root.cern,https://github.com/root-project/root/pull/7117,2,['perform'],['performance']
Performance,Improve performance of TBase64 coding/encoding,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4910:8,perform,performance,8,https://root.cern,https://github.com/root-project/root/pull/4910,1,['perform'],['performance']
Performance,Improve scalabity of TClass's object repository,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6559:8,scalab,scalabity,8,https://root.cern,https://github.com/root-project/root/pull/6559,1,['scalab'],['scalabity']
Performance,"Improve the error message when you try to build NumPy arrays with types; that the interpreter doesn't know about. Running the reproducer from the JIRA ticket, one now gets this output:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 13, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 243, in RDataFrameAsNumpy; raise RuntimeError(; RuntimeError: The column named ""foo"" is of type ""Foo"", which is not known to the ROOT interpreter. Please load the corresponding header files or dictionaries.; ```. This was the output before:; ```txt; TClass::Init:0: RuntimeWarning: no dictionary for class Foo is available; { ""a"", ""b"", ""foo"", ""foo.a"", ""foo.b"" }; Traceback (most recent call last):; File ""/home/rembserj/root-support/jira/ROOT-10930/reproducer.py"", line 5, in <module>; print(df.AsNumpy()); ^^^^^^^^^^^^; File ""/home/rembserj/spaces/master/install/lib/root/ROOT/_pythonization/_rdataframe.py"", line 236, in RDataFrameAsNumpy; result_ptrs[column] = df.Take[column_type](column); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: Could not find ""Take<Foo>"" (set cppyy.set_debug() for C++ errors):; Failed to instantiate ""Take<Foo>(std::string)""; ```. Closes the following Jira issue:; https://its.cern.ch/jira/browse/ROOT-10930",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16281:714,load,load,714,https://root.cern,https://github.com/root-project/root/pull/16281,1,['load'],['load']
Performance,Improve thread scability of TRef. Creating and looking up a lot of TRef from the same processID now has practically perfect weak scaling. Use Read/Write lock where relevant.; ; Cache the last result of TProcessID::IsValid and TProcessID::GetProcessWithUID as; most often the same PID will be used for most of the process lifetime.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2381:177,Cache,Cache,177,https://root.cern,https://github.com/root-project/root/pull/2381,1,['Cache'],['Cache']
Performance,"Improves the interplay of `RPage`, `RPageAllocator`, `RPagePool`, and `RPageSource/Sink`. - The `RPageAllocator` becomes an abstract interface for creating pages and allocating the page buffer.; - There is currently one concrete implementation, the `RPageAllocatorHeap`; - Pages are movable only and release the page buffer on destruction using the page allocator that created them; - The page pool owns pages and hands out `RPageRef` objects, which are proxies for the use counter (reference counter) of the page; - The `RPageRef` class is movable only and decreases the reference counter of the page in the page pool on destruction; - Remove the `RPageStorage::ReleasePage()` method; - `RPageSource::LoadPage` hands out `RPageRef` objects from their page pool",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16164:702,Load,LoadPage,702,https://root.cern,https://github.com/root-project/root/pull/16164,1,['Load'],['LoadPage']
Performance,"In CMake, variables like CMAKE_CXX_FLAGS_RELEASE etc should be cache; variables, so users can set them from outside. ROOT, however, FORCE; overwrote them, so users cannot change anything.; Now, the variables are not set by ROOT at all, we use the CMake; defaults.; It is fine to append or replace substrings, but the variables should NOT; be overwritten to give users some options. In case ROOT wants to move away from CMake defaults, it can be done like; this:; ```diff; diff --git a/CMakeLists.txt b/CMakeLists.txt; index e40b84a920..ab41612006 100644; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -29,6 +29,11 @@ endforeach(). include(cmake/modules/CaptureCommandLine.cmake). +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""); +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""); +; project(ROOT); ```. Fix #6577",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7932:63,cache,cache,63,https://root.cern,https://github.com/root-project/root/pull/7932,1,['cache'],['cache']
Performance,"In CompileMacro, the ""g"" option disables optimizations",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7377:41,optimiz,optimizations,41,https://root.cern,https://github.com/root-project/root/issues/7377,1,['optimiz'],['optimizations']
Performance,"In a basic [toy experiment example from CMS](https://cms-analysis.github.io/HiggsAnalysis-CombinedLimit/part5/longexercise/#advanced-section-b-computing-limits-with-toys) one can see that [RooProdPdf::factorizeProduct](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old/59) function takes a significant fraction of the runtime, most of which is spent in `RooArgSet::~RooArgSet()`. In this PR, the factorizeProduct method is rewritten with `std::vector`s that are kept alive during the whole loop over pdfs such that memory allocation is avoided in this performance-critical code. A more sustainable solution would be to reuse the model for every toy such that `factorizeProduct` is only called once, but since a lot of RooFit-based code probably doesn't do this I think it's worth speeding up this function. Igprof reports for the CMS combine toy experiment example:; * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old); * [with this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7907:587,perform,performance-critical,587,https://root.cern,https://github.com/root-project/root/pull/7907,1,['perform'],['performance-critical']
Performance,"In a binned likelihood fit, it is possible to skip the PDF normalization; when the unnormalized binned PDF can be interpreted directly in terms of; event yields. This is now done by default for models HistFactory models,; which results in great speedups for binned fits with many channels. Some; RooFit users like ATLAS were already using this for a long time, so this; feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,; add the `-disable_binned_fit_optimization` command line argument.; Directly in C++, you can also set the `binnedFitOptimization` to `false`; in the HistFactory configuration as follows:; ```C++; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});; ```; If your compiler doesn't support aggregate initialization with designators, you; need to create and edit the configuration struct explicitely:; ```C++; RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;; hfCfg.binnedFitOptimization = false;; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10562:412,optimiz,optimization,412,https://root.cern,https://github.com/root-project/root/pull/10562,1,['optimiz'],['optimization']
Performance,"In a nutshell, the condition was:; - Thread #1) a task ends and pushes back processing slot; - Thread #2) a task starts and overwrites thread-local TTreeReaderValues; - Thread #1) first task deletes TTreeReader. See https://github.com/root-project/root/commit/26e8ace6e47de6794ac9ec770c3bbff9b7f2e945. No performance penalty could be measured.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2956:305,perform,performance,305,https://root.cern,https://github.com/root-project/root/pull/2956,1,['perform'],['performance']
Performance,"In all sub-classes same part to store histogram, list of functions and basic attributes was duplicated. Now all this ; functionality collected in protected `TGraph::SaveHistogramAndFunctions` method. . Also provide `TGraph::SaveArray` method to optimize storage of TGraph arrays in macro - there are quite of them in `TGraphBentErrors` class. Use more compact form for arrays - 16 values in the line. Made `THStack::SavePrimitve()` re-entrant. Histograms names were changed when stored - now names set back. Check for `gPad` in several interactive methods like `TGraph::InsertPoint()` to avoid crash when called from macro. Exclude unnecessary casting to `TObjOptLink` - base `TObjLink` has all required virtual methods already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11884:245,optimiz,optimize,245,https://root.cern,https://github.com/root-project/root/pull/11884,1,['optimiz'],['optimize']
Performance,"In case of a weighted histogram a weight was applied to compute the expected error for every histogram when the error is not equal to sqrt(N). Now this is done only in case the user perform the fit using the new option ""PW"", otherwise it is assumed the histogram is not weighted and no correction is used for the expected error. See also post https://root-forum.cern.ch/t/does-pearson-chi-square-fit-use-expected-error-or-observed-error-in-th1-fit/55816/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13403:182,perform,perform,182,https://root.cern,https://github.com/root-project/root/pull/13403,1,['perform'],['perform']
Performance,In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Occasionally when loading a shared object the dynamic linker will tell us if something is missing (via dlerror) but only on the intialization path. This patch fixes ROOT-10637.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235:170,load,loading,170,https://root.cern,https://github.com/root-project/root/pull/5235,1,['load'],['loading']
Performance,"In clang/lib/Lex/HeaderSearch.cpp HeaderSearch::lookupModule(StringRef ModuleName, StringRef SearchName),;   1. It searches for ModuleName in modulemap directly under the search directory (E.g ""/usr/include"" or ""/home/yuka/build/include"");   2. It searches for ModuleName in modulemap in a subdirectory of the search directory with the same name as the module. If it couldn't find ModuleName in both 1 and 2, it comes to this line;  283     // Load all module maps in the immediate subdirectories of this search;  284     // directory.;  285     loadSubdirectoryModuleMaps(SearchDirs[Idx]);; Which results in iterating over all files in the search path for example ""/usr/include"". For us, we had a problem with CMSSW because Clang started to load our default installed root modulemap in ""usr/include/root/module.modulemap"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2213:444,Load,Load,444,https://root.cern,https://github.com/root-project/root/pull/2213,3,"['Load', 'load']","['Load', 'load', 'loadSubdirectoryModuleMaps']"
Performance,"In cmssw we see that depending on the invoking code the trigger function is; resolved sometimes with the symlink-ed path and sometimes without. This can be observed in the cmssw biglib setup where all plugin libraries; are assembled into a single library to yield performance improvement of (10%). This is seen in cms-sw/cmsdist#5172 where libHistPainter_rdict.pcm is not; found in the fPendingRdicts because it was registered with the 'other'; path. cc: @davidlange6, @smuzaffar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4288:264,perform,performance,264,https://root.cern,https://github.com/root-project/root/pull/4288,1,['perform'],['performance']
Performance,"In commit 2812b568571a6ff25c72fffe8a1ecd32b7d6f811, we improve scalability of `TF1` creation by adding an explicit parameter to the constructor to allow the user to request ""please do not add to global list"". However this was not applied to the classes derived from `TF1`, i.e. `TF2, TF3, etc.`. Philippe.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11460:63,scalab,scalability,63,https://root.cern,https://github.com/root-project/root/issues/11460,1,['scalab'],['scalability']
Performance,"In commit 79f2e3b0e5, TBranch::GetFreshBasket was effectively switch from always reallocating; the TBuffer (i.e. minimal memory use but maximal number of memory allocation) to always keeping; the TBuffer (i.e. maximal memory use but minimal number of memory allocations). This causes a problem in a use CMS use case where:; - files were kept open; - TTree were kept in memory; - has (at least) one branch with one unusually large basket (257Mb). This accumulated to increase the memory use from 1.8Gb to 2.9Gb. For now (quick fix), we use TBasket::Reset (tuned for writing) also for reading.; (This leads to spurrious large reallocation in case of a consecutive series of; large baskets).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6034:555,tune,tuned,555,https://root.cern,https://github.com/root-project/root/pull/6034,1,['tune'],['tuned']
Performance,"In db1a2ceb40 (#9352), the C++ version of the rf408 tutorial was; improved:. * simplify code; * remove race condition; * fix typos. In this commit, the same changes are also applied to the corresponding; Python tutorial. Furthermore, two problems exclusive to the Python version were fixed:. * Replace second `RooDataSetHelper` with `RooDataHistHelper`; * Fix line breaks in data printing (now the output is formatted just; like in the C++ version). Closes #9360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10893:103,race condition,race condition,103,https://root.cern,https://github.com/root-project/root/pull/10893,1,['race condition'],['race condition']
Performance,"In https://github.com/cms-sw/cmssw/issues/32734 report what looks like a race condition.; The crashing thread is at:; ```; #8 0x00002b8fb50c5252 in __assert_fail () from /lib64/libc.so.6; #9 0x00002b8fced4b768 in TCling::AutoLoad (this=0x2b8fb708cf80, cls=0x2b90068c9c80 ""size_t"", knowDictNotLoaded=false) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/slc7_amd64_gcc900/lcg/root/6.23.01-8e7a9c4406e195d049d6d9526c8e2ae6/root-6.23.01/core/metacling/src/TCling.cxx:6147; #10 0x00002b8fb38b5e09 in TEnum::GetEnum (enumName=0x2b90068c9c80 ""size_t"", sa=TEnum::kAutoload) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/slc7_amd64_gcc900/lcg/root/6.23.01-8e7a9c4406e195d049d6d9526c8e2ae6/root-6.23.01/core/meta/src/TEnum.cxx:274; #11 0x00002b8fb20c4ca8 in edm::TypeWithDict::byName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long) () from /cvmfs/cms-ib.cern.ch/nweek-02665/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT6_X_2021-01-24-0000/lib/slc7_amd64_gcc900/libFWCoreReflection.so; #12 0x00002b8fb20c519d in edm::TypeWithDict::TypeWithDict(TMethodArg*, long) () from /cvmfs/cms-ib.cern.ch/nweek-02665/slc7_amd64_gcc900/cms/cmssw/CMSSW_11_3_ROOT6_X_2021-01-24-0000/lib/slc7_amd64_gcc900/libFWCoreReflection.so; #13 0x00002b8ffa1de7dd in reco::checkMethod(edm::FunctionWithDict const&, edm::TypeWithDict const&, std::vector<std::variant<signed char, unsigned char, short, unsigned short, int, unsigned int, long, unsigned long, double, float, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::variant<signed char, unsigned char, short, unsigned short, int, unsigned int, long, unsigned long, double, float, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<std::variant<signed char, unsigned char, short, unsigned short, int, unsigned int, long, unsigned long, double, float, std::__cxx11::basic_string<char, std::char_traits<char>, std::a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7093:73,race condition,race condition,73,https://root.cern,https://github.com/root-project/root/issues/7093,1,['race condition'],['race condition']
Performance,"In most cases there is no need to generate raw data (vertices and triangles) for TGeoShape on the server side. JSROOT has complete logic to support all kind of TGeoShape classes. Therefore just TGeoShape instance send to client in JSON format. Only for TGeoCompositeShape plain ROOT code is better, therefore enabled by default. . Provide control when server-side or client-side code is used. ; Optimize JSON size - exclude typeinfo for most classes. ; Fix JSROOT code for TGeoArb8 class",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4173:395,Optimiz,Optimize,395,https://root.cern,https://github.com/root-project/root/pull/4173,1,['Optimiz'],['Optimize']
Performance,"In older cppyy, template instanciations are cached by fully-qualified; name directly in the namespace. Therefore, no extra code is required to; cover template instances in the pythonization code. With the new cppyy, this is not the case anymore, and instances are; instead cached in the `_instatiations` attribute of the template class [1]. This commit considers this, in a way that is backwards compatible also; with the older cppyy version that ROOT currently uses. A second commit in this PR removes some not so Pythonic ""C++-style"" code from PyROOT. [1] https://github.com/wlav/cppyy/commit/f2e1ea783afd2e4f195b6cbaf09d72b9fa3cd865. Spinoff of the bigger synchronization PR for easier review:; https://github.com/root-project/root/pull/14507",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14940:44,cache,cached,44,https://root.cern,https://github.com/root-project/root/pull/14940,2,['cache'],['cached']
Performance,"In order to specialize cling's value-printing logic for collections; we perform some SFINAE checks. Among other things, the checks; asserts that `++(obj.begin())` is well-formed. That compiles for; `std::vector` and other collections with ""fat"" iterators, but does; not compile for collections that use raw pointers as iterators:. ```cpp; auto beg(std::vector<int> &v) {; return v.begin();; }. int *beg2(std::vector<int> &v) {; return &v[0];; }. int main() {; std::vector<int> v{1,2,3};; beg(v) += 1;; //beg2(v) += 1; // does not compile - beg2(v) is not an lvalue. return 0;; }; ```. Requiring instead `std::begin(obj)` to be well-formed should be; backward compatible and it should allow collections that use raw; pointers as iterators to also be pretty-printed by cling. This fixes pretty-printing of RVec 2.0, i.e. the implementation based on LLVM's SmallVector, which uses raw pointers as iterators.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7800:72,perform,perform,72,https://root.cern,https://github.com/root-project/root/pull/7800,1,['perform'],['perform']
Performance,"In particular, `RJitted{Action,Filter,Define}::Run` and similar functions; can be performance hotspots. Avoid the nullptr check there. Many thanks to Josh Bendavid for reporting the problem.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9258:82,perform,performance,82,https://root.cern,https://github.com/root-project/root/pull/9258,1,['perform'],['performance']
Performance,"In particular, all creations and deletions of `shared_ptr`s have been removed from the event loop. This is a long due optimization that required several changes in the internal behaviour of TDataFrame{Impl,Action,Branch,Filter}. Unfortunately all changes are entangled, so the third commit is quite fat. The main change to the internal logic is that `TDataFrame{Action,Branch,Filter}` now store a tuple of `TDataFrameValue`s rather than (possibly null) shared pointers to `TTreeReaderValueBase`.; `TDataFrameValue` offers a transparent, unified interface to the different kinds of values that the nodes must handle: temporary columns, to be evaluated on-the-fly, `TTreeReaderArray`s that must be converted to `array_view`s and `TTreeReaderValue`s.; `TDataFrameValue` also incorporates validity checks on the value types, e.g. that arrays read via `TTreeReaderArray` are actually contiguous in memory and that the type of a temporary column is the same as the type expected by the node that makes use of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/442:118,optimiz,optimization,118,https://root.cern,https://github.com/root-project/root/pull/442,1,['optimiz'],['optimization']
Performance,"In particular, point out when we are doing something ""special"", i.e.; filling histograms with unkown axes. This requires extra care and; extra memory usage in multi-thread runs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9434:159,multi-thread,multi-thread,159,https://root.cern,https://github.com/root-project/root/pull/9434,1,['multi-thread'],['multi-thread']
Performance,"In preparation for fixing ROOT-10520, this PR moves the `RRawFile` classes out of the `Experimental` namespace into `Internal`. A follow-up pull request will modify the RDF SQLite data source such that it uses RRawFile, which in turn uses the plugin infrastructure to load the Davix libraries when necessary. Should be merged before #4878.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4877:268,load,load,268,https://root.cern,https://github.com/root-project/root/pull/4877,1,['load'],['load']
Performance,"In preparation of adding page checksums, it makes sense to enable `LoadSealedPage()` support with DAOS and the caging option (caging: storage of multiple pages in a single object). Even though the implementation is not very performant, it will later allow to streamline the test for checksum verification.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15892:67,Load,LoadSealedPage,67,https://root.cern,https://github.com/root-project/root/pull/15892,2,"['Load', 'perform']","['LoadSealedPage', 'performant']"
Performance,"In preparation of adding support for incremental loading page locations, the descriptor access in the page source needs to be locked. Currently, the descriptor is an immutable data structure. When page locations can be mapped in and out dynamically during the lifetime of an ntuple, the descriptor actually does change from time to time. This patch sets replaces direct descriptor access in the page source by a guarded access with a r/w lock. Read-only access is guarded by a shared lock, write access guarded by an exclusive lock. A follow-up PR will change the page source API such that `Attach()` does not load any page locations but another call will be needed to load the page locations of a given cluster range or event range.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10185:49,load,loading,49,https://root.cern,https://github.com/root-project/root/pull/10185,3,['load'],"['load', 'loading']"
Performance,"In previous allmodules&autoloading patch, we used callback from; DeserializationListener to get Decl and loaded corresponding libraries.; It worked, but the performance was bad because ROOT was loading; excessive libraries. In this patch, we use TCling::LazyFunctionCreatorAutoloadForModule. This; function gets callback when ""mangled_name"" was not found in loaded; libraries thus we have to the load corresponding library and lookup; again. I used unordered_map to store mangled identifier and library pair. I'm; doing an optimization by hashing mangled name and storing library not by; name but by uint8 and hold uint8-name information in another vector.; Also tried std::map but unorderd_map was more performant. There are; better hash table like:; https://probablydance.com/2018/05/28/a-new-fast-hash-table-in-response-to-googles-new-fast-hash-table/; we can try to use them if this part gets crucial. With this patch:; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.03 seconds; (TFile *) 0x562b37a14fe0; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.362307 seconds; sys time = 0.039741 seconds; res memory = 278.215 Mbytes; vir memory = 448.973 Mbytes; ```. W/o this patch:; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.08 seconds Cpu Time = 0.07 seconds; (TFile *) 0x5563018a1d30; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 1.524314 seconds; sys time = 0.157075 seconds; res memory = 546.867 Mbytes; vir memory = 895.184 Mbytes; ```. So it improves time by 4x times and memory by 2x.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2093:105,load,loaded,105,https://root.cern,https://github.com/root-project/root/pull/2093,7,"['load', 'optimiz', 'perform']","['load', 'loaded', 'loading', 'optimization', 'performance', 'performant']"
Performance,"In ranluxpp code, there is a left shift of negative value (c == -1); https://github.com/root-project/root/blob/master/math/mathcore/src/ranluxpp/mulmod.h#L169. Please note that this behavior is undefined per the C standard. See for example:; https://stackoverflow.com/questions/8415895/is-left-and-right-shifting-negative-integers-defined-behavior. You can rewrite the code like this:; ```; int64_t t2 = t0 - (int64_t) ( (uint64_t)c << 48);; ```. to solve the problem. It has no performance impact (verified on i7-8650U CPU with GCC v10.3.1). Here is the code I have used:; https://github.com/jirka-h/ranluxpp-portable",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8503:479,perform,performance,479,https://root.cern,https://github.com/root-project/root/issues/8503,1,['perform'],['performance']
Performance,"In several cases we have to store information in more than one dictionary.; There are two cases: (a) when dictionary becomes too big (windows) and; more importantly (b) when we want to have double vs Double32_t specializations.; This mode is known as MULTIDICT in cmake. The current implementation, generates 2 rdict files when MULTIDICT option; is specified. For example, `libGenVector_rdict.pcm` and; `libGenVector_G__GenVector32_rdict.pcm`. Looking at the call site of; `TCling::LoadPCM` it seems impossible to load the second version of the; dictionary. This patch removes the generation of it as it is unused.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3013:482,Load,LoadPCM,482,https://root.cern,https://github.com/root-project/root/pull/3013,2,"['Load', 'load']","['LoadPCM', 'load']"
Performance,"In some cases with template instantiation from pyroot together with RDF code which should fail to compile with clear error messages leads instead to cryptic output. Even worse, execution continues and gives undefined results. Example. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.helper[ROOT.std.vector[""double""]](). d = ROOT.ROOT.RDataFrame(1000). print(""Define with helper""); d = d.Define(""fx"", helper, []); print(""done define""). res = d.Sum(""fx""). print(res.GetValue()); ```. ```cpp; template <typename T>; class helper {. public:. helper() {}. std::size_t operator() () {; const double res = 0.;; res = T{0, 0}.size();; return res;; }. };; ```. Note the assignment to ```const double``` which should fail to compile. output (centos stream 8, root 6.26/10); ```; declare ret True; creating helper; Define with helper; IncrementalExecutor::executeFunction: symbol '_ZN6helperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of helper<std::vector<double, std::allocator<double> > >::operator()(); Maybe you need to load the corresponding shared library?; done define; 9.408421539373414e+16; ```. (if the spurious const is removed then instead one gets the correct output of 2000 and no error message)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854:1176,load,load,1176,https://root.cern,https://github.com/root-project/root/issues/11854,1,['load'],['load']
Performance,"In some old examples ""same"" and ""sames"" draw options for TF1 was used. ; Currently if ""sames"" used for TF1 - plain histogram painting is performed which is wrong for the function. Also improve PMC/PLC/PFC handling",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13934:137,perform,performed,137,https://root.cern,https://github.com/root-project/root/pull/13934,1,['perform'],['performed']
Performance,"In the Belle2 Software the libraries are linked with `--as-needed`; linker arguments and in conjunction with the weird loading order (binary; depends on ROOT, load python, load library depending on ROOT) we seem to; run into problems that libCling is unloaded earlier than expected. Since the `TCling_UnloadMarker` was introduced for Belle2 and removal; doesn't seem to cause any problems we discussed in [ROOT-10659](https://sft.its.cern.ch/jira/browse/ROOT-10659) to remove; this again and it so far all tests on our software stack didn't show any; problems with that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5548:119,load,loading,119,https://root.cern,https://github.com/root-project/root/pull/5548,3,['load'],"['load', 'loading']"
Performance,"In the ROOT 6.26 development cycle, the RooProdPdf was partially rewritten in moden C++ with less manual memory allocation to improve performance (PR #7907). In that PR, a unit test that verifies the RooProdPdf can correctly deal with factorizing PDFs was implemented. However, that test used an arbitrary PDF where the correct factorization was checked in a rather crude way: check by hashing the content of the RooProdPdf cache element for a given normalization set that said PR doesn't change any behavior (the reference hash was hardcoded in the unit test). This commit suggests a better alternative for the unit test, checking for a multidimensional product pdf of factorizing uniform pdfs that the pdf values for differenc normalization sets is as expected. This should cover the same functionality and is less fragile and implementation dependend than hashing the cache elements. This closes GitHub issue #12430, as the rewritten test is not affected anymore by the problem reported in that issue. The commit also removed the `RooProdPdf::writeCacheToStream()` function that was an implementation detail of the old unit test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12447:134,perform,performance,134,https://root.cern,https://github.com/root-project/root/pull/12447,3,"['cache', 'perform']","['cache', 'performance']"
Performance,"In the RooBatchCompute CPU library, all scalar inputs have to be copied; n times into a buffer that is as long as the SIMD registers, to allow; for vectorization in all cases. To avoid frequent memory allocations, this buffer was made a `static`; variable in the original implementation of the batchcompute library,; which of course made it non-threadsafe. This is now hitting us, because RooFit needs to be able to do multiple; fits concurrently. This is a requirement for CMSSW, and a blocker for; ROOT master adoption in CMSSW since the new CPU backend is the default:; https://github.com/cms-sw/cmsdist/pull/9034. This commit fixes the concurrency problem by doing the buffering in the; DataMaps that are used in the `RooFit::Evaluator`. Like this, multiple; computation graphs can be concurrently evaluated. It was tested with the ATLAS benchmarks in `rootbench` that the fitting; performance remains the same. This PR also makes some code style and memory management improvements documented in the commit messages. It also updates the documentation to make clear the new CPU backend is now the default, which was not done in this PR:; https://github.com/root-project/root/pull/14742",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14877:434,concurren,concurrently,434,https://root.cern,https://github.com/root-project/root/pull/14877,4,"['concurren', 'perform']","['concurrency', 'concurrently', 'performance']"
Performance,"In the RooRealIntegral constructor a integrand function.getVal() is called probably to initialise the cache. ; The intention is to remove this, and for the time being keep only if the normalisation set is defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10201:102,cache,cache,102,https://root.cern,https://github.com/root-project/root/pull/10201,1,['cache'],['cache']
Performance,"In the batched evaluation mode, the RunContext object that cached the values of nodes in the computation graph has so far been completely cleared after each NLL evaluation. In this PR, a new class `RunContextTracker` is introduced. It makes use of the `RooChangeTracker` class to determine whether a cached result for a given node needs to be recomputed after the change of a given fundamental parameter or not. This should speed up likelihood fits, as often only one fundamental parameter is changed at the time for the numeric gradient determination. For the example [rf303_conditional.C](https://root.cern.ch/doc/master/rf303__conditional_8C.html), a reproducible 10 % speedup was observed in batch mode after this PR. The speedup is expected to be more significant for wider computational graphs where more intermediate node results can be kept in the RunContext after each evaluation. This PR implements one of the ideas suggested in https://github.com/root-project/root/issues/6557, namely the bullet point of ""Don't clear all intermediate values in batch fits between fit cycles. Only the ones that changed."". This might be interesting for @lmoneta, @hageboeck and @manolismih.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7344:59,cache,cached,59,https://root.cern,https://github.com/root-project/root/pull/7344,2,['cache'],['cached']
Performance,"In the current development cycle leading up to ROOT 6.28, there was some performance regression in RooStats tutorials like `HybridInstructional.C`, which can be seen for example in this CI bot comment:. https://github.com/root-project/root/pull/11740#issuecomment-1333720963. For some reason, there are now numeric integrals in the log that don't pop up in ROOT 6.26:; ```; [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init([py_X_prior_b_X_px]_Norm[b]_denominator_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(py_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); [#1] INFO:NumericIntegration -- RooRealIntegral::init(px_Int[b]) using numeric integrator RooIntegrator1D to calculate Int(b); ```. RooFit in ROOT master needs to be fixed again such that these integrals don't happen. Since this is a performance regression, the priority to fix this is high. A simpler script to reproduce the performance regression outside of RooStats is this one:; ```C++; void repro(); {; RooWorkspace w;; w.factory(""Poisson::px(x[150,0,500],b[100,0,300])"");; w.factory(""Poisson::py(y[100,0,500],prod::taub(tau[1.],b))"");; w.factory(""Uniform::prior_b(b)"");; w.factory(""PROD::foo(px|b,py,prior_b)"");. RooRealVar& x = *w.var(""x"");; RooRealVar& b = *w.var(""b"");; RooAbsPdf& foo = *w.pdf(""foo"");. std::unique_ptr<RooAbsReal> integ{foo.createIntegral({b}, {b, x})};. for(int i = 0; i < 10; ++i) {; x.setVal(i % 500);. std::cout << integ->getVal() << std::endl;; }; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11814:73,perform,performance,73,https://root.cern,https://github.com/root-project/root/issues/11814,3,['perform'],['performance']
Performance,"In the future, we want separate computation graphs to share and re-use already; jitted lambdas. Without this patch, however, we would have an ordering; problem or a redefinition problem, because RDF2 might want to re-use/redefine; a lambda that RDF1 is _going to_ declare, but (since we delay all; jitting to right before an RDF's event loop) that might happen too late; for RDF2. With this change, all RDFs can jit all code that has been booked by all; other RDFs, resolving that problem. In addition, making less, ""fatter""; call to the interpreter is a performance optimization in itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5356:555,perform,performance,555,https://root.cern,https://github.com/root-project/root/pull/5356,2,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"In the hybrid mode when we use ROOT with modules and third party software without modules we have two name resolution systems: the global module index (GMI) and the rootmaps. In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates. This patch uses the GMI only when no rootmap file has told ROOT that it provides names for the given namespace. This fixes root-project/root#9583",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9592:278,load,load,278,https://root.cern,https://github.com/root-project/root/pull/9592,1,['load'],['load']
Performance,"In the original implementation of the RooBatchCompute library, the; evaluation was done multi-threaded in implicit multi-threading was; enabled in ROOT with `ROOT::EnableImplicitMT()`. This commit removes this feature now, because it was never really; validated, overlapped with other parallelization capabilities of RooFit,; and keeping it will have many unforeseen consequences on users now that; the new CPU evaluation backend is the default in RooFit. See also:; https://github.com/cms-sw/cmsdist/pull/9047",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14909:88,multi-thread,multi-threaded,88,https://root.cern,https://github.com/root-project/root/pull/14909,2,['multi-thread'],"['multi-threaded', 'multi-threading']"
Performance,"In the previous PR https://github.com/root-project/root/pull/7344, the biggest challenge has been to make `RooAbsOptTestStatistic` aware if batch mode is enabled to skip the cache optimization. The cleanest way of disabling the cache optimization is to do so directly in the `RooAbsOptTestStatistic` constructor so it is skipped. Unfortunately, the constructor of `RooAbsOptTestStatistic` and its base class `RooAbsTestStatistic` has already a very long signature, and it is already challenging to correctly align all parameters correctly with the position they should have. That's why I propose in this PR to use a struct to group all `RooAbsTestStatistic` parameters. This has several advantages:; * the struct can be initialized with tagged initialization, so alignment errors can be easily avoided; * if a new parameter is added (such as the `batchMode` flag in this PR), only the configuration struct declaration struct needs to be changed; * the default values are defined in a central place and not redundantly in all the relevant constructor declarations/`RooAbsTestStatistic::create` overrides. To make the review easier, this PR only includes the configuration refactor and disabling the cache optimization is batch mode is used. The `RunContextTracker`-related commits would follow in a separate PR, but I already tested that everything together does work and the unit test I created for the `RunContextTracker` succeeds. Two open questions are still:; * the `RooNLLVar::_batchEvaluations` flag is now redundant, but I still kept it to not have to change class versions too often. Is this acceptable?; * the new `RooAbsTestStatistic::_batchMode` takes part in the IO, entailing an increment of the class version. I that acceptable? The advantage here is that if one reads back a serialized RooFit workspace, it can remember if batch mode is used",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7616:174,cache,cache,174,https://root.cern,https://github.com/root-project/root/pull/7616,6,"['cache', 'optimiz']","['cache', 'optimization']"
Performance,"In this PR I implement the skeleton of the batch compute library as well as the new class RooFitDriver, which manages all the computations that need to be done in a fit and redirects them to the RooBatchCompute library. RooFitDriver: scans the computation graph for the dependencies, handles the memory needed for the computations, schedules the order of the computations (in the future it will also schedule multi-threaded computations). In other words it ""drives"" the computation library. RooBatchCompute: the library responsible for performing the actual computations. Each instance of it (eg RooBatchCompute_AVX, RooBatchCompute_CUDA etc) has architecture-specific code. To use it, one (a PDF or another RooAbsReal class) should call rbc::dispatch() and provide the enum name of the computing function to be used, the array in which the output should be store, the number of events and an rbc::DataMap object which holds the values for every parameter and observable in the fit model.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8240:409,multi-thread,multi-threaded,409,https://root.cern,https://github.com/root-project/root/pull/8240,2,"['multi-thread', 'perform']","['multi-threaded', 'performing']"
Performance,"In this PR:. - Protection against null pointer dereference if fOff==nullptr.; - Better error messages if the images cannot be loaded. . Tag @couet . Also, I've tried to compile ROOT version with -Dgminimal=ON but it turns out one needs also -Dasimage=ON to make it for ROOT possible to load the standard pixmaps. Would that make sense to include the support of these pixmaps into -Dgminimal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6714:126,load,loaded,126,https://root.cern,https://github.com/root-project/root/pull/6714,2,['load'],"['load', 'loaded']"
Performance,"Include `RBrowserData` and created `TCanvas` into `gROOT` list of cleanups. In case if any object is deleted, check if it also appears in list; of cached object in RBrowserData. Tries to catch situation when ; closing TFile let objects like histograms disappear. Also special handling of TFile which do not automatically has cleanup bit set and; therefore can be deleted without any notice for RBrowser. Update jsroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10673:147,cache,cached,147,https://root.cern,https://github.com/root-project/root/pull/10673,1,['cache'],['cached']
Performance,"Initializing RooBatchCompute takes over a second when CUDA is also; available on the system. It is unreasonable to do this everytime the; RooFit library is loaded. For example, the time of small unit tests was; completely dominated by the RooBatchCompute initialization time before; this commit. This change entailed another change in `Buffers.cxx` to avoid static; initialization problems. If possible, I'll still try to backport this to the release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9915:156,load,loaded,156,https://root.cern,https://github.com/root-project/root/pull/9915,1,['load'],['loaded']
Performance,Inline and access optimizations for TLorentzVector and TVector3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/165:18,optimiz,optimizations,18,https://root.cern,https://github.com/root-project/root/pull/165,2,['optimiz'],['optimizations']
Performance,"Instead of aborting on an `R__ASSERT`, with this patch RNTuple throws a meaningful exception when trying to open a file that was generated in an incompatible, future format. Fixes lazy loading of the model in `RNTupleReader::LoadEntry()` along the way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7739:185,load,loading,185,https://root.cern,https://github.com/root-project/root/pull/7739,2,"['Load', 'load']","['LoadEntry', 'loading']"
Performance,"Instead of looking for libraries resolving each unresolved symbol,; just load each lib resolving symbols: this will allow subsequent; missing symbols to be resolved from the loaded library quickly,; without touching disk. When loading an existing ACLiC library, and if we expect it; to contain the dependencies (explicit linking), just load itt,; instead of trying to (re-)determine its dependencies from its; undefined symbols: the outcome should be just the library; dependencies we expect the library to know already.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8017:73,load,load,73,https://root.cern,https://github.com/root-project/root/pull/8017,4,['load'],"['load', 'loaded', 'loading']"
Performance,"Instead of using one `RPageSinkBuf` per context, implement a synchronizing page sink that compresses pages and writes them through to storage, but only commits them when the context's cluster is ready. This uses much less memory, but results in higher lock contention and very fragmented files. ---. We likely don't want to merge this because buffered writing offers better scalability *and* allows to reorder pages, resulting in better read performance. But for future reference, this is how it could be implemented.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14939:374,scalab,scalability,374,https://root.cern,https://github.com/root-project/root/pull/14939,2,"['perform', 'scalab']","['performance', 'scalability']"
Performance,"Instead, split the code RDataFrame jits every 1k newlines and jit; in chunks. This avoids an explosion in the time required by; optimizer passes, which seem to not deal well with very large; function bodies. See https://github.com/root-project/root/issues/9312 and; https://github.com/root-project/root/issues/7604 for more discussion. @hahnjo can you confirm this helps? It brings jitting times down to reasonable (<1m times) for the cases I tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9328:128,optimiz,optimizer,128,https://root.cern,https://github.com/root-project/root/pull/9328,1,['optimiz'],['optimizer']
Performance,"Introduce *Auto* property for RColor; Before drawing RCanvas, one could call `canvas->AssignAutoColors();` to performs color assignment; Later method can be invoked automatically",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4511:110,perform,performs,110,https://root.cern,https://github.com/root-project/root/pull/4511,1,['perform'],['performs']
Performance,Introduce Optimize() drawing method for RH1/RH2/RH3 classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5980:10,Optimiz,Optimize,10,https://root.cern,https://github.com/root-project/root/pull/5980,1,['Optimiz'],['Optimize']
Performance,"Introduce the new `RooAbsPdf::createExpectedEvents()` method to; explicitly create an object that represents the expected number of; events. Like this, the expected number of events is fully exposed in the; computation graph, just like the integrals. This makes adding support of RooFit codegen+AD for extended fits; trivial, and also optimizes the BatchMode because the RooFitDriver can; de-duplicate integrals that appear both in the regular evaluation path; and `RooAbsPdf::expectedEvents()`. Now that a function that represents the expected events is; part of the computation graph, using it in the RooFit code generation; for the NLL is straight forward.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12998:335,optimiz,optimizes,335,https://root.cern,https://github.com/root-project/root/pull/12998,1,['optimiz'],['optimizes']
Performance,Introduces a new (for multiclass anyway) button in the gui that; when clicked displays one ROC curve per class. Each curve contains; the performance of all methods for that class. Uses the new ROCCurve class to calculate the curves.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/574:137,perform,performance,137,https://root.cern,https://github.com/root-project/root/pull/574,1,['perform'],['performance']
Performance,"Introduces the ""trivially constructible"" and ""trivially destructible"" traits for the types wrapped by an RField. Maintaining these traits allows for optimizations when reading collections: for collections of simple types (e.g., `int`s, `float`s), we don't need to call the element constructors and destructors when the collection changes size from event to event. For the vector-heavy ATLAS OpenData benchmark, this results in a 5-10% performance improvement both with RDF and with RNTuple views (hot disk cache, zstd compressed input). Fixes #10520",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11628:149,optimiz,optimizations,149,https://root.cern,https://github.com/root-project/root/pull/11628,3,"['cache', 'optimiz', 'perform']","['cache', 'optimizations', 'performance']"
Performance,"Introducing RTreeViewer, integrated with RBrowser. Activated when `TTree` item clicked in the browser. Main features:; 1. Edit draw expressions, cut, options; 2. Input help branch/leafs names as suggested items; 3. Select dialog with fulllist and search over branch list; 4. Drawing performed into recent canvas created in `RBrowser`. Several changes in RBrowser to let implement special features required by tree viewer - ; like activate canvas widget after tree draw. ![tree_draw0](https://user-images.githubusercontent.com/4936580/195348575-b207f199-35fc-4cd6-8d09-d2894c5dba16.png); ![tree_draw1](https://user-images.githubusercontent.com/4936580/195348581-30ca4aae-9d27-4f42-98e7-dc5b596cbefc.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11548:283,perform,performed,283,https://root.cern,https://github.com/root-project/root/pull/11548,1,['perform'],['performed']
Performance,"Ipopt ""Interior Point OPTimizer""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3249:22,OPTimiz,OPTimizer,22,https://root.cern,https://github.com/root-project/root/pull/3249,1,['OPTimiz'],['OPTimizer']
Performance,Issue with TClass object managed in case of multi-threaded 'rapid' set of dlopen/dlclose on same library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715:44,multi-thread,multi-threaded,44,https://root.cern,https://github.com/root-project/root/issues/12715,1,['multi-thread'],['multi-threaded']
Performance,"It causes dask to print a warning since they are; typically C++ headers, not Python modules. The `load=False` parameter only has an effect since dask.distributed v2023.06 and it will be ignored; by previous versions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13121:98,load,load,98,https://root.cern,https://github.com/root-project/root/pull/13121,1,['load'],['load']
Performance,It contains multiple performance improvements comparing to lz4 1.8.5.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4091:21,perform,performance,21,https://root.cern,https://github.com/root-project/root/pull/4091,1,['perform'],['performance']
Performance,"It costs a factor 3x in memory, so experiments might want to disable the optimization for large models with many fields - in that case it is not expected to provide a sufficient benefit because most columns will have less elements per cluster than the target page size.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15243:73,optimiz,optimization,73,https://root.cern,https://github.com/root-project/root/pull/15243,1,['optimiz'],['optimization']
Performance,"It generates all stack primitives - axis histogram and legend as Paint; method does, but does not perform Paint. ; Will be used in TWebCanvas. Replace NULL by nullptr in hist tutorials",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11678:98,perform,perform,98,https://root.cern,https://github.com/root-project/root/pull/11678,1,['perform'],['perform']
Performance,It is a new attempt to land Cloudflare ZLIB. ; More information about performance numbers are presented in ROOT I/O meeting: https://indico.cern.ch/event/696030/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2806:70,perform,performance,70,https://root.cern,https://github.com/root-project/root/pull/2806,1,['perform'],['performance']
Performance,"It is fixing explicit C++ modules failing with:. `In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:8:; In file included from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/tbb.h:76:; /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/build/include/tbb/recursive_mutex.h:54:47: error: declaration of 'PTHREAD_MUTEX_RECURSIVE' must be imported from module 'Imt.ROOT/TTaskGroup.hxx' before it is required; pthread_mutexattr_settype( &mtx_attr, PTHREAD_MUTEX_RECURSIVE );; ^; In module 'Imt' imported from /data/sftnight/workspace/root-benchmark-compile-cxxmodule/BUILDTYPE/Release/COMPILER/clang_gcc62/LABEL/performance-cc7/root/core/imt/src/TThreadExecutor.cxx:1:; /usr/include/pthread.h:51:3: note: previous declaration is here; PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,; ^; 1 error generated.`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3374:175,perform,performance-,175,https://root.cern,https://github.com/root-project/root/pull/3374,4,['perform'],['performance-']
Performance,"It is not necessary here, since it is already loaded due to the; from libROOTPythonizations import ...; earlier in the file, and it fails when the python module is not in the; library path (it is in the python path only). /usr/lib64/python3.9/site-packages/libROOTPythonizations3_9.cpython-39-x86_64-linux-gnu.so. https://bugzilla.redhat.com/show_bug.cgi?id=1900661",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6883:46,load,loaded,46,https://root.cern,https://github.com/root-project/root/pull/6883,1,['load'],['loaded']
Performance,"It is now possible to create independent TMVA::Readers and use; them simultaneously on different threads.; Training of MVAs is still only safe single-threaded. In addition,; it is not safe to use multiple instances of MethodCFMlpANN either; single or multi-threaded because of a global 'this' pointer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/25:251,multi-thread,multi-threaded,251,https://root.cern,https://github.com/root-project/root/pull/25,1,['multi-thread'],['multi-threaded']
Performance,"It is sometimes not possible for a TDataSource to know the full range of entries upfront. To cope with these cases, we need TDataSource to somehow communicate to TDataFrame when it can finish looping -- dynamically, as we go, we are done when we are done. The solution proposed in this PR is that TDataFrame will call `TDataSource::GetEntryRanges` repeatedly instead of just once: after processing a batch of entry ranges, TDF will ask for another one, then another one, until the TDataSource replies with an empty vector, which signals the end of the event-loop. The current TDataSources required small modification to make sure that the second time `GetEntryRanges` is invoked it returns an empty vector. Furthermore, as TDataFrame might use the same TDataSource for multiple event-loops, the TDataSource must setup `fEntryRanges` at the beginning of each event-loop. This is the rationale for the introduction of the `TDataSource::Init` and `TDataSource::Finalise` methods, that can optionally be implemented by the concrete data-source classes to deal with per-event-loop initialization and clean-up operations.; I think the addition of `Init` might be a good thing overall because currently we high-jack `SetNSlots` to perform initialization operations -- `Init` seems like a more proper place. `Finalise` is introduced for symmetry.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1219:1224,perform,perform,1224,https://root.cern,https://github.com/root-project/root/pull/1219,1,['perform'],['perform']
Performance,It looks like without ROOT pcm but with a ClassInfo/Decl available but not loaded then the base class would not be properly setup.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6035:75,load,loaded,75,https://root.cern,https://github.com/root-project/root/pull/6035,1,['load'],['loaded']
Performance,"It modifies the interpreter state, thus needs locking. UPDATE:. As suggested by @hahnjo I tried to write a small unit test to see the data race in action. In fact it was pretty easy, and it also highlighted another data race in `TCling::LoadFile`. In the latest commits I take care both of adding the lock to the other method and adding the test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13348:237,Load,LoadFile,237,https://root.cern,https://github.com/root-project/root/pull/13348,1,['Load'],['LoadFile']
Performance,"It performs asynchronous canvas update. In case of web-based canvas triggers update of the canvas; on the client side, but does not wait that real update is completed.; Avoids blocking of caller thread.; Have to be used if called from other web-based widget to avoid logical; dead-locks. In case of normal canvas just canvas->Update() is performed. Use it in `RFitPanel` and `RBrowser`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13552:3,perform,performs,3,https://root.cern,https://github.com/root-project/root/pull/13552,2,['perform'],"['performed', 'performs']"
Performance,"It returns the `std::vector<T, RAdoptAllocator<T>>` data member by; reference, but in the near future we want to remove the data member; (in the context of adding a small buffer optimization to RVec).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7226:178,optimiz,optimization,178,https://root.cern,https://github.com/root-project/root/pull/7226,1,['optimiz'],['optimization']
Performance,"It seems that VecCore is a wrapper over Vc, however ROOT uses Vc in the context; of VecCore but also standalone. Adapt CMake to only try to load the Vc module when the Vc option is on as VecCore; might have not exposed Vc... This change improves root-project/root@f2ac9b349f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9572:140,load,load,140,https://root.cern,https://github.com/root-project/root/pull/9572,1,['load'],['load']
Performance,"It was tested that this works by building openssl on Arch Linux in a random directory and setting this as the `OPENSSL_ROOT_DIR`. Then, I checked in the cache for the xrootd builtin external project if openssl was found in the desired location:; ```; builtins/xrootd/BUILTIN_XROOTD-prefix/src/BUILTIN_XROOTD-build/CMakeCache.txt; ```. This was the case indeed. Closes #10075.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15697:153,cache,cache,153,https://root.cern,https://github.com/root-project/root/pull/15697,1,['cache'],['cache']
Performance,"It's a minor change that might or might not give better performace, but at least it means we can close this JIRA ticket:. https://sft.its.cern.ch/jira/browse/ROOT-6954",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14143:56,perform,performace,56,https://root.cern,https://github.com/root-project/root/pull/14143,1,['perform'],['performace']
Performance,"It's important the the AD code path performance that the analytic integrals in the generated RooFit code don't end up in the NLL loop bodies. This PR generalizes some implementation details of the BatchMode to figure out which observables are scalar, and if they are, write them outside of the loop body. Furthermore, some code from the BatchMode is reused to fill also the vector observables for the generated code. When benchmarking the minimization of the model in `testRooFuncWrapper`, the situation looks now very good for RooFit code-gen that is as fast as the BatchMode here, even if it has not caching and no vectorization. Also, the AD mode is faster than vanilla RooFit, even if the number of parameters is not very high. ```txt; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; NllReferenceMinimization/0/10/iterations:100 0.488 ms 0.487 ms 100; NllReferenceMinimization/0/100/iterations:100 0.382 ms 0.381 ms 100; NllReferenceMinimization/0/1000/iterations:100 3.63 ms 3.62 ms 100; NllReferenceMinimization/0/10000/iterations:100 39.6 ms 39.6 ms 100; NllBatchModeMinimization/1/10/iterations:100 0.090 ms 0.090 ms 100; NllBatchModeMinimization/1/100/iterations:100 0.163 ms 0.163 ms 100; NllBatchModeMinimization/1/1000/iterations:100 0.882 ms 0.881 ms 100; NllBatchModeMinimization/1/10000/iterations:100 8.64 ms 8.64 ms 100; NllCodeSquash_NumDiff/2/10/iterations:100 0.053 ms 0.053 ms 100; NllCodeSquash_NumDiff/2/100/iterations:100 0.124 ms 0.124 ms 100; NllCodeSquash_NumDiff/2/1000/iterations:100 0.887 ms 0.886 ms 100; NllCodeSquash_NumDiff/2/10000/iterations:100 10.1 ms 10.1 ms 100; NllCodeSquash_AD/3/10/iterations:100 0.057 ms 0.057 ms 100; NllCodeSquash_AD/3/100/iterations:100 0.186 ms 0.186 ms 100; NllCodeSquash_AD/3/1000/iterations:100 1.44 ms 1.44 ms 100; NllCodeSquash_AD/3/10000/iterations:100 17.4 ms 17.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12656:36,perform,performance,36,https://root.cern,https://github.com/root-project/root/pull/12656,1,['perform'],['performance']
Performance,"JsMVA: use latest JSROOT, use `/static` path to load code",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12484:48,load,load,48,https://root.cern,https://github.com/root-project/root/pull/12484,1,['load'],['load']
Performance,Jupyroot has problems loading JSRoot.core.js in jupyterhub/jupyterlab 3.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8459:22,load,loading,22,https://root.cern,https://github.com/root-project/root/issues/8459,1,['load'],['loading']
Performance,"Jupyter may be configured to be served on different base url's, so we cannot assume that is accessible in `/`. This is the case, for example, when it's used together with JupyterHub (like SWAN), where the base url is `/user/_username_/`.; This PR fixes the way jsROOT is loaded in order to take that into account. . For that, I've removed `/static/`, which forced the absolute url to the file, and let requireJs apply its own configuration (which takes the base url into account). For Jupyterlab, I also load requireJs with the base url. In case requireJs is not available (maybe it will be possible to install Jupyterlab without Jupyter Notebooks in the future?), it falls back to a cdn to load it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4652:271,load,loaded,271,https://root.cern,https://github.com/root-project/root/pull/4652,3,['load'],"['load', 'loaded']"
Performance,"KernelTrivial.cxx:80:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 3: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:80; /opt/root_src/tmva/tmva/src/PDF.cxx:267:8: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Passing value via 1st parameter 'hist' in /opt/root_src/tmva/tmva/src/PDF.cxx:188; 2: Calling 'PDF::BuildPDF' in /opt/root_src/tmva/tmva/src/PDF.cxx:188; 3: Assuming 'hist' is equal to NULL in /opt/root_src/tmva/tmva/src/PDF.cxx:264; 4: Taking true branch in /opt/root_src/tmva/tmva/src/PDF.cxx:264; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDF.cxx:267; /opt/root_src/tmva/tmva/src/Reader.cxx:384:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:110064,load,loaded,110064,https://root.cern,https://github.com/root-project/root/issues/7526,1,['load'],['loaded']
Performance,"LLVM component must be registered as LLVM_LINK_COMPONENTS to be compatible with LLVM Dylib. Otherwise they are loaded twice in the final binary, once through LLVM Dylmib and once through individual component, and this results in some options being registered twice. Fix root-project/cling#440",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11703:111,load,loaded,111,https://root.cern,https://github.com/root-project/root/pull/11703,1,['load'],['loaded']
Performance,Let test webgui integrity; - if THttpServer work properly; - if JSROOT loads on client side; - if communication runs between server and clients,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7901:71,load,loads,71,https://root.cern,https://github.com/root-project/root/pull/7901,1,['load'],['loads']
Performance,Let use browser `import()` function to control proper loading of JSROOT modules. ; No need to use older `JSRoot.core.js`. To be tested,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16023:54,load,loading,54,https://root.cern,https://github.com/root-project/root/pull/16023,1,['load'],['loading']
Performance,"Like with chromium, perform drawing without creation of real window.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/810:20,perform,perform,20,https://root.cern,https://github.com/root-project/root/pull/810,1,['perform'],['perform']
Performance,"List of relevant PR missing in the release notes for 6.24. - XROOTD #7380 ; - TMVA : optimizer options : #7318; - ChangeLabel: #7294; - Buffer Merger improvements : #7286; - Eve7: The first implementation of log view #7270; - TMVA: Update Keras tutorials using tensorflow.keras #7255; - builtins: Zstd 1.4.8 #7214; - RooFit: warning message for RooAddPdf without norm set: #7129 ; - RooFit: Improve plotting of RooBinSamplingPdf. #7110; - Hist: Fixes and improvements for the TKDE class #7096; - Fix a memory leak in TF1::Copy #7035; - Fix for new version of cudnn version 8 #7003; - Minuit2: Use Numerical gradient as input to the seed generator when using external gradients in Minuit2 #7001; - TF1: Enable using Automatic differentiation for computing Parameter Gradient in TF1 #6956; - Math: Fix correction factor for Confidence level in ROOT::Fit::FitResult #6902; - TMVA: Implement MethodCategory::GetMulticlassValues() #6886; - Hist: Add THistRange class defining a generic histogram range and its iterator #6795; - TMVA: Support for Keras 2.4 (tf.keras) #6793; - Eve-7: Add example of calorimeter representation of REveDataCollection #6783; - Math: Fix BinData copy constructor #6776; - [tmva] Add possibility to make ROC curve for the training dataset from TMVA::Factory #6724; - Math: Changes in TRandom3::GetSeed #6723; - Minuit2: new Minuit2 logging #6705; - ntuple] Several interface improvements (unique pointer, const) #6655; - Optimize TPrincipal::AddRow function #6630",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7858:85,optimiz,optimizer,85,https://root.cern,https://github.com/root-project/root/issues/7858,2,"['Optimiz', 'optimiz']","['Optimize', 'optimizer']"
Performance,Little optimization for the cling pointer check.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4162:7,optimiz,optimization,7,https://root.cern,https://github.com/root-project/root/pull/4162,1,['optimiz'],['optimization']
Performance,Load all modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1354:0,Load,Load,0,https://root.cern,https://github.com/root-project/root/pull/1354,1,['Load'],['Load']
Performance,Load dependent libraries as part of AutoLoading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5486:0,Load,Load,0,https://root.cern,https://github.com/root-project/root/pull/5486,1,['Load'],['Load']
Performance,LoadCoreModules crashes when one of the core modules wasn't; found as we call `findModule` and then dereference that result; unconditionally. It also calls `findModule` and then passes; the found module name again to `findModule` in the `LoadModule`; function. This commit refactors this code and fixes those bugs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1391:0,Load,LoadCoreModules,0,https://root.cern,https://github.com/root-project/root/pull/1391,2,['Load'],"['LoadCoreModules', 'LoadModule']"
Performance,Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm; 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm; 0.0000 ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:10070,Load,Loading,10070,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm; 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm; 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:5228,Load,Loading,5228,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm; 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm; 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm; 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm; 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm; 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm; 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm; 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Post,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:3293,Load,Loading,3293,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm; 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:10203,Load,Loading,10203,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,Loading same macro twice with changed definition does not work.; Therefore just split macro and load main macro once library; compiled and loaded. Also add generated includes - otherwise; CLING does not like to work. Solving issue from forum: https://root-forum.cern.ch/t/43535,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7203:0,Load,Loading,0,https://root.cern,https://github.com/root-project/root/pull/7203,3,"['Load', 'load']","['Loading', 'load', 'loaded']"
Performance,"Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10618:441,perform,performance,441,https://root.cern,https://github.com/root-project/root/issues/10618,1,['perform'],['performance']
Performance,"MMapper::releaseMappedMemory (; this=0x7ffff6a3c620 <llvm::(anonymous namespace)::DefaultMMapperInstance>, M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:263; #2 0x00007fffee498701 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:237; #3 0x00007fffee4987a0 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:239; #4 0x00007fffee41a1b4 in std::default_delete<llvm::RuntimeDyld::MemoryManager>::operator() (this=0x5555587feb70, ; __ptr=0x5555588b0570) at /usr/include/c++/11/bits/unique_ptr.h:85; #5 0x00007fffee418420 in std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >::~unique_ptr (this=0x5555587feb70, __in_chrg=<optimized out>); at /usr/include/c++/11/bits/unique_ptr.h:361; #6 0x00007fffee41f27f in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> > > (__pointer=0x5555587feb70) at /usr/include/c++/11/bits/stl_construct.h:151; #7 0x00007fffee41e671 in std::_Destroy_aux<false>::__destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:163; #8 0x00007fffee41cf98 in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:196; #9 0x00007fffee41ae3b in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManag",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10898:1391,optimiz,optimized,1391,https://root.cern,https://github.com/root-project/root/issues/10898,1,['optimiz'],['optimized']
Performance,"MSSW_13_3_ROOT6_X_2023-08-07-2300/src/Alignment/OfflineValidation/test/inspectData_cfg.py unitTest=True trackCollection=ALCARECOTkAlCosmicsCTF0T; ``` . And for gdb:; ```; Singularity> gdb cmsRun; (gdb) run /cvmfs/cms-ib.cern.ch/week1/el8_amd64_gcc11/cms/cmssw/CMSSW_13_3_ROOT6_X_2023-08-07-2300/src/Alignment/OfflineValidation/test/inspectData_cfg.py unitTest=True trackCollection=ALCARECOTkAlCosmicsCTF0T; ```. A sample stacktrace upon destruction of the `TString`:; ```; Thread 1 (Thread 0x7ffff413fc80 (LWP 3407688) ""cmsRun""):; #0 tcmalloc::SLL_PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, head=0x45a0a0) at src/linked_list.h:88; #1 tcmalloc::SLL_PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, head=0x45a0a0) at src/linked_list.h:79; #2 tcmalloc::ThreadCache::FreeList::PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, this=0x45a0a0) at src/thread_cache.h:238; #3 tcmalloc::ThreadCache::ReleaseToCentralCache (this=this@entry=0x45a040, src=src@entry=0x45a0a0, cl=<optimized out>, N=N@entry=32) at src/thread_cache.cc:206; #4 0x00007ffff57dff2c in tcmalloc::ThreadCache::ListTooLong (this=0x45a040, list=0x45a0a0, cl=<optimized out>) at src/thread_cache.cc:164; #5 0x00007ffff6dc2465 in TString::UnLink (this=0xcbb820) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/inc/TString.h:265; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007ffff68a2266 in TString::~TString (this=0xcbb820, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TString.cxx:249; #7 0x00007ffff68ac37f in TStyle::~TStyle (this=0xcbb500, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TSt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429:1828,optimiz,optimized,1828,https://root.cern,https://github.com/root-project/root/issues/13429,1,['optimiz'],['optimized']
Performance,Make G__FastAllocString cache thread safe,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/34:24,cache,cache,24,https://root.cern,https://github.com/root-project/root/pull/34,1,['cache'],['cache']
Performance,"Making the decision on the scheduling mode based on `IsImpliciMTEnabled` would mean forcing users to run `EnableImplicitMT` every time they want to submit distributed graphs concurrently. If the user has already chosen to run a distributed RDataFrame application, RunGraphs should just submit all the computations concurrently to the distributed scheduler. The ""sequential"" mode of operation can still be achieved by e.g. calling `GetValue` on distributed proxies in a for loop.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13344:174,concurren,concurrently,174,https://root.cern,https://github.com/root-project/root/pull/13344,2,['concurren'],['concurrently']
Performance,"Measurements by @sciaba show that, at high thread counts, RDF multi-thread event loops on remote data suffer a scaling breakdown because of some throttling mechanisms in xrootd. Working around the throttling is possible, but it's unclear whether it's the right thing:tm: to do in all cases. Namely: ; - setting XRD_PARALLELEVTLOOP as in https://github.com/root-project/root/issues/7709; - faking different clients for each thread or each file, e.g. by using URLs like `root://client1@eoscms.cern.ch//eos/myfile.root`, works around connection multiplexing. The degradation is severe enough that I labeled it a bug (preliminary benchmarks showed a speed-up of more than one order of magnitude for high thread counts in the same application with/without the workarounds above).; Multi-process event loops such as those of distributed RDF should not be affected. A link to the exact findings can be added to this issue when they are public, for now this is a reminder that there is a problem to be looked at. EDIT:; For completeness, [this other PR](https://github.com/root-project/root/pull/11631) by @bendavid addresses orthogonal thread contention issues in remote file access with ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12621:62,multi-thread,multi-thread,62,https://root.cern,https://github.com/root-project/root/issues/12621,1,['multi-thread'],['multi-thread']
Performance,Measurements with the parallel writer show a regression of compression bandwidth with large page sizes of up to 1 MiB because they do not fit into the L2 cache anymore. Reduce the default to be more cache friendly and restore scaling when fully using all cores of a machine.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16453:154,cache,cache,154,https://root.cern,https://github.com/root-project/root/pull/16453,2,['cache'],['cache']
Performance,"Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"", va=0x7ffcad78dbb0) at ../core/base/src/TObject.cxx:860; #7 0x00007fea7e92acd1 in TObject::Fatal (this=0x7ffcad78f2b0, location=0x7fea7f1cb532 ""RecursiveRemove"", fmt=0x7fea7f1cb4c8 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at ../core/base/src/TObject.cxx:925; #8 0x00007fea7ef90e56 in TFileMerger::RecursiveRemove (this=0x7ffcad78f2b0, obj=0x559367a40820) at ../io/io/src/TFileMerger.cxx:1081; #9 0x00007fea7e9ad0bf in THashList::RecursiveRemove (this=0x5593666f1840, obj=0x559367a40820) at ../core/cont/src/THashList.cxx:354; #10 0x00007fea7e8d4e14 in TROOT::RecursiveRemove (this=0x7fea7ec46740 <ROOT::Internal::GetROOT1()::alloc>, obj=0x559367a40820) at ../core/base/src/TROOT.cxx:2455; #11 0x00007fea80417f82 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at ../core/base/inc/TROOT.h:398; #12 0x00007fea7e927b18 in TNamed::~TNamed (this=0x559367a40820, __in_chrg=<optimized out>) at ../core/base/src/TNamed.cxx:45; #13 0x00007fea7e9081d5 in TDirectory::~TDirectory (this=0x559367a40820, __in_chrg=<optimized out>) at ../core/base/src/TDirectory.cxx:117; #14 0x00007fea7ef7c856 in TDirectoryFile::~TDirectoryFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TDirectoryFile.cxx:202; #15 0x00007fea7ef9673f in TFile::~TFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TFile.cxx:566; #16 0x00007fea7ef96776 in TFile::~TFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TFile.cxx:566; #17 0x00007fea7e9288d9 in TObject::Delete (this=0x559367a40820) at ../core/base/src/TObject.cxx:178; #18 0x00007fea802bbf82 in TTree::ChangeFile (this=0x559368ca6c20, file=0x559367a40820) at ../tree/tree/src/TTree.cxx:2813; #19 0x00007fea802bf66e in TTree::CopyEntries (this=0x559368ca6c20, tree=0x559368ca7a30, nentries=53446198, option=0x7ffcad78e7a1 "" fast"", needCopyAddresses=true) at ../",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10102:3908,optimiz,optimized,3908,https://root.cern,https://github.com/root-project/root/issues/10102,1,['optimiz'],['optimized']
Performance,"MetaSema::AR_Success) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; 2187: #29 0x00007f2a50bb2833 in cling::MetaParser::isCommand (this=<optimized out>, actionResult=<optimized out>, resultValue=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; 2187: #30 0x00007f2a50baaf05 in cling::MetaProcessor::process (this=<optimized out>, input_line=..., compRes=<optimized out>, result=0x33f, disableValuePrinting=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; 2187: #31 0x00007f2a5058c5ff in HandleInterpreterException (metaProcessor=metaProcessor; 2187: entry=0x60700007bb60, input_line=0x7f2a6338f0de "".L /home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", compRes=; 2187: 0x7f2a5e5cef40: cling::Interpreter::kSuccess, result=result; 2187: entry=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:2455; 2187: #32 0x00007f2a50595b52 in TCling::Load (this=<optimized out>, filename=<optimized out>, system=<optimized out>) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3503; 2187: #33 0x00007f2a62daf8c5 in TSystem::Load (this=0x617000000080, module=<optimized out>, entry=<optimized out>, system=false) at /home/jhahnfel/ROOT/src/core/base/src/TSystem.cxx:1945; 2187: #34 0x00007f2a47737140 in execInitOrder () at /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx:108; 2187: #35 0x00007f2a492f4029 in ?? (); 2187: #36 0x00007f2a5e77a0c0 in ?? (); 2187: #37 0x0000614000001840 in ?? (); 2187: #38 0x00007ffc0cd42e10 in ?? (); 2187: #39 0x00007f2a50a1db2e in cling::IncrementalExecutor::executeWrapper (this=<optimized out>, function=..., returnValue=0x7f2a5e77a0c0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:288; 2187: ===========================================================; ```. Not sure who to assign, so I give everybody a fair chance of volunteering :wink:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:12260,Load,Load,12260,https://root.cern,https://github.com/root-project/root/issues/11867,8,"['Load', 'optimiz']","['Load', 'optimized']"
Performance,"MethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *; *Entries : 10000 : Total = 1177229 bytes File Size = 785298 *; * : : Tree compression factor = 1.48 *; ******************************************************************************; *Br 0 :Type : Type/F *; *Entries : 10000 : Total Size= 40556 bytes File Size = 307 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 130.54 *; *............................................................................*; [ --- ]; *............................................................................*; *Br 28 :m_wwbb : m_wwbb/F *; *Entries : 10000 : Total Size= 40566 bytes File Size = 34410 *; *Baskets : 1 : Basket Size= 1500672 bytes Compression= 1.16 *; *............................................................................*; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:10084,cache,cache,10084,https://root.cern,https://github.com/root-project/root/issues/12429,1,['cache'],['cache']
Performance,Minor Geometry optimization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10576:15,optimiz,optimization,15,https://root.cern,https://github.com/root-project/root/pull/10576,1,['optimiz'],['optimization']
Performance,Minor Geometry optimization [v6-24],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10641:15,optimiz,optimization,15,https://root.cern,https://github.com/root-project/root/pull/10641,1,['optimiz'],['optimization']
Performance,Minor Geometry optimization [v6-26],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10642:15,optimiz,optimization,15,https://root.cern,https://github.com/root-project/root/pull/10642,1,['optimiz'],['optimization']
Performance,"Minor optimization found by looking at profiles a while ago... `GetSpecialProtocols()` takes the global lock, so it's best to avoid calling it too much.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4357:6,optimiz,optimization,6,https://root.cern,https://github.com/root-project/root/pull/4357,1,['optimiz'],['optimization']
Performance,"Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so I hope this makes it easy to review. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Documentation not yet updated, I will check if this is necessary (I didn't think so, because it doesn't actually add much to the user interface, all the classes were already there, they just didn't work before like this).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10966:1660,optimiz,optimization,1660,https://root.cern,https://github.com/root-project/root/pull/10966,1,['optimiz'],['optimization']
Performance,"More comments for 238, basket size optimization",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/258:35,optimiz,optimization,35,https://root.cern,https://github.com/root-project/root/pull/258,1,['optimiz'],['optimization']
Performance,"Moves from fixed page sizes on write to adaptive page sizes, following the original idea of @hahnjo . The new mechanism is explained in the tuning.md document in the PR. The PR also bumps the target compressed cluster size to 150MB. We may want to reduce that still. Evaluation of the new method is currently ongoing and the PR description will be amended with the results. EDIT: [Comparison](https://docs.google.com/spreadsheets/d/1maJhgvgVU8RkX7QXd7B3QiTBfKuYbTbvgkoHzBUOurY/edit?usp=sharing) of current write performance vs adaptive page sizes with 50MB, 100MB, 150MB target cluster size. To me it seems that there is not a good argument to go to 150 MB clusters. There may be an argument for 100 MB clusters. For the moment, I'll remove the commit that changes the default settings from the PR. An additional flavor, `adaptive / exp`, is included in the table to test the effect of flushing _foreign columns_. In the experimental mode, columns only flush themselves, which simplifies the `RWritePageMemoryManager` and avoids the upcall from the sink to the column. There is a small positive effect of foreign flushes on the file size in the nanoAOD sample. The effect is more visible for the number of pages. The memory consumption is slightly smaller without foreign column flushes. I'll see if I can construct an example that shows better the advantage of foreign column flushes (or not). As expected, the memory savings become visible for large EDMs (e.g., nanoAOD in this set of samples).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16311:512,perform,performance,512,https://root.cern,https://github.com/root-project/root/pull/16311,1,['perform'],['performance']
Performance,Moving the inline unsigned TExecutor::GetPoolSize() const method from the TExecutor.hxx header file to the (new) TExecutor.cxx source file fixes the following error on Windows:; ```; IncrementalExecutor::executeFunction: symbol '?GetPoolSize@TThreadExecutor@ROOT@@QBEIXZ' unresolved while linking function '??__Eid@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A@YAXXZcling_module_0_'!; You are probably missing the definition of public: unsigned int __thiscall ROOT::TThreadExecutor::GetPoolSize(void)const; Maybe you need to load the corresponding shared library?; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7037:524,load,load,524,https://root.cern,https://github.com/root-project/root/pull/7037,1,['load'],['load']
Performance,Muhammad Alhroob (using ChatGPT) demonstrated that this can considerably reduce the runtime cost for TRandom3. Marking the class `final` seems a good compromise between performance and backward incompatibility: the compiler will diagnose if people inherit from TRandom3. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/12547.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12964:169,perform,performance,169,https://root.cern,https://github.com/root-project/root/pull/12964,1,['perform'],['performance']
Performance,MultiDimTempl<double>>>::*)(double) const>' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:155; 35: Returning from 'IntegralEvaluator::SetFunction' in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:136; 36: Returning from constructor for 'IntegralEvaluator<ROOT::Fit::FitUtil::ParamDerivFunc<ROOT::Math::IParametricGradFunctionMultiDimTempl<double>>>' in /opt/root_src/math/mathcore/src/FitUtil.cxx:207; 37: Assuming 'k' is < 'npar' in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 38: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/FitUtil.cxx:210; 39: Passing null pointer value via 2nd parameter 'x2' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 40: Calling 'IntegralEvaluator::operator()' in /opt/root_src/math/mathcore/src/FitUtil.cxx:212; 41: Field 'fIg1Dim' is non-null in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 42: Taking true branch in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:207; 43: Dereference of null pointer (loaded from variable 'x2') in /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:208; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:213:22: warning: Array access (from variable 'x2') results in a null pointer dereference [clang-analyzer-core.NullDereference]; 1: Assuming field 'fIntegral' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 2: Left side of '&&' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 3: Assuming field 'fBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 4: Left side of '&&' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 5: 'x2' initialized to a null pointer value in /opt/root_src/math/mathcore/src/FitUtil.cxx:1278; 6: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 7: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 8: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 9: '?' condition is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:8442,load,loaded,8442,https://root.cern,https://github.com/root-project/root/issues/7458,1,['load'],['loaded']
Performance,Must call TFile::SetCacheFileDir in order for CACHEREAD option to work. Makes the test work in offline mode with pre-cached file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2246:46,CACHE,CACHEREAD,46,https://root.cern,https://github.com/root-project/root/pull/2246,2,"['CACHE', 'cache']","['CACHEREAD', 'cached']"
Performance,"No actual drawing will be performed, but some extra objects like palette or stats box may be created. Behaves like batch image production was triggered - without real running of web browser.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13289:26,perform,performed,26,https://root.cern,https://github.com/root-project/root/pull/13289,1,['perform'],['performed']
Performance,No reason to explicitly load pythia8 due to autoloading,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/903:24,load,load,24,https://root.cern,https://github.com/root-project/root/pull/903,1,['load'],['load']
Performance,"Now Imt depends on MultiProc (https://github.com/root-project/root/pull/7040), so MultiProc gets loaded when importing ROOT in python and needs to be whitelisted",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7048:97,load,loaded,97,https://root.cern,https://github.com/root-project/root/pull/7048,1,['load'],['loaded']
Performance,"Now basic openui5 config parameters can be provided via rootrc file:. * WebGui.openui5src: alternative location for openui5 like https://openui5.hana.ondemand.com/; * WebGui.openui5libs: list of pre-loaded ui5 libs like sap.m, sap.ui.layout, sap.ui.unified; * WebGui.openui5theme: openui5 theme like sap_belize (default) or sap_fiori_3. Extend light configuration in webgeom - let configure kind and intensity of the light",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4630:199,load,loaded,199,https://root.cern,https://github.com/root-project/root/pull/4630,1,['load'],['loaded']
Performance,"Now if the type of a column is `RVec<bool>`, `RDataFrame` reads it as; a `TTreeReaderValue<std::vector<bool>>` and performs a copy into a; `RVec<bool>` value when passing each entry value to RDF operations. This is a temporary patch, this changes should be reverted as soon; as ROOT-9570 (""TTreeReaderArray<bool> silently returns wrong results; when reading a vector<bool>"") is fixed. Note that C-arrays of bool are still broken, and that requires that; `TTreeReaderArray<bool>` be fixed.; EDIT: or are they? does `TTreeReaderArray<bool>` work with C-arrays of bools?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2605:115,perform,performs,115,https://root.cern,https://github.com/root-project/root/pull/2605,1,['perform'],['performs']
Performance,"Now that we have an efficient hash-assisted `find` mechanism to find by name, it can be used in `RooArgSet` to optimize `containsInstance` (as we are certain there is only one parameter with a given name). This reduces the writing of large workspaces to file (such as ATLAS Higgs combination) by a significant factor (not precisely measured, but at least 5).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9417:111,optimiz,optimize,111,https://root.cern,https://github.com/root-project/root/pull/9417,1,['optimiz'],['optimize']
Performance,"Now that we use the ""collection proxy"" mechanism to write RVecs,; they can still be read back as std::vectors or with TTreeReaderArrays; without issues, which removes the motivation for performing this; type-to-type translation on the fly. Users might notice the change but it should not have any problematic; consequence as RDF and ROOT will still be able to read the RVec; branches written before this commit (without any change in user code; thanks to the ""collection proxy"" mechanism).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7498:186,perform,performing,186,https://root.cern,https://github.com/root-project/root/pull/7498,1,['perform'],['performing']
Performance,"Now using CUDA streams to support parallelization over events in the batch. This yields a 40% performance boost on high end GPUs (GTX 1080 Ti) and 10-15% on weaker models (Quadro 1000M). Additionally, temporary matrices used by `Im2Col` in the forward pass are maintained as a `ConvLayer` data field in order to minimize cuda memory allocations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2475:94,perform,performance,94,https://root.cern,https://github.com/root-project/root/pull/2475,1,['perform'],['performance']
Performance,"ONE could not set it to constant. *** Break *** segmentation violation; ```. While the relevant variable is present in the XML file:; ```xml; <Measurement Name=""BLIND_separate_tt_Z_29IFB_Apr_29"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"" >; <POI>mu_ttbar mu_Z b</POI>; <ParamSetting Const=""True"">Lumi minusONE</ParamSetting>; </Measurement>; ```. The crash did not happen in ROOT 6.28.04. This is the relevant stack trace from the crash:. ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f86acb0fbf7 in __GI___wait4 (pid=18077, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f86acb0fd4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe7747e28, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f86aca5509b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f86ae5282a1 in TUnixSystem::StackTrace() () from /home/tomas/ROOT/root_install/lib/libCore.so; #4 0x00007f86ae527c14 in TUnixSystem::DispatchSignals(ESignals) () from /home/tomas/ROOT/root_install/lib/libCore.so; #5 <signal handler called>; #6 0x00007f86ad4a0f34 in RooAbsArg::setAttribute(char const*, bool) () from /home/tomas/ROOT/root_install/lib/libRooFitCore.so; #7 0x00007f86abf40164 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #8 0x00007f86abf42e81 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::MakeSingleChannelModel(RooStats::HistFactory::Measurement&, RooStats::HistFactory::Channel&) () from /home/tomas/ROOT/root_install/lib/libHistFactory.so; #9 0x00007f86abf57971 in RooStats::HistFactory::MakeModelAndMeasurementFast(RooStats::HistF",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14225:2326,optimiz,optimized,2326,https://root.cern,https://github.com/root-project/root/issues/14225,1,['optimiz'],['optimized']
Performance,OOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4876,load,load,4876,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"OOT_prompt_"", line=0x7ffd9df7f6c9 ""Events"", error=0x7ffd9df7f60c, error; entry=0x0) at ../core/rint/src/TRint.cxx:801; #31 0x00007f1751c056ba in TRint::HandleTermInput (this=0x55fecde5ddd0) at ../core/rint/src/TRint.cxx:648; #32 0x00007f175195d0b5 in TUnixSystem::CheckDescriptors (this=this; entry=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:1306; #33 0x00007f17519604b8 in TUnixSystem::DispatchOneEvent (this=0x55fecde2a420, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1061; #34 0x00007f175187fa88 in TSystem::InnerLoop (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:406; #35 TSystem::Run (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:356; #36 0x00007f17518098cb in TApplication::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; entry=false) at ../core/base/src/TApplication.cxx:1677; #37 0x00007f1751c07062 in TRint::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; entry=false) at ../core/rint/src/TRint.cxx:501; #38 0x000055feccf191cf in main (argc=<optimized out>, argv=0x7ffd9df81ae8) at ../main/src/rmain.cxx:84; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TC",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12673:7859,optimiz,optimized,7859,https://root.cern,https://github.com/root-project/root/issues/12673,1,['optimiz'],['optimized']
Performance,"OT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:26128,load,load,26128,https://root.cern,https://github.com/root-project/root/issues/12771,1,['load'],['load']
Performance,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:17405,optimiz,optimized,17405,https://root.cern,https://github.com/root-project/root/issues/10676,5,['optimiz'],['optimized']
Performance,"On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```. This repairs the performance of a simple `TTree::Draw` of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example. This fixes #12649.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12650:440,perform,performance,440,https://root.cern,https://github.com/root-project/root/pull/12650,3,['perform'],['performance']
Performance,"On linux, the compiler flags are cache variables, i.e. they can be; overridden by the user. On Mac, that wasn't the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5220:33,cache,cache,33,https://root.cern,https://github.com/root-project/root/pull/5220,1,['cache'],['cache']
Performance,"On macOS 13.3 with Xcode 14.3, vector construction begin begin/end iterators -to-dofferent-type (here, casting char to UniChar aka unsigned short) fails in optimized mode for seemingly dubious reasons (i.e. likely an optimizer bug). Short-circuit this by returning 0 early for an extent of 0 characters - which is the only case where this construction (i.e. end==begin) is known to fail.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12736:156,optimiz,optimized,156,https://root.cern,https://github.com/root-project/root/pull/12736,2,['optimiz'],"['optimized', 'optimizer']"
Performance,One pending question (beside whether this is performant enough) is whether to keep the old TRWSpinLock and the new TRWSpinLock (Reentrant) or to have them (as in this MR) the same.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/596:45,perform,performant,45,https://root.cern,https://github.com/root-project/root/pull/596,1,['perform'],['performant']
Performance,"One use case for this is to to add custom object when we loading a compiled Keras model in Pymva. For example if the model is compiled with metrics containing users functions, then these functions must be defined also when loading the model inside MethodPyKers. . A concrete example (from Tommaso Diotalevi) : ; define precision and recall functions:. ```; def precision(y_true, y_pred): #taken from old keras source code; true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1))); predicted_positives = K.sum(K.round(K.clip(y_pred, 0, 1))); precision = true_positives / (predicted_positives + K.epsilon()); return precision; def recall(y_true, y_pred): #taken from old keras source code; true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1))); possible_positives = K.sum(K.round(K.clip(y_true, 0, 1))); recall = true_positives / (possible_positives + K.epsilon()); return recall; ```. compile the model : . ```; model.compile(loss='binary_crossentropy', optimizer=Adam(lr=0.001), metrics=['accuracy',precision,recall]); ```. When loading the model in `keras.load_model` the user provided functions must be known and passed as a dictionary, for example: . ```; load_model_custom_objects = {'precision': precision, 'recall': recall}. model = keras.models.load_model('model_dense.h5', custom_objects=load_model_custum_objects); ```. This PR provdes a way to the user to give Python code (e.g. defining the users functions and ; the variable `load_model_custom_object` ) that then can be executed in MethodPyKeras in its initialization.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5632:57,load,loading,57,https://root.cern,https://github.com/root-project/root/pull/5632,4,"['load', 'optimiz']","['loading', 'optimizer']"
Performance,"Optimization for `RNTupleDescriptor::GetNEntries()`: Once the cluster descriptor is constructed, all the cluster summaries must have been added. From the cluster summaries, we know the cluster event ranges. So we know the number of events of the ntuple and can cache it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9662:0,Optimiz,Optimization,0,https://root.cern,https://github.com/root-project/root/pull/9662,2,"['Optimiz', 'cache']","['Optimization', 'cache']"
Performance,Optimizations for TBufferMerger and parallel I/O in general,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/666:0,Optimiz,Optimizations,0,https://root.cern,https://github.com/root-project/root/pull/666,1,['Optimiz'],['Optimizations']
Performance,Optimize RAttrBase and RAttrValue classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8483:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/8483,1,['Optimiz'],['Optimize']
Performance,Optimize RooAbsCollection::containsInstance for RooArgSet,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9417:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/9417,1,['Optimiz'],['Optimize']
Performance,Optimize Rtypes.h include,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5791:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/5791,1,['Optimiz'],['Optimize']
Performance,Optimize TPrincipal::AddRow function,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6630:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/6630,1,['Optimiz'],['Optimize']
Performance,Optimize TPrincipal::AddRow function since it is reported that is causing a significative time in CMS reconstruction. . Move divisions outside loop and use directly access to internal TVector and TMatrix elements.; In case data are not stored in the class the gain in the loop that is adding the row has been measured to be a factor of 10 for a data of 100 dimension and 100000 points,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6630:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/6630,1,['Optimiz'],['Optimize']
Performance,Optimize call to GetBasket(fWriteBasket),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2089:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/2089,1,['Optimiz'],['Optimize']
Performance,Optimize core includes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5826:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/5826,1,['Optimiz'],['Optimize']
Performance,Optimize gui includes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5824:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/5824,1,['Optimiz'],['Optimize']
Performance,Optimize hist/garf3d/net includes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5825:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/5825,1,['Optimiz'],['Optimize']
Performance,Optimize includes in roofit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5540:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/5540,1,['Optimiz'],['Optimize']
Performance,Optimize math includes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5821:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/5821,1,['Optimiz'],['Optimize']
Performance,Optimize roofit includes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5822:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/5822,1,['Optimiz'],['Optimize']
Performance,Optimize roofit includes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5542:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/5542,1,['Optimiz'],['Optimize']
Performance,Optimize tmva includes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5820:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/5820,1,['Optimiz'],['Optimize']
Performance,Optimize tree/io includes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5823:0,Optimiz,Optimize,0,https://root.cern,https://github.com/root-project/root/pull/5823,1,['Optimiz'],['Optimize']
Performance,Optimized some TMVA tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/435:0,Optimiz,Optimized,0,https://root.cern,https://github.com/root-project/root/pull/435,1,['Optimiz'],['Optimized']
Performance,"Original message of upstream commit by Richard Smith, https://github.com/llvm/llvm-project/commit/61c7a9140b:; ```; Commit to a primary definition for a class when we load its first; member. Previously, we wouldn't do this if the first member loaded is within a; definition that's added to a class via an update record, which happens; when template instantiation adds a class definition to a declaration; that was imported from an AST file. This would lead to classes having member functions whose getParent; returned a class declaration that wasn't the primary definition, which; in turn caused the vtable builder to build broken vtables. I don't yet have a reduced testcase for the wrong-code bug here, because; the setup required to get us into the broken state is very subtle, but; have confirmed that this fixes it.; ```. This fixes an assertion in `CodeGenFunction::EmitCXXDestructorCall()`:; ```; Assertion `ThisTy->getAsCXXRecordDecl() == DtorDecl->getParent() && ""Pointer/Object mixup""' failed.; ```; which was already seen during the upgrade to LLVM 13 in one tutorial on CentOS 8 and ""solved"" by commit ffe867985b (""Relax assertion on generating destructor call""). Due to the nature of this problem, the assertion failure went away with unrelated changes so I reverted the change in 2b997add1d. Now the problem comes back with the upgrade to LLVM 16 and also in master when trying to enable the RBatchGenerator tutorials in https://github.com/root-project/root/pull/13302, both on macOS this time. Luckily, the underlying cause was properly fixed in upstream LLVM just last week, so backport that commit. FYI @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13370:167,load,load,167,https://root.cern,https://github.com/root-project/root/pull/13370,2,['load'],"['load', 'loaded']"
Performance,"Original title: ""TF1 and TFitResultPtr do not serialise correctly pickle, and this is an issue with Python multiprocessing"". ### Check duplicate issues. - [X] Checked for duplicates. ### Description. TF1 and TFitResultPtr do not serialise correctly with pickle. This causes issues with multiprocessing in python as well as distributed execution, e.g. with DistRDF. ### Reproducer. One can see with the reproducer below that:; - The fit succeeds and the result pointer is sane if nothing is pickled and depickled; - The fit fails if the function is pickled and depickled; - The fit result pointer is not sane any more if pickled and then depickled. ```python; import ROOT; import pickle. def SerialiseDeserialise(obj):; return pickle.loads(pickle.dumps(obj)). h = ROOT.TH1F(""myHist"", ""myTitle"", 64, -4, 4); h.FillRandom(""gaus""); f1 = ROOT.TF1(""f1"", ""gaus""); f1_d = SerialiseDeserialise(f1). res = h.Fit(f1, ""S""); print (""Status is "", res.Status()). # Check fit with de-serialised TF1; res = h.Fit(f1_d, ""S""); print (""Status is "", res.Status()). # Check de-serialised result ptr; res_d = SerialiseDeserialise(res); print (""Status is "", res_d.Status()); ```. ### ROOT version. master (I suspect all). ### Installation method. from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16184:733,load,loads,733,https://root.cern,https://github.com/root-project/root/issues/16184,1,['load'],['loads']
Performance,"Originally, the changes in this branch avoided the unload/load cycle for the `.x` command, if the timestamp of a file has not changed. Due to potential problems with static variable initialization, this behavior is not finally part of this PR. Other than that, this branch includes several improvements:; - General `MetaSema.cpp` code cleanup.; - `.x` now has a list of (fallback) function names that we will try to call, in order. This makes it possible to add alternate entry points for a macro that are independent from the filename, and therefore immune to file renaming.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4465:58,load,load,58,https://root.cern,https://github.com/root-project/root/pull/4465,1,['load'],['load']
Performance,"Otherwise `libcppyy` and `libcppyy_backend` are generated with the`.dylib` suffix on OSX. This causes a crash when importing cppyy, since it tries to load `libcppyy_backend.so` using ctypes. Thank you @amadio for the suggestion of setting `CMAKE_SHARED_LIBRARY_SUFFIX`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3282:150,load,load,150,https://root.cern,https://github.com/root-project/root/pull/3282,1,['load'],['load']
Performance,Otherwise tests run concurrently can write on each other's feet.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6121:20,concurren,concurrently,20,https://root.cern,https://github.com/root-project/root/pull/6121,3,['concurren'],['concurrently']
Performance,Our use case requires optimization level 3 and disabled pointer checks. Therefore Fons asked me to send this PR.; Please see the following discussion:; https://root-forum.cern.ch/t/jit-performance-issue/38555. Commit based on; https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/optlevel2_forced.diff,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6038:22,optimiz,optimization,22,https://root.cern,https://github.com/root-project/root/pull/6038,2,"['optimiz', 'perform']","['optimization', 'performance-issue']"
Performance,"Output lines are in wrong order when running CTest on Windows x64, as shown below:; ```; 1397: -- BEGIN TEST OUTPUT --; 1397:; 1397: Processing C:/Users/bellenot/git/roottest/root/meta/runInterpreterValue.C...; 1397: WithDtor(): 1; 1397: Ident: IAmWithDtor!; 1397: Now deleting TInterpreterValue; 1397: ~WithDtor() 0; 1397: Now all WithDor should be gone; we have 0 left; 1397: About to return a WithDtor; 1397:; 1397: -- END TEST OUTPUT --; 1397: -- BEGIN OUTDIFF OUTPUT --; 1397: --- C:/Users/bellenot/git/roottest/root/meta/InterpreterValue.ref Tue Jul 13 10:19:19 2021; 1397: +++ C:/Users/bellenot/build/x64/release/roottest/root/meta/roottest-root-meta-runInterpreterValue-auto.log Mon Feb 21 15:23:36 2022; 1397: @@ -1,7 +1,7 @@; 1397:; 1397: WithDtor():1; 1397: -AbouttoreturnaWithDtor; 1397: Ident:IAmWithDtor!; 1397: NowdeletingTInterpreterValue; 1397: ~WithDtor()0; 1397: NowallWithDorshouldbegone;wehave0left; 1397: +AbouttoreturnaWithDtor; 1397:; 1397: -- END OUTDIFF OUTPUT --; 1397: CMake Error at C:/Users/bellenot/build/x64/release/RootTestDriver.cmake:254 (message):; 1397: compare 'stdout' error: 1; 1397:; 1397:; 1/1 Test #1397: roottest-root-meta-runInterpreterValue-auto ...***Failed 0.56 sec; ```; The output is correct, but the line order is wrong (i.e. `AbouttoreturnaWithDtor` is at the wrong position).; This is related to the issue #9809, and is due to the `-O1` optimization flag in Cling (`clingArgsStorage.push_back(""-O1"");` in `TCling.cxx`)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9944:1390,optimiz,optimization,1390,https://root.cern,https://github.com/root-project/root/issues/9944,1,['optimiz'],['optimization']
Performance,Overhaul OptimizeBaskets algorithm.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/657:9,Optimiz,OptimizeBaskets,9,https://root.cern,https://github.com/root-project/root/pull/657,1,['Optimiz'],['OptimizeBaskets']
Performance,PCMs store spurious paths which lead to poor performance at initialization time,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14296:45,perform,performance,45,https://root.cern,https://github.com/root-project/root/issues/14296,1,['perform'],['performance']
Performance,"PR https://github.com/root-project/root/pull/8944 was a good first step to get the RooWorkspace to JSON converter work for typical histfactory models, but this simple example code showcases that are are still significant bugs. These bugs need to be fixed in the release, such that we can promote the JSON converter as a new feature. ```C++; #include ""RooRealVar.h""; #include ""RooSimultaneous.h""; #include ""RooCategory.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". void mySim(); {; using namespace RooFit;. // Import keys and factory expressions files for the RooJSONFactoryWSTool.; std::string rootetcPath = gSystem->Getenv(""ROOTSYS"");; RooJSONFactoryWSTool::loadExportKeys(; rootetcPath + ""/etc/root/RooFitHS3_wsexportkeys.json"");; RooJSONFactoryWSTool::loadFactoryExpressions(; rootetcPath + ""/etc/root/RooFitHS3_wsfactoryexpressions.json""; );. // Create a test model: RooSimultaneous with Gaussian in one component, and; // product of two Gaussians in the other.; RooRealVar x(""x"", ""x"", -8, 8);; RooRealVar mean(""mean"", ""mean"", 0, -8, 8);; RooRealVar sigma(""sigma"", ""sigma"", 0.3, 0.1, 10);; RooGaussian g1(""g1"", ""g1"", x, mean, sigma);; RooGaussian g2(""g2"", ""g2"", x, mean, RooConst(0.3));; RooProdPdf model(""model"", ""model"", RooArgList{g1, g2});; RooGaussian model_ctl(""model_ctl"", ""model_ctl"", x, mean, sigma);; RooCategory sample(""sample"", ""sample"", {{""physics"", 0}, {""control"", 1}});; RooSimultaneous simPdf(""simPdf"", ""simultaneous pdf"", sample);; simPdf.addPdf(model, ""physics"");; simPdf.addPdf(model_ctl, ""control"");. // Export to JSON; {; RooWorkspace ws{""workspace""};; ws.import(simPdf);; RooJSONFactoryWSTool tool{ws};; tool.exportJSON(""simPdf.json"");; // Output can be pretty-printed with `python -m json.tool simPdf.json`; }. // Import JSON; RooWorkspace ws{""workspace""};; RooJSONFactoryWSTool tool{ws};; tool.importJSON(""simPdf.json"");; // At the moment this will fail, because the Gaussians in the product are; // missing in the JSON dump!; }; ```. The JSON dump will look like this:.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9372:662,load,loadExportKeys,662,https://root.cern,https://github.com/root-project/root/issues/9372,2,['load'],"['loadExportKeys', 'loadFactoryExpressions']"
Performance,"PR root-project/root#6969 allowed ROOT to build pcm files for the R package via the RInterface.pcm. However, various headers of R define macros which are defined by math.h and others (ERROR in RooFit). When the global module index is enabled, ROOT loads RInterface on a lookup for (Range). Then the exported macros ""shadow"" the ones which are still in the index and we do not load the correct corresponding module. This obscure problem seems to be coming from a current deficiency in the implementation/interaction; between clang and the index. Pre-loading the RInterface, if enabled, seems to resolve the issue at a reasonable compromise rather than trying to disable the module altogether or undefine the fragile macros.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8827:248,load,loads,248,https://root.cern,https://github.com/root-project/root/pull/8827,3,['load'],"['load', 'loading', 'loads']"
Performance,PSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module FitPanel; Failed to load module Unuran; Failed to load module Quadp; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUtil; Failed to load module ASI,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:2008,load,load,2008,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,Parallelizing the TKDTree for better performance (with TThreadExecutor).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2202:37,perform,performance,37,https://root.cern,https://github.com/root-project/root/pull/2202,1,['perform'],['performance']
Performance,"Partially revert ""Mark the file entry invalid, until reread. Invalidate SLocEntry cache, readd it on reread.""; ; That change does not make any sense. Kudos to my old self.; ; Resolves ROOT-8956.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1196:82,cache,cache,82,https://root.cern,https://github.com/root-project/root/pull/1196,1,['cache'],['cache']
Performance,Patch from Vassil! Add the cwg to the prebuilt module cache path.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1980:54,cache,cache,54,https://root.cern,https://github.com/root-project/root/pull/1980,1,['cache'],['cache']
Performance,"People use RooFormula a lot via RooGenericPdf and RooFormulaVar!; Performance matters here. This commit avoids non-static `std::regex` in; `RooFormula::processFormula`, because constructing these on the fly can; become a bottleneck. This is a non-intrusive performance optimization that reduces the time spent for CMS workflows like the HZZ global fit by up to 5 %. Example profiles:; * HZZ multi-dim fit before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_1/74; * HZZ multi-dim fit after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/hzz_3/1815. `RooFormula::processFormula` is now more than ten times faster.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10205:66,Perform,Performance,66,https://root.cern,https://github.com/root-project/root/pull/10205,4,"['Perform', 'bottleneck', 'optimiz', 'perform']","['Performance', 'bottleneck', 'optimization', 'performance']"
Performance,"Per #12676, all storage backends should be able to populate the page zero from `kTypePageZero` locators. This pull request adds the missing pieces in the DAOS backend. ## Changes or fixes:; - Add the `RPageStorage::PrepareLoadCluster()` helper which can be used in the implementation of `LoadClusters()` in derived classes to prepare the read of page ranges. This function takes care of filling zero pages in the given `ROnDiskPageMap`.; - Add the missing pieces in `RPageSourceDaos`. ## Checklist:; - [x] tested changes locally. This PR fixes #12960.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13388:288,Load,LoadClusters,288,https://root.cern,https://github.com/root-project/root/pull/13388,1,['Load'],['LoadClusters']
Performance,Performance fix for MnMachinePrecision,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2215:0,Perform,Performance,0,https://root.cern,https://github.com/root-project/root/pull/2215,1,['Perform'],['Performance']
Performance,Performance regression (slowdown) in ALICE event generation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15579:0,Perform,Performance,0,https://root.cern,https://github.com/root-project/root/issues/15579,1,['Perform'],['Performance']
Performance,Performance regression with repr for pyroot objects in root 6.28 nightlies.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12817:0,Perform,Performance,0,https://root.cern,https://github.com/root-project/root/issues/12817,1,['Perform'],['Performance']
Performance,Performance tuning for RANLUX++,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6844:0,Perform,Performance,0,https://root.cern,https://github.com/root-project/root/pull/6844,1,['Perform'],['Performance']
Performance,"Performance visualization in the RNtupleMetrics can allow the encapsulation of more complex type of metrics, which can allow the extraction of more usefull information, as oposssed to previous, simple, agreggate counter. This PR currently encapsulates 4 fully tested variants of histogram metrics and deploys it's most sophisticated variant onto the analysis of the volume of read requests when loading a page or cluster, by default. The following 4 variants are available, mainly referred to by their key usage:. - `RNTupleHistoInterval` : User-provided set of intervals.; - `RNTupleHistoCounterLog` : Histogram on a log scale.; - `RNTupleHistoActiveLearn` : Active learning phase to adjust to data distribution.; - `RNTupleFixedWidthHistogram` : Fixed width bins with constant time filling. Developed under a summer student project by Rui Reis and supervised by Javier Lopez Gomes and Jakob Blomer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8880:0,Perform,Performance,0,https://root.cern,https://github.com/root-project/root/pull/8880,2,"['Perform', 'load']","['Performance', 'loading']"
Performance,"Picking, lights, render-queue/multi-pass rendering, support for most EveElements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7185:24,queue,queue,24,https://root.cern,https://github.com/root-project/root/pull/7185,1,['queue'],['queue']
Performance,Possible optimizer optimization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312:9,optimiz,optimizer,9,https://root.cern,https://github.com/root-project/root/issues/9312,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"Prevent wild over-read when reading badly clustered file.; ; In some cases where the memory available to the TTreeCache can not fit the entirety; of (potentially odd-shaped) cluster, the TTreeCache could end up with a situation; where (starting at some point) it is invalidated at each entry *and* the basket; from the previous cluster boundary up to some entry number less than the current; entry are loaded over and over again (until the entry number reaches the next cluster; boundary).; ; In a case encountered by CMS, a TTree has a recorded cluster size of 165 events. However the TTree; appears to not have been clustered; most basket size are the same and seem to be flushed at 139 events; interval. A few branches are flushed less frequently, for example EventAuxiliary is flushed every 459; entries.; ; As a consequence when entry 417 is requested, the cluster boundary is calculated as 330 and; the first end as 495. Then all basket containing entries in that range are loaded, including; EventAuxiliary's basket containing entries 459 to 917. Then 917 is the highest available (partial); entry available. Thus the next time the TTreeCache is invalidated is when entry 918 is requested.; As that point the cluster boundary is calculated as 845 and the first end as 495, however; (with the small enough TTreeCache size), the cache is full as soon as the basket for EventAuxiliary; is added. This resulted in a 'valid' range for this cache of 845 to 917 and lead to the reading; all the baskets added so far ... and thus eventhough none of them would be used for reading; and they already had been read once in memory. Then for entry 919, the exact same behavior; repeated.; ; The solution consist on marking the 'minimum' valid range as being 'at least' one cluster wide.; ; Thus in the example above for entry 918 through 989, **only** the missing baskets are read; individually resulting in 'degraded' performance but **not** a wild over-read.; ; A future enhancement would be, in those cas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1778:402,load,loaded,402,https://root.cern,https://github.com/root-project/root/pull/1778,2,['load'],['loaded']
Performance,"Previously it was only done in; TTree::GetClusterIterator; TTree::GetEntry; TTree::GetEntryWithIndex; TTree::GetMaximum; TTree::GetMinimum; TTree::GetReadCache; TTree::SetCacheSize. In particular it was not triggered by TTree::Draw, TDF nor TTreeReader,; they are using only:. TTree::LoadTree and TBranch::GetEntry. The one use case still not covered is. file->GetObject(treename, tree);; auto b = tree->GetBranch(branchname);; b->GetEntry(entryNumber)=;. But it would require to either enable it in the TTree constructor; (too soon?) or TBranch::GetEntry (too often?)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2036:284,Load,LoadTree,284,https://root.cern,https://github.com/root-project/root/pull/2036,1,['Load'],['LoadTree']
Performance,Problems with loading dictionaries created with 6.22.06 by 6.22.08,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7781:14,load,loading,14,https://root.cern,https://github.com/root-project/root/issues/7781,1,['load'],['loading']
Performance,"Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of; total runtime is due to allocations in `RPageSource::UnsealPage`. One typical RNTuple use case is an event loop over a fixed number of; columns. Columns are divided into pages with a fixed size, e.g. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8634:491,perform,performed,491,https://root.cern,https://github.com/root-project/root/pull/8634,1,['perform'],['performed']
Performance,"Proof of concept of ROOT working with HPX as a backend. Includes one commit for the build system and another one that applies the necessary changes in the code, specifically to TThreadExecutor, and proposes an interface to specify the backend to run with when calling EnableImplicitMT. As suggested, making the choice of using hpx (instead of tbb) at runtime allows for an easier integration of the hpx library in ROOT. Drawbacks at this point: . - Can't choose the size of the threadpool. HPX always proceeds with as many as physical cores.; - Breaks all RDataFrame tests that run with a specified number of cores/slots.; - Requires `#include <hpx/hpx_main.hpp>` in the script with the main.; - Compilation becomes more cumbersome, ending up with something like: ``g++ myProgram.cpp `root-config --cflags --libs` `pkg-config --cflags --libs hpx_application` - DHPX_APPLICATION_NAME=myProgram -o myProgram.out``; - Performance (benchmarking at the moment). This PR requires HPX to be installed. If someone wants to give it a try, @amadio was so kind to build HPX into the Gentoo prefix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5364:915,Perform,Performance,915,https://root.cern,https://github.com/root-project/root/pull/5364,1,['Perform'],['Performance']
Performance,Protect MinimizerOptions::DefaultMinimizerType from multi-threaded calls,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1611:52,multi-thread,multi-threaded,52,https://root.cern,https://github.com/root-project/root/pull/1611,1,['multi-thread'],['multi-threaded']
Performance,Protect concurrent access to gROOT->GetListOfFiles(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/38:8,concurren,concurrent,8,https://root.cern,https://github.com/root-project/root/pull/38,2,['concurren'],['concurrent']
Performance,Protect global list of functions from concurrent access,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/24:38,concurren,concurrent,38,https://root.cern,https://github.com/root-project/root/pull/24,1,['concurren'],['concurrent']
Performance,Protect multi-thread access to TSystem::fHelper.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5126:8,multi-thread,multi-thread,8,https://root.cern,https://github.com/root-project/root/pull/5126,2,['multi-thread'],['multi-thread']
Performance,Provide functions which are used in JSROOT-based display in `jupyter`. After final v7 JSROOT release code in `jupyter` will be adjusted to dynamic modules loading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10272:155,load,loading,155,https://root.cern,https://github.com/root-project/root/pull/10272,1,['load'],['loading']
Performance,Provide methods to check if sending via websocket is possible; Fix - correctly handle negative parameter values in TF1/TF2; Fix - clear range flag when drawings are cleared; Fix - do not forget reset pads cache when changing TWebCanvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2945:205,cache,cache,205,https://root.cern,https://github.com/root-project/root/pull/2945,1,['cache'],['cache']
Performance,"Provides an implentation for the `DefinitionShadowed()` interpreter callback, that invalidates TCling cached information about a former declaration (that has been shadowed). This PR also includes a minor fix for test 'cling/test/CodeUnloading/DeclShadowing.C'.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4446:102,cache,cached,102,https://root.cern,https://github.com/root-project/root/pull/4446,1,['cache'],['cached']
Performance,"Pull request #11731 introduced internal support for per field post-read callbacks. This follow-up pull request registers a callback for each `#pragma read` rule on user-defined classes.; Currently, `#pragma read` rules referencing non-transient members as a `target` are intentionally disallowed -- a warning is logged in that case. Only target class version is checked, i.e. checksum is ignored. Raw read rules are not (and will likely not be) supported, as they take a `TBuffer &`. ## Changes or fixes:; - Introduce `RFieldBase::AddReadCallbacksFromIORules()`. This function registers a post-read callback for each of the given `ROOT::TSchemaRule`s.; - `RFieldBase::ConnectPageSource()`: cache C++ type version as stored in the RNTupleDescriptor. This information can be accessed via `GetOnDiskTypeVersion()`.; `RFieldBase::RegisterReadCallbacks()` is called as part of `ConnectPageSource()`. This function can be overridden; in particular, derived classes can make use of the on-disk type version to enable/disable read rules.; - RClassField: register a post-read callback for each of the custom I/O rules associated with the target class version.; - I/O customization rules referencing non-transient members are ignored for now. Such rules shall trigger a warning, e.g.; ```; 210: Warning in <[ROOT.NTuple] Warning /home/jalopezg/CERN/repos/root/tree/ntuple/v7/src/RField.cxx:931 in ; ROOT::Experimental::RClassField::RClassField(std::string_view, std::string_view, TClass*)::<lambda(const ; ROOT::TSchemaRule*)>>: ignoring I/O customization rule with non-transient member: a; ```. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR partially takes care of #10019.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11944:690,cache,cache,690,https://root.cern,https://github.com/root-project/root/pull/11944,1,['cache'],['cache']
Performance,PyROOT does not really need to link against all libraries listed as dependencies in the CMakeLists.txt file. Some of the libraries should be loaded on demand at runtime. Related JIRA issues:; - https://sft.its.cern.ch/jira/browse/ROOT-9728; - https://sft.its.cern.ch/jira/browse/ROOT-9729,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2800:141,load,loaded,141,https://root.cern,https://github.com/root-project/root/pull/2800,1,['load'],['loaded']
Performance,PyROOT in root 6.24 branch hangs while loading CMSSW library,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718:39,load,loading,39,https://root.cern,https://github.com/root-project/root/issues/7718,1,['load'],['loading']
Performance,PyROOT: bad CPU performance for 6.27 (dev3 LCG nightly slot at cvmfs),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927:16,perform,performance,16,https://root.cern,https://github.com/root-project/root/issues/11927,1,['perform'],['performance']
Performance,"REveManager sends BeginChanges before sending the change content, and sends EndChanges after changes have been applied. The end redraw callback loops over changes scenes and repaints them. This change also contains an optimization in table view: bind table to its model only at the time of construction or a change of the displayed collection.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4059:218,optimiz,optimization,218,https://root.cern,https://github.com/root-project/root/pull/4059,1,['optimiz'],['optimization']
Performance,"RNTuple, parallel unzip tear down race condition",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7076:34,race condition,race condition,34,https://root.cern,https://github.com/root-project/root/issues/7076,1,['race condition'],['race condition']
Performance,"RNTuple. For now this feature can be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the cachi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8329:1579,Load,LoadEntry,1579,https://root.cern,https://github.com/root-project/root/pull/8329,1,['Load'],['LoadEntry']
Performance,ROOT Assertion During Dictionary Loading (2021.06.30.),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:33,Load,Loading,33,https://root.cern,https://github.com/root-project/root/issues/8578,1,['Load'],['Loading']
Performance,ROOT I/O performance related updates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/709:9,perform,performance,9,https://root.cern,https://github.com/root-project/root/pull/709,1,['perform'],['performance']
Performance,"ROOT can't autoparse classes inside namespaces with the rootmap; system (as the loading callbacks don't correctly land where; they are supposed to land with our injected namespaces). As this; turns out to be a feature of some kind, let's preload TMVA/TreePlayer; to fix all failing tests that are related to this feature/bug with; modules enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1355:80,load,loading,80,https://root.cern,https://github.com/root-project/root/pull/1355,1,['load'],['loading']
Performance,"ROOT can't autoparse classes inside namespaces with the rootmap; system (as the loading callbacks don't correctly land where; they are supposed to land with our injected namespaces). As this; turns out to be a feature of some kind, let's preload; TMVA/TreePlayer/Graf to fix all failing tests that are related; to this feature/bug with modules enabled. This commit can be dropped if we solve on of those problems:. 1. figure out how to fix this bug in the rootmap-based loading; without regressin in performance. 2. replace the rootmap system with something else like attaching; all C++ modules on startup. Note that we already do something like this in normal ROOT by; including these packages into the PCH which also makes those; decls available in the normal clang lookup. This PR depends on #1394",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1396:80,load,loading,80,https://root.cern,https://github.com/root-project/root/pull/1396,3,"['load', 'perform']","['loading', 'performance']"
Performance,ROOT does not compile with link-time optimizations (LTO) enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11657:37,optimiz,optimizations,37,https://root.cern,https://github.com/root-project/root/issues/11657,1,['optimiz'],['optimizations']
Performance,"ROOT injects forward declarations of entities as trampolines to resolve the full definitions and load the corresponding library. This allows the ROOT users to 'just' type a name and the interpreter will resolve its definition and dlopen the library describing it. There is a well-known (not well understood until now) limitation with this system: we cannot load entities in namespaces. Namely, if we type `ROOT::TDF::TDataFrame;` the system won't be able to resolve it. This is because we enable the system to load only the contents of namespaces from the forward declarations. For example,; ```cpp; // rootmap file; namespace ROOT{ namespace Experimental { class TDataFrame; } } // #1. // real code; namespace ROOT{ namespace Experimental { class TDataFrame {}; } } // #2. [root] ROOT::Experimental::TDataFrame d; // #3; ```; `#1` is piped at root/interpreter start up; we find the DeclContext and flag it. `#3` triggers a lookup and `#includes #2`. The problem is that we do not issue a lookup in `#2`. The effect is that we practically cannot autoload entities from namespaces. Turning it 'just' on breaks performance and starts loading irrelevant libraries. This is because clang eagerly deserializes template specialization declarations for the decl context in question when computing linkage information in CodeGen. All heavy lifting is done in [D41416](https://reviews.llvm.org/D41416) and landed in e51a2b9de4. It enables finer-grained template specialization deserialization removing the effect of loading irrelevant libraries. The performance impact will be seen shortly after we land this PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547:97,load,load,97,https://root.cern,https://github.com/root-project/root/pull/1547,7,"['load', 'perform']","['load', 'loading', 'performance']"
Performance,ROOT loads unneeded PCMs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000:5,load,loads,5,https://root.cern,https://github.com/root-project/root/issues/13000,1,['load'],['loads']
Performance,ROOT start up time and memory optimization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1790:30,optimiz,optimization,30,https://root.cern,https://github.com/root-project/root/pull/1790,1,['optimiz'],['optimization']
Performance,ROOT-8872 Optimize TTree::Fill() to avoid expensive modulo operations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1058:10,Optimiz,Optimize,10,https://root.cern,https://github.com/root-project/root/pull/1058,1,['Optimiz'],['Optimize']
Performance,ROOT-9027 Multi-thread Snapshot action writes only part of the events for large input files,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1069:10,Multi-thread,Multi-thread,10,https://root.cern,https://github.com/root-project/root/pull/1069,1,['Multi-thread'],['Multi-thread']
Performance,"ROOT/src/core/unix/src/TUnixSystem.cxx:2395; 2187: #3 0x00007f2a6301c2df in TUnixSystem::DispatchSignals (this=0x617000000080, sig=kSigSegmentationViolation) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:3615; 2187: #4 <signal handler called>; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=0x1 <error: Cannot access memory at address 0x1>, alternate=0x7f2a491937c0 <error: Cannot access memory at address 0x7f2a491937c0>) at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:792; 2187: #8 0x00007f2a60081efb in _GLOBAL__sub_I_libInitOrder.cxx () at roottest/root/meta/tclass/libInitOrder.cxx:123; 2187: #9 0x00007f2a631f305a in call_init (l=<optimized out>, argc=argc; 2187: entry=37, argv=argv; 2187: entry=0x7ffc0cd45a68, env=env; 2187: entry=0x61600030f680) at dl-init.c:72; 2187: #10 0x00007f2a631f315a in call_init (env=0x61600030f680, argv=0x7ffc0cd45a68, argc=37, l=<optimized out>) at dl-init.c:30; 2187: #11 _dl_init (main_map=0x61a00008b280, argc=37, argv=0x7ffc0cd45a68, env=0x61600030f680) at dl-init.c:119; 2187: #12 0x00007f2a617509bc in _dl_catch_exception () from /lib64/libc.so.6; 2187: #13 0x00007f2a631fa88e in dl_open_worker (a=0x7ffc0cd41a20) at dl-open.c:794; 2187: #14 dl_open_worker (a=0x7ffc0cd41a20) at dl-open.c:757; 2187: #15 0x00007f2a61750964 in _dl_catch_exception () from /lib64/libc.so.6; 2187: #16 0x00007f2a631faa71 in _dl_open (file=0x6070000a18e0 ""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", mode=-2147483391, caller_dlopen=0x2ce7f6 <__interceptor_dlopen.part.267+102>, nsid=<optimized out>, argc=37, argv=<optimized out>, env=0x61600030f680) at dl-open.c:876; 2187: #17 0x00007f2a61bc5f8a in dlopen_doit (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:2357,optimiz,optimized,2357,https://root.cern,https://github.com/root-project/root/issues/11867,1,['optimiz'],['optimized']
Performance,ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3873,load,load,3873,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,"RUN ] RNTuple.TClassEBO; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3e5f0fbf63 in wait4 () from /lib64/libc.so.6; #1 0x00007f3e5f0701eb in do_system () from /lib64/libc.so.6; #2 0x00007f3e5f91a8d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:7445,optimiz,optimized,7445,https://root.cern,https://github.com/root-project/root/issues/12428,1,['optimiz'],['optimized']
Performance,Race condition affecting (at least) TEnum::GetEnum,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7093:0,Race condition,Race condition,0,https://root.cern,https://github.com/root-project/root/issues/7093,1,['Race condition'],['Race condition']
Performance,Race condition when loading dictionary shared libraries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12552:0,Race condition,Race condition,0,https://root.cern,https://github.com/root-project/root/issues/12552,2,"['Race condition', 'load']","['Race condition', 'loading']"
Performance,"Rather than constructing a different reader for each node that; needs it, with this patch we now leverage RColumnRegister as; a ""cache"" of RDefineReaders and RVariationReaders so that nodes; in the computation graph share the same reader objects (per; processing slot). This is analogous to what RLoopManager does; for RDSColumnReaders and RTreeColumnReaders. Sharing column readers across the computation graph will be useful; for bulk loading of event values (which we do not want to repeat; for different instances of a given column's reader).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10899:129,cache,cache,129,https://root.cern,https://github.com/root-project/root/pull/10899,2,"['cache', 'load']","['cache', 'loading']"
Performance,"Rather than constructing a new RVec (as a view over the new; array data) at every event and swapping with the old one,; directly change the address of the old RVec. This provides a ~10% performance improvement for a synthetic; version of the dimuon tutorial adapted to only read (uncompressed); data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11232:186,perform,performance,186,https://root.cern,https://github.com/root-project/root/pull/11232,1,['perform'],['performance']
Performance,"Re-implement TWinNTSystem::GetLibraries() to make sure the list of libraries contains only existing - and reachable - `.lib` files. - Get the list of DLLs loaded in the current process; - Get the list of directories from the `%LIB%` environment variable; - For every DLL, check if the matching `.lib` file is found in one of the `LIB` directories; - Keep only the found ones and the `/LIBPATH:dir` linker option, if any. This also allows the user to add a directory in the `%LIB%` environment variable if a custon library is needed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6191:155,load,loaded,155,https://root.cern,https://github.com/root-project/root/pull/6191,1,['load'],['loaded']
Performance,"Reached milestone in improving the thread scaling in Chris’ threaded-io benchmark. As it stands, the runtime is 30% better in single thread (this is because the writing part of ROOT I/O is exercised by this example but it has not yet been as optimized as the reading part of the ROOT I/O library) and is 5.4 times better with 32 threads. Previously the 32 threads case was running at only 20% of the theoretical maximum (i.e. assuming complete linearity), it now runs at 70% (“fun” fact before the improvement that gave most of the boost to the scalar performance, that number had reached 80%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6559:242,optimiz,optimized,242,https://root.cern,https://github.com/root-project/root/pull/6559,2,"['optimiz', 'perform']","['optimized', 'performance']"
Performance,ReadWrite Lock performance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1427:15,perform,performance,15,https://root.cern,https://github.com/root-project/root/pull/1427,1,['perform'],['performance']
Performance,"Rebase PR #1396. Original PR comment:; ""ROOT can't autoparse classes inside namespaces with the rootmap; system (as the loading callbacks don't correctly land where; they are supposed to land with our injected namespaces). As this; turns out to be a feature of some kind, let's preload; TMVA/TreePlayer/Graf to fix all failing tests that are related; to this feature/bug with modules enabled. This commit can be dropped if we solve on of those problems:. figure out how to fix this bug in the rootmap-based loading; without regressin in performance. replace the rootmap system with something else like attaching; all C++ modules on startup. Note that we already do something like this in normal ROOT by; including these packages into the PCH which also makes those; decls available in the normal clang lookup.""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1697:120,load,loading,120,https://root.cern,https://github.com/root-project/root/pull/1697,3,"['load', 'perform']","['loading', 'performance']"
Performance,"Rebased/improved version of #4966. Several parameters can be configured via rootrc file:; ```; WebEve.GLViewer: Three #kind of GLViewer, either Three, JSRoot or RCore; WebEve.DisableShow: 1 # do not start new web browser when REveManager::Show is called; WebEve.HTimeout: 200 # timeout in ms for elements highlight; WebEve.DblClick: Off # mouse double click handling in GL viewer: Off or Reset; WebEve.TableRowHeight: 33 # size of each row in pixels in the Table view, can be used to make design more compact; ```; Implement Browse functionality - shows selected item in SummaryView. In `JSRoot` viewer: ; * Provide single-click mouse handler, used for tracks/jets selection; In `Three` viewer: ; * Improve highlight handling in plain three.js mode; * provide position-dependent context menu; In `RCore` viewer:; * load required script during `init` call. Support more dashed styles for lines. By default, double-click ignored in GL view, can be configured",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4972:815,load,load,815,https://root.cern,https://github.com/root-project/root/pull/4972,1,['load'],['load']
Performance,"Reduce duration of DF unit tests, eliminating jitting in favor of compilation where possible and optimizing obvious parameters, all without loosing any coverage. # This Pull request:. ## Changes or fixes:; The df battery of unit tests now runs a few minutes faster than before. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13621:97,optimiz,optimizing,97,https://root.cern,https://github.com/root-project/root/pull/13621,1,['optimiz'],['optimizing']
Performance,Refactor load module,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1392:9,load,load,9,https://root.cern,https://github.com/root-project/root/pull/1392,1,['load'],['load']
Performance,Refactored LoadCoreModules that it now prints a warning if a module isn't found. Also fixes some nullptr-derefs from the old code where we accessed pointers before checking if they're null.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1394:11,Load,LoadCoreModules,11,https://root.cern,https://github.com/root-project/root/pull/1394,1,['Load'],['LoadCoreModules']
Performance,"Reformulation of https://github.com/root-project/root/pull/12480. ---. Both `Foo<double>` and `Foo<Double32_t>` have the same typeid.; Before this commit, TClass::GetClass(typeid(Foo)) would return; whatever was registered last. This is not ""stable""; it depends on which; branch is accessed first, or which TClass::GetClass call happens first, or; which library is loaded first. Make this more reporducible by consistently preferring types will less; Double32_t / Float16_t occurrences in the typename. While at this, only remove a TClass from the typeid=>TClass map if it; really is the value for the typename. ---. This PR fixes #12509",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15599:365,load,loaded,365,https://root.cern,https://github.com/root-project/root/pull/15599,1,['load'],['loaded']
Performance,Register module load module,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1361:16,load,load,16,https://root.cern,https://github.com/root-project/root/pull/1361,1,['load'],['load']
Performance,"Reland ""[cxxmodules] Check correctly if the decl was cached.""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2448:53,cache,cached,53,https://root.cern,https://github.com/root-project/root/pull/2448,2,['cache'],['cached']
Performance,Reland simplify loadpcm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3747:16,load,loadpcm,16,https://root.cern,https://github.com/root-project/root/pull/3747,2,['load'],['loadpcm']
Performance,"Related to #11245 . The `-O` option of hadd can be used to force the recompression of the whole target tree (including branches and baskets) to the compression algorithm set with `-f` option. This is not clear in the current `hadd` help message.; The first commit updates the help for the `-O` option, most probably this can be further improved so suggestions are welcome!. Other commits are style changes to the message for a clearer output and code. After this PR:; ```; $: hadd -h; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge TTree objects; -O If hadd is used to merge TTree objects, compress the whole target tree; (including its branches and baskets) with the desired compression; algorithm. This can be set for example through the '-f' option; -v Explicitly set the verbosity level: 0 request no output, 99 is the; default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does; not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified; directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the; system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations (use 0 to; disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental; feature for output trees; -f Gives the ability to specify the compression level of the target file; (by default 4); -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11254:567,cache,cachesize,567,https://root.cern,https://github.com/root-project/root/pull/11254,2,"['CACHE', 'cache']","['CACHESIZE', 'cachesize']"
Performance,Release notes about includes optimization in ROOT headers [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5611:29,optimiz,optimization,29,https://root.cern,https://github.com/root-project/root/pull/5611,1,['optimiz'],['optimization']
Performance,Remove concurrent usage of TClass::TestBit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15113:7,concurren,concurrent,7,https://root.cern,https://github.com/root-project/root/pull/15113,1,['concurren'],['concurrent']
Performance,Remove the CACHE & FORCE when setting the CMAKE_CXX_FLAGS_<CONFIG> on…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6591:11,CACHE,CACHE,11,https://root.cern,https://github.com/root-project/root/pull/6591,1,['CACHE'],['CACHE']
Performance,"Remove the call to `gSystem->Load(""libMathCore"")` to try to remove dependency between the Rint and Mathcore c++ modules",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10330:29,Load,Load,29,https://root.cern,https://github.com/root-project/root/pull/10330,1,['Load'],['Load']
Performance,"Remove unnecessary checks, use R__likely macro to gain performance of; main loop",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4910:55,perform,performance,55,https://root.cern,https://github.com/root-project/root/pull/4910,1,['perform'],['performance']
Performance,"Removed explicitly loading pythia8 in pythia8 tutorials. On e.g. Docker, this test fails since the path to pythia8 is not under $PYTHIA8/lib/: http://cdash.cern.ch/testDetails.php?test=28516933&build=390221",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/903:19,load,loading,19,https://root.cern,https://github.com/root-project/root/pull/903,1,['load'],['loading']
Performance,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main(); {; ROOT::EnableImplicitMT();. const auto fpath = ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root"";; ROOT::RDataFrame(10).Define(""e"", ""rdfentry_"").Snapshot(""testd/testt"", fpath);. auto *f = TFile::Open(fpath);; auto *td = f->Get<TTree>(""testd/testt"");; auto rdftd = ROOT::RDataFrame(*td);; auto htd = rdftd.Histo1D<ULong64_t>(""e"");; std::cout << htd->GetMean() << '\n';; }; ```; yields:. ```; terminate called after throwing an instance of 'std::runtime_error'; what(): TTreeProcessorMT::Process: an error occurred while getting tree ""//eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root:/testd/testt"" from file ""root://eosuser.cern.ch//eos/user/e/eguiraud/scratch/test.root""; ```; i.e. `TTreeProcessorMT` gets the name of the TTree wrong. All 3 ingredients are needed (multi-threading, xrootd, and the sub-directory) for the problem to occur. First reported at https://root-forum.cern.ch/t/enableimplicitmt-prevents-reading-nested-ttree-from-xrootd-file-with-rdataframe/49327 , it's a similar problem to https://sft.its.cern.ch/jira/browse/ROOT-9948 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10216:874,multi-thread,multi-threading,874,https://root.cern,https://github.com/root-project/root/issues/10216,1,['multi-thread'],['multi-threading']
Performance,Reset the instance cache at the beginning of each entry.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3946:19,cache,cache,19,https://root.cern,https://github.com/root-project/root/pull/3946,1,['cache'],['cache']
Performance,Resolve ROOT-10524 TChain::LoadTree perf with multiple friends of same name,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4913:27,Load,LoadTree,27,https://root.cern,https://github.com/root-project/root/pull/4913,1,['Load'],['LoadTree']
Performance,Resolve majority of warnings from lgtm.com analyzer; Fix bug with MathJax loading,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7551:74,load,loading,74,https://root.cern,https://github.com/root-project/root/pull/7551,1,['load'],['loading']
Performance,Reuse component from `RBrowser`. Provide plugin to load file dialog on demand.; Avoids hard dependency from RBrowser libs.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13118:51,load,load,51,https://root.cern,https://github.com/root-project/root/pull/13118,1,['load'],['load']
Performance,"Revert ""Add the cwg to the prebuilt module cache path.""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2160:43,cache,cache,43,https://root.cern,https://github.com/root-project/root/pull/2160,1,['cache'],['cache']
Performance,"Revert ""Update concurrentfill.cxx (#8492)"" [skip-ci]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8495:15,concurren,concurrentfill,15,https://root.cern,https://github.com/root-project/root/pull/8495,1,['concurren'],['concurrentfill']
Performance,Reverts root-project/root#1547. This PR fails projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make by spuriously loading libRooFit.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1952:125,load,loading,125,https://root.cern,https://github.com/root-project/root/pull/1952,1,['load'],['loading']
Performance,RooChebychev: scalable implementation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3775:14,scalab,scalable,14,https://root.cern,https://github.com/root-project/root/pull/3775,1,['scalab'],['scalable']
Performance,"RooFit categories were using the class `RooCatType (: public TObject)`; instead of an integer to represent category states. It contains an integer; and a char[256], which can store a part of the category name.; This prevents fast batch access, and increases the overhead for data storage; and data loading. From now on, categories are represented as integers.; Every state index also has a state name attached, but instead of storing; it in each row of the dataset, the mapping from state index to; state name is now stored in the category class. **For reviewers**:; Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType wh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219:298,load,loading,298,https://root.cern,https://github.com/root-project/root/pull/5219,1,['load'],['loading']
Performance,RooLinkedList::At optimization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3024:18,optimiz,optimization,18,https://root.cern,https://github.com/root-project/root/pull/3024,1,['optimiz'],['optimization']
Performance,"Roofit was using TInterpreter::Next, which was actually calling; TClingTypedefInfo::InternalNext. This function is iterating each decls; and is not efficient. Measured performance of this patch on stressRooFit; testcase and it didn't have a significant different but not making roofit; slower as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1713:168,perform,performance,168,https://root.cern,https://github.com/root-project/root/pull/1713,2,['perform'],['performance']
Performance,Rootcling's stage2 mode calls gDriverConfig->fTCling__GetInterpreter() to; get the TCling's instance of the cling interpreter. This in turn might; need to initialize TCling. Our modules setup preloads a modulemap but not the overlays preventing; system modules such as libc and stl to be loaded. This criples rootcling; and whenever it #includes a header file we get an error that we included; a module from ROOT which depends on modules stl but it is not accessible; through the module map.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1395:288,load,loaded,288,https://root.cern,https://github.com/root-project/root/pull/1395,1,['load'],['loaded']
Performance,"RunGraphs makes a summary log entry for the jitting time of all computation graphs that are being run concurrently. Generally this is ok, but in the case users specifically requested a log level of kDebug+10 or higher this would accidentally silence the logging of what code is being jitted.; With this patch, if log level is kDebug+10 or higher, RunGraphs avoids silencing inner logs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11832:102,concurren,concurrently,102,https://root.cern,https://github.com/root-project/root/pull/11832,1,['concurren'],['concurrently']
Performance,"Saves one round trip when opening an RNTuple. Also adds reading the header and the footer to the accounting. As a follow-up, we should store the location of the first page list in the anchor. That would give us the option to load that page list in the same vector read, too.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15835:225,load,load,225,https://root.cern,https://github.com/root-project/root/pull/15835,1,['load'],['load']
Performance,"Science Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the source tree (`roofitcore/MultiProcess`), but have only been partially maintained since we started with the final version. Probably the best thing to do there is to remove that, but maybe people disagree and want to keep it for comparison while benchmarking and reproducing the results of the proof-of-concept benchmarks. Note: BidirMMapPipe is in there as well, since it was moved there. This cla",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:5499,optimiz,optimization,5499,https://root.cern,https://github.com/root-project/root/pull/8294,1,['optimiz'],['optimization']
Performance,"See cms-sw/cmssw#33361. Fixes #8048. Now, set the start point of the filling to be the end of the previous filling rather than the start of the current cluster (which can sometimes; be before the end of the previous filling). Issue: The error message was inaccurate, it did not take into account jagged filling of the TTreeCache. In this case, the cache was filled with a little more than one cluster and when it needs to do the next refill it restarted from the cluster start boundary of that partially downloaded cluster which is “indeed” within the range of the last TreeCache fill (i.e. the error). We did not see the problem with a local file because the TTreeCache usage is different. CMSSW take note of whether prefetching (asynchronous reads) is available for a while or not. In the setup CMSSW has, the prefetching (asynchronous reads) is available for the local file but not for the network/remote file. In addition when prefetching (asynchronous reads) is not available, CMSSW uses multiple TTreeCache for a given TTree while it uses only one when prefetching (asynchronous reads) is available. This results in the pattern of filling to be different between the 2 cases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8049:348,cache,cache,348,https://root.cern,https://github.com/root-project/root/pull/8049,1,['cache'],['cache']
Performance,"See discussion at https://github.com/root-project/root/pull/7286. This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * Skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * Skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which counts the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7339:148,perform,performance,148,https://root.cern,https://github.com/root-project/root/pull/7339,3,"['Optimiz', 'perform', 'queue']","['Optimization', 'performance', 'queue']"
Performance,"See https://github.com/root-project/root/pull/12650. On an extreme example:; ```; 15,272,928 entries; 152,739 baskets (and as many clusters); 10,000 Actual TTreeCache buffer size (minimum allowed); 8,442 estimated buffer size of TTreeCache (1.5 times compressed buffer size); 400 bytes per baskets; 100 entries per baskets (i.e. per clusters); 25 number of cluster per TTreeCache buffer for single branch with default size.; 1 float per entry (reading a single branch).; ```; This repairs the performance of a simple TTree::Draw of a single branch; from 1 hour back down to 7s (performance seem in v6.12). One additional improvement, increase the performance by 20% on that same example.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12651:493,perform,performance,493,https://root.cern,https://github.com/root-project/root/pull/12651,3,['perform'],['performance']
Performance,See https://root-forum.cern.ch/t/rootlogon-c-r-load-library-mca8000a-cxx/50565,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12801:47,load,load-library-,47,https://root.cern,https://github.com/root-project/root/issues/12801,1,['load'],['load-library-']
Performance,See https://root-forum.cern.ch/t/serious-degradation-of-i-o-performance-from-6-20-04-to-6-22-06/43584/10,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7253:60,perform,performance-from-,60,https://root.cern,https://github.com/root-project/root/pull/7253,1,['perform'],['performance-from-']
Performance,"See in-code comment for more details. Note: this bug is routinely seen on the CI, where it causes occasional failures to the tests in question. Despite this solution being very suboptimal (the bug is most likely still present in many places of our codebase and can be encountered by users in the wild) we should at least be able to remove the random CI failures on our side. A proper solution would be nice, but it seems hard to come up with one that doesn't have big performance implications. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16412:468,perform,performance,468,https://root.cern,https://github.com/root-project/root/pull/16412,1,['perform'],['performance']
Performance,"See old [PR#3414](https://github.com/root-project/root/pull/3414) for initial discussion. This PR cleans of the code a bit and adds tests. @josephmckenna Creating the testing code was slightly involved, hence the new PR and not asking you to submit a fix. I think the idea is a nice and natural improvement on the functionality that was already implemented. Motivation from original submitter:; > To explore the performance of a range of settings for BDTs, we often find a 0.1% background level most interesting for our physics applications for us in the ALPHA collaboration. Instead of adding one additional use case, I have added a general form such that users could set:; > // factory->OptimizeAllMethods(""SigEffAtBkgEff0001"",""Scan"");",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3493:412,perform,performance,412,https://root.cern,https://github.com/root-project/root/pull/3493,2,"['Optimiz', 'perform']","['OptimizeAllMethods', 'performance']"
Performance,Seen while building latest master with -Dasan=ON. ```; /home/vpadulan/Programs/rootproject/rootbuild/master-2024-09-16-testing-asan/include/ROOT/RVec.hxx:515:4: error: non-stati; c data member cannot be constexpr; did you intend to make it static?; constexpr std::size_t cacheLineSize = std::hardware_destructive_interference_size;; ^; static; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16445:271,cache,cacheLineSize,271,https://root.cern,https://github.com/root-project/root/pull/16445,1,['cache'],['cacheLineSize']
Performance,Set cache file dir when using CACHEREAD option,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2246:4,cache,cache,4,https://root.cern,https://github.com/root-project/root/pull/2246,2,"['CACHE', 'cache']","['CACHEREAD', 'cache']"
Performance,Set cling optimization level to 3 and turn off pointer checks,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6038:10,optimiz,optimization,10,https://root.cern,https://github.com/root-project/root/pull/6038,1,['optimiz'],['optimization']
Performance,"Set the default optimization level for ROOT's cling to O1, and allow cling users to pass `-O...`. If perf results tell us that O1 is too slow, we can switch back to O0 for ""non-Linux or tty attached"" (i.e. interactive ROOT) in a subsequent PR. This will get merged *after* https://github.com/root-project/root/pull/6385",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7283:16,optimiz,optimization,16,https://root.cern,https://github.com/root-project/root/pull/7283,1,['optimiz'],['optimization']
Performance,"Several improvements to the [`RooDataSet` constructor](https://root.cern.ch/doc/master/classRooDataSet.html#a6a2302f27e1b016a0351f6e0a0329fa2) that takes command arguments to import other data:. 1. Automatically create weight variable when importing multiple data slices (closes #11487); 2. Support importing also RooDataHists (also as slices for combined datasets), and filling the weight errors correctly to match the `weightSquared()`; 3. Create the weight variable on the fly if it was specified by name in `WeightVar()` but is not in the list of variables; 4. Have a default argument for `WeightVar(=""weight"")`, because that's usually the name anyway; 5. Fix `RooVectorDataStore::loadValues()` for loading values from another vector data store: so far it used `assignValueOnly` to copy the values over, but the values might have errors, like for example in the case of importing a RooDataHist. That's why the regular `RooAbsCollection::assign()` is used now. All of these changes result in several code simplifications in the cases where RooDataSets are imported from other data, and fixes the bugs that might have been because the `weightSqaured()` was usually not transferred correctly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12227:685,load,loadValues,685,https://root.cern,https://github.com/root-project/root/pull/12227,2,['load'],"['loadValues', 'loading']"
Performance,Short cut to call Modified() and Update() in a single call and on Mac perform an additional ProcessEvents().; This will solve https://sft.its.cern.ch/jira/browse/ROOT-9200,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5927:70,perform,perform,70,https://root.cern,https://github.com/root-project/root/pull/5927,1,['perform'],['perform']
Performance,"Short cut to call Modified() and Update() in a single call.; On Mac with Cocoa, it performs an additional ProcessEvents().",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14671:83,perform,performs,83,https://root.cern,https://github.com/root-project/root/pull/14671,1,['perform'],['performs']
Performance,Should slightly improve performance while there is no need to create temporary object instance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7520:24,perform,performance,24,https://root.cern,https://github.com/root-project/root/pull/7520,1,['perform'],['performance']
Performance,"Significant revamp of FillBuffer. The new scheme insures a much more stable and efficient behavior in case of low; memory given by the user compared to the size of the buffer or 'odd' basket; layout. The basket collection is now done in 4 phases:. 1. One basket per branch, basket must contains the request entry and is not yet loaded or used,; 2. Even out by adding baskets so that all branches reach the same entry (or close); 3. Add the remaining branches from the current cluster.; 4. Add the basket from the begining of the clsuter to the current entry (if any). then repeat the 4 steps for the next cluster. The iteration is stopped as soon as the cache is 'full' as defined by these; rules:. - During step 1 of the first cluster, continue up to 4 times the user requested; cache size; - During steps 2 to 4 of the first cluster, continue up to 2 times the user; requested cache sizep; - During steps 2 to 4, the 'first' basket of a branch is accepted up to 4 times; the user requested cache size (i.e as if it had been selected during the 1st; step); - During the other clusters, continue up to the user requested cache size. A basket if rejected/skipped if its individual size is larger than the user; requested cache size. In addition, upon seeing a cache miss, FillBuffer now detects if all the basket; in the cache have already been used (read from the cache) in which case we can\; discard them and load the next set of baskets. As a side effect, we now keep a record of which baskets are in the cache and; which of those baskets have been used. The TTreePerfStats now keep a complete; log of all the basket that are:; - loaded in the main cache (and how many times); - loaded in the 'misss' cache (and how many times); - used; - read directly (complete cache miss); This will be helpful in understanding situation of over-read or slow operations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1960:328,load,loaded,328,https://root.cern,https://github.com/root-project/root/pull/1960,17,"['cache', 'load']","['cache', 'load', 'loaded']"
Performance,"Simplify code, remove race condition. It didn't do much harm, but it's also not a good idea to show this in a tutorial ... - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9352:22,race condition,race condition,22,https://root.cern,https://github.com/root-project/root/pull/9352,1,['race condition'],['race condition']
Performance,Simply load MultiView.C macro and does not try to compile it; It only defines some simple service GUI structures,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7218:7,load,load,7,https://root.cern,https://github.com/root-project/root/pull/7218,1,['load'],['load']
Performance,Since JSROOT v7 one should use modules or bundle provided as `build/jsroot.js`.; This bundle can be loaded with `require.js` (as in jupyter notebooks) or just as regular script (as in jupyter lab). Usage of `JSRootCore.js` is obsolete and should be avoided. Use JSROOT version 7.2.1 as fallback if local version is not available.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11767:100,load,loaded,100,https://root.cern,https://github.com/root-project/root/pull/11767,1,['load'],['loaded']
Performance,"Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```; \#define _PyMethod_CAST(meth) \; (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)); [...]; static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {; return _PyMethod_CAST(meth)->im_self;; }; ```. It's fair that the assert fails, because the Python type of `meth` in this context is not a `PyMethod_Type`, but the; `CustomInstanceMethod_Type` from cppyy. However, as can be seen in the implementation of `CustomInstanceMethod_New`, the actual C++ type that implements this custom cppy type is just the regular `PyMethodObject`. Hence, this commit suggests new assert-free `CustomInstanceMethod_GET_*` macros that replace the `PyMethod_GET_*` macros in the context of the `CustomInstanceMethod` implementation. Quick link to the file I'm talking about:; https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx. Link to upstream PR:; https://github.com/wlav/CPyCppyy/pull/9",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13912:91,perform,performs,91,https://root.cern,https://github.com/root-project/root/pull/13912,1,['perform'],['performs']
Performance,"Since Python 3.12, in the implementation of 'classobject.h' the function PyMethod_GET_SELF performs an assert to check that the passed function argument is a method:. ```; \#define _PyMethod_CAST(meth) \; (assert(PyMethod_Check(meth)), _Py_CAST(PyMethodObject*, meth)); [...]; static inline PyObject* PyMethod_GET_SELF(PyObject *meth) {; return _PyMethod_CAST(meth)->im_self;; }; ```. This is in general not strictly necessary nor true, since the passed argument may be a free function. Prevent this assert from breaking the flow by preemptively catching such situations and creating the Python instance method anyway. Fixes #13864",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13903:91,perform,performs,91,https://root.cern,https://github.com/root-project/root/pull/13903,1,['perform'],['performs']
Performance,"Since ROOT 6.26, the HistFactory models include the RooBinWidthFunction; to multiply the yields in the RooHistFuncs with the inverse bin widths,; in order to get the correct probability density. That's great and fixes HistFactory for non-uniform binnings, but it is; not optimal for the `BinnedLikelihood` code path. Here, the bin widths; need to multiplied back again to get the event yields in each bin. This commit suggests to improve the situation for the new BatchMode by; propagating the information that we are building a binned likelihood; down to the RooBinWidthFunctions, such that they can remove themselves. Then, if such RooBinWidthFunctions were encountered and disabled, the NLL; knows that it can skip the multiplication with the bin widths. What is proposed here looks like a small performance optimization only,; but actually the main motivation is not performance but RooFit AD; support. By removing the RooBinWidthFunctions from the computation graphs; of HistFactory likelihoods, we don't need to implement code generation; support for this class, which would be not trivial in the general; n-dimensional case. With the suggestion in this PR, all that work is; avoided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13024:799,perform,performance,799,https://root.cern,https://github.com/root-project/root/pull/13024,3,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"Since all df10* tutorials use IMT(hardware concurrency), it's; inefficient to run them in parallel. This regularly brings us into; timeouts in the nightlies.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6274:43,concurren,concurrency,43,https://root.cern,https://github.com/root-project/root/pull/6274,1,['concurren'],['concurrency']
Performance,"Since all df10* tutorials use IMT(hardware concurrency), it's; inefficient to run them in parallel. This regularly brings us into; timeouts in the nightlies.; To avoid this, those tutorials are now locking the resource; ""multithreaded"", which means that they don't run in parallel. Other; tests that don't have this resource lock still run, though. To reduce; congestion, the RDF tutorials now claim that they use 4 CPUs. That's in; general not true, on an e.g. 8-core machine, CMake will run an IMT=8; with 4 single-threaded ctest, leading to an oversubscription of 1.5; instead of the 2 or more we had before. Backported from 668e0444d17e2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6280:43,concurren,concurrency,43,https://root.cern,https://github.com/root-project/root/pull/6280,1,['concurren'],['concurrency']
Performance,"Since commit 3b623b2cfa (""[DF] Use dtors to perform clean-up tasks in column readers""), the destructor resets the `std::unique_ptr` holding a `TTreaderValue`, which is the default of the pointer's destructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16158:44,perform,perform,44,https://root.cern,https://github.com/root-project/root/pull/16158,1,['perform'],['perform']
Performance,"Since the proper creation of the TClass will require the dictionary for all its component let; load all the dependent library too. Note that even with explicit linking, the dictionary may; not be loaded as part of the 'main' library when the dictionary is a library separate from the; classes' code (see ATLAS setup for example). This solves ROOT-10663.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5486:95,load,load,95,https://root.cern,https://github.com/root-project/root/pull/5486,2,['load'],"['load', 'loaded']"
Performance,"Skip registration of TFile UUIDs in the global list when using the """"""READ_WITHOUT_GLOBALREGISTRATION"""""" option with TFile (used by default in TTreeProcessorMT). This avoids the final use of the global write lock during typical RDataFrame event loops, significantly improving multi-threaded performance for cases with many files and many threads. This follows up on https://github.com/root-project/root/pull/9486 and mostly finishes addressing https://github.com/root-project/root/issues/7710. Skipping the UUID registration breaks the particular case where a TRef points to the TFile object, but as per the discussion in this PR, this use case has thread-safety problems for TFile objects being managed by TTreeProcessorMT anyways. A test case is below. Produce the test dataset:. ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();; }. }; ```. Test event loop:. ```python; import ROOT; ROOT.gInterpreter.ProcessLine("".O3""); ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. With 256 threads (on partly loaded machine, but still representative):. Baseline:; Percent of CPU this job got: 1557%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:49.89. +this PR; Percent of CPU this job got: 14271%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.11",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10318:276,multi-thread,multi-threaded,276,https://root.cern,https://github.com/root-project/root/pull/10318,3,"['load', 'multi-thread', 'perform']","['loaded', 'multi-threaded', 'performance']"
Performance,Slow performance was due to excessive fsync and writing of TTree objects resulting in byte written to disk far exceeding the file size ... (code was using AutoSave instead of AutoFlush). Added speeding up of test-bench.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3196:5,perform,performance,5,https://root.cern,https://github.com/root-project/root/pull/3196,1,['perform'],['performance']
Performance,Small change to TTree::OptimizeBaskets to avoid disc reads,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/369:23,Optimiz,OptimizeBaskets,23,https://root.cern,https://github.com/root-project/root/pull/369,1,['Optimiz'],['OptimizeBaskets']
Performance,"Snapshot, Cache, Define and Filter did not check that the types of; columns used as arguments in jitted code were valid (in particular,; that the type of custom columns was correctly understood by cling).; This patch provides a function that performs the validity check,; GetValidatedArgTypes, that is used everywhere instead of GetColumnTypes; (now unused and therefore deleted) and ColumnName2ColumnTypeName. An exception with a user-friendly error message is thrown in case of; error, which fixes ROOT-10458.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5595:10,Cache,Cache,10,https://root.cern,https://github.com/root-project/root/pull/5595,2,"['Cache', 'perform']","['Cache', 'performs']"
Performance,Solves a bug in the TFITSIO code when reading a FITS binary table that; contained a column of type LOGICAL. The code in TFISTIO:LoadHDU only; had tests for column types of strings or numeric so it was failing with the error. “bad binary table datatype”,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1590:128,Load,LoadHDU,128,https://root.cern,https://github.com/root-project/root/pull/1590,1,['Load'],['LoadHDU']
Performance,Solves problem with gcc10 warnings. Temporary skip CI to avoid load on Jenkins nodes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5840:63,load,load,63,https://root.cern,https://github.com/root-project/root/pull/5840,1,['load'],['load']
Performance,"Some libraries are layered can depend on other libraries on a private paths. That is, libA can depend on libB which is neither on the LD_LIBRARY_PATH nor on a known system path. The posix linker injects ""variables"" such as @rpath which is expanded at link time to resolve the libraries on a relative path. Prior to this patch, cling's Dyld-based symbol resolution could not trace down such cases causing failures in symbol resolution when a symbol is only defined in libB (a private library). This patch implements the basic posix linker substitutions allowing cling's Dyld-based symbol resolution implementation to follow more closely the linker rules. ## Performance. |platform|test|master|PRv1|PRv2| mem master|mem PRv2|; |:--------|:---|:---------:|:-----------:|:-----------:|:-----------:|:-----------:|; |ubu20|roottest-python-pythonizations|6.5|6.55|6.65|342076|347168|; |ubu20|roottest-cling|112.8|114.53|181.26|411048|416036|; |ubu20|roottest-python|148.5|136.26|144.72|394292|397120|; |ubu20|roottest-root-hist|16.78|17.35|15.45|465156|235084|; |ubu20|roottest-root-math|28.28|27.89|27.40|424072|371256|; |ubu20|roottest-root-tree|462.84|510.59|465.79|796512|797992|; |ubu20|roottest-root-treeformula|117.53|129.16|114.44|261184|260168|; |ubu20|root-io-stdarray|66.90|67.89|65.71|263424|255120|; |ubu20|roottest-root-treeformula|117.55|129.10|; |osx 10.15|roottest-python-pythonizations|17.25|16.06|; |osx 10.15|roottest-cling|346.06|343.46|; |osx 10.15|roottest-root-hist|36.06|36.22|; |osx 10.15|roottest-root-math|49.78|52.42|; |osx 10.15|root-io-stdarray|119.32|118.73|. That PR should reduce the number of `stat` calls improving #7774. Kudos Alexander Penev (@alexander-penev).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6969:657,Perform,Performance,657,https://root.cern,https://github.com/root-project/root/pull/6969,1,['Perform'],['Performance']
Performance,"Some of the TMVA tutorials run in parallel and rely on the same generated file. Typically, one tutorial may depend on another one that generates the file. The top level ones did not depend on each other, thus running in parallel and causing a race condition. This PR should solve this issue by making them depend on each other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/426:243,race condition,race condition,243,https://root.cern,https://github.com/root-project/root/pull/426,1,['race condition'],['race condition']
Performance,"Some of the tests in `tutorials/roostats/` uses the file `example_combined_GaussExample_model.root`. If this file does not exist, one of the tests will create it. As these are executed in parallel, there is a chance of race condition and one of the tests might fail, as seen in this build: http://cdash.cern.ch/testDetails.php?test=22401472&build=324697; This PR attempts to fix this by executing all tests sequentially that uses the file `example_combined_GaussExample_model.root`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/362:219,race condition,race condition,219,https://root.cern,https://github.com/root-project/root/pull/362,1,['race condition'],['race condition']
Performance,"Some platforms respect RTLD_LOCAL: symbols from libraries loaded with; this flag cannot be resolved by dlsym through the process. They should; instead be exposed to the JIT by calling ExposeHiddenSharedLibrarySymbols().; But then the JIT needs to actually make use of these libraries from; symbol resolution. That is done by setting SearchOrder to SO_LoadedLast, as; nicely documented in that flag. Fixes ROOT not finding libCling symbols on some platforms, e.g. CentOS7,; Ubuntu 16 and 18.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6126:58,load,loaded,58,https://root.cern,https://github.com/root-project/root/pull/6126,1,['load'],['loaded']
Performance,"Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10671:84,perform,performance,84,https://root.cern,https://github.com/root-project/root/pull/10671,1,['perform'],['performance']
Performance,Sometimes the serialised methods will fail to load due to missing files.; This adds more output and checks to verify that required files exist to; better pinpoint the problem.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2526:46,load,load,46,https://root.cern,https://github.com/root-project/root/pull/2526,1,['load'],['load']
Performance,"Split monolitic RBrowser libs on following components. * **ROOTBrowsable** - core functionality for browsing of objects plus support of TObject classes, depends only on libCore and libRIO; * **ROOTObjectDrawProvider** - small factory for drawing TObject in RCanvas/TCanvas, dependency from Gpad, Gapdv7; * **ROOTTreeDrawProvider** - special support of TTree::Draw on RCanvas/TCanvas, dependency from Gpad, Gapdv7, Tree; * **ROOTHistDrawProvider** - v7 Hist drawing on RCanvas, dependency from Gapdv7, Histv7; * **ROOTBrowserv7** - RBrowser and RFileDialog, depend on RBrowsable and gpad libs, load necessary drawing/browser libs when required. That is missing is configurable factory methods to load library depending on object class.; For the moment library names are hard corded",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4767:593,load,load,593,https://root.cern,https://github.com/root-project/root/pull/4767,2,['load'],['load']
Performance,Start 393: gtest-tree-dataframe-test-datasource-csv; 416/1231 Test #388: gtest-tree-dataframe-test-dataframe-vary ............................ Passed 6.93 sec; Start 394: gtest-tree-dataframe-test-dataframe-concurrency; 417/1231 Test #379: gtest-tree-dataframe-test-dataframe-snapshot ........................ Passed 20.68 sec; Start 395: gtest-tree-dataframe-test-datasource-ntuple; 418/1231 Test #389: gtest-tree-dataframe-test-datasource-more ........................... Passed 7.48 sec; Start 396: gtest-tree-dataframe-test-datasource-sqlite; 419/1231 Test #395: gtest-tree-dataframe-test-datasource-ntuple ......................... Passed 1.80 sec; Start 397: pyunittests-dataframe-misc; 420/1231 Test #393: gtest-tree-dataframe-test-datasource-csv ............................ Passed 3.56 sec; Start 398: pyunittests-dataframe-histograms; 421/1231 Test #391: gtest-tree-dataframe-test-datasource-trivial ........................ Passed 6.48 sec; Start 399: pyunittests-dataframe-cache; 422/1231 Test #396: gtest-tree-dataframe-test-datasource-sqlite ......................... Passed 4.60 sec; Start 400: pyunittests-dataframe-merge-results; 423/1231 Test #397: pyunittests-dataframe-misc .......................................... Passed 3.66 sec; 424/1231 Test #398: pyunittests-dataframe-histograms .................................... Passed 3.40 sec; 444/1231 Test #400: pyunittests-dataframe-merge-results ................................. Passed 4.48 sec; 446/1231 Test #376: gtest-tree-dataframe-test-dataframe-simple .......................... Passed 38.57 sec; 447/1231 Test #399: pyunittests-dataframe-cache ......................................... Passed 10.50 sec; Start 447: tutorial-dataframe-df000_simple; Start 448: tutorial-dataframe-df001_introduction; Start 449: tutorial-dataframe-df002_dataModel; 470/1231 Test #447: tutorial-dataframe-df000_simple ..................................... Passed 2.85 sec; Start 450: tutorial-dataframe-df003_profiles; Start 451: tutorial-dat,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:5970,cache,cache,5970,https://root.cern,https://github.com/root-project/root/pull/10300,1,['cache'],['cache']
Performance,"Starting from the `debian:sid` Docker image, create the following environment:; ```; apt update && apt dist-upgrade; apt install cmake gcc g++ git libxrootd-client-dev ninja-build python3; ```; Then clone `root.git` and configure + build with; ```; cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -Dx11=OFF ../root/; ninja; ```; Afterwards try executing `./bin/root.exe tutorials/dataframe/df103_NanoAODHiggsAnalysis.C`. It will hang and setting `XRD_LOGLEVEL=Debug` reveals:; ```; [2023-02-06 12:00:28.136048 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Sending authentication data; [2023-02-06 12:00:28.137346 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Trying to authenticate using krb5; [2023-02-06 12:00:28.137406 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Cannot get credentials for protocol krb5: Seckrb5: No or invalid credentials; No credentials cache found (p=xrootd/eospublic.cern.ch@CERN.CH).; [2023-02-06 12:00:28.137968 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Trying to authenticate using gsi; [2023-02-06 12:00:32.761097 +0000][Debug ][XRootDTransport ] [eospublic.cern.ch:1094.0] Cannot get credentials for protocol gsi: Secgsi: ErrParseBuffer: unknown CA: cannot verify server certificate: kXGS_init; ```. Instead, installing the `xrootd-client` package and running; ```; xrdcp root://eospublic.cern.ch//eos/root-eos/cms_opendata_2012_nanoaod_skimmed/SMHiggsToZZTo4L.root .; ```; works just fine - the `Debug` log shows that it proceeds with `Trying to authenticate using uni` (after `Cannot get credentials for protocol gsi` was also signaled kind of immediately).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12231:897,cache,cache,897,https://root.cern,https://github.com/root-project/root/issues/12231,1,['cache'],['cache']
Performance,"StreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x109986ba0, conf=0x10a395fa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1405; #37 0x00007fffa92d3130 in TStreamerInfoActions::TConfiguredAction::operator() (this=0x109f4d790, this=0x109f4d790, object=0x109986ba0, buffer=...) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TStreamerInfoActions.h:123; #38 TBufferFile::ApplySequence (obj=0x109986ba0, sequence=..., this=0x7ffff83ea100) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:3580; #39 TBufferFile::ApplySequence (this=0x7ffff83ea100, sequence=..., obj=0x109986ba0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:3562; #40 0x00007fffa92de27c in TBufferFile::ReadClassBuffer (this=0x7ffff83ea100, cl=0x10a596170, pointer=0x109986ba0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TStreamerInfo.h:209; #41 0x00007fffa8f0d858 in TClass::ReadBuffer (this=<optimized out>, b=..., pointer=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6758; #42 0x00007fffa98ea688 in TMVA::Experimental::SOFIE::RModel::Streamer (R(bool)=..., this=0x109986ba0) at /builddir/build/BUILD/root-6.28.00/tmva/sofie/src/RModel.cxx:646; #43 TMVA::Experimental::SOFIE::RModel::Streamer (this=0x109986ba0, R(bool)=...) at /builddir/build/BUILD/root-6.28.00/tmva/sofie/src/RModel.cxx:644; #44 0x00007fffa8f0aa30 in TClass::StreamerTObject (pThis=0x10a596170, object=0x109986ba0, b=...) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6797; #45 0x00007fffa93abef0 in TClass::Streamer (onfile_class=0x0, b=..., obj=0x109986ba0, this=0x10a596170) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #46 TKey::ReadObjectAny (this=0x10aa98220, expectedClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TKey.cxx:1102; #47 0x00007fffa934c51c in TDirectoryFile::GetObjectChecked (this=0x7ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:9944,optimiz,optimized,9944,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,Summary of the changes in Vc 0.7.4:; - fixed several compile errors / warnings with newer or old C++; compilers; - support clean compilation with more -W flags; - fixed compilation when compiling without optimization; - added operator-- to Vector<T>; - Copying Memory now uses SIMD move instructions; - Vc::Allocator<T> now uses a minimum alignment of the SIMD types of; the chosen Vc implementation. Thus making it useable for containers of; builtin types. Signed-off-by: Matthias Kretz kretz@kde.org,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/19:204,optimiz,optimization,204,https://root.cern,https://github.com/root-project/root/pull/19,1,['optimiz'],['optimization']
Performance,"System.cxx:3586; #7 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=..., this=0x7fffd51c79a0) at /usr/include/c++/8/new:169; #9 llvm::orc::ExecutionSession::lookup (this=0x1740989b0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; #10 0x00007fff9ba04d00 in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /usr/include/c++/8/bits/atomic_base.h:295; #11 0x00007fff9a459050 in llvm::orc::LLJIT::lookupLinkerMangled (Name=..., JD=..., this=0x174098770) at /usr/include/c++/8/ppc64le-redhat-linux/bits/gthr-default.h:778; #12 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x174098770) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #13 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x174098770) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x17404b400, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #15 0x00007fff9a450208 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:21245,optimiz,optimized,21245,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"System.cxx:3586; #7 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=..., this=0x7ffff83e9070) at /usr/include/c++/8/new:169; #9 llvm::orc::ExecutionSession::lookup (this=0x1099d16e0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; #10 0x00007fffa4604d20 in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /usr/include/c++/8/bits/atomic_base.h:295; #11 0x00007fffa3058c20 in llvm::orc::LLJIT::lookupLinkerMangled (Name=..., JD=..., this=0x10993f430) at /usr/include/c++/8/ppc64le-redhat-linux/bits/gthr-default.h:778; #12 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x10993f430) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #13 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x10993f430) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x109984c70, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:583; #15 0x00007fffa3050770 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:3739,optimiz,optimized,3739,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"T2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so; #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70; #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:13594,optimiz,optimized,13594,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"TATION <td>ON (OFF) <td>Build Doxygen HTML documentation; ## <tr><td>CLI11_DIR <td>/opt/CLI11 <td>CLI11 git repository; ## <tr><td>CMAKE_BUILD_TYPE <td>Release (Debug) <td>Choose the type of build; ## <tr><td>ENABLE_TESTS <td>ON (OFF) <td>Build CTests; #~ ## <tr><td>FunctionalPlus_DIR <td>/opt/FunctionalPlus/install/lib/cmake/FunctionalPlus <td>FPlus install folder containing FindFunctionalPlus; ## <tr><td>CMAKEMODULES_DIR <td>/opt/cmake-modules <td>rpavlik git source dir, use https://github.com/ferdymercury/cmake-modules and git checkout master; ## <tr><td>ROOT_DIR <td>$ROOTSYS (/opt/root) <td>ROOT build directory; ## <tr><td>ZSTR_DIR <td>/opt/zstr <td>ZSTR git repository; ## </table>; ##; ## CMAKE_DOCUMENTATION_END; ## See https://www.stack.nl/~dimitri/doxygen/manual/tables.html. # Add Doxygen documentation https://stackoverflow.com/questions/34878276/build-doxygen-from-cmake-script. ### cmake-modules; if(NOT DEFINED CMAKEMODULES_DIR); set (CMAKEMODULES_DIR ""/opt/cmake-modules"" CACHE STRING ""cmake-modules git repository""); endif(); list(APPEND CMAKE_MODULE_PATH ""${CMAKEMODULES_DIR}""). option(BUILD_DOCUMENTATION ""Create and install the HTML based API documentation (requires Doxygen)"" ON); if(BUILD_DOCUMENTATION); find_package(Doxygen OPTIONAL_COMPONENTS dot). if(DOXYGEN_FOUND); set(DOXYGEN_PROJECT_NAME ""Data Acquisition System""); set(DOXYGEN_USE_MDFILE_AS_MAINPAGE ""${CMAKE_SOURCE_DIR}/README.md""); set(DOXYGEN_WARN_NO_PARAMDOC YES); set(DOXYGEN_GENERATE_QHP YES); set(DOXYGEN_QCH_FILE ""TheName.qch""); set(DOXYGEN_QHP_NAMESPACE org.doxygen.TheName.Project); set(DOXYGEN_GENERATE_LATEX NO); set(DOXYGEN_GENERATE_TREEVIEW YES); #set(DOXYGEN_HIDE_UNDOC_RELATIONS NO); #set(DOXYGEN_DOT_NUM_THREADS 1); #set(DOXYGEN_UML_LOOK YES); #set(DOXYGEN_UML_LIMIT_NUM_FIELDS 50); #set(DOXYGEN_TEMPLATE_RELATIONS YES); set(DOXYGEN_DOT_IMAGE_FORMAT svg); set(DOXYGEN_INTERACTIVE_SVG YES); #set(DOXYGEN_DOT_GRAPH_MAX_NODES 100); #set(DOXYGEN_DOT_TRANSPARENT YES); #set(DOXYGEN_OUTPUT_DIRECTORY ${",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8999:1949,CACHE,CACHE,1949,https://root.cern,https://github.com/root-project/root/issues/8999,1,['CACHE'],['CACHE']
Performance,TBranch::GetBulkEntries proper handling of already loaded basket,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6519:51,load,loaded,51,https://root.cern,https://github.com/root-project/root/pull/6519,1,['load'],['loaded']
Performance,TBranch::GetBulkEntries proper handling of already loaded basket. This fixes #6416 and fixes #6417,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6519:51,load,loaded,51,https://root.cern,https://github.com/root-project/root/pull/6519,1,['load'],['loaded']
Performance,TClassEdit: make usage of static cache container thread safe.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10369:33,cache,cache,33,https://root.cern,https://github.com/root-project/root/pull/10369,1,['cache'],['cache']
Performance,"TCling::IsLoaded was impressively slow because it's allowing ""header""; input file. If you already know that your file is a library, it's better; to use IsLibraryLoaded as this makes a difference in performance. Modules, w/o this patch; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.08 seconds Cpu Time = 0.07 seconds; (TFile *) 0x5563018a1d30; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 1.524314 seconds; sys time = 0.157075 seconds; res memory = 546.867 Mbytes; vir memory = 895.184 Mbytes; ```; With this patch; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.06 seconds Cpu Time = 0.04 seconds; (TFile *) 0x555b420dca90; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.470026 seconds; sys time = 0.056668 seconds; res memory = 299.688 Mbytes; vir memory = 560.188 Mbytes; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128:198,perform,performance,198,https://root.cern,https://github.com/root-project/root/pull/2128,1,['perform'],['performance']
Performance,"TCling::Load reloads the library the `system` optional parameter is false. If the library is not marked as `system` TCling reloads it if was alread loaded. That is, it dlcloses and dlopens the library instead of doing nothing. There is no point in reloading our library dependencies. The regression was introduced in 9b6df8c originated from https://github.com/root-project/root/commit/e649f59e3160f829bc1a4813f8aa73bdd16b6cff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5485:8,Load,Load,8,https://root.cern,https://github.com/root-project/root/pull/5485,2,"['Load', 'load']","['Load', 'loaded']"
Performance,TEnum currently always relies on Cling (via the TEnum::fInfo data member) to retrieve the underlying type. Concretely this means that the TEnum loaded from a rootpcm always returns the incorrect/default information.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6725:144,load,loaded,144,https://root.cern,https://github.com/root-project/root/issues/6725,1,['load'],['loaded']
Performance,TFileMerger _actually_ delete directory only if we induced its creation/loading,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8228:72,load,loading,72,https://root.cern,https://github.com/root-project/root/pull/8228,1,['load'],['loading']
Performance,TFormula error when loading gdml using matrix,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13074:20,load,loading,20,https://root.cern,https://github.com/root-project/root/issues/13074,1,['load'],['loading']
Performance,TGPictureButton does not load image from disk,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6985:25,load,load,25,https://root.cern,https://github.com/root-project/root/issues/6985,1,['load'],['load']
Performance,"TH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:2136,load,loaded,2136,https://root.cern,https://github.com/root-project/root/issues/10704,1,['load'],['loaded']
Performance,"TLS is currently not suppored in the JIT. However, it's possible to; enable emulated TLS support in LLVM which means that we now support; TLS across all architectures. The performance downsides of this; should be neglectiable and can be easily worked around (by merging; TLS variables into a single one). Patch created with a lot of help from Lang Hames and Pavel Labath!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1208:172,perform,performance,172,https://root.cern,https://github.com/root-project/root/pull/1208,1,['perform'],['performance']
Performance,"TMVA new developments. * improvements for class TMVA::Envelope; * Added class TMVA::Classification to perform two class Classification; * Support to Train/Test multiple booked ml methods in parallel with MultiProc, calling the method Evaluate; * Documentation with Doxygen; * Test with Google Tests; * Example in Tutorials. Cheers,; O.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1316:102,perform,perform,102,https://root.cern,https://github.com/root-project/root/pull/1316,1,['perform'],['perform']
Performance,"TMVA new developments; * improvements for class TMVA::Envelope; * Added class TMVA::Classification to perform two class Classification; * Support to Train/Test multiple booked ml methods in parallel with MultiProc, calling the method Evaluate; * Documentation with Doxygen; * Test with Google Tests; * Example in Tutorials.; Cheers,; O.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1315:102,perform,perform,102,https://root.cern,https://github.com/root-project/root/pull/1315,1,['perform'],['perform']
Performance,"TMVA::Reader::AddSpectator allows passing an integer external pointer, but the event class stores only float * pointer. This PR adds in the Event class the type information of the spectator variables. With this the correct casting is performed when retrieving the spectator variable value in case of dynamic events (the inputs are provided using an external pointer). Note that the integer is always converted to a float, so one can use integer values only from [-2^24, 2^24]. This PR fixes #9115",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9513:234,perform,performed,234,https://root.cern,https://github.com/root-project/root/pull/9513,1,['perform'],['performed']
Performance,"TNamedBranchProxy did not implement a Hash method.; Therefore when adding TNamedBranchProxy instances to the THashList dedicated to their bookkeping in TTreeReader TObject::Hash was used.; Unfortunately when trying to find the TNamedBranchProxies, their name was used and the hash was built differently by THashList (based on the name).; In order to fix this the following steps were taken.; - THashList was replaced by an unordered_map with names as keys and unique_ptr<TNamedBranchProxy> as values. The unique_ptr is used to automatically manage ownership.; - The methods of TTreeReader were adapted to use this new container as well as the code in TTreeReaderValue and TTreeReaderArray. A real usecase from CMS where the mass of the W boson is studied shows a significant speedup (30%).; The code uses TDataFrame and several nodes are created which read from the same branch in an input tree which holds weights in a collection.; This configuration stressed the performance degradation pattern fixed by this commit as it triggered multiple times the deserialisation of the ""weights branch"". Thanks to Elisabetta Manca and Lorenzo Bianchini for providing the bug report and initial reproducer. These changes will need to be backported at least to ROOT 6.12",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1768:965,perform,performance,965,https://root.cern,https://github.com/root-project/root/pull/1768,1,['perform'],['performance']
Performance,TODO: find a way to avoid repeating `RAction`'s code three times without losing performance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2595:80,perform,performance,80,https://root.cern,https://github.com/root-project/root/pull/2595,1,['perform'],['performance']
Performance,"TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. ```. ## Expected behavior; no FPE. ## To Reproduce. Code; ```. #include <TCanvas.h>; #include <TPad.h>; #include <TBox.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6449:1950,optimiz,optimized,1950,https://root.cern,https://github.com/root-project/root/issues/6449,2,['optimiz'],['optimized']
Performance,TRatioPlot crashes if loaded from the file,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14855:22,load,loaded,22,https://root.cern,https://github.com/root-project/root/issues/14855,1,['load'],['loaded']
Performance,"TThreadExecutor does not activate implicit multi-threading; (ROOT::IsImplicitMTEnabled() is false after constructing a; TThreadExecutor) but it does change the size of the thread-pool, which; is not only used by implicit multi-threading features, but also by; TThreadExecutor and TTreeProcessorMT. So the thread pool is not the; ""ImplicitMTPool"" but it's really ROOT's one and only pool of threads,; so we prefer ROOT::GetThreadPoolSize to GetImplicitMTPoolSize.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5290:43,multi-thread,multi-threading,43,https://root.cern,https://github.com/root-project/root/pull/5290,2,['multi-thread'],['multi-threading']
Performance,"TTreeProcessorMT does not guarantee that TTreeReader::GetCurrentEntry; returns the global entry number of the underlying dataset.; RDF, however, needs a unique entry identifier to use for Filter/Define; cache invalidation, so for MT runs we now use an atomic counter. As a consequence, in MT runs `rdfentry_` is now an arbitrary integer; with no connection to the underlying ROOT dataset. This PR solves the same bug as #3051 , without the performance hit, at the cost of losing correspondence between RDF's `rdfentry_` column values and the global entry numbers in a corresponding TChain.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3062:203,cache,cache,203,https://root.cern,https://github.com/root-project/root/pull/3062,2,"['cache', 'perform']","['cache', 'performance']"
Performance,"TTreeProcessorMT now spawns tasks that process clusters from tasks that process files:; this should decrease the amount of file switches that each thread-local; TChain performs during an event loop, as each thread will tend to; process clusters that belong to the same file. In addition, when no friends and no TEntryList are present, we can avoid the preliminary full sweep of; input files, since we we can use local rather than global entry numbers.; In this case TTreeProcessorMT spawns one task per input file which first retrieves cluster boundaries; for that file and then spawns one sub-task per cluster. I also added myself to the list of authors. @etejedor there are a couple of things I am not super happy with in this implementation:; - each thread-local `TTreeView` duplicates all info about the dataset (file names, friend names, friend file names...); - `TTreeProcessorMT` has to query all of this information from `TTreeView`; - ~~the per-file task should only call `Internal::MakeClusters` once (just noticed, that's an easy refactoring)~~ fixed and squashed. Moving the dataset info from `TTreeView` to `TTreeProcessorMT`, on the other hand, would mean adding even more parameters to `TTreeView::GetTreeReader`. What do you think?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2143:168,perform,performs,168,https://root.cern,https://github.com/root-project/root/pull/2143,1,['perform'],['performs']
Performance,TTreeProcessorMT should call `friend->BuildIndex` in each multi-thread task but doesn't. The test we have is single-thread only. First reported at https://root-forum.cern.ch/t/reading-friend-trees-using-rdataframe-in-multithread-mode-or-spark-cluster/53513 .,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12260:58,multi-thread,multi-thread,58,https://root.cern,https://github.com/root-project/root/issues/12260,1,['multi-thread'],['multi-thread']
Performance,T_Rtypes; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:2961,load,load,2961,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,"Take this workspace here:; [workspace.root.txt](https://github.com/root-project/root/files/10746822/workspace.root.txt). Now run this reproducer code:; ```C++; void repro() {. {; std::unique_ptr<TFile> f{TFile::Open(""workspace.root"")};; RooWorkspace* combined = f->Get<RooWorkspace>(""combined""); // load the original; cout << combined->function(""gaus_x1y1_OSeMmuP_fakeOverall"")->getProxy(0) << std::endl; // this is non-zero; combined->writeToFile(""another.root""); // supposed to create a nice copy; }. std::unique_ptr<TFile> f{TFile::Open(""another.root"")};; RooWorkspace* w = f->Get<RooWorkspace>(""combined""); // load the copy; cout << w->function(""gaus_x1y1_OSeMmuP_fakeOverall"")->getProxy(0) << std::endl; // this is zero ???; }; ```. The output will be:; ```; 0x55925a4e95c0; 0; ```. That's not good. When copying a workspace, the proxies should not be set to zero!. Note that the `.txt` suffix has to be removed from the input file. It's just there to be able to upload the workspace to GitHub. Thanks to @will-cern for reporting this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12329:299,load,load,299,https://root.cern,https://github.com/root-project/root/issues/12329,2,['load'],['load']
Performance,"TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 17: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 18: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 19: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 20: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 21: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:214; 22: 'valid' is false in /opt/root_src/core/cont/src/TRefArray.cxx:215; 23: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 24: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:218; 25: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:218; 26: Assuming 'gDebug' is <= 3 in /opt/root_src/core/cont/src/TRefArray.cxx:222; 27: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:222; 28: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 29: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 30: Returning without writing to 'uid' in /opt/root_src/core/cont/src/TRefArray.cxx:258; 31: Returning the value 1 (loaded from 'valid'), which participates in a condition later in /opt/root_src/core/cont/src/TRefArray.cxx:258; 32: Returning from 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:385; 33: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:385; 34: Assigned value is garbage or undefined in /opt/root_src/core/cont/src/TRefArray.cxx:386; /opt/root_src/core/cont/inc/TBits.h; /opt/root_src/core/cont/inc/TBtree.h; /opt/root_src/core/cont/src/TArrayC.cxx; /opt/root_src/core/cont/src/TArrayD.cxx; /opt/root_src/core/cont/src/TArrayF.cxx; /opt/root_src/core/cont/src/TArrayI.cxx; /opt/root_src/core/cont/src/TArrayL.cxx; /opt/root_src/core/cont/src/TArrayL64.cxx; /opt/root_src/core/cont/src/TArrayS.cxx; /opt/root_src/core/cont/src/TRefArray.cxx; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:22792,load,loaded,22792,https://root.cern,https://github.com/root-project/root/issues/7424,1,['load'],['loaded']
Performance,"Tested with. ```python; from dask.distributed import LocalCluster, Client; import ROOT. # Point RDataFrame calls to Dask RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True); client = Client(cluster); return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine; connection = create_connection(); # Create an RDataFrame that will use Dask as a backend for computations; df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations; def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""); def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""); c1 = def1.Count(); c2 = def2.Count(); print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count; c3 = df.Count(); print(""\n\n"", c3.GetValue()). # Test AsNumpy; print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot; snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""); print(snap._headnode.inputfiles); print(snap.Count().GetValue()); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10648:238,optimiz,optimized,238,https://root.cern,https://github.com/root-project/root/pull/10648,1,['optimiz'],['optimized']
Performance,"The AddressSanitizer also loads the LeakSanitizer flags and even though the documentation suggests that `exitcode` can be set per sanitizer, this doesn't appear to be the case and our tests exit with code 0 after the AddressSanitizer found a problem. After this change, around 100 tests will fail due to several issues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10005:26,load,loads,26,https://root.cern,https://github.com/root-project/root/pull/10005,1,['load'],['loads']
Performance,"The G__matchfilename() implements a file comparison check used; specifically for loading/unloading of the libraries and the source code.; On UNIX-like systems the basic filename comparison is supplemented an; additional file match condition is based on comparing file attributes; returned by the stat() syscall. On a typical load/unload call, the; G__matchfilename() is iterated over items of G__srcfile, which produces; a number of stat() calls that is quadratic in number of loaded files. In our specific case we observe an occasional poor performance on AFS; network filesystem. The suggested change introduces a cache for the; stat() calls that should allow to reduce the number of calls to scale; linearly. # This Pull request:. ## Changes or fixes:. Fixes downstream issue star-bnl/star-sw#115. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9010:81,load,loading,81,https://root.cern,https://github.com/root-project/root/pull/9010,5,"['cache', 'load', 'perform']","['cache', 'load', 'loaded', 'loading', 'performance']"
Performance,"The MemPoolForRooSets has two problems:. 1. Scaling issues: increasing memory and CPU consumption with; increasing number of arenas, becuase trying to allocate a new; non-overlapping arena often fails. 2. Amplification of memory leaks in user code:; If one of the elements in the arena leaks, the whole arena will; leak. Since each arena has 6000 elements, this means a leak of a; RooArgSet will be ampilfied by a factor 6000 in the worst case. This commit proposes a solution to the scaling/performance issues and; the leak amplification. Explained for the example for RooArgSet, the idea is to use each arena; 120 times because this is the size of RooArgSet in bytes. This can be; done while still having unique adresses for each RooArgSet:. 1. Keep a gap of 120 bytes between each RooArgSet; 2. When an address was used before, add one byte and in can be used; again. So at the cost of allocating 2x more memory per arena, we can reuse each; arena 120 times. Now, the good thing is that the interval of creating/deleting; RooArgSets is usually higher than 6000. So when reusing an arena; multiple times, they will eventually be filled only by leaking; RooArgSets if there is a leak. Meaning the leak amplification effect; should be gone. This was checked with the CMS Higgs combine toy fit example from the; Higgs combine tutorial. Without this commit, there is a GB-level leak; that can be clearly observed with `top`, but with this commit the leak; becomes negligible again. The PR is still kind of a draft PR. I will check with the bot if this solution works on all platforms and then continue improving the code. This should be backported together with https://github.com/root-project/root/pull/7935. This should finally fix https://github.com/root-project/root/issues/7933. Profile of the CMS toy experiment example with a ROOT Debug build:; * [without this PR](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_old); * [with this PR](https://rembserj.web.cern.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7954:492,perform,performance,492,https://root.cern,https://github.com/root-project/root/pull/7954,1,['perform'],['performance']
Performance,"The PiecewiseInterpolation class is used in the context of HistFactory models, where is is always used the same way: all RooAbsReals in _lowSet, _histSet, and also nominal are 1D RooHistFuncs with with same structure. Therefore, we can make a big optimization: we get the bin index ony once here in the generated code for PiecewiseInterpolation. Then, we also rearrange the histogram data in such a way that we can always pass the same arrays to the free function that implements the interpolation, just with a dynamic offset calculated from the bin index. This change is covered by the `testHistFactory` unit test. Together with the change suggested in the other draft PR, where the generated code is split up into separate functions for each channel, this PR addresses the plan of work item ""Reduce JITting time for AD in RooFit"". Different from that optimization, this one doesn't depend on the upcoming Clad 1.5, so it can be merged without upgrading Clad.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15543:247,optimiz,optimization,247,https://root.cern,https://github.com/root-project/root/pull/15543,2,['optimiz'],['optimization']
Performance,"The RDataFrameHelper should be consistent with creating a RooDataSet; from a TTree, meaning out-of-range events should be skipped. This is; implemented in this commit, borrowing the logic from; `RooTreeDataStore::loadValues()`. A unit test is also implemented. The previous logic of just taking just all values to fill the dataset; was very dangerous, because these values then clipped to the RooRealVar; limits and biased the number of events observed at the boundaries. Closes https://github.com/root-project/root/issues/11017.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11018:213,load,loadValues,213,https://root.cern,https://github.com/root-project/root/pull/11018,1,['load'],['loadValues']
Performance,The RNTuple DAOS backend should implement working versions for `LoadSealedPage()` and `CommitSealedPage()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8079:64,Load,LoadSealedPage,64,https://root.cern,https://github.com/root-project/root/issues/8079,1,['Load'],['LoadSealedPage']
Performance,"The ROOT macros use at the moment use a very expansive list; of paths when looking for headers. And right now clingutils rely on; the ROOT_GENERATE_DICTIONARY behaviour that a header that can't; be found will be deferred to runtime loading in cling, but this; strategy starts to fail once people have files named 'map',; 'vector' in any path that CMake's find_file searches by default. When those files are found by our CMake macros, they won't delay; the lookup of for example 'map' to the runtime but instead directly; include '/bin/map' (which is then causing Cling to fail as this; is usually an executable or something like that). As we can't seem to just fix the find_file behavior, we instead; fix this from clingutils' side by looking up the STL headers; manually via our cling search paths which means we no longer; rely on the 'if-not-found-load-at-runtime' branch in the; ROOT_GENERATE_DICTINARY macro.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/980:232,load,loading,232,https://root.cern,https://github.com/root-project/root/pull/980,2,['load'],"['load-at-runtime', 'loading']"
Performance,"The RPageSourceFile's use of RRawFile should not use the raw file's block cache layer for the page reads. The page source knows exactly which byte ranges are required. It makes itself I/O scheduling decisions (e.g., coalescing, vector reads) to optimize the read pattern. For opening the file, getting the RNTuple anchor and meta-data, however, we keep the buffered reads.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15257:74,cache,cache,74,https://root.cern,https://github.com/root-project/root/pull/15257,2,"['cache', 'optimiz']","['cache', 'optimize']"
Performance,"The RooFitDriver mutates the RooAbsArgs it evaluates by setting a; specific index token to quickly look up cached information for a given; RooAbsArg. Because of this, it's not possible to evaluate two computation graphs; that share RooAbsArgs with two separate RooFitDrivers. However, this usecase needs to be supported, because in RooStats is; often happens that different likelihoods based on the same model are; instantiated. The key to the solution in this commit is the insight that for each; likelihood, almost the full compute graph is cloned anyway, *except* for; the parameters. Therefore, the solution proposed in this commit is to; not set the data tokens for the parameters and not fill the data map; with their values. Instead, when querying their values, they are just; retrieved from the object itself. This is possible because parameters; are always scalar, and the RooAbsReal can already cache scalar members; in the `_value` field. This PR fixes the failure of some RooStats tutorials if BatchMode would be enabled by default. After this PR is merged, the CI would be completely green if `BatchMode(""cpu"")` would be made the default!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12925:107,cache,cached,107,https://root.cern,https://github.com/root-project/root/pull/12925,2,['cache'],"['cache', 'cached']"
Performance,"The RooProdPdf is not trivial to deal with in BatchMode, because its; actual servers depend on the normalization set. One should rather think of the RooProdPdf as something like a caching; PDF, but instead of creating a cached HistPdf for a given normalization; set, it creates an internal computation graph representing the; normalized product for a given normalization set. This internal computation graph is not expsed via the usual; client-server interface. However, this is strictly required for the new; BatchMode: internal computation graphs are not allowed because the; RooFitDriver would not be able to manage memory copies between host and; device, and also schedeuling. For this reason, BatchMode support is removed from the RooProdPdf class.; We only keep a `RooProdPdf::calculateBatch` function that can be used to; evaluated a given cache element when all the internal args are contained; in the BatchMode data map. To correctly evaluate these computation graphs in the batchMode, a new; class is introduced that wraps them with the correct client-server; interface. Instances of this class are then created for each ProdPdf in; the original computation graph, and the ProdPdfs are replaced with these; objects. This means all the different RooProdPdf cache configurations are now; correctly dealt with in the BatchMode, making the; `RooProdPdf/TestProdPdf.CachingOpt` unit test also pass with the; BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11400:220,cache,cached,220,https://root.cern,https://github.com/root-project/root/pull/11400,3,['cache'],"['cache', 'cached']"
Performance,"The RooWorkspace sometimes stores some RooArgSet prefixed with `CACHE_`; in itself to cache for example parameters or constraint sets. These cache sets are invalidated when elements are removed from them by; `RooWorkspace::RecursiveRemove()`. In this case, they should be removed; from the workspace such that they can be correctly recomputed later. This change fixes problems like this one reported on the forum:; https://root-forum.cern.ch/t/how-to-properly-redefine-pdf-in-rooworkspace/50757. In that usecase, the following sequence of events happened:. 1. Create pdf in workspace; 2. Fit this pdf (triggering the caching of the set of parameters); 3. Recursively remove everything from the workspace, but not the cache; sets as they are hidden from the user. The cached parameter sets are; now empty, as all parameters got removed from the workspace; 4. The same pdf from step 1 is recreated; 5. Fitting of this new pdf will now fail, because RooFit thinks it has; zero free parameters, as the call to `getParameters()` now returns; the cleared cache set!. An additional commit in this PR applies some general modernization of the RooWorkspace code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10952:86,cache,cache,86,https://root.cern,https://github.com/root-project/root/pull/10952,5,['cache'],"['cache', 'cached']"
Performance,"The TypeID2TypeName function looks for generic types via TClass::GetClass, thus taking a lock. If we only need to check for simple types such as bool or unsigned char, we should not need that. This change decreases contention in heavily multithreaded runs. In a test run of the AGC with 1 file and 128 threads, these are the results:. Before:; Executing the computation graphs took 23.37 seconds After:; Executing the computation graphs took 5.55 seconds. ## Notes. I was investigating a performance degradation of the AGC signalled on the forum https://root-forum.cern.ch/t/rootdataframe-and-multithreading-in-6-32/61752 . git bisect brought me to [this commit](https://github.com/root-project/root/commit/4cac104e75d15c6744144b1f0e43dcf87c35bc8a) which seems to be at least contributing to the degradation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16528:488,perform,performance,488,https://root.cern,https://github.com/root-project/root/pull/16528,1,['perform'],['performance']
Performance,"The _miss cache_, implemented in this pull request, implements an optimization when the TTreeCache fails to work. The miss cache will keep track of any branch that has been accessed; when there is a TTC miss, it automatically fetches the current basket for all active branches. This should have a worst case read size equal to the size of the file's cluster size, but potentially a significant savings in the number of IO operations. The latter is extremely useful if we're doing IO on high-latency links. This optimization works well for the ""trigger pattern,"" where the user may examine a number of branches and, when the event contents for those branches passes a particular filter, reads out the remaining branches. If there are 100 additional branches, this would do all reads in a single network round-trip as opposed to 100 round trips. The approach has served us well in CMS and been utilized as a layer on top of ROOT for about 3 years. Unfortunately, we must iterate through a set of branches and find the correct basket. This is not necessarily a cheap CPU operation and may be too expensive if the underlying filesystem is SSD-based. Hence, we turn this optimization off by default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/240:66,optimiz,optimization,66,https://root.cern,https://github.com/root-project/root/pull/240,5,"['cache', 'latency', 'optimiz']","['cache', 'latency', 'optimization']"
Performance,The `-O1` optimization flag has nasty side effects on Windows (32 and 64 bit). These side effects are described in the issue #9809 on Win32 and the issue #9944 on Win64. To be reviewed after the upgrade of LLVM & Clang,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9945:10,optimiz,optimization,10,https://root.cern,https://github.com/root-project/root/pull/9945,1,['optimiz'],['optimization']
Performance,"The `FlexibleInterpVar` and the `PiecewiseInterpolation` classes in; HistFactory can both interpolate asymmetric up-and-down variations; between the +/- one standard deviation such that both the first and; second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of; taking constant interpolation parameters, it takes other `RooAbsReals`.; That means it makes no sense for that class to cache the polynomial; coefficients that have to re recomputed anyway each time the input; changes. It uses an optimized formula to do the interpolation on the; fly. The `FlexibleInterpVar` however precomputes and caches the polynomial; coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of; `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be; equivalent. * Most importantly, and this was the motivation for this PR now:; when we do the code generation for AD, we can't pre-compute cached; coefficients because it would bloat the generated code with constant; arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and; `high=1.2` that shows the interpolated values are agreeing to the 5e-4; level. This is completely accepatable for such an ad-hoc polynomial; motivation, where the shape is not given by any physical meaning anyway; but just by the continuity condition at the boundaries. And at the; boundaries (and `param=0`), the difference between both implementations; goes to zero. It was also checked that this change has no performance; effect on fitting the full ATLAS Higgs combination modes. ```txt; param ref new diff_abs diff_rel; 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00; 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06; 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05; 3 -0.75 0.9230659064 0.9231653329 0.0000994265 1.08E-04; 4 -0.65 0.9317",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13067:450,cache,cache,450,https://root.cern,https://github.com/root-project/root/pull/13067,3,"['cache', 'optimiz']","['cache', 'caches', 'optimized']"
Performance,"The `R__ALWAYS_INLINE` macro was introduced by commit b7c9be5 in TBufferJSON. However, it breaks the build with GCC and the `-Og` flag, for debug-compatible optimizations:. ```txt; In member function ‘void TBufferJSON::JsonWriteFastArray(const T*, Int_t, const char*, void (TBufferJSON::*)(const T*, Int_t, const char*)) [with T = bool]’,; inlined from ‘virtual void TBufferJSON::WriteFastArray(const Bool_t*, Int_t)’ at /home/rembserj/spaces/master-debug/root/src/root/io/io/src/TBufferJSON.cxx:3296:22:; /home/rembserj/spaces/master-debug/root/src/root/io/io/src/TBufferJSON.cxx:3034:23: error: inlining failed in call to ‘always_inline’ ‘void TBufferJSON::JsonWriteArrayCompress(const T*, Int_t, const char*) [with T = bool]’: function not considered for inlining; 3034 | R__ALWAYS_INLINE void TBufferJSON::JsonWriteArrayCompress(const T *vname, Int_t arrsize, const char *typname); ```. Libraries other than ROOT have also encountered similar problems: https://github.com/Cyan4973/xxHash/pull/804. The `R__ALWAYS_INLINE` macro is probably not necessary for these templated functions, because the compiler figures out itself whether it's worth to inline the templated functions or not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13894:157,optimiz,optimizations,157,https://root.cern,https://github.com/root-project/root/pull/13894,1,['optimiz'],['optimizations']
Performance,"The `RooAbsBinning` interface for bin index lookups was changed to; enable vectorized implementations. Instead of having the override; `RooAbsBinning::binNumber()`, the binning implementations now have to; override the `RooAbsBinning::binNumbers()` function to evaluate the bin; indices of multiple values in one function call. The interface of `RooAbsBinning::binNumbers()` is designed to facilitate; the accregation of bin indices over multiple dimensions, and it uses a; `double` ouput vector such that the caller can reuse the output buffer; for other computations. The former `RooAbsBinning::binNumber()` method is now implement in terms; of the vectorized version, such that we automatically get wide test; coverage. It was verified that this doesn't come with a performance; overhead. This will greatly facilitate the vectorization of the RooHistPdf and; RooHistFunc later. A second commit in this PR applies some other improvements to the `RooBinning` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11151:769,perform,performance,769,https://root.cern,https://github.com/root-project/root/pull/11151,1,['perform'],['performance']
Performance,"The `RooAbsReal::getValues` has already been established as the entry; point for evaluating RooFit objects with the batch mode and it should; not be broken. In 6.26, the `getValues` function was broken to fall back on the scalar; mode all the time, because the `evaluateSpan` funtions it used got; replaced by `computeBatch`. In this commit, the desired behavior of; using the BatchMode is restored by using the RooFitDriver. To that end, a; new constructor has been added to the RooFitDriver that takes a; `RooBatchCompute::RunContext` directly. The override of `getValues` in RooAbsPdf was also removed now, because; it's the job of the RooFitDriver to treat pdfs correctly. This PR fixes the performance regression that was observed in the vectorized pdf tests in `roottest`. To fix the performance regression completely, this PR also includes a commit to avoid some overhead in the pure CPU batch mode with RooFitDriver. This bugfix should also be backported to 6.26 as a bugfix for the patch release.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9986:695,perform,performance,695,https://root.cern,https://github.com/root-project/root/pull/9986,2,['perform'],['performance']
Performance,"The `RooAddModel::CacheElem` was exactly the same as for the RooAddPdf.; Hence, the RooAddPdf was refactored a bit such that the code to generate; the CacheElem could be reused in the RooAddModel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11139:18,Cache,CacheElem,18,https://root.cern,https://github.com/root-project/root/pull/11139,2,['Cache'],['CacheElem']
Performance,"The `RooFitDriver.cxx` source file was growing a lot recently, and many; functional parts were mixed together. For example, the loading of spans; from the dataset and the analysis of the computation graph are two; separate things but they were mixed in this file. This commit suggests to improve the situation by moving all data related; functionality to a new file `BatchModeDataHelpers.cxx`. Some CUDA; helpers are also moved to `CUDAHelpers.cxx`. Another helper function was; moded to `BatchModeHelpers.cxx` to keep the footprint of; `RooFitDriver.cxx` small such that new contributors can get started more; easily.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10477:128,load,loading,128,https://root.cern,https://github.com/root-project/root/pull/10477,1,['load'],['loading']
Performance,"The `RooParamHistFunc` doesn't take any observable RooRealVar as; constructor argument. It assumes as observable the internal variables in; the passed RooDataHist. This means it is in most contexts unusable,; because the input can't be changed, other than loading a different bin; in the dataset. This also breaks the Barlow-Beeston tutorial since the new evaluation; backend is the default, and it is more sentitive to these issues:; https://root.cern.ch/doc/master/rf709__BarlowBeeston_8C.html. There was actually a constructor that took a `RooAbsArg x`, but it was; simply ignored. To fix all these problems, the existing constructors were replaced by a; new one that takes the observable explicitly, and this is mentioned in; the release notes. The class is not used much, because ussually people use HistFactory or; CMS combine for these kind of fits. To backport to ROOT 6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15224:256,load,loading,256,https://root.cern,https://github.com/root-project/root/pull/15224,1,['load'],['loading']
Performance,"The `RooVectorDataStore` had two different buffers to store the row data in: the so-called ""attached buffers"" and the ""native buffers"". The problem is that when external buffers are attached, the call to `RooVectorDataStore::get()` is not loading the native buffers anymore, which is breaking some code that assumes this, like `RooVectorDataStore::loadValues`, which is used in `RooDataSet::reduce`. This breaks the reduction of datasets with externally attached buffers, which breaks the copy constructor of the `RooNLLVar`. This commit suggests to always load both the native and attached buffers if `RooVectorDataStore::get()` is called. This has almost no performance overhead and is much safeter. Since this change fixes the copy constructor of the `RooNLLVar`, which is used when plotting the NLL, this commit fixes this JIRA ticket: https://sft.its.cern.ch/jira/browse/ROOT-9752. A unit test that covers the problem reported in the JIRA ticket is also added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11477:239,load,loading,239,https://root.cern,https://github.com/root-project/root/pull/11477,4,"['load', 'perform']","['load', 'loadValues', 'loading', 'performance']"
Performance,"The `bool` columns in RDF are special, because the Take action returns a `std::vector<bool>`, which has an implementation-depended memory layout for space optimization. Therefore, I suggest supporting taking `bool` columns as `unsigned char` with `Take()`, such that in `RDataFrameAsNumpy` the values can be directly taken as bytes. This avoids superfluous copying in the code, and keeps the special logic in the pythonization side minimal. Closes #8639.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15180:155,optimiz,optimization,155,https://root.cern,https://github.com/root-project/root/pull/15180,1,['optimiz'],['optimization']
Performance,"The `getattr` pythonization for TDirectory is caching the retrieved objects as attributes of the TDirectory. To check that the objects are not cached initially, there is a check that the TDirectory instance has no attributes at all. This is too strict, as we care only that the supposedly cached attribute is not there. This commit suggests to explicity check for at attribute with the name of the object. The reason for changing this now is because the old check would not work anymore with the new CPyCppyy. With the new version, additional lifeline attributes are set by cppyy to manage the lifetimes of objects. This is a spinoff of the CPyCppyy syncronization PR, which was created to factorize the review process.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14706:143,cache,cached,143,https://root.cern,https://github.com/root-project/root/pull/14706,2,['cache'],['cached']
Performance,"The `resize` called a few lines above initializes elements as; necessary. We don't need to call GenerateValue on those memory; locations (which performs another placement new on them), rather; a CaptureValue is enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10441:144,perform,performs,144,https://root.cern,https://github.com/root-project/root/pull/10441,1,['perform'],['performs']
Performance,"The `roobatchcompute` library dynamically loads the most performant implementation library that the CPU supports. However, it throws an error if the library was already loaded. Indeed, in most usecases it's correct that the implementation library is not loaded before the RooBatchCompute main library is initialized, but if a RooFit script is executed via; `gInterpreter->LoadMacro(""Macro_Name.cxx++"")`, the library is already loaded the second time the macro is launched like this. Hence, it's better is the `batchcompute` library throws no exception if the implementation is already loaded. This fixes a problem reported on the forum:; https://root-forum.cern.ch/t/roofit-computation-library-libroobatchcompute-avx2-was-loaded-before-roofit-initialisation-began/54580",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12696:42,load,loads,42,https://root.cern,https://github.com/root-project/root/pull/12696,8,"['Load', 'load', 'perform']","['LoadMacro', 'loaded', 'loaded-before-roofit-initialisation-began', 'loads', 'performant']"
Performance,"The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15302:195,load,loaded,195,https://root.cern,https://github.com/root-project/root/pull/15302,1,['load'],['loaded']
Performance,"The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15303:195,load,loaded,195,https://root.cern,https://github.com/root-project/root/pull/15303,2,['load'],['loaded']
Performance,"The `tmva-cpu` BLAS-accelerated TMVA backend uses the openblas version found on the system, but NumPy also ships its own `openblas` library when installed with pip. If both openblas versions are loaded, segfaults can occur if they are incompatible. We currently see this on the `alma9` CI runners. The minimal remedy for this is to just disable the TMVA BLAS backend. Nobody is using the CPU to train neural nets nowadays anyway. Like this, we don't have to disable features like PyMVA or RBDT. Backport of https://github.com/root-project/root/pull/15302. Also, disable `tmva-pymva` on newer macOS versions, which are not supported by this ROOT version yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15305:195,load,loaded,195,https://root.cern,https://github.com/root-project/root/pull/15305,1,['load'],['loaded']
Performance,"The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage.; N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /de",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:4676,Throughput,Throughput,4676,https://root.cern,https://github.com/root-project/root/pull/14039,2,"['Throughput', 'bottleneck']","['Throughput', 'bottleneck']"
Performance,"The changes in this pull request allows RNTuple to use Intel DAOS as storage backend (through libdaos). This support is still experimental. Currently, each page is assigned a sequential OID at the time it is commited; reserved OIDs are used to store the header, the footer, and the anchor. Each DAOS container cannot contain more than one ntuple. We expect at least three different follow-up pull requests that will address the following:; - Commit/load of sealed pages.; - Transition from the naive one-OID-per-page mapping to something more appropriate, e.g., map clusterIdx to dkey; akey might be the page number within the cluster.; - Multiple ntuples per DAOS container.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6825:449,load,load,449,https://root.cern,https://github.com/root-project/root/pull/6825,1,['load'],['load']
Performance,"The changes introduced in 4ce57e copy in the installation directory empty copies of all the directories found in the build directory. This was found out only recently when the MultiPython PR was merged. The solution introduced in 14366b does not work, since the globbing is performed at configuration time, when the build directory is still empty. Since commit 4ce57e was introduced only to install the ~10 pcms listed in ll. 4237-4253 of core/dictgen/src/rootcling_impl.cxx, here we find a more suitable solution to achieve this goal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4763:274,perform,performed,274,https://root.cern,https://github.com/root-project/root/pull/4763,1,['perform'],['performed']
Performance,"The cluster pool now not only schedules loading of the compressed pages but also their prompt decompression. All the pages that have been loaded are now pushed into a follow-up pipeline step for decompression and pushing into the page pool. This is done with multiple threads. Compared to unwrapping pages on demand, we might now decompress pages from which we never read (because they get completely skipped by the analysis). The RNTuple benchmarks suggest, however, that this happens quite rarely (<1%).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6106:40,load,loading,40,https://root.cern,https://github.com/root-project/root/pull/6106,2,['load'],"['loaded', 'loading']"
Performance,"The commit consistently marks the `RooAbsCache` class and the derived; `RooCacheManager` and `RooObjCacheManager` classes as transient; whereever they are used in RooFit, effectively excluding them from I/O. This change was made primarily to fix a bug happening when models are; read back from a ROOT file (the pointes in `RooAbsArg::_cacheList` were; not correct anymore), but it also has the nice effect of reducing the; size of RooFit models. The classes were almost de-facto removed from I/O already, because; almost all of their data members were excluded from I/O anyway. The only; exceptions are the following data members:. * `RooObjCacheManager::_clearOnRedirect`. * `RooObjCacheManager::_allowOptimize`. * `RooAbsCache::_owner`. All of these values are set in the respective constructors and are never; changed. To make these values consistent even if a class that uses a; cache is read back from a ROOT file, the correct constructor for the; cache is now also called in the default I/O constructors of the classes. A simple reproducer to see problem with `RooAbsArg::_cacheList` after reading back the model:. ```C++; #define private public. #include ""RooWorkspace.h""; #include ""RooGaussian.h"". #include ""TFile.h"". void reproducer() {. {; RooWorkspace w(""w"",""w"");; w.factory(""RooGaussian::gaus(x[0,-10,10],mean[0,-10,10],sigma[1,0.1,10.0])"");; w.writeToFile(""file.root"");. auto gaus = w.pdf(""gaus"");; std::cout << &gaus->_normMgr << std::endl;; std::cout << gaus->getCache(0) << std::endl;; std::cout << gaus->numCaches() << std::endl;. gaus->IsA()->GetListOfDataMembers()->Print();; }. {; TFile f1(""file.root"");; auto w =f1.Get<RooWorkspace>(""w"");. auto gaus = w->pdf(""gaus"");; std::cout << &gaus->_normMgr << std::endl;; std::cout << gaus->getCache(0) << std::endl;; std::cout << gaus->numCaches() << std::endl;. delete w;; }. }; ```. Here the nice report from @will-cern (thanks!!) that motivated this PR to give some more context:. > have been recently working on a workflow that involv",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8764:883,cache,cache,883,https://root.cern,https://github.com/root-project/root/pull/8764,2,['cache'],['cache']
Performance,"The commits in this PR contain the necessary steps performed in order to allow the user to build PyROOT with more than one versions of Python. The version in use can be changed with the usual `source thisroot.sh` preceded by the specific Python version, e.g.:; `ROOT_PYTHON_VERSION=3.6 source bin/thisroot.sh`; performed inside the build directory. ; Quick summary of the commits:; (1) set the necessary CMake variables to build the PyROOT libraries in lib/pythonX.Y; (2) modify thisroot.sh to allow the user to select the Python version; (3) necessary changes to pyunittests and tutorials CMake variables; (4) installation",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279:51,perform,performed,51,https://root.cern,https://github.com/root-project/root/pull/4279,2,['perform'],['performed']
Performance,"The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:; ```; cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10659:80,load,loaded,80,https://root.cern,https://github.com/root-project/root/pull/10659,2,"['Load', 'load']","['Loading', 'loaded']"
Performance,"The current code goes through different codepaths depending on the platform. One of the codepaths relies on a non-standard extension (variable-length arrays) and the other manually allocates and frees a char array.; Using a std::string, while losing a bit of performance on Linux/Mac, simplifies and unifies the codepaths and avoids using non-standard C++ (which in turns enable building with -Werror).; The perf hit is most likely negligible, especially given the use of dynamic_cast in the same block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16476:259,perform,performance,259,https://root.cern,https://github.com/root-project/root/pull/16476,1,['perform'],['performance']
Performance,"The current failure in snapshot is due to an ABI incompatibility (or so it seems) that we may have encountered before.; The failing line is:; {code:c++}; auto snapshotRDF = std::make_shared<RInterface<RLoopManager>>(std::make_shared<RLoopManager>(nullptr, validCols));; {code}; and one of the component of make_shared is the call to the following shared_ptr constructor; {code:c++}; // This constructor is non-standard, it is used by allocate_shared.; template<typename _Alloc, typename... _Args>; shared_ptr(_Sp_make_shared_tag __tag, const _Alloc& __a,; _Args&&... __args); : __shared_ptr<_Tp>(__tag, __a, std::forward<_Args>(__args)...); { }; {code}; Note the use of std::forward. The snapshot test has 2 steps:. 1. Do the work, including a call to SnapshotImpl which contains the problem line, with only compiled code; 2. Do the same work relying on interpreted code, in which case SnapshotImpl is called via the interpreter. The symptoms of the failure is that **if** the snapshot test is compiled with optimization then. a. The compiled version works fine; b. In the interpreted version the constructor of the RInterface is wrong because the shared_ptr its constructor sees is **not** initialized. If the snapshot test is compiled without optimization then both steps succeeds. The main difference between the two is the amount of fully realized (i.e. non-inlined) functions emitted by the compiler. In the success fully case we have a stack like. {code}; interp SnapshotImpl calls; compiled std::make_shared<ROOT::Detail::RDF::RLoopManager … [in debug mode. this routine and down are used compiled]; compiled std::allocate_shared<ROOT::Detail::RDF::RLoopManager; ... implementation details .. all compiled.; compiled ROOT::Detail::RDF::RLoopManager::RLoopManager; compiled std::make_shared<ROOT::RDF::RInterface …; compiled std::allocate_shared<ROOT::RDF::RInterface …; compiled std::shared_ptr< ROOT::RDF::RInterface; compiled std::__shared_ptr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2158:1008,optimiz,optimization,1008,https://root.cern,https://github.com/root-project/root/pull/2158,1,['optimiz'],['optimization']
Performance,The datasets are suboptimally created and trigger the loading of the; full dataset with reading the metadata. This results in reading 150GB; of data even if we run nominally only on 1% of the events.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6051:54,load,loading,54,https://root.cern,https://github.com/root-project/root/pull/6051,1,['load'],['loading']
Performance,The definition of `TExecutor::GetPoolSize()` causes errors in builds with `runtime_cxxmodules=OFF`:; ```; IncrementalExecutor::executeFunction: symbol '_ZNK4ROOT15TThreadExecutor11GetPoolSizeEv' unresolved while linking symbol 'atexit'!; You are probably missing the definition of ROOT::TThreadExecutor::GetPoolSize() const; Maybe you need to load the corresponding shared library?; atexit not defined; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7033:343,load,load,343,https://root.cern,https://github.com/root-project/root/pull/7033,1,['load'],['load']
Performance,"The distributed RDataFrame constructor accepts an optional `npartitions` keyword argument. Previously, if this argument was provided by the user, it set the number of partitions in which the rdf would split the distributed computations.; But then, right before starting the execution, the distributed backend implementation tried to optimize this number. In the case of Spark, an educated guess for the number of partitions would be spark.executor.instances * spark.executor.cores, that is the number of distributed nodes times the number of cores used for each node.; If we let this optimization happen just before the start of the execution, it means we completely disregard the user provided value for `npartitions`. Instead, the backend guessing at a number of partitions should happen only if the user doesn't supply one.; This commit addresses the issue by moving the call to `backend.optimize_npartitions` inside the initialization of the distributed dataframe object, plus adds a couple of tests to check the behaviour in the Spark backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7841:333,optimiz,optimize,333,https://root.cern,https://github.com/root-project/root/pull/7841,2,['optimiz'],"['optimization', 'optimize']"
Performance,The dynamic library manager's dyld can search a symbol in the library path.; This patch uses that functionality to aid the 'unresolved while linking'; diagnostics. Now we get:; ```; cling -L lib/. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ extern int gErrorIgnoreLevel;; [cling]$ gErrorIgnoreLevel; IncrementalExecutor::executeFunction: symbol 'gErrorIgnoreLevel' unresolved while linking [cling interface function]!; Symbol found in '/.../lib/libCore.so'; did you mean to load it with .L /.../lib/libCore.so ?; [cling]$; ```. We should merge it after #6385 to not disturb the upgrade process.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6606:595,load,load,595,https://root.cern,https://github.com/root-project/root/pull/6606,1,['load'],['load']
Performance,"The error occurs only when `loadLibrary()` is called with the argument `resolved = false`.; The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value; type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10593:28,load,loadLibrary,28,https://root.cern,https://github.com/root-project/root/pull/10593,1,['load'],['loadLibrary']
Performance,"The fact that TRandom3::Rndm() etc. are not marked final is a sensible hit in performance for applications that call it in an event loop (because the compiler does not dare de-virtualize the call, so you always have a cache miss/data dependency when you encounter the call).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12547:78,perform,performance,78,https://root.cern,https://github.com/root-project/root/issues/12547,2,"['cache', 'perform']","['cache', 'performance']"
Performance,"The following sequence of calls results in c1 having a null fTree; but a non-null fFile. ```cpp; TChain* c1 = new TChain(""T"");; c1->Add(""Event.root"");. TChain* c2 = new TChain(""T2"");; c2->Add(""Event2.root/T"");; c1->AddFriend(c2);. c1->LoadTree(0);; c1->RemoveFriend(c2);. delete c1;; ```. In this situation, ~TChain ended up calling TTree::GetReadCache on; a null fTree. We now check that both fFile and fTree are valid before; trying to retrieve fTree's cache.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5489:235,Load,LoadTree,235,https://root.cern,https://github.com/root-project/root/pull/5489,2,"['Load', 'cache']","['LoadTree', 'cache']"
Performance,"The framework one depends on https://github.com/root-project/root/issues/6753; and https://gitlab.kitware.com/cmake/cmake/-/issues/21293; before we can potentially use it. And anyway if users install their own; Python we should be nice and use that, not Python coming with Xcode / cmd line tools. Works around:; dlopen(/Users/sftnight/build/jenkins/night/LABEL/mac10beta/SPEC/cxx17/V/master/build/lib/libROOTTPython.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/jenkins/night/LABEL/mac10beta/SPEC/cxx17/V/master/build/lib/libROOTTPython.so; Reason: image not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6789:436,load,loaded,436,https://root.cern,https://github.com/root-project/root/pull/6789,1,['load'],['loaded']
Performance,"The generated compiler invocation in TSystem::CompileMacro doesn't add the `-rpath` option. The output of `root-config --libs` contains that option on MacOS, so we should also have it here. This should fix errors seen in MacOS 14 when loading a shared library obtained via ACLiC. Fixes #13734",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13737:235,load,loading,235,https://root.cern,https://github.com/root-project/root/pull/13737,1,['load'],['loading']
Performance,"The generation of our PCH/PCM file requires only the header files to be in; place. There is no direct relationship between if the dictionaries will be; built or not. This patch fixes a build system bottleneck (esp visible when building in; -DLLVM_BUILD_TYPE=Debug), namely we use only one core to build the pch. Another; advantage is that now we can just say make Core or make Cling and fire up ROOT; without having to wait very long.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1188:198,bottleneck,bottleneck,198,https://root.cern,https://github.com/root-project/root/pull/1188,1,['bottleneck'],['bottleneck']
Performance,"The global module index (GMI) is an optimization which hides the introduced by clang overhead when pre-loading the C++ modules at startup.; ; The GMI represents a mapping between an identifier and a set of modules which contain this indentifier. This mean that if we TH1 is undeclared the GMI will load all modules which contain this identifier which is usually suboptimal, too.; ; The semantic GMI maps identifiers only to modules which contain a definition of the entity behind the identifier. For cases such as typedefs where the entity introduces a synonym (rather than declaration) we map the first module we encounter. For namespaces we add all modules which has a namespace partition. The namespace case is still suboptimal and further improved by inspecting what exactly is being looked up in the namespace by the qualified lookup facilities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5884:36,optimiz,optimization,36,https://root.cern,https://github.com/root-project/root/pull/5884,3,"['load', 'optimiz']","['load', 'loading', 'optimization']"
Performance,"The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it.; ; Kudos Arpitha Raghunandan (@arpi-r)!. We still need some performance measurements but the preliminary results are promising. Performance; ===. Methodology; ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:; 1) root master without modules (modulesoff); 2) root master with modules (moduleson); 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation; ---; A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016:179,load,load,179,https://root.cern,https://github.com/root-project/root/pull/4016,8,"['Perform', 'load', 'perform']","['Performance', 'load', 'loaded', 'loads', 'performance']"
Performance,"The goal is to make RooFit completely independent on the cuda flag, except for building the BatchCompute CUDA library or not. This commit is the first step towards this goal. What is changed:. 1) The RooBatchCompute library has now two initialization functions: one for the CPU and one for CUDA. Like this, the CUDA library is only attempted to get loaded by the `RooFit::Evaluator` if evaluation on the GPU is requested, and not always when ROOT was built with `cuda=ON`. 2) Some code that was behind `ROOFIT_CUDA` prepprocessor macro `ifdefs` is now always built, if it doesn't depend on any symbols from CUDA libraries anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15746:349,load,loaded,349,https://root.cern,https://github.com/root-project/root/pull/15746,1,['load'],['loaded']
Performance,"The idea of the RooGenProdProj is that we divide two integral objects; each created with this makeIntgral() function to get the normalized; integral of a product. Therefore, we don't need to normalize the; numerater and denominator integrals themselves. Doing the normalization; would be expensive and it would cancel out anyway. However, if we don't; specify an explicit normalization integral in createIntegral(), the; last-used normalization set might be used to normalize the pdf,; resulting in redundant computations. For this reason, the normalization set of the integrated pdfs is fixed; to an empty set in this case. Note that in RooFit, a nullptr; normalization set and an empty normalization set is not equivalent. The; former implies taking the last-used normalization set, and the latter; means explicitly no normalization. This fixes the performance regression reported in https://github.com/root-project/root/issues/11814, and a new unit; test is implemented to make sure no new numeric integrals pop up in the; reproducer code to that issue. Unfortunately, this change means that there will be again warnings about; missing `RooAddPdf` normalization sets, but this is not a regression; because these warnings only got fixed in the 6.28 development cycle in; https://github.com/root-project/root/commit/290b478710a90351bd7b15130a7a81e01b461940. This PR also includes some other minor improvements explained in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12010:851,perform,performance,851,https://root.cern,https://github.com/root-project/root/pull/12010,1,['perform'],['performance']
Performance,"The important commit is [[DF] Make dataset group an optional data member of RSampleInfo](https://github.com/root-project/root/commit/ad6ecd8227786f363f48be207d45b0f86d6357e5): it short-circuits some logic so that we don't construct a RDatasetGroup object if we don't have to, and we copy pointers to RDatasetGroups instead of RDatasetGroup objects. It also introduces a change in behavior: RDF now throws if a user asks for information about the dataset group but there is no group available. Before that commit it would return some arbitrary value for each of the properties (e.g. empty string, 0, ...). This should fix the performance regression seen in some Grafana benchmarks on the evening of the 15th of December.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12174:625,perform,performance,625,https://root.cern,https://github.com/root-project/root/pull/12174,1,['perform'],['performance']
Performance,"The improvement at https://github.com/root-project/root/pull/10318 which stresses file opening in multi-thread RDF reported:; ```; With 256 threads (on partly loaded machine, but still representative):. Baseline:; Percent of CPU this job got: 1557%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:49.89. +this PR; Percent of CPU this job got: 14271%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:21.11; ```; This 'surprising' increase of CPU time by a factor 9 leading to only a factor 2 improvement in elapsed time is due to the bottleneck migrating from the ([re]moved mutex) to the (many) spin locks. The test can be tweaked (increase number of files, reduce number of entries per file) to stress the file opening more. On ntpl-perf01.cern.ch (single AMD EPYC 7702P 64-Core Processor), the test as is use close to 94% of all cpus and only a little system time:; ```; User time (seconds): 7250.76; System time (seconds): 3.58; Percent of CPU this job got: 12019%; ```; However tweaking to 390000 files of a 1000 entries, we get:; ```; User time (seconds): 450.77; System time (seconds): 438.39; Percent of CPU this job got: 7039%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.63; ```. Some are straight-forward to avoid:. ```; // Avoid lock internal to linux date/time:; diff --git a/io/io/src/TKey.cxx b/io/io/src/TKey.cxx; index e604af2980..f349bd8710 100644; --- a/io/io/src/TKey.cxx; +++ b/io/io/src/TKey.cxx; @@ -99,7 +99,7 @@ TKey::TKey() : TNamed(), fDatime((UInt_t)0); ////////////////////////////////////////////////////////////////////////////////; /// TKey default constructor.; ; -TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0); +TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0, (UInt_t)0); {; Build(motherDir, """", 0);; ; ```; Some require some thoughts:; ```; Try to avoid bottlenecking on recording TContext with gROOT when reading objects out files.; diff --git a/tree/dataframe/src/RLoopManager.cxx b/tree/dataframe/src/RLoopManager.cxx; inde",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12761:98,multi-thread,multi-thread,98,https://root.cern,https://github.com/root-project/root/issues/12761,3,"['bottleneck', 'load', 'multi-thread']","['bottleneck', 'loaded', 'multi-thread']"
Performance,The latter performs extra reading that we do not need.; With many thanks to @JavierCVilla !,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3001:11,perform,performs,11,https://root.cern,https://github.com/root-project/root/pull/3001,1,['perform'],['performs']
Performance,"The lazy loading approach may be faster, but it is continuously leading to problems with template instantiations and ODR violation checks in the most inconvenient places.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13112:9,load,loading,9,https://root.cern,https://github.com/root-project/root/pull/13112,1,['load'],['loading']
Performance,"The lazy loading approach may be faster, but it is continuously leading to problems with template instantiations and ODR violation checks in the most inconvenient places. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12238:9,load,loading,9,https://root.cern,https://github.com/root-project/root/pull/12238,1,['load'],['loading']
Performance,"The leak is related to the handling of conversion from unversioned class from MathCore; (namely from ```ROOT::Math::Cartesian3D<double>``` to ```ROOT::Math::Cartesian3D<Double32_t>``` and; ```ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag>```; to ```ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag>```. In some circumstances (involving which StreamerInfo was recorded in an acceleration structure/cache), TClass was; not remembering that it already created the Conversion StreamerInfo from one to the other and recreating from each object read. In the case of DUNE, the leak was triggered by running:; ```; Events->Draw(""recob::Tracks_pandoraTrack__DecoderandReco.obj.fTraj.fMomenta.fCoordinates.fX"");; ```; or similar.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7018:512,cache,cache,512,https://root.cern,https://github.com/root-project/root/pull/7018,2,['cache'],['cache']
Performance,The list returned from TROOT::GetListOfFunctions needs to be protected; from concurrent access to allow use of TFormulas on different; threads.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/24:77,concurren,concurrent,77,https://root.cern,https://github.com/root-project/root/pull/24,1,['concurren'],['concurrent']
Performance,The llvm9 JIT issued callbacks when a symbol was missing and we reacted on it by loading the relevant library. In root-project/root@9b2041e3 we have kept the logic but now the JIT started querying more often even for symbols which are okay to be missing. In turn that leads to scanning all libraries causing performance issues. This patch tries to limit this functionality only in contexts where automatic loading is allowed. In addition when computing the offsets of a constant variable declaration we compute the initializers instead of searching in the shared objects.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287:81,load,loading,81,https://root.cern,https://github.com/root-project/root/pull/14287,3,"['load', 'perform']","['loading', 'performance']"
Performance,"The logic of `SnapshotImpl` has been refactored to move the single-thread initialization and execution inside the `SnapshotHelper` class, and the multi-thread in `SnapshotHelperMT`. This code simplification also puts `Snapshot` in line with other actions, moving most of the logic inside `TDFActionHelpers.hxx`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/692:146,multi-thread,multi-thread,146,https://root.cern,https://github.com/root-project/root/pull/692,1,['multi-thread'],['multi-thread']
Performance,"The main change in this PR is that the `CustomColumn` term is replaced by the clearer, shorter `Define` term. This require quite a few changes all over RDataFrame internals. Motivation for the change can be found below, copy-pasted from the commit message. This will make future backports a bit of a pain, but I think it's worth doing it now, for the following reasons:; * we are at a historical low of RDF-related open bugs -> less backports are expected in the future; * recent large refactorings in RAction.hxx (#6220) and in the column reader logic (#6170) already make backports much less likely to apply cleanly to release branches, so if there is a less bad time to do this, it's probably now; * expected upcoming refactorings necessary to support bulk entry processing will put another nail in the coffin of backportable bug-fixes; * I think we can all agree that RCustomColumn is a terribly opaque name for something that at this point we all know as a ""Define"", and in a few years I'd rather not have doctoral students complain about how my class names are completely arbitrary and unnecessarily hard to understand . The original commit message:. Until recently, RCustomColumns could correspond to data-source columns; or defined columns. Due to recent refactorings, RCustomColumns are now; back to serving only their original purpose: representing Define nodes; in the computation graph.; RCustomColumn is a very opaque name, and it crops up when debugging,; reading code and looking at performance profilings. The new name,; RDefine, clearly describes what the class is supposed to do and it is in; line with RDF's naming convention (we already have RFilter). Other names also become much more readable and shorter:; RBookedCustomColumns becomes RBookedDefines, RJittedCustomColumn becomes; RJittedDefine, and so forth.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6223:1498,perform,performance,1498,https://root.cern,https://github.com/root-project/root/pull/6223,1,['perform'],['performance']
Performance,"The minimizer test quite often did not converge. As a result there were; many spurious test failures. The test is tuned to converge _much_ more reliably by increasing the; learning rate (0.0001 -> 0.001), and the number of early stopping epochs; (5 -> 50). This commit also makes the `testMinimization` test the minimizer; _without_ using momentum (this code path was previously untested here). The following code was used to benchmark changes (only single precision; part of the test was tested and some aux text was commented out if you; want to reproduce):; ```; for i in `seq 100`; do tmva/tmva/test/DNN/testMinimizationCpu; done | awk '{print $6;}' | python -c 'import numpy; import fileinput; a = map(float, fileinput.input()); print(numpy.std(a), numpy.mean(a), numpy.min(a), numpy.max(a))'; ```. Results (typical values):; - Old version: 2.70*10^{-7} (std dev), 3.34*10^5 (mean), 2.27*10^{-6} (min), 0.0017 (max); - New verstion: 2.59 * 10^{-6} (std dev), 2.51*10*{-6} (mean), 1.16*10*{-7} (min), 1.37*10^{-5} (max). Time taken is roughly doubled (~1 sec -> ~2 secs). All results on local mac.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1958:114,tune,tuned,114,https://root.cern,https://github.com/root-project/root/pull/1958,1,['tune'],['tuned']
Performance,"The new RooFit batchMode skipped zero-weight events to optimize the; likelihood calculation. However, this should not be done in general,; because it is unexpected to users is the output of batched computations; is not aligned with the original dataset. This commit also adds a smaller commit with a change to ensure that; norm set args are part of the graph in NormalizationHelpers, also used; in the new BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11134:55,optimiz,optimize,55,https://root.cern,https://github.com/root-project/root/pull/11134,1,['optimiz'],['optimize']
Performance,"The new internal class is TReentrantRWLock access externally via the abstract interface TVirtualRWMutex. The next steps after this is to start using by:; 1) Replace gROOTMutex by a TRWMutexImp; 2) Add R__READLOCKGUARD; 3) Add a TListWithRWLock and THashListWithRWLock; 4) Use those in TROOT; 5) Remove current external locks for those ROOT lists (in particular the ListOfFiles); 6) Update all RecursiveRemove implementation (in particular TCling::RecursiveRemove, without update it destroys scalability) to make use of the Read/Write lock.; 7) Introduce scalability test on RecursiveRemove",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/676:491,scalab,scalability,491,https://root.cern,https://github.com/root-project/root/pull/676,2,['scalab'],['scalability']
Performance,The new namespace allows us to import libraries more lazily. Added a test that we load exactly the libraries that we expect.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5252:82,load,load,82,https://root.cern,https://github.com/root-project/root/pull/5252,1,['load'],['load']
Performance,"The new release includes some improvements in both Forward and; Reverse mode:; * Support `x += y`, `x -= y`, `x *= y`, `x /= y`, `x++`, `x--`, `++x`, `--x`; in forward mode.; * Reduce emission of unused expressions; * Add a special `#pragma clad ON/OFF/DEFAULT` to annotate regions which; contain derivatives; * Various small optimizations. See more at: https://github.com/vgvassilev/clad/blob/v0.4/docs/ReleaseNotes.md",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2918:326,optimiz,optimizations,326,https://root.cern,https://github.com/root-project/root/pull/2918,1,['optimiz'],['optimizations']
Performance,"The non-modules system iterates over all available rootmap files and adds their libraries as potential dependencies to the library which ACLiC builds. The built library relies on the explicit linking to load its dependencies when it is dlopened. This is necessary because we have no other way to resolve symbols. Fortunately, the modules dynamic linker has superior symbol resolution. We can rely on it when loading a shared library. This patch fixes failing tests on OSX when runtime_cxxmodules are on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4742:203,load,load,203,https://root.cern,https://github.com/root-project/root/pull/4742,2,['load'],"['load', 'loading']"
Performance,"The operations done by the LookupHelper are costly in both memory and; performance. Almost every operation requires memory allocation and parsing; of often non-trivial C++ code. Unfortunately, the LookupHelper is used very intensively by rootcling and; ROOT. The callers usually do not use any caching mechanisms and redo the; expensive operations over and over even though the answer is known to be; the same as before. For instance, building the dictionary of shows:. ```; MathCore:; Cached entries: 217; Total parse requests: 54051; Cache hits: 53834; TreePlayer:; Cached entries: 183; Total parse requests: 57697; Cache hits: 57514; ```. This patch introduces the first set of caching functionality. In; particular, each LookupHelper::find* function allocates a memory buffer; which is then stored in the clang::SourceManager. We hash the buffer; content and keep a mapping between a hash and FileID and next time we; encounter the same content we do not allocate a new FileID but reuse the; old one. We see decrease in memory footprint by 7% for non-cxxmodules ROOT. For cxxmodules we see significant reduction of the pcm sizes (by half); which translates into rss improvements:. ```; master before:; cpu time = 0.291462 seconds; sys time = 0.064409 seconds; res memory = 345.816 Mbytes; vir memory = 573.508 Mbytes; master after:; cpu time = 0.235828 seconds; sys time = 0.098327 seconds; res memory = 260.012 Mbytes; vir memory = 377.945 Mbytes; ```. Patch by Yuka Takahashi and me.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483:71,perform,performance,71,https://root.cern,https://github.com/root-project/root/pull/2483,5,"['Cache', 'perform']","['Cache', 'Cached', 'performance']"
Performance,"The original `HistoToWorkspaceFactory` produced models that consisted of; a Poisson term for each bin. In this ""number counting form"" the; dataset has one row and the collumns corresponded to the number of; events for each bin. This led to severe performance problems in; statistical tools that generated pseudo-experiments and evaluated; likelihood ratio test statistics. Nowadays, everyone uses the faster `HistoToWorkspaceFactoryFast`; implementation that produces a model in the ""standard form"" where the; dataset has one row for each event, and the column corresponds to the; value of the observable in the histogram. Therefore, the original `HistoToWorkspaceFactory` is now removed to; avoid confusion and maintainance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10220:247,perform,performance,247,https://root.cern,https://github.com/root-project/root/pull/10220,1,['perform'],['performance']
Performance,"The original issue is with some python tutorial failing on macOS nodes due to; ```; <TNetXNGFile::Open>: [FATAL] Auth failed; ```; Which in turn is due to a failure in loading some xrootd security libraries, among which; ```; [Error ][Utility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6128:168,load,loading,168,https://root.cern,https://github.com/root-project/root/pull/6128,3,['load'],"['load', 'loading']"
Performance,"The output of the `rootbench/build/root/roofit/roofit/RooFitUnBinnedBenchmarks.cxx` benchmark is now (using 1M events):. ```; --------------------------------------------------------------------------------; Benchmark Time CPU Iterations; --------------------------------------------------------------------------------; BDecayWithMixing__BatchMode_CUDA 403 ms 129 ms 1; BDecayWithMixing__BatchMode_CPU 2086 ms 2084 ms 1; BDecayWithMixing__NumCPU_1 8412 ms 8408 ms 1; BDecayWithMixing__NumCPU_2 4739 ms 12.9 ms 1; BDecayWithMixing__NumCPU_4 2974 ms 17.0 ms 1; BDecayWithMixing__NumCPU_8 2107 ms 28.0 ms 1. BDecayGaussResolution__BatchMode_CUDA 231 ms 19.2 ms 1; BDecayGaussResolution__BatchMode_CPU 2551 ms 2550 ms 1; BDecayGaussResolution__NumCPU_1 5122 ms 5120 ms 1; BDecayGaussResolution__NumCPU_2 2867 ms 10.8 ms 1; BDecayGaussResolution__NumCPU_4 1767 ms 15.8 ms 1; BDecayGaussResolution__NumCPU_8 1224 ms 26.8 ms 1. BDecayDoubleGauss__BatchMode_CUDA 1660 ms 86.9 ms 1; BDecayDoubleGauss__BatchMode_CPU 17891 ms 17878 ms 1; BDecayDoubleGauss__NumCPU_1 48664 ms 48644 ms 1; BDecayDoubleGauss__NumCPU_2 25634 ms 25.3 ms 1; BDecayDoubleGauss__NumCPU_4 14941 ms 30.6 ms 1; BDecayDoubleGauss__NumCPU_8 10087 ms 46.2 ms 1; ```. There is a nice speedup with CUDA, so these will serve as new results for CHEP, highlighting the performance of the GPU backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12141:1324,perform,performance,1324,https://root.cern,https://github.com/root-project/root/pull/12141,1,['perform'],['performance']
Performance,"The performance gains are unclear and the option can harm users linking against the library with gcc<13, see also https://gcc.gnu.org/bugzilla/show_bug.cgi?id=55522 . EDIT: relevant forum conversation: https://root-forum.cern.ch/t/rootvecops-enables-ffast-math/53422",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12214:4,perform,performance,4,https://root.cern,https://github.com/root-project/root/pull/12214,1,['perform'],['performance']
Performance,"The problem was due the introduction (in commit f3f0f13) of a fast path in TClass::GetListOfDataMember which did not take in consideration the case:. c = GetClass(someclassname); c->GetState() == TClass::kForwardDeclared; c->GetListOfDataMember() -> list is now created but empty.; load and parse header file for; c->GetState() == TClass::kInterpreted; c->GetListOfDataMember() -> list is still empty but should have been filled (loaded at this point). The logic assumed incorrectly that if someclassname was indeed pointing to a class or struct and the list was created then it was loaded. To keep the fast path and correct the logic, we need to 'promote' TListOfDataMembers::fIsLoaded to be an std::atomic",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6668:282,load,load,282,https://root.cern,https://github.com/root-project/root/pull/6668,3,['load'],"['load', 'loaded']"
Performance,"The problem was due the introduction (in commit f3f0f13) of a fast path in TClass::GetListOfDataMember which did not take in consideration the case:; ```; c = GetClass(someclassname); c->GetState() == TClass::kForwardDeclared; c->GetListOfDataMember() -> list is now created but empty.; load and parse header file for; c->GetState() == TClass::kInterpreted; c->GetListOfDataMember() -> list is still empty but should have been filled (loaded at this point).; ```; The logic assumed incorrectly that if someclassname was indeed pointing to a class or struct and the list was created then it was loaded. To keep the fast path and correct the logic, we need to 'promote' TListOfDataMembers::fIsLoaded to be an std::atomic",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6669:287,load,load,287,https://root.cern,https://github.com/root-project/root/pull/6669,3,['load'],"['load', 'loaded']"
Performance,"The purpose of this PR is to support discussion about the following proposal for a modern application interface for TMVA. See below the tutorial, which showcases the interface implemented in this PR as proof-of-concept. ```cpp; void train(const std::string& filename) {; // optimized out; }. void tmva003_RLegacyReader(); {; // First, let's train a model with TMVA.; const std::string filename = ""http://root.cern.ch/files/tmva_class_example.root"";; train(filename);. // Next, we load the model from the TMVA XML file.; RLegacyReader model(""TMVAClassification/weights/TMVAClassification_BDT.weights.xml"");. // In case you need a reminder of the names and order of the variables during; // training, you can ask the model for it.; auto variables = model.GetVariableNames();; std::cout << ""\nVariable names used during training: "" << variables << ""\n\n"";. // The model can now be applied in different scenarios:; // 1) Event-by-event inference; // 2) Batch inference on data of multiple events; // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference; // The event-by-event inference takes the values of the variables as a std::vector<float>.; // Note that the return value is as well a std::vector<float> since the reader; // is also capable to process models with multiple outputs.; auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});; std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events; // For batch inference, the data needs to be structured as a matrix. For this; // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame; // and the AsTensor utility to make the read-out from the ROOT file.; ROOT::RDataFrame df(""TreeS"", filename);; auto df2 = df.Range(3); // Read only 10 events; auto x = AsTensor<float>(df2, variables);; std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);; std::cout << ""Prediction perform",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3321:274,optimiz,optimized,274,https://root.cern,https://github.com/root-project/root/pull/3321,2,"['load', 'optimiz']","['load', 'optimized']"
Performance,"The pythonization of `TTree::SetBranchAddress` was implemented in C++, hacking into CPyCppy by using implementation details like data member caches (this call: `((CPPInstance *)address)GetDatamemberCache()`). Not too surprising that it apparently breaks with the upcoming Python 3.13. It's better to implement the pythonizations in Python and also manage the lifetime of the necessary data in Python. This is done in this commit. The pythonization is extensively tested in `ttree_setbranchaddress.py`. Closes #15799.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15807:141,cache,caches,141,https://root.cern,https://github.com/root-project/root/pull/15807,1,['cache'],['caches']
Performance,The race condition could lead to the TContext indirectly spinning the lock indefinitively,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1441:4,race condition,race condition,4,https://root.cern,https://github.com/root-project/root/pull/1441,2,['race condition'],['race condition']
Performance,"The rf503_wspaceread tutorial mus be run after the rf502_wspacewrite; tutorial in the unit tests. This dependency was already defined for the; C++ tutorial tests. The lines added to `tutorials/CMakeLists.txt` in; this commit make the same definitions for the Python tutorials, and also; indicate that the Python tests rf502 and rf503 should be run after the; C++ tests to avoid a race condition on the output file. Failures caused by the dependencies not handled correctly were observed in the ROOT nightlies, and this commit should avoid them in the future.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8491:380,race condition,race condition,380,https://root.cern,https://github.com/root-project/root/pull/8491,1,['race condition'],['race condition']
Performance,"The target dependencies only ensure the ordering, which is fine for builds from scratch, but doesn't always cause the PCH to be regenerated in incremental builds. Depending only on the source; or the object file, as in commit 07d25b24, unfortunately creates race conditions on the custom command that generates the source with rootcling. Using both and adding the dictionary files as; dependency in the DEPENDS argument of the custom command that creates the PCH creates dependencies both at the target level to ensure the ordering, but also at the file level to ensure that; the PCH is regenerated when necessary. Hopefully this will avoid the race conditions...",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4355:258,race condition,race conditions,258,https://root.cern,https://github.com/root-project/root/pull/4355,2,['race condition'],['race conditions']
Performance,"The test should reuse the prebuilt modules in the module cache. However, due to a mismatch between the module-related flags exported by FindROOT. There is a mismatch between the -D passed by cmake. This patch make sure that the build arguments match more closely the build setup of ROOT. Thus we can reuse the already built module files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2545:57,cache,cache,57,https://root.cern,https://github.com/root-project/root/pull/2545,1,['cache'],['cache']
Performance,"The tutorials ""tutorial-pyroot-geometry-py"" and ""tutorial-pyroot-na49view-py"" were failing in Experimental PyROOT because of the absence of an extra lookup performed inside gROOT, which was implemented in the old PyROOT in the function LookupCppInstance(). ; It was decided to solve this problem by adding this third lookup to the _fallback_getattr() function inside _facade.py. ; This also allow to get an object inside gROOT by simply typing:; `ROOT.a`; instead of ; `ROOT.gROOT.FindObject(a)`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4084:156,perform,performed,156,https://root.cern,https://github.com/root-project/root/pull/4084,1,['perform'],['performed']
Performance,The update of the time step for the optimizer must be each batch update and not for each epoch. ; This affects the correction for the bias applied to the computed first and second momentum when using ADam. (see https://root.cern.ch/doc/master/Adam_8h_source.html#l00147 ). . After this correction the obtained convergence results look better and compatible with what obtained when using when using Keras,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5042:36,optimiz,optimizer,36,https://root.cern,https://github.com/root-project/root/pull/5042,1,['optimiz'],['optimizer']
Performance,"The v1 binary format knows cluster groups. Cluster groups correspond to page list envelopes in the binary format, i.e. to blocks of meta-data with page locations. As a result, cluster groups allow for incremental loading of page locations (page meta-data), which is useful for very large files and combined data sets (chains, friends). This PR restructures the `RNTupleDescriptor` and `RClusterDescriptor` and their builder classes such that they can eventually make proper use of cluster groups. To this end, the descriptor is first populated with cluster groups and cluster summaries only. Cluster summaries only contain the cluster's event range (plus, at a later point, the column group ID for sharded clusters). In a second step, page lists of cluster groups are loaded and used to populate the page locations of clusters. At this point, ntuples still load all meta-data on open. Follow-up PRs should change it such that ntuples initially only know cluster summaries. The cluster details (i.e. page locations) will the be loaded and dropped during event iteration based on an actively set event range window, which needs to be controlled by the user of the page source (`RNTupleReader`, `RNTupleDS`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9565:213,load,loading,213,https://root.cern,https://github.com/root-project/root/pull/9565,4,['load'],"['load', 'loaded', 'loading']"
Performance,"There are a number of trivial operations that users often want to perform on dataframes that are surprisingly hard to get right, for example adding several `Define`s in a loop or conditionally adding a `Filter` depending on a runtime boolean (both use-cases are challenging in C++, trivial in python). The way I see it, difficulties boil down to the fact that different dataframe nodes have different types (because their types incorporate e.g. the type of the callable passed to a `Filter` and the type of their parent node in the computation graph). In this PR I propose to add a common base class `ROOT::RDF::RNode` to all nodes of the graph (except leaves a.k.a results, which have a completely different interface),; so that users can, for example:; * take any dataframe node by reference in non-template functions as `RNode&`; * `emplace_back` dataframe nodes in ~`std::vector<RNode>`~ `vector<RInterface<RNode>>`; * have non-const pointers to dataframe nodes. and so on. For example, conditionally adding a `Range` do a dataframe now looks like this:. ```c++; auto maybe_ranged = [&df, mustAddRange] { ; return mustAddRange ? ROOT::RDF::RNode(d.Range(1)); : ROOT::RDF::RNode(d); ; }(); ; ```. while before this PR one would have to add fake `Filter(""true"")` filters to normalize the return type of the lambda, involving the interpreter for no reason. Internal `RDataFrame` code is also simplified by the introduction of this common base class.; The only downside I can think of is that if this mechanism is abused users might end up with extra, unnecessary virtual calls in their event loop -- on the other hand, this mechanism should only be used in situations that required either complex template magic or dirty and slow tricks before. Questions:; * can we come up with a better name than `ROOT::RDF::ToCommonNodeType` for the function that upcasts any dataframe object to the same type?; * should this cast only be explicit through an upcasting function call or should we allow implicit cas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2182:66,perform,perform,66,https://root.cern,https://github.com/root-project/root/pull/2182,1,['perform'],['perform']
Performance,"There still was a constructor of `RooDataSet` that was hardcoded to use; the TreeDataStore. This needs to be changed, because the; RooVectorDataStore is more performant and compatible with the new; BatchMode. This PR also includes some other commits that improve the memory management in the dataset classes with `std::unique_ptr`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11410:158,perform,performant,158,https://root.cern,https://github.com/root-project/root/pull/11410,1,['perform'],['performant']
Performance,"There used to be just one way of resolving an unknown name (eg. MyClass) -- by using the TCling::AutoLoad interface. However, there are two ingredients to resolve a name -- make the name known to the cling and make its library known to the JIT. Historically, these were one function. Later, we implemented performance optimization on top which divides the two steps in order to avoid excessive library loading. Now we have an auto parse step which is designed to avoid the heavy TCling::Autoload. The particular callback calls tryAutoParseInternal which is controlled by fIsAutoParsingSuspended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5756:306,perform,performance,306,https://root.cern,https://github.com/root-project/root/pull/5756,3,"['load', 'optimiz', 'perform']","['loading', 'optimization', 'performance']"
Performance,"There was a problem in the `IntegralEvaluator` class in the FitUtils.h; in case veccore and vc is used. To evaluate the integral, some input; doubles `x` need to be transferred each of them into a different; `ROOT::Double_v` to call the underlying function. However, the `ROOT::Double_v` can't load just a single double. Calling; the `Load()` function should be done with a pointer to a `double *`; arrary that is large enough to hold as many doubles as the; `ROOT::Double_v` for SIMD instructions. If you use pointers to single doubles anyway, then you get rightly and; out-of-bounds warning. This commits suggests to get gid of this problem by first transferring; the doubles to the beginning of temporary buffers of the right size, and; then passing these buffers to `vecCore::Load()`. Furthermore, I suggest to merge the two code paths of 1D and ND; functions into one. The difference was that the ND path allocated the; `Double_v`s on the heap in a STD vector, and the 1D path used just an; single `Double_v` on the stack, probably for performance reasons. This commit suggests to use the stack also for the ND code path using; stack arrays, so the 1D path would not be a special case anymore. Also, the `<Math/Util.h>` header can not be compiled with CUDA if `vc` is enabled, so there is a second commit in this PR to avoid that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13772:294,load,load,294,https://root.cern,https://github.com/root-project/root/pull/13772,4,"['Load', 'load', 'perform']","['Load', 'load', 'performance']"
Performance,"There was an evil hack in `RooAbsOptTestStatistic`:. ```c++; _dataClone->cacheArgs(this,_cachedNodes,_normSet,!_funcClone->getAttribute(""BinnedLikelihood"")) ;; ```. The final parameter determins if zero weights should be skipped when recalculating the caches. Indeed, for the NLL case, this corresponds to the BinnedLikelihood attrribute being present or not, but it broke the other test statistics for which zero weights should not be skipped at all. This commit suggests a safer way to manage this with a new `RooAbOptTestStatistic::_skipZeroWeights` flag. In particular, this change fixed a bug that got uncovered during a forum discussion:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13639:73,cache,cacheArgs,73,https://root.cern,https://github.com/root-project/root/pull/13639,2,['cache'],"['cacheArgs', 'caches']"
Performance,These are local displays and have tiny difference with standard HTTP communication.; Also Openui require very strict URL formatting.; Also qt5 web display performance increased. Now one can use local display for eve7 and all other custom applications with complex HTML layout,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2884:155,perform,performance,155,https://root.cern,https://github.com/root-project/root/pull/2884,1,['perform'],['performance']
Performance,"These changes achieve two things:. 1. Performance improvement of CUDA backend by factor two by better organizing the copies from host to device; 2. Avoid the hardcoded maximum number of input variables for the compute function, which was a problem for RooAddPdfs with many components. More detail in the commit descriptions. Here are the reproduced CHEP 2023 plots with this PR:. ![benchRooFitBackends](https://github.com/root-project/root/assets/6578603/785828ac-5265-449a-833f-ff9ea018c649). ![benchRooFitUnbinned](https://github.com/root-project/root/assets/6578603/f79a8cc5-bb12-4efb-9917-790a06fe2f63). The older benchmark results can be found in this CHEP presentation:; https://indico.jlab.org/event/459/contributions/11570/attachments/9440/13688/roofit_heterogeneous_chep_2023_with_transitions.pdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13556:38,Perform,Performance,38,https://root.cern,https://github.com/root-project/root/pull/13556,1,['Perform'],['Performance']
Performance,"These changes are based on an analysis with VTune that showed that most waiting happened around `TClass::LoadClassInfo()`. Returning early without taking the lock when the information is already loaded yields very significant performance improvements. Images with each thread activity before and after the optimizations are attached. The x-axis represents time, light green means a thread is active, and dark green and brown mean running. Before changes:; ![before](https://user-images.githubusercontent.com/249404/27340439-be419240-55da-11e7-9cba-d881cfdd3104.png). After changes:; ![after](https://user-images.githubusercontent.com/249404/27340446-c57cf018-55da-11e7-9ef2-bbe30b30092f.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/666:105,Load,LoadClassInfo,105,https://root.cern,https://github.com/root-project/root/pull/666,4,"['Load', 'load', 'optimiz', 'perform']","['LoadClassInfo', 'loaded', 'optimizations', 'performance']"
Performance,"These days, ClassImp() causes more harm than good. See e.g. https://root-forum.cern.ch/t/error-cling-loadlibrary-while-compiling-in-root-6-08/30340/5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2563:101,load,loadlibrary-while-compiling-in-root-,101,https://root.cern,https://github.com/root-project/root/pull/2563,1,['load'],['loadlibrary-while-compiling-in-root-']
Performance,"These engines can be used to obtain the same sequences of numbers as RANLUX generators using recursive subtract-with-borrow steps, but with enhanced performance. Apart from the choice of parameters, the main difference between the various implementations is the way of seeding the initial state of the generator. This commit includes engines for compatibility with:; * the original implementation by Fred James, with parameters for; - luxury level 3 (`p = 223`), also matching `gsl_rng_ranlux`; - luxury level 4 (`p = 389`), also matching `gsl_rng_ranlux389` producing floating point numbers from 24 bits of randomness;; * the family of generators using a second-generation version of the RANLUX algorithm as implemented in the GNU Scientific Library:; - `gsl_rng_ranlxs[012]` using 24 bits per floating point number, and; - `gsl_rng_ranlxd[12]` using 48 bits per floating point number;; * the implementation by Martin Lüscher written in C that uses four states per generator; similar to GSL, there are `ranlxs[012]` with 24 bits per number and `ranlxd[12]` with 48 bits per number; and; * the generators `std::ranlux{24,48}` defined by the C++ standard. The values in the tests were extracted directly from the mentioned implementations, showing that the LCG implementation is equivalent to the RANLUX algorithm. I am not adding compatibility engines for CLHEP because its semantics are very weird: While `CLHEP::RanluxEngine::setSeed` yields the same sequences as the original implementation by James, the seed is treated differently when passed as an argument to the constructor.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8383:149,perform,performance,149,https://root.cern,https://github.com/root-project/root/pull/8383,1,['perform'],['performance']
Performance,"These locks were only activated when inside TTreeProcessorMT::Process,; and they seem to protect the usecase in which the method is called; concurrently on the same object, which is not a valid usecase (anymore?). **Note:** just checking that this change does not cause crashes for now",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5301:140,concurren,concurrently,140,https://root.cern,https://github.com/root-project/root/pull/5301,1,['concurren'],['concurrently']
Performance,"These minor changes seem to affect the way in which TTreeCache interacts with different IO classes, e.g. TTree/TChain vs TTreeReader. In `TTreeCache::FillBuffer` the change in values of `fEntryCurrent` and `fEntryNext`, respectively the first entry of the current cluster and the first entry of the next cluster, has been moved before an `if` condition that was causing an early exit from the function.; This, in conjunction with the change in `TTreeReader::SetEntriesRange` apparently fixes the issues with the cache when running a simple program that uses only TTreeReader. At the same time, the changes affect the interaction of the cache with a TTree-only program in a way that now is throwing a log error:; ```Error in <TTreeCache::FillBuffer>: Inconsistency: fCurrentClusterStart=821695 fEntryCurrent=821695 fNextClusterStart=1643390 but fEntryCurrent should not be in between the two```. I'm not sure why these changes affect positively the TTreeReader examples and negatively the TTree ones. Some links to these examples follow.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5365:512,cache,cache,512,https://root.cern,https://github.com/root-project/root/pull/5365,2,['cache'],['cache']
Performance,"These two libraries do not need to be linked, they can be loaded at runtime when necessary. `ROOTVecOps` in particular forces `libPyROOT.so` to link against Vdt when that is enabled, which we would like to avoid. *Note:* `RVec` pythonization has been recently made lazy in 3017be2d80c160d8726c887fad2ede81c295c27a.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3225:58,load,loaded,58,https://root.cern,https://github.com/root-project/root/pull/3225,1,['load'],['loaded']
Performance,"They were picked up as side effects of classes, but not forward declared as; and by themselves. This fixes namespaces and enums not being available / known at the ROOT prompt despite their dictionary being loaded:; https://root-forum.cern.ch/t/enum-in-namespace-not-available-after-loading-dictionary/45757",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8661:206,load,loaded,206,https://root.cern,https://github.com/root-project/root/pull/8661,2,['load'],"['loaded', 'loading-dictionary']"
Performance,"This PR add a new architecture for TMVA GPU based on using the cuDNN library from NVIDIA. ; This includes the work of Joana Niermann, OpenLab summer stuident 2019. ; This accelerates significantly the performance in convolutional neural networks. ; See the figure below; [cudnnPerformanceNew.pdf](https://github.com/root-project/root/files/3716742/cudnnPerformanceNew.pdf). This PR introduces two new classes TCpuTensor whic his an extension of RTensor for using tensor operations in the CPU architecture (thanks to the work of Sitong An) and TCudaTensor for GPU operations with or without CuDNN.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4531:201,perform,performance,201,https://root.cern,https://github.com/root-project/root/pull/4531,1,['perform'],['performance']
Performance,"This PR adds `RooGradMinimizerFcn`, an alternative to `RooMinimizerFcn` that calculates gradient itself outside of Minuit during minimization. To be able to use `RooGradMinimizerFcn`, `RooMinimizer` had to be refactored to be able to use `RooAbsMinimizerFcn` instead of the concrete RooMinimizerFcn class. To accomodate this change, several other changes had to be made:; - `_optConst` and `_func` members were removed, since these are now managed by the `*MinimizerFcn`.; - This means also things like function name and title, but also optimization switches, were moved to `RooAbsMinimizerFcn` as well.; - Functions `getMultiGenFcn`, `fitterFcn` and `fitFcn` were added which are used in several places as convenience functions to access the concrete `RooAbsMinimizerFcn` object with its proper type. The concrete type matters, for instance, when passing the class to the derivator, because a gradient enabled `*MinimizerFcn` needs to take different overloads than the classic function-value-only `RooMinimizerFcn`. A `FcnMode` enum class was added for this disambiguation as well.; - Construction of a `RooMinimizer` can be done the same as always when using a classic `RooMinimizerFcn`. However, to activate `RooGradMinimizerFcn`, a new create function can be used with the proper type as template parameter. In a later PR, this pattern will be extended with another gradient-enabled `RooAbsMinimizerFcn` instantiation that will also include multi-processing implementations. Since we had to refactor construction, we took the opportunity to also put default parameters in the header declaration, instead of in the constructor initializer lists. Finally, this PR changes the default minimizer from Minuit to Minuit2. **Note that this may require some discussion.** We already briefly touched upon this in a Zoom meeting, but haven't thoroughly mapped out consequences yet. The reason for the switch is that the derivator scheme used in `RooGradMinimizerFcn` replicates that of Minuit2, so comparing",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596:537,optimiz,optimization,537,https://root.cern,https://github.com/root-project/root/pull/8596,1,['optimiz'],['optimization']
Performance,"This PR adds a new `Create` factory method to the `RNTupleInspector` that takes the name and source path of the `RNTuple` to be inspected as its arguments. This removes the need for the user to open the relevant `TFile` and load the `RNTuple` manually, which can be useful in case one is only interested in inspecting an `RNTuple`. Additionally, a check is added to the existing `Create(RNTuple *sourceNTuple)` method to make sure the pointer that was passed does not refer to null.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12574:224,load,load,224,https://root.cern,https://github.com/root-project/root/pull/12574,1,['load'],['load']
Performance,"This PR adds a new version of the `RDataSource::GetColumnReaders` method. This new version allows the implementation of per-datasource, lazy column readers that know how to communicate with the concrete associated datasource type. As a consequence, datasource implementations are not required to load; values of all required columns when `RDataSource::SetEntry` is called, but; the loading can be delayed to the moment in which a value is actually; needed. In case of strict upstream `Filters`, this should result in; less work performed and therefore improved runtimes. For the `lhcb` benchmark at https://github.com/jblomer/iotools, using the new lazy column readers for `RNTupleDS` results in a 40% runtime improvement.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6348:296,load,load,296,https://root.cern,https://github.com/root-project/root/pull/6348,3,"['load', 'perform']","['load', 'loading', 'performed']"
Performance,"This PR allows to change the minimiser options when doing a second fit or when calling Hesse or Minos. . In case of Hesse the minimizer can also be changed but not in case of Minos, because the minimizer requires a a valid minimisation that is performed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4691:244,perform,performed,244,https://root.cern,https://github.com/root-project/root/pull/4691,1,['perform'],['performed']
Performance,"This PR allows us to use [`liburing`](https://github.com/axboe/liburing), the ""application-level"" interface to [`io_uring`](https://kernel.dk/io_uring.pdf), the new Linux kernel IO interface.; `liburing` takes care of many of the low-level details (e.g. `mmap` calls, barriers) required to correctly use `io_uring`. `io_uring` is supported on Linux kernels 5.1 and up, but it's up to the user to download and install `liburing` themselves, either from source (`make && make install`) or through a package manager. The rationale for including `liburing` in ROOT is to experiment with `io_uring`'s parallel, async IO features. This may drive performance improvements in low-level IO. . I based the CMake changes on how `jemalloc` is handled. I am not very experienced with CMake and would be happy to find out that I've done something wrong here. We need to able to include (at least) two `liburing` header files and link against the shared library, namely . * `#include ""liburing.h""`; * `#include ""liburing/io_uring.h""`; * `liburing.so`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5919:640,perform,performance,640,https://root.cern,https://github.com/root-project/root/pull/5919,1,['perform'],['performance']
Performance,"This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel; 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars; 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11161:155,cache,cache,155,https://root.cern,https://github.com/root-project/root/pull/11161,2,"['cache', 'perform']","['cache', 'performance']"
Performance,"This PR change contains:; - Registering DeserializationListener to ASTReader and get callbacks; when decls are deserialized.; We inherited ASTDeserializationListener in DeclCollector and register; DeserializationListener to our ASTReader at DeclCollector setup time.; In the callback(DeclRead), we get owning modules from decls and store; the information in Transaction. - Load libraies for deserialized decls; Before executeTransaction(where linking happens) we put our callback; beforeEmittingModuleForTransaction in InterpreterCallbacks. This loads; libraries when it wasn't in its first run, and store modules if it's; in its first run. This is because Interpreter is not yet initialized; at first run but we need to use Interpreter services when loading; libraries. I think this is the last piece of semantic change related to runtime; cxxmodules. This also enables us to reduce dependency on rootmap files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1882:373,Load,Load,373,https://root.cern,https://github.com/root-project/root/pull/1882,3,"['Load', 'load']","['Load', 'loading', 'loads']"
Performance,This PR continues the work in #5376. It creates a vcruntime.modulemap file which is loaded before libc and std modulemaps in order to fix several include errors. @vgvassilev @bellenot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5586:84,load,loaded,84,https://root.cern,https://github.com/root-project/root/pull/5586,1,['load'],['loaded']
Performance,"This PR does a few things; 1) Extends the RDF Fill functionality to support arbitrary types and number of columns and an arbitrary mix of individual objects and containers with variadic templates. Note that this will likely result in slower code being generated in case of compiling/jitting without optimization. 2) Adds a HistoND function to RDF to fill a THnD with arbitrary number of dimensions. The main issue here was actually that THnT does not have a publicly accessible copy constructor or assignment operator, which are needed for use with RDF. I didn't have the patience to implement this by hand for all the classes in the inheritance chain, so the relevant classes have been migrated from C-style arrays to std::vector such that default copy (and move) constructors and assignment operators can be automatically generated. 3) Appropriate constructors have been added to allow THnT to be used with variable binning.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7499:299,optimiz,optimization,299,https://root.cern,https://github.com/root-project/root/pull/7499,1,['optimiz'],['optimization']
Performance,"This PR fixes ; - #15919; ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). clingwrapper tries to lookup the `ClassInfo` of `TViewPubFunctions` in meta which is not public. The return type of `GetListOfAllPublicMethods` should be a `TList` but the public `ClassDefInlineOverride` here:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TViewPubFunctions.h#L78-L82. and this usage:. https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/core/meta/src/TClass.cxx#L3845-L3849. exposes the type as `TViewPubFunctions`. This causes the observed offset calculation between `TList` and `TViewPubFunctions` in `Cppyy::GetBaseOffset`:; https://github.com/root-project/root/blob/a038a2f345f41392ce86e07b0683d1740dc9b07c/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1443-L1457. which then fails, producing the warning. Running a check on the type:. ```python; import ROOT; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName())""; ```. Gives:; ```; Warning: failed offset calculation between TList and TViewPubFunctions; Type: TViewPubFunctions; ```. No longer performing this override in `TViewPubFunction.h` fixes the type back to `TList` and the call to `GetBaseOffset` no longer happens:. ```python; print(""Type:"", ROOT.TObject.Class().GetListOfAllPublicMethods().IsA().GetName()); ```; and the warning disappears:. ```; Type: TList; ```. This fix also required an update in the reference file in roottest : https://github.com/root-project/roottest/pull/1159",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16177:1212,perform,performing,1212,https://root.cern,https://github.com/root-project/root/pull/16177,1,['perform'],['performing']
Performance,"This PR fixes ROOT-10081. ; When calling TRandom1::SetSeed(seed ) a different initialization was done respect to calling ; TRandom1::SetSeeds( { seed, 0}, 0); With this PR the same initialization is now performed . In addition the documentation is updated for TRandom2::SetSeed. In that case the store seed value is not the same passed and the user needs to store by himself the seed value in order to reproduce the generated sequence.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4925:203,perform,performed,203,https://root.cern,https://github.com/root-project/root/pull/4925,1,['perform'],['performed']
Performance,"This PR fixes a race condition in which a TTreeReader and its; TTreeReaderValues could be deleted concurrently, possibly leading to use-after-deletes:; Thread #1) a task ends and pushes back processing slot; Thread #2) a task starts and overwrites thread-local TTreeReaderValues; Thread #1) first task deletes TTreeReader",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/833:16,race condition,race condition,16,https://root.cern,https://github.com/root-project/root/pull/833,2,"['concurren', 'race condition']","['concurrently', 'race condition']"
Performance,This PR fixes the issue that we don't export macros from the loaded modules. See the specific commits for more.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1381:61,load,loaded,61,https://root.cern,https://github.com/root-project/root/pull/1381,1,['load'],['loaded']
Performance,"This PR fixes the way data member offsets are determined for `std::pair` fields. The previous implementation used an auto-generated TClass for `std::pair` without its information loaded in the interpreter (as explained in #14084), which for ROOT builds *with* runtime C++ modules enabled is no problem, but without would need the addition of some dictionaries, most notably for `std::map` fields. In #14084, a fix is proposed which works. However, I also discovered that the way that is currently used to get the data member offsets for `std::tuple` fields through `TRealData` also works, so I opted to implement that one instead for consistency's sake (if there are reasons this implementation is problematic, we should also change it for `RTupleField`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14181:179,load,loaded,179,https://root.cern,https://github.com/root-project/root/pull/14181,1,['load'],['loaded']
Performance,This PR improves the test (forward pass and full training tests) for all the recurrent layers using the CPU and the GPU (Cudnn based) implementation. . It also compares the forward results obtained in CPU and GPU. By doing this it has been found that the GPU Cudnn implementation uses a variant in case of GRU (the resetGate is applied after the multiplication of the previous state with the candidate weights). ; This option is now implemented also in teh CPU case (both forward and backward pass) to have consistent results when training on GPU and evaluating on CPU . The PR fixes also a bug seen when using the SGD optimizer with the RNN layers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5367:619,optimiz,optimizer,619,https://root.cern,https://github.com/root-project/root/pull/5367,1,['optimiz'],['optimizer']
Performance,"This PR introduces the functionality offered by `ROOT::RDF::RunGraphs` in distributed RDataFrame. Some things may still need polishing or discussion.; - [x] Implement function for the Spark backend; - [x] Implement generic function available in the distributed module; - [x] Add test for the Spark backend; - [ ] Discuss whether we should keep the logic that all actions should be triggered by the same type of distributed backend (i.e. a user can submit N Spark jobs concurrently, but not N Spark jobs and M Dask jobs from the same call to RunGraphs); - [ ] Discuss default value of `concurrent_runs` parameter, i.e. number of jobs submitted concurrently from the client to the scheduler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8972:468,concurren,concurrently,468,https://root.cern,https://github.com/root-project/root/pull/8972,2,['concurren'],['concurrently']
Performance,"This PR introduces the support for performing inference on Graph Neural Network models in TMVA SOFIE, based on [DeepMind's Graph Nets](https://github.com/deepmind/graph_nets). . **Checklist**; - [x] RModel_GNN class; - [x] RFunction class for graph-based functions; - [x] GraphInput structure for providing inputs to the graph; - [x] ~~RModel_GNNStack class for multi-graph architectures~~ (Should be user customized from Python interface); - [x] Initialize & Generate function for RModel_GNN class; - [x] RFunction_MLP for updation; - [x] RFunction_Mean for aggregate; - [x] RFunction_Sum for aggregate; - [x] RModel_GraphIndependent class; - [x] Pythonization for RModel_GNN & RModel_GraphIndependent (ParseFromMemory functions); - [x] Tests for RModel_GNN and RModel_GraphIndependent; - [x] Pythonization: (Parser, Tests)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208:35,perform,performing,35,https://root.cern,https://github.com/root-project/root/pull/11208,1,['perform'],['performing']
Performance,This PR is a WIP for implementing dictionary reusing within a branch in ZSTD. The work is based on previous work of Brian for the Compression Engine although it does not make use of any of the functions associated with training. This work depends on: https://github.com/root-project/root/pull/3947. Two extra file are added (ZSTDEngine2.hxx/cxx) that provide the infrastructure to perform a detailed analysis of the compression and decompression at basket level. An analysis related with the current performance of this implementation can be found [here](https://gist.github.com/fylux/ac92de799ac3e9d3e81d5edeeeef46f6).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4248:381,perform,perform,381,https://root.cern,https://github.com/root-project/root/pull/4248,2,['perform'],"['perform', 'performance']"
Performance,"This PR is a follow-up on https://github.com/root-project/root/pull/15746. Make it possible to build RooFit CUDA evaluation library standalone to use in existing ROOT release, as discussed on the forum:; https://root-forum.cern.ch/t/installing-root-with-cuda-support-in-a-conda-environment/59208/5. To try it out:; * Build the content of `roofit/batchcompute` in this repository, replacing the CMakeLists.txt file with the code listing below:; * Build the project. You should now have a `libRooBatchCompute_CUDA.so` file. Make sure it's in the `LD_LIBRARY_PATH`; * Your fits should now work with `EvalBackend(""cuda"")` (see also the [RooAbsPdf](https://root.cern.ch/doc/master/classRooAbsPdf.html#a24b1afec4fd149e08967eac4285800de) documentation about this). ```cmake; # Adapt to your system; set (CMAKE_CUDA_ARCHITECTURES ""native"" CACHE STRING """" FORCE); set (CMAKE_CUDA_HOST_COMPILER /usr/bin/g++-13 CACHE STRING """" FORCE); set (CMAKE_CUDA_COMPILER ""/opt/cuda/bin/nvcc"" CACHE STRING """" FORCE). find_package(ROOT REQUIRED); include(${ROOT_USE_FILE}). cmake_minimum_required(VERSION 3.14); project(batchcompute-cuda LANGUAGES CUDA). # in the src directory, put all files from roofit/batchcompute/src and roofit/batchcompute/res; add_library(RooBatchCompute_CUDA SHARED src/RooBatchCompute.cu src/ComputeFunctions.cu src/CudaInterface.cu); target_include_directories(RooBatchCompute_CUDA PRIVATE src res). target_compile_options(RooBatchCompute_CUDA PRIVATE -lineinfo --expt-relaxed-constexpr); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15775:831,CACHE,CACHE,831,https://root.cern,https://github.com/root-project/root/pull/15775,3,['CACHE'],['CACHE']
Performance,"This PR is related to #1010 . I could be more efficient to cancel the tasks immediately than wait for unnecessary tasks to be finished. Especially when cache is invalid, unzipping task has to continue running return function.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1180:152,cache,cache,152,https://root.cern,https://github.com/root-project/root/pull/1180,1,['cache'],['cache']
Performance,"This PR is the first part of a split and clean-up of #8294, as suggested by @guitargeek. In this PR, only the changes to mathcore and Minuit2 are taken into account. These changes will be necessary for the later RooFit parts which will come in separate PRs. Specifically, this PR introduces the ExternalInternalGradientCalculator in Minuit2. This subclass of AnalyticalGradientCalculator enables calculation of the derivative outside of Minuit2, but in ""Minuit-internal"" parameter space. This allows exact replication of the gradients as calculated in Minuit2 itself, which in turn enables external optimization and parallelization of this process without having to modify Minuit2, without having to worry about differences in outcome. In other words, the resulting external gradient calculation can be easily unit tested against the existing Minuit2 gradient calculation. ~Note: still working on ""cherry picking"" all changes and organizing them into functionally sensible commits. Will un-draft the PR once this is done.~ Ready for review.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8369:599,optimiz,optimization,599,https://root.cern,https://github.com/root-project/root/pull/8369,1,['optimiz'],['optimization']
Performance,"This PR modifies the TBufferMerger callback (that CMS requested) so that it wraps the merge operation--the callback is passed the function to perform the merge and is responsible for calling it. The motivation for this change is that the merge operation is taking enough CPU time that we need it to be executed in the CMSSW framework's TBB task arena so that we don't overrun our CPU commitment. With this change, we can use a callback like. ```; mergeExec_ = [this](const std::function<void()> &f){; std::promise<void> barrier;; auto fwrap = [&]() { ; auto set_value = [](decltype(barrier)* b) { b->set_value(); };; std::unique_ptr<decltype(barrier), decltype(set_value)> release(&barrier, set_value);; f();; };; taskArena_->enqueue(fwrap);; barrier.get_future().wait();; };; ```. to queue the merge operation to our task arena and wait for it to complete. This also ensures that any IMT operations invoked by the merge operation are also executed in our task arena. Since the callback can still perform any operations it wants after executing the merge operation, this is a superset of the previous callback functionality.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1706:142,perform,perform,142,https://root.cern,https://github.com/root-project/root/pull/1706,3,"['perform', 'queue']","['perform', 'queue']"
Performance,"This PR propagates the disconnect action from TFileCacheRead to TFilePrefetch. This is needed to restore TFilePrefetch compatibility with the CMS use of kDoNotDisconnect to swap TTreeCaches. CMS frequently swaps TTree caches with code like. filePtr_->SetCacheRead(cache, nullptr , TFile::kDoNotDisconnect);; branch->GetEntry(entryNumber);; filePtr_->SetCacheRead(nullptr, nullptr , TFile::kDoNotDisconnect);. This is done partially for ownership reasons and partially because CMS uses multiple TTreeCaches for different use cases (one cache for frequently read branches, a second for less frequently accessed branches, and potentially one or two more specialized use cases). kDoNotDisconnect tells the TFile that this cache may later be reconnected to the TFile, so it should not disconnect the cache from the file. TFile propagates the flag to TFileCacheRead, but TFileCacheRead does not propagate it to TFilePrefetch. If pre-fetching is enabled, TFilePrefetch clears its cached blocks due to this commit:. https://github.com/root-project/root/commit/4290bf4942285b754b2edb7bffd122bcf36c979d. which added clearing of the read and pending prefetch lists when SetFile() is called. This violates the assumptions made by TTreeCache in the kDoNotDisconnect case, leading to a deadlock where `TTreeCache::ReadBufferPrefetch` waits forever on a buffer that has been cleared from the prefetched and pending lists. This patch propagates the kDisconnect/kDoNotDisconnect action flag to `TFilePrefetch::SetFile`, only clearing the fetched and pending lists in the kDisconnect case. (The same end could be accomplished more simply by just not calling TFilePrefetch::SetFile() for the kDoNotDisconnect case; propagating the action seems more correct to me, but it is a matter of taste.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1769:218,cache,caches,218,https://root.cern,https://github.com/root-project/root/pull/1769,6,['cache'],"['cache', 'cached', 'caches']"
Performance,This PR provides some optimisation for Cuda. In particular: . - optimise update weights/gradient of SGD and ADAM/ ; - We avoid now creating temporary matrices in SGD ; - For ADAM it is more efficient defining three new updates functions which will blenched on the GPU. This also avoid creating temporaries . These changes speed-up by almost a factor of 2 the code in GPU for dense layer when using ADAM and restore the previous performances for SGD. - optimise also computation of convolutional weight gradients. ; In this case we can just simply use the ScaleAdd function. A speed up of ~ 20% is obtained . This PR also adds a commit that remove the computation of correlation matrix in case of large number of variables,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2502:428,perform,performances,428,https://root.cern,https://github.com/root-project/root/pull/2502,1,['perform'],['performances']
Performance,"This PR refactors (or rather, rewrites) `hadd`'s argument parsing code to achieve the following improvements:; - code is simpler to follow, more consistent among different flags and extracted from main; - adding new flags is easier; - allows the familiar syntax of `-j2` in addition to `-j 2`. As a bonus, and for consistency with `-cachesize=`, all flags can now also be passed as `-j=2` (except for `-f` which has a special logic).; - allows passing flags after the positional arguments; - hadd will abort when encountering invalid flag arguments, instead of just printing a message. In the name of code simplification, this PR doesn't attempt to replicate the same exact error-reporting behavior string-by-string as the current version, but the results should ideally be the same. I ran the roottest suite and all tests pass but we might want to add more tests to be sure. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090:333,cache,cachesize,333,https://root.cern,https://github.com/root-project/root/pull/16090,1,['cache'],['cachesize']
Performance,This PR removes the dependency of libTMVA from libROOTDataFrame. . The dependency is needed only for the test programs. ; This should fix the conflict seen when loading PyTorch models on some architectures. See https://github.com/root-project/root/pull/13674#issuecomment-1733208800 . In addition the PR veto some Keras tutorials which time-out on macOS due to need to keep eager execution on MacOS; (see https://github.com/root-project/root/pull/13634/commits/e1d2ed4a937e546d197a1c1c026c17f671a16bcc ),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13718:161,load,loading,161,https://root.cern,https://github.com/root-project/root/pull/13718,1,['load'],['loading']
Performance,"This PR should fix a race condition with some of the TMVA tutorials on ARM, as they all use the same files in the `dataset` folder: http://cdash.cern.ch/testDetails.php?test=22693533&build=331203",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/420:21,race condition,race condition,21,https://root.cern,https://github.com/root-project/root/pull/420,1,['race condition'],['race condition']
Performance,"This Pull request extends `RPageSink::RPageSinkDaos` to implement `RPageSinkDaos::CommitSealedPageVImpl()`, of signature: ; ```c++; vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(span<RPageStorage::RSealedPageGroup> ranges); ```; , which is virtually declared in the parent class `RPageSink` since PR #10775. . The implemented method modifies the default behavior for committing page ranges, i.e. calling `::CommitSealedPage` repeatedly for each individual page. ; Instead, it coalesces the buffered page ranges - e.g. all pages in a column or cluster - into a batch of vector writes, enabling I/O parallelization after recent optimizations to the `RDaos` library. . As with the batched fetching case in `RPageSourceDaos::LoadClusters()`, the page write requests are aggregated by the pair (Object ID, Distribution Key). This pair is part of the `RDaosKey` determined by the mapping strategy set in `kDefaultDaosMapping` from the pages metadata and the `RPageSinkDaos` instance's atomic counter `fPageId` that uniquely identifies pages in the storage sink. ## Changes or fixes:. * Implements `std::vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges)`; * Modifies the default behavior in `RPageSink::CommitSealedPageV()` to coalesce pages before sending out the write request to storage; * Enables optimized (i.e. batched) vector write requests of multiple pages within a column range by exploiting the refactored `RDaos` interface and the generalized ntuple-object mappings in `RPageStorageDaos`. ## Checklist:. - [x] tested changes locally and on openlab cluster `olsky-03` with DAOS 2.0.x; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10944:640,optimiz,optimizations,640,https://root.cern,https://github.com/root-project/root/pull/10944,3,"['Load', 'optimiz']","['LoadClusters', 'optimizations', 'optimized']"
Performance,This Pull request fixes an issue with the LSTM operator and provides some performance improvement for all recurrent operators,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9435:74,perform,performance,74,https://root.cern,https://github.com/root-project/root/pull/9435,1,['perform'],['performance']
Performance,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10795:105,perform,performance,105,https://root.cern,https://github.com/root-project/root/pull/10795,7,"['perform', 'queue']","['performance', 'queue', 'queues']"
Performance,"This Pull request refactors `RPageSourceDaos::LoadClusters()` to coalesce the fetch requests for pages in the same cluster bunch before calling `RDaosContainer::ReadV`, instead of launching a call to remote storage for the pages of each cluster separately. A cluster bunch corresponds to all clusters being fetched together by `LoadClusters()` at a time. . Since the call by `ReadV()` is ultimately blocking until all requests are done, this change enables the asynchronous page fetch requests from different clusters to share queue and flight time; thus, remote storage can parallelize them toward a higher read throughput. . The requests are still coalesced according to object ID and distribution key resulting from the mapping strategy in `kDefaultDaosMapping`. The modification allows support for new mappings that do not feature the ntuple cluster ID among the object ID and distribution key (i.e. such page requests may now be parallelized despite not being from the same cluster). ## Changes or fixes:; - `RPageSourceDaos::LoadClusters()` has been refactored to batch up page requests from all provided clusters before the blocking `RDaosContainer::ReadV()` call. ## Checklist:. - [x] tested changes locally + openlab `olsky-03`; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10982:46,Load,LoadClusters,46,https://root.cern,https://github.com/root-project/root/pull/10982,5,"['Load', 'queue', 'throughput']","['LoadClusters', 'queue', 'throughput']"
Performance,"This address one of the issue noted in https://sft.its.cern.ch/jira/browse/ROOT-2869. Instead of resetting`fNfill` (i.e. forgetting all cached data) right after taking an action (actual putting the data into the histogram), we now reset it at the beginning of the entry processing if we took action during the previous processing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12555:136,cache,cached,136,https://root.cern,https://github.com/root-project/root/pull/12555,1,['cache'],['cached']
Performance,This addresses test failures like:; ```; 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1. 1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::HistLog(); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417:451,load,load,451,https://root.cern,https://github.com/root-project/root/pull/8417,3,['load'],['load']
Performance,"This adds gdb pretty printers for a few objects such as TString and TNamed, as well; as a couple of RooFit objects. gdb can automatically load them if `add-auto-load-safe-path`; is set to ROOT's lib directory.; The printers should only be installed during debug builds. A couple of things are still unclear:; - `file(COPY ...` is used to copy the printers into the build directory. This will only run when cmake is run, but not during make. The pretty-printers will therefore not get updated. Is that a problem? A solution should be to create targets that are being kept up-to-date by make.; - Is it correct to use `install(FILES ...)` to install?; - I added a roottest that starts root.exe in gdb, and tries to load the printers. This may fail; o With old gdbs; o With release builds. gdb should fail to load the printers because they are not installed. Probably, the test should be disabled during release builds. Let's see if it fails as expected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3633:138,load,load,138,https://root.cern,https://github.com/root-project/root/pull/3633,4,['load'],"['load', 'load-safe-path']"
Performance,This allows to interactively adjust histogram parameters before; performing a projection to a lower dimensional representation. This patch implements ROOT-4515. A unit test is being added in root-mirror/roottest/pull/6.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/212:65,perform,performing,65,https://root.cern,https://github.com/root-project/root/pull/212,1,['perform'],['performing']
Performance,This allows us to pass in flags directly to cling such as:; -Xclang -dump-deserialized-decls or -Xclang Rmodule-build which are very; useful for debugging performance.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1524:155,perform,performance,155,https://root.cern,https://github.com/root-project/root/pull/1524,1,['perform'],['performance']
Performance,This allows users to specify the modulemap name not just the folder. The CLING_MODULEMAP_FILES env variable should have a list of space-separated files which cling will try to load as modulemaps. This should allow cmssw to load the boost modulemap and use it. cc: @davidlange6,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6082:176,load,load,176,https://root.cern,https://github.com/root-project/root/pull/6082,2,['load'],['load']
Performance,"This avoid loading the library containing the dictionary and avoids leaving the TClass::GetClass(""HepMC::GenVertex"") meta information in an odd state. This should bring the v6.18 behavior unintentionally broken in the refactoring commit c8cce31. This should fix ROOT-10514 completely.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4837:11,load,loading,11,https://root.cern,https://github.com/root-project/root/pull/4837,1,['load'],['loading']
Performance,"This avoids that the first time the NLL is computed, a real calculation is performed and not a cached value is used. The cached value could be computed without subtracting the offset and this could be problematic in case the fcn is offsetting. This fixes #7659. Note that the real changes are only at around line 200, the rest are only extra whitespaces removed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7671:75,perform,performed,75,https://root.cern,https://github.com/root-project/root/pull/7671,3,"['cache', 'perform']","['cached', 'performed']"
Performance,This branch contains modifications to address some performance issues identifies in JIRA issue [ROOT-8871](https://sft.its.cern.ch/jira/browse/ROOT-8871). The main changes are:; * Make `TClass::LoadClassInfo()` private and avoid locking the interpreter unnecessarily; * Avoid interpreter lock in `TClass::GetListOfBases()` and return existing list if already available; * Reduce scope of interpreter locks in several places where the lock is taken before necessary; * Add locks where unprotected use of `gInterpreter` is made; * Improve code clarity and performance of `TTree::Fill()`; * Some typo and formatting fixes to improve conformance to coding conventions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/709:51,perform,performance,51,https://root.cern,https://github.com/root-project/root/pull/709,3,"['Load', 'perform']","['LoadClassInfo', 'performance']"
Performance,"This chane is an optimization of the PyROOT value printing. Instead of jitting the value printing at every invocation of the __str__ method, the jitting now happens only once per type. The printer function pointers are stored in a map. The time needed to print is now equivalent to the previous one only for the first print, much faster afterwards. The memory used is also much lower, since traces in the AST are left only at the first print and only the type name and function pointer are stored in an unordered_map. Fixes https://github.com/root-project/root/issues/12817. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13901:17,optimiz,optimization,17,https://root.cern,https://github.com/root-project/root/pull/13901,1,['optimiz'],['optimization']
Performance,"This change is an optimization of the PyROOT value printing. Instead of jitting the value printing at every invocation of the __str__ method, the jitting now happens only once per type. The printer function pointers are stored in a map. The time needed to print is now equivalent to the previous one only for the first print, much faster afterwards. The memory used is also much lower, since traces in the AST are left only at the first print and only the type name and function pointer are stored in an unordered_map. Fixes https://github.com/root-project/root/issues/12817. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [v] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # https://github.com/root-project/root/issues/12817",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13876:18,optimiz,optimization,18,https://root.cern,https://github.com/root-project/root/pull/13876,1,['optimiz'],['optimization']
Performance,"This change was considered for some time now, and a bug recently; reported on the forum was the final motivation to open this PR:. https://root-forum.cern.ch/t/roodecay-getval-normalization-problem/49457. There are many problems with the pointer comparisons:. 1. If normalization sets are created on the stack it can often happen; that the same address gets reused (as happened in that forum post,; more precisely in the implementation of `RooAddModel`); 2. Memeory might also be reused on the heap, which lead to the; developement of a memory arena where memory is not reused. This; memory arena often causes other problems related to heap; fragmentation or dictionaries.; 3. Pointer comparisons still work if the RooArgSets for the cache; entry are already out of scope, which can also cause problems. The `UniqueId` is unique for each `RooArgSet` instance created in a; RooFit process, no matter if on the heap or on the stack. The IDs are; also never reused. This makes the `UniqueId` much more practical for; cache keys than RooArgSet pointers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10333:734,cache,cache,734,https://root.cern,https://github.com/root-project/root/pull/10333,2,['cache'],['cache']
Performance,"This commit enables serialization of the Python proxy defined within cppyy to the C++ std::runtime_error class. By doing so, we avoid errors that happen in certain configurations of Dask tasks where a std::runtime_error may be thrown within the event loop itself. Recent CI failures report the following:. ```; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** segmentation violation; ```. This is due to the fact that for some reason the std::runtime_error object is serialized at the end of the function scope within the Dask task. It is important to note that this has only appeared very recently (after October 20th 2023), somehow concurrently on multiple platforms/configurations:. * Alma9 (GCC 11, C++17, Python 3.9, Dask 2023.10) - also tested with Dask 2022.8.1 - 2023.9.3; * Ubuntu22 (GCC11, C++17, Python 3.10, Dask 2023.10); * Ubuntu23.10 (GCC13, C++20, Python 3.11, Dask 2023.10). ~~The reason why have appeared on these platforms and not on others (notably they do not appear in any Jenkins CI run) is unclear.~~Found culprit, see comment below",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13926:1324,concurren,concurrently,1324,https://root.cern,https://github.com/root-project/root/pull/13926,1,['concurren'],['concurrently']
Performance,"This commit provides a rewrite of key functions of TGeoParallelWorld, achieving: . (a) faster initialization; (b) faster execution of the Safety function (from ~O(N) to ~O(1)) ; (c) faster or equal execution of FindNode/FindBoundary functions (~log(N)) ; (d) less memory consumption (better memory scalability). The development for this commit was motivated from a use case in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:298,scalab,scalability,298,https://root.cern,https://github.com/root-project/root/pull/16442,1,['scalab'],['scalability']
Performance,"This commit provides an (optional) optimization to reduce the cost of safety evaluations associated with TGeoParallelWorld. The approach consists in the introduction of additional cache-state in TGeoNavigator. This state remembers the last location for which TGeoParallelWorld::Safety was evaluated, together with the corresponding value returned. Since TGeoNavigator follows the evolution of tracks step-by-step, we have some sort of history-locality. This means that the cache-state has a high-probability of being relevant for multiple track locations in a row. The optimization proposed here is orthogonal to other improvements. It adds on top of algorithmic improvements within TGeoParallelWorld (bounding volume hierarchies, see separate PR), gaining a few extra percent in speed. By default, the new feature is not enabled by default for backward compatibility. Once fully verified, we can make it the default mode. That said, in ALICE simulations, the caching did not modify stepping behaviour and yielded identical results compared to not doing the caching. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16470:35,optimiz,optimization,35,https://root.cern,https://github.com/root-project/root/pull/16470,4,"['cache', 'optimiz']","['cache-state', 'optimization']"
Performance,"This commit provides the possibility to pass system library search paths as well as some compiler include paths to ROOT as environment variables.; This has the advantage that ROOT will spawn less sub-processes and we can do the setup only once, instead of doing it for every single executable that is linked to ROOT. The commit does not change any default behaviour! Rather, expert-users may use the new feature by moving the initialization of the search paths to say software environment loading. In ALICE, we do something like. ```; export ROOT_LDSYSPATH=$(LD_DEBUG=libs LD_PRELOAD=DOESNOTEXIST ls /tmp/DOESNOTEXIST 2>&1 | grep -m 1 ""system search path"" | sed 's/.*=//g' | awk '//{print $1}'). export ROOT_CPPSYSINCL=$(LC_ALL=C c++ -xc++ -E -v /dev/null 2>&1 | sed -n '/^.include/,${/^ \/.*++/{p}}' | tr '\n' ':' | tr ' ' ':'); ```. speeding up the initialization of our executables at runtime and doing less syscalls that create short-lived processes, for instance calling the compiler. The effect from this operation can be seen by counting the `execve` syscalls in a small example:. ```; strace -e execve -f root.exe -q -e ""double x=1;"" # ---> 14 calls. export ROOT_LDSYSPATH=...; export ROOT_CPPSYSINCL=...; strace -e execve -f root.exe -q -e ""double x=1;"" # ---> 6 calls; ```. This gain can accumulate to significant savings when used in a multi-process environment such as ALICE is using.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12613:489,load,loading,489,https://root.cern,https://github.com/root-project/root/pull/12613,1,['load'],['loading']
Performance,"This commit removes some functions from the RooFit data classes:. * `RooAbsData::valid()` (virtual method that was overridden in; RooDataHist but not RooDataSet). * `RooDataHist::valid(std::size_t i)` and `RooDataHist::valid()`. * `RooDataHist::cacheValidEntries()`. The `cacheValidEntries` method was originally intended to be used in; `RooAbsOptTestStatistic` to mask histogram entries out of the variable; range in case of a subrange fit. The reasons why `cacheValidEntries` and; the related `valid()` methods should be removed are:. 1. It is redundant. In a subrange fit, the `RooAbsOptTestStatistic` is; creating a clone of the dataset with the subrange only using; `RooAbsData::reduce()`. So all entries are valid by definition. 2. RooDataHist and RooDataSet have inconistent implementations. For; the RooDataHist, `valid()` tells you ""if bin `i` is considered; valid within the current range definitions of all observables""; (according to the documentation). For the RooDataSet, it always; returns `true`. This inconsistency leaves plenty of room for error. 3. The masking of out-of-range entries unnessecarily increases the; `mutable` state of the RooDataHist, which can cause trouble if one; updates the observable range but then forgets to call; `cacheValidEntries()`. 4. Even the documentation said that `RooDataHist::cacheValidEntries()`; was a ""shortcut function only for RooAbsOptTestStatistic"". Why keep; it if `RooAbsOptTestStatistic` doesn't even use it in a meaningful; way anymore?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9168:245,cache,cacheValidEntries,245,https://root.cern,https://github.com/root-project/root/pull/9168,5,['cache'],['cacheValidEntries']
Performance,"This commit reverts:; ""[cxxmodules] Disentangle Vc and VecCore"" root-project/root@fa4c3f5e722cc96e1a5a6fc0ef2d1ea331b22b19.; ""[cxxmodules] Do not perform version checks for Vc."" root-project/root@a4e70032b2a89d3f8306b0a5b328cf28326a1275.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9641:146,perform,perform,146,https://root.cern,https://github.com/root-project/root/pull/9641,1,['perform'],['perform']
Performance,"This does not completely resolve the issue of the race conditions, but simplifies the implementation of TBufferMerger a lot by doing away with the ThreadFileMerger imported from GeantV and using TFileMerger directly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/577:50,race condition,race conditions,50,https://root.cern,https://github.com/root-project/root/pull/577,1,['race condition'],['race conditions']
Performance,This does not seem to affect the startup performance of ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1350:41,perform,performance,41,https://root.cern,https://github.com/root-project/root/pull/1350,1,['perform'],['performance']
Performance,This enables to easily get build performance statistics and debug other build; bottlenecks.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/661:33,perform,performance,33,https://root.cern,https://github.com/root-project/root/pull/661,2,"['bottleneck', 'perform']","['bottlenecks', 'performance']"
Performance,"This enables us to write performance benchmarks for specific ROOT functional points. Some of the advantages:; * We can split performance tests from unit tests;; * We can configure the benchmarks in a uniform way, specifying classes of benchmarks along with their running parameters (such as iterations);; * We can calculate asymptotic complexity (Big O) of the benchmarked items;; * Multithreading is a first class citizen;; * We can fine tune optimization levels (preventing some code to be optimized away);; * Rich reporting options;; * Possibility for calculating statistical performance deviations;; * More can be found [here](https://github.com/google/benchmark). This would enable finer grained benchmarking of vectorized code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/688:25,perform,performance,25,https://root.cern,https://github.com/root-project/root/pull/688,6,"['optimiz', 'perform', 'tune']","['optimization', 'optimized', 'performance', 'tune']"
Performance,"This ensures that each thread-local TChain knows which tree contains; which global entry number without having to open all intermediate; files to check how many entries they contain, resulting in much; less contention in TTreeProcessorMT when multiple threads are loading; the right file to process. An artificial example running on 342 files of about 2MB each, with 8 cores, release build of ROOT, has the following timings:; * current master, 8 cores: ~10s; * with this fix, 8 cores: ~3.5s; * no imt (current master and with the fix): ~1s. To merge after #2115.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116:264,load,loading,264,https://root.cern,https://github.com/root-project/root/pull/2116,1,['load'],['loading']
Performance,This feature can be enabled by setting an env variable ROOT_CLING_TIMING.; It prints some information about how much time different parts of clang; take. Example use:. ```; ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C...; hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds; (TFile *) 0x37430c0; ===-------------------------------------------------------------------------===; Clang front-end time report; ===-------------------------------------------------------------------------===; Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---; 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules; 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm; 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm; 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm; 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm; 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm; 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm; 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm; 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm; 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm; 0.00,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:821,Load,Loading,821,https://root.cern,https://github.com/root-project/root/pull/2867,2,['Load'],['Loading']
Performance,"This fix a ""corruption"" of the state of TStreamerSTL when using multi-thread. Fix ROOT-10648. See related 777f6b750e657e5c70bdf07095214d59c320e985; and 274c7302ebf95d81255db6d8a02afccb387d3c9e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5319:64,multi-thread,multi-thread,64,https://root.cern,https://github.com/root-project/root/pull/5319,1,['multi-thread'],['multi-thread']
Performance,This fixes #10357 (a race condition when reading vectors with custom; allocators with TTreeProcessorMT that also affected RDataFrame). Co-authored-by: Philippe Canal <pcanal@fnal.gov>,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10373:21,race condition,race condition,21,https://root.cern,https://github.com/root-project/root/pull/10373,1,['race condition'],['race condition']
Performance,This fixes #10357 (a race condition when reading vectors with custom; allocators with TTreeProcessorMT that also affected RDataFrame). Co-authored-by: Philippe Canal <pcanal@fnal.gov>. EDIT: regression test at https://github.com/root-project/roottest/pull/866,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10361:21,race condition,race condition,21,https://root.cern,https://github.com/root-project/root/pull/10361,1,['race condition'],['race condition']
Performance,"This fixes #11907. Inadvertently a previous commit (79a669b) disabled the ability to cleanup the thread local gDirectory in other; threads when the TFile they pointed to is deleted. Also fix a set of rare race conditions:. Fix race condition between RegisterContext and gDirectory cleanup. Description of the race conditions:. (1) thread one create TFile, gDirectory now points to that file.; (2) thread two delete TFile, the destructor calls CleanTargets which has 4 distinct phase; (a) take the TFile spin lock and update all the TContext that points to the file; (b) still hold the spin lock, clean the other thread's directory.; (c) deal with the TContext that were being destructed at the same time; (d) update the local gDirectory. If between (2)(a) and (2)(b), thread (1) starts the creation of a TContext, and; is held at the start of RegisterContext after thread 2 release the spin lock,; thread 1 might awaken only after the TFile object has been deleted and thus; RegisterContext would access delete memory. If during the destruction of the TFile by thread 2, thread (1) starts the; creation of a TContext, but is suspended right before the start of RegisterContext,; when it comes back it will use deleted memory to try to acquire the spin lock.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11908:205,race condition,race conditions,205,https://root.cern,https://github.com/root-project/root/pull/11908,12,['race condition'],"['race condition', 'race conditions']"
Performance,"This fixes ROOT-10504. the script:; ```. namespace boost { namespace mpl {. // Commenting the next line make the assert failure go away; struct TTUBE {};. }}. ```; reproduce the problem with 'just' ROOT. The trigger is the auto-loading of a library that has a dictionary with has forward decl string .. which all starts with:; ```; static const char* fwdDeclCode = R""DICTFWDDCLS(; extern int __Cling_Autoloading_Map;; ....; ```. The order of parsing is (with many ellipsis):; ```; ""<<< cling interactive line includer >>>"" : line 9 : #include “standalone.C”; standalone.C : line 1 : #pragma GCC diagnostic push; standalone.C : line 2 : #pragma GCC diagnostic ignored ""-Wuninitialized"" // Inserted in Diag map; standalone.C : line 3 : #pragma GCC diagnostic ignored ""-Wsign-conversion"" // Inserted in Diag map; standalone.C : line 8 : struct TTUBE {} ; // triggers auto-loading and thus recursive parsing. ""<<< cling interactive line includer >>>"" : line 10 : parse dict fwd declare string; input_line_9 : line 2 : #pragma clang diagnostic ignored ""-Wkeyword-compat"" // Inserted in Diag map; input_line_9 : line 3 : #pragma clang diagnostic ignored ""-Wignored-attributes"" // Inserted in Diag map; input_line_9 : line 4 : #pragma clang diagnostic ignored ""-Wreturn-type-c-linkage"" // Inserted in Diag map. end of file. standalone.C : line 12 : #pragma GCC diagnostic pop // Inserted in Diag map; ```; The last line triggers the assert because when recording the state change, it records it as being from; ```; standalone.C : line 12; ""<<< cling interactive line includer >>>"" : line 9; ```; but when recording the last one, it notices that the last state change that happened, indirectly, for the file '<<< cling interactive line includer >>>' happened at line 10 (because of the pragma in input_line_9 which is 'recorded' as being included by line 10),; which makes that the state change for ```standalone.C:12``` happens 'ealier' than the last state change as far as the pseudo-file ""<<< cling interac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4882:228,load,loading,228,https://root.cern,https://github.com/root-project/root/pull/4882,4,['load'],['loading']
Performance,"This fixes a race condition in which a TTreeReader and its; TTreeReaderValues could be deleted concurrently:; Thread #1) a task ends and pushes back processing slot; Thread #2) a task starts and overwrites thread-local TTreeReaderValues; Thread #1) first task deletes TTreeReader. I have not run a stress-test on this PR yet, to check for rare crashes. Will update as soon as I do.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/837:13,race condition,race condition,13,https://root.cern,https://github.com/root-project/root/pull/837,2,"['concurren', 'race condition']","['concurrently', 'race condition']"
Performance,"This fixes issue #9939. The mechanism introduced in commits e97dc3678ae9da6628242afceca3142d6c319832; and 30fd4c79425c8be12be7af6fe1936317d1f5eec7 : TFileMerger delete directory only if we induced its creation/loading; also had the unforunate consequence leading to the deletion of the; TDirectory object when reading other objects, leading to the need; to re-read the TDirectory objects as many time as object in; the directory ... (This is triggered only for the 2nd and higher files).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10088:210,load,loading,210,https://root.cern,https://github.com/root-project/root/pull/10088,1,['load'],['loading']
Performance,This fixes test failure:; ```; 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec; Processing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*); Maybe you need to load the corresponding shared library?; CMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: 1; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8366:495,load,load,495,https://root.cern,https://github.com/root-project/root/pull/8366,2,['load'],['load']
Performance,"This fixes the following error when running (for example) tmva004_RStandardScaler.C:; ```; IncrementalExecutor::executeFunction: symbol '?AddDefinesToGraph@GraphDrawing@RDF@Internal@ROOT@@YA?AV?$shared_ptr@VGraphNode@GraphDrawing@RDF@Internal@ROOT@@@std@@V56@ABVRBookedDefines@234@ABV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@6@@Z' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_12_'!; You are probably missing the definition of class std::shared_ptr<class ROOT::Internal::RDF::GraphDrawing::GraphNode> __cdecl ROOT::Internal::RDF::GraphDrawing::AddDefinesToGraph(class std::shared_ptr<class ROOT::Internal::RDF::GraphDrawing::GraphNode>,class ROOT::Internal::RDF::RBookedDefines const &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > const &); Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6897:1141,load,load,1141,https://root.cern,https://github.com/root-project/root/pull/6897,1,['load'],['load']
Performance,"This fixes the following error:; ```; error G34C21FBE: static_assert expression is not an integral constant expression; static_assert(offsetof(TEveVectorT, fZ) == offsetof(TEveVectorT, fX) + 2*sizeof(TT),; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files (x86)\Windows Kits\10\Include\10.0.15063.0\ucrt\stddef.h:42:31: note: expanded from macro 'offsetof'; #define offsetof(s,m) ((size_t)&reinterpret_cast<char const volatile&>((((s*)0)->m))); ^; TEveProjections.h:174:71: note: in instantiation of member function 'TEveVectorT<float>::Arr' requested here; virtual Float_t* GetProjectedCenter() { return fProjectedCenter.Arr(); }; ^; TEveVector.h:55:21: note: cast that performs the conversions of a reinterpret_cast is not allowed in a constant expression; static_assert(offsetof(TEveVectorT, fZ) == offsetof(TEveVectorT, fX) + 2*sizeof(TT),; ^; C:\Program Files (x86)\Windows Kits\10\Include\10.0.15063.0\ucrt\stddef.h:42:32: note: expanded from macro 'offsetof'; #define offsetof(s,m) ((size_t)&reinterpret_cast<char const volatile&>((((s*)0)->m))); ^; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1150:709,perform,performs,709,https://root.cern,https://github.com/root-project/root/pull/1150,1,['perform'],['performs']
Performance,This fixes the following type of error with recent versions of Visual Studio (v17.6):; ```; 800: Processing C:/root-dev/git/debug/tutorials/roofit/rf614_binned_fit_problems.C...; 800: IncrementalExecutor::executeFunction: symbol '__std_find_trivial_8' unresolved while linking [cling interface function]!; 800: You are probably missing the definition of __std_find_trivial_8; 800: Maybe you need to load the corresponding shared library?; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13254:399,load,load,399,https://root.cern,https://github.com/root-project/root/pull/13254,1,['load'],['load']
Performance,This fixes the nightlies from today: http://cdash.cern.ch/testSummary.php?project=1&name=pyunittests-pyroot-import-load-libs&date=2020-04-08,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5321:115,load,load-libs,115,https://root.cern,https://github.com/root-project/root/pull/5321,1,['load'],['load-libs']
Performance,"This fixes warnings such as these:; ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; ```; # This Pull request:. ## Changes or fixes:. Move private declarations away from the public header file. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10145:1048,load,load,1048,https://root.cern,https://github.com/root-project/root/pull/10145,1,['load'],['load']
Performance,"This follow-up PR further improved the situation after #12380. In particular, the staging area of a collection cannot (apparently) be iterated -- see; https://github.com/root-project/root/blob/master/io/io/src/TGenCollectionProxy.cxx#L1573.; Other uses in the ROOT repository rely on `TVirtualCollectionProxy::At()`. However, we can instead exploit the fact that the staging area is backed by an array, i.e. the elements are contiguous in memory. Use this optimization also for `kSTLvector` collections, which was a TODO anyways. This should also provide an advantage/simplification to PR #12948. ## Checklist:; - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13197:456,optimiz,optimization,456,https://root.cern,https://github.com/root-project/root/pull/13197,1,['optimiz'],['optimization']
Performance,"This follows the C++ Core Guidelines item F.16, 'For ""in"" parameters, pass cheaply-copied types by value and others by reference to const.' `RClusterIndex` consists of two 64-bit values which for most recent platforms with 64-bit pointers is cheap to copy and better to pass in two registers instead of passing a pointer to stack memory. This in turn helps some recursive calls in RNTuple, for example `RColumn::ReadV` (at the moment of writing). In numbers, this scores a single-digit performance improvement in the usual ATLAS analysis benchmark, -5% analysis runtime on my system. The other usual benchmarks show no changes beyond fluctuations. This changes was prepared by running; ```; $ git grep -l ""RClusterIndex &"" | xargs sed -i ""s/const \(ROOT::Experimental::\)\?RClusterIndex &/\\1RClusterIndex /g""; ```; then reverting the change in `RNTupleUtil.hxx` for the copy-constructor and copy-assignment operator, and finally running clang-format.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14406:486,perform,performance,486,https://root.cern,https://github.com/root-project/root/pull/14406,1,['perform'],['performance']
Performance,"This functionality was put there to understand the potential benefits of generating optimized C++ shared libraries on-the-fly starting from the RDataFrame operations requested by the user in the application. With the benchmarks done so far, we have never seen a real reason to switch to this behaviour from the traditional PyROOT based approach. Also, it needed extra care when dealing with some special operations that cross the Python-C++ boundary (e.g. `AsNumpy`). We can remove it for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13232:84,optimiz,optimized,84,https://root.cern,https://github.com/root-project/root/pull/13232,1,['optimiz'],['optimized']
Performance,"This implements a proof of concept of a new histogram auto binning mode designed to produced mergeable histograms when run in multi-threaded / multi-process mode. The algorithm chooses powers of 2 to chose the boundaries, ranges and number of bins. The idea is described in the following document: https://docs.google.com/document/d/1TEntRbVnRzZRLio8JhND51FTNqqTAvu0ngnhLGneahg/edit?usp=sharing. A method to adjust the final looking of the histogram is also included in the patch. Two multicore tutorials illustrate the usage: mt303_fillHistosAutobin.C and mt301_fillHistos.C .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1227:126,multi-thread,multi-threaded,126,https://root.cern,https://github.com/root-project/root/pull/1227,1,['multi-thread'],['multi-threaded']
Performance,"This improves performance for certain cases when creating non-JITted actions from the interpreter, for example when executing a macro that calls `Histo1D<int>()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10228:14,perform,performance,14,https://root.cern,https://github.com/root-project/root/pull/10228,1,['perform'],['performance']
Performance,"This improves performance for certain cases when creating non-JITted actions from the interpreter, for example when executing a macro that calls `Histo1D<int>()`. (cherry picked from commit 48189c862fa4e2cdd9c859d3c5a72090cb11fb1e)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10237:14,perform,performance,14,https://root.cern,https://github.com/root-project/root/pull/10237,1,['perform'],['performance']
Performance,"This improves thread safety in RooFit, as inspired by a recent forum; post where someone wanted to do multiple fits in parallel. It was checked that this has no visible impact on performance. Also, a small bugfix and general code improvements in separate commits.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16385:179,perform,performance,179,https://root.cern,https://github.com/root-project/root/pull/16385,1,['perform'],['performance']
Performance,"This in turn fixes a problem with TTreeProcessorMT and multi-thread; RDataFrame ""forgetting"" about the TTreeIndexes associated with; input friend trees. It fixes https://github.com/root-project/root/issues/12260,; ""[DF] Bogus data read from indexed friend trees in multi-thread runs"". A test is added for this case as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12269:55,multi-thread,multi-thread,55,https://root.cern,https://github.com/root-project/root/pull/12269,2,['multi-thread'],['multi-thread']
Performance,"This initialization should be unnecessary, but avoids a warning on some compiler platforms about potentially uninitialized use of the variable. Most other compiler platforms should optimize away the assignment. Fixes an issue reported by @pcanal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1202:181,optimiz,optimize,181,https://root.cern,https://github.com/root-project/root/pull/1202,1,['optimiz'],['optimize']
Performance,"This introduces a `SetAutoSave()` function to `TBufferMerger` that lets users choose how often data is merged into the output file. This avoid excessive writing of TTree headers, which are compressed and causes the output thread to do too much work if merges happen at every buffer read from the queue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1052:296,queue,queue,296,https://root.cern,https://github.com/root-project/root/pull/1052,1,['queue'],['queue']
Performance,"This is ROOT6 support for [CMA-ES](https://www.lri.fr/~hansen/cmaesintro.html), a state-of-the-art black box stochastic minimizer. The implementation uses [libcmaes](https://github.com/beniz/libcmaes), a novel high performance C++11 (with Python bindings) library for blackbox optimization. The new minimizer yields better results than Minuit2 for most problems, though for an higher computation cost on average. See below for links to relevant benchmarks backing up these claims. This implementation is on behalf of [Inria Saclay Research group TAO](http://www.inria.fr/en/teams/tao), [Laboratoire de l'Accelerateur Lineaire, group AppStat](http://appstat.lal.in2p3.fr/) and [University Paris-Sud LRI](https://www.lri.fr/index_en.php?lang=EN). ===Features===; - Seamless replacement for Minuit, Minuit2 and Fumili; - Seamless support for RooFit; - Relying on libcmaes allows for best performances known for CMA-ES + access to several flavors of the original algorithm, yielding best results with a trade off for computational cost, as needed; - Compilation support for both Autotools and CMake; - Included tutorial files, tests, and a special benchmark vs Minuit2. ===Documentation===; - Main documentation for building and using the new minimizer is here: https://github.com/beniz/libcmaes/wiki/using-CMA-ES-in-CERN's-ROOT. ===Performances===; - On-par with Minuit2 on low dimensional problems (< 10-D), consistently beats Minuit2 in higher dimension, leading to better fits. These claims are backed by two benchmarks and two experiments on real world data (we are still waiting from some results from usage at CERN); - Benchmark CMA-ES vs Minuit on [BBOB](http://coco.gforge.inria.fr/doku.php?id=bbob-2013) available here: https://drive.google.com/open?id=0B3J1vWYhta9ibktXc2JLRUExUTA&authuser=0; - In-ROOT benchmark vs Minuit2 on low-dimensional problems, results available here: https://drive.google.com/open?id=0B3J1vWYhta9iTmR0T0hnN21lSGM&authuser=0; - Beats out Minuit2 up to 98% of the time o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40:215,perform,performance,215,https://root.cern,https://github.com/root-project/root/pull/40,3,"['optimiz', 'perform']","['optimization', 'performance', 'performances']"
Performance,"This is a backport of #2482 . This is an additional fix for cms-sw/cmssw#22594. If one of the class associated with a TBranchElement has a base class and/or sub-object class that; has a rule that requires a cache (onfileObject) object to stage the original data but does not; have branch in the TTree that also neeed the same cache object, we need to associate a cache; object with the StreamerInfoAction sequence that needs it (associated with a higher level branch); and give it ownership of this cache object)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2488:207,cache,cache,207,https://root.cern,https://github.com/root-project/root/pull/2488,4,['cache'],['cache']
Performance,"This is a backport of some RooFit PRs that were recently merged to master to v6-28-00-patches. Related to https://github.com/root-project/root/issues/12319. Link to the previous backport PR:; https://github.com/root-project/root/pull/13044. After merging this PR, the following RooFit commits in ROOT `master` (as of 6276954184) are the ones that are not in `v6-28-00-patches` (as of `8c19761`). ```txt; 9b93dbb7d2 [RF] Apply clang-tidy `performance-faster-string-find`; 04fbc4efb3 [RF] Don't have RooFitCuda as dependency for RooFitCore; cf653869f7 [RF] Don't bar xroofit behind `root7` anymore; e5a67bc647 [RF] More type safety and better memory management with CUDA interface; bbeb520a1a [RF] Implement `RooPower` and `RooExpPoly` in RooBatchCompute; 529ba82432 [RF] RAII management of CUDA events and streams; cc3ee9200a [RF] Only allow automatic memory management for CUDA device arrays; 77299a2c34 [RF] Reduce public headers of `roobatchcompute`; 8b0a768f0c [RF] Refactor CUDA code in RooFit; 853e93a23a [RF] Add new `RooSpline` class contributed by Ruggero Turra; a5ebdc7291 [RF] Add documentation to `RooB*Decay` constructors; e5b7ba0d35 [RF] Make plotting of histograms work for all orders of magnitude; 95816f07c5 [RF] Modernize RooStepFunction and RooParametricStepFunction; 49b7c88181 [RF] Apply clang-tidy `readability-redundant-string-cstr`; bb1b313d7a [RF] Apply clang-tidy `modernize-use-bool-literals`; 52f67f84ec [RF] Apply clang-tidy `modernize-deprecated-headers`; 0fdb1e98ea [RF] Apply clang-tidy `readability-container-size-empty`; e7dfbfb1df [RF] Apply clang-format to RooGlobalFunc.cxx; 8462bb48e9 [RF] Apply clang-tidy modernize-use-nullptr; 4999c486de [RF] Use `RooFit::OwningPtr<T>` for RooAbsData member functions; 742d4018ad [RF] Don't store reference to `RooDataSet` in RooNDKeysPdf; 9b98ed181c [RF] Replace ReooRealAnalytic with `createIntegral` plus RooRealBinding; b3acd81280 [RF] Remove `RooIntegratorBinding` from public interface; e11a5e4d8c [RF] Improve `RooNumInt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:438,perform,performance-faster-string-find,438,https://root.cern,https://github.com/root-project/root/pull/13295,1,['perform'],['performance-faster-string-find']
Performance,"This is a cherry pick of the `loader.py` in cppyy-backend version clingwrapper-1.7.2, which has the new treatment of `CLING_STANDARD_PCH` and its setting to `'none'` to prevent the PCH check by Cppyy. It should fix the new test failures that appeared last night in the experimental PyROOT builds. https://epsft-jenkins.cern.ch/job/root-exp-pyroot/76/. A complete update will come for the three packages of Cppyy once the functionality of this PR:; https://github.com/root-project/root/pull/3579; is merged into `TCling`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3581:30,load,loader,30,https://root.cern,https://github.com/root-project/root/pull/3581,1,['load'],['loader']
Performance,"This is a first stab to an optimized DF workflow generator in the; DistRDF workers. The optimization consists in generating the; C++ code of the workflow, compile it with ACLiC and execute it.; A compiled workflow might be faster than its purely jitted version. The optimized mode coexists with the old (jitted) mode, which is; the default. To enable the optimized mode the following flag; can be used:; ```python; ROOT.RDF.Experimental.Distributed.optimized = True; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8867:27,optimiz,optimized,27,https://root.cern,https://github.com/root-project/root/pull/8867,5,['optimiz'],"['optimization', 'optimized']"
Performance,"This is a fix for ROOT-7121. If a cache is updated in RooVectorDataStore and the cache has more than 1000 elements to be updated, an array on the stack will overrun and smash the stack. roofit will therefore crash. Solution: RooVectorDataStore uses a std::vector instead of an array[1000] to hold the pointers to the cache elements. Comments on the speed of the fix:; Using a std::vector placed on the stack (mimicking the original implementation), the fits would get slower. Therefore I added the vector as a member of RooVectorDataStore. This saves the time of constantly having to reallocate the vector. I tested with my (private) workspace: The crash is fixed. Unfortunately, I cannot provide this workspace.; To give a more meaningful test for you guys, I ran all the roofit/roostats tutorials and diffed the logs to check if roofit gives the same results. The diffs are attached. Apart from out-of-order execution and time measurements, there is no difference.; From the time measurements you can also see that the fixed version is not slower. [tutorials_roofit.diff.txt](https://github.com/root-mirror/root/files/56528/tutorials_roofit.diff.txt); [tutorials_roostats.diff.txt](https://github.com/root-mirror/root/files/56529/tutorials_roostats.diff.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/115:34,cache,cache,34,https://root.cern,https://github.com/root-project/root/pull/115,3,['cache'],['cache']
Performance,"This is a fix for ROOT-7121. If a cache is updated in RooVectorDataStore and the cache has more than 1000 elements to be updated, an array on the stack will overrun and smash the stack. roofit will therefore crash. Solution: RooVectorDataStore uses a std::vector instead of an array[1000] to hold the pointers to the cache elements. Comments on the speed of the fix:; Using a std::vector placed on the stack (mimicking the original implementation), the fits would get slower. Therefore I added the vector as a member of RooVectorDataStore. This saves the time of constantly having to reallocate the vector. I tested with my (private) workspace: The crash is fixed. Unfortunately, I cannot provide this workspace.; To give a more meaningful test for you guys, I ran all the roofit/roostats tutorials and diffed the logs to check if roofit gives the same results. The diffs are attached. Apart from out-of-order execution and time measurements, there is no difference.; From the time measurements you can also see that the fixed version is not slower. [tutorials_roofit.diff.txt](https://github.com/root-mirror/root/files/56546/tutorials_roofit.diff.txt); [tutorials_roostats.diff.txt](https://github.com/root-mirror/root/files/56547/tutorials_roostats.diff.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/116:34,cache,cache,34,https://root.cern,https://github.com/root-project/root/pull/116,3,['cache'],['cache']
Performance,"This is a follow-up to 15a14ae6b4c. The `FindCUDA` module is deprecated since CMake 3.10 and the mentioned; commit therefore removed the usage of it. This was fine for RooFit, but TMVA not only compiles sources with the; NVidia compiler but also uses the CUDA toolkit in regular C++. This was fine for RooFit, but TMVA not only compiles sources with the; NVidia compiler but also uses the CUDA toolkit in regular C++. Therefore, that commit broke the TMVA GPU features. Unfortunately, I didn't notice before, because of this check; in `cmake/modules/SearchInstalledSoftware.cmake`:; ```cmake; if(tmva-gpu AND NOT CUDA_FOUND); set(tmva-gpu OFF CACHE BOOL ""Disabled because cuda not found"" FORCE); endif(); ```. The `CUDA_FOUND` variable is not set anymore now that `FindCUDA` is not; used. That means that `tmva-gpu` was silently disabled, and not building; successfully (which I had wrongly concluded because of the absence of; errors). This check needs to be replaced with; `if( NOT CMAKE_CUDA_COMPILER)`. As recommended in the CMake docs, this should be done with the; `FindCUDAToolkit` module, which is what this PR suggests. The `CUDA_ADD_EXECUTABLE` command is also replaced with the regular; `add_executable`, because `CUDA_ADD_EXECUTABLE` was also deprecated with; `FindCUDA`. Furthermore, all `cuda AND tmva-gpu` checks were replaced with only; `tmva-gpu`, because `tmva-gpu` implies `cuda`. Finally, `stressTMVA` is moved to the `tmva` subdirectory so that it is built in the same cmake project as ROOT; itself, so that we can query the `tmva-gpu` and `tmva-cpu` flags. See also:. * https://cmake.org/cmake/help/latest/module/FindCUDA.html; * https://cmake.org/cmake/help/latest/module/FindCUDAToolkit.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13991:643,CACHE,CACHE,643,https://root.cern,https://github.com/root-project/root/pull/13991,1,['CACHE'],['CACHE']
Performance,"This is a followup to commit 47c250898f3. The new algorithm to figure out the servers of a RooRealIntegral could get very expensive for large computation graphs, as seen with the ATLAS Higgs combinaiton. The problem was that there was a loop over an arguments clients for each argument in the computation graph. In this commit, loop is replaced by another loop over the computation graph in which one iterates only over the servers of the arguments that depend on the integration variables. I think this logic is even more intuitive to understand as well. I learned also that iterating over clients is never a good idea, because while the number of servers is well defined, there can be arbitrary many clients, making the performance very unpredictable. It was verified with flamegraphs that the performance of the likelihood creation for the ATLAS Higgs combinaiton model is now again identical to the state before commit 47c250898f3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11619:722,perform,performance,722,https://root.cern,https://github.com/root-project/root/pull/11619,2,['perform'],['performance']
Performance,"This is a low-level function to reset the buffer for which this RVec is acting as a view. Before this commit, the only way to reset the pointed-to address of a non-owning RVec was to construct a new RVec and swap it with the old one, which is much more expensive than the two assignments ResetView performs. It is immediately useful for RDF bulk processing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12671:298,perform,performs,298,https://root.cern,https://github.com/root-project/root/pull/12671,1,['perform'],['performs']
Performance,"This is a partial, but long-overdue modernisation of RooDataHist. Instead of accessing members in array or vectors, it was using the convoluted logic of:; - I need the event weight of event `i`.; - So I have to load the coordinates(!) of `i` by calling `get(i)`.; - This has the side effect of writing the weight that belongs to `i` into the mutable member `_curWgt` or similar.; - To retrieve the weight, I can now call `weight()`. This obviously creates problems and might be slow, so the overwriting of such internal buffers was removed to a large extent. Many things can now be retrieved by index (`weight(i)` for example), and many functions don't have side effects, any more. Further:; - Remove lots of unnecessary mutable members from RooDataHist/RooVectorDataStore.; - Remove side effects from many of RooDataHist's functions.; - Implement getters that don't rely on setting the active bin.; ""h.get(binNumber); h.weight() --> h.weight(binNumber)"" etc.; - Remove useless members such as _curWeight. Those are replaced by; a lookup in the weight vectors.; - Implement retrieval of bin coordinates and weights in batches.; - Sort functions that rely on the presence of side effects into a; deprecated section for doxygen.; - Fix docstrings of many functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6718:211,load,load,211,https://root.cern,https://github.com/root-project/root/pull/6718,1,['load'],['load']
Performance,This is a performance optimisation.; We do not need a rw lock in this case because a write lock is needed; both when a slot is taken out of the stack and when it's put back.; The header of the class has also been made slimmer thanks to the usage; of a fwd declaration.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3189:10,perform,performance,10,https://root.cern,https://github.com/root-project/root/pull/3189,1,['perform'],['performance']
Performance,"This is a pull request for the development of PyTorch Interface in TMVA leveraging the PyMVA module. Feel free to comment and share feedback. I'm also maintaining a [blog](https://anirudhdagar.github.io/gsoc/) for updating my progress and sharing some insights about my project. # Progress. ## Header; - [x] Add Initial Structure for MethodPyTorch header file. ## Class MethodPyTorch; - [x] Implement the basic outline of the MethodPyTorch Class.; - [x] Implement the DeclareOptions methods.; - [x] Implement ProcessOptions methods.; - [x] Implement SetupTorchModel method.; - [x] Implement train methods. (Done); - [x] Implement simple basic structure for training; - [x] Add ability to load code from users; - [x] Convert numpy based dataloaders in TMVA to PyTorch dataloaders; - [x] Use default (optional optimizer SGD); - [x] Add savebest model; - [x] Add scheduler; - [x] Implement Validation; - [x] Add model prediction function loading ability; - [x] Implement user code ability; - [x] Implement helper function. ## Tests; - [x] Add testPyTorchClassification.C; - [x] Add generatePyTorchModelClassification.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchMulticlass.C; - [x] Add generatePyTorchModelMulticlass.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added.; - [x] Add testPyTorchRegression.C; - [x] Add generatePyTorchModelRegression.py; - [x] Load, Train model and test all the parameter arguments; - [x] Verify response after model prediction function is added. ## GPU; - [x] Make GPU Compatible (Require GPU for testing). ## Tutorials; These are implemented in #6273. ## Documentation; - [x] Improve docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5757:688,load,load,688,https://root.cern,https://github.com/root-project/root/pull/5757,6,"['Load', 'load', 'optimiz']","['Load', 'load', 'loading', 'optimizer']"
Performance,"This is a refactored version of part of PR #709. The figure attached below shows an example of the difference in wait time, as measured by VTune for parallel filling of a TTree with random numbers. The number of waits on `LoadClassInfo()` is reduced from 451 to just 8 (one wait per thread). ![screenshot](https://user-images.githubusercontent.com/249404/27913555-cbd6b592-6260-11e7-87af-7a11f376b71a.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/747:222,Load,LoadClassInfo,222,https://root.cern,https://github.com/root-project/root/pull/747,1,['Load'],['LoadClassInfo']
Performance,"This is a simple fix to reduce imbalance in multi-thread event-loops; with no data-source: previously we spawned one task per worker thread. Expected to break `test_emptysource`, which is fixed by [PR 96](https://github.com/root-project/roottest/pull/96) in roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1104:44,multi-thread,multi-thread,44,https://root.cern,https://github.com/root-project/root/pull/1104,1,['multi-thread'],['multi-thread']
Performance,"This is a simplification of Snapshot's logic itself and a small performance optimization as we don't invoke the interpreter separately for each Snapshot call but we now take advantage of the same machinery that's already used by all other actions (and that merges all code to be jitted together). This PR fixes the Snapshot side of [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790), ""Lazy jitting of Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6585:64,perform,performance,64,https://root.cern,https://github.com/root-project/root/pull/6585,3,"['Cache', 'optimiz', 'perform']","['Cache', 'optimization', 'performance']"
Performance,"This is a updated pull request from #59 The same experiments have been run and performance results are shown here:. | Algorithm | compression(write) | decompression(read) | Compressed File Size |; | --- | --- | --- | --- |; | zlib | 11.74 MB/s | 131.06 MB/s | 181 MB |; | lzma | 0.86 MB/s | 17.36 MB/s | 157 MB |; | lz4 | 5.22 MB/s | 143.81 MB/s | 221 MB |. The following performance is from the root file @pcanal's ticket (https://root.cern.ch/files/CMS_7250E9A5-682D-DF11-8701-002618943934.root). The file is 1.9 GB large, and I tried to decompressed it and it seems its original size is 6.4 GB. The following compression/decompression speeds are calculated by dividing 6.4 GB by the time each test run. @bbockelm , we could discuss implementation details of my tests tomorrow. . | Algorithm | compression(write) | decompression(read) | Compressed File Size |; | --- | --- | --- | --- |; | zlib | 15.83 MB/s | 63.23 MB/s | 1.6 GB |; | lzma | 1.28 MB/s | 22.62 MB/s | 1.2 GB |; | lz4 | 8.32 MB/s | 66.53 MB/s | 1.8 GB |",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/81:79,perform,performance,79,https://root.cern,https://github.com/root-project/root/pull/81,2,['perform'],['performance']
Performance,"This is a very early draft for caching `RNTuple`s. The goal is to save only the portions (clusters) of the original RNTuple that are actually read during an analysis to a new RNTuple . In this draft it is shown an attempt at exercising the part where the compressed clusters are saved during the IO pipeline already implemented in RClusterPool. To this end, an `RPageSink` is created at the beginning of the pipeline with the same header as the RNTuple being read. After the compressed cluster is retrieved in memory, its columns and pages are traversed and saved to the cached RNTuple. For now this feature can be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8329:571,cache,cached,571,https://root.cern,https://github.com/root-project/root/pull/8329,1,['cache'],['cached']
Performance,"This is an additional fix for cms-sw/cmssw#22594. If one of the class associated with a TBranchElement has a base class and/or sub-object class that; has a rule that requires a cache (onfileObject) object to stage the original data *but* does not; have branch in the TTree that also neeed the same cache object, we need to associate a cache; object with the StreamerInfoAction sequence that needs it (associated with a higher level branch); and give it ownership of this cache object)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2482:177,cache,cache,177,https://root.cern,https://github.com/root-project/root/pull/2482,4,['cache'],['cache']
Performance,"This is an extension allowing the VMC package to run a simulation; with multiple different engines at a time. Tracks can be transferred; among engines during a simulation run based on conditions specified by; the user. Important notes on the extensions:; 1) This extension preserves backward-compatibility in the sense that; user code relying on the former version of VMC is still running; with the extended version. Was tested with GEANT3_VMC@v2-6 and; GEANT4_VMC@v3-6-p1.; 2) A shared simulation is only possible when TGeo is used for geometry; construction and navigation.; 3) A TMCManager singleton object is responsible for handling multiple; engines and can be obtained on request calling; TVirtualMCApplication::RequestManager() during construction of the; user application class.; 4) The introduced TMCParticleStatus objects hold additional; information to keep track of properties when a track is transferred; between engines.; 5) When a track is interrupted in one engine to be transferred to; another, the geometry state is cached in the form of a; TGeoBranchArray object. It will be used to initialize the navigator; when this track is picked up for further transport in the next; engine. This is especially useful/required when a track is; transferred at a volume boundary in order to be picked up in the; entered volume and not in the one just left. This is a main reason; why geometry management is forced to be done via TGeo. A more comprehensive introduction concerning the usage and; implementation in the user code can be found in the; montecarlo/vmc/README.md. Further note:; This commit also applies the clang format to the modified and new; files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3513:1035,cache,cached,1035,https://root.cern,https://github.com/root-project/root/pull/3513,1,['cache'],['cached']
Performance,"This is an overhaul of the optimize baskets algorithm, primarily done by Ilija Vukotic and extended by David Smith. Goal of this algorithm is to minimize overall memory size when writing and number of baskets in a cluster. Since this work predates ROOT moving to GitHub, it appears the patches primarily are floating around in various people's inbox. This is my attempt to ""capture"" the knowledge and ideas, even if we don't decide to go this direction. @pcanal @smithdh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/657:27,optimiz,optimize,27,https://root.cern,https://github.com/root-project/root/pull/657,1,['optimiz'],['optimize']
Performance,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13953:262,perform,performance-for-range-copy,262,https://root.cern,https://github.com/root-project/root/pull/13953,4,['perform'],"['performance-for-range-copy', 'performance-unnecessary-copy-initialization']"
Performance,"This is applying most of the suggestions from the CMSSW clang-tidy configuration:; https://github.com/cms-sw/cmssw/blob/master/.clang-tidy. Two checks are excluded though, because they can make wrong suggestions about replacing copies with const references:. * `performance-for-range-copy`. * `performance-unnecessary-copy-initialization`. **Note:** the trivial `nullptr` changes are in a separate commit for easier reviewing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13988:262,perform,performance-for-range-copy,262,https://root.cern,https://github.com/root-project/root/pull/13988,2,['perform'],"['performance-for-range-copy', 'performance-unnecessary-copy-initialization']"
Performance,This is done to reduce the feature divergence between PyROOT and C++ ROOT. Also improves code performance and robustness.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16707:94,perform,performance,94,https://root.cern,https://github.com/root-project/root/pull/16707,1,['perform'],['performance']
Performance,"This is first step to make Web GUI code running in multiple threads.; There are many threads introduced and many communication patterns are supported. 1. Provide special thread, which handle all http requests of THttpServer.; This thread serves JavaScript/HTML files and redirects websocket requests to recipients.; Try to reduce access to global ROOT structures from that thread - only list of classes for the moment is used. Potentially many THttpServer instances with such thread can run fully independent. 2. Let run websocket handlers (THttpWSHandler) in separate threads. ; Requires correct locking of shared resources. 3. Support special threads for sending data via websocket from server to clients. ; When many clients are connected to the same TWebWindow, slowest client can ; break down performance. With use of such specialized thread problem can be solved. 4. Implement all necessary locks and protections to use many TWebWindows in different user threads. ; Provide TWebWindow::Run(double) method, which allows to run window code in any user thread. . Introduce tutorials/v7/draw_mt.cxx macro, which shows how three RCanvas instances can run; in three independent thread and regularly updated. Of course, default behavior should work - all functionality runs in main thread. ; Means THttpServer requests processing, websockets processing, RCanvas handling - ; everything runs in main application thread. Simple, but not scalable. This is very preliminary code , I still plan to change/extend some API.; Any comments comments are welcome",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2487:798,perform,performance,798,https://root.cern,https://github.com/root-project/root/pull/2487,2,"['perform', 'scalab']","['performance', 'scalable']"
Performance,This is import of calorimeters from original EVE to server-client model of event display.; Macro tutorials/eve7/calorimeters.C is an example of 3D and projected visualization.; ![calorimeters.C](http://xrd-cache-1.t2.ucsd.edu/alja/calo.png),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5978:206,cache,cache-,206,https://root.cern,https://github.com/root-project/root/pull/5978,1,['cache'],['cache-']
Performance,"This is related to the fix of includeInLinkdef. Load; ""./module.modulemap"" if it exists. User can cd to different directory; and LoadModule loads the new modulemap.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2375:48,Load,Load,48,https://root.cern,https://github.com/root-project/root/pull/2375,3,"['Load', 'load']","['Load', 'LoadModule', 'loads']"
Performance,"This is the current state of my experiment towards enabling finer-grained axis binning comparisons that ""axis configuration is exactly the same"" or ""axis configuration is different"". Once finished, this should enable switching between several histogram merging logics, including... - The current implementation, which is maximally fast but a bit too limited (it doesn't even allow the target histogram to grow to span the source histogram range if it is able to).; * Note that said implementation did already gain some superpowers in the current state of this PR, such as ability to merge when axis bin borders are _slightly_ different.; - More permissive implementations, which trade speed for generality. Here's what should IMO be added before this PR can be considered ready to merge:. - [x] Tests, lots of them. There's some very tricky code in there, even if it got clearer over time...; - [ ] Performance optimizations to reduce the impact of comparing axis binning, including...; * [ ] Not comparing every axis bin border when the axes are equidistant; * [ ] Reducing reliance on virtual function calls, especially in loops; * [ ] Possibly early algorithm exit as soon as complete conclusions are reached (but this will only benefit worst-case scenarios where axis binnings are very different, so...); - [ ] Demonstration of a more permissive histogram merging algorithm, to cross-check that the current binning comparison info adequately enables writing one as intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5725:899,Perform,Performance,899,https://root.cern,https://github.com/root-project/root/pull/5725,2,"['Perform', 'optimiz']","['Performance', 'optimizations']"
Performance,"This is to avoid crashes on 32-bit platforms. It's not necessary to use; 64-bit integers anyway, because the return types of the caching codes; were `Int_t` anyway (now just int). And since caches are never part of; IO anyway, it's not important to be platform independent. For the UniqueId, using `unsigned long` is fine too, because the unique; ID is transient and therefore doesn't need to be platform independent.; Any fixed-size choice here caused either problems on either 32- or; 64-bit platforms. This fixes crashes in the nightly builds on Debian 10 32-bit, which was verified on the Debian 10 build node.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10349:190,cache,caches,190,https://root.cern,https://github.com/root-project/root/pull/10349,1,['cache'],['caches']
Performance,"This is useful for external users to specify a writable modules cache path where the global module index can be generated on demand. This patch should resolve an issue in cmssw where the default module cache path (ROOTSYS/lib) is in a non-writable area in cvmfs. cc: @oshadura, @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5100:64,cache,cache,64,https://root.cern,https://github.com/root-project/root/pull/5100,2,['cache'],['cache']
Performance,"This is work done by Alex Saperstein, and ANL SULI who worked with me. While working on TTreeCache learning, our Summer Intern (Alex Saperstein) observed that for simple TTrees, the basket size optimization isn’t optimal for two reasons: 1) rounding down to 512 byte blocks 2) neglecting to accommodate for ROOT offsets stored in the baskets. As a result, e.g. with simple (constant size) float array branches the basket size is to small resulting in two baskets per auto-flush. The change would be pretty straight-forward: tree/tree/src/TTree.cxx. Line; -6583 newBsize = newBsize - newBsize%512;. Should become:; +6583 if (pass) { // only on the second pass so that it doesn't interfere with scaling; +6583 Int_t nevbuf = branch->GetBasket(0)->GetNevBuf();; +6583 newBsize = newBsize + (nevbuf \* sizeof(Int_t) \* 2); // make room for meta data; +6583 newBsize = newBsize - newBsize%512 + 512; // rounds up; +6583 }. Tests on simple data show that with this the baskets end up more appropriately sized so that all the auto-flush data fits.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/238:194,optimiz,optimization,194,https://root.cern,https://github.com/root-project/root/pull/238,1,['optimiz'],['optimization']
Performance,"This makes all functions end up in the same text section, which is important for TCling on macOS to catch exceptions from constructors: Stack unwinding requires information about program addresses to find out which objects to destroy and what code should be called to handle the exception. These addresses are relocated against a single __text section when loading the produced MachO binary, which breaks if the call sites of global constructors end up in a separate init section. Fixes ROOT-10703 and ROOT-10962. (cherry picked from commit 028fcca0fa76111877751df876cf13968be602f9)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12069:357,load,loading,357,https://root.cern,https://github.com/root-project/root/pull/12069,1,['load'],['loading']
Performance,"This makes all functions end up in the same text section, which is important for TCling on macOS to catch exceptions from constructors: Stack unwinding requires information about program addresses to find out which objects to destroy and what code should be called to handle the exception. These addresses are relocated against a single __text section when loading the produced MachO binary, which breaks if the call sites of global constructors end up in a separate init section. Fixes ROOT-10703 and ROOT-10962. (cherry picked from commit 028fcca0fa76111877751df876cf13968be602f9). Backport of PR https://github.com/root-project/root/pull/12069",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12105:357,load,loading,357,https://root.cern,https://github.com/root-project/root/pull/12105,1,['load'],['loading']
Performance,"This makes all functions end up in the same text section, which is important for `TCling` on macOS to catch exceptions from constructors: Stack unwinding requires information about program addresses to find out which objects to destroy and what code should be called to handle the exception. These addresses are relocated against a single `__text` section when loading the produced MachO binary, which breaks if the call sites of global constructors end up in a separate init section. Fixes ROOT-10703 and ROOT-10962",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7100:361,load,loading,361,https://root.cern,https://github.com/root-project/root/pull/7100,1,['load'],['loading']
Performance,"This makes it possible to create a pre-downloaded cache before running the tests, so that it is possible to run the tests in an environment without network access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/404:50,cache,cache,50,https://root.cern,https://github.com/root-project/root/pull/404,1,['cache'],['cache']
Performance,"This memory leak is demonstrated with the following ROOT macro:. ```; {; {; RooExpensiveObjectCache::instance(); // force the standard instance construction (otherwise created in factory method call); cout << ""make ws"" << endl;; RooWorkspace w(""combined"", ""combined"");; cout << ""factory method:"" << endl;; w.factory(""RooGaussian::gaus(x[-5,5],mean[0,-5,5],sigma[1,0.1,3])"");; w.writeToFile(""/tmp/test.root"");; cout << ""reading back"" << endl;; {; TFile f(""/tmp/test.root"");; RooWorkspace *w2 = f.Get<RooWorkspace>(""combined"");; std::cout << ""deleting w2"" << endl;; delete w2;; }; std::cout << ""deleting w"" << endl;; }; }; ```; along with a modification to `RooExpensiveObjectCache` to printout when an instance is being constructed or destructed. Before this fix the above then prints out (I annotated the output a bit):. ```; Processing test.C...; Created 0x12cb8cc68 <--- this is the static instance; make ws; Created 0x7ffee2baaab0 <--- the workspace's cache; factory method:; reading back; Created 0x7fcbc7b39008 <--- the read-back workspace's cache; Created 0x7fcbd45a0b70 <--- memory leaking cache; deleting w2; Destroyed 0x7fcbc7b39008; deleting w; Destroyed 0x7ffee2baaab0; root [1] .q; Destroyed 0x12cb8cc68; ```. After the fix caches are created and destroyed as expected:. ```; Processing test.C...; Created 0x1290a5c68; make ws; Created 0x7ffee623eab0; factory method:; reading back; Created 0x7f9bd8437408; deleting w2; Destroyed 0x7f9bd8437408; deleting w; Destroyed 0x7ffee623eab0; root [1] .q; Destroyed 0x1290a5c68; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12024:955,cache,cache,955,https://root.cern,https://github.com/root-project/root/pull/12024,4,['cache'],"['cache', 'caches']"
Performance,This new release includes performance and stability improvements. See more at: https://github.com/vgvassilev/clad/releases/tag/v1.3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14654:26,perform,performance,26,https://root.cern,https://github.com/root-project/root/pull/14654,1,['perform'],['performance']
Performance,This optimizes the ROOT startup for C++ Modules by avoiding deserialization of redundant declarations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2998:5,optimiz,optimizes,5,https://root.cern,https://github.com/root-project/root/pull/2998,1,['optimiz'],['optimizes']
Performance,This patch actually loads the modulemap as previously it wrongly detected; it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3695:20,load,loads,20,https://root.cern,https://github.com/root-project/root/pull/3695,2,['load'],"['loaded', 'loads']"
Performance,"This patch already landed in https://reviews.llvm.org/rL336660 in Clang. This was biting us to enable runtime modules in CMSSW. Detailed desciption:; https://bugs.llvm.org/show_bug.cgi?id=37878. lookupModule was falling back to loadSubdirectoryModuleMaps when it couldn't; find ModuleName in (proper) search paths. This was causing iteration over all; files in the search path subdirectories for example ""/usr/include/foobar"" in; bugzilla case. Users don't expect Clang to load modulemaps in subdirectories implicitly, and; also the disk access is not cheap. if (AllowExtraModuleMapSearch) true with ObjC with @import ModuleName.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2307:228,load,loadSubdirectoryModuleMaps,228,https://root.cern,https://github.com/root-project/root/pull/2307,2,['load'],"['load', 'loadSubdirectoryModuleMaps']"
Performance,This patch also reports the branch name when a class cannot be loaded by the importer to make debugging easier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12019:63,load,loaded,63,https://root.cern,https://github.com/root-project/root/pull/12019,1,['load'],['loaded']
Performance,"This patch consolidates the symbol resolution facilities throughout TCling into; a new singleton class Dyld part of the cling's DynamicLibraryManager. The new dyld is responsible for:; * Symlink resolution -- it implements a memory efficient representation of; the full path to shared objects allowing search at constant time O(1). This; also fixes issues when resolving symbols from OSX where the system libraries; contain multiple levels of symlinks.; * Bloom filter optimization -- it uses a stohastic data structure which gives; a definitive answer if a symbol is not in the set. The implementation checks; the .gnu.hash section in ELF which is the GNU implementation of a bloom; filter and uses it. If the symbol is not in the bloom filter, the; implementation builds its own and uses it. The measured performance of the; bloom filter is 30% speed up for 2mb more memory. The custom bloom filter on; top of the .gnu.hash filter gives 1-2% better performance.; The advantage for the custom bloom filter is that it works on all; implementations which do not support .gnu.hash (windows and osx). It is also; customizable if we want to further reduce the false positive rates; (currently at p=2%).; * Hash table optimization -- we build a hash table which contains all symbols; for a given library. This allows us to avoid the fallback symbol iteration; if multiple symbols from the same library are requested. The hash table; optimization targets to optimize the case where the bloom filter tells us; the symbol is *maybe* in the library. Patch by Alexander Penev (@alexander-penev) and me!. Performance Report; ===. |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|22,82|26,89|20,08|; |osx 10.14| roottest-cling| 589,67|452,97|307,34|; |osx 10.14| roottest-python| 377,69|475,78|311,5|; |osx 10.14| roottest-root-hist| 60,59|90,98|49,65|; |osx 10.14| roottest-root-math| 106,18|140,41|73,96|",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4717:469,optimiz,optimization,469,https://root.cern,https://github.com/root-project/root/pull/4717,3,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,This patch enables the module file to mmap the rdict memory region before the; request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3967:90,load,load,90,https://root.cern,https://github.com/root-project/root/pull/3967,1,['load'],['load']
Performance,"This patch includes:; - Remove existing modulemap.overlay files; Cling now can generate virtual overlay files on-demand.; - Implement `-modulemap_overlay` flag to Cling; This flag is used to tell Cling the location of modulemaps to be; overlayed. (eg. stl.modulemap, libc.modulemap); - Generate and load virtual modulemap in Cling; It is in Interpreter constructor, happens as part of cxxmodules; initialization step.; - Implement an interface to Clang CompilerInvocation which can take FileSystem pointer; Previously, Clang only took a ""string of filenames"" which clearly doesn't; work for our usecase. We already discussed this new interface at; modules meeting, so this change will land upstream.; - Add a file existence check in Clang; When compiling a pcm and when Clang saw the #include with which pcm was available; (or being generated implicitly), Clang was putting a notation of the full path to this pcm.; This caused an error when build directory was deleted, because the path didn't exist anymore. This patch enables modules to be binary distributed, and to make it; work in CMSSW enviroment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3267:299,load,load,299,https://root.cern,https://github.com/root-project/root/pull/3267,1,['load'],['load']
Performance,"This patch reduces loaded libraries to half, nearly the same amount of pch's.; ; What I did is:; 1. Change DeclCollector and Transaction to collect clang::Decls, not; clang::Modules so that we still have decls information after finishing; deserialization.; 2. In TClingCallbacks, we check if the decl is ""isUsed()"" or not. If; not, we don't want to load corresponding libararies. ```; w/o; yuka@yukadesk:~/module-release$ lsof -p 25477 | grep so | wc -l; 88; with; yuka@yukadesk:~/module-release$ lsof -p 23676 | grep so | wc -l ; 37. PCH; yuka@yukadesk:~/root-release$ lsof -p 9664 | grep so | wc -l; 32. w/o; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.08 seconds Cpu Time = 0.07 seconds; (TFile *) 0x5563018a1d30; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 1.524314 seconds; sys time = 0.157075 seconds; res memory = 546.867 Mbytes; vir memory = 895.184 Mbytes. with; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.05 seconds Cpu Time = 0.05 seconds; (TFile *) 0x55c8a399bfa0; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.371789 seconds; sys time = 0.069116 seconds; res memory = 273.5 Mbytes; vir memory = 461.43 Mbytes. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2009:19,load,loaded,19,https://root.cern,https://github.com/root-project/root/pull/2009,2,['load'],"['load', 'loaded']"
Performance,"This patch reimplemented signal handling in CMSSW. It avoids async-unsafe functions in signal handler. For reference, see the link https://github.com/bbockelm/cmssw/blob/stacktrace_handler_revisit/FWCore/Services/src/InitRootHandlers.cc. I tried this patch with some simple multi-thread test cases and it worked fine. Is there any complicated test cases I can run? I think this patch is not very ready to merge, but it achieved basic functions. Any criticisms are welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/96:274,multi-thread,multi-thread,274,https://root.cern,https://github.com/root-project/root/pull/96,1,['multi-thread'],['multi-thread']
Performance,"This prevents certain ugly error messages in case an exception is; thrown during a multi-thread event loop: before this patch, in that; case the thread's slot number was never returned to the RSlotStack; and it could result in some misleading error messages being printed on; screen.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6601:83,multi-thread,multi-thread,83,https://root.cern,https://github.com/root-project/root/pull/6601,2,['multi-thread'],['multi-thread']
Performance,"This problem appears ""only"" in newer OS/compiler (as seen in the original reports leading to #12715) the dependent library are now dlclose'd when the 'main' library is dlclose'd. In the example a cmake generated library is linked against `libHist` and `libHist` is then loaded and unloaded when the example's library is (intentionally) loaded and unloaded. `libHist` happens to share a STL collection's dictionary (`std::vector<TString>`) with `libCore` (and this collection is used for the reading of rootpcm files and thus during the loading of the example's library). . Details:. Unload only the TClass actually generated by the unloaded library. The TGenericClassInfo's destructor now passes the TClass that they actually generated in; addition to the name so that only that TClass is destroyed. This avoid the problem (seen in #12715) where 2 librares (`A` and `B`) have a dictionary for the same; STL collection (this is supported) and we have the following sequence of operation:. 1. load library A; 2. load library B (dictionary registration is ignored as intended); 3. request TClass for STL collection.; 4. unload (dclose) library B; 5. use TClass for STL collection. With the previous code, step 4. would lead to the TClass for STL; collection to be marked as ""unloaded"" even though it library (A); was still actually loaded. Fix reloading of library with a module. Prior to this fix, the in-memory rootpcm loaded as part of the module was removed; from memory on first use and thus if the library was closed and re-opened/loaded; we no longer had the information needed to restore the TClass object corresponding; to that library. This 2 changes fix #12715. The commit [TClassTable: Remove alternate names upon library unloading.](https://github.com/root-project/root/pull/12863/commits/17e8833ec3deb32ca509bf08d31b56f93058d414) fix #12868",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12863:270,load,loaded,270,https://root.cern,https://github.com/root-project/root/pull/12863,8,['load'],"['load', 'loaded', 'loading']"
Performance,"This pull request adds an intermediate buffering mode between ""normal ROOT IO"" and the prefetching system. When enabled, it will cache a remote file to the local disk (uses the same logic as prefetching to determine what is ""remote"") for as long as it is opened and automatically cleans up afterward. This is useful in cases where you want to hide the effects of network latency (for various use cases which work poorly with `TTreeCache`, such as when an unpredictable set of branches are used or non-sequential scans) but do not want to set aside a directory to use as a persistent cache or have a cache-unfriendly workflow. The approach has been ported from CMSSW (there, it is called `lazy-download`) where it has been in use for several years.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/146:129,cache,cache,129,https://root.cern,https://github.com/root-project/root/pull/146,4,"['cache', 'latency']","['cache', 'cache-unfriendly', 'latency']"
Performance,"This pull request adds support for the concatenation of RNTuple pages into 'cages' that are then written to, and read from, DAOS containers as a single value of the key-value object store under the same attribute key, thus the smallest addressable unit. Pages from the same page-group are concatenated in the order they are handled on the DAOS side through vector I/O from the sealed pages' buffers. The name 'cage' is a portmanteau of ""concatenated pages"" and suggests the fact that pages caged together must be read together in DAOS. This change emancipates the DAOS backend from the original, on-disk ntuple page size. The option to concatenate sealed and buffered pages avoids unnecessary throughput constraints caused by the original page size (e.g., the on-disk default, 64KiB, generally leads to lower performance than pages an order of magnitude larger, e.g. 1MiB), particularly if the pattern of data analysis is based on reading back entire page-group ranges at once. On the other hand, this change ties the reader to the new, concatenated sizes; in DAOS key-value stores, it is impossible to read only a part of the value. It is important that the cage size limit be set adequately for the use-case during writing to DAOS. ## Changes or fixes:. - `RNTupleWriteOptions` provides a way to `SetMaxCageSize()` (default: caging enabled with 1 MiB cages), the maximum size a concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the sam",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11466:693,throughput,throughput,693,https://root.cern,https://github.com/root-project/root/pull/11466,2,"['perform', 'throughput']","['performance', 'throughput']"
Performance,"This pull request extends `RPageSink` to allow for vector commit of sealed pages. The prototype of the new functions is as follows:; ```c++; virtual std::vector<RNTupleLocator> CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges);; void CommitSealedPageV(std::span<RPageStorage::RSealedPageGroup> ranges);; ```. These changes enable (parallel) vector writes in concrete backends, e.g. in DAOS. Derived classes that do not override the base implementation will see a sequence of calls to `CommitSealedPage()`. The first measurements of vector writes on DAOS based on this PR, indicate an improvement of _an order of magnitude_ in the write throughput. The refactor in this PR passes all the RPageSinkBuf tests. ## Changes or fixes:; - Add `CommitSealedPageV()` to the public interface of `RPageSink`. This function carries out a vector write of a number of sealed page ranges. Each range applies to a given columnId.; The default implementation of `CommitSealedPageVImpl()` sequentially calls `CommitSealedPageImpl()` for each page on each range, but derived classes can override it to provide an optimized implementation.; - Use `CommitSealedPageV()` in RPageSinkBuf. If a buffered column contains only sealed pages, commit the whole range; via `CommitSealedPageV()`.; - If all buffered columns consist solely of sealed pages, coalesce all pages to be committed in a single `CommitSealedPageV()` call that includes a sealed page range per column. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10719.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10775:658,throughput,throughput,658,https://root.cern,https://github.com/root-project/root/pull/10775,2,"['optimiz', 'throughput']","['optimized', 'throughput']"
Performance,This pull request fixes failing tests for ROOT builds configured with `-Dimt=OFF`. Those tests incorrectly assumed that multi-threading support is just there after a call to `ROOT::EnableImplictMT()`. ## Checklist:; - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12637:120,multi-thread,multi-threading,120,https://root.cern,https://github.com/root-project/root/pull/12637,1,['multi-thread'],['multi-threading']
Performance,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10860:722,Load,LoadClusters,722,https://root.cern,https://github.com/root-project/root/pull/10860,2,"['Load', 'perform']","['LoadClusters', 'performance']"
Performance,"This pull request is the result of work done by David Clark as a summer intern at Argonne:; To prepare for multi-threaded workflows, a preloading and retaining clusters feature is introduced. This change will prevent additional reads from occurring when reading events out of sequence.; ; By setting the `MaxVirtualSize` of the tree to a negative value, entire clusters will be loaded into memory and previous clusters will be retained - the absolute value of `MaxVirtualSize` indicates how many additional clusters will be kept in memory.; ; If `TTree MaxVirtualSize` is set to a negative value, `GetEntry()` will load the entire cluster into memory, not just the first basket. `GetBasket()` is modified to call a new function `GetFreshCluster()` if `MaxVirtualSize` is negative. This function is responsible for returning a new basket and clearing out clusters from memory. Because clusters can have varying numbers of baskets, `GetFreshCluster()` reuses the first basket and clear the rest of the baskets. Reusing all baskets may be more efficient, but adds significant complexity and would not affect the typical case where each cluster only contains a single basket (all the baskets will be reused here).; ; To test the performance of the change, I read 1000 entries (about 1 GB) from a tree of randomly generated data consisting of 2000 branches. Every read had a 2.5% chance of reading 10 entries back or a 2.5% chance of reading 10 entries forward from the current entry. - Without the change enables there were 1.5 GB read in 31102 read calls. ; - With MaxVirtualSize set to -1, there were 1.1 GB read in 90 read calls.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/796:107,multi-thread,multi-threaded,107,https://root.cern,https://github.com/root-project/root/pull/796,4,"['load', 'multi-thread', 'perform']","['load', 'loaded', 'multi-threaded', 'performance']"
Performance,This pull request provides a bug fix:. - fixing wrong safety in TGeoParallelWorld due to double application of coordinate transformation) ; - fix a crash in VoxelFinder when we have only 1 primitive. as well as some optimizations for TGeoPallelWorld usage:. - call TGeoParallelWorld::Safety with existing limit from normal safety to speedup search; - make TGeoPhysicalNode::IsMatchingState faster,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16425:216,optimiz,optimizations,216,https://root.cern,https://github.com/root-project/root/pull/16425,1,['optimiz'],['optimizations']
Performance,"This pull request provides a page allocator that caches previous allocations up to a certain limit. The cache is thread-local and defaults to 16 pages per thread (~1MiB per thread for default-sized pages). This PR is largely based on the concepts in #8634. Reuse of memory allocations in `RPageAllocatorCache` not only reduces calls to the global allocator but also heap fragmentation. The global allocator is thread-safe albeit locked; thus, to also reduce contention, the cache in `RPageAllocatorCache` is thread-local.; Given the small size of the (per-thread) cache, the internal structure is a simple `std::deque`. Anything more complex is not justified at the moment of this writing. . **NOTE:** Performance evaluation (specially for the multi-threaded case) should be inserted here tomorrow. ## Changes or fixes:; - Add `RPageAllocatorCache`: this templated allocator returns pages that have at least the required capacity. `DeletePage()` does not immediately deallocate memory; instead, pages are returned to a thread-local cache, dropping the smallest allocated buffer if the cache is full. If a previous page cannot be recycled, the underlying allocator `AllocT` (`RPageAllocatorHeap` by default) is used to allocate memory.; - Change the signature of `RPageSource::UnsealPage()`: `SealPage()`, the counterpart of `UnsealPage()` takes an RPage and returns an RSealedPage. Make the interface of `UnsealPage()` symmetric and return an RPage.; - Make `UnsealPage()` use `RPageAllocatorCache` by default.; - Remove stray `RPageAllocator{File,Daos}` classes. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR supersedes #8634.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12279:49,cache,caches,49,https://root.cern,https://github.com/root-project/root/pull/12279,8,"['Perform', 'cache', 'multi-thread']","['Performance', 'cache', 'caches', 'multi-threaded']"
Performance,This pull request simplifies the implementation of `RPageSourceDaos::LoadClusters()` as a prior step to handling the population of the page zero. A follow-up PR factors out common code for handling `kTypePageZero` locators in storage backends + enables their population in the DAOS backend. ## Checklist:; - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13381:69,Load,LoadClusters,69,https://root.cern,https://github.com/root-project/root/pull/13381,1,['Load'],['LoadClusters']
Performance,"This pull request slighly improves RClusterPool to reduce contention (due to `fLockXxxQueue` being held) in I/O and unzip; threads. To this end, each thread keeps its local buffer of elements to be processed. On wakeup, the local copy is swapped with `fXxxQueue`, which not only reduces contention but also reduces the overall number of allocations, as the internal storage of both copies is reused. The local copy should be cleared before the `std::swap()` in the next iteration. Also, the unzip thread is just notified once after all the elements are pushed into the queue. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12044:569,queue,queue,569,https://root.cern,https://github.com/root-project/root/pull/12044,1,['queue'],['queue']
Performance,"This pull requests adds additional functionality to RDF Define in c++ in order to facilitate new features via pythonization. New features in c++:; - more flexibility in template arguments in order to allow argument and return types to be specified independently of the callable type (this means types don't have to match exactly and implicit conversions between float and double, etc are possible); (Specification of Define result type independent from inferred function return type may facilitate future optimizations related to suppressing dynamic memory allocation.); - support for callables with overloaded operator() as long as argument types are explicitly specified; - reduced copying/moving of callable. New features from pythonization of Define:; - support for free functions, static class member functions, and bound class member functions, with or without additional template arguments, and compatible with overloaded functions transparently from pyroot.; - support for expression strings, and a complete lambda expression passed as a string; - automatic inference of types from the graph (which don't have to exactly match the callable argument types as long as implicit conversion is available); - automatic inference of column names from callables in case column names are not explicitly provided (but only when available and unambiguous); - all variations are jitted with fully templated types for maximum possible inlining. given the following defined in c++; ```cpp; float squared(float x) { return x*x; }. double squared(double x) { return x*x; }. template<typename T>; T squared(T x) { return x*x; }. float squared2(float x) { return x*x; }. double squared2(double y) { return y*y; }. class Callable {; public:; float operator() (float x) { return x*x; }; double operator() (double x) { return x*x; }. template<typename T>; T operator() (T x) { return x*x; }. float squared(float x) { return x*x; }. double squared(double x) { return x*x; }. template<typename T>; T squared(T x) { r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9174:505,optimiz,optimizations,505,https://root.cern,https://github.com/root-project/root/pull/9174,1,['optimiz'],['optimizations']
Performance,"This pull-request adds new write performance counters to the file/DAOS backends:; - fSzWritePayload: that keeps track of the total volume written in committed pages.; - fSzZip: volume before zipping; - fTime{Wall,Cpu}Zip: that measure the wall clock/cpu time spent compressing. This suffices to compute the actual write throughput, where needed. Closes issue #8283.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8328:33,perform,performance,33,https://root.cern,https://github.com/root-project/root/pull/8328,2,"['perform', 'throughput']","['performance', 'throughput']"
Performance,"This pull-request extends `RPageSink` and `RPageSource` to provide a common set of performance counters that can be enabled in a subclass via `EnableDefaultMetrics()`. Afterward, the set might be extended in a subclass via a call to `fMetrics.MakeCounter<...>()`. This not only removes boilerplate code from subclasses, but also provides a useful set of regular/computed counters. A subclass, however, is still responsible for updating the base counters. Alternatively, subclasses may still ignore the default set of metrics and provide their own `RNTupleMetrics` object by overriding the `GetMetrics()` member function. Closes issue #8360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8397:83,perform,performance,83,https://root.cern,https://github.com/root-project/root/pull/8397,1,['perform'],['performance']
Performance,"This pull-request extends the support in `RClassField` to load/store arbitrary types by correctly handling inheritance. See below for the list of changes. ## Changes or fixes:; - An internal subfield named `:XXX` is created for each inherited `XXX` class; additional fields are recursively generated for data members/base classes.; - Reading/writing an object of the derived class includes both, direct and inherited data members. Non-persistent data members, i.e. `//!`, are not stored. This PR closes issue #7856.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8552:58,load,load,58,https://root.cern,https://github.com/root-project/root/pull/8552,1,['load'],['load']
Performance,"This reduces the time required by jitting dramatically in many common scenarios, as we do not need a different template specialization of types that are expensive to instantiate for each Define or Filter expression. Performance measurements available [here](https://indico.cern.ch/event/909884/)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5329:216,Perform,Performance,216,https://root.cern,https://github.com/root-project/root/pull/5329,1,['Perform'],['Performance']
Performance,"This reverts commit 5298b418eec4129351888f41cb7c3bfc90161e22. This commit was mistakenly committed. PR was opened in #1730, but it was; closed and moved to #1761. I didn't notice this and created another PR; in #1980. This change was causing 100+ failures in runtime cxxmodules nightlies.; (Eg. https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29183/testReport/junit/projectroot/runtutorials/tutorial_fit_FittingDemo/); We want to have **proper** PrebuildModulesPaths which information were; extracted from LD_LIBRARY_PATH and DYLD_LIBRARY_PATH, not a random ""."". Because of this commit, we were trying to autoload libraries generated; by roottest on-demand (for example ""./h1analysisTreeReader_C.so"") This; is not an intentional behavior, these autogenerated libraries are; already loaded by roottest and what we want to do is to load **proper**; libraries like libHist.so instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2160:792,load,loaded,792,https://root.cern,https://github.com/root-project/root/pull/2160,2,['load'],"['load', 'loaded']"
Performance,"This sequence is triggered in a case where a dictionary for requested twice for the same class and upon loading the 2nd library, a Warning is being issued about the duplicated dictionary. While setting up in order to print, the initialization `gROOT` is triggered and this includes the loading of the `rootmap files` which in turns warning about the (same) class being listed in 2 distinct `rootmap` files. ```; #0 0x00007f586472654d in __lll_lock_wait () from /lib64/libpthread.so.0; #1 0x00007f5864721e9b in _L_lock_883 () from /lib64/libpthread.so.0; #2 0x00007f5864721d68 in pthread_mutex_lock () from /lib64/libpthread.so.0; #3 0x00007f5865797806 in DebugPrint(char const*, ...) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #4 0x00007f5865797abd in DefaultErrorHandler(int, bool, char const*, char const*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #5 0x00007f586584fb23 in ErrorHandler () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #6 0x00007f58657aa2cc in TObject::Warning(char const*, char const*, ...) const () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #7 0x00007f584695be33 in TCling::ReadRootmapFile(char const*, TCling::TUniqueString*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11383:104,load,loading,104,https://root.cern,https://github.com/root-project/root/issues/11383,2,['load'],['loading']
Performance,"This set of improvements to TBufferMerger (and more) was inspired by the terrible performance of the parallel merging (and fast merging in general) in the case where the TTree has a very large number of branches (1000+). Where in the original version a TBufferMerger with a file with 1000+ branches and only 50s and ran with any number of threads would take more than 3m (did not wait until the end) the new version takes 11s with 1 thread, 8s with 6 threads and 22s with 6 thread when increased to 500 events. (using the CMS file ../data//250202_181_RECO.root). This PR includes:. * skipping the boxing/compressing/uncompressing/unboxing cycle if the TBufferMerger is available (not already merging) when the thread is writing its TMemFile. * skipping SetBranchAddress and SetMakeClass in when doing fast cloning (where that information is not used anyway). * Replacing calling to the slow TObjArray::GetEntries (which *counts* the slot used) by calling GetEntriesFast. * Speeding up the GetMother implementation (caching parent's address sooner when reading, use that information in GetMother). * In fast cloning, delay writing the output until the last input is processed (instead of writing the output after each input),. * Optimization of fast cloning handing of empty write basket. It also contains a couple of bug fixes (RNtuple merging forgetting to merge the result of the objects in the file, iofeatures incorrectly cloned). Also made TBufferMerger::GetQueueSize actually thread safe (it is necessary to use it to stop the producer from adding more data if the queue is too full). Also improved TClass::GetBaseClassOffset parallelism (benefit parallel boxing/unboxing) and reduced/removed contention see in the mechanism use to determine the actual object type at run-time (TIsAProxy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7286:82,perform,performance,82,https://root.cern,https://github.com/root-project/root/pull/7286,3,"['Optimiz', 'perform', 'queue']","['Optimization', 'performance', 'queue']"
Performance,"This should fix issue #10353. Use a spin lock to protect gInlined. Also, use in-place lamba calls instead of checking at each call if the static was initialized.; In addition to the (slight) performance gain, this make those intialization thread safe.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10369:191,perform,performance,191,https://root.cern,https://github.com/root-project/root/pull/10369,1,['perform'],['performance']
Performance,"This should fix the recent test failures seen in `gtest-tree-treeplayer-test-treetreeplayertestUnit`. Full lldb stack traces at https://codimd.web.cern.ch/s/QKEMHg5H1. # PR description. The test was dynamically allocating the array data members of the `Data` struct, but never deallocating them. This commit polishes the `Data` struct definition and ensures proper management of the data members. The previous way of writing data to the TTree was leading to a bad memory access in the ReadBasicPointer inlined function in TStreamerInfoReadBuffer.cxx while reading the `double*` array. In particular, the issue arises when accessing and then deallocating the array at the current index provided by the `TCompInfo` object. ```; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf140 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x000000010",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16501:802,queue,queue,802,https://root.cern,https://github.com/root-project/root/pull/16501,1,['queue'],['queue']
Performance,This should reduce the amount of modules we load for namespace lookups at the cost of being more fragile. Improves the memory of hsimple.c from 145864 to 118696 and skips loading of 15 redundant modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6190:44,load,load,44,https://root.cern,https://github.com/root-project/root/pull/6190,2,['load'],"['load', 'loading']"
Performance,"This warning was first seen in rootbench:. ```c++; root-benchmark/BUILDTYPE/Release/COMPILER/gcc62/LABEL/performance-cc7/build/include/ROOT/TDFActionHelpers.hxx:745:34:; warning: parameter ‘slot’ set but not used [-Wunused-but-set-parameter]; void SetBranches(unsigned int slot, BranchTypes&... values, StaticSeq<S...> /*dummy*/); ^~~~; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1811:105,perform,performance-,105,https://root.cern,https://github.com/root-project/root/pull/1811,1,['perform'],['performance-']
Performance,This was detected by redundant loading on libRooStats when we are trying; to resolve _ZN5TTreeC1Ev. libRooStats contains it as an unresolved symbol; but the wrong flag checks did not filter it out. This patch should fix a few subtle test failures which fluctuate depending; on the linker optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2764:31,load,loading,31,https://root.cern,https://github.com/root-project/root/pull/2764,2,"['load', 'optimiz']","['loading', 'optimizations']"
Performance,"This was first reported at: https://cdcvs.fnal.gov/redmine/issues/25615; with the error:; ```; Fatal Root Error: TBranchElement::InitializeOffsets; Could not find the real data member 'fOutputNames' when constructing the branch '4anab::MVADescriptions_emtrkmichelid_emtrkmichel_Reco1.obj' [Likely an internal error, please report to the developers].; ROOT severity: 6000; ```; during the creation of a branch. With a class like:; ```; class mystrarray {; public:; string fDataTag; ///< offset= 0 type=300 ,stl=365, ctype=365, Tag of the reco data products (art::InputTag format); string fOutputInstance; ///< offset= 32 type=300 ,stl=365, ctype=365, Instance name of the feature vector collection; string fOutputNames[4]; ///< offset= 64 type=320 ,stl=365, ctype=365, Feature vector entries names/meaning. static short Class_Version() { return 10; }; };; ```; creating any split branch containing this kind of object (or collection there of) will work fine. But if a file containing the `StreamerInfo` for `mystrarray` version 10 before loading the library containing its dictionary then the `StreamerInfo` from the file (since it has the same checksum has the one that would come from the dictionary info) is used. However, instead of; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames[4]""; ```; it produces:; ```; root [1] TClass::GetClass(""mystrarray"")->GetStreamerInfo()->GetElement(2)->GetFullName(); (const char *) ""fOutputNames""; ```; Which does not match the expectation of `TBranchElement::InitializeOffsets`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8033:1037,load,loading,1037,https://root.cern,https://github.com/root-project/root/issues/8033,1,['load'],['loading']
Performance,This was reported at https://github.com/art-framework-suite/art/issues/142 and is due to the combination of; (a) We do not generate dictionary for std::tuple instances (b) When TClass::GetClass is called it tries to load the dictonary until there is a full TClass object is in memory (c) The emulated std::tuple TClass are marked as 'not loaded' (d) Searching for the TClass for a templated class will cost memory (during the lookup of the instantiation). (e) TPluginManager::ExecPluginImpl was looking up the TClass for the typle `std::type< list of arguments>`. The lookup induced in (e) in the user's case (root built with runtime cxx module on) lead to some memory allocation in Clang while trying to find out if there was now a library or dictionary to load. This fixes #14199,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14200:216,load,load,216,https://root.cern,https://github.com/root-project/root/pull/14200,3,['load'],"['load', 'loaded']"
Performance,"This way, if another process requests the file from the cache while; the file is still being written/downloaded, it does not ""find"" it; and does not read an incomplete file. This should fix failures such as [these](https://github.com/root-project/root/pull/9495#issuecomment-1005637703) where multiple process (in this case multiple ROOT tests) require to cache the same file concurrently.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9479:56,cache,cache,56,https://root.cern,https://github.com/root-project/root/pull/9479,3,"['cache', 'concurren']","['cache', 'concurrently']"
Performance,This will allow us to uniformly load all modules tagged as `[system]`. This way we avoid explicitly mentioning the module names (helpful for OSX).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1344:32,load,load,32,https://root.cern,https://github.com/root-project/root/pull/1344,1,['load'],['load']
Performance,"This will allow, in the future, to optimize loading of entries; from TDataSources: `GetColumnReaders` does not have to pass through; virtual calls to `TDataSource` anymore, which means that concrete; TDS's can provide custom, possibly lazy column readers which; TInterface will use directly. Concretely I would make this mechanism opt-in: TDataSources can still implement the usual `GetColumnReadersImpl` method, but if they implement `GetColumnReadersFast<T>` (better names are welcome) `TInterface` will switch to using that one.; `GetColumnReadersFast<T>` is not limited to returning `vector<void *>` but can return smart objects which behave like pointers but can perform e.g. callbacks to their TDataSource.; This basically allows `TDataSources` to implement a mechanism similar to `TTreeReader`/`TTreeReaderValue`, if required for performance reasons or in order to implement certain features.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1939:35,optimiz,optimize,35,https://root.cern,https://github.com/root-project/root/pull/1939,4,"['load', 'optimiz', 'perform']","['loading', 'optimize', 'perform', 'performance']"
Performance,"This work on the C++ tutorial really shows that we need a fake column with the entry number. If we agree, this would be easy to achieve thanks to the recent developments done for cache :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1131:179,cache,cache,179,https://root.cern,https://github.com/root-project/root/pull/1131,1,['cache'],['cache']
Performance,"This would allow CMSSW to build its third party modules by calling:. ```; rootcling bare-cling -xc++ -I${ROOTSYS}/etc -I ${headers_location}; -fmodules -Xclang -emit-module -fmodule-name=tinyxml2; -fmodules-cache-path=${CMSSW_LIBDIR} -o ${module_file_location}; ${headers_location}/module.modulemap; ```. This commit has several issues one is that it does not order the dependencies so if libc.pcm goes out of date the build system does not regenerate std.pcm. cc: @oshadura, @davidlange6, @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5521:207,cache,cache-path,207,https://root.cern,https://github.com/root-project/root/pull/5521,1,['cache'],['cache-path']
Performance,"This. ```cpp; #include <TFile.h>; #include <TROOT.h>. void foo() {; // works; auto *f2 = TFile::Open(""~/Scratchpad/work/UnROOT_RDataFrame_MiniBenchmark/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");; gROOT->GetListOfFiles()->Print();. // doesn't work; auto *f = TFile::Open(""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");; gROOT->GetListOfFiles()->Print();; }; ```. yields. ```; Processing foo.cpp...; Collection name='Files', class='TList', size=0 // OK; Collection name='Files', class='TList', size=1 // KO; TFile: name=root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root, title=, option=READ; ```. i.e. the `READ_WITHOUT_GLOBALREGISTRATION` is ignored when using `TFile::Open` to read a file via xrootd. This might lead to unexpected performance degradation as well as use-after-deletes in some cases (e.g. a `TChain` with `kWithoutGlobalRegistration` uses `TFile::Open` to read a remote file, loads a tree (which will have the `kMustCleanup` bit reset by the `TChain`), then if the global list of files is cleaned before the `TChain` is destroyed the chain will have a dangling pointer to its `fFile` and `fTree`). This is likely not just an issue with xrootd files but all TFile implementations except the local.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10742:935,perform,performance,935,https://root.cern,https://github.com/root-project/root/issues/10742,2,"['load', 'perform']","['loads', 'performance']"
Performance,"Time/ms: 470; Chunk: 8 Time/ms: 531; Chunk: 9 Time/ms: 592; ```; (In contrast, if I use `std::cout` instead of `Printf`, every step is perfectly 50 ms). I found out that on line https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/src/TThread.cxx#L1043, there is a timer being created, with a timeout of 20 ms, https://github.com/root-project/root/blob/a89eb12f83228833842813c4b690a2033778316b/core/thread/inc/TThread.h#L208. If I remove the `+ 10` ms and recompile ROOT, I get better results, (except for the first iteration):; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 111; Chunk: 2 Time/ms: 161; Chunk: 3 Time/ms: 211; Chunk: 4 Time/ms: 262; Chunk: 5 Time/ms: 312; Chunk: 6 Time/ms: 362; Chunk: 7 Time/ms: 415; Chunk: 8 Time/ms: 469; Chunk: 9 Time/ms: 521; ```. ### Optional: share how it could be improved; It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it; 3. mkdir build && cd build; 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 5. make; 6. gui/runGUI --prbs 26 -q. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |; | From heads/th1_long@v6-25-01-1451-gaed0c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8582:3048,tune,tune,3048,https://root.cern,https://github.com/root-project/root/issues/8582,2,"['perform', 'tune']","['performance', 'tune']"
Performance,"To Reproduce; * Create any workspace file with ROOT 5.34, eg.; ```; % root -b; ROOT 5.34/32 (v5-34-32@v5-34-32, Jul 28 2015, 17:41:47 on linuxx8664gcc); root [0] RooWorkspace w(""w"");; root [1] w.factory(""Gaussian::sigx(x[-10,10],m[0,-10,10],s[3,0.1,10])"");; root [4] w.writeToFile(""simplest-53432.root"");; ```; * Since it isn't easy to get ROOT 5.34 running on CentOS7 these days, I have saved some workspace files here:; * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53425.root` (created with ROOT 5.34/25); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-53432.root` (created with ROOT 5.34/32); * `/afs/cern.ch/user/a/adye/public/root/bug-62206/simplest-60212.root` (created with ROOT 6.02/12); * Setup ROOT 6.22/06 and load the file:; ```; % . /cvmfs/sft.cern.ch/lcg/views/setupViews.sh LCG_99 x86_64-centos7-gcc8-dbg; % root -b; root [0] TFile::Open(""simplest-53432.root""); *** Break *** segmentation violation; ...; #10 std::__atomic_base<TVirtualStreamerInfo*>::load (__m=std::memory_order_seq_cst, this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:713; #11 std::__atomic_base<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/bits/atomic_base.h:590; #12 0x00007f791c62f23e in std::atomic<TVirtualStreamerInfo*>::operator TVirtualStreamerInfo* (this=0x1d8) at /cvmfs/sft.cern.ch/lcg/releases/gcc/8.3.0-cebb0/x86_64-centos7/include/c++/8.3.0/atomic:367; #13 0x00007f791c625873 in TClass::GetStreamerInfo (this=0x0, version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563; #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7276:1655,load,load,1655,https://root.cern,https://github.com/root-project/root/issues/7276,1,['load'],['load']
Performance,To make the RReader usable in multi-thread we ned to move the loch to all the COmpute funcitions in order to protect the setting of the input variables. This fixes #16600 as suggested in https://root-forum.cern.ch/t/tmva-rreader-not-multithread-safe/59662,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16616:30,multi-thread,multi-thread,30,https://root.cern,https://github.com/root-project/root/pull/16616,1,['multi-thread'],['multi-thread']
Performance,"To reproduce error, just call:; ```; TClass::GetClass(""TTreeCache"")->GetStreamerInfo(); ```; Produces crash with output:; ```; input_line_9:6:31: error: 'MissCache' is a protected member of 'TTreeCache'; default_delete<TTreeCache::MissCache> _1;; ^; /home/linev/build/json/include/TTreeCache.h:85:11: note: declared protected here; struct MissCache {; ^; input_line_9:7:16: error: 'MissCache' is a protected member of 'TTreeCache'; TTreeCache::MissCache* _0;; ^; /home/linev/build/json/include/TTreeCache.h:85:11: note: declared protected here; struct MissCache {; ^; Error in <Load>: Could not declare TEmulatedTuple<TTreeCache::MissCache*,default_delete<TTreeCache::MissCache> >. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; ```. There are also few other classes with similar problems:; ```; TClass::GetClass(""TMVA::VarTransformHandler"")->GetStreamerInfo();; TClass::GetClass(""TTreeCacheUnzip"")->GetStreamerInfo();; ```. Probably, issue https://github.com/root-project/root/issues/7276 connected with this one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8194:578,Load,Load,578,https://root.cern,https://github.com/root-project/root/issues/8194,1,['Load'],['Load']
Performance,"To support inline namespace and opaque typedefs without needing interpreter information the dictionary for class template often load a alternate spelling of the class name (beside the normalized name) by using `ROOT::AddClassAlternate`. However when unloading the library, those aliases are not removed. In practice this means that you can define a class inside an inlined namespace in one iteration of the library and in a distinct inlined namespace the next one (Since inline namespace are mostly only used by the STD libraries, this should be a very are occasion). . Possibly more common (but still, it has never been reported so far), you can not change the number or order a class template for which one of the instance is using any opaque typedef (`Double32_t` etc...).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12868:128,load,load,128,https://root.cern,https://github.com/root-project/root/issues/12868,1,['load'],['load']
Performance,Try to optimize treeviewer and treeplayer includes ROOT-10336,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4485:7,optimiz,optimize,7,https://root.cern,https://github.com/root-project/root/pull/4485,1,['optimiz'],['optimize']
Performance,"Tstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:19813,optimiz,optimized,19813,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,Tune BDTG parameters,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/836:0,Tune,Tune,0,https://root.cern,https://github.com/root-project/root/pull/836,1,['Tune'],['Tune']
Performance,Two optimizations fro the ci:; 1) Use zstd with 8 threads to compress ROOT builds for nightlies and releases.; 2) Use gzip compression level 2 instead of level 6 to compress artifacts.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15802:4,optimiz,optimizations,4,https://root.cern,https://github.com/root-project/root/pull/15802,1,['optimiz'],['optimizations']
Performance,"Uncomment line setting operation mode of partInt components of RooPro…dPdf using current operation mode. This seems to be needed in order to propagate to the cached intergal component s of the RooProdPdf is operation mode.; It fixes issue #7157 where RooProdPdf is used from a RooFFTConv. In this case; the RooFFTConv sets AlwaysDirty as operation mode its components, and then the ROoProdPdf needs to propage to its owned parts, otherwise during the FFT computation the RooProdPdf returns always its first evaluation. To fix the example in #7157 it is sufficient to uncomment line RooProdPdf.cxx:1622, since it is case IVa in code. ; But a similar issue is present when using case IIIa and IIb.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7242:158,cache,cached,158,https://root.cern,https://github.com/root-project/root/pull/7242,1,['cache'],['cached']
Performance,"Under some circumstances TStreamerInfo::BuildOld crashes in TStreamerInfo::AddReadAction. See original report: cms-sw/cmsdist#6314 (comment). With the recent updates to switch more std::pair's TClass to be auto-generated from the typename (as opposed to generated from interpreter information), more STL's collection TClass have their StreamerInfo build earlier. In the case above, a file is being fast cloned and thus the StreamerInfo to the new file. In particular there is this sequence of operation. Get TClass for pair(type1, vector<type2>>; ** At this point the dictionary for vector<type2> is not loaded.; ** The TClass for the pair is generated nonetheless; *** This requires the building of the StreamerInfo for the TClass for vector<type2>, let's call it c1 but (intentionaly because it is not needed yet) does not trigger the loading of the dictionary the vector<type2>; Some other operation requires the loading of the library that contains the dictionary for vector<type2>; ** SInce c1 exists, it is replaced by the dictionary generated TClass for vector<type2>, let's call it c2; ** Part of this replacement is to transfer c1's StreamerInfo into c2 (after 'reseting` it's state); Then the StreamerInfos are copied form the input file to the output; ** This includes ""building"" and ""compiling"" the StreamerInfo; *** This crasesd when calling AddReadAction. An STL collection's TClass (like c1 and c2)'s StreamerInfo contains an artificial StreamerElement (for infrastructures purposes) that points back to its owner. So when the StreamerInfo is created it has internally a pointer to c1. The deficiency is that whenc1 is replaced by c2 and then deleted, the StreamerInfo was not updated and thus the later building of the StreamerInfo was using a stale pointer to c1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6768:604,load,loaded,604,https://root.cern,https://github.com/root-project/root/pull/6768,6,['load'],"['loaded', 'loading']"
Performance,"Under some circumstances TStreamerInfo::BuildOld crashes in TStreamerInfo::AddReadAction. See original report: https://github.com/cms-sw/cmsdist/pull/6314#issuecomment-721115953. With the recent updates to switch more std::pair's TClass to be auto-generated from the typename (as opposed to generated from interpreter information), more STL's collection TClass have their StreamerInfo build earlier. In the case above, a file is being fast cloned and thus the StreamerInfo to the new file. In particular there is this sequence of operation. * Get `TClass` for `pair(type1, vector<type2>>`; ** At this point the dictionary for `vector<type2>` is not loaded.; ** The TClass for the pair is generated nonetheless; *** This requires the building of the `StreamerInfo` for the `TClass` for `vector<type2>`, let's call it `c1` but (intentionaly because it is not needed yet) does not trigger the loading of the dictionary the `vector<type2>`; * Some other operation requires the loading of the library that contains the dictionary for `vector<type2>`; ** SInce `c1` exists, it is replaced by the dictionary generated TClass for `vector<type2>`, let's call it `c2`; ** Part of this replacement is to transfer `c1`'s StreamerInfo into `c2` (after 'reseting` it's state); * Then the `StreamerInfos` are copied form the input file to the output ; ** This includes ""building"" and ""compiling"" the StreamerInfo; *** This crasesd when calling `AddReadAction`. An STL collection's TClass (like `c1` and `c2`)'s StreamerInfo contains an artificial StreamerElement (for infrastructures purposes) that points back to its owner. So when the `StreamerInfo` is created it has internally a pointer to `c1`. The deficiency is that when`c1` is replaced by `c2` and then deleted, the StreamerInfo was not updated and thus the later building of the `StreamerInfo` was using a stale pointer to `c1`. ```; #4 <signal handler called>; #5 0x00002af4f3e84290 in TStreamerInfo::AddReadAction (this=0x2af506a31000, readSequence=0x2af5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6767:649,load,loaded,649,https://root.cern,https://github.com/root-project/root/issues/6767,1,['load'],['loaded']
Performance,"Unlike in the old RooFit, the PDF was not cloned in the BatchMode when a; likelihood object was created with `RooAbsPdf::createNLL`. This caused; trouble in a few places, because changing the state of the NLL changed; the state of the original model. Actually, the model was already cloned when a RooSimultaneous was used,; and because the cloning is only expensive for large simultaneous models,; this change is not expected to have a negative performance impact for; realistic workflows. The `testRooSimultaneous` closure test with a one-channel; RooSimultaneous is now extended to use also the BatchMode, because this; was one of the cases where it failed before the suggested change in this; commit. This PR includes a second technical commit with some code modernization in `stressRooFit`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11406:445,perform,performance,445,https://root.cern,https://github.com/root-project/root/pull/11406,1,['perform'],['performance']
Performance,"Up to now all ES6 modules were loaded with relative path like `./jsrootsys/modules/core.mjs`. ; This works nice when all used code is located in one sub-directory `./jsrootsys/` which is alias for `$ROOTSYS/js`.; But this does not work when other location has to be used and modules have to reference jsroot code. Solution provided by modern browsers is `importmap` which can look like:; ```; <script type=""importmap"">; {; ""imports"": {; ""jsroot"": ""./jsrootsys/modules/main.mjs"",; ""jsroot/draw"": ""./jsrootsys/modules/draw.mjs"",; ""jsroot/io"": ""./jsrootsys/modules/io.mjs"",; ""jsrootsys/"" :: ""./jsrootsys/""; }; }; ```. This allow to use `import { draw } from 'jsroot';` syntax - including different external modules. Therefore add support of ""importmap"" in `THttpServer` which automatically insert appropriate map if `<!--jsroot_importmap-->` comment appears in HTML file. . Old HTML files with JSROOT import via relative path will work as before. ; But newer JSROOT HTML files with absolute path will not work with older ROOT versions - may be backport to 6.32 and 6.30 can be done later. Special handling of Qt5 is provided - while used there chromium version does not support importmap :(. ; Nevertheless all ROOT web widgets will be working. Provide `tutorials/webgui/custom` demo with usage of user-defined modules for support of custom user classes `TTriangle`. Demo should run witth ACLiC to provide dictionary for the class. Several changes in TWebCanvas and RWebWindowsManager class were done to let configure custom modules paths and register custom classes.; Macro also works in batch mode where workaround has to be implemented - until headless browser will allow to use ES6 modules directly from the file system. Update JSROOT with support of ES6 modules loading and with many spelling fixes. Ensure that new modules approach works with our external project where web graphics intensively used.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16042:31,load,loaded,31,https://root.cern,https://github.com/root-project/root/pull/16042,2,['load'],"['loaded', 'loading']"
Performance,Update basket optimization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/238:14,optimiz,optimization,14,https://root.cern,https://github.com/root-project/root/pull/238,1,['optimiz'],['optimization']
Performance,Update concurrentfill.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8492:7,concurren,concurrentfill,7,https://root.cern,https://github.com/root-project/root/pull/8492,1,['concurren'],['concurrentfill']
Performance,Use GenerateDictionary instead of LoadDictionaryForSTLType,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1752:34,Load,LoadDictionaryForSTLType,34,https://root.cern,https://github.com/root-project/root/pull/1752,1,['Load'],['LoadDictionaryForSTLType']
Performance,Use Read/Write lock where relevant. Cache the last result of TProcessID::IsValid and TProcessID::GetProcessWithUID as; most often the same PID will be used for most of the process lifetime. This addresses: https://root-forum.cern.ch/t/copying-trefs-and-accessing-tref-data-from-multiple-threads/29417,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2391:36,Cache,Cache,36,https://root.cern,https://github.com/root-project/root/pull/2391,1,['Cache'],['Cache']
Performance,"Use `${PYTHON_LIBRARIES}` to automatically select the correct (debug/release) Python library when both are installed. For example, with both debug and release versions of Python, `PYTHON_LIBRARIES` is set as:; ```; PYTHON_LIBRARIES:INTERNAL=optimized;C:/Python310/libs/python310.lib;debug;C:/Python310/libs/python310_d.lib; ```; And with only the release version:; ```; PYTHON_LIBRARIES:INTERNAL=C:/Python310/libs/python310.lib; ```; So the correct one will be used.; This fixes the following error when both versions are installed:; ```; CMake Error at bindings/pyroot/cppyy/CPyCppyy/CMakeLists.txt:61 (target_link_libraries):; The ""optimized"" argument must be followed by a library.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13013:241,optimiz,optimized,241,https://root.cern,https://github.com/root-project/root/pull/13013,4,['optimiz'],['optimized']
Performance,"Use a single executable to parse all ONNX input files and generate the appropriate headers. This speed up the parsing especially in the case of using ROOT files, since we avoid the initialization/loading of libraries for every file. The CMakeFile is modified to generate automatically the C++ code to parse all input files",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12070:196,load,loading,196,https://root.cern,https://github.com/root-project/root/pull/12070,1,['load'],['loading']
Performance,Use correct suffix (`.dll` on Windows and `.so` elsewhere) and test also loading/unloading` in threads,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13473:73,load,loading,73,https://root.cern,https://github.com/root-project/root/pull/13473,1,['load'],['loading']
Performance,"Use different file names (instead of `TMVA.root` everywhere), to prevent potential conflicts when running the test concurrently. Trying to solve the following kind of error on Windows:; ```; SysError in <TFile::TFile>: could not delete C:\ROOT-CI\build\runtutorials\TMVA.root (errno: 13) Permission denied; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13576:115,concurren,concurrently,115,https://root.cern,https://github.com/root-project/root/pull/13576,2,['concurren'],['concurrently']
Performance,Use different filename in loopdir.C and loopdir11.C to avoid race condition,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11725:61,race condition,race condition,61,https://root.cern,https://github.com/root-project/root/pull/11725,1,['race condition'],['race condition']
Performance,Use file cache when accessing remote files during testing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/404:9,cache,cache,9,https://root.cern,https://github.com/root-project/root/pull/404,1,['cache'],['cache']
Performance,Use full path for loading CDLL,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/569:18,load,loading,18,https://root.cern,https://github.com/root-project/root/pull/569,1,['load'],['loading']
Performance,"Use larger vectors and access them more sparsely if needed (e.g.; threads now access one every 16 elements in hot std::vector<int>; on systems where a cache line is 64 bytes). In some edge cases in which the analysis workload is light and/or many; threads (48, 64) are involved, this patch reduces runtimes by factors.; The increase in memory usage should be little relative to the memory; required e.g. by jitting or by per-thread histograms.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8007:151,cache,cache,151,https://root.cern,https://github.com/root-project/root/pull/8007,1,['cache'],['cache']
Performance,"Use now a lock to create the TVirtualFitter class also in the case when ROOT is having MT enabled. Only the 'User' fitting option cannot be use din multi-thread mode, since it relies on a static global TVirtulFitter. Disable then that option when running in MT. Fix also printing of FitResult in MT. This Pull request fixes issue #13041 and also still works (it is a better fix) for https://sft.its.cern.ch/jira/browse/ROOT-7300; In that case the correct fix was applied for histogram/graph fitting but not for TTree Unbinned fits. . Fixes also the print of the fit results when running in multi-thread as in the example code posted in ROOT-7300",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13048:148,multi-thread,multi-thread,148,https://root.cern,https://github.com/root-project/root/pull/13048,2,['multi-thread'],['multi-thread']
Performance,"Use random numbers in the file names created during unit tests, so that concurrent unit tests don't remove each others files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4208:72,concurren,concurrent,72,https://root.cern,https://github.com/root-project/root/pull/4208,1,['concurren'],['concurrent']
Performance,Use the gROOTMutex to protect access to possible concurrent accesses; to gROOT->GetListOfFiles().,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/45:49,concurren,concurrent,49,https://root.cern,https://github.com/root-project/root/pull/45,1,['concurren'],['concurrent']
Performance,Use the gRootMutex to protect access to possible concurrent accesses; to gROOT->GetListOfFiles().,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/38:49,concurren,concurrent,49,https://root.cern,https://github.com/root-project/root/pull/38,1,['concurren'],['concurrent']
Performance,Use the non static TString::Form to actually modify the cmd string.; Use || to actually delete the file when the .ROOT.cachefile does not exist. See https://root-forum.cern.ch/t/cacheread-with-given-local-file-name-to-overwrite-local-file-on-many-file-reads/38660,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5317:119,cache,cachefile,119,https://root.cern,https://github.com/root-project/root/pull/5317,2,['cache'],"['cachefile', 'cacheread-with-given-local-file-name-to-overwrite-local-file-on-many-file-reads']"
Performance,Use the std::atomic load() method to access its content,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1098:20,load,load,20,https://root.cern,https://github.com/root-project/root/pull/1098,1,['load'],['load']
Performance,"Users can now register one or more callbacks to TResultProxies (i.e.; the results of TDF actions). A callback is just a callable that takes; a reference to the result type as argument and is going to be invoked; by each worker thread once every N entries (users choose N). It is meant to be used to inspect partial results of the analysis; while the event loop is still running.; For example, in a single-thread event loop, one can draw a histogram; and update the canvas every 100 entries like this:; ; ```c++; auto h = tdf.Histo1D(""x"");; TCanvas c(""c"",""x hist"");; // update the canvas every 100 entries; h.RegisterCallback(100, [&c](TH1D &h_) { h_.Draw(); c.Update(); });; // trigger event loop, this `Draw` will be performed afterwards; h->Draw();; ```. Each worker thread invokes callbacks sequentially, but the same callback; might be invoked concurrently by different worker threads if implicit multi-threading; is enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037:718,perform,performed,718,https://root.cern,https://github.com/root-project/root/pull/1037,3,"['concurren', 'multi-thread', 'perform']","['concurrently', 'multi-threading', 'performed']"
Performance,"Using Cache() and Display() with an argument like {""x"", ""y""} matches both the string_view and the vector<string> overloads, causing ambiguity.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2515:6,Cache,Cache,6,https://root.cern,https://github.com/root-project/root/pull/2515,1,['Cache'],['Cache']
Performance,"Using approach as before, just perform multiple `JSROOT.draw` inside; this special HTML file. When producing PDF - all these images should; be dump in single file. In all other cases correspondent number of; image files will be created. Advantage of such approach - starting web browser and loading JSROOT; scripts happens only once. Improve PDF generation. Simple 100 images can be generated in ~3 seconds (instead of 70s if doing one by one)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13244:31,perform,perform,31,https://root.cern,https://github.com/root-project/root/pull/13244,2,"['load', 'perform']","['loading', 'perform']"
Performance,"Var(f""sigma_{i}"", """", 1.3, 0, 5)); gauss_list.append(ROOT.RooGaussian(f""gauss_{i}"", """", observable, mu_list[-1], sigma_list[-1])); frac_list.append(ROOT.RooConstVar(f""frac_{i}"", """", 1/3)). gauss = ROOT.RooAddPdf(""gauss"", """", gauss_list, frac_list[:-1]); gauss.keepAlive = (gauss_list, frac_list[:-1]); return (mu_list, sigma_list), gauss. def fit_gauss(model, data, batch_mode):; # build the loss; nll = model.createNLL(data, BatchMode=batch_mode). # minimize; minimizer = ROOT.RooMinimizer(nll); minimizer.minimize(""Minuit2"", """"). result = minimizer.save(); return result. def main(n_events):; observable = ROOT.RooRealVar(""x"", """", 0, -5, 20); data1 = get_data(observable, n_events); data2 = get_data(observable, n_events); parameters1, model1 = get_model(observable); parameters2, model2 = get_model(observable). result1 = fit_gauss(model1, data1, ""cpu""); result2 = fit_gauss(model2, data2, ""cuda""). c = ROOT.TCanvas("""", """", 800, 400); c.Divide(2). c.cd(1); frame1 = observable.frame(); data1.plotOn(frame1); model1.plotOn(frame1); frame1.SetTitle(""Fit performed with the 'cpu' backend""); frame1.Draw(). c.cd(2); frame2 = observable.frame(); data2.plotOn(frame2); model2.plotOn(frame2); frame2.SetTitle(""Fit performed with the 'cuda' backend""); frame2.Draw(). c.Print(""myPlot.png""). if __name__ == ""__main__"":; main(int(1e6)); ```; Run the code as `python fit.py`. ### ROOT version. ``` bash; ------------------------------------------------------------------; | Welcome to ROOT 6.29/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 29 2023, 08:42:45 |; | From heads/master@v6-29-01-2512-gf6aeead07d |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. build from source. ### Operating system. Ubuntu 22.04.3 LTS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13603:3125,perform,performed,3125,https://root.cern,https://github.com/root-project/root/issues/13603,2,['perform'],['performed']
Performance,"We actually need those callbacks as they are responsible for; loading decls from unresolved identifiers, which then actually; triggers the loading of the specific header (or in our case; the specific C++ modules). For now we need this as long as the modules are based on the; rootmap mechanism.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1267:62,load,loading,62,https://root.cern,https://github.com/root-project/root/pull/1267,2,['load'],['loading']
Performance,"We are working on LCFIPlus, a flavor tagging software used for linear collider (ILC/CLIC) studies.; We use multi-class BDT with output of b-tag, c-tag, and uds-tag (3 outputs).; We also separate events into four categories according to number of reconstructed vertices; (0-vtx, 1-vtx, 1-vtx+1-partial-vtx, and 2-vtx) which are trained and evaluated independently.; In the previous release with TMVA 4.1.0 we can use the output of BDTs as variables common to ; all categories, because the average value of eg. b-tag output from each BDT; over full training samples reflects the fraction of b events in the training samples.; (eg. if we have 80% of b and 20% of c + uds, we have the avarage value of .8 for b-tag output.); We found this feature is not preserved in the latest releases (after TMVA 4.1.2); due to the normalization procedure introduced in that version.; In result this causes significant degradation of our flavor tagging performance,; which was reported from a user using latest ROOT/TMVA.; We also found that just switching off the normalization procedure in the ROOT 6.06/TMVA 4.2.1; gives very similar performance to the ROOT 5.28/TMVA 4.1.0.; Therefore, we need to switch off the normalization to keep the performance,; which is realized in an option implemented in this pull request.; We hope this will be accepted, to avoid us from patching this to every release of ROOT; we use for studies using LCFIPlus flavor tagging feature.; We set this option to non-default, so current users should not be affected by this change.; ![btag-100k-root-6 06 02-skipnorm](https://cloud.githubusercontent.com/assets/7939934/18453216/0f501eb0-78f3-11e6-892c-912f9b68553d.png); B-tag performance with the SkipNormalization option; ![btag-100k-root-6 06 02-noskipnorm](https://cloud.githubusercontent.com/assets/7939934/18453215/0f4e6b60-78f3-11e6-94bd-b4be9631937d.png); B-tag performance without the SkipNormalization option",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/244:935,perform,performance,935,https://root.cern,https://github.com/root-project/root/pull/244,5,['perform'],['performance']
Performance,"We had symbols exposed, which in turn meant symbols were resolved by the dynamic loader,; which in turn meant another libllvm.so could interfere with those of cling. By hiding these; symbols, all symbols are self-contained and not external symbols leak into libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4689:81,load,loader,81,https://root.cern,https://github.com/root-project/root/pull/4689,1,['load'],['loader']
Performance,We have a suboptimal behavior in the way cling optimizes code in O2 mode.; Disable it until the issue is understood and fixed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1211:47,optimiz,optimizes,47,https://root.cern,https://github.com/root-project/root/pull/1211,1,['optimiz'],['optimizes']
Performance,"We have failures in our nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```; Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C...; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]!; You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(); Maybe you need to load the corresponding shared library?; CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6563:650,load,loadLibrary,650,https://root.cern,https://github.com/root-project/root/issues/6563,2,['load'],"['loadLibrary', 'loaded']"
Performance,"We might be in a situation where we linked the library into an executable and; our trigger function is inside it. There is no point in trying to load rdict; and pcm files as it will fail. In that case we exit early avoiding the; invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3896:145,load,load,145,https://root.cern,https://github.com/root-project/root/pull/3896,2,"['Load', 'load']","['LoadPCM', 'load']"
Performance,"We move to cling, this should now work without explicitly loading; it. This also unblocks the modularization project which doesn't; include MathCore in the minimal base image.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1430:58,load,loading,58,https://root.cern,https://github.com/root-project/root/pull/1430,1,['load'],['loading']
Performance,We need several adjustments to do. First pre-loading of RInterface.pcm in root-project/root@5096f5fffc causes some crashes. Second we seem to still have issues when trying to resolve symbols from the Rcpp library.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8831:45,load,loading,45,https://root.cern,https://github.com/root-project/root/pull/8831,1,['load'],['loading']
Performance,We need to respect the existing ExternalASTSource when setting up the; interpreter. Otherwise the ASTReader (which is the existing source); doesn't receive the required callbacks to properly load C++ modules. This patch now creates a multiplexer that contains our new; ASTSource and the existing one if it's necessary. We also; no longer attach the existing sema source which seemingly; was only a workaround that only works for the special case; were the external sema source and the external AST source; are the same object.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1284:191,load,load,191,https://root.cern,https://github.com/root-project/root/pull/1284,1,['load'],['load']
Performance,"We now reset `fMustRunEventLoop` when a new named filter is added.; This fixes ROOT-9117: TDF now correctly re-runs the event-loop if; users ask for a cutflow report for a named filter that has been; added after a first event-loop has already been performed. In the future we might want to improve the inner logic so that; only the new named filters (and possibly new actions) are executed,; but the old filters are not re-run if not needed. [PR 109](https://github.com/root-project/roottest/pull/109) in roottest adds a test for this scenario.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1377:248,perform,performed,248,https://root.cern,https://github.com/root-project/root/pull/1377,1,['perform'],['performed']
Performance,"We read a TTree in the classical way with TBranch pointers.; For improved performance, we deactivate all branches using TTree::SetBranchStatus(""*"",0) as advised at:; https://root.cern.ch/doc/master/classTTree.html#a9fc48df5560fce1a2d63ecd1ac5b40cb. If one first gets the number of entries, then one deactivates all branches, all goes commonly well. But if the TChain is initialized only with a *single* file, then the tree is not read! . This appears to be a bug, since the functionality of a TChain should be independent on the number of input files. I am using ROOT 6.20/06. Minimum example to be executed with `$ root -b -l read_tree.cxx` is:. ```; using namespace std::chrono;. void process_tree(TString name, int nFiles, bool DoGetEntries, bool DoDeactivateBranches ) {. // any root files with a TTree; const TString filename = (""/cvmfs/cms.cern.ch/slc6_amd64_gcc530/lcg/root/6.06.00-ikhhed6/tutorials/hsimple.root"");. TChain* chain = new TChain(""ntuple"");; for ( int i = 0 ; i<nFiles ;i++ ) {; chain->Add(filename);; }. long nEntries = -1;; if ( DoGetEntries ) nEntries = chain->GetEntries();. if ( DoDeactivateBranches ); chain->SetBranchStatus(""*"",0); // this line, together with a previous GetEntries() causes a bug, but only if a single file is passed to the TChain!. // read a single branch; float px,py,pz,random=0.333333;; TBranch* b_random;; chain->SetBranchAddress(""random"", &random, &b_random); // initialize one branch only. auto start = high_resolution_clock::now();// timer start. double sum = 0;; int iev = 0;; int nerrors=0;; const int nrepetitions = 100; // read files more often for a more reliable timing.; for ( int n = 0 ; n<nrepetitions ; n++ ) { // more repetitions for more accurate timing; for ( int i = 0 ; i<chain->GetEntries() ; i++, iev++ ){ // read tree; int bytes = chain->GetEntry(i);; if ( !bytes ) { // some printout (if something goes wrong ;) ); if ( nerrors++ < 3 ) cout<<""Error! No bytes were read!""<<endl; // this prints errors; if ( nerrors==3 ) cout<<""Omi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7567:74,perform,performance,74,https://root.cern,https://github.com/root-project/root/issues/7567,1,['perform'],['performance']
Performance,"We set our own defaults for `CMAKE_CXX_FLAGS_${BUILD_TYPE}$ here: https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L97. Because cmake sets it own defaults for that variable (initialized by `project(ROOT)`) in the cache and without using `set(... FORCE)` our own settings are not picked up. This is especially important because we would like to have `RelWithDebInfo` builds without `NDEBUG`, which is currently not possible (`NDEBUG` is part of the default cmake variable for `CMAKE_CXX_FLAGS_RELWITHDEBINFO`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6574:244,cache,cache,244,https://root.cern,https://github.com/root-project/root/issues/6574,1,['cache'],['cache']
Performance,"We should add the infamous Open Data benchmarks to rootbench. Originally meant to showcase the DF programming model (see https://github.com/stwunsch/opendata-benchmarks), it went now a little bit out of hand and it's used for measuring ROOT performance (see the fork here https://github.com/masonproffitt/opendata-benchmarks and the forum entry here https://root-forum.cern.ch/t/scalability-of-rdataframes-on-16-cores/44222). At the end, they have nice properties, which we should profile, like a significant amount of jitted code and quite a lot of allocations due to the missing SBO in RVec.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7745:241,perform,performance,241,https://root.cern,https://github.com/root-project/root/issues/7745,2,"['perform', 'scalab']","['performance', 'scalability-of-rdataframes-on-']"
Performance,We should provide tutorials that show how to perform NN and BDT inference with TMVA's experimental interfaces (SOFIE and the fast BDT inference engine).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9242:45,perform,perform,45,https://root.cern,https://github.com/root-project/root/issues/9242,1,['perform'],['perform']
Performance,"We still need it to load the library before we get the headers and; initializie some class infos, so we can't just remove it like that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1263:20,load,load,20,https://root.cern,https://github.com/root-project/root/pull/1263,1,['load'],['load']
Performance,"We were trying to collect the owning modules of every deserialized; decl. Later, we loaded the corresponding library. This is too; much because for some entities (such as forward declarations) we; load the shared object file in vain because no CodeGen is; required.; ; This patch relies on the ASTReader to decide if a decl needs to; be CodeGenned or not. If it requires an action from CodeGen the; ASTReader passes it through the HandleInterestingDecl interface.; ; This patch brings back to normal the amount of loaded libraries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2006:84,load,loaded,84,https://root.cern,https://github.com/root-project/root/pull/2006,3,['load'],"['load', 'loaded']"
Performance,"We would like to get some performance evaluations from the cmssw side. This PR is a continuation from PR #3012 . @smuzaffar, @mrodozov, could you build ROOT's cxxmodule IB against this PR and see if there are performance difference with and without this PR?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4088:26,perform,performance,26,https://root.cern,https://github.com/root-project/root/pull/4088,2,['perform'],['performance']
Performance,WebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_5:1:2: error: unknown type name 'ifdef'; >#ifdef PI; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_6:1:2: error: unknown type name 'ifdef'; >#ifdef ERROR; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >; > *** ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:6238,load,load,6238,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,WebEve: Optimize table proxy builder,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4186:8,Optimiz,Optimize,8,https://root.cern,https://github.com/root-project/root/pull/4186,1,['Optimiz'],['Optimize']
Performance,WebEve: optimizations in EveTable.js controller,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4384:8,optimiz,optimizations,8,https://root.cern,https://github.com/root-project/root/pull/4384,1,['optimiz'],['optimizations']
Performance,"When GetReadCache is called from a TChain, the check against the `this`; pointer should actually become a check against `fTree`: the cache is; not for the TChain object but for the TTree it loaded. This should fix ROOT-10672.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5340:133,cache,cache,133,https://root.cern,https://github.com/root-project/root/pull/5340,2,"['cache', 'load']","['cache', 'loaded']"
Performance,When RooFit starts for the first time it automatically loads the most optimal batch computation library. In response to issue #7361 I introduce an environment variable that permits the user to explicitly select the library to be used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7415:55,load,loads,55,https://root.cern,https://github.com/root-project/root/pull/7415,1,['load'],['loads']
Performance,"When RooFitCore is loaded, an initialisation function is called.; It prints the RooFit banner, and contains a dummy function that can; load architecture-specific computation libraries once they are; implemented. So far, this only works for gcc and clang. For other compilers, a fall back; without architecture specific symbols will be used. Manos will use this; to provide Root with optimised fitting libraries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6321:19,load,loaded,19,https://root.cern,https://github.com/root-project/root/pull/6321,2,['load'],"['load', 'loaded']"
Performance,When a library is re-loaded (via .L) we should reload the corresponding rdict file. However current ROOT (without modules) just re-reads the rdict file. This patch brings this behavior for modules and is intended to be a quick fix for the os nightly failures of kind:. Error in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcmError in TCling::LoadPCM: ROOT PCM /.../libTree_rdict.pcm file does not exist; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImageGui_rdict.pcm; Info in TCling::LoadPCM: In-memory ROOT PCM candidate /.../libASImage_rdict.pcm. The continuation of this work is in root-project/root#5420,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5422:21,load,loaded,21,https://root.cern,https://github.com/root-project/root/pull/5422,7,"['Load', 'load']","['LoadPCM', 'loaded']"
Performance,When alpha numeric labels are present the number of avis division should not be optimized.; This fixes this issue: https://github.com/root-project/root/issues/6381,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6391:80,optimiz,optimized,80,https://root.cern,https://github.com/root-project/root/pull/6391,1,['optimiz'],['optimized']
Performance,"When building ROOT in optimized mode, we enable fast math which then; disables errno on math functions. But this only happens in TCling,; so all modules built by rootcling_stage1 are suddenly out of sync; and we get errors like this:; ```; error: errno in math functions was enabled in PCH file but is currently disabled; ```. This patch just applies the same setting in _stage1. In theory we; should make a central place where we have these extra flags, but; that's out of scope for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1229:22,optimiz,optimized,22,https://root.cern,https://github.com/root-project/root/pull/1229,1,['optimiz'],['optimized']
Performance,When building with gcc49 on osx a linker assertion happens when linking interpreter module. Trial and error reveal that setting -O0 removes the linker assertion. Dan Riley found that adding the flag -fno-omit-frame-pointer also removed the linker assertion without removing other optimizations.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/64:280,optimiz,optimizations,280,https://root.cern,https://github.com/root-project/root/pull/64,2,['optimiz'],['optimizations']
Performance,"When called repeatedly via TTree::GetBranch, the string allocations in; GetFullName have a notable runtime cost.; Here, the allocation is reduced to a single one in every branch. See here for a performance analysis where repeated invocations produced significant overhead.; ![image](https://user-images.githubusercontent.com/16205615/186901068-80db73be-e32a-47e5-8986-4dfe8d5e8dae.png). This seems to matter most if the branches have mothers, because in this case, the string composition kicks in. @pcanal; - Do you know if there's a test that covers this case?; - Do you agree that this brings down TString allocations?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11255:194,perform,performance,194,https://root.cern,https://github.com/root-project/root/pull/11255,1,['perform'],['performance']
Performance,"When calling RooAbsArg::optimizeCacheMode look for already processNodes by pointer using RooLinkedList::FindObject instead of RooLinkedList::findArg which looks by name.; This makes sure that nodes in the computational graph with the same name are not skipped and for example propagation of operMode (e.g. ADIRTY) is done. ; This happens for the case of RooFFTConvPdf (RooAbsCachedPdf) where 2 caches exist, one for normalized and one for the unnormalized pdf. In that case the ADIRTY flag was not propagated for the normalized cache and when computing likelihood (and fit) was done only suing dirst data point! (see ROOT-8497). This fixes ROOT-5380 and ROOT-8497 (RooProdPdf which includes a RooFFT). The PR includes also a commit making different names for cached pdf of RooAbsCachedPdf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7280:24,optimiz,optimizeCacheMode,24,https://root.cern,https://github.com/root-project/root/pull/7280,4,"['cache', 'optimiz']","['cache', 'cached', 'caches', 'optimizeCacheMode']"
Performance,"When cling is embedded and the plugins are linked statically we can rely; on the initialization of the Preprocessor to register the pragmas. Currently, due to the current implementation deficiency we cannot rely; on the same mechanism when loading the plugins as shared objects. This patch fixes the failing cling test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2992:240,load,loading,240,https://root.cern,https://github.com/root-project/root/pull/2992,1,['load'],['loading']
Performance,"When compiling a RooSimultaneous for a given normalization set, we can only prefix the observables after everything related the compiling of the compute graph for the normalization set is done. This is because of a subtlety in conditional RooProdPdfs, which stores the normalization sets for the individual pdfs in RooArgSets that are disconnected from the computation graph, so we have no control over them. An alternative would be to use recursive server re-direction, but this has more performance overhead. Closes #15751 and fixes the CMS Run 1 Higgs combination with the new NLL evaluation backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15795:489,perform,performance,489,https://root.cern,https://github.com/root-project/root/pull/15795,1,['perform'],['performance']
Performance,"When composing the expressions to jit autoparsing is redundant as we; know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of; autoparse and autoload (useful for modules); and secondly avoids deep call; chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3765:593,perform,performance,593,https://root.cern,https://github.com/root-project/root/pull/3765,2,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"When configuring ROOT on the new M1 Max chip using Mac OS 12.1 and latest Xcode (Clang 13.0), it does not work when using the option `-Dall=On`.; By using `-Dall=On` the compiler flag `-mach=native` is added by CMake and this option is not recognised by clang.; When configuring:; ```; cmake ../root -Dall=On -Dbuiltin_glew=On; ```; There is an error in cmake caused by this problem, seen in the `CMakeFiles/CMakeError.log` file: . ```; Performing C++ SOURCE FILE Test HAVE_CXX_ATOMICS_WITHOUT_LIB failed with the following output:; Change Dir: /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/make -f Makefile cmTC_c3390/fast && /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_c3390.dir/build.make CMakeFiles/cmTC_c3390.dir/build; Building CXX object CMakeFiles/cmTC_c3390.dir/src.cxx.o; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DHAVE_CXX_ATOMICS_WITHOUT_LIB -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -march=native -Werror=unguarded-availability-new -std=c++11 -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.1.sdk -std=c++14 -MD -MT CMakeFiles/cmTC_c3390.dir/src.cxx.o -MF CMakeFiles/cmTC_c3390.dir/src.cxx.o.d -o CMakeFiles/cmTC_c3390.dir/src.cxx.o -c /Users/moneta/root/git/temp/CMakeFiles/CMakeTmp/src.cxx; clang: error: the clang compiler does not support '-march=native'; make[1]: *** [CMakeFiles/cmTC_c3390.dir/src.cxx.o] Error 1; make: *** [cmTC_c3390/fast] Error 2. ```. and then the Cmake checks fails and interpret that some libraries (e.g. lib atomic) is missing, but in reality this is not the case. . If configuring with just:. ```; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9687:437,Perform,Performing,437,https://root.cern,https://github.com/root-project/root/issues/9687,1,['Perform'],['Performing']
Performance,"When created JSON should be used outside ROOT application and without running THttpServer,; it is better to use batch mode for generation of JSON files. Places are:. 1. jupyter; 2. doxygen; 3. c1->SaveAs(""file.json""). Produced JSON is more robust and can be processed as is - how it is performed by the batch image production.; Main difference - extra JS modules directly embed into JSON. And `TF1` always store its values. Also configure `source_dir` of JSROOT when producing images. This let use local mathjax. Update JSROOT with Android/TGeo fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16783:286,perform,performed,286,https://root.cern,https://github.com/root-project/root/pull/16783,1,['perform'],['performed']
Performance,"When fitting a TGraphErrors, with errors in the x coordinate, there is currently no support to perform the operation using milt-threads as it is currently done for TH1::Fit or TGraph::Fit. One needs to use the `TThreadExecutor` in the [`FitUtil::EvsluateEffectiveChi2](https://root.cern.ch/doc/master/namespaceROOT_1_1Fit_1_1FitUtil.html#a5c11d758b21c08a22b580747789ccdab) function. . This has been requested in https://root-forum.cern.ch/t/multithreading-on-minuit/46225/13",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10021:95,perform,perform,95,https://root.cern,https://github.com/root-project/root/issues/10021,1,['perform'],['perform']
Performance,"When histogram object too large (more than 10^6 bins), its JSON representation can be huge.; At the same time graphics cannot display so much individual bins.; Therefore introduce `Optimize()` mode, when histogram can be rebinned before sending to the client; Allows to efficiently display histogram with arbitrary number of bins - the only limitation is memory and; efficiency of rebin algorithm (which is straight forward). For all drawing options of `RH1`, `RH2`, `RH3` optimized drawing mode is supported now.; For the moment default value is off - mean one should explicitly enable it when drawing histogram. Provide tutorial macros: `draw_rh1_large.cxx`, `draw_rh2_large.cxx`, `draw_rh3_large.cxx`; Ensure that they runs in compiled mode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5980:181,Optimiz,Optimize,181,https://root.cern,https://github.com/root-project/root/pull/5980,2,"['Optimiz', 'optimiz']","['Optimize', 'optimized']"
Performance,"When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13046:133,load,load,133,https://root.cern,https://github.com/root-project/root/pull/13046,2,['load'],"['load', 'loaded']"
Performance,"When instantiating templates, all Decls are present in the AST (with possibly deserialization pending). At that point, we should not load more modules which could find an implicit template instantiation that is lazily loaded. Fixes #12003. (cherry picked from commit ffdc579bbcd858e966db879c4258d0623eb520f1). Backport of https://github.com/root-project/root/pull/13046",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13050:133,load,load,133,https://root.cern,https://github.com/root-project/root/pull/13050,2,['load'],"['load', 'loaded']"
Performance,"When integrating the discretely-sampled RooCurves, the algorithm; implemented in RooCurve::average() was unnecessarily complicated. The existing midpoints were only considered for the trapezoidal rule if; they are away from the interval limits with an arbitrary tolerance,; which seems like a premature optimization to me. In particular, the logic was not correct if all midpoints were close to; the limits without this tolerance, resulting in issue https://github.com/root-project/root/issues/9838. Instead of making that case work correctly by implementing more code; branches, this commit suggests to simply don't do this tolerace check; and use all available midpoints for the trapezoidal integration rule. A unit test with the reproducer from https://github.com/root-project/root/issues/9838 is also implemented. Closes https://github.com/root-project/root/issues/9838. There are two additional commits in this PR with general code improvements.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16099:303,optimiz,optimization,303,https://root.cern,https://github.com/root-project/root/pull/16099,1,['optimiz'],['optimization']
Performance,"When iterating over the `clients()` to clear the clients caches, the list of clients itself might also be changed during the iteration. We therefore can't do a range-based loop. This fixes the last remaining RooFit ASAN build failure in `testRooAddPdf`. This is a followup to efd468b4947.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11698:57,cache,caches,57,https://root.cern,https://github.com/root-project/root/pull/11698,1,['cache'],['caches']
Performance,"When multiple threads are touching the list of cleanups, another thread can delete the object retrieved via TObjLink::GetObject(), and then when it is dereferenced in ob->TestBit(...) it causes a crash in ROOT. Stack trace (simplified):; ```; in TObject::TestBit (this=0x0, f=33554432) at TObject.h:159; ^^^; in TList::RecursiveRemove (this=0xb3c3e0, obj=0x7ff3547da6b0); at root/core/cont/src/TList.cxx:717; ^^^; in THashList::RecursiveRemove (this=0xb504b0, obj=0x7ff3547da6b0); at root/core/cont/src/THashList.cxx:286; in TObject::~TObject (this=0x7ff3547da6b0, __in_chrg=<optimized out>); at root/core/base/src/TObject.cxx:88; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/719:576,optimiz,optimized,576,https://root.cern,https://github.com/root-project/root/pull/719,1,['optimiz'],['optimized']
Performance,"When noting that a TStreamerInfo set has already been processed, we; must do it in 3 separates steps:; - check it was seen before; - read and process the set; - record that the set as been seen. The previous situation:; - check and record that the set as been seen; - read and process the set; led to a race condition if a second thread was checking the same; set before the second step was completed (in which case the; second thread was believing that the set was process and looking; for the result of the process (one of the StreamerInfo) but could; not find it. We extend RConcurrentHashColl to have 2 new operations; - standalone Hash calculation; - standalone Find of hash; - standalone Insert of hash.; and we use it to split the check and the recording as described; previously. (this is an addendum to 95bf468438)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2710:303,race condition,race condition,303,https://root.cern,https://github.com/root-project/root/pull/2710,2,['race condition'],['race condition']
Performance,"When passing `-DPYTHON_EXECUTABLE=/my/path/to/python2` on macOS ROOT fails to configure with newer CMake versions with a bizarre error of:; ```; -- Preferring Python version 3; -- Found Python: /Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/bin/python2.7 (found version ""2.7.15"") found components: Interpreter Development; -- Could NOT find Python (missing: Development) (found version ""2.7.15""); -- Looking for OpenGL; -- Could NOT find OpenGL (missing: OPENGL_gl_LIBRARY OPENGL_INCLUDE_DIR); CMake Error at cmake/modules/SearchInstalledSoftware.cmake:610 (message):; OpenGL package (with GLU) not found and opengl option required; Call Stack (most recent call first):; CMakeLists.txt:167 (include); ```; Looking at the variables I see a weird mixture of python 2 and python 3:; ```; //; PYTHON_EXECUTABLE-CACHED:STRING=/Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env/bin/python. // Path to a program.; Python_EXECUTABLE:FILEPATH=/Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env/bin/python2.7. // Path to a file.; Python_INCLUDE_DIR:PATH=/usr/local/Cellar/python/3.7.6/Frameworks/Python.framework/Versions/3.7/include/python3.7m. // Path to a library.; Python_LIBRARY_DEBUG:FILEPATH=Python_LIBRARY_DEBUG-NOTFOUND. // Path to a library.; Python_LIBRARY_RELEASE:FILEPATH=/usr/local/opt/python/Frameworks/Python.framework/Versions/3.7/lib/libpython3.7m.dylib. // Path to a file.; Python_NumPy_INCLUDE_DIR:PATH=/Users/christopherburr/miniconda3/conda-bld/root_1579698021552/_h_env/lib/python2.7/site-packages/numpy/core/include; ```; This PR includes one way of fixing the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4832:1016,CACHE,CACHED,1016,https://root.cern,https://github.com/root-project/root/pull/4832,1,['CACHE'],['CACHED']
Performance,"When performing multi-thread reads of ROOT files, we need to pick the number; of TBB tasks among which we will divide the dataset. Our heuristic is ""try to produce around `T = N/ntrees` tasks per tree per; worker thread"": we don't know the number of clusters in each tree before; we open the files, so we don't know the total number of clusters upfront.; Instead we set a ""desired value"" of T tasks per tree and per thread, and; then when each thread opens a file it tries to make T tasks out of it (if; the file turns out to be too small, it might end up producing _less_ tasks than; desired. If we are processing `M > N` small files, we might end up producing; _more_ tasks per worker than N). N is a free parameter, and it represents the desired total number of; tasks per worker. If N is too low, parallelism will be too coarse-grained; and we might get imbalance/tails with bad parallelization.; The higher N is, the more CPU time we spend in task setup/teardown. Empirically, I believe we have set N too high (before this patch we set; it to 24). We often see runtime improvements in benchmarks by setting it; to a lower value, e.g. 10.; Again from experience, N == 10 should be a high-enough value to avoid; load imbalance between threads while it significantly reduces the amount; of tasks spawned (and the overhead that comes with it).; Therefore this patch sets N to 10. More discussion:; - https://mattermost.web.cern.ch/root/pl/8ay6my4pwbru7kzqs97f8xcdre; - https://docs.oneapi.com/versions/latest/onetbb/tbb_userguide/Task-Based_Programming.html",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8565:5,perform,performing,5,https://root.cern,https://github.com/root-project/root/pull/8565,3,"['load', 'multi-thread', 'perform']","['load', 'multi-thread', 'performing']"
Performance,When reading rdict files from the module we use the module name to form an; entry in a pending rdict map. It is later used when a library is loaded to; locate the corresponding rdict file. This patch resolves a potential symlinks and allows ROOT to find its rdict; files. It fixes the cmssw C++ modules setup.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4175:141,load,loaded,141,https://root.cern,https://github.com/root-project/root/pull/4175,1,['load'],['loaded']
Performance,"When registering a new specialization, we cannot assert that the; specialization is new, as in: has not been registered as a loadable; specialization before, at least not based on the ODRHash. The ODRHash is not unique for different types (hash collision), i.e.; different specialization template arguments might map to the same; ODRHash value. loadLazySpecializationsImpl() will thus load something,; and claim that the ""Specialization is already registered as lazy"",; but it will in fact be an unrelated specialization. Give up on asserting any of this. NOTE: it is unclear whether the ambiguity in which specialization will; be loaded is causing problems down the road; so far we have not observed; such problems in the wild. If so, the ODRHash must not be the lookup key,; but a mere lookup hint into a multimap or similar, where the search compares; the actual template arguments to identify which lazy specialization to load. Based on discussion with Vassil (and in turn Richard Smith). This fixes e.g.; ```; roottest/cling/threading/clinglock.C...; Assertion failed: (!loadLazySpecializationsImpl(Args) && ""Specialization is already registered as lazy""), function addSpecializationImpl, file /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp, line 253.; ```; on macOS 11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9621:125,load,loadable,125,https://root.cern,https://github.com/root-project/root/pull/9621,6,['load'],"['load', 'loadLazySpecializationsImpl', 'loadable', 'loaded']"
Performance,"When reloading web widget in QT5/QT6/CEF widget,; new widget loads faster than old connection is closed.; Therefore allow new key checks when loading HTML page. Remove debug output from firefox start script",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15550:61,load,loads,61,https://root.cern,https://github.com/root-project/root/pull/15550,2,['load'],"['loading', 'loads']"
Performance,"When running RDF/TTreeProcessorMT with large numbers of threads and files with files on xrootd significant lock contention is still present through ```TPluginHandler::LoadPlugin()``` and ```TPluginHandler::ExecPlugin()``` which are called from ```TFile::Open()```. This PR minimizes the use of locks, which are now only needed the first time a given TPluginHandler is called for various initialization steps. This change now completely eliminates the use of the global write lock during RDF event loops also for files read from xrootd and finishes addressing https://github.com/root-project/root/issues/7710. For a simple test case:. Create the files:; ```cpp; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include <thread>. void testwrite() {. const unsigned int nfiles = 4000;; const unsigned int nentries = 1000*1000;. float outval = 1.;. for (unsigned int ifile = 0; ifile < nfiles; ++ifile) {; TFile *fout = TFile::Open(TString::Format(""test_%i.root"", ifile), ""RECREATE"");; TTree *tree = new TTree(""tree"", """");; tree->Branch(""outval"", &outval);; for (unsigned int ientry = 0; ientry < nentries; ++ientry) {; tree->Fill();; }; tree->Write();; fout->Close();; }. }; ```. run the event loop:; ```python; import ROOT; ROOT.ROOT.EnableImplicitMT(). chain = ROOT.TChain(""tree""); chain.Add(""root://eoscms.cern.ch//store/cmst3/group/wmass/bendavid/iotestinput/test_*.root""). d = ROOT.ROOT.RDataFrame(chain); res = d.Sum(""outval""). resval = res.GetValue(); print(resval); ```. Testing with 256 threads:. before:; ```; Percent of CPU this job got: 1077%; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:51.82; ```. after:; ```; Percent of CPU this job got: 5626%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:54.89; ```; (in fact there is still some possible lock contention/parameter tuning within the xrootd client itself which could improve things further)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11631:167,Load,LoadPlugin,167,https://root.cern,https://github.com/root-project/root/pull/11631,1,['Load'],['LoadPlugin']
Performance,"When scanning sub-elements with sniffer, it is allowed to get list; of object members. But this should not be performed for container; objects like TFolder or TDirectory. Let correctly browse `TFile` with sub-directories via `THttpServer`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9471:110,perform,performed,110,https://root.cern,https://github.com/root-project/root/pull/9471,1,['perform'],['performed']
Performance,"When some column types were specified explicitly by the user, RCsvDS forgot to add that type to fColTypesList, which in turn caused RCsvDS::SetEntry to skip the proper loading of some column data. This fixes #12520.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12531:168,load,loading,168,https://root.cern,https://github.com/root-project/root/pull/12531,1,['load'],['loading']
Performance,"When specified, all kinds of JS scripts and ui5 files will be loaded from; URL path, which includes such version tag. Therefore when version is; changed in C++, all related scripts will be automatically reloaded. . This helps to solve browser cache problem, especially for; development phase. Normally browser heavily uses cached files, but if; one changes these files, one should explain every user that he/she must; clear the cache. With provided solution no any user intervention are; required.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4063:62,load,loaded,62,https://root.cern,https://github.com/root-project/root/pull/4063,4,"['cache', 'load']","['cache', 'cached', 'loaded']"
Performance,"When the normalization range for coefficient determination of a; RooAddPdf is changed, the AddPdf's projection cache needs to be reset,; just like it is already done in `RooAddPdf::fixCoefNormalization`.; Otherwise, there will be problems in the pdf evaluation and integration; because the projection cache is invalid. A unit test based on the GitHub issue that reported this problem is also; implemented. Closes https://github.com/root-project/root/issues/10988. Furthermore, another potential RooAddPdf problem is fixed, where several instances of RooRecursiveFraction were created with the same name (which could become problematic for example when using the new BatchMode).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10995:111,cache,cache,111,https://root.cern,https://github.com/root-project/root/pull/10995,2,['cache'],['cache']
Performance,"When using C++11, the cache used by G__FastAllocString utilizes; a non-locking thread safe circular buffer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/34:22,cache,cache,22,https://root.cern,https://github.com/root-project/root/pull/34,1,['cache'],['cache']
Performance,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10763:170,perform,perform,170,https://root.cern,https://github.com/root-project/root/issues/10763,1,['perform'],['perform']
Performance,"When using the `CONV` operator in TF1 with a different range, but re-using the same function, the new range is not used correctly. ; This code shows the problem: ; ```; auto f1 = new TF1(""f1"",""CONV(ROOT::Math::breitwigner_pdf(x,[1],[0]),gaus)"",0,10);; f1->SetParameters(5,1,1,0,1); ; f1->Draw(); // this is ok; // do convolution in a different range; auto f2 = new TF1(""f2"",""CONV(ROOT::Math::breitwigner_pdf(x,[1],[0]),gaus)"",10,20); ; f2->SetParameters(15,1,1,0,1);; f2->Draw(); // WRONG result because it performs convolution in 0,10 instead of 10,20; ```. This problem has been reported in https://root-forum.cern.ch/t/fitting-histograms-convolution/44973/7. A simple workaround is just to call:; ```; f2-SetRange(10,20); ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8252:507,perform,performs,507,https://root.cern,https://github.com/root-project/root/issues/8252,1,['perform'],['performs']
Performance,"When varying multiple columns simultaneously, RVariation was destroying; and re-creating the per-column RVecs of varied values at every entry,; which resulted in a change in the address of the varied values between; entries, which caused invalid reads on the part of the RVariationReader; (which assumes the addresses of varied values are stable). The issue was hidden by RVec's small buffer optimization, which was; keeping addresses stable as long as the number of variations fit the; small buffer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10702:392,optimiz,optimization,392,https://root.cern,https://github.com/root-project/root/pull/10702,1,['optimiz'],['optimization']
Performance,"When we run into an unkown identifier that is a namespace, we don't; really need to load its corresponding modules. Instead, we create a new; module that forward declared all namespaces and always load it first. By; doing so, we can avoid loading a lot of unnecessary modules. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910:84,load,load,84,https://root.cern,https://github.com/root-project/root/pull/10910,3,['load'],"['load', 'loading']"
Performance,"When we want to autoload contents from namespaces we end up in; Sema::LookupQualifiedName; then we issue a callback to; FindExternallyVisibleName which forwards to LookupObject. Lookup object; takes a DeclContext as an argument. This argument is always the primary; lookup context (which for a NamespaceDecl is the original namespace. Regular autoloading does not consider this (or has chosen not to) because; this reduces the amount of autoloads. Such autoloads can happen when; resolving template specializations when computing a decl's linkage by; clang's CodeGen. This in turn loads unexpected libraries such as RooFit; when trying to resolve all template specializations of __to_raw_pointer; (located in &lt;memory&gt;), including the one taking a HistFactory::Data*.; The amount of deserializations might be reduced by applying [D29951](https://reviews.llvm.org/D29951). That way we end up needlessly loading RooFit and showing it's weird; banner, potentially breaking a lot of tests. This behavior can be considered as broken because we hide information; about possible redeclarations which can affect the linkage computation or; other checks in codegen. If we fix the bug we will probably explode; ROOT's memory footprint and make the gap between standard ROOT and ROOT; with modules even bigger. Since it is not clear how much work and issue resolving is required for; standard ROOT, we can probably only live with the workaround of the missing; concept: moving entities in namespaces whose autoloading requires declarations; to be in the PCH. For instance, ROOT::Experimental::TDataFrame.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1337:581,load,loads,581,https://root.cern,https://github.com/root-project/root/pull/1337,2,['load'],"['loading', 'loads']"
Performance,"While TCanvas, shown in web-browser, marked as batch canvas, all customs object painting performed via gVirtualPS classes. Therefore one need to catch all these calls and record for SVG creation in the client. TWebPadPainter is remained as fall-back solution if some objects painter does not follow strictly the ROOT painting logic. ; Highly optimize data which are transferred to clients - avoid large TObject overhead for simple fill/line/marker attributes. ; Try to merge painting if there are too many objects on the TCanvas - like in tutorials/graphics/greyscale.C macro. In such case simple SVG fails - one should try to combine primitives drawn with same attributes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2862:89,perform,performed,89,https://root.cern,https://github.com/root-project/root/pull/2862,2,"['optimiz', 'perform']","['optimize', 'performed']"
Performance,"While debugging the failure triggered by a recent PR updating the behavior of `gDirectory`: https://github.com/root-project/root/pull/11908#issuecomment-1361086304 (The reported error is that a name/symbol that should have been detected and loaded by Cling was not found ... the direct cause was that `gDirectory` was unexpectedly `nullptr`), I discovered that notebooks (or a least the way they are run in the test `JupyROOT-ROOT_kernel_notebook`), runs several threads to actually execute the cells. It is also clear from my investigation that it does not enable thread safety. Whether we need to change depends on whether `Jupyter` (or the way it is use here) guaranteed that only one of the thread would ever be run concurrently (if not then we must enable thread safety). However, one more thing to consider is that when thread safety is enabled, each thread get its own thread local gDirectory pointers. If each cell is run in a separate thread, then change to `gDirectory` in one cell will not be reflected in the next cell. (this would be true also for any user level thread local variable).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11955:241,load,loaded,241,https://root.cern,https://github.com/root-project/root/issues/11955,2,"['concurren', 'load']","['concurrently', 'loaded']"
Performance,"While investigating performance issues with performing many fits in a RooFit analysis workflow, I discovered this memory leak in my valgrind logs. Getting this fix in as many release streams as possible would be good.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7137:20,perform,performance,20,https://root.cern,https://github.com/root-project/root/pull/7137,2,['perform'],"['performance', 'performing']"
Performance,"While many widgets will access JSROOT, try to always access JSROOT version from top server location; One cannot simply use src=""/jsrootsys/scripts/JSRoot.core.js"" while it does not work with FastCGI.; Therefore one have to use relative paths like ""../../jsrootsys/scripts/JSRoot.core.js"".; More efficiently will use browser cache",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7124:324,cache,cache,324,https://root.cern,https://github.com/root-project/root/pull/7124,1,['cache'],['cache']
Performance,"While profiling the AGC running on local dask, we found that TChain::GetListOfBranches() allocated a large amount of memory. The reason is that when the function is called, TChain does a LoadTree(0), which results in the tree allocating a new TTreeCache. This piles up during the execution of the python tasks and results in a large memory overhead.; Since we don't really need the cache when only querying the branch list, this commit introduces a new private LoadTreeWithOptions() function that allows the TChain to internally disable the tree's cache (setting the cache size to 0) before performing the LoadTree. The original cache size is then restored.; This saves about 350 MB of memory during the AGC execution for no visible downside.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16063:187,Load,LoadTree,187,https://root.cern,https://github.com/root-project/root/pull/16063,8,"['Load', 'cache', 'perform']","['LoadTree', 'LoadTreeWithOptions', 'cache', 'performing']"
Performance,"With 16 threads, the cache is simply too small.; These are thread specific values anyway.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2675:21,cache,cache,21,https://root.cern,https://github.com/root-project/root/pull/2675,1,['cache'],['cache']
Performance,"With CacheControl HTTP header one could specify how long browser will store files in cache.; Now one can configure for all file requests max-age parameters.; Introduce WebGui.HttpMaxAge rootrc parameter.; When WebGui.HttpMaxAge=0, all kind of caching should be disabled",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2752:5,Cache,CacheControl,5,https://root.cern,https://github.com/root-project/root/pull/2752,2,"['Cache', 'cache']","['CacheControl', 'cache']"
Performance,With `#pragma cling optimize (3)`:; ```; $ root.exe -l -b -q enrico_clingopt.C; Processing enrico_clingopt.C...; 1.13e-07; (int) 0; ```. And `#pragma cling optimize (0)`:; ```; $ root.exe -l -b -q enrico_clingopt.C; Processing enrico_clingopt.C...; 2.15174; (int) 0; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3233:20,optimiz,optimize,20,https://root.cern,https://github.com/root-project/root/pull/3233,2,['optimiz'],['optimize']
Performance,"With `RNTupleWriter::Append` / `RNTupleParallelWriter::Append`, the application must organize synchronization to the underlying `TFile`. To avoid locking for every `Fill`, https://github.com/root-project/root/pull/15239 introduced `FillNoCommit` and gives some guarantees so that locking is only necessary when calling `CommitCluster`. However that's still not ideal because `CommitCluster` will first call `CommitCluster` on every field, which will flush the column write buffers and trigger compression. This can be substantial for many fields or very large page sizes (compared to the cluster size). Ideally a `RNTupleFillContext` had a method to perform this work outside of the critical section, like `PrepareCommitCluster` or `FlushPageBuffers`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16241:650,perform,perform,650,https://root.cern,https://github.com/root-project/root/issues/16241,1,['perform'],['perform']
Performance,"With jsPDF and svg2pdf scripts one can convert drawings into the PDF.; Supported also images which are created by 3D drawings.; Also multi-page PDF files can be created. Functionality works with both Firefox and Chrome browsers running in headless mode. Also improve image generations in batch. ; Now data for any image format can be collected together before processed in single browser invocation - using `canv_batch.htm` file. While jsPDF is used, one has control how fonts are embed into PDF. By default ""symbol"" font used for greek symbols.; If necessary, ""symbol.ttf"" can be loaded and used instead. Also checked that `TWebCanvas::AddFont` is working. One probably can add some demos. Performance.; Creating 100 images in `tutorials/graphics/saveall.C` macro takes approx 3 sec - both with Chrome and Firefox. Keep support of `.screenshot.png` and `.screenshot.pdf`. This is special capability of Chrome browser to produce image or PDF file from existing HTML page. While it provides less control about fonts usage - it only can be used for debug purposes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16551:581,load,loaded,581,https://root.cern,https://github.com/root-project/root/pull/16551,2,"['Perform', 'load']","['Performance', 'loaded']"
Performance,"With master (commit 7f3f3428e4d20) (but has been present for a long time), PyROOT overload resolution of function that takes an enum class is unstable (it appears to depend on the value rather than the type). With the test file below compiled by ACLiC (for example) running the script:; ```python; import ROOT. ROOT.gSystem.Load(""enums_cxx""). h = ROOT.Holder(); for i in range(10, 0, -1):; h.SetTwo(i); ROOT.to_string(h.two); ```; gives; ```txt; Calling to_string for enum EOne with 0; Calling to_string for enum EOne with 1; ...; ```. I.e. even-though the argument is an 'enum ETwo', the overload take an `enum EOne` actually called. In the original example (requires the code for Celeritas and VecGeom to build). For a similar script:; ```python; for i in range(0, 14, 1):; p.process_class = i; ROOT.celeritas.to_cstring(p.process_class); ```; I get:. ```txt; to_cstring ImportPhysicsVectorType called with 0 unknown; to_cstring ImportPhysicsVectorType called with 1 linear; to_cstring ImportPhysicsVectorType called with 2 log; to_cstring ImportPhysicsVectorType called with 3 free; to_cstring ImportTableType called with 4 ionisation_subsec; to_cstring ImportTableType called with 5 csda_range; to_cstring ImportTableType called with 6 range; to_cstring ImportTableType called with 7 secondary_range; to_cstring ImportTableType called with 8 inverse_range; to_cstring ImportTableType called with 9 lambda; to_cstring ImportTableType called with 10 sublambda; to_cstring ImportTableType called with 11 lambda_prim; to_cstring ImportProcessType called with 12 ucn; to_cstring ImportProcessClass called with 13 annihilation; ```. i.e. the *same* code line given the *same* data members (and thus always the *same* type), call 3 different overloads over the loop iterations. (Funnily running the loop in reverse order leads to the expected/correct executions). I could not reproduce this instability with my simple example. . ```c++; #include <stdio.h>; #include <string>. enum class EOne; {; a,; b,; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7077:324,Load,Load,324,https://root.cern,https://github.com/root-project/root/issues/7077,1,['Load'],['Load']
Performance,"With modules, we have autoloading of library feature; (LazyFunctionCreatorAutoloadForModule) so we can load TRandom function.; Thus, we don't have to explicitly load MathCore. It improves memory by 3Mbytes; Patch by Oksana and me :D",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2854:103,load,load,103,https://root.cern,https://github.com/root-project/root/pull/2854,2,['load'],['load']
Performance,"With multiple concurrent `RNTupleFillContext`s, the order of clusters is generally indeterminate and entries are only partially ordered. With staged cluster committing, this restriction can be partially lifted by splitting a cluster commit into two phases:; 1. Once full, or when manually triggered, all fields are committed which triggers flushing of all columns. All pages are compressed and staged via the page sink. The result is a `RStagedCluster` that records all information for the second phase. This step can be repeated multiple times as entries are filled into the context.; 2. When appropriate for the application, all staged clusters can be committed, which logically appends them to the RNTuple. This is implemented in a single critical section, which guarantees that the clusters and their entries are consecutive. Moreover, by synchronizing the second phase between multiple contexts, the application can enforce a total ordering of all contained entries at reasonable resource consumption: During the first phase, all write buffers are flushed and will be reused for the following cluster. The metadata stored in `RStagedCluster` should require only minimal memory, which will accumulate while staging more clusters. Staged cluster committing is expected to be slightly slower than the default mode, but should still scale well as the second phase only updates the metadata which is a lightweight operation compared to preparing and filling entries, compressing pages, and writing them to disk. A noteworthy disadvantage is that staged cluster committing will lead to non-linear files, where sequentially iterating over clusters may require seeking to distant file offsets. The impact resulting from this will depend on the storage technology and the read pattern. Closes #16326",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16343:14,concurren,concurrent,14,https://root.cern,https://github.com/root-project/root/pull/16343,1,['concurren'],['concurrent']
Performance,"With optimizations in Cling on Apple M1, it happens that `RuntimeDyld` sees subtraction relocations for minuends in functions that are not in the `GlobalSymbolTable`. Skip over them and do nothing instead of dereferencing an `end()` iterator and crashing. Disclaimer: This is a hack that likely addresses a symptom instead of the cause - there really shouldn't be such relocations. However, this approach is definitely better than crashing and works for the test cases that run into this.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10050:5,optimiz,optimizations,5,https://root.cern,https://github.com/root-project/root/pull/10050,1,['optimiz'],['optimizations']
Performance,"With optimizations in Cling on Apple M1, it happens that `RuntimeDyld` sees subtraction relocations for minuends in functions that are not in the `GlobalSymbolTable`. Skip over them and do nothing instead of dereferencing an `end()` iterator and crashing. Disclaimer: This is a hack that likely addresses a symptom instead of the cause - there really shouldn't be such relocations. However, this approach is definitely better than crashing and works for the test cases that run into this. (cherry picked from commit d6104649df2fea76793a4b3d59d9d8dc63130167). Backport of PR #10050.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10084:5,optimiz,optimizations,5,https://root.cern,https://github.com/root-project/root/pull/10084,1,['optimiz'],['optimizations']
Performance,"With previous chrome it was possible to launch it as fork of main root process. With very recent chrome it is no longer possible. Therefore use exec instead. Moreover, one need to add artificial `--dump-dom >/dev/null` to really let chrome wait for not-loaded `root_batch_holder.js` script while headless session is running. Should fix problem with `macphsft26` and latest OpenSUSE",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12789:253,load,loaded,253,https://root.cern,https://github.com/root-project/root/pull/12789,2,['load'],['loaded']
Performance,"With the current logic, if for some reason fAutoFlush is set to 0; for the TTree, the TTreeCache is disabled.; That is undesirable: we still can and want to do pre-fetching even; if auto-flushing was turned off when writing the TTree. Other more direct methods to turn off the TTreeCache still work,; e.g. tree->SetCacheSize(0). ## Checklist:. - [x] tested changes locally (complicated because of https://github.com/root-project/root/issues/7366 , but seems mostly ok) ; - [ ] updated the docs (@pcanal let me know if there are docs to update); - [x] could we set the cachesize to a better value than the autoflush default of ~30MB?. This PR fixes #8713 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8714:568,cache,cachesize,568,https://root.cern,https://github.com/root-project/root/pull/8714,1,['cache'],['cachesize']
Performance,"With the function `RooDataHist::interpolateLinear` it is now possible to use; `RooDataHist::weights()` (implemented in https://github.com/root-project/root/pull/11171) to evaluate weights for one; dimensional histograms with up to first order interpolation. `RooDataHist::interpolateLinear` finds the coefficients of a straight line; between two neighboring bin centers by solving a system of two linear; equations. With the coefficients of the straight line, the interpolated weight; for an event between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; neighboring bin to the left. If the event is to the right of the bin center,; the weight is found by inteperpolating between the current bin center and the; one to the right. For the first and last bin, the interpolation is performed; either by mirroring the histogram outside its boundaries, or by applying cdf; boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateLinear()` when the interpolation order is one.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they call `RooDatahist::weights()` in the cases; where the histogram is one dimensional and the interpolation order is zero or; one. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11211:917,perform,performed,917,https://root.cern,https://github.com/root-project/root/pull/11211,1,['perform'],['performed']
Performance,"With the function `RooDataHist::interpolateQuadratic()` it is now possible to; use `RooDataHist::weights()` (implemented in #11171) to evaluate weights for; one dimensional histograms with up to second order interpolation. The structure of `RooDataHist::interpolateQuadratic()` is similar to that of; `RooDataHist::interpolateLinear()`, which was implemented in #11211; It finds the coefficients of a second order polynomial between three; neighboring bin centers by solving a system of three quadratic equations. With; the coefficients of the quadratic function, the interpolated weight for an event; between two bin centers can be calculated. If an event in a bin is to the left of the bin center coordinates, the; corresponding weight is found by interpolating between the current bin and the; two neighboring bins to the left. If the event is to the right of the bin center,; the weight is found by interpolating between the current bin center, one bin to; the the left and one bin to the right. For the first two bins and the last bin,; the interpolation is performed either by mirroring the histogram outside its; boundaries or by applying cdf boundaries. `RooDataHist::weights()` has been updated so that it calls; `RooDataHist::interpolateQuadratic()` when the interpolation order is two.; Furthermore, `RooDataHist::computeBatch()` and `RooHistFunc::computeBatch()`; have been updated so that they always call RooDatahist::weights() in the case; where the histogram is one dimensional. Since the old interpolation; implementation `RooDataHist::interpolateDim()` only supported up to second; order interpolation, it has been completely replaced by; `RooDataHist::interpolateLinear()` and `RooDataHist::interpolateQuadratic()`; in these `computeBatch()` functions in the case of one dimensional histograms. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11224:1063,perform,performed,1063,https://root.cern,https://github.com/root-project/root/pull/11224,1,['perform'],['performed']
Performance,"With the upgrade to llvm13, `llvm::orc::ResourceTracker` takes care of deleting the code sections upon unloading:; ```; #0 llvm::sys::Memory::releaseMappedMemory (M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/Support/Unix/Memory.inc:162; #1 0x00007fffee4988ab in llvm::(anonymous namespace)::DefaultMMapper::releaseMappedMemory (; this=0x7ffff6a3c620 <llvm::(anonymous namespace)::DefaultMMapperInstance>, M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:263; #2 0x00007fffee498701 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:237; #3 0x00007fffee4987a0 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:239; #4 0x00007fffee41a1b4 in std::default_delete<llvm::RuntimeDyld::MemoryManager>::operator() (this=0x5555587feb70, ; __ptr=0x5555588b0570) at /usr/include/c++/11/bits/unique_ptr.h:85; #5 0x00007fffee418420 in std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >::~unique_ptr (this=0x5555587feb70, __in_chrg=<optimized out>); at /usr/include/c++/11/bits/unique_ptr.h:361; #6 0x00007fffee41f27f in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> > > (__pointer=0x5555587feb70) at /usr/include/c++/11/bits/stl_construct.h:151; #7 0x00007fffee41e671 in std::_Destroy_aux<false>::__destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:163; #8 0x00007fffee41cf98 in std::_Destroy<std::unique_ptr<ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10898:664,optimiz,optimized,664,https://root.cern,https://github.com/root-project/root/issues/10898,2,['optimiz'],['optimized']
Performance,"With this (large) patch, RAction, RFilter, RDefine, RRange and RVariation learn how to operate on ranges of N masked entries instead of one entry at a time. Currently ranges are always of size 1, but most of RDF's internal logic has been parameterized over that size. Notably, RAction, RFilter, RDefine and RDefineReader should be now almost completely ""bulkified"" while RVariation and other column readers (e.g. RVariationReader and RTreeColumnReader) still have some logic that assumes a bulk size of 1 (e.g. they only store a single result/value at a time). **Note**: This is still a draft PR because the performance impact of these changes, when using a bulk size of 1, seems to be significant.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11517:608,perform,performance,608,https://root.cern,https://github.com/root-project/root/pull/11517,1,['perform'],['performance']
Performance,"With this PR one can setup the options for the ADAM minimizer,; ADAM_beta1, ADAM_beta2 and ADAM_eps.; Example is provided in the TMVA_Higgs_Classification.C tutorial. This has been requested in https://root-forum.cern.ch/t/setting-adam-optimizer-parameters/43450",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7318:236,optimiz,optimizer-parameters,236,https://root.cern,https://github.com/root-project/root/pull/7318,1,['optimiz'],['optimizer-parameters']
Performance,"With this PR, a proper exception is thrown when a user tries to load an out-of-bounds RNTuple entry (instead of aborting due to a failed assert statement).; To prevent the `RColumn` destructor from attempting to again clean up the page for the entry that was (potentially) loaded prior to attempting to read the out-bounds entry, `fReadPage` in `RColumn` is reset to a null page before attempting to populate it. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14129:64,load,load,64,https://root.cern,https://github.com/root-project/root/pull/14129,2,['load'],"['load', 'loaded']"
Performance,"With this change, fields are only added to the `REntry` and read when they are referenced in the processor loop. This prevents unecessary reads of unused fields. It also makes the REntry completely transparent from an interface perspective. Pointers to values can be obtained through the processor interface itself *before* the iteration starts, or alternatively via the iterator returned by the processor. Important to note that during iteration, the pointer returned by `RNTupleProcessor::GetPtr` will **not** contain the value for the current entry. The reason for this is that from the `RNTupleProcessor` interface there is (with the current implementation) no way to know what the current entry index is. For now, `RNTupleProcessor::GetPtr` contains a warning and a recommendation to get the pointer through the iterator instead. Alternative solutions could be:; 1. Remove `RNTupleProcessor::GetPtr` altogether and only allow access to the field value pointers through the iterator.; 2. Dispatch the local entry index from `RState` back to the processor on every `Advance`, and (re)load the entry when `RNTupleProcessor::GetPtr` is called. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15939:1087,load,load,1087,https://root.cern,https://github.com/root-project/root/pull/15939,1,['load'],['load']
Performance,"Without it the following TFile::Open call using the CACHEREAD option; will not work as intended:; inputFile = TFile::Open(inputFileLink, ""CACHEREAD"");",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5944:52,CACHE,CACHEREAD,52,https://root.cern,https://github.com/root-project/root/pull/5944,2,['CACHE'],['CACHEREAD']
Performance,"Without modules, many STL and libc headers are automatically; provided by ROOT via the attached ROOT PCH. This means that; we don't need to have autloading or explicit includes for STL; or libc headers when running with the PCH attached. This leads; to making user code like this working in ROOT:. ```C++; // no includes here that provides assert; int foo() {; assert(false);; }; ```. However, as the modules don't come with this big PCH, we; are now suddenly in the situation where we can't resolve; things such as `assert`. We also can't rely on the; normal autoloading of ROOT as those declarations were; actually never autoloaded, but just provided by the PCH. To simulate this behavior with modules, we automatically load; those headers that we expect to have in the ROOT PCH; (which are probably the STL and libc headers).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1317:722,load,load,722,https://root.cern,https://github.com/root-project/root/pull/1317,1,['load'],['load']
Performance,Without this it currently works fine because RDataFrame does not rewind a DataSource while doing a run on it. However the new RCombinedDS (a RDataSource which iterates on the cartesian product of two other datasources) which I just implemented exposes the issue because the above mentioned condition is not true anymore. This corrects the bug by effectively moving the cached cursor.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3428:369,cache,cached,369,https://root.cern,https://github.com/root-project/root/pull/3428,1,['cache'],['cached']
Performance,Workaround for multi-threaded environment; Ensure main thread id picked when canvas implementation is created otherwise it may be assigned in other thread and screw-up `gPad` access. Workaround may not work if main thread id was wrongly initialized before. This resolves issue https://github.com/root-project/root/issues/15498,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15825:15,multi-thread,multi-threaded,15,https://root.cern,https://github.com/root-project/root/pull/15825,1,['multi-thread'],['multi-threaded']
Performance,Workaround for multi-threaded environment; Ensure main thread id picked when canvas implementation is created otherwise it may be assigned in other thread and screw-up gPad access. Workaround may not work if main thread id was wrongly initialized before. This resolves issue https://github.com/root-project/root/issues/15498. Backport of #15825,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15830:15,multi-thread,multi-threaded,15,https://root.cern,https://github.com/root-project/root/pull/15830,1,['multi-thread'],['multi-threaded']
Performance,Wrong optimization was used.; Fixes https://root-forum.cern.ch/t/35782/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4290:6,optimiz,optimization,6,https://root.cern,https://github.com/root-project/root/pull/4290,1,['optimiz'],['optimization']
Performance,Wrong optimization was used.; Fixes https://root-forum.cern.ch/t/35782/. @Axel-Naumann Can you open branch for commits again?,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4292:6,optimiz,optimization,6,https://root.cern,https://github.com/root-project/root/pull/4292,1,['optimiz'],['optimization']
Performance,"X] Checked for duplicates. ### Description. This https://github.com/root-project/root/pull/14703 (my guess on the changes, I did not confirm that this is the case) seems to have caused issues in python projects depending on root. E.g. https://lcgapp-services.cern.ch/cdash/testDetails.php?test=23867111&build=312289 ; ```; # setting LC_ALL to ""C""; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/python/GaudiPython/__init__.py"", line 29, in <module>; from .Bindings import * # noqa: F401 F403; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/python/GaudiPython/Bindings.py"", line 55, in <module>; import cppyy; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/lib/cppyy/__init__.py"", line 71, in <module>; from ._cpython_cppyy import *; File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/lib/cppyy/_cpython_cppyy.py"", line 18, in <module>; c = loader.load_cpp_backend(); File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-el9-gcc11-opt/lib/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; ```. and many others in the list https://lcgapp-services.cern.ch/cdash/viewTest.php?onlyfailed&buildid=312289. Are we missing some required changes to build options?. ### Reproducer. On any centos7 machine with cvmfs (or use available stack for your OS); ```; source /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc11-dbg/setup.sh; python -c ""import GaudiPython""; ```. ### ROOT version. Master from tonight.; Things were fine yesterday. ### Installation method. build from sources in lcgcmake, options https://gitlab.cern.ch/sft/lcgcmake/-/blob/master/projects/CMakeLists.txt#L95. ### Operating system. centos7, alma9, alma8, ubuntu20, ubuntu22. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14904:1053,load,loader,1053,https://root.cern,https://github.com/root-project/root/issues/14904,4,['load'],"['load', 'loader']"
Performance,[6-12-backport][cling] Resize the memory cache before entering the loop.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3728:41,cache,cache,41,https://root.cern,https://github.com/root-project/root/pull/3728,1,['cache'],['cache']
Performance,[6-14-backport][cling] Resize the memory cache before entering the loop.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3726:41,cache,cache,41,https://root.cern,https://github.com/root-project/root/pull/3726,1,['cache'],['cache']
Performance,[6-16-backport][cling] Resize the memory cache before entering the loop.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3727:41,cache,cache,41,https://root.cern,https://github.com/root-project/root/pull/3727,1,['cache'],['cache']
Performance,[6.32] Clean RDF caches of Dask workers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16117:17,cache,caches,17,https://root.cern,https://github.com/root-project/root/pull/16117,1,['cache'],['caches']
Performance,[Build system] Add script to load envvars to CTestCustom.cmake,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5532:29,load,load,29,https://root.cern,https://github.com/root-project/root/pull/5532,1,['load'],['load']
Performance,[CI] load openstack credentials from file,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201:5,load,load,5,https://root.cern,https://github.com/root-project/root/pull/12201,1,['load'],['load']
Performance,[CMAKE] Make CXX_FLAGS on Mac cache variables.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5220:30,cache,cache,30,https://root.cern,https://github.com/root-project/root/pull/5220,1,['cache'],['cache']
Performance,[CMake] Make CXX_FLAGS_<BuildType> cache variables for linux.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4196:35,cache,cache,35,https://root.cern,https://github.com/root-project/root/pull/4196,1,['cache'],['cache']
Performance,[CMake][PyROOT] Backport 6.22: Cache PyROOT variables needed by root-config --config,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5928:31,Cache,Cache,31,https://root.cern,https://github.com/root-project/root/pull/5928,1,['Cache'],['Cache']
Performance,[CMake][PyROOT] Cache PyROOT variables needed by root-config --config,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5906:16,Cache,Cache,16,https://root.cern,https://github.com/root-project/root/pull/5906,1,['Cache'],['Cache']
Performance,[Core][Cont] TRefArray: force the loading of the referenced branch when accessing by index,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16246:34,load,loading,34,https://root.cern,https://github.com/root-project/root/pull/16246,1,['load'],['loading']
Performance,[Cxxmodules] Rely LazyFunctionAutoLoad for loading libraries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2559:43,load,loading,43,https://root.cern,https://github.com/root-project/root/pull/2559,1,['load'],['loading']
Performance,[D54097]Optimize clang::ASTReader by using DenseMap instead of vector,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2903:8,Optimiz,Optimize,8,https://root.cern,https://github.com/root-project/root/pull/2903,1,['Optimiz'],['Optimize']
Performance,[DF] Add support and tests for concurrent usage of different RDF objects from different threads,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15080:31,concurren,concurrent,31,https://root.cern,https://github.com/root-project/root/issues/15080,1,['concurren'],['concurrent']
Performance,[DF] Add tutorial to illustrate cache,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2277:32,cache,cache,32,https://root.cern,https://github.com/root-project/root/pull/2277,1,['cache'],['cache']
Performance,[DF] Allow running on a subset of the entries also in multi-thread runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7702:54,multi-thread,multi-thread,54,https://root.cern,https://github.com/root-project/root/issues/7702,1,['multi-thread'],['multi-thread']
Performance,[DF] Bogus data read from indexed friend trees in multi-thread runs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12260:50,multi-thread,multi-thread,50,https://root.cern,https://github.com/root-project/root/issues/12260,1,['multi-thread'],['multi-thread']
Performance,[DF] Crash in multi-thread Snapshot in sub-directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8226:14,multi-thread,multi-thread,14,https://root.cern,https://github.com/root-project/root/issues/8226,1,['multi-thread'],['multi-thread']
Performance,[DF] Fix rare race condition: TTreeReader and its values deleted concurrently,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2956:14,race condition,race condition,14,https://root.cern,https://github.com/root-project/root/pull/2956,2,"['concurren', 'race condition']","['concurrently', 'race condition']"
Performance,[DF] Fixed ambiguous calls to Cache and Display,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2515:30,Cache,Cache,30,https://root.cern,https://github.com/root-project/root/pull/2515,1,['Cache'],['Cache']
Performance,[DF] Jit and exec Cache together with the rest,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6590:18,Cache,Cache,18,https://root.cern,https://github.com/root-project/root/pull/6590,1,['Cache'],['Cache']
Performance,[DF] Performance fixes in presence of a large number of Defines,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3448:5,Perform,Performance,5,https://root.cern,https://github.com/root-project/root/pull/3448,1,['Perform'],['Performance']
Performance,[DF] RDataFrame's FromNumpy silently loads wrong values if input arrays have a stride,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13690:37,load,loads,37,https://root.cern,https://github.com/root-project/root/issues/13690,1,['load'],['loads']
Performance,[DF] Remove performance overhead in construction of RSampleInfo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12174:12,perform,performance,12,https://root.cern,https://github.com/root-project/root/pull/12174,1,['perform'],['performance']
Performance,"[DF] Use LoadTree(0), not GetEntry(0), to reset TChain state",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3001:9,Load,LoadTree,9,https://root.cern,https://github.com/root-project/root/pull/3001,1,['Load'],['LoadTree']
Performance,[DF] Use SparkContext attribute to optimize npartitions,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9216:35,optimiz,optimize,35,https://root.cern,https://github.com/root-project/root/pull/9216,1,['optimiz'],['optimize']
Performance,[DF] Wrong entries are loaded from friend trees with distributed RDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10872:23,load,loaded,23,https://root.cern,https://github.com/root-project/root/issues/10872,1,['load'],['loaded']
Performance,[DF][NFC] Improve Cache documentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2537:18,Cache,Cache,18,https://root.cern,https://github.com/root-project/root/pull/2537,1,['Cache'],['Cache']
Performance,[DF][NFC] Minor fixes to Cache,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6584:25,Cache,Cache,25,https://root.cern,https://github.com/root-project/root/pull/6584,1,['Cache'],['Cache']
Performance,[Exp PyROOT] Test pyunittests-dataframe-cache enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4123:40,cache,cache,40,https://root.cern,https://github.com/root-project/root/pull/4123,1,['cache'],['cache']
Performance,[Exp PyROOT] Update loader with new use of CLING_STANDARD_PCH,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3581:20,load,loader,20,https://root.cern,https://github.com/root-project/root/pull/3581,1,['load'],['loader']
Performance,[Fix][graf2d] Fix drawing performance of marker styles 6 and 7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6027:26,perform,performance,26,https://root.cern,https://github.com/root-project/root/pull/6027,2,['perform'],['performance']
Performance,[FreeBSD] library load/unload order vs atexit registered dtors - makes tests fail,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13172:18,load,load,18,https://root.cern,https://github.com/root-project/root/issues/13172,1,['load'],['load']
Performance,[I/O] Race condition when reading vectors with custom allocators with TTreeProcessorMT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10357:6,Race condition,Race condition,6,https://root.cern,https://github.com/root-project/root/issues/10357,1,['Race condition'],['Race condition']
Performance,[I/O][RDF] Usage of xrootd from multi-thread event loops runs into severe bottlenecks,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12621:32,multi-thread,multi-thread,32,https://root.cern,https://github.com/root-project/root/issues/12621,2,"['bottleneck', 'multi-thread']","['bottlenecks', 'multi-thread']"
Performance,"[IO] Use a unique, temporary name while writing a file to cache",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9479:58,cache,cache,58,https://root.cern,https://github.com/root-project/root/pull/9479,1,['cache'],['cache']
Performance,[PyROOT] Can't trivially `gSystem.Load()` libraries compiled with ACLiC on macOS 14,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13734:34,Load,Load,34,https://root.cern,https://github.com/root-project/root/issues/13734,1,['Load'],['Load']
Performance,"[PyROOT] For MacOs12 with soversion, try to load libcppyy_backend wit…",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9725:44,load,load,44,https://root.cern,https://github.com/root-project/root/pull/9725,1,['load'],['load']
Performance,[PyROOT] Importing ROOT in JupyterLab reduces kernel performance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7684:53,perform,performance,53,https://root.cern,https://github.com/root-project/root/issues/7684,1,['perform'],['performance']
Performance,[PyROOT] Optimize value printing by jitting only once per type,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13876:9,Optimiz,Optimize,9,https://root.cern,https://github.com/root-project/root/pull/13876,1,['Optimiz'],['Optimize']
Performance,[PyROOT] Perform function-style casts when returning multi-keyword types,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16197:9,Perform,Perform,9,https://root.cern,https://github.com/root-project/root/pull/16197,1,['Perform'],['Perform']
Performance,[PyROOT][DF] Improve RDataFrame.AsNumpy performance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6496:40,perform,performance,40,https://root.cern,https://github.com/root-project/root/pull/6496,1,['perform'],['performance']
Performance,"[RDF] Re-enable all of dataframe_{cache,simple,interface}",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2066:34,cache,cache,34,https://root.cern,https://github.com/root-project/root/pull/2066,2,['cache'],['cache']
Performance,[RDataFrame] Unable to cacheread remote file,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15028:23,cache,cacheread,23,https://root.cern,https://github.com/root-project/root/issues/15028,1,['cache'],['cacheread']
Performance,[RF] Add an optimization for computation of integrals of Conditional Prod PDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7178:12,optimiz,optimization,12,https://root.cern,https://github.com/root-project/root/pull/7178,1,['optimiz'],['optimization']
Performance,[RF] Avoid code duplication in RooAddModel cache generation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11139:43,cache,cache,43,https://root.cern,https://github.com/root-project/root/pull/11139,1,['cache'],['cache']
Performance,[RF] Change buffer management in BatchMode such that queues get cleared,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10736:53,queue,queues,53,https://root.cern,https://github.com/root-project/root/pull/10736,2,['queue'],['queues']
Performance,[RF] Defer loading of `RooBatchCompute` libs to first RooFitDriver use,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9915:11,load,loading,11,https://root.cern,https://github.com/root-project/root/pull/9915,1,['load'],['loading']
Performance,[RF] Don't copy expensive object cache pointers in RooAbsArg.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6555:33,cache,cache,33,https://root.cern,https://github.com/root-project/root/pull/6555,2,['cache'],['cache']
Performance,[RF] Don't throw an error if `roobatchcompute` lib was already loaded,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12696:63,load,loaded,63,https://root.cern,https://github.com/root-project/root/pull/12696,1,['load'],['loaded']
Performance,[RF] Fix RooAddPdf::fixCoefRange cache issue with createIntegral,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10995:33,cache,cache,33,https://root.cern,https://github.com/root-project/root/pull/10995,1,['cache'],['cache']
Performance,[RF] Fix in RooAbsArg::optimizeCache for nodes with same name,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7280:23,optimiz,optimizeCache,23,https://root.cern,https://github.com/root-project/root/pull/7280,1,['optimiz'],['optimizeCache']
Performance,[RF] Implement binned fit optimization in BatchMode and other optimizations,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9423:26,optimiz,optimization,26,https://root.cern,https://github.com/root-project/root/pull/9423,2,['optimiz'],"['optimization', 'optimizations']"
Performance,[RF] Introducing binned likelihood fit optimization in HistFactory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10562:39,optimiz,optimization,39,https://root.cern,https://github.com/root-project/root/pull/10562,1,['optimiz'],['optimization']
Performance,[RF] Optimize code generated from `PiecewiseInterpolation` for use in AD,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15543:5,Optimiz,Optimize,5,https://root.cern,https://github.com/root-project/root/pull/15543,1,['Optimiz'],['Optimize']
Performance,[RF] Optimize new algo to figure out RooRealIntegral servers,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11619:5,Optimiz,Optimize,5,https://root.cern,https://github.com/root-project/root/pull/11619,1,['Optimiz'],['Optimize']
Performance,[RF] Remove cache sets in workspace when invalidated by object removal,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10952:12,cache,cache,12,https://root.cern,https://github.com/root-project/root/pull/10952,1,['cache'],['cache']
Performance,[RF] Reset cached normalization sets if servers are redirected,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9552:11,cache,cached,11,https://root.cern,https://github.com/root-project/root/pull/9552,1,['cache'],['cached']
Performance,[RF] RooAddPdf::fixCoefRange cache issue with createIntegral,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10988:29,cache,cache,29,https://root.cern,https://github.com/root-project/root/issues/10988,1,['cache'],['cache']
Performance,[RF] RooDataSet incorrectly loads RooCategory values from TTree branch of type Short_t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10278:28,load,loads,28,https://root.cern,https://github.com/root-project/root/issues/10278,1,['load'],['loads']
Performance,[RF] RooFit::TestStatistics performance fixes,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10832:28,perform,performance,28,https://root.cern,https://github.com/root-project/root/pull/10832,1,['perform'],['performance']
Performance,[RF] RooFitHS3 performance improvements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9728:15,perform,performance,15,https://root.cern,https://github.com/root-project/root/pull/9728,1,['perform'],['performance']
Performance,[RF] RooLagrangianMorphFunc class for performing effective lagrangian morphing,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7766:38,perform,performing,38,https://root.cern,https://github.com/root-project/root/pull/7766,1,['perform'],['performing']
Performance,[RF] Some performance improvements to RooFit likelihood creation and BatchMode,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12051:10,perform,performance,10,https://root.cern,https://github.com/root-project/root/pull/12051,1,['perform'],['performance']
Performance,[RF] Speed optimizations relevant for RooAbsCachedPdf,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10714:11,optimiz,optimizations,11,https://root.cern,https://github.com/root-project/root/pull/10714,1,['optimiz'],['optimizations']
Performance,[RF] Speed up RooDecay by at least a factor two by optimizing `evalCerf` in RooGaussModel,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9925:51,optimiz,optimizing,51,https://root.cern,https://github.com/root-project/root/pull/9925,1,['optimiz'],['optimizing']
Performance,[RF] investigate and fix MultiProcess::Queue test timeout,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15494:39,Queue,Queue,39,https://root.cern,https://github.com/root-project/root/issues/15494,1,['Queue'],['Queue']
Performance,[RF][NFC] Adjust threshold for cache checking in RooFit debug builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4382:31,cache,cache,31,https://root.cern,https://github.com/root-project/root/pull/4382,1,['cache'],['cache']
Performance,[RF][Tutorials] Avoid race condition in RooFit python tutorials,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8491:22,race condition,race condition,22,https://root.cern,https://github.com/root-project/root/pull/8491,1,['race condition'],['race condition']
Performance,[ROOT-9872] Enable nested namespace when loading enum fwdDecls,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3186:41,load,loading,41,https://root.cern,https://github.com/root-project/root/pull/3186,1,['load'],['loading']
Performance,[ROOT5] cint: implement a stat() call cache for G__matchfilename(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9010:38,cache,cache,38,https://root.cern,https://github.com/root-project/root/pull/9010,1,['cache'],['cache']
Performance,[RooFit] Fix race condition when running tutorial tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2936:13,race condition,race condition,13,https://root.cern,https://github.com/root-project/root/pull/2936,1,['race condition'],['race condition']
Performance,"[SaveGraph](https://root.cern/doc/master/namespaceROOT_1_1RDF.html#ac06a36e745255fb8744b1e0a563074c9) would benefit from the following improvements:. - [x] usage of static variables should be removed, in order to make `SaveGraph` safe to be called concurrently from multiple threads; - [x] a tutorial should be added, and an example usage should be included in the docs in the reference guide. ### Additional context; <!--; Add any other context about the problem here.; -->. Related old jira tickets:; - https://sft.its.cern.ch/jira/browse/ROOT-11023 (this is the original issue regarding the usage of statics in the implementation of SaveGraph); - https://sft.its.cern.ch/jira/browse/ROOT-9721 (this contains a draft tutorial and an old SaveGraph bug report)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9145:248,concurren,concurrently,248,https://root.cern,https://github.com/root-project/root/issues/9145,1,['concurren'],['concurrently']
Performance,[TChain] Do not try to look up index when loading non-existing entries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7364:42,load,loading,42,https://root.cern,https://github.com/root-project/root/pull/7364,1,['load'],['loading']
Performance,[TChain] Do not try to look up index when loading non-existing entries (v6.24),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7367:42,load,loading,42,https://root.cern,https://github.com/root-project/root/pull/7367,1,['load'],['loading']
Performance,[TChain] Do not try to retrieve the cache of a nullptr fTree,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5489:36,cache,cache,36,https://root.cern,https://github.com/root-project/root/pull/5489,1,['cache'],['cache']
Performance,[TCling][ROOT-9660] Do not fwd declare on library load enums Cling kows already,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3033:50,load,load,50,https://root.cern,https://github.com/root-project/root/pull/3033,1,['load'],['load']
Performance,[TDF] Add file cache size option setting to snapshot action,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/587:15,cache,cache,15,https://root.cern,https://github.com/root-project/root/pull/587,1,['cache'],['cache']
Performance,[TDF] Fix race condition,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/833:10,race condition,race condition,10,https://root.cern,https://github.com/root-project/root/pull/833,1,['race condition'],['race condition']
Performance,[TDF] Fix race condition in SnapshotImpl,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/784:10,race condition,race condition,10,https://root.cern,https://github.com/root-project/root/pull/784,1,['race condition'],['race condition']
Performance,[TDF] Implement Cache in terms of TLazyDS (ROOT-9226),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1884:16,Cache,Cache,16,https://root.cern,https://github.com/root-project/root/pull/1884,1,['Cache'],['Cache']
Performance,[TDF] Rework the cache test about non copiable items,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1134:17,cache,cache,17,https://root.cern,https://github.com/root-project/root/pull/1134,1,['cache'],['cache']
Performance,[TDF] optimizations to the event loop,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/442:6,optimiz,optimizations,6,https://root.cern,https://github.com/root-project/root/pull/442,1,['optimiz'],['optimizations']
Performance,[TMVA] API-Support for SGD Optimizer:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2309:27,Optimiz,Optimizer,27,https://root.cern,https://github.com/root-project/root/pull/2309,1,['Optimiz'],['Optimizer']
Performance,"[TMVA] API-Support for SGD Optimizer:; * Add Base Class VOptimizer.; * Add Derived Class TSGD with Momentum implementation.; * Add Unit Tests for SGD Optimizer.; * Modify the MethodDL Tests to include parsing options for Optimizer. An example Training Strategy string may look like,. ```; ""LearningRate=1e-1,Optimizer=SGD,Momentum=0.9,Repetitions=1,""; ""ConvergenceSteps=20,BatchSize=256,TestRepetitions=10,""; ""WeightDecay=1e-4,Regularization=L2,""; ""DropConfig=0.0+0.5+0.5+0.5, Multithreading=True""; ```. Reference Implementation: Tensorflow; Blog Post: https://www.sravikiran.com/GSOC18//2018/07/09/sgd/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2309:27,Optimiz,Optimizer,27,https://root.cern,https://github.com/root-project/root/pull/2309,4,['Optimiz'],['Optimizer']
Performance,[TMVA] Add API Support for Adadelta Optimizer.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2441:36,Optimiz,Optimizer,36,https://root.cern,https://github.com/root-project/root/pull/2441,1,['Optimiz'],['Optimizer']
Performance,[TMVA] Add API Support for Adagrad Optimizer.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2439:35,Optimiz,Optimizer,35,https://root.cern,https://github.com/root-project/root/pull/2439,1,['Optimiz'],['Optimizer']
Performance,[TMVA] Add API Support for Adam Optimizer.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2438:32,Optimiz,Optimizer,32,https://root.cern,https://github.com/root-project/root/pull/2438,1,['Optimiz'],['Optimizer']
Performance,[TMVA] Add API Support for RMSProp Optimizer:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2440:35,Optimiz,Optimizer,35,https://root.cern,https://github.com/root-project/root/pull/2440,1,['Optimiz'],['Optimizer']
Performance,[TMVA] Add capability to pass optimizer options in training string for MethodDL.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7318:30,optimiz,optimizer,30,https://root.cern,https://github.com/root-project/root/pull/7318,1,['optimiz'],['optimizer']
Performance,[TMVA] Add operations needed for performing optimizer updates:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2315:33,perform,performing,33,https://root.cern,https://github.com/root-project/root/pull/2315,2,"['optimiz', 'perform']","['optimizer', 'performing']"
Performance,[TMVA] DNN - Tune minimization test to avoid false positives,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1958:13,Tune,Tune,13,https://root.cern,https://github.com/root-project/root/pull/1958,1,['Tune'],['Tune']
Performance,[TMVA] Optimizer choice simplification,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3414:7,Optimiz,Optimizer,7,https://root.cern,https://github.com/root-project/root/pull/3414,1,['Optimiz'],['Optimizer']
Performance,[TMVA] Optimizer choice simplification (Update of #3414),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3493:7,Optimiz,Optimizer,7,https://root.cern,https://github.com/root-project/root/pull/3493,1,['Optimiz'],['Optimizer']
Performance,[TMVA] Refactor MethodDL Tests for Optimization.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2379:35,Optimiz,Optimization,35,https://root.cern,https://github.com/root-project/root/pull/2379,1,['Optimiz'],['Optimization']
Performance,[TMVA][SOFIE] Optimize Conv for large batch size,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11642:14,Optimiz,Optimize,14,https://root.cern,https://github.com/root-project/root/pull/11642,1,['Optimiz'],['Optimize']
Performance,[TREEPROCMT] Improve concurrency,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2143:21,concurren,concurrency,21,https://root.cern,https://github.com/root-project/root/pull/2143,1,['concurren'],['concurrency']
Performance,[TTreeCacheUnzip] [ROOT-9870] Uncompress the cache in parallel only if ImplicitMT is enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3173:45,cache,cache,45,https://root.cern,https://github.com/root-project/root/pull/3173,1,['cache'],['cache']
Performance,[TTreeProcessorMP] Warn if Process is called from a multi-thread program,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7167:52,multi-thread,multi-thread,52,https://root.cern,https://github.com/root-project/root/issues/7167,1,['multi-thread'],['multi-thread']
Performance,"[TTreeReader] Segfault when reading branch of ""automatically loaded"" friend",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6993:61,load,loaded,61,https://root.cern,https://github.com/root-project/root/issues/6993,1,['load'],['loaded']
Performance,"[This commit](https://github.com/root-project/root/commit/48bb3f69e0a7ab3641a5f10a189d89b214e0fb18#diff-1b09d441e22aa3d48c645df3c0ee3e713e400e82c58983e106fd58c6bfdb4d6fR184-R185) broke the following usecase by changing the return type of `RNTupleModel::GetField` from a non-const RFieldBase to a const RFieldBase. ```cpp; auto r = RNTupleReader::Open(""r"", fileGuard.GetPath());; const RFieldBase *rvecf = r->GetModel()->GetField(""v"");; // ERROR: GenerateValue is non-const, rvecf is a const pointer; auto rvecv = rvecf->GenerateValue();; ROOT::RVec<int> *v = rvecv.Get<ROOT::RVec<int>>();; ```. Before that commit, the above snippet was valid code, and there is no simple alternative. As per a discussion with @jblomer , the preferred solution would be to also make `RFieldBase::{GenerateValue,CaptureValue,DestroyValue}` const. However,. > reading an entry needs to be fixed up in this case. Because currently, LoadEntry iterates over the RFieldValues and calls Read on their associated fields. RField::Read() is non-const because a new page may need to be mapped in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10408:912,Load,LoadEntry,912,https://root.cern,https://github.com/root-project/root/issues/10408,1,['Load'],['LoadEntry']
Performance,"[This recent forum post](https://root-forum.cern.ch/t/error-with-rdataframe-for-tchain-loaded-with-ttrees-with-different-names/39322) brought to my attention that ROOT-10178 can result in _silent_ reads of wrong data, so I think it might be good to backport the fix to v6.20.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5590:87,load,loaded-with-ttrees-with-different-names,87,https://root.cern,https://github.com/root-project/root/pull/5590,1,['load'],['loaded-with-ttrees-with-different-names']
Performance,"[TreeProcMT] Always use global entry numbers. Specifically:; - always build one TChain per slot containing all input files, as; opposed to one TChain per task containing one file; - always do a preliminary pass over all input files to extract; cluster boundaries and entry numbers. This change, with its runtime performance penalty, is to restore sanity in; RDataFrame: RDF expects `TTreeReader::GetCurrentEntry` to return global; (and therefore unique) entry numbers. Internally the entry number is; used to check for hit/miss on cached results of Filters and Defines,; and it is also passed to users as a `rdfentry_` column, in which; case users expect global entry numbers to be returned. As a second step, and a mitigation for the performance drop, the preliminary file sweep could be parallelized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3051:312,perform,performance,312,https://root.cern,https://github.com/root-project/root/pull/3051,3,"['cache', 'perform']","['cached', 'performance']"
Performance,[VecOps] RVec 2.0: small buffer optimization based on LLVM SmallVector,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502:32,optimiz,optimization,32,https://root.cern,https://github.com/root-project/root/pull/7502,1,['optimiz'],['optimization']
Performance,[WIP] Load libCling with RTLD_DEEPBIND to avoid collissions of LLVM symbols,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668:6,Load,Load,6,https://root.cern,https://github.com/root-project/root/pull/4668,1,['Load'],['Load']
Performance,[WIP][PyROOT] Add test checking loaded libraries after import,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5256:32,load,loaded,32,https://root.cern,https://github.com/root-project/root/pull/5256,1,['load'],['loaded']
Performance,[ci] Optimize total build action time acting on compression of artifacts and releases,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15802:5,Optimiz,Optimize,5,https://root.cern,https://github.com/root-project/root/pull/15802,1,['Optimiz'],['Optimize']
Performance,[ci] Print CMake cache vars for incr build. [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12522:17,cache,cache,17,https://root.cern,https://github.com/root-project/root/pull/12522,1,['cache'],['cache']
Performance,[clang-analyzer-core.NullDereference]; 1: Assuming 'delta' is >= 'min_dec' in /opt/root_src/gui/gui/src/TGPack.cxx:532; 2: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:532; 3: 'f0' initialized to a null pointer value in /opt/root_src/gui/gui/src/TGPack.cxx:537; 4: Calling 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 5: Loop condition is false. Execution continues on line 226 in /opt/root_src/gui/gui/src/TGPack.cxx:217; 6: Returning without writing to 'f0' in /opt/root_src/gui/gui/src/TGPack.cxx:227; 7: Returning from 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 8: Assuming field 'fDragOverflow' is >= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:540; 9: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:540; 10: Assuming field 'fDragOverflow' is <= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:550; 11: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:550; 12: Access to field 'fFrame' results in a dereference of a null pointer (loaded from variable 'f0') in /opt/root_src/gui/gui/src/TGPack.cxx:561; /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53:12: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 2: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:37; 3: Assuming 'pname' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 4: Taking false branch in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:45; 5: Value assigned to field 'fImage' in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:49; 6: Assuming field 'fImage' is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 7: Left side of '||' is true in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:50; 8: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGShapedFrame.cxx:53; /opt/root_src/gui/gui/src/TGSpeedo.cxx:462:7: warning: Variable 'i' with floating point type 'Float_t' should not be used as a loop c,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:49264,load,loaded,49264,https://root.cern,https://github.com/root-project/root/issues/7533,1,['load'],['loaded']
Performance,"[cling,windows] Disable the `-O1` optimization flag on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9945:34,optimiz,optimization,34,https://root.cern,https://github.com/root-project/root/pull/9945,1,['optimiz'],['optimization']
Performance,[cling] Decls in an unnamed namespace cannot be looked up after a unload-load cycle,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7483:73,load,load,73,https://root.cern,https://github.com/root-project/root/issues/7483,1,['load'],['load']
Performance,[cling] Fix disabling optimizations with CLING_DEBUG,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14667:22,optimiz,optimizations,22,https://root.cern,https://github.com/root-project/root/pull/14667,1,['optimiz'],['optimizations']
Performance,[cling] Resize the memory cache before entering the loop.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3658:26,cache,cache,26,https://root.cern,https://github.com/root-project/root/pull/3658,1,['cache'],['cache']
Performance,[cling] Unroll the pointer-check cache loop.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2087:33,cache,cache,33,https://root.cern,https://github.com/root-project/root/pull/2087,1,['cache'],['cache']
Performance,[cling] Use TLS for pointer check cache:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2675:34,cache,cache,34,https://root.cern,https://github.com/root-project/root/pull/2675,1,['cache'],['cache']
Performance,[cmake] Enable clang's ThinLTO mode for Optimized builds,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1242:40,Optimiz,Optimized,40,https://root.cern,https://github.com/root-project/root/pull/1242,1,['Optimiz'],['Optimized']
Performance,[cmake] Load ctest envvars for Python vetos,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6271:8,Load,Load,8,https://root.cern,https://github.com/root-project/root/pull/6271,2,['Load'],['Load']
Performance,[cmake] fine-tune the builtin-afterimage flag removal,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15195:13,tune,tune,13,https://root.cern,https://github.com/root-project/root/pull/15195,1,['tune'],['tune']
Performance,[core] ACLiC: speed up building / loading:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8017:34,load,loading,34,https://root.cern,https://github.com/root-project/root/pull/8017,1,['load'],['loading']
Performance,[core] Do not complain about llvm symbols in process before loading libCling:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4736:60,load,loading,60,https://root.cern,https://github.com/root-project/root/pull/4736,1,['load'],['loading']
Performance,"[core] In ACLiC, do not reload loaded libraries.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5485:31,load,loaded,31,https://root.cern,https://github.com/root-project/root/pull/5485,1,['load'],['loaded']
Performance,[cxxmodules] Add LD_LIBRARY_PATH to the list of prebuilt module caches.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1761:64,cache,caches,64,https://root.cern,https://github.com/root-project/root/pull/1761,1,['cache'],['caches']
Performance,[cxxmodules] Allow overriding -fmodules-cache-path using CLING_MODULES_CACHE_PATH,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5100:40,cache,cache-path,40,https://root.cern,https://github.com/root-project/root/pull/5100,1,['cache'],['cache-path']
Performance,[cxxmodules] Allow rootcling to load system modules using the overlays.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1395:32,load,load,32,https://root.cern,https://github.com/root-project/root/pull/1395,1,['load'],['load']
Performance,[cxxmodules] Also load STL/libc as a core module,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1317:18,load,load,18,https://root.cern,https://github.com/root-project/root/pull/1317,1,['load'],['load']
Performance,[cxxmodules] Also load TreePlayer to fix TDataFrame tests.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1328:18,load,load,18,https://root.cern,https://github.com/root-project/root/pull/1328,1,['load'],['load']
Performance,[cxxmodules] Avoid loading more modules while instantiating templates,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13046:19,load,loading,19,https://root.cern,https://github.com/root-project/root/pull/13046,1,['load'],['loading']
Performance,[cxxmodules] Avoid loading more modules while instantiating templates [v6.28],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13050:19,load,loading,19,https://root.cern,https://github.com/root-project/root/pull/13050,1,['load'],['loading']
Performance,[cxxmodules] Check correctly if the decl was cached.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421:45,cache,cached,45,https://root.cern,https://github.com/root-project/root/pull/2421,1,['cache'],['cached']
Performance,[cxxmodules] Complain if we fail to load a module.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3714:36,load,load,36,https://root.cern,https://github.com/root-project/root/pull/3714,1,['load'],['load']
Performance,[cxxmodules] Directly load all headers with modules enabled,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1266:22,load,load,22,https://root.cern,https://github.com/root-project/root/pull/1266,1,['load'],['load']
Performance,[cxxmodules] Do not load modules from entire LD_LIBRARY_PATH.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4540:20,load,load,20,https://root.cern,https://github.com/root-project/root/pull/4540,1,['load'],['load']
Performance,[cxxmodules] Do not perform version checks for Vc. We do not link against libVc.a thus it makes no sense to check for version compatibility between libraries and header files. This fixes a bug where upon building the modules.idx we run the static ctor runLibraryAbiCheck which fails to find the corresponding symbol.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8788:20,perform,perform,20,https://root.cern,https://github.com/root-project/root/pull/8788,1,['perform'],['perform']
Performance,[cxxmodules] Do not push a transaction per LoadModule.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7398:43,Load,LoadModule,43,https://root.cern,https://github.com/root-project/root/pull/7398,1,['Load'],['LoadModule']
Performance,"[cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process.; ; The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::Add",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7398:43,Load,LoadModule,43,https://root.cern,https://github.com/root-project/root/pull/7398,5,"['Load', 'load', 'perform']","['LoadModule', 'load', 'loading', 'perform']"
Performance,[cxxmodules] Don't explicitly load MathCore for modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2854:30,load,load,30,https://root.cern,https://github.com/root-project/root/pull/2854,1,['load'],['load']
Performance,[cxxmodules] Don't load rdict for cxxmodules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2912:19,load,load,19,https://root.cern,https://github.com/root-project/root/pull/2912,1,['load'],['load']
Performance,[cxxmodules] Enable the semantic global module index to boost performance.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5884:62,perform,performance,62,https://root.cern,https://github.com/root-project/root/pull/5884,1,['perform'],['performance']
Performance,[cxxmodules] Fix typos in LoadCoreModules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1385:26,Load,LoadCoreModules,26,https://root.cern,https://github.com/root-project/root/pull/1385,1,['Load'],['LoadCoreModules']
Performance,[cxxmodules] Implement global module indexing to improve performance.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016:57,perform,performance,57,https://root.cern,https://github.com/root-project/root/pull/4016,1,['perform'],['performance']
Performance,[cxxmodules] Load core C++ modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1282:13,Load,Load,13,https://root.cern,https://github.com/root-project/root/pull/1282,1,['Load'],['Load']
Performance,[cxxmodules] Load libraries for each deserialized decls,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1882:13,Load,Load,13,https://root.cern,https://github.com/root-project/root/pull/1882,1,['Load'],['Load']
Performance,[cxxmodules] Load modulemap in current directory,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2375:13,Load,Load,13,https://root.cern,https://github.com/root-project/root/pull/2375,1,['Load'],['Load']
Performance,[cxxmodules] Load the dependent modules for both rootcling and rootcling_stage1,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5443:13,Load,Load,13,https://root.cern,https://github.com/root-project/root/pull/5443,1,['Load'],['Load']
Performance,[cxxmodules] Load the modules using the new LoadModule interface.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1362:13,Load,Load,13,https://root.cern,https://github.com/root-project/root/pull/1362,2,['Load'],"['Load', 'LoadModule']"
Performance,[cxxmodules] Load the rdict files after we load the module file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3967:13,Load,Load,13,https://root.cern,https://github.com/root-project/root/pull/3967,2,"['Load', 'load']","['Load', 'load']"
Performance,[cxxmodules] Only load modules if one was generated,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1511:18,load,load,18,https://root.cern,https://github.com/root-project/root/pull/1511,1,['load'],['load']
Performance,[cxxmodules] Optimize IsWrapper,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3593:13,Optimiz,Optimize,13,https://root.cern,https://github.com/root-project/root/pull/3593,1,['Optimiz'],['Optimize']
Performance,[cxxmodules] Optimize dyld to not scan through the C/C++ runtime.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4112:13,Optimiz,Optimize,13,https://root.cern,https://github.com/root-project/root/pull/4112,1,['Optimiz'],['Optimize']
Performance,[cxxmodules] Re-enable rootmap loading for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1263:31,load,loading,31,https://root.cern,https://github.com/root-project/root/pull/1263,1,['load'],['loading']
Performance,[cxxmodules] Reduce amout of loaded libraries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2009:29,load,loaded,29,https://root.cern,https://github.com/root-project/root/pull/2009,1,['load'],['loaded']
Performance,[cxxmodules] Refactor LoadCoreModules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1665:22,Load,LoadCoreModules,22,https://root.cern,https://github.com/root-project/root/pull/1665,1,['Load'],['LoadCoreModules']
Performance,[cxxmodules] Refactor LoadCoreModules and fix nullptr deref,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1391:22,Load,LoadCoreModules,22,https://root.cern,https://github.com/root-project/root/pull/1391,1,['Load'],['LoadCoreModules']
Performance,[cxxmodules] Refactor LoadCoreModules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1394:22,Load,LoadCoreModules,22,https://root.cern,https://github.com/root-project/root/pull/1394,1,['Load'],['LoadCoreModules']
Performance,[cxxmodules] Remove the requres objc clause allowing to load libGCoco…,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4812:56,load,load,56,https://root.cern,https://github.com/root-project/root/pull/4812,1,['load'],['load']
Performance,[cxxmodules] Rework the loading of the modulemap in the working dir.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3695:24,load,loading,24,https://root.cern,https://github.com/root-project/root/pull/3695,1,['load'],['loading']
Performance,[cxxmodules] Simplify LoadPCM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3715:22,Load,LoadPCM,22,https://root.cern,https://github.com/root-project/root/pull/3715,1,['Load'],['LoadPCM']
Performance,[cxxmodules] Sink the interface for loading a module in cling.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3444:36,load,loading,36,https://root.cern,https://github.com/root-project/root/pull/3444,1,['load'],['loading']
Performance,[cxxmodules] Update redeclaration chain after loading modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11423:46,load,loading,46,https://root.cern,https://github.com/root-project/root/pull/11423,1,['load'],['loading']
Performance,[cxxmodules] Use the API to load top level system modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1344:28,load,load,28,https://root.cern,https://github.com/root-project/root/pull/1344,1,['load'],['load']
Performance,[cxxmodules][cling] Avoid loading some unnecessary modules,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910:26,load,loading,26,https://root.cern,https://github.com/root-project/root/pull/10910,1,['load'],['loading']
Performance,[cxxmodules][wip] Add SetupModules call to load all available PCMs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1147:43,load,load,43,https://root.cern,https://github.com/root-project/root/pull/1147,1,['load'],['load']
Performance,[df] Cleanup execution artifacts from worker caches in Dask,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094:45,cache,caches,45,https://root.cern,https://github.com/root-project/root/pull/16094,1,['cache'],['caches']
Performance,[doxygen] load JSROOT only once when insert RCanvas drawings [skip-ci],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8132:10,load,load,10,https://root.cern,https://github.com/root-project/root/pull/8132,1,['load'],['load']
Performance,"[eve7] let use with multi-threaded app, fix cleanup",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7327:20,multi-thread,multi-threaded,20,https://root.cern,https://github.com/root-project/root/pull/7327,1,['multi-thread'],['multi-threaded']
Performance,"[eve7] optimize layout, separate GED,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4961:7,optimiz,optimize,7,https://root.cern,https://github.com/root-project/root/pull/4961,1,['optimiz'],['optimize']
Performance,[geo] fix TGeoManagerEditor::LoadLib,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11929:29,Load,LoadLib,29,https://root.cern,https://github.com/root-project/root/pull/11929,1,['Load'],['LoadLib']
Performance,[geom] Add cache layer for TGeoParallelWorld safeties in TGeoNavigator,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16470:11,cache,cache,11,https://root.cern,https://github.com/root-project/root/pull/16470,1,['cache'],['cache']
Performance,[gmi] Do not load all modules for a given identifier.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6190:13,load,load,13,https://root.cern,https://github.com/root-project/root/pull/6190,1,['load'],['load']
Performance,[gpadv7] Only load pointer lib once.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2676:14,load,load,14,https://root.cern,https://github.com/root-project/root/pull/2676,1,['load'],['load']
Performance,[graf2d] Remove `asimagexml.c` and `pixmap.c` from AfterImage due to license incompatibility. They were used by `load_xml2ASImage` to load xml to asimage. Almost not used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13736:134,load,load,134,https://root.cern,https://github.com/root-project/root/pull/13736,1,['load'],['load']
Performance,[hist] fine-tune getquantile computation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16801:12,tune,tune,12,https://root.cern,https://github.com/root-project/root/pull/16801,1,['tune'],['tune']
Performance,[hist_drawable] load ROOTHistDraw library in test macros ROOT-10336,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4517:16,load,load,16,https://root.cern,https://github.com/root-project/root/pull/4517,1,['load'],['load']
Performance,[jupyter] correctly load jsroot,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4652:20,load,load,20,https://root.cern,https://github.com/root-project/root/pull/4652,1,['load'],['load']
Performance,[math] Mark `TRandom3::Rndm()` and similar functions `final` for performance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12547:65,perform,performance,65,https://root.cern,https://github.com/root-project/root/issues/12547,1,['perform'],['performance']
Performance,[mathcore] Disable multi-thread tests when running without imt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9464:19,multi-thread,multi-thread,19,https://root.cern,https://github.com/root-project/root/pull/9464,1,['multi-thread'],['multi-thread']
Performance,[metacling] Optimize TCling*Info interfaces,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3616:12,Optimiz,Optimize,12,https://root.cern,https://github.com/root-project/root/pull/3616,1,['Optimiz'],['Optimize']
Performance,[metacling] Switch default cling optimization for ROOT to -O1.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9301:33,optimiz,optimization,33,https://root.cern,https://github.com/root-project/root/pull/9301,1,['optimiz'],['optimization']
Performance,[metcling] Disable optimized register allocation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9342:19,optimiz,optimized,19,https://root.cern,https://github.com/root-project/root/pull/9342,1,['optimiz'],['optimized']
Performance,"[ntuple,daos] Pool-wide permanent event queue; parent events",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10795:40,queue,queue,40,https://root.cern,https://github.com/root-project/root/pull/10795,1,['queue'],['queue']
Performance,[ntuple] (WIP) RNTuple page cache,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8634:28,cache,cache,28,https://root.cern,https://github.com/root-project/root/pull/8634,1,['cache'],['cache']
Performance,[ntuple] Add multi-threading support to RDF data source,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4240:13,multi-thread,multi-threading,13,https://root.cern,https://github.com/root-project/root/pull/4240,1,['multi-thread'],['multi-threading']
Performance,"[ntuple] Add new performance counters to `RPageSink{File,Daos}`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8328:17,perform,performance,17,https://root.cern,https://github.com/root-project/root/pull/8328,1,['perform'],['performance']
Performance,[ntuple] Add option to turn off tail page optimization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15243:42,optimiz,optimization,42,https://root.cern,https://github.com/root-project/root/pull/15243,1,['optimiz'],['optimization']
Performance,[ntuple] Add support for performance instrumentation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4300:25,perform,performance,25,https://root.cern,https://github.com/root-project/root/pull/4300,1,['perform'],['performance']
Performance,[ntuple] Add test for classes using empty base optimization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10481:47,optimiz,optimization,47,https://root.cern,https://github.com/root-project/root/pull/10481,1,['optimiz'],['optimization']
Performance,[ntuple] Add tutorial for multi-threaded filling,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8688:26,multi-thread,multi-threaded,26,https://root.cern,https://github.com/root-project/root/pull/8688,1,['multi-thread'],['multi-threaded']
Performance,[ntuple] Bulk read optimizations for RVec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13382:19,optimiz,optimizations,19,https://root.cern,https://github.com/root-project/root/pull/13382,1,['optimiz'],['optimizations']
Performance,[ntuple] Cache number of entries in RNTupleDescriptor,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9662:9,Cache,Cache,9,https://root.cern,https://github.com/root-project/root/pull/9662,1,['Cache'],['Cache']
Performance,[ntuple] Don't use RRawFile cache for page reads,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15257:28,cache,cache,28,https://root.cern,https://github.com/root-project/root/pull/15257,1,['cache'],['cache']
Performance,[ntuple] Fix loading of class for split collections,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12073:13,load,loading,13,https://root.cern,https://github.com/root-project/root/pull/12073,1,['load'],['loading']
Performance,[ntuple] Fix multi-threaded RDF tutorial,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4263:13,multi-thread,multi-threaded,13,https://root.cern,https://github.com/root-project/root/pull/4263,1,['multi-thread'],['multi-threaded']
Performance,[ntuple] Fix race condition in ~RNTupleReader(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7194:13,race condition,race condition,13,https://root.cern,https://github.com/root-project/root/pull/7194,1,['race condition'],['race condition']
Performance,[ntuple] Improve I/O and unzip queue management in `RClusterPool`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12044:31,queue,queue,31,https://root.cern,https://github.com/root-project/root/pull/12044,1,['queue'],['queue']
Performance,"[ntuple] Move common performance counters to `RPage{Sink,Source}` base class",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8360:21,perform,performance,21,https://root.cern,https://github.com/root-project/root/issues/8360,1,['perform'],['performance']
Performance,[ntuple] Optimize RColumnDescriptorIterable::CollectColumnIds,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14366:9,Optimiz,Optimize,9,https://root.cern,https://github.com/root-project/root/pull/14366,1,['Optimiz'],['Optimize']
Performance,[ntuple] Pending optimizations for storage of classes with an associated collection proxy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11671:17,optimiz,optimizations,17,https://root.cern,https://github.com/root-project/root/issues/11671,1,['optimiz'],['optimizations']
Performance,[ntuple] Performance visualization improvements,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8880:9,Perform,Performance,9,https://root.cern,https://github.com/root-project/root/pull/8880,1,['Perform'],['Performance']
Performance,"[ntuple] Provide a common set of performance counters in `RPage{Sink,Source}`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8397:33,perform,performance,33,https://root.cern,https://github.com/root-project/root/pull/8397,1,['perform'],['performance']
Performance,[ntuple] Report the branch name when a class cannot be loaded,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12019:55,load,loaded,55,https://root.cern,https://github.com/root-project/root/pull/12019,1,['load'],['loaded']
Performance,[ntuple] Simplify RPageSourceFriends::LoadClusters() implementation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9148:38,Load,LoadClusters,38,https://root.cern,https://github.com/root-project/root/pull/9148,1,['Load'],['LoadClusters']
Performance,[ntuple] Simplify `RPageSourceDaos::LoadClusters()`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13381:36,Load,LoadClusters,36,https://root.cern,https://github.com/root-project/root/pull/13381,1,['Load'],['LoadClusters']
Performance,[ntuple] Throw exception when trying to load out-of-bounds entries,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14129:40,load,load,40,https://root.cern,https://github.com/root-project/root/pull/14129,1,['load'],['load']
Performance,[ntuple] [WIP] Add asynchronous cluster cache,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4353:40,cache,cache,40,https://root.cern,https://github.com/root-project/root/pull/4353,1,['cache'],['cache']
Performance,[ntuple] `RClassField`: add support to load/store class hierarchies,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8552:39,load,load,39,https://root.cern,https://github.com/root-project/root/pull/8552,1,['load'],['load']
Performance,[ntuple] fix LoadSealedPage with DAOS/caging,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15892:13,Load,LoadSealedPage,13,https://root.cern,https://github.com/root-project/root/pull/15892,1,['Load'],['LoadSealedPage']
Performance,[ntuple] rename PopulatePage() --> LoadPage(),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16152:35,Load,LoadPage,35,https://root.cern,https://github.com/root-project/root/pull/16152,1,['Load'],['LoadPage']
Performance,[ntuple] split loading and processing meta-data,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15909:15,load,loading,15,https://root.cern,https://github.com/root-project/root/pull/15909,1,['load'],['loading']
Performance,[reve] Implement optimized digit visualization with ability to set generic digit shape,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14912:17,optimiz,optimized,17,https://root.cern,https://github.com/root-project/root/pull/14912,1,['optimiz'],['optimized']
Performance,[rntuple] Add performance counters to classes derived from `RPageSink`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8283:14,perform,performance,14,https://root.cern,https://github.com/root-project/root/issues/8283,1,['perform'],['performance']
Performance,"[skip-ci]. # This Pull request:. Makes the CI load OpenStack object-store credentials from files on runners instead of using GitHub secrets. When `pull_request` is a workflow trigger, the job can't access secrets, which means that the S3 secret token is unavailable. Adding S3 credentials to the runners themselves solves this issue. The OpenStack credentials are defined [here](https://gitlab.cern.ch/ai/it-puppet-hostgroup-lcgapp/-/blob/rootci_test/code/manifests/build/root.pp#L43) (using [teigi](https://configdocs.web.cern.ch/secrets/adding.html)). If a malicious actor makes a PR with a job to print the credentials, or to upload a malicious artifact, it would still have to be approved by a maintainer. A safer alternative is not allowing pull request jobs to upload artifacts at all but then we can't run tests in a separate job. It would also cause builds to take more time on average because the object storage will be less populated. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201:46,load,load,46,https://root.cern,https://github.com/root-project/root/pull/12201,1,['load'],['load']
Performance,"[skip-ci]; # This Pull request:. Adds a lot of changes to address; https://github.com/root-project/root/issues/12270; https://github.com/root-project/root/pull/12201#issuecomment-1417627970. ## Changes or fixes:. - Runs tests on CI (has to be done in the same job for now, at least on PR builds); - Disables use of OpenStack credentials in PR builds; - Loads OpenStack credentials from GitHub secrets on non-PR builds (i.e. valid secrets are no longer stored on runners); - Reduces verbosity in the config files; - Reduces permissions of the build workflow. It can now only read repository (when PR commenting is getting implemented it has to run in a separate workflow anyways); - Re-enables output buffering to improve performance, at the cost of stderr being redirected to stdout. Currently runs tests on **every** type of job, could look into ways to skip it under certain conditions. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12275:353,Load,Loads,353,https://root.cern,https://github.com/root-project/root/pull/12275,2,"['Load', 'perform']","['Loads', 'performance']"
Performance,"[static-lib-pcm-not-found.tar.gz](https://github.com/root-project/root/files/10179206/static-lib-pcm-not-found.tar.gz). With the attached file:; ```; mkdir static-pcm; cd static-pcm; tar xfz ../static-lib-pcm-not-found.tar.gz; ./build.sh; ```; we get:; ```; Error in <TCling::LoadPCM>: ROOT PCM /home/pcanal/root_working/test/2022-dict/bin/dict_rdict.pcm file does not exist; ```. This is because `TCling::Register` looks for the pcm in the directory in which the .o files was found at run-time. Usually it is found in a shared library. In this case we use a static library (and use the `TriggerDictionaryInitialization_modulename` function to load the dictionary) but, of course, the `pcm` file is in the `lib` directory and not along side the executable (i.e. the `bin` directory). We might want to add a fallback to look a bit further for the pcm files.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11852:276,Load,LoadPCM,276,https://root.cern,https://github.com/root-project/root/issues/11852,2,"['Load', 'load']","['LoadPCM', 'load']"
Performance,[tcling] Improve LoadPCM Diags,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4216:17,Load,LoadPCM,17,https://root.cern,https://github.com/root-project/root/pull/4216,1,['Load'],['LoadPCM']
Performance,[tcling] Temporarily disable loading rdict files.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4331:29,load,loading,29,https://root.cern,https://github.com/root-project/root/pull/4331,1,['load'],['loading']
Performance,[testing][cxxmodules] Load module in payload instead,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1370:22,Load,Load,22,https://root.cern,https://github.com/root-project/root/pull/1370,1,['Load'],['Load']
Performance,[tmva] Fix multi-threading issue with TMVA RReader,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16616:11,multi-thread,multi-threading,11,https://root.cern,https://github.com/root-project/root/pull/16616,1,['multi-thread'],['multi-threading']
Performance,[tmva] Import torch before loading libTMVA in TMVA PyTorch tutorials tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13674:27,load,loading,27,https://root.cern,https://github.com/root-project/root/pull/13674,1,['load'],['loading']
Performance,[tmva][pymva] Optimize Evaluation in PyKeras,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12261:14,Optimiz,Optimize,14,https://root.cern,https://github.com/root-project/root/pull/12261,1,['Optimiz'],['Optimize']
Performance,"[tree,io] prevent integer overflow when dealing with cachesize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14818:53,cache,cachesize,53,https://root.cern,https://github.com/root-project/root/pull/14818,1,['cache'],['cachesize']
Performance,[tree] prevent crash in LoadCurrentDim,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15176:24,Load,LoadCurrentDim,24,https://root.cern,https://github.com/root-project/root/pull/15176,1,['Load'],['LoadCurrentDim']
Performance,[v624][RF] Reset cached normalization sets if servers are redirected,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9560:17,cache,cached,17,https://root.cern,https://github.com/root-project/root/pull/9560,1,['cache'],['cached']
Performance,[v626][RF] Defer loading of `RooBatchCompute` libs to first RooFitDriver use,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9921:17,load,loading,17,https://root.cern,https://github.com/root-project/root/pull/9921,1,['load'],['loading']
Performance,[v630] Remove concurrent usage of TClass::TestBit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15360:14,concurren,concurrent,14,https://root.cern,https://github.com/root-project/root/pull/15360,1,['concurren'],['concurrent']
Performance,[v632] Remove concurrent usage of TClass::TestBit,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15359:14,concurren,concurrent,14,https://root.cern,https://github.com/root-project/root/pull/15359,1,['concurren'],['concurrent']
Performance,[v632] [PyROOT] Perform function-style casts when returning multi-keyword types,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16199:16,Perform,Perform,16,https://root.cern,https://github.com/root-project/root/pull/16199,1,['Perform'],['Perform']
Performance,[v632][BP][tree] prevent crash in LoadCurrentDim,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15220:34,Load,LoadCurrentDim,34,https://root.cern,https://github.com/root-project/root/pull/15220,1,['Load'],['LoadCurrentDim']
Performance,[v7tut] Explicitly load libROOTGpadv7: function-autoloading does not work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3960:19,load,load,19,https://root.cern,https://github.com/root-project/root/pull/3960,1,['load'],['load']
Performance,[web geom] optimize raw and JSON data for geometry viewer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4173:11,optimiz,optimize,11,https://root.cern,https://github.com/root-project/root/pull/4173,1,['optimiz'],['optimize']
Performance,[webcanvas] fix update optimization,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13116:23,optimiz,optimization,23,https://root.cern,https://github.com/root-project/root/pull/13116,1,['optimiz'],['optimization']
Performance,[webcanvas] fix update optimization [6.28],MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13117:23,optimiz,optimization,23,https://root.cern,https://github.com/root-project/root/pull/13117,1,['optimiz'],['optimization']
Performance,[webgui6] let load custom JS code when painting canvas,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4094:14,load,load,14,https://root.cern,https://github.com/root-project/root/pull/4094,1,['load'],['load']
Performance,[webgui] always use relative path when loading JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10692:39,load,loading,39,https://root.cern,https://github.com/root-project/root/pull/10692,1,['load'],['loading']
Performance,"[webgui] significantly optimize round-trip latency, provide tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7777:23,optimiz,optimize,23,https://root.cern,https://github.com/root-project/root/pull/7777,2,"['latency', 'optimiz']","['latency', 'optimize']"
Performance,"[x] Checked for duplicates. ### Describe the bug; Error message. `Error in <TCling::LoadPCM>: ROOT PCM <root_build_directory/bin/library_rdict.pcm> file does not exist`. is printed when a dynamic library is loaded in the ROOT prompt, even when the appropriate *_rdict.pcm file exists in the same directory as the library. ### Expected behavior; ROOT should search both the $LD_LIBRARY_PATH and the directory where the library is located for the *_rdict.pcm file. ### To Reproduce; Load a dynamic library with ; `gROOT->ProcessLine("".L path_to_library.dylib"")`; or equivalent. ### Setup; 1. ROOT 6.27/01; 2. macOS 11.4; 3. built from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9697:84,Load,LoadPCM,84,https://root.cern,https://github.com/root-project/root/issues/9697,3,"['Load', 'load']","['Load', 'LoadPCM', 'loaded']"
Performance,"\n"";. // The model can now be applied in different scenarios:; // 1) Event-by-event inference; // 2) Batch inference on data of multiple events; // 3) Model inference as part of an RDataFrame graph. // 1) Event-by-event inference; // The event-by-event inference takes the values of the variables as a std::vector<float>.; // Note that the return value is as well a std::vector<float> since the reader; // is also capable to process models with multiple outputs.; auto prediction = model.Predict({0.5, 1.0, -0.2, 1.5});; std::cout << ""Single-event inference: "" << prediction << ""\n\n"";. // 2) Batch inference on data of multiple events; // For batch inference, the data needs to be structured as a matrix. For this; // purpose, TMVA makes use of the RTensor class. For convenience, we use RDataFrame; // and the AsTensor utility to make the read-out from the ROOT file.; ROOT::RDataFrame df(""TreeS"", filename);; auto df2 = df.Range(3); // Read only 10 events; auto x = AsTensor<float>(df2, variables);; std::cout << ""RTensor input for inference on data of multiple events:\n"" << x << ""\n\n"";. auto y = model.Predict(x);; std::cout << ""Prediction performed on multiple events: "" << y << ""\n\n"";. // 3) Perform inference as part of an RDataFrame graph; // We write a small lambda function that performs for us the inference on; // a dataframe to omit code duplication.; auto make_histo = [&](const std::string &treename) {; ROOT::RDataFrame df(treename, filename);; auto df2 = df.Define(""y"", Predict<4, float>(model), variables);; return df2.Histo1D({"""", """", 30, -1, 1}, ""y"");; };. auto sig = make_histo(""TreeS"");; auto bkg = make_histo(""TreeB"");. gStyle->SetOptStat(0);; auto c = new TCanvas("""", """", 800, 800);; sig->SetLineColor(kRed);; bkg->SetLineColor(kBlue);; bkg->GetXaxis()->SetTitle(""Model response"");; bkg->Draw(""HIST"");; sig->Draw(""HIST SAME"");; c->SaveAs(""bdt_response.pdf"");; }; ```. ![x](https://user-images.githubusercontent.com/6951222/51740397-2f295f80-2094-11e9-8c29-b40bc618a4bc.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3321:1994,perform,performed,1994,https://root.cern,https://github.com/root-project/root/pull/3321,3,"['Perform', 'perform']","['Perform', 'performed', 'performs']"
Performance,"]]; 0x7f1034059fab dlopen_doit ??:0 + 0x7f1034059fab [/lib64/libdl.so.2 D[0xfab]]; 0x7f1034a6f7d4 _dl_catch_error ??:0 + 0x7f1034a6f7d4 [/lib64/ld-linux-x86-64.so.2 D[0xf7d4]]; 0x7f103405a5ad _dlerror_run ??:0 + 0x7f103405a5ad [/lib64/libdl.so.2 D[0x15ad]]; 0x7f103405a041 dlopen@@GLIBC_2.2.5 ??:0 + 0x31 [/lib64/libdl.so.2 D[0x1041]]; 0x7f100b3323d4 ath_dlopen ??:0 + 0x84 [/build/atnight/localbuilds/nightlies/master--dev3LCG/build/build/Athena/x86_64-centos7-gcc11-opt/lib/libAthDSoCallBacks.so D[0x13d4]]; 0x7f103405a05a dlopen@@GLIBC_2.2.5 ??:0 + 0x4a [/lib64/libdl.so.2 D[0x105a]]; 0x7f102c046c45 cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) ??:0 + 0x7f102c046c45 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xc69c45]]; 0x7f102bf3eff1 cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) ??:0 + 0x7f102bf3eff1 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xb61ff1]]; 0x7f102be771c6 TCling::Load(char const*, bool) ??:0 + 0x1a6 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xa9a1c6]]; 0x7f1031ec07c9 TSystem::Load(char const*, char const*, bool) ??:0 + 0x799 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCore.so D[0x2117c9]]; 0x7f1031e4ec71 TROOT::LoadClass(char const*, char const*, bool) ??:0 + 0x71 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCore.so D[0x19fc71]]; 0x7f102be752c3 TCling::ShallowAutoLoadImpl(char const*) ??:0 + 0x2e3 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xa982c3]]; 0x7f102be8c0c4 TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11933:8601,load,loadLibrary,8601,https://root.cern,https://github.com/root-project/root/issues/11933,1,['load'],['loadLibrary']
Performance,"_ changing the `return` statement as follows; ```diff; - return histograms;; + return {h};; ```. ### To Reproduce; The issue can be reproduced with the following code in ArchLinux x86_64 with ROOT master:; ```c++; vector<ROOT::RDF::RResultPtr<TH1D>> pointer_not_allocated_error(){; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);. // Define a new column `x` that contains random numbers and create a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff73f1ba0 <main_arena>, p=0x55555e7134c0, have_lock=have_lock@entry=0) at malloc.c:4469; #7 0x00007ffff72af9f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3385; #8 0x00007ffff18d07b4 in std::_Vector_base<ROOT::RDF::RResultPtr<TH1D>, std::allocator<ROOT::RDF::RResultPtr<TH1D> > >::~_Vector_base (this=0x55555881f7",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11494:1596,optimiz,optimized,1596,https://root.cern,https://github.com/root-project/root/issues/11494,1,['optimiz'],['optimized']
Performance,"_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdCl/XrdClSyncQueue.hh:67; #3 XrdCl::JobManager::RunJobs (this=0x7ee4680) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:146; #4 0x00007f9331a0e989 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:33; #5 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #6 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 3 (Thread 0x7f9331141700 (LWP 8835)):; #0 0x00007f9369a57e9d in nanosleep () from /lib64/libpthread.so.0; #1 0x00007f9331b1dded in XrdSysTimer::Wait (mills=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysTimer.cc:239; #2 0x00007f93319b2118 in XrdCl::TaskManager::RunTasks (this=0x7ee9660) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:244; #3 0x00007f93319b2269 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:37; #4 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #5 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7f9331942700 (LWP 8834)):; #0 0x00007f9369779fd3 in epoll_wait () from /lib64/libc.so.6; #1 0x00007f9331b22c17 in XrdSys::IOEvents::PollE::Begin (this=0x7efc120, syncsem=<",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7496:3985,optimiz,optimized,3985,https://root.cern,https://github.com/root-project/root/issues/7496,1,['optimiz'],['optimized']
Performance,"_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113; #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292; #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564; #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0; #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700; #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:10183,optimiz,optimized,10183,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,"_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:15563,optimiz,optimized,15563,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:16869,optimiz,optimized,16869,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:12951,optimiz,optimized,12951,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:9033,optimiz,optimized,9033,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:14257,optimiz,optimized,14257,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:7727,optimiz,optimized,7727,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:10339,optimiz,optimized,10339,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:11645,optimiz,optimized,11645,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:20846,optimiz,optimized,20846,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:29494,optimiz,optimized,29494,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:22159,optimiz,optimized,22159,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:30807,optimiz,optimized,30807,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:23472,optimiz,optimized,23472,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:32120,optimiz,optimized,32120,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:19533,optimiz,optimized,19533,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:28181,optimiz,optimized,28181,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, local",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:27037,optimiz,optimized,27037,https://root.cern,https://github.com/root-project/root/issues/15970,6,['optimiz'],['optimized']
Performance,"__assert_fail_base.cold.0 () from /lib64/libc.so.6; #3 0x00007ffff66bb3a6 in __assert_fail () from /lib64/libc.so.6; #4 0x00007fffe0dea553 in RooSTLRefCountList<RooAbsArg>::size (this=0x1aa32f8); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113; #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153; #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211; #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870; #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847; #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923; #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832; #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830; #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,; prototype=<optimized out>, auxProto=0x0, verbose=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63; #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,; auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55; #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototy",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547:1581,optimiz,optimized,1581,https://root.cern,https://github.com/root-project/root/issues/9547,2,['optimiz'],['optimized']
Performance,_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:403; 11: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 12: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 13: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:406; /opt/root_src/tmva/tmva/src/Reader.cxx:443:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:432; 2: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:435; 3: Assuming 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 7: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:440; 8: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 10: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:443; /opt/root_src/tmva/tmva/src/Reader.cxx:535:22: warning: Called C,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:113327,load,loaded,113327,https://root.cern,https://github.com/root-project/root/issues/7526,1,['load'],['loaded']
Performance,"_t &treenum); //Then, when GetEntryAndTree(21, treenum, kTRUE) is called, first entry of the; //third sublist will be returned; ; + std::cout << ""Got input index: "" << index << ""\n"";; ```; ```; --- a/tree/treeplayer/src/TTreeReader.cxx; +++ b/tree/treeplayer/src/TTreeReader.cxx; @@ -18,6 +18,7 @@; #include ""TTreeReaderValue.h""; #include ""TFriendProxy.h""; ; +#include <iostream>; ; // clang-format off; /**; @@ -547,6 +548,7 @@ TTreeReader::EEntryStatus TTreeReader::SetEntryBase(Long64_t entry, Bool_t local; const Long64_t loadResult = treeToCallLoadOn->LoadTree(entryAfterList);; fSetEntryBaseCallingLoadTree = kFALSE;; ; + std::cout << ""With entryAfterList="" << entryAfterList <<"" got loadResult="" << loadResult << ""\n"";; ```. I get the following output; ```; $: ./repro.o; std::numeric_limits<int>::max(): 2147483647; Total entries in chain: 2168958436; Total entries in entrylist: 2168958436; Giving input entry 2147483647; Got input index: 2147483647; Got tree index 100 and entry index 47; Giving input entry 2147483648; Got input index: -2147483648; Got tree index -1 and entry index -1; Got input index: -2147483648; With entryAfterList=1616 got loadResult=1616; What is the entry status? not kEntryBeyondEnd; ```. ## Things to notice. The total number of entries in the chain/tentrylist is larget than `std::numeric_limits<int>::max()`. With the first call to `GetEntryAndTree`, I give as input exactly the int limit, and the output is correct (index of the tree = 100, index of the entry in that tree = 47). With the next call, the input is the int limit + 1, from which one would expect the same tree and just one entry beyond the previous one, i.e. 48. Instead the result is tree index = -1 and entry index = -1. This is a bug resulting from a wrong signature in `TEntryList::GetEntryAndTree`:; https://github.com/root-project/root/blob/8323e504ae187954dcb9bcdfd5df2f9a5ed2abca/tree/tree/src/TEntryList.cxx#L831. Which should accept a `Long64_t` like all other places in the class where",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11026:3541,load,loadResult,3541,https://root.cern,https://github.com/root-project/root/issues/11026,1,['load'],['loadResult']
Performance,"_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106; #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466; #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630; #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,; dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431; #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",; ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273; #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",; ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607; #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:3244,optimiz,optimized,3244,https://root.cern,https://github.com/root-project/root/pull/2776,10,['optimiz'],['optimized']
Performance,"_x86-64/GCC-Toolchain/v12.2.0-alice1-5/include/c++/12.2.0/bits/unique_ptr.h:191; #19 0x00007fa76afa4b02 in TCling::ProcessLineSynch (this=0x16e7bc0, line=0x16e8930 "".X /home/tdietel/alice/data/ole/./sortbug.C+"", error=0x7fff0771f04c); at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:3554; #20 0x00007fa7711777e7 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fff0771f04c, keep=<optimized out>) at /jenkins/workspace/build-any-ib; /sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/base/src/TApplication.cxx:1661; #21 0x00007fa77172040c in TRint::ProcessLineNr (this=0x16b4f60, filestem=<optimized out>, line=0x7fff0771f060 "".x sortbug.C+"", error=0x7fff0771f04c) at /; jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:820; #22 0x00007fa771721fc6 in TRint::Run (this=this; entry=0x16b4f60, retrn=retrn; entry=false) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:461; #23 0x00000000004011dd in main (argc=<optimized out>, argv=0x7fff077211e8) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-0; 4/main/src/rmain.cxx:84; ```. I assume the bug can be triggered with other data sets in plain ROOT. If needed, I could try to strip things down, but I don't know if this is the most efficient use of my time. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 10 2023, 10:38:00 |; | From tags/v6-28-04@v6-28-04 |; | With c++ (GCC) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Built with alibuild. ### Operating system. CentOS 7, Ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:9573,optimiz,optimized,9573,https://root.cern,https://github.com/root-project/root/issues/13314,1,['optimiz'],['optimized']
Performance,"`#include <foo.h>` isn't looked up again after calling `gInterpreter->AddIncludePath()`. We also need a test for a file that gets included, isn't found, is then created by the user, and must then be successfully included (i.e. lookup failure must not be cached.)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12778:254,cache,cached,254,https://root.cern,https://github.com/root-project/root/issues/12778,1,['cache'],['cached']
Performance,"`-D` shouldn't be emitted, so the build will work. ### To Reproduce. I'm building with Spack:; <details><summary>Spack concretization</summary><pre>; - root@6.26.06%apple-clang@13.1.6~aqua~davix~dcache~emacs~examples~fftw~fits~fortran+gdml+gminimal~graphviz~gsl~http~ipo~jemalloc~math~memstat+minuit~mlp~mysql~opengl~oracle~postgres~pythia6~pythia8+python~qt4~r+roofit~root7+rpath~shadow~spectrum~sqlite~ssl~table~tbb+threads~tmva+unuran~vc+vdt~veccore~vmc~x+xml~xrootd build_type=RelWithDebInfo cxxstd=17 patches=22af347 arch=darwin-monterey-m1; [+] ^cmake@3.24.1%apple-clang@13.1.6~doc+ncurses+ownlibs~qt build_type=Release arch=darwin-monterey-m1; [+] ^freetype@2.11.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^bzip2@1.0.8%apple-clang@13.1.6~debug~pic+shared arch=darwin-monterey-m1; [+] ^gnuconfig@2021-08-14%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libpng@1.6.37%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^zlib@1.2.12%apple-clang@13.1.6+optimize+pic+shared patches=0d38234 arch=darwin-monterey-m1; [+] ^pkgconf@1.8.0%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libice@1.0.9%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^util-macros@1.19.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^xproto@7.0.31%apple-clang@13.1.6 arch=darwin-monterey-m1; [-] ^pkgconf@1.9.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^xtrans@1.3.5%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libjpeg-turbo@2.1.3%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^cmake@3.24.1%apple-clang@13.1.6~doc+ncurses+ownlibs~qt build_type=Release arch=darwin-monterey-m1; [+] ^nasm@2.15.05%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^libxml2@2.10.1%apple-clang@13.1.6~python arch=darwin-monterey-m1; [+] ^libiconv@1.16%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^xz@5.2.5%apple-clang@13.1.6~pic libs=shared,static arch=darwin-monterey-m1; [+] ^lz4@1.9.3%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^ncurses@5.7.20081102%apple-clang@13.1.6~sym",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11312:7642,optimiz,optimize,7642,https://root.cern,https://github.com/root-project/root/issues/11312,1,['optimiz'],['optimize']
Performance,"`RClusterDescriptor::ContainsColumn` is called as part of the main read; path and so is a candidate for optimization efforts:. ```; RColumn::MapPage; RPageSourceFile::PopulatePage; RNTupleDescriptor::FindClusterId; RClusterDescriptor::ContainsColumn; ```. A comparison of the test case `ntuple_extended` using perf and g++ 9.3; found that `unordered_map::find` appeared to be faster than; `unordered_map::count`. The generated assembly was also shorter for `find`. perf output for `ROOT::Experimental::RClusterDescriptor::ContainsColumn`:. ```; count: 4.67% 4.67% ntuple_extended libROOTNTuple.so; find: 3.85% 3.85% ntuple_extended libROOTNTuple.so; ```; I'm not sure if I entirely trust the results, because I am running inside a VM. But for every test iteration `find` has been faster than `count`. I do think having better assembly generation for `find` is more persuasive than just the percentage difference. <details>; <summary> Assembly comparison </summary>. ```; 4.67% 4.67% ntuple_extended libROOTNTuple.so [.] ROOT::Experimental::RClusterDescriptor::ContainsColumn; unordered_map.count; Percent│ Disassembly of section .text:; │; │ 0000000000074d80 <ROOT::Experimental::RClusterDescriptor::ContainsColumn(unsigned long) const>:; │ _ZNK4ROOT12Experimental18RClusterDescriptor14ContainsColumnEm():; 1.20 │ mov 0x60(%rdi),%r8; 36.14 │ mov %rsi,%rax; 2.41 │ xor %edx,%edx; │ div %r8; 3.61 │ mov 0x58(%rdi),%rax; 2.41 │ mov (%rax,%rdx,8),%rax; 30.12 │ mov %rdx,%r10; 1.20 │ test %rax,%rax; │ ↓ je 70; │ mov (%rax),%rcx; │ test %rcx,%rcx; │ ↓ je 70; │ mov 0x8(%rcx),%rdi; 21.69 │ xor %r9d,%r9d; │ ↓ jmp 4e; │ nop; │30: test %r9,%r9; │ ↓ jne 78; │ mov (%rcx),%rcx; │ test %rcx,%rcx; │ ↓ je 5f; │3d: mov 0x8(%rcx),%rdi; │ xor %edx,%edx; │ mov %rdi,%rax; │ div %r8; │ cmp %rdx,%r10; │ ↓ jne 5f; │4e: cmp %rsi,%rdi; │ ↑ jne 30; 1.20 │ mov (%rcx),%rcx; │ add $0x1,%r9; │ test %rcx,%rcx; │ ↑ jne 3d; │5f: test %r9,%r9; │ setne %al; │ ← retq; │ nop; │70: xor %eax,%eax; │ ← retq; │ nop; │78: mov $0x1,%ea",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8209:104,optimiz,optimization,104,https://root.cern,https://github.com/root-project/root/pull/8209,1,['optimiz'],['optimization']
Performance,"`TCling.cxx`’s `RegisterCxxModules` loads explicitly several modules including `Core`, `Rint` and `RIO`. When executing rootcling (for example for G__Net.cxx) *before* `G__Rint.cxx` was created and thus before `lib/Rint.pcm` was properly created, a default `lib/Rint.pcm` is auto-generated and registered as one of the dependencies. Later the real `lib/Rint.pcm` is created is creation date is later than other `pcm` than depends-on/uses it’s creation time. For example:. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. then later uses of those `pcm` leads to the (mis-worded) error message:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. See the related circumstances in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/39. The stack trace that was triggers the auto-generation of `Rint.pcm`. at /home/pcanal/root_working/code/master/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; at /home/pcanal/root_working/code/master/interpreter/cling/lib/Interpreter/Interprete",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11687:36,load,loads,36,https://root.cern,https://github.com/root-project/root/pull/11687,1,['load'],['loads']
Performance,"``; [mkrzewic@hack ~/build/root]$ lldb bin/root.exe; (lldb) target create ""bin/root.exe""; Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64).; (lldb) run; Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64); interpArgs.size(): 20; interpArgs[0]: cling4root; interpArgs[1]: -DNDEBUG; interpArgs[2]: -UDEBUG; interpArgs[3]: -U_DEBUG; interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/; interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling; interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include; interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/; interpArgs[8]: -Wno-undefined-inline; interpArgs[9]: -fsigned-char; interpArgs[10]: -O1; interpArgs[11]: -mllvm; interpArgs[12]: -optimize-regalloc=0; interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap; interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib; interpArgs[15]: -fmodules; interpArgs[16]: -fno-implicit-module-maps; interpArgs[17]: -Rmodule-build; interpArgs[18]: -fno-autolink; interpArgs[19]: --ptrcheck; Process 35096 stopped; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; libc.so.7`__sys_thr_kill:; -> 0x8279b9dca <+10>: jb 0x8279b7f28; 0x8279b9dd0 <+16>: retq; 0x8279b9dd1: int3; 0x8279b9dd2: int3; (lldb) bt; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; frame #1: 0x00000008279326f4 libc.so.7`__raise + 52; frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73; frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73; frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111; frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195; f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14075:1190,cache,cache-path,1190,https://root.cern,https://github.com/root-project/root/issues/14075,1,['cache'],['cache-path']
Performance,"```. And then run; ```; git clone https://github.com/andresailer/dictfailure.git; cd dictfailure; mkdir build; cd build; cmake ..; make; python ../fail.py; ```. The python ends up with; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class myProject::dict::DictCreation with content:. #line 1 ""G__DDDict dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include <string>; namespace myProject {; namespace sim {; class TypeName : public std::pair<std::string, std::string> {; public:; TypeName(const std::pair<std::string, std::string>& c); : std::pair<std::string, std::string>(c) {}; /// Initializing constructor; TypeName(const std::string& typ, const std::string& nam); : std::pair<std::string, std::string>(typ, nam) {}; };; } // End namespace sim; } // End namespace myProject. namespace myProject {; namespace dict {; struct DictCreation {; };; } // dict; } //myProject. typedef myProject::dict::DictCreation DictCreation;. #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ class myProject::dict::DictCreation;. #endif //cint and __friends__. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class myProject::dict::DictCreation is available even though it has a TClass initialization routine.; <class cppyy.gbl.myProject.dict.DictCreation at 0x8cda7c0>; ```. ### ROOT version. Broken: 6-32-00 patches, master; Working: 6-30-00 patches, From Tuesday April 4 and earlier releases of ROOT . ### Installation method. LCG stacks. ### Operating system. Alma9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221:1952,Load,LoadClassInfo,1952,https://root.cern,https://github.com/root-project/root/issues/15221,3,['Load'],['LoadClassInfo']
Performance,"```; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007ff62fe1bdba in __GI___wait4 (pid=227643, stat_loc=stat_loc; entry=0x7ffe314e7e68, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007ff62fe1bd7b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffe314e7e68, options=options; entry=0) at waitpid.c:38; #2 0x00007ff62fd8b0e7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007ff630445bfe in TUnixSystem::StackTrace() () from /home/sakib/root/lib/libCore.so.6.24; #4 0x00007ff630442a85 in TUnixSystem::DispatchSignals(ESignals) () from /home/sakib/root/lib/libCore.so.6.24; #5 <signal handler called>; #6 0x00007ff62be79d78 in (anonymous namespace)::ScalarExprEmitter::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation, (anonymous namespace)::ScalarExprEmitter::ScalarConversionOpts) () from /home/sakib/root/lib/libCling.so; #7 0x00007ff62be7c77b in clang::CodeGen::CodeGenFunction::EmitScalarConversion(llvm::Value*, clang::QualType, clang::QualType, clang::SourceLocation) () from /home/sakib/root/lib/libCling.so; #8 0x00007ff62be2dfcf in clang::CodeGen::CodeGenFunction::EvaluateExprAsBool(clang::Expr const*) () from /home/sakib/root/lib/libCling.so; #9 0x00007ff62bc077f5 in clang::CodeGen::CodeGenFunction::EmitForStmt(clang::ForStmt const&, llvm::ArrayRef<clang::Attr const*>) () from /home/sakib/root/lib/libCling.so; #10 0x00007ff62bc05848 in clang::CodeGen::CodeGenFunction::EmitStmt(clang::Stmt const*, llvm::ArrayRef<clang::Attr const*>) () from /home/sakib/root/lib/libCling.so; #11 0x00007ff62bc05979 in clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CodeGen::AggValueSlot) () from /home/sakib/root/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8367:463,optimiz,optimized,463,https://root.cern,https://github.com/root-project/root/issues/8367,2,['optimiz'],['optimized']
Performance,"```; *************************************************************; Geant4 version Name: geant4-10-03-patch-03 [MT] (20-October-2017); << in Multi-threaded mode >> ; Copyright : Geant4 Collaboration; Reference : NIM A 506 (2003), 250-303; WWW : http://cern.ch/geant4; *************************************************************. Checking overlaps for volume NaI ... OK! ; Checking overlaps for volume collimator ... OK! ; Checking overlaps for volume glass ... OK! . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f075f899687 in __GI___waitpid (pid=2927, stat_loc=stat_loc; entry=0x7ffd2902c628, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30; #1 0x00007f075f804067 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149; #2 0x00007f0765354577 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55935a0857c0) at /home/yasmin/root/root-6.12.06/core/unix/src/TUnixSystem.cxx:2118; #3 TUnixSystem::StackTrace (this=0x55935a0857c0) at /home/yasmin/root/root-6.12.06/core/unix/src/TUnixSystem.cxx:2412; #4 0x00007f0765356c9c in TUnixSystem::DispatchSignals (this=0x55935a0857c0, sig=kSigSegmentationViolation) at /home/yasmin/root/root-6.12.06/core/unix/src/TUnixSystem.cxx:3643; #5 <signal handler called>; #6 0x00007f0761bb4118 in G4RToEConvForGamma::BuildAbsorptionLengthVector(G4Material const*, G4PhysicsLogVector*) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4processes.so; #7 0x00007f0761bb6c3f in G4VRangeToEnergyConverter::Convert(double, G4Material const*) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4processes.so; #8 0x00007f0761bb0bee in G4ProductionCutsTable::UpdateCoupleTable(G4VPhysicalVolume*) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4processes.so; #9 0x00007f0763b9c5e2 in G4RunManagerKernel::RunInitializ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9952:141,Multi-thread,Multi-threaded,141,https://root.cern,https://github.com/root-project/root/issues/9952,2,"['Multi-thread', 'optimiz']","['Multi-threaded', 'optimized']"
Performance,```; /opt/root_src/core/cont/inc/TBits.h:82:60: warning: Using copy-ctor but class TBits::TReference has a trivial copy-ctor but non trivial assign operator [clazy-rule-of-two-soft]; /opt/root_src/core/cont/inc/TBtree.h:248:40: warning: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDereference]; 1: Passing null pointer value via 2nd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1279; 2: Calling constructor for 'TBtInnerNode' in /opt/root_src/core/cont/src/TBtree.cxx:1279; 3: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:688; 4: Calling constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 15: Calling 'TBtInnerNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:690; 16: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:248; /opt/root_src/core/cont/inc/TBtree.h:314:41: warning: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDerefere,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:314,load,loaded,314,https://root.cern,https://github.com/root-project/root/issues/7424,1,['load'],['loaded']
Performance,```; Thread 6 (Thread 0x7f932f93e700 (LWP 8838)):; #0 0x00007f9369773d19 in syscall () from /lib64/libc.so.6; #1 0x00007f9331a0e79e in XrdSys::LinuxSemaphore::Wait (this=0x7ee4870) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysLinuxSemaphore.hh:161; #2 XrdCl::SyncQueue<XrdCl::JobManager::JobHelper>::Get (this=0x7ee4698) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdCl/XrdClSyncQueue.hh:67; #3 XrdCl::JobManager::RunJobs (this=0x7ee4680) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:146; #4 0x00007f9331a0e989 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:33; #5 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #6 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7f933013f700 (LWP 8837)):; #0 0x00007f9369773d19 in syscall () from /lib64/libc.so.6; #1 0x00007f9331a0e79e in XrdSys::LinuxSemaphore::Wait (this=0x7ee4870) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysLinuxSemaphore.hh:161; #2 XrdCl::SyncQueue<XrdCl::JobManager::JobHelper>::Get (this=0x7ee4698) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdCl/XrdClSyncQueue.hh:67; #3 XrdCl::JobManager::RunJobs (this=0x7ee4680) at /build/cmsbld/auto-builds/CM,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7496:940,optimiz,optimized,940,https://root.cern,https://github.com/root-project/root/issues/7496,1,['optimiz'],['optimized']
Performance,"```cpp; $ cat test.h; int add42(int i);. $ cat test.cpp; int add42(int i) {; return i + 42;; }. $ clang++ test.cpp -shared -fPIC -o libtest.so. $ root -l -b; root [0] #include ""test.h""; root [1] gSystem->Load(""./libtest.so""); (int) 0; root [2] add42(1) // postpone this and all is fine!!; (int) 43; root [3] gInterpreter->Declare(""double add42d(double d) { return d + 42.; }\nint add42(int i) { return i + 42; }""); [IncrementalJIT] addModule() failed: Duplicate definition of symbol '_Z5add42i'; (bool) true; root [4] add42d(1.) // innocent bystander; IncrementalExecutor::executeFunction: symbol '_Z6add42dd' unresolved while linking [cling interface function]!; You are probably missing the definition of add42d(double); Maybe you need to load the corresponding shared library?; root [5] ; ```. I believe the JIT considers `add42` as a strong symbol and when we re-define it we have a problem. I think this is the right behavior however we allowed this in the past and we might be breaking (sometimes silently) existing code. cc: @wlav",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12277:204,Load,Load,204,https://root.cern,https://github.com/root-project/root/issues/12277,2,"['Load', 'load']","['Load', 'load']"
Performance,"`fork()`-ing a multi-thread program typically ends up badly. In ROOT, TBB spawns threads when RTaskArena is constructed, and Cocoa spawns threads, on Mac, when graphics are activated. We would like to employ a similar mechanism to what is used to loop over threads to print their stacktraces on a crash in order to detect whether `TTreeProcessorMP::Process` is called from a multi-thread program, and warn users if so.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7167:15,multi-thread,multi-thread,15,https://root.cern,https://github.com/root-project/root/issues/7167,2,['multi-thread'],['multi-thread']
Performance,"`gInterpreter::ProcessLine` has an important run-time cost.; Instead of calling it everytime the jitting of an action is required, we now store all the strings that are to jit in TLoopManager and do a single call to `gInterpreter::ProcessLine` before running the event-loop. A couple of life-time issues had to be resolved for this to work properly: in order to let result proxies and action helpers share ownership of the result object, I introduced (simple) manual lifetime management of a shared_ptr (weird, I know). In order to deal with deferred jitting of an action that hangs from a node whose `TInterface` has already been destroyed (can happen due to the deferral of jitting) all `BuildAndBook` functions have been made independent of `TInterface`. In the long term it might be possible to refactor the jitting mechanism so that the `TAction` (and the `TTreeReaderValue/Array`s that it contains) is jitted but the action helpers are not, lifting the requirement of manual lifetime management of a shared_ptr. Although this should be possible in principle, I currently don't see how we could integrate it with the existing logic, so I decided for this much less invasive solution. Before/after runtimes for two extreme scenarios:. `test_inference.cxx` (which performs a lot of jitting).; compile time: ~8s -> ~9s; run time: ~40s -> ~7s. 50 jitted Histo1D calls in a loop (thanks to Attila for the use-case):; run time: ~35s -> <2s. This PR conflicts with #713 . Depending on which one gets merged first I will rebase the other.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/720:1267,perform,performs,1267,https://root.cern,https://github.com/root-project/root/pull/720,1,['perform'],['performs']
Performance,"a3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208; #35 _PyRun_SimpleFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:16782,optimiz,optimized,16782,https://root.cern,https://github.com/root-project/root/issues/15117,2,['optimiz'],['optimized']
Performance,"a3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208; #35 _PyRun_SimpleFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. Traceback (most recent call last):; File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>; repro.foo(cppyy.gbl.std.move(c)); TypeError: Template method resolution failed:; void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>; SegmentationViolation: segfault in C++; program state was reset; Failed to instantiate ""foo(repro::Derived&)""; Failed to instantiate ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:23736,optimiz,optimized,23736,https://root.cern,https://github.com/root-project/root/issues/15117,2,['optimiz'],['optimized']
Performance,"aParser.cpp:49:5; #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9; #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12; #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33; #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24; #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29; #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10; #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27; #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20; #11 0x7fffd78dd08b (<unknown module>); #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3; #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20; #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29; #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8041:2127,Load,Load,2127,https://root.cern,https://github.com/root-project/root/pull/8041,1,['Load'],['Load']
Performance,"aProcessor/MetaSema.cpp:141; #46 cling::MetaSema::actOnxCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #47 0xf1258358 in cling::MetaParser::isXCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:321; #48 0xf12586cf in cling::MetaParser::isCommand () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:8830,optimiz,optimized,8830,https://root.cern,https://github.com/root-project/root/issues/15738,3,['optimiz'],['optimized']
Performance,"abc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. [1] 281175 segmentation fault (core dumped) python; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:52793,optimiz,optimized,52793,https://root.cern,https://github.com/root-project/root/issues/15970,3,['optimiz'],['optimized']
Performance,"ace */; public:; Position(float x, float y, float z);; // get Cartesian coordinates; float x();; float y();; float z();; // get spherical coordinates; float r();; float phi();; float theta();; // get pseudorapidity; float eta();; };. class Hit : public Position { /* localized detector signal */; public:; Hit(float energy, float x, float y, float z);; // get energy and transverse energy; float e();; float et();; };; ```. * Now, consider 3 stages of evolution for Position:. 1. Simplest implementation is to have Cartesian coordinates as private attributes;. 2. The users find that they most often use radius and azimuth, hence decide to store spherical coordinates instead of (x,y,z);. 3. Actually, colliders use eta more often than theta, so that the internal state is now given by (r, phi, eta). * In parallel and independently, Hit also evolves:. a. Simplest implementation is to have only the energy as private member;. b. Because the number of requests for the transverse energy is very high, the users want to optimize the speed by keeping Et as private member;. c. Well, it happens that disk space is short and e() is rarely called, so that it makes sense to reduce the size of the Hit class by dropping the energy member and computing the energy just when calling the method e(). They also found that the detector parameters used to store data in version b are wrong, so that one needs to scale the energy by 1.3 only for version b (a and c are correct). Could you please provide a working example in which data are saved and fetched with different combinations of (1, 2, 3)x(a, b, c) (at least with 1a, 2b, 3c)?. * The next step is to consider collections of objects:. i) define. ```cpp; class Track { /* particle trajectory */. private:; std::vector< Hit > m_hits;. };; ```. ii) Because the crazy developers of Hit decided to make such class variable size, one needs to store a vector of pointers instead of objects:. ```cpp; class Track { /* particle trajectory */. private:; std::vecto",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14540:1278,optimiz,optimize,1278,https://root.cern,https://github.com/root-project/root/issues/14540,1,['optimiz'],['optimize']
Performance,"ace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this; entry=0x55ed2cce0be0, Ty=<optimized out>, Ty; entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174; #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354; #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this; entry=0x55ed2cce0be0, QTy=QTy; entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204; #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227; #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType; entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668; #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126; #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37; #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215; #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this; entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr; entry=0x55ed2cd76b08, PerformInit=PerformInit; entry=true) at /usr/local/src/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:17141,optimiz,optimized,17141,https://root.cern,https://github.com/root-project/root/issues/9595,1,['optimiz'],['optimized']
Performance,"aces, and I wanted to understand why this was leaking a lot of memory. This is in 6.22/08 but I think the problems persist in master. Thankfully the biggest leak is easy to fix and I'll make a PR for that soon (workspace not cleaning up all its RooLinkedLists). But the next biggest one has taken me a while to understand....; <br>Valgrind reported lots of leaking of RooObjCacheManager instances. I believe a way to evidence this is with a minimal reproducer (see above).; <br>If you track how many times a RooObjCacheManager is constructed with these lines, the first line constructs one of them (the `_normMgr` of the RooAbsPdf class). But when the file is read back in on the second line, I see two RooObjCacheManagers get constructed. The first one comes from the constructor of the RooAbsPdf (via the gaussian), but the second comes from streaming of the RooAbsArg base class which contains a `std::deque<RooAbsCache*> _cacheList`. ; <br>So what I'm seeing is that in the first line where the pdf is first created, the `_normMgr` (which is declared as `RooObjCacheManager _normMgr` in `RooAbsPdf`) is the same as the one in the `_cacheList`. But when you read back the pdf in the second line, the `_normMgr` no longer is the same as the one in the `_cacheList` -- both caches (the one in the `_cacheList` and the `_normMgr`) have the gaus as its owner, but they are distinct objects and when the gaus is deleted I assume the one in the `_cacheList` doesnt get destroyed, causing the leak. ; <br>If my diagnosis is correct, then I dunno what would be the correct way to fix this, the best way I can think of so far would be making `RooObjCacheManager` always be a pointer rather than an instance data member. Do others have thoughts?; <br>Worth acknowledging the problem probably isn't just a memory leak when we have an inconsistency between the list of caches in the `RooAbsArg` base class vs the actual caches the derived classes might be interacting with directly, but i havent studied that.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8764:3316,cache,caches,3316,https://root.cern,https://github.com/root-project/root/pull/8764,3,['cache'],['caches']
Performance,"aching examples using `hsimple.C` tutorial below:. ```sh; $ export CLING_DEBUG=1; $ gdb --args bin/root.exe -l tutorials/hsimple.C; GNU gdb (Gentoo 12.1 vanilla) 12.1; Copyright (C) 2022 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break hsimple; Function ""hsimple"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (hsimple) pending.; (gdb) run; Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 813528]; [Detaching after vfork from child process 813530]; [Detaching after vfork from child process 813533]; [Detaching after vfork from child process 813557]; root [0] ; Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36; 36	 TString filename = ""hsimple.root"";; (gdb) bt; #0 hsimple (getFile=0) at tutorials/hsimple.C:36; #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2; #2 0x00007ffff2cc087f in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /srv/root/src/build/lib/libCling.so; #3 0x00007ffff2c312f0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) ()",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10685:1491,load,load,1491,https://root.cern,https://github.com/root-project/root/pull/10685,1,['load'],['load']
Performance,ad module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUtil; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ROOTTreeViewer; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTGeomViewer; Faile,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:2341,load,load,2341,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,ad module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUtil; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ROOTTreeViewer; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTGeomViewer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; root.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:2435,load,load,2435,https://root.cern,https://github.com/root-project/root/issues/14964,30,['load'],['load']
Performance,ad module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load modul,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3216,load,load,3216,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,ad module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5686,load,load,5686,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"ad::PaintLine (this=0x238b1d0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:4171; #6 0x0000000000400b7c in main (argc=<optimized out>, argv=<optimized out>) at test/pad3.cxx:11; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fd0a58b3774 in TPad::PaintLine (this=0x238b1d0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:4171; #6 0x0000000000400b7c in main (argc=<optimized out>, argv=<optimized out>) at test/pad3.cxx:11; ===========================================================; ```. ## Expected behavior; No crash. ## To Reproduce; Code. ```; #include <TCanvas.h>; #include <TLine.h>; #include <TPad.h>. int main(int argc, char **argv) {; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad();; c->cd();; TLine* l= new TLine(0,1,0,1);; l->Paint();; delete l;; delete c;; delete C;; return 0;; }; ```. compile; ```; g++ pad3.cxx $(root-config --glibs --cflags --libs) -o pad3 -g; ```; run. ```; ./pad3; ```. ## Setup; ROOT 6.22.02 gcc4.8.5 on CentOS7; and. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh; on lxplus. ## Possible fix; Replace. ```; if (!gPad->IsBatch()); GetPainter()->DrawLine(x[0], y[0], x[1], y[1]);. ```; with. ```; if (!gPad->IsBatch() && GetPainter() ); GetPainter()->DrawLine(x[0], y[0], x[1], y[1]);; ```. in ``void TPad::PaintLine(Double_t x1, Double_t y1, Double_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6446:1950,optimiz,optimized,1950,https://root.cern,https://github.com/root-project/root/issues/6446,2,['optimiz'],['optimized']
Performance,"add Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f052580ec3a in __GI___wait4 (pid=34047, stat_loc=stat_loc; entry=0x7ffc6b5a07e8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f052580ebfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffc6b5a07e8, options=options; entry=0) at waitpid.c:38; #2 0x00007f052577df67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f0525fc2afe in TUnixSystem::StackTrace() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #4 0x00007f0525fbf985 in TUnixSystem::DispatchSignals(ESignals) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #5 <signal handler called>; #6 0x00007f05215c1076 in TClingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f052152ab45 in TCling::SetClassInfo(TClass*, bool) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #8 0x00007f0525f60963 in TClass::SetUnloaded() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #9 0x00007f0525f07b38 in ROOT::RemoveClass(char const*) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #10 0x00007f0525f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:7891,optimiz,optimized,7891,https://root.cern,https://github.com/root-project/root/issues/12358,1,['optimiz'],['optimized']
Performance,"add Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f45ad4d0c3a in __GI___wait4 (pid=33425, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f45ad4d0bfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0) at waitpid.c:38; #2 0x00007f45ad43ff67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f45adc84afe in TUnixSystem::StackTrace() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #4 0x00007f45adc81985 in TUnixSystem::DispatchSignals(ESignals) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #5 <signal handler called>; #6 0x00007f45a9283076 in TClingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f45a91ecb45 in TCling::SetClassInfo(TClass*, bool) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #8 0x00007f45adc22963 in TClass::SetUnloaded() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #9 0x00007f45adbc9b38 in ROOT::RemoveClass(char const*) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #10 0x00007f45adc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:2210,optimiz,optimized,2210,https://root.cern,https://github.com/root-project/root/issues/12358,1,['optimiz'],['optimized']
Performance,ading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm; 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm; 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm; 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm; 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm; 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm; 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm; 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm; 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm; 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm; 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm; 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm; 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm; 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm; 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:2057,Load,Loading,2057,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,ading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm; 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm; 0.0000 ( ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:9936,Load,Loading,9936,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,ading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm; 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm; 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm; 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm; 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm; 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm; 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:3567,Load,Loading,3567,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503; #4 ___pthread_cond_timedwait64 (cond=cond; entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex; entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime; entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652; #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73; #6 take_gil (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval_gil.h:256; #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:5143,optimiz,optimized,5143,https://root.cern,https://github.com/root-project/root/issues/15117,2,['optimiz'],['optimized']
Performance,"ages.githubusercontent.com/10653970/151454753-44c1d81f-335a-4400-a703-966b70cd7087.png). After zooming on the (lower) X-axis of a histogram, I get this weird image:; ![image](https://user-images.githubusercontent.com/10653970/151454804-2b639659-8432-437c-9e2a-ffe62bf5e3df.png). After clicking on the canvas once, I get the correct zoomed image:; ![image](https://user-images.githubusercontent.com/10653970/151454887-9ea6545d-393a-4e29-b7ef-9a0d66966e63.png). Then, if I right click on the lower x axis, and then Unzoom, ROOT crashes with SIGSEGV. ```; *** Break *** segmentation violation; ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007faba4e70457 in __GI___waitpid (pid=27807, stat_loc=stat_loc; entry=0x7ffd300bf178, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30; #1 0x00007faba4ddb177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149; #2 0x00007faba5b72a08 in TUnixSystem::Exec (this=0x55692f74e7c0, shellcmd=0x556933e43c00 ""/opt/root_bld/etc/gdb-backtrace.sh 26942 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108; #3 0x00007faba5b732b9 in TUnixSystem::StackTrace (this=0x55692f74e7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399; #4 0x00007faba5b76f5a in TUnixSystem::DispatchSignals (this=0x55692f74e7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619; #5 0x00007faba5b6e70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395; #6 0x00007faba5b76e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590; #7 0x00007faba5b6742a in textinput::TerminalConfigUnix::HandleSignal (this=0x7faba60569a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #8 0x00007faba5b67146 in (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9740:1140,optimiz,optimized,1140,https://root.cern,https://github.com/root-project/root/issues/9740,1,['optimiz'],['optimized']
Performance,ailed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5422,load,load,5422,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,ailed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to lo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4329,load,load,4329,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,"ain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158; #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185; #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this; entry=0x162d700, durationInMs=durationInMs; entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364; #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:6155,optimiz,optimized,6155,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,"al""; : Add Tree sig_tree of type Signal with 1000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 1000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_CNN_Classification.py"", line 299, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_Higgs_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1271/1272 Test #1268: tutorial-tmva-TMVA_Higgs_Classification-py ..........................***Failed 1.36 sec; TMVA_Higgs_Classification:0: RuntimeWarning: Skip using Keras since tensorflow is not available; Info in <TMVA_Higgs_Classification>: Download Higgs_data.root file; Info in <TFile::OpenFromCache>: using local cache copy of http://root.cern.ch/files/Higgs_data.root [./files/Higgs_data.root]; ******************************************************************************; *Tree :sig_tree : tree *;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:9050,load,loader,9050,https://root.cern,https://github.com/root-project/root/issues/12429,2,['load'],['loader']
Performance,"al-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:13813,load,loader,13813,https://root.cern,https://github.com/root-project/root/issues/12429,2,['load'],['loader']
Performance,"al.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:9235,optimiz,optimized,9235,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,"alik/hades/software/root-v5/build_cmake/include/TBuffer.h:407; #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460; #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451; #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>); at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352; #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, ; last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599; #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>); at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174; #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...); at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111; #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013; #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00); at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981; #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379; #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430; #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9564:4468,optimiz,optimized,4468,https://root.cern,https://github.com/root-project/root/issues/9564,2,['optimiz'],['optimized']
Performance,"aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105; #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90; #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133; #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variad",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:25031,optimiz,optimized,25031,https://root.cern,https://github.com/root-project/root/issues/8931,2,['optimiz'],['optimized']
Performance,alling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble32_t:' at line 187 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:198:21: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is a,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:71268,load,loaded,71268,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,alling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUShort_t:' at line 183 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184:35: warning: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:64480,load,loaded,64480,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,alse branch in /opt/root_src/gui/gui/src/TGFont.cxx:809; 23: Assuming 'start' is >= 'end' in /opt/root_src/gui/gui/src/TGFont.cxx:706; 24: Loop condition is false. Execution continues on line 832 in /opt/root_src/gui/gui/src/TGFont.cxx:706; 25: Assuming field 'fNumChunks' is > 0 in /opt/root_src/gui/gui/src/TGFont.cxx:832; 26: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:832; 27: Assuming the condition is false in /opt/root_src/gui/gui/src/TGFont.cxx:832; 28: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:832; 29: Value assigned to 'chunk' in /opt/root_src/gui/gui/src/TGFont.cxx:844; 30: Assuming 'chunk' is null in /opt/root_src/gui/gui/src/TGFont.cxx:845; 31: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:845; 32: 'n' is < field 'fNumChunks' in /opt/root_src/gui/gui/src/TGFont.cxx:846; 33: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:846; 34: Access to field 'fY' results in a dereference of a null pointer (loaded from variable 'chunk') in /opt/root_src/gui/gui/src/TGFont.cxx:849; /opt/root_src/gui/gui/src/TGFont.cxx:853:24: warning: The right operand of '-' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]; 1: Assuming 'numChars' is >= 0 in /opt/root_src/gui/gui/src/TGFont.cxx:681; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:681; 3: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:706; 4: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:707; 5: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:707; 6: Loop condition is false. Execution continues on line 727 in /opt/root_src/gui/gui/src/TGFont.cxx:710; 7: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:728; 8: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:728; 9: 'start' is equal to 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 10: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:7,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:21438,load,loaded,21438,https://root.cern,https://github.com/root-project/root/issues/7533,1,['load'],['loaded']
Performance,"ambda()> >(std::__invoke_other, TThreadedObject_GetNSlots_Test::<lambda()> &&) (; __f=...) at /usr/include/c++/8/bits/invoke.h:60; #8 0x0047f2b8 in std::__invoke<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> >(TThreadedObject_GetNSlots_Test::<lambda()> &&) (__fn=...); at /usr/include/c++/8/bits/invoke.h:95; #9 0x00480966 in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::_M_invoke<0>(std::_Index_tuple<0>) (this=0xa1e00674); at /usr/include/c++/8/thread:244; #10 0x0048090b in std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > >::operator()(void) (this=0xa1e00674); at /usr/include/c++/8/thread:253; #11 0x004808c1 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<TThreadedObject_GetNSlots_Test::TestBody()::<lambda()> > > >::_M_run(void) (this=0xa1e00670); at /usr/include/c++/8/thread:196; #12 0xb69cef1d in ?? () from /lib/i386-linux-gnu/libstdc++.so.6; #13 0xb6ab2fd2 in start_thread (arg=<optimized out>) at pthread_create.c:486; #14 0xb67236d6 in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:108. Thread 1 (Thread 0xb64429c0 (LWP 4562)):; #0 0xb7fa1d61 in __kernel_vsyscall (); #1 0xb6ab449e in __GI___pthread_timedjoin_ex (threadid=2725792576, thread_return=0x0, abstime=0x0, block=true) at pthread_join_common.c:89; #2 0xb6ab4244 in __pthread_join (threadid=2725792576, thread_return=0x0) at pthread_join.c:24; #3 0xb69cf185 in std::thread::join() () from /lib/i386-linux-gnu/libstdc++.so.6; #4 0x0047e4d8 in TThreadedObject_GetNSlots_Test::TestBody (this=0x139bb90); at /home/sftnight/build/wsincrmaster/LABEL/ROOT-debian10-i386/SPEC/cxx14/root/core/thread/test/testTThreadedObject.cxx:176; #5 0x004ba0ff in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #6 0x004aec42 in testing::Test::Run() [clone .part.608] (); #7 0x004af0ab in testing::TestInfo::Run() [clone .part.609] (); #8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5596:2476,optimiz,optimized,2476,https://root.cern,https://github.com/root-project/root/pull/5596,1,['optimiz'],['optimized']
Performance,"an::SignalUnsafeCall(__tsan::ThreadState*, unsigned long) + 287 frame #9: 0x000000011097e76a libclang_rt.tsan_osx_dynamic.dylib`__tsan::user_free(__tsan::ThreadState*, unsigned long, void*, bool) + 234; frame #10: 0x000000011097c441 libclang_rt.tsan_osx_dynamic.dylib`wrap_free + 113 frame #11: 0x0000000134b3a45b libCling.6.22.06.so`clang::ASTReader::makeModuleVisible(clang::Module*, clang::Module::NameVisibilityKind, clang::SourceLocation) + 939; frame #12: 0x00000001348dc772 libCling.6.22.06.so`clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7106 frame #13: 0x0000000134ddcf80 libCling.6.22.06.so`clang::Sema::ActOnModuleImport(clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang:; :IdentifierInfo*, clang::SourceLocation> >) + 80 frame #14: 0x00000001345c73c9 libCling.6.22.06.so`cling::Interpreter::loadModule(clang::Module*, bool) + 345 * frame #15: 0x00000001344edc9a libCling.6.22.06.so`LoadModule(ModuleName=""Smatrix"", interp=0x00007b4c0000de40) at TCling.cxx:1066:18 [opt]; frame #16: 0x00000001344e29cf libCling.6.22.06.so`TCling::TCling(char const*, char const*, char const* const*) at TCling.cxx:1075:7 [opt]; frame #17: 0x00000001344e297e libCling.6.22.06.so`TCling::TCling(char const*, char const*, char const* const*) at TCling.cxx:1187 [opt]; frame #18: 0x00000001344e232b libCling.6.22.06.so`TCling::TCling(this=0x00007b58000ab600, name=<unavailable>, title=<unavailable>, argv=<unavailable>) at TCling.cx; x:1511 [opt]; frame #19: 0x00000001344dc2d5 libCling.6.22.06.so`::CreateInterpreter(void *, const char **) [inlined] TCling::TCling(this=<unavailable>, name=<unavailable>, title; =<unavailable>, argv=<unavailable>) at TCling.cxx:1303:1 [opt]; frame #20: 0x00000001344dc2bc libCling.6.22.06.so`::CreateInterpreter(interpLibHandle=<unavailable>, argv=<unavailable>) at TCling.cxx:616 [opt]; frame #21: 0x000000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7418:2340,load,loadModule,2340,https://root.cern,https://github.com/root-project/root/issues/7418,1,['load'],['loadModule']
Performance,"anch from the specified files and TTrees.; --branches bname1 [bname2...]; Reads the branches with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:2171,Throughput,Throughput,2171,https://root.cern,https://github.com/root-project/root/pull/14039,1,['Throughput'],['Throughput']
Performance,"and caches the polynomial; coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of; `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be; equivalent. * Most importantly, and this was the motivation for this PR now:; when we do the code generation for AD, we can't pre-compute cached; coefficients because it would bloat the generated code with constant; arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and; `high=1.2` that shows the interpolated values are agreeing to the 5e-4; level. This is completely accepatable for such an ad-hoc polynomial; motivation, where the shape is not given by any physical meaning anyway; but just by the continuity condition at the boundaries. And at the; boundaries (and `param=0`), the difference between both implementations; goes to zero. It was also checked that this change has no performance; effect on fitting the full ATLAS Higgs combination modes. ```txt; param ref new diff_abs diff_rel; 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00; 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06; 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05; 3 -0.75 0.9230659064 0.9231653329 0.0000994265 1.08E-04; 4 -0.65 0.9317147727 0.9319176341 0.0002028614 2.18E-04; 5 -0.55 0.9402402768 0.9405514067 0.0003111300 3.31E-04; 6 -0.45 0.9489635592 0.9493568763 0.0003933171 4.14E-04; 7 -0.35 0.9582539443 0.9586769214 0.0004229771 4.41E-04; 8 -0.25 0.9684763536 0.9688599643 0.0003836107 3.96E-04; 9 -0.15 0.9799490728 0.9802212720 0.0002721992 2.78E-04; 10 -0.05 0.9929118716 0.9930125518 0.0001006802 1.01E-04; 11 0.05 1.0075044778 1.0073993699 -0.0001051079 -1.04E-04; 12 0.15 1.0237554038 1.0234460012 -0.0003094025 -3.02E-04; 13 0.25 1.0415811263 1.0411077858 -0.0004733405 -4.54E-04; 14 0.35 1.0607956204 1.0602318105 -0.0005638099 -5.31E-04; 15 0.45 1.0811302458 1.0805675762 -0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13067:1647,perform,performance,1647,https://root.cern,https://github.com/root-project/root/pull/13067,1,['perform'],['performance']
Performance,"and therewith notebooks.; This was necessary to work around fakemodule, which has been removed; from ipython a long time ago.; The invocation to TPython triggers the loading of the TPyClassGenerator; TClassGenerator. Such generator acquires the GIL from within C++ code; unavoidably leading to deadlocks if ROOT thread safety is enabled. As a side effect, importing Python from within notebooks and ipython significantly speeds up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3262:166,load,loading,166,https://root.cern,https://github.com/root-project/root/pull/3262,1,['load'],['loading']
Performance,"andler.cxx"", dl=28, il=22) at include/TQClass.h:70; #6 0x00007ffff7d3c467 in ROOT::TGenericClassInfo::GetClass (; this=0x7ffff7f7ce60 <ROOT::GenerateInitInstanceLocal(TSysEvtHandler const*)::instance>); at /home/axel/build/root/master/src/core/meta/src/TGenericClassInfo.cxx:250; #7 0x00007ffff7dcf596 in TSysEvtHandler::Dictionary () at core/G__Core.cxx:14387; #8 0x00007ffff7d1db76 in TClass::LoadClassDefault (requestedname=0x7fffffffb399 ""TSysEvtHandler""); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5769; #9 0x00007ffff7d1da90 in TClass::LoadClass (requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5740; #10 0x00007ffff7bdd915 in TROOT::LoadClass (this=0x7ffff7f53460 <ROOT::Internal::GetROOT1()::alloc>, ; requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false) at /home/axel/build/root/master/src/core/base/src/TROOT.cxx:2119; #11 0x00007ffff7d14d58 in TClass::GetClass (info=0x555556980ba0, load=true, silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:3323; #12 0x00007ffff7d07144 in TBaseClass::GetClassPointer (this=0x555556980c70, load=true); at /home/axel/build/root/master/src/core/meta/src/TBaseClass.cxx:66; #13 0x00007ffff7c4b6eb in TQObject::CollectClassSignalLists (this=0x555555d8eac0, list=..., cls=0x55555608c200); at /home/axel/build/root/master/src/core/base/src/TQObject.cxx:461; #14 0x00007ffff7faf3ef in TQObject::EmitVA<>(char const*, int) (this=0x555555d8eac0, signal_name=0x7ffff7fa0db3 ""Added()""); at /home/axel/build/root/master/src/core/base/inc/TQObject.h:109; #15 0x00007ffff7fae61a in TQObject::Emit (this=0x555555d8eac0, signal=0x7ffff7fa0db3 ""Added()""); at /home/axel/build/root/master/src/core/base/inc/TQObject.h:173; #16 0x00007ffff7faec35 in TSysEvtHandler::Added (this=0x555555d8eab0); at /home/axel/build/root/master/src/core/base/inc/TSysEvtHandler.h:50; #17 0x00007ffff7c680da in TSignalHandler::Add (this=0x555555d8eab0); at /home/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7123:3164,load,load,3164,https://root.cern,https://github.com/root-project/root/issues/7123,1,['load'],['load']
Performance,"ang/13.0.0/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:515:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /opt/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /opt/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /opt/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /opt/root_build/include/Rtypes.h:195:; In file included from <module-includes>:2:; /opt/root_build/include/ROOT/RStringView.hxx:25:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:476: core/G__Core.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:31578: core/CMakeFiles/G__Core.dir/all] Error 2; gmake[1]: ** Esperando que outros processos terminem.; [ 78%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 78%] Built target MetaCling; gmake: *** [Makefile:156: all] Error 2; ```. ### Reproducer. ```; # The latest stable branch gets updated automatically on each release.; # You may update your local copy by issuing a `git pull` command from within `root_src/`.; $ git clone --branch latest-stable --depth=1 https://github.com/root-project/root.git root_src; $ mkdir root_build root_install && cd root_build; $ cmake -DCMAKE_INSTALL_PREFIX=../root_install ../root_src # && check cmake configuration output for warnings or errors; $ cmake --build . -- install -j4 # if you have 4 cores available for compilation; $",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13450:3430,load,loading,3430,https://root.cern,https://github.com/root-project/root/issues/13450,1,['load'],['loading']
Performance,"anslation/rotation is applied to a TGeoVolumeAssembly through the `MakePhysicalNode > Align` sequence, the BoundingBox of this TGeoVolumeAssembly may end up with 0 size (GetDX, GetDY and GetDZ returning 0).; This is not expected as it means there are other effects on the Volume aside from the translation/rotation, even when shifting something without leaving its parent volume. Something similar happens if a translation/rotation is applied to a Node which is part of a TGeoVolumeAssembly, but there it probably happens only if the changes leads to part of the assembly exceeding the original boundaries.; We (me and @fuhlig1) suspect that this may partially be recursive (affecting the parent of the aligned volume). This can be cured by forcing the recomputation of the BoundingBox of the affected Volume. ### Expected behavior; After alignment of the nodes, all volumes/nodes are offset/rotated with their other properties valid.; Or if not possible due to performance, a warning should be printout with hint of the proper way to restore/recompute these values. A temporary fix was introduced for now in FairRoot, which is to simply do the recompute for all TGeoVolumeAssembly in the geometry tree, which seems to be fast enough that we do not have to try to track affected Volumes to be more selective. ; This may however not be the case later when applied to complete geometries for experiments like CBM. ### To Reproduce; Steps to reproduce the behavior with the attached files (includes ""ROOT-only"" examples both for problem and for macro-level fix):; 1. Compile a copy of ROOT 6.22.08 (done with FairSoft apr21p2 and FairRoot v18.6.7, should work with any older versions of each and with recent versions of FairRoot, as well as with a standalone version of ROOT); 1. Download [BboxAlignPb_example_2023_02_07.zip](https://github.com/root-project/root/files/10674368/BboxAlignPb_example_2023_02_07.zip) and unzip the macro, the standard container dictionary header and the two root files in a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12242:1468,perform,performance,1468,https://root.cern,https://github.com/root-project/root/issues/12242,1,['perform'],['performance']
Performance,"anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f45a9283076 in TClingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f45a91ecb45 in TCling::SetClassInfo(TClass*, bool) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #8 0x00007f45adc22963 in TClass::SetUnloaded() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #9 0x00007f45adbc9b38 in ROOT::RemoveClass(char const*) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #10 0x00007f45adc3e1cf in ROOT::TGenericClassInfo::~TGenericClassInfo() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #11 0x00007f45ad4348a7 in __run_exit_handlers (status=0, listp=0x7f45ad5da718 <__exit_funcs>, run_list_atexit=run_list_atexit; entry=true, run_dtors=run_dtors; entry=true) at exit.c:108; #12 0x00007f45ad434a60 in __GI_exit (status=<optimized out>) at exit.c:139; #13 0x00007f45ad41208a in __libc_start_main (main=0x55c185446100 <main>, argc=5, argv=0x7fff23a4b5a8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff23a4b598) at ../csu/libc-start.c:342; #14 0x000055c18544868e in _start (); ===========================================================; ```. ### Expected behavior. The struct above, while weird, is valid C\+\+ code. It would be nice if we could write such objects into ROOT files. ### To Reproduce. Attached is a small reproducer, which works on Linux (and possibly macOS). (I didn't bother with setting up a CMake based build for Windows compatibility.). [self-reference.zip](https://github.com/root-project/root/files/10786205/self-reference.zip). It should be able to reproduce the issue with:. ```; [bash][atspot01]:self-reference > make; genreflex SelfReferenceDict.hpp -o SelfReferenceDict.cpp --rootmap=libSelfReferenceDict.rootmap \; --rootmap-lib=libSelfRef",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:5274,optimiz,optimized,5274,https://root.cern,https://github.com/root-project/root/issues/12358,1,['optimiz'],['optimized']
Performance,"are currently only available when the compiler flag DEBUG is defined. In my experience, trouble with minimizing some function is common so it would be a great asset to enable more debug output at anytime by just increasing the print level without recompiling ROOT. The DEBUG messages are particularly problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). ### Possible negative side-effects. #### Breaking changes?. This proposal does not change the output for print level 0, but there is a minor change for print level 1. It changes the output of scripts/software that uses print level 1, because previously level 1 meant ""print errors and info"" while in the new hierarchy it means ""print errors and warnings"". I think this is a minor effect, which has to be documented in the next changelog but it cannot cause backward incompatibilities or breakage. #### Reduced performance?. The impact on performance is expected to be negligible. I propose to place additional calls into the compiled code for everyone, but these calls are not executed unless the user picks a high print level. For a low print level, there is just the minor additional cost of a branch, which moreover can be predicted very well by the CPU, so the added cost should be almost zero. Furthermore, these branches do not happen in hot code paths. Hot paths are inside the cost function (which are unaffected) and in the linear algebra routines that Minuit2 uses (which are not instrumented with debug messages). ### Positive side-effects for wrappers and frontends. An important positive side effect for wrappers like iminuit is that we could show our users debug messages, too. Right now, we cannot, because DEBUG messages can only be enabled at compile-time, not at run-time. The DEBUG messages are also problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:3172,perform,performance,3172,https://root.cern,https://github.com/root-project/root/issues/6421,1,['perform'],['performance']
Performance,"are now running (for the first time) RBDT tests with xgboost models. The Alma9 platform highlights a severe problem on the following three tests. ```; TEST FAILURES:; 296:test-tcollbm; 1314:tutorial-tmva-tmva101_Training-py; 1315:tutorial-tmva-tmva102_Testing-py; ```. By running inside a debugger, we can see that there is an issue at exit time (which **does not** depend on the version of xgboost); ```; (ROOT-CI) [root@663cf5af2db5 tmva]# gdb --args python tmva102_Testing.py ; [...]; Thread 1 ""python"" received signal SIGSEGV, Segmentation fault.; 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; (gdb) ; (gdb) bt; #0 0x00007f1251f78110 in __do_global_dtors_aux () from /lib64/libopenblaso.so.0; #1 0x00007f1279ebef9e in _dl_fini () at dl-fini.c:142; #2 0x00007f12796574dd in __run_exit_handlers (status=0, listp=0x7f12797fa838 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, ; run_dtors=run_dtors@entry=true) at exit.c:116; #3 0x00007f1279657620 in __GI_exit (status=<optimized out>) at exit.c:146; #4 0x00007f127963feb7 in __libc_start_call_main (main=main@entry=0x557932280160 <main>, argc=argc@entry=2, argv=argv@entry=0x7ffe94d9b838); at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007f127963ff60 in __libc_start_main_impl (main=0x557932280160 <main>, argc=2, argv=0x7ffe94d9b838, init=<optimized out>, fini=<optimized out>, ; rtld_fini=<optimized out>, stack_end=0x7ffe94d9b828) at ../csu/libc-start.c:389; #6 0x0000557932280095 in _start (); ```. And the same stacktrace is produced for all three tests. This may or may not be linked to https://github.com/wlav/cppyy/issues/227 and the fact that complex Python packages (in this case it's xgboost, but also pytorch is notorious for this behaviour) seem to not handle well C++ symbols. Our current understanding of the situation with RBDT is the following:; * The implementation that is currently in master never actually worked on multiple levels (largely untested, tutorials did not check for",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15197:1744,optimiz,optimized,1744,https://root.cern,https://github.com/root-project/root/issues/15197,1,['optimiz'],['optimized']
Performance,"args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:15269,optimiz,optimized,15269,https://root.cern,https://github.com/root-project/root/issues/15970,6,['optimiz'],['optimized']
Performance,"ariable:172; #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this; entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50; #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376; #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):; #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6; #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6; #2 0x00007ff44674c311 in system () from /lib64/libc.so.6; #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649; #6 <signal handler called>; #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267; #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:19118,optimiz,optimized,19118,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,"ash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007fd0a354d46c in __libc_waitpid (pid=19301, stat_loc=stat_loc; entry=0x7fffd00a2ce0, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007fd0a34caf62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007fd0a66ce5dc in TUnixSystem::StackTrace (this=0x1a0b980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007fd0a66d106a in TUnixSystem::DispatchSignals (this=0x1a0b980, sig=kSigSegmentationViolation) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007fd0a58b3774 in TPad::PaintLine (this=0x238b1d0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:4171; #6 0x0000000000400b7c in main (argc=<optimized out>, argv=<optimized out>) at test/pad3.cxx:11; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fd0a58b3774 in TPad::PaintLine (this=0x238b1d0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:4171; #6 0x0000000000400b7c in main (argc=<optimized out>, argv=<optimized out>) at test/pad3.cxx:11; ===========================================================; ```. ## Expected behavior; No crash. ## To Reproduce; Code. ```; #include <TCanvas.h>; #includ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6446:1162,optimiz,optimized,1162,https://root.cern,https://github.com/root-project/root/issues/6446,2,['optimiz'],['optimized']
Performance,asource-ntuple ......................... Passed 1.80 sec; Start 397: pyunittests-dataframe-misc; 420/1231 Test #393: gtest-tree-dataframe-test-datasource-csv ............................ Passed 3.56 sec; Start 398: pyunittests-dataframe-histograms; 421/1231 Test #391: gtest-tree-dataframe-test-datasource-trivial ........................ Passed 6.48 sec; Start 399: pyunittests-dataframe-cache; 422/1231 Test #396: gtest-tree-dataframe-test-datasource-sqlite ......................... Passed 4.60 sec; Start 400: pyunittests-dataframe-merge-results; 423/1231 Test #397: pyunittests-dataframe-misc .......................................... Passed 3.66 sec; 424/1231 Test #398: pyunittests-dataframe-histograms .................................... Passed 3.40 sec; 444/1231 Test #400: pyunittests-dataframe-merge-results ................................. Passed 4.48 sec; 446/1231 Test #376: gtest-tree-dataframe-test-dataframe-simple .......................... Passed 38.57 sec; 447/1231 Test #399: pyunittests-dataframe-cache ......................................... Passed 10.50 sec; Start 447: tutorial-dataframe-df000_simple; Start 448: tutorial-dataframe-df001_introduction; Start 449: tutorial-dataframe-df002_dataModel; 470/1231 Test #447: tutorial-dataframe-df000_simple ..................................... Passed 2.85 sec; Start 450: tutorial-dataframe-df003_profiles; Start 451: tutorial-dataframe-df004_cutFlowReport; 472/1231 Test #450: tutorial-dataframe-df003_profiles ................................... Passed 5.31 sec; Start 452: tutorial-dataframe-df005_fillAnyObject; 473/1231 Test #449: tutorial-dataframe-df002_dataModel .................................. Passed 9.46 sec; Start 453: tutorial-dataframe-df006_ranges; 474/1231 Test #451: tutorial-dataframe-df004_cutFlowReport .............................. Passed 6.28 sec; Start 454: tutorial-dataframe-df007_snapshot; 475/1231 Test #448: tutorial-dataframe-df001_introduction ............................... Passed 13.89 sec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:6603,cache,cache,6603,https://root.cern,https://github.com/root-project/root/pull/10300,1,['cache'],['cache']
Performance,"ass=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451; #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645; #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@entry=0xb5bea80, obj=obj@entry=0x432d290, ptrClass=0xc84340); at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2699; #13 0x00007ffff239d6e4 in operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407; #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460; #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451; #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>); at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352; #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, ; last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599; #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>); at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174; #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...); at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111; #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9564:3930,optimiz,optimized,3930,https://root.cern,https://github.com/root-project/root/issues/9564,3,['optimiz'],['optimized']
Performance,"at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:153; #8 0xf704919a in Fatal (location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:10877,optimiz,optimized,10877,https://root.cern,https://github.com/root-project/root/issues/12427,1,['optimiz'],['optimized']
Performance,"at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:113; #5 RooSTLRefCountList<RooAbsArg>::findByNamePointer (this=this@entry=0x1aa32f8, item=item@entry=0x7fffffff72d0); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooSTLRefCountList.h:153; #6 0x00007fffe0de1848 in RooAbsArg::findServer (this=0x1aa32b0, arg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsArg.h:211; #7 RooAbsArg::dependsOn (this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870; #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847; #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923; #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832; #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830; #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,; prototype=<optimized out>, auxProto=0x0, verbose=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63; #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,; auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55; #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,; auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055; #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547:1762,optimiz,optimized,1762,https://root.cern,https://github.com/root-project/root/issues/9547,2,['optimiz'],['optimized']
Performance,"at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:14314,optimiz,optimized,14314,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"ate a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff73f1ba0 <main_arena>, p=0x55555e7134c0, have_lock=have_lock@entry=0) at malloc.c:4469; #7 0x00007ffff72af9f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3385; #8 0x00007ffff18d07b4 in std::_Vector_base<ROOT::RDF::RResultPtr<TH1D>, std::allocator<ROOT::RDF::RResultPtr<TH1D> > >::~_Vector_base (this=0x55555881f750) at /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.0/../../../../include/c++/12.2.0/bits/stl_vector.h:366; #9 0x00007ffff23aa435 in cling::Value::~Value() () from /home/blue/ROOT/master/cmake-build-foo/lib/libCling.so; #10 0x00007ffff21a1869 in TCling::ProcessLine (this=0x5555555ee950, line=0x5555563e9c60 "".X /tmp/./pointer_not_allocated_error.C"", error=0x7fffffffb600) at ../core/metacling/src/TCling.cxx:2633; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11494:2385,optimiz,optimized,2385,https://root.cern,https://github.com/root-project/root/issues/11494,1,['optimiz'],['optimized']
Performance,"atform::DLOpen (Path=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", Err=0x7f2a5e651200) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; 2187: #24 0x00007f2a5087994c in cling::DynamicLibraryManager::loadLibrary (this=<optimized out>, libStem=..., permanent=<optimized out>, resolved=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:375; 2187: #25 0x00007f2a508d6dce in cling::Interpreter::loadLibrary (this=0x614000001840, filename=..., lookup=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1469; 2187: #26 0x00007f2a508d8d67 in cling::Interpreter::loadFile (this=0x614000001840, filename=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", allowSharedLib=<optimized out>, T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; 2187: #27 0x00007f2a50bbe9cd in cling::MetaSema::actOnLCommand (this=<optimized out>, file=..., transaction=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; 2187: #28 0x00007f2a50bb2dc8 in cling::MetaParser::isLCommand (this=this; 2187: entry=0x7f2a5e5cf670, actionResult=; 2187: 0x7f2a5e5cf780: cling::MetaSema::AR_Success) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; 2187: #29 0x00007f2a50bb2833 in cling::MetaParser::isCommand (this=<optimized out>, actionResult=<optimized out>, resultValue=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; 2187: #30 0x00007f2a50baaf05 in cling::MetaProcessor::process (this=<optimized out>, input_line=..., compRes=<optimized out>, result=0x33f, disableValuePrinting=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; 2187: #31 0x00007f2a5058c5ff in HandleInterpreterException (metaProcessor=metaProcessor; 2187: entry=0x6070",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:4880,optimiz,optimized,4880,https://root.cern,https://github.com/root-project/root/issues/11867,2,['optimiz'],['optimized']
Performance,ation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3672,load,load,3672,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,"ause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=..., this=0x7fffff156ce0) at /usr/include/c++/8/new:169; #11 llvm::orc::ExecutionSession::lookup (this=0x11efcd6f0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; #12 0x00007fffa4004d00 in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /usr/include/c++/8/bits/atomic_base.h:295; #13 0x00007fffa2a59050 in llvm::orc::LLJIT::lookupLinkerMangled (Name=..., JD=..., this=0x11efcd4b0) at /usr/include/c++/8/ppc64le-redhat-linux/bits/gthr-default.h:778; #14 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x11efcd4b0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #15 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x11efcd4b0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #16 cling::IncrementalJIT::getSymbolAddress (this=0x11ef800c0, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #17 0x00007fffa2a50208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x11efca180) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:15015,optimiz,optimized,15015,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"ause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=..., this=0x7fffc4480180) at /usr/include/c++/8/new:169; #12 llvm::orc::ExecutionSession::lookup (this=0x1656ebc10, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; #13 0x00007fff78004d00 in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /usr/include/c++/8/bits/atomic_base.h:295; #14 0x00007fff76a59050 in llvm::orc::LLJIT::lookupLinkerMangled (Name=..., JD=..., this=0x16584c2e0) at /usr/include/c++/8/ppc64le-redhat-linux/bits/gthr-default.h:778; #15 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x16584c2e0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #16 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x16584c2e0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #17 cling::IncrementalJIT::getSymbolAddress (this=0x1657ff820, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #18 0x00007fff76a50690 in cling::IncrementalExecutor::getPointerToGlobalFromJIT (this=0x165848f30, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #19 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:29337,optimiz,optimized,29337,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"b/libCore.so.6.24; #17 0x00007ffa4ff0bd0f in (anonymous namespace)::ReadRulesContent(_IO_FILE*) () from /home/rebrobles/root/lib/libCore.so.6.24; #18 0x00007ffa4ff0c02c in TClass::ReadRules() () from /home/rebrobles/root/lib/libCore.so.6.24; #19 0x00007ffa4bf59475 in TCling::Initialize() () from /home/rebrobles/root/lib/libCling.so; #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26; #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26; #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26; #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc; entry=1, argv=argv; entry=0x7fff519cefe8, env=env; entry=0x55b069205280) at dl-init.c:72; #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30; #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119; #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception; entry=0x0, operate=operate; entry=0x7ffa51cba2c0 <call_dl_init>, args=args; entry=0x7fff519cb890) at dl-error-skeleton.c:182; #27 0x00007ffa51cbb0bf in dl_open_worker (a=a; entry=0x7fff519cba40) at dl-open.c:758; #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cba20, operate=operate; entry=0x7ffa51cbac10 <dl_open_worker>, args=args; entry=0x7fff519cba40) at dl-error-skeleton.c:208; #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837; #30 0x00007ffa51c5d34c in dlopen_doit (a=a; entry=0x7fff5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:3628,optimiz,optimized,3628,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442; #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942; #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542; #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520; #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591; #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:13880,optimiz,optimized,13880,https://root.cern,https://github.com/root-project/root/issues/9595,6,['optimiz'],['optimized']
Performance,"b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442; #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942; #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; ===========================================================. Root > pure virtual method called; terminate called without an active exception; Aborted (core dumped); ```. </p>; </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash; PATH_FOR_REPRODUCING=/scratch2/root-debug2; mkdir -p ""$PATH_FOR_REPRODUCING""; docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash; ```. 2. Inside the CentOS 7 d",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:28202,optimiz,optimized,28202,https://root.cern,https://github.com/root-project/root/issues/9595,6,['optimiz'],['optimized']
Performance,"ba3322b094 in G__execute_call (result7=result7; entry=0x7ffcac8c2c90, libp=libp; entry=0x7ffcac8c2cd0, ifunc=ifunc; entry=0x249df80, ifn=ifn; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/newlink.cxx:2408; #11 0x00007fba3322b38b in G__call_cppfunc (result7=result7; entry=0x7ffcac8c2c90, libp=libp; entry=0x7ffcac8c2cd0, ifunc=ifunc; entry=0x249df80, ifn=ifn; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/newlink.cxx:2612; #12 0x00007fba33212c9f in G__interpret_func (result7=result7; entry=0x7ffcac8c2c90, funcname=0xfa4210 ""InitAnalysis"", libp=libp; entry=0x7ffcac8c2cd0, hash=1240, p_ifunc=0x249df80, funcmatch=funcmatch; entry=1, memfunc_flag=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/ifunc.cxx:5791; #13 0x00007fba33204f55 in G__getfunction (item=item; entry=0xe73375 ""InitAnalysis()"", known3=known3; entry=0x7ffcac8ce1a4, memfunc_flag=<optimized out>, memfunc_flag; entry=1) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/func.cxx:2660; #14 0x00007fba332cc07c in G__getstructmem (store_var_type=store_var_type; entry=112, varname=..., membername=membername; entry=0xe73375 ""InitAnalysis()"", memnamesize=memnamesize; entry=2147483647, tagname=tagname; entry=0xfa35e0 ""mgr"", known2=0x7ffcac8ce1a4, varglobal=0x7fba33a89180 <G__global>, objptr=2) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/var.cxx:6821; #15 0x00007fba332c51b5 in G__getvariable (item=item; entry=0xe73370 ""mgr->InitAnalysis()"", known=known; entry=0x7ffcac8ce1a4, varglobal=0x7fba33a89180 <G__global>, varlocal=0x7ffcac8d1aa0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/var.cxx:5407; #16 0x00007fba331e12f1 in G__getitem (item=0xe73370 ""mgr->InitAnalysis()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/ci",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:3454,optimiz,optimized,3454,https://root.cern,https://github.com/root-project/root/issues/6977,1,['optimiz'],['optimized']
Performance,"back port of https://github.com/root-project/root/pull/12863. This problem appears ""only"" in newer OS/compiler (as seen in the original reports leading to #12715) the dependent library are now dlclose'd when the 'main' library is dlclose'd. In the example a cmake generated library is linked against `libHist` and `libHist` is then loaded and unloaded when the example's library is (intentionally) loaded and unloaded. `libHist` happens to share a STL collection's dictionary (`std::vector<TString>`) with `libCore` (and this collection is used for the reading of rootpcm files and thus during the loading of the example's library). . Details:. Unload only the TClass actually generated by the unloaded library. The TGenericClassInfo's destructor now passes the TClass that they actually generated in; addition to the name so that only that TClass is destroyed. This avoid the problem (seen in #12715) where 2 librares (`A` and `B`) have a dictionary for the same; STL collection (this is supported) and we have the following sequence of operation:. 1. load library A; 2. load library B (dictionary registration is ignored as intended); 3. request TClass for STL collection.; 4. unload (dclose) library B; 5. use TClass for STL collection. With the previous code, step 4. would lead to the TClass for STL; collection to be marked as ""unloaded"" even though it library (A); was still actually loaded. Fix reloading of library with a module. Prior to this fix, the in-memory rootpcm loaded as part of the module was removed; from memory on first use and thus if the library was closed and re-opened/loaded; we no longer had the information needed to restore the TClass object corresponding; to that library. This 2 changes fix #12715. The commit [TClassTable: Remove alternate names upon library unloading.](https://github.com/root-project/root/pull/12863/commits/17e8833ec3deb32ca509bf08d31b56f93058d414) fix #12868",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12914:332,load,loaded,332,https://root.cern,https://github.com/root-project/root/pull/12914,8,['load'],"['load', 'loaded', 'loading']"
Performance,"bd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:20672,optimiz,optimized,20672,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"bgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558efc9fc045 in _start (); ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in tes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:9747,optimiz,optimized,9747,https://root.cern,https://github.com/root-project/root/issues/12428,1,['optimiz'],['optimized']
Performance,"bj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359; #24 0xf7ced0ad in TStreamerBase::WriteBuffer (this=0x590a9640, b=..., pointer=0x58ac5e90 ""260360"", <incomplete sequence 344>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x59354f60) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #27 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x594d4bc0, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:13932,optimiz,optimized,13932,https://root.cern,https://github.com/root-project/root/issues/15738,1,['optimiz'],['optimized']
Performance,"ble64 (futex_word=futex_word; entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected; entry=0, clockid=clockid; entry=1, abstime=abstime; entry=0x7af5721fe520, private=private; entry=0) at ./nptl/futex-internal.c:139; #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503; #4 ___pthread_cond_timedwait64 (cond=cond; entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex; entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime; entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652; #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73; #6 take_gil (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval_gil.h:256; #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:4906,optimiz,optimized,4906,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,"bug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6; #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6; #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108; #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399; #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619; #5 <signal handler called>; #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this; entry=0x55ed2cce0be0, Ty=<optimized out>, Ty; entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174; #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354; #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this; entry=0x55ed2cce0be0, QTy=QTy; entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204; #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227; #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType; entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668; #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:2039,optimiz,optimized,2039,https://root.cern,https://github.com/root-project/root/issues/9595,1,['optimiz'],['optimized']
Performance,"build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):; error code: 1; ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer.; However, you can see the problem this way:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |; | From tag , 3 March 2022 |; | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] &RooArgSet::operator delete; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460; root [2] &RooArgSet::operator delete; (void (*)(void *) noexcept) Function @0x7f94fd5e3900; ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the class. After this, taking the address of the operator delete succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:3495,load,load,3495,https://root.cern,https://github.com/root-project/root/issues/10203,1,['load'],['load']
Performance,"build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1368; #27 0x00007fffa93850a8 in TGenCollectionStreamer::ReadBufferDefault (this=0x10a861070, b=..., obj=0x109986cc0, onFileClass=0x0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1302; #28 0x00007fffa9384f00 in TGenCollectionStreamer::ReadBuffer (this=<optimized out>, b=..., obj=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1232; #29 0x00007fffa933ff7c in TCollectionClassStreamer::Stream (onfileClass=0x10a860aa0, obj=0x109986cc0, b=..., this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:177; #30 TCollectionClassStreamer::Stream (this=<optimized out>, b=..., obj=0x109986cc0, onfileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:172; #31 0x00007fffa8f04014 in TClass::StreamerExternal (pThis=<optimized out>, object=0x109986cc0, b=..., onfile_class=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6783; #32 0x00007fffa92db554 in TClass::Streamer (onfile_class=0x10a860aa0, b=..., obj=<optimized out>, this=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #33 TBufferFile::ReadFastArray (streamer=0x0, onFileClass=0x10a860aa0, n=1, cl=0x10a860aa0, start=<optimized out>, this=0x7ffff83ea100) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1609; #34 TBufferFile::ReadFastArray (this=0x7ffff83ea100, start=<optimized out>, cl=0x10a860aa0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1596; #35 0x00007fffa94a224c in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x10a395fa0, addr=<optimized out>, buf=...) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1362; #36 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:7979,optimiz,optimized,7979,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. This seems ""reversed and indeed:. ```; ls -lrt lib/RIO.pcm lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 5537736 Mar 25 21:11 lib/Hist.pcm; -rw-r--r-- 1 pcanal pcanal 3220264 Mar 25 21:13 lib/RIO.pcm; ```. Maybe either:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported module 'RIO' in '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer.; ....; ```. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is newer and all dependent module needs to be rebuilt; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; ....; ```. Cheers,; Philippe. PS Full error message:; ```; <<< cling interactive line includer >>>: fatal error: module file '/home/pcanal/root_working/build/master-debug/lib/RIO.pcm' is out of date and needs to be rebuilt: module file out of date; <<< cling interactive line includer >>>: note: imported by module 'Hist' in '/home/pcanal/root_working/build/master-debug/lib/Hist.pcm'; Failed to load module Hist; Failed to load module RDAVIX; Failed to load module RooFitMore; Failed to load module RooFitRDataFrameHelpers; Failed to load module FITSIO; Failed to load module FFTW; Failed to load module MathMore; root.exe: /home/pcanal/root_working/code/root/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed. ; Aborted; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7704:1746,load,load,1746,https://root.cern,https://github.com/root-project/root/issues/7704,7,['load'],['load']
Performance,build/rmkdepend/main.c:378; 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378; 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403; 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489; 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490; 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532; 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532; 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539; 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540; 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540; 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542; 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542; 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550; 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551; /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161; 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172; 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176; 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176; 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223; 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373; 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375; 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375; 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378; 10: Taking true ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:32911,load,loaded,32911,https://root.cern,https://github.com/root-project/root/issues/7410,1,['load'],['loaded']
Performance,"build/root-6.32.00/io/io/src/TBufferFile.cxx:2336; #17 0xf722eaf7 in TStreamerInfo::WriteBufferAux<char**> (this=0x592155f0, b=..., arr=; 0xffefcb48: 0xffefcb44, compinfo=0x594d315c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:633; #18 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x594d3150) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #19 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x58dbeab4, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #20 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359; #24 0xf7ced0ad in TStreamerBase::WriteBuffer (this=0x590a9640, b=..., pointer=0x58ac5e90 ""260360"", <incomplete sequence 344>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:13105,optimiz,optimized,13105,https://root.cern,https://github.com/root-project/root/issues/15738,3,['optimiz'],['optimized']
Performance,"build/root-6.32.00/io/io/src/TBufferFile.cxx:2336; #17 0xf722eaf7 in TStreamerInfo::WriteBufferAux<char**> (this=0x592155f0, b=..., arr=; 0xffefcb48: 0xffefcb44, compinfo=0x594d315c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:633; #18 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x594d3150) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #19 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x58dbeab4, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #20 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359; #24 0xf7ced0ad in TStreamerBase::WriteBuffer (this=0x590a9640, b=..., pointer=0x58ac5e90 ""\260\360"", <incomplete sequence \344>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamer",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:3602,optimiz,optimized,3602,https://root.cern,https://github.com/root-project/root/issues/15738,3,['optimiz'],['optimized']
Performance,"builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:11032,optimiz,optimized,11032,https://root.cern,https://github.com/root-project/root/issues/12427,2,['optimiz'],['optimized']
Performance,"by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. [Detaching after vfork from child process 800350]; root [0] double f(double x) { return x*x; }; root [1] double y = f(3.0);; Failure value returned from cantFail wrapped call; inconsistent use of embedded source; UNREACHABLE executed at /srv/root/src/root/interpreter/llvm/src/include/llvm/Support/Error.h:782!. Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; 44	 return INTERNAL_SYSCALL_ERROR_P (ret) ? INTERNAL_SYSCALL_ERRNO (ret) : 0;; (gdb) . ```; I will try with dwarf-5 for everything, let's see if that helps. At least GDB didn't crash this time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:3139,optimiz,optimized,3139,https://root.cern,https://github.com/root-project/root/pull/11882,1,['optimiz'],['optimized']
Performance,"c++/12/bits/new_allocator.h:181; #14 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x22dedd8, __a=...) at /usr/include/c++/12/bits/alloc_traits.h:535; #15 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_node (__n=0x22dedd0, this=<optimized out>) at /usr/include/c++/12/bits/hashtable_policy.h:1984; #16 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_nodes (this=<optimized out>, __n=0x22ded30) at /usr/include/c++/12/bits/hashtable_policy.h:2006; #17 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this=0x1cf6570) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:15688,optimiz,optimized,15688,https://root.cern,https://github.com/root-project/root/issues/12023,2,['optimiz'],['optimized']
Performance,"c/TClingCallFunc.cxx:1006; #22 0x00007fff76908e78 in TClingCallFunc::IFacePtr (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:2004; #23 0x00007fff7682c3bc in TCling::CallFunc_IFacePtr (this=<optimized out>, func=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:7888; #24 0x00007fff7ca8f81c in GetCallFunc (method=<optimized out>) at /usr/include/c++/8/bits/locale_facets.h:877; #25 WrapperCall (method=6088041216, nargs=2, args_=0x7fffc4480880, self=0x16b1482f0, result=0x16b0b6990) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (method=6088041216, self=0x16b1482f0, nargs=2, args=0x7fffc4480880, result_type=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:594; #30 0x00007fff7cb4f480 in CPyCppyy::CPPMethod::ExecuteFast (ctxt=<optimized out>, offset=<optimized out>, self=<optimized out>, this=0x16ae03d30) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #31 CPyCppyy::CPPMethod::Execute (this=0x16ae03d30, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPP",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:31799,optimiz,optimized,31799,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,"c::LLJIT::lookup (UnmangledName=..., this=0x11efcd4b0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #16 cling::IncrementalJIT::getSymbolAddress (this=0x11ef800c0, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #17 0x00007fffa2a50208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x11efca180) at /usr/include/c++/8/bits/unique_ptr.h:345; #18 cling::IncrementalExecutor::executeWrapper (this=0x11efca180, function=..., returnValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #19 0x00007fffa299b964 in cling::Interpreter::RunFunction (this=0x11ef4d780, FD=<optimized out>, res=res; entry=0x7fffff157520) at /usr/include/c++/8/bits/basic_string.h:2306; #20 0x00007fffa29a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffff157520, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #21 0x00007fffa2aecf60 in cling::MetaSema::<lambda(cling::Transaction*, std::__cxx11::string, llvm::StringRef, cling::Value*)>::operator() (__closure=<synthetic pointer>, ret=0x7fffff157520, args=..., func=""rf104_classfactory"", T=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:643; #22 cling::MetaSema::actOnxCommand (this=0x11f2601d0, file=..., args=..., result=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #23 0x00007fffa2afed24 in cling::MetaParser::isXCommand (this=this; entry=0x7fffff1572b0, actionResult=; 0x7fffff157260: cling::MetaSema::AR_Success, resultValue=resultValue; entry=0x7fffff157520) at /usr/include/c++/8/bits/basic_string.h:2306; #24 0x00007f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:16484,optimiz,optimized,16484,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"c::LLJIT::lookup (UnmangledName=..., this=0x174098770) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x17404b400, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #15 0x00007fff9a450208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x174094f70) at /usr/include/c++/8/bits/unique_ptr.h:345; #16 cling::IncrementalExecutor::executeWrapper (this=0x174094f70, function=..., returnValue=0x7fffd51c7cb0) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #17 0x00007fff9a39b964 in cling::Interpreter::RunFunction (this=0x1740192b0, FD=<optimized out>, res=res; entry=0x7fffd51c7cb0) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fff9a3a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffd51c7cb0, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #19 0x00007fff9a24178c in TCling::Calc (this=0x174039100, line=0x174e16fa0 ""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""..., error=0x7fffd51c7de8) at /usr/include/c++/8/bits/basic_string.h:256; #20 0x00007fffa32551c8 in ROOT::Internal::RDF::<lambda(const string&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, codeSlice=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""...) at /usr/include/c++/8/bits/basic_string.h:2294; #21 ROOT::Internal::RDF::Inter",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:22899,optimiz,optimized,22899,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"call (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:26600,optimiz,optimized,26600,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"cals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:25062,optimiz,optimized,25062,https://root.cern,https://github.com/root-project/root/issues/15970,6,['optimiz'],['optimized']
Performance,"cation::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================; ```. **Expected behavior**. The output messages should be:. ```; Memory mapped file: hsimple.map; Title: Memory Mapped Hist; Option: CREATE; Mapped Memory region: 0xb46a5000 - 0xb46be000 (0.10 MB); Current breakval: 0xb46b0000; Object Class Size ; hpx TH1F 1024; ```. **To Reproduce:**. The source code test.cpp I am using follows:; ```cpp; // test.cpp; #include ""TROOT.h""; #include ""TApplication.h""; #include ""TH1F.h""; #include ""TH2F.h""; #include ""TMapFile.h""; #include ""TRandom.h"". void hprod();. #ifndef __CINT__ ; int main(int argc, char **argv); {; TApplication* theApp = n",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11353:2070,Load,LoadGraphicsLibs,2070,https://root.cern,https://github.com/root-project/root/issues/11353,1,['Load'],['LoadGraphicsLibs']
Performance,"ceLocal(TSysEvtHandler const*)::instance>); at /home/axel/build/root/master/src/core/meta/src/TGenericClassInfo.cxx:250; #8 0x00007ffff7dcf596 in TSysEvtHandler::Dictionary () at core/G__Core.cxx:14387; #9 0x00007ffff7d1db76 in TClass::LoadClassDefault (requestedname=0x7fffffffb399 ""TSysEvtHandler""); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5769; #10 0x00007ffff7d1da90 in TClass::LoadClass (requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5740; #11 0x00007ffff7bdd915 in TROOT::LoadClass (this=0x7ffff7f53460 <ROOT::Internal::GetROOT1()::alloc>, ; requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false) at /home/axel/build/root/master/src/core/base/src/TROOT.cxx:2119; #12 0x00007ffff7d14d58 in TClass::GetClass (info=0x555556980ba0, load=true, silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:3323; #13 0x00007ffff7d07144 in TBaseClass::GetClassPointer (this=0x555556980c70, load=true); at /home/axel/build/root/master/src/core/meta/src/TBaseClass.cxx:66; #14 0x00007ffff7c4b6eb in TQObject::CollectClassSignalLists (this=0x555555d8eac0, list=..., cls=0x55555608c200); at /home/axel/build/root/master/src/core/base/src/TQObject.cxx:461; #15 0x00007ffff7faf3ef in TQObject::EmitVA<>(char const*, int) (this=0x555555d8eac0, signal_name=0x7ffff7fa0db3 ""Added()""); at /home/axel/build/root/master/src/core/base/inc/TQObject.h:109; #16 0x00007ffff7fae61a in TQObject::Emit (this=0x555555d8eac0, signal=0x7ffff7fa0db3 ""Added()""); at /home/axel/build/root/master/src/core/base/inc/TQObject.h:173; #17 0x00007ffff7faec35 in TSysEvtHandler::Added (this=0x555555d8eab0); at /home/axel/build/root/master/src/core/base/inc/TSysEvtHandler.h:50; #18 0x00007ffff7c680da in TSignalHandler::Add (this=0x555555d8eab0); at /home/axel/build/root/master/src/core/base/src/TSysEvtHandler.cxx:172; #19 0x00007ffff7faadb5 in TRint::TRint (this=0x5555555d5780, appClassName=0x5555555549b8 ""Rint",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7123:7879,load,load,7879,https://root.cern,https://github.com/root-project/root/issues/7123,1,['load'],['load']
Performance,"ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b0691",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:26627,optimiz,optimized,26627,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"ch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:14542,optimiz,optimized,14542,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"chain->Add(""filename/treename"") is ambiguous when filename does not; end in `.root`: in that case `TChain` interprets its argument; as the full path to the file, with no treename specified. We now instead use the unambiguous syntax ""filename?query#treename""; when building chains in TTreeProcessorMT. This fixes #8739 (reading files with no `.root` extension in RDF's; multi-thread event loops).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8820:369,multi-thread,multi-thread,369,https://root.cern,https://github.com/root-project/root/pull/8820,1,['multi-thread'],['multi-thread']
Performance,"chain->Add(""filename/treename"") is ambiguous when filename does not; end in `.root`: in that case `TChain` interprets its argument; as the full path to the file, with no treename specified. We now instead use the unambiguous syntax ""filename?query#treename""; when building chains in TTreeProcessorMT. This fixes #8739 (reading files with no `.root` extension in RDF's; multi-thread event loops). Companion PR https://github.com/root-project/roottest/pull/758 adds a test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8741:369,multi-thread,multi-thread,369,https://root.cern,https://github.com/root-project/root/pull/8741,1,['multi-thread'],['multi-thread']
Performance,"civetweb server creates pre-coinfigured number of threads and this number cannot be change once server running. Each active websocket consumes one thread, where all communication handling is performed. ; To avoid situation that simple http requests fails just while websockets blocked all threads number of; websocket connection will be limited by 90% of configured threads. Issue warning message from `TCivetweb.cxx` when websocket connection refused because of threads number like:; ```; Error in <TCivetweb::WebSocketHandler>: Only 2 threads are available, reject connection request for win3. Increase WebGui.HttpThreads parameter in rootrc, now it is 7; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13542:191,perform,performed,191,https://root.cern,https://github.com/root-project/root/pull/13542,1,['perform'],['performed']
Performance,"ck with `readelf` reveals the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR` is the reason for this problem. ```; $ readelf -a /usr/local/lib/root/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. ```; $ readelf -a /usr/local/lib/python3.10/dist-packages/libcppyy3_10.so | grep -i runpath; 0x000000000000001d (RUNPATH) Library runpath: [$ORIGIN:$ORIGIN/../lib/root]; ```. As you can see above, the libraries installed to `CMAKE_INSTALL_PYTHONDIR` have the same runpath as the ones installed to `CMAKE_INSTALL_LIBDIR`, which shouldn't be the case if the two are different directories. ### Expected behavior; The libraries installed to `CMAKE_INSTALL_PYTHONDIR` should have the runpath set to the correct relative location of `CMAKE_INSTALL_LIBDIR` (`$ORIGIN/../../../lib/root` in the previous example). ### To Reproduce; 1. Configure the build with `CMAKE_INSTALL_PYTHONDIR` different from `CMAKE_INSTALL_LIBDIR` and with rpath enabled.; 2. Compile and install as usual.; 3. Try to use the python modules installed by ROOT, such as by running `rootbrowse`. ### Setup; - ROOT version 6.26/06; - Ubuntu 22.04 running on WSL2; - ROOT installed from source with the build config command `CUDACXX=/usr/local/cuda-11.7/bin/nvcc cmake -C config.cmake .. -DCMAKE_CUDA_ARCHITECTURES='86' -Dgnuinstall=ON -Dcuda=ON -Dcudnn=ON -Dtmva-gpu=ON -Dsoversion=ON -Dfortran=ON -DPYTHON_EXECUTABLE=/usr/bin/python -Drpath=ON`, where the file `config.cmake` contains; ```; set(CMAKE_INSTALL_PYTHONDIR ""lib/python3.10/dist-packages"" CACHE PATH ""python libraries and modules (same as LIBDIR)""); set(CMAKE_INSTALL_SYSCONFDIR ""/etc/root"" CACHE PATH ""read-only single-machine data (etc/root)""); ```. ### Additional context; A temporary workaround while this issue is not resolved is to manually modify the runpath of the libraries installed to `CMAKE_INSTALL_PYTHONDIR`, e.g. using `chrpath` or [`patchelf`](https://github.com/NixOS/patchelf).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11431:3384,CACHE,CACHE,3384,https://root.cern,https://github.com/root-project/root/issues/11431,2,['CACHE'],['CACHE']
Performance,"ckaging Guidelines some time ago added a section on packaging javascript files. This section says that minified scripts should be treated as compiled code. And like for programs written in other languages, pre-compiled code that is part of the sources must not be used in packaging, but must be regenerated from sources during the package build. I recently implemented these guidelines in the root package and found some issues. This pull request has three commits. 1) The word ""default"" is a reserved word in the language, and when used as a key in a dictionary it must be quoted. The yuicompressor minifier complains about this:; ```; $ yuicompressor etc/notebook/JsMVA/js/DecisionTree.js ; [ERROR] in etc/notebook/JsMVA/js/DecisionTree.js; 57:24:invalid property id; ```; 2. In one place (and one place only) in the script a construct from a very new version of the javascript standard is used for defining default values to function parameters. This unnecessarily makes the code incompatible with old browsers. It also makes it hard to run the minification during the package build as both yuicompressor and uglufyjs choke on it.; ```; $ yuicompressor etc/notebook/JsMVA/js/NeuralNetwork.js ; [ERROR] in etc/notebook/JsMVA/js/NeuralNetwork.js; 509:75:missing ) after formal parameters; ```; ```; $ uglifyjs etc/notebook/JsMVA/js/NeuralNetwork.js -c -m; Parse error at etc/notebook/JsMVA/js/NeuralNetwork.js:509,73; = function (divid, netobj, oldStructure=false) {; ^; SyntaxError: Unexpected token operator «=», expected punc «,»; ```; 3. The code has not been updated to reflect changes in jsroot. The code still tries to load d3.v3.min.js from jsroot. In the current version of jsroot the d3 script has been updated to version 4 and the file is now called d3.min.js. The pull request changes the name of the file in the two places where it is referenced, so it should now find the file. However this change is incomplete since the d3 API changes between the versions and some porting is needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1520:1640,load,load,1640,https://root.cern,https://github.com/root-project/root/pull/1520,1,['load'],['load']
Performance,"clang might need to find a definition, that ""we"" might have.; But we need to find it based on a type name from clang, from a fwd decl;; or (as in ROOT-10804) based on a typename-from-typeid operation.; So register that as an alias!. The normalized-name-as-known-to-ROOT and typeid-name can be different,; for instance for inline namespaces: stripped by ROOT, kept by typeid. ROOT-10804 has a complex case where a lookup of a template argument failed; because it involves an inline namespace, and LHCb uses typeid demangling.; LHCb's case needed a nested name from a type (`LHCb::Event::v1::Track`); that failed to load because `v1` is an inline namespace, thus failing; instantiation of `KeyedContainer<LHCb::Event::v1::Track,Containers::KeyedObjectManager<Containers::hashmap> >` and making it invalid.; The transaction unloading then fails to completely remove this instantiation; (an unrelated bug), such that the remainders of the invalid decl are picked; up by a subsequent template instantiation which then asserts because of the; incomplete (invalid) declaration. We use the mangle/demangle trick from rootcling.; Now that multiple locations need it, just store it with the AnnotatedRecordDecl.; It will be needed for most classes; the overhead should be bearable. (cherry picked from commit d9e819b82632cf02b3aaa251f5922b457b41624e)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5819:614,load,load,614,https://root.cern,https://github.com/root-project/root/pull/5819,1,['load'],['load']
Performance,"clang_rt.tsan_osx_dynamic.dylib`__tsan::user_free(__tsan::ThreadState*, unsigned long, void*, bool) + 234; frame #10: 0x000000011097c441 libclang_rt.tsan_osx_dynamic.dylib`wrap_free + 113 frame #11: 0x0000000134b3a45b libCling.6.22.06.so`clang::ASTReader::makeModuleVisible(clang::Module*, clang::Module::NameVisibilityKind, clang::SourceLocation) + 939; frame #12: 0x00000001348dc772 libCling.6.22.06.so`clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7106 frame #13: 0x0000000134ddcf80 libCling.6.22.06.so`clang::Sema::ActOnModuleImport(clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang:; :IdentifierInfo*, clang::SourceLocation> >) + 80 frame #14: 0x00000001345c73c9 libCling.6.22.06.so`cling::Interpreter::loadModule(clang::Module*, bool) + 345 * frame #15: 0x00000001344edc9a libCling.6.22.06.so`LoadModule(ModuleName=""Smatrix"", interp=0x00007b4c0000de40) at TCling.cxx:1066:18 [opt]; frame #16: 0x00000001344e29cf libCling.6.22.06.so`TCling::TCling(char const*, char const*, char const* const*) at TCling.cxx:1075:7 [opt]; frame #17: 0x00000001344e297e libCling.6.22.06.so`TCling::TCling(char const*, char const*, char const* const*) at TCling.cxx:1187 [opt]; frame #18: 0x00000001344e232b libCling.6.22.06.so`TCling::TCling(this=0x00007b58000ab600, name=<unavailable>, title=<unavailable>, argv=<unavailable>) at TCling.cx; x:1511 [opt]; frame #19: 0x00000001344dc2d5 libCling.6.22.06.so`::CreateInterpreter(void *, const char **) [inlined] TCling::TCling(this=<unavailable>, name=<unavailable>, title; =<unavailable>, argv=<unavailable>) at TCling.cxx:1303:1 [opt]; frame #20: 0x00000001344dc2bc libCling.6.22.06.so`::CreateInterpreter(interpLibHandle=<unavailable>, argv=<unavailable>) at TCling.cxx:616 [opt]; frame #21: 0x0000000110404e06 libCore.6.22.06.so`TROOT::InitInterpreter(this=0x0000000110637928) at TROOT.cxx:2051:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7418:2431,Load,LoadModule,2431,https://root.cern,https://github.com/root-project/root/issues/7418,1,['Load'],['LoadModule']
Performance,"className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466; #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630; #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,; dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431; #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",; ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273; #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",; ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607; #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",; isa=0x477430, info=..., id=2, cname=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:3538,optimiz,optimized,3538,https://root.cern,https://github.com/root-project/root/pull/2776,2,['optimiz'],['optimized']
Performance,cling caches lookup failure,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12778:6,cache,caches,6,https://root.cern,https://github.com/root-project/root/issues/12778,1,['cache'],['caches']
Performance,"clude \""cling/Interpreter/RuntimeUniverse.h\""; - #include \""cling/Interpreter/DynamicLookupRuntimeUniverse.h\""; - namespace cling { class Interpreter; namespace runtime { Interpreter* gCling }}}; - PrintValue; These are passed to Cling as string and initialized at the start up time. So I think it makes sense to reduce top-level global variables, #includes and eagerly deserializations. 1. Global variables; If we break at emitModule, we can get a list of global variables and functions which are actually deserialized. These include functions, variables, STL classes and all the functions derives from them. I tried to change them to for example constexpr, so that it's processed at compile time.; 2. Eagerly Deserialized decls; Thanks to @Axel 's hint and tip, we could minimize eagerly deserialized decls deserialized in ASTReader::PassInterestingDeclsToConsumer. We already removed most of eagerly deserialized decls (Some are remaining to be removed, some are hard to remove and some don't cost a lot). So far, we got 9.2% of cpu time improvement, 15% real time improvement and 8.8% of memory improvement at start up time in release build. I took an average, but the variation of the real-time was very big. - root.exe -q -l; - master; cpu time = 0.09186914285714286 sec (average of 7 times); real time = 0.18371428571428572 sec (average of 7 times); res memory = 142.008 Mbytes. - HEAD; cpu time = 0.08337842857142856 sec; real time = 0.15685714285714286 sec; res memory = 129.508 Mbytes. - hsimple.C; Improved by 13% of cpu time and 8.5% of memory; - master; cpu time = 0.0954708 sec (average); res memory = 142.891 Mbytes. - HEAD; cpu time = 0.0833258 sec; res memory = 130.73 Mbytes. With modules; - Improvement by 17.7% in cputime and 2% in memory on root.exe -q -l; (For memory, small improvement is because most of the memory is taken by LoadModules); - With this patch, release modules is 11.2% slower in cpu time and 6% better in residential memory compared to release without modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1790:1922,Load,LoadModules,1922,https://root.cern,https://github.com/root-project/root/pull/1790,1,['Load'],['LoadModules']
Performance,"clude/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:8463,optimiz,optimized,8463,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"clude/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:9769,optimiz,optimized,9769,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"clude/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:11075,optimiz,optimized,11075,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"clude/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:12381,optimiz,optimized,12381,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"clude/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:13687,optimiz,optimized,13687,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"clude/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:14993,optimiz,optimized,14993,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"clude/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:16299,optimiz,optimized,16299,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,cmake: Replace ever expanding modules_idx_deps cached variable,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11506:47,cache,cached,47,https://root.cern,https://github.com/root-project/root/pull/11506,1,['cache'],['cached']
Performance,"cname=0x7ffff7af4b40 ""TSysEvtHandler"", id=0, info=..., isa=0x5555555bff60, dfil=0x7ffff7af6f65 ""TSysEvtHandler.h"", ; ifil=0x7ffff7adf928 ""/home/axel/build/root/master/src/core/base/src/TSysEvtHandler.cxx"", dl=28, il=22) at include/TQClass.h:70; #7 0x00007ffff7d3c467 in ROOT::TGenericClassInfo::GetClass (; this=0x7ffff7f7ce60 <ROOT::GenerateInitInstanceLocal(TSysEvtHandler const*)::instance>); at /home/axel/build/root/master/src/core/meta/src/TGenericClassInfo.cxx:250; #8 0x00007ffff7dcf596 in TSysEvtHandler::Dictionary () at core/G__Core.cxx:14387; #9 0x00007ffff7d1db76 in TClass::LoadClassDefault (requestedname=0x7fffffffb399 ""TSysEvtHandler""); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5769; #10 0x00007ffff7d1da90 in TClass::LoadClass (requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5740; #11 0x00007ffff7bdd915 in TROOT::LoadClass (this=0x7ffff7f53460 <ROOT::Internal::GetROOT1()::alloc>, ; requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false) at /home/axel/build/root/master/src/core/base/src/TROOT.cxx:2119; #12 0x00007ffff7d14d58 in TClass::GetClass (info=0x555556980ba0, load=true, silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:3323; #13 0x00007ffff7d07144 in TBaseClass::GetClassPointer (this=0x555556980c70, load=true); at /home/axel/build/root/master/src/core/meta/src/TBaseClass.cxx:66; #14 0x00007ffff7c4b6eb in TQObject::CollectClassSignalLists (this=0x555555d8eac0, list=..., cls=0x55555608c200); at /home/axel/build/root/master/src/core/base/src/TQObject.cxx:461; #15 0x00007ffff7faf3ef in TQObject::EmitVA<>(char const*, int) (this=0x555555d8eac0, signal_name=0x7ffff7fa0db3 ""Added()""); at /home/axel/build/root/master/src/core/base/inc/TQObject.h:109; #16 0x00007ffff7fae61a in TQObject::Emit (this=0x555555d8eac0, signal=0x7ffff7fa0db3 ""Added()""); at /home/axel/build/root/master/src/core/base/inc/TQObject.h:173; #17 0x00007ffff7faec35 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7123:7448,Load,LoadClass,7448,https://root.cern,https://github.com/root-project/root/issues/7123,1,['Load'],['LoadClass']
Performance,"comp_tracklet);; cout << ""Start to sort "" << std::distance(digits->begin(), digits->end()) << "" digits..."" << endl;; std::stable_sort(digits->begin(), digits->end(), comp_digit);; }. }; ```. The code creates the following stack trace:; ```; Fatal: fArray && ""invalid iterator!"" violated at line 118 of `/scratch/tdietel/alisw/slc7_x86-64/ROOT/v6-28-04-14/include/TTreeReaderArray.h'; aborting; #0 0x00007fa77058860c in waitpid () from /lib64/libc.so.6; #1 0x00007fa770505f62 in do_system () from /lib64/libc.so.6; #2 0x00007fa7712b7b8c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x165c5b0) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x165c5b0) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fa771198e69 in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=<optimized out>) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/base/src/TErrorDefaultHandler.cxx:177; #5 0x00007fa77124a7d5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fa750f2eabe """", fmt=<optimized out>, ap=0x7fff0771d888) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/foundation/src/TError.cxx:153; #6 0x00007fa77124b302 in Fatal (location=<optimized out>, fmt=<optimized out>) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/foundation/src/TError.cxx:251; #7 0x00007fa750f2a19e in void std::__merge_adaptive<TTreeReaderArray<o2::trd::Tracklet64>::Iterator_t<TTreeReaderArray<o2::trd::Tracklet64> >, long, o2::trd::Tracklet64*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(o2::trd::Tracklet64, o2::trd::Tracklet64)> >(TTreeReaderArray<o2::trd::Tracklet64>::Iterator_t<TTreeReaderArray<o2::trd::Tracklet64> >, TTr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:4653,optimiz,optimized,4653,https://root.cern,https://github.com/root-project/root/issues/13314,4,['optimiz'],['optimized']
Performance,"concatenation of pages from the same page-group can achieve.; - `RPageSinkDaos::CommitSealedPageVImpl()` maps pages from the same page-group to the same attribute key, thus concatenating them on the DAOS-side (i.e. relies on scatter-gathered I/O) until the cage limit is reached. The cage sizes can vary due to page compression and the length of page-groups, thus it is calculated and stored to be referenced when reading back.; - `RWOperation` is generalized to allow many IOVs associated with one attribute key in a request, enabling the non-contiguous buffers of sealed pages to be aggregated into a cage under the same position ID in the object store. ; - `RNTupleLocator`: leverages the changes introduced by PR #11828; all DAOS locators use the type `kDaos` and payload format `RNTupleLocatorObject64`. To locate pages within a cage, the 64-bit payload encodes the cage index in the LS half and the offset in the MS half. If caging is disabled, the offset remains zero, and each 'cage' is trivially the sealed page.; - Currently, there are no plans to enable support for page-wise reading without cluster caching if the desired page is caged, as that use-case is not performant and thus not recommended. Caged pages in DAOS should be accessed with the page buffering read option turned on. By disallowing the reading of a single caged page when the wrapping cage size is unknown, the cage sizes - or upper bounds for them - do not need to be passed to `RPageSourceDaos`; they are trivially devised in `RPageSourceDaos::LoadClusters()` by accessing all page locators in a buffered page-group. ; - `RPageSourceDaos::LoadClusters()` and `RPageSourceDaos::PopulatePageFromCluster()` extract the cage position and offset-in-cage from each sealed page's `RNTupleLocator::fPosition`. The former function has been changed to coalesce the page locators by cage index and perform a single read operation per cage. ## Checklist:. - [x] tested changes locally + HPE `delphi` cluster; - [x] updated the docs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11466:2553,perform,performant,2553,https://root.cern,https://github.com/root-project/root/pull/11466,4,"['Load', 'perform']","['LoadClusters', 'perform', 'performant']"
Performance,"core/base/src/TSystem.cxx:3813; #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542; #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520; #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591; #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463; #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436; #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795; #64 0x00007f54c943fe5e in TRint::Run (this=this; entry=0x55ed24b82e70, retrn=retrn; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446; #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Pleas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:15070,optimiz,optimized,15070,https://root.cern,https://github.com/root-project/root/issues/9595,2,['optimiz'],['optimized']
Performance,"core/src/RooAbsArg.cxx:870; #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847; #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923; #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832; #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830; #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,; prototype=<optimized out>, auxProto=0x0, verbose=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63; #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,; auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55; #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,; auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055; #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,; auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014; #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,; autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2259; #17 0x00007ffff7fde51f in ?? (); #18 0x0000000000000000 in ?? (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547:2805,optimiz,optimized,2805,https://root.cern,https://github.com/root-project/root/issues/9547,4,['optimiz'],['optimized']
Performance,"cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:594; #30 0x00007fff7cb4f480 in CPyCppyy::CPPMethod::ExecuteFast (ctxt=<optimized out>, offset=<optimized out>, self=<optimized out>, this=0x16ae03d30) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #31 CPyCppyy::CPPMethod::Execute (this=0x16ae03d30, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #32 0x00007fff7cb4fe44 in CPyCppyy::CPPMethod::Call (this=0x16ae03d30, self=; 0x7fff6b79ae90: 0x7fff6b533fc0, args=0x7fff7cc54b08, kwds=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783; #33 0x00007fff7cb56de8 in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fff6b79ae80, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /usr/include/c++/8/bits/move.h:74; #34 0x00007fff7cb93498 in CPyCppyy::tpp_call (pytmpl=0x7fff6b53b228, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:598; #35 0x00007fff8a3d0fec in _PyObject_FastCallKeywords () from /lib64/libpython3.6m.so.1.0; #36 0x00007fff8a3d1ed4 in call_function () from /lib64/libpython3.6m.so.1.0; #37 0x00007fff8a3d2fb4 in _PyEval_EvalFrameDefaul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:32690,optimiz,optimized,32690,https://root.cern,https://github.com/root-project/root/issues/12372,3,['optimiz'],['optimized']
Performance,"critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/hep_concurrency/v1_05_00/slf7.x86_64.e19.debug/include/hep_concurrency/SerialTaskQueueChain.h:69; #12 0x00007ffff63e9939 in hep::concurrency::QueuedTask<hep::concurrency::SerialTaskQueueChain::passDown(unsigned int, const T&) [with T = art::(anonymous namespace)::RunWorkerFunctor]::<lambda()> >::execute(void); (this=0x7fffe8ec7940) at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/hep_concurrency/v1_05_00/slf7.x86_64.e19.debug/include/hep_concurrency/SerialTaskQueue.h:86; #13 0x00007ffff4e9db71 in tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::process_bypass_loop (this=0x7fffe8ed2600, context_guard=..., t=0x7fffe8ec7940, isolation=0); at ../../src/tbb/custom_scheduler.h:474. === end of File opening stack.; ```. On Dec 9, 2020, at 2:30 PM, Kyle Knoepfel <knoepfel@fnal.gov> wrote:. > Hi Philippe,; > ; > I have spent hours trying to debug a multi-threading error that appears when processing concurrent events with art's ROOT-based facilities. There are three ingredients required to reproduce the problem:; > • Must use multiple events and threads in flight; > • Must enable either art's TFileService or RootOutput module; > • Must use art's product-mixing module that wraps around to the beginning of the file once the set of secondary events has been exhausted; > ; > To reproduce the error on scisoftbuild01, first checkout the source code:; > ; > git clone https://cdcvs.fnal.gov/projects/critic; > cd critic; > git checkout for-philippe; > ; > Then build the code and run the tests:; > ; > source /products/setup; > mkdir /scratch/pcanal/build-critic && cd $_; > source ~/critic/ups/setup_for_development -d; > buildtool --generator=ninja -j12 -T; > ; > The test that demonstrates the MT error often hangs due to a memory error (I believe). If the above tests don't complete, then CTRL+C out of them and try running the single problematic test:; > ; > ctes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:6116,multi-thread,multi-threading,6116,https://root.cern,https://github.com/root-project/root/issues/6939,2,"['concurren', 'multi-thread']","['concurrent', 'multi-threading']"
Performance,"cro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'O')"" 2>&1 | grep user.*system); done; ```. Output:; ```; /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; ROOT Version: 6.22/06; Built for linuxx8664gcc on Nov 27 2020, 15:14:08; From tags/v6-22-06@v6-22-06; 14.56user 22.74system 2:30.29elapsed 24%CPU (0avgtext+0avgdata 869920maxresident)k; 14.52user 21.71system 2:08.49elapsed 28%CPU (0avgtext+0avgdata 870036maxresident)k; 14.26user 21.65system 1:13.75elapsed 48%CPU (0avgtext+0avgdata 869908maxresident)k; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh; ROOT Version: 6.25/01; Built for linuxx8664gcc on Apr 01 2021, 03:35:00; From heads/master@v6-25-01-520-g875e8fb; 14.66user 24.65system 1:47.89elapsed 36%CPU (0avgtext+0avgdata 936048maxresident)k; 14.36user 23.63system 1:15.73elapsed 50%CPU (0avgtext+0avgdata 936036maxresident)k; 17.88user 26.28system 10:23.67elapsed 7%CPU (0avgtext+0avgdata 936052maxresident)k; ```; ### Expected behavior; Once binaries are created, there should be an option for an almost instantaneous run on the next iterations. . ### To Reproduce; All files are in `/afs/cern.ch/user/t/tnanut/public/Stephan/` (neither format is allowed to be attached).; ```py; python3 /afs/cern.ch/user/t/tnanut/public/Stephan/testRooThreshold.py; ```. ### Setup; 1. ROOT version: 6.22/06 and latest nightlies version; 2. Operating system: lxplus; 3. How you obtained ROOT:; Nightlies:; ```; source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh; ```; 6.22: through LHCb; ```; /cvmfs/lhcbdev.cern.ch/conda/envs/default/2021-02-03_15-01/linux-64/bin/root; ```. ### Additional context; I'd be also interested if you know an alternative method how to implement the class from the .cpp file into python, that can provide nearly instantaneous loading on reruns.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7774:3603,load,loading,3603,https://root.cern,https://github.com/root-project/root/issues/7774,1,['load'],['loading']
Performance,"ction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:7157,optimiz,optimized,7157,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"ctorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, glo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:23040,optimiz,optimized,23040,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"cxx; index ad0100e377..f29a67b65b 100644; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx; @@ -492,7 +492,8 @@ void TTreeProcessorMT::Process(std::function<void(TTreeReader &)> func); const auto &clusters = clustersAndEntries.first[0];; const auto &entries = clustersAndEntries.second[0];; auto processCluster = [&](const EntryRange &c) {; - auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; + gDirectory = nullptr; // TDirectory::TContext ctxt(nullptr);; + auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; func(*r);; };; fPool.Foreach(processCluster, clusters);; ```; Some might require some redesign:; ```; // Avoid spin lock inside GetThisSlotNumber just to get a thread local value ... but is this value; // really the same for the life of the thread ... and if so why is the next bottleneck then in: ROOT::Internal::RSlotStack::ReturnSlot; diff --git a/core/thread/inc/ROOT/TThreadedObject.hxx b/core/thread/inc/ROOT/TThreadedObject.hxx; index b3d73228e3..cff216e67f 100644; --- a/core/thread/inc/ROOT/TThreadedObject.hxx; +++ b/core/thread/inc/ROOT/TThreadedObject.hxx; @@ -279,7 +279,8 @@ namespace ROOT {; /// ~~~; std::shared_ptr<T> Get(); {; - return GetAtSlot(GetThisSlotNumber());; + static thread_local unsigned thisSlotNumber = GetThisSlotNumber();; + return GetAtSlot(thisSlotNumber);; }; ; /// Access the wrapped object and allow to call its methods.; ```; The next bottleneck after that might be:; ```; #5 0x00007ffff01a8c69 in std::unique_lock<std::mutex>::unique_lock (this=0x7ffedfffd910, __m=...) at /usr/include/c++/11/bits/unique_lock.h:69; #6 0x00007ffff01ca1e9 in TClingClassInfo::GetBaseOffset (this=0x555558a126a0, base=0x555555c8b500, address=0x0, isDerivedObject=true) at /home/pcanal/root_working/code/root/core/metacling/src/TClingClassInfo.cxx:616; ```. Note: that those in themselves are not su",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12761:3578,bottleneck,bottleneck,3578,https://root.cern,https://github.com/root-project/root/issues/12761,1,['bottleneck'],['bottleneck']
Performance,"cypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196; #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626; #8 <signal handler called>; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:11496,optimiz,optimized,11496,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,"d crashing reproducibly both with GCC 8.5.0 and Clang 13 (assuming I didn't do something stupid). ### Output; ```; Processing runmapvector.C...; Warning in <TClass::Init>: no dictionary for class MyEvent is available; ***********************************; * Row * Instance * data.firs *; ***********************************; * 0 * 0 * 3 *; ***********************************; ***********************************; * Row * Instance * data.seco *; ***********************************; * 0 * 0 * 5 *; * 0 * 1 * 7 *; ***********************************; free(): invalid next size (fast); ```. ### Backtrace; ```; #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6; #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6; #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6; #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6; #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6; #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 ; #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 ; #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 ; #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 ; #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 ; #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 ; #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 ; #12 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543:1083,optimiz,optimized,1083,https://root.cern,https://github.com/root-project/root/issues/9543,1,['optimiz'],['optimized']
Performance,"d in RClusterPool. To this end, an `RPageSink` is created at the beginning of the pipeline with the same header as the RNTuple being read. After the compressed cluster is retrieved in memory, its columns and pages are traversed and saved to the cached RNTuple. For now this feature can be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8329:1339,cache,cachedntuple,1339,https://root.cern,https://github.com/root-project/root/pull/8329,1,['cache'],['cachedntuple']
Performance,d module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3281,load,load,3281,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,d module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3247,load,load,3247,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,d module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Core; >Failed to load module Rint; >Failed to load module RIO; >Failed to load module MathCore; >Failed to load module Hist; >Failed to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTW,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4238,load,load,4238,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,d module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUtil; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ROOTTreeViewer; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to loa,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:2277,load,load,2277,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,"d out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:25415,optimiz,optimized,25415,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,d to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749; /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]; /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]; /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116; /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]; 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542; 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543; 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605; 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605; 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609; 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609; 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613; 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406; 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189; 10: expanded from macro '__isctype' in /usr/include/ctype.h:89; 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406; 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189; 13: expanded from macro '__isctype' in /u,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:39824,load,loaded,39824,https://root.cern,https://github.com/root-project/root/issues/7410,1,['load'],['loaded']
Performance,d to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUtil; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ROOTTreeViewer; Failed to load module MathCore; Failed to load module Gviz3d; Failed to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:2211,load,load,2211,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,d to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module FitPanel; Failed to load module Unuran; Failed to load module Quadp; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Faile,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:1892,load,load,1892,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,d to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5131,load,load,5131,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,d to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4302,load,load,4302,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,d to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5644,load,load,5644,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,d to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBenc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4209,load,load,4209,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,"d to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBaseD2Ev' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::~RPadBase(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RDrawable; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:4094,load,load,4094,https://root.cern,https://github.com/root-project/root/issues/14587,1,['load'],['load']
Performance,"d using one of the following flags. Currently only one can be used at a time. --all-branches; Reads every branch from the specified files and TTrees.; --branches bname1 [bname2...]; Reads the branches with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:2093,throughput,throughputs,2093,https://root.cern,https://github.com/root-project/root/pull/14039,1,['throughput'],['throughputs']
Performance,"d); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:2574,load,load-libs,2574,https://root.cern,https://github.com/root-project/root/issues/7936,1,['load'],['load-libs']
Performance,"d*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x11efca180) at /usr/include/c++/8/bits/unique_ptr.h:345; #18 cling::IncrementalExecutor::executeWrapper (this=0x11efca180, function=..., returnValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #19 0x00007fffa299b964 in cling::Interpreter::RunFunction (this=0x11ef4d780, FD=<optimized out>, res=res; entry=0x7fffff157520) at /usr/include/c++/8/bits/basic_string.h:2306; #20 0x00007fffa29a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffff157520, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #21 0x00007fffa2aecf60 in cling::MetaSema::<lambda(cling::Transaction*, std::__cxx11::string, llvm::StringRef, cling::Value*)>::operator() (__closure=<synthetic pointer>, ret=0x7fffff157520, args=..., func=""rf104_classfactory"", T=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:643; #22 cling::MetaSema::actOnxCommand (this=0x11f2601d0, file=..., args=..., result=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #23 0x00007fffa2afed24 in cling::MetaParser::isXCommand (this=this; entry=0x7fffff1572b0, actionResult=; 0x7fffff157260: cling::MetaSema::AR_Success, resultValue=resultValue; entry=0x7fffff157520) at /usr/include/c++/8/bits/basic_string.h:2306; #24 0x00007fffa2affe20 in cling::MetaParser::isCommand (this=0x7fffff1572b0, actionResult=; 0x7fffff157260: cling::MetaSema::AR_Success, resultValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; #25 0x00007fffa2ae4044 in cling::MetaProcessor::process (this=0x11f260fc0, input_line=..., compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=0x7fffff157520, disableValuePrinting=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:16896,optimiz,optimized,16896,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"d5768 <_PyRuntime+59656>, unreachable=unreachable; entry=0x7ffcb1bbae50) at Modules/gcmodule.c:1100; #14 0x00007fc00f8df921 in gc_collect_main (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2, n_collected=n_collected; entry=0x7ffcb1bbaea8, n_uncollectable=n_uncollectable; entry=0x7ffcb1bbaea0, nofail=nofail; entry=0) at Modules/gcmodule.c:1226; #15 0x00007fc00f8dfe5e in gc_collect_with_callback (tstate=tstate; entry=0x7fc00fbef818 <_PyRuntime+166328>, generation=generation; entry=2) at Modules/gcmodule.c:1400; #16 0x00007fc00f8e042f in PyGC_Collect () at Modules/gcmodule.c:2086; #17 0x00007fc00f8b893d in Py_FinalizeEx () at Python/pylifecycle.c:1830; #18 0x00007fc00f8dd981 in Py_RunMain () at Modules/main.c:682; #19 0x00007fc00f8dd9d4 in pymain_main (args=args; entry=0x7ffcb1bbaf90) at Modules/main.c:710; #20 0x00007fc00f8dda59 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:734; #21 0x000000000040112f in main (argc=<optimized out>, argv=<optimized out>) at ./Programs/python.c:15; ```. Adding a `del f` at the end doesn't trigger this. . Attaching gdb, the failed assertion is: . ```; 1209	 if (type->tp_flags & Py_TPFLAGS_MANAGED_DICT) {; 1210	 assert(type->tp_dictoffset);; 1211	 int err = _PyObject_VisitInstanceAttributes(self, visit, arg);; 1212	 if (err) {; 1213	 return err;; 1214	 }; ```. So it seems to likely have something to do with #12857. Oddly, it does not seem to affect my system ROOT version (packaged by Fedora) which is also ROOT 6.28.06 and presumably built with Python 3.11, suggesting that there may be something complicated going on (I was only building my own ROOT in hopes of reproducing @clark2668's problem). None of the patches Fedora applies seem to be relevant, but probably there are differences in compilation flags. . Looking at the documentation for Py_TPLAGS_MANAGED_DICT at https://docs.python.org/dev/c-api/typeobj.html#c.Py_TPFLAGS_MANAGED_DICT (which wrongly implies it's new",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13694:2216,optimiz,optimized,2216,https://root.cern,https://github.com/root-project/root/issues/13694,2,['optimiz'],['optimized']
Performance,"d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L656-L657 and all other similar calls in `RDFInterfaceUtils.cxx`. The memory management of such objects is handled in the subsequent call to `ROOT::Internal::RDF::Jit*Helper` functions. The code to invoke is booked with the RLoopManager via [`lm->ToJitExec`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RDFInterfaceUtils.cxx#L686) but is not compiled and executed right away. The cling invokation only happens in [`RLoopManager::Jit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L804), which gets all the code previously declared by *any* RDataFrame within the same application via the singleton returned by [`GetCodeToJit`](https://github.com/root-project/root/blob/e83e0e94a5e10f2cb97a5ff9cb57d5de0d25b9e5/tree/dataframe/src/RLoopManager.cxx#L67). The fact that all the code from all the RDatFrame objects is JITted at the same time is an optimization, but it has a fragility. In case an RDataFrame books some JITted operation but the computation graph is never triggered, it will leak memory of those objects that were created on the heap but never freed by the corresponding helper functions. Furthermore, those objects in turn are connected to their respective RDataFrame object, which meanwhile can already be gone out of scope. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <iostream>; #include <TFile.h>; #include <TTree.h>; #include <ROOT/RLogger.hxx>. auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kDebug + 10);. int main(); {. {; std::cout << ""Begin scope\n"";; ROOT::RDataFrame rdf(1);; auto df1 = rdf.Define(""x"", ""42"");; std::cout << ""End scope\n"";; }; }; ```. Compile and run with valgrind:; ```; $: g++ -O2 -g -o repro_leak.out repro_leak.cpp `root-config --cflags --glibs`; valgrind --leak-check=full -",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15399:1292,optimiz,optimization,1292,https://root.cern,https://github.com/root-project/root/issues/15399,1,['optimiz'],['optimization']
Performance,"d6.cxx:9; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fc0d9056288 in TPad::Close(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fc0d905f746 in TPad::~TPad() [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x00007fc0d905f919 in TPad::~TPad() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #8 0x000000000040124b in main (argc=<optimized out>, argv=<optimized out>) at /test/pad6.cxx:9; ===========================================================. ```. ## Expected behavior; No crash. ## To Reproduce; Code ; ```; #include <TCanvas.h>. int main(int argc, char **argv) {; TCanvas* C= new TCanvas(""cnvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad();; c->SetPad(0,0,1,1);; c->cd(1);; delete c;; delete C;; return 0;; }. ```; Compile; ```; g++ pad6.cxx $(root-config --glibs --cflags --libs) -o pad6 -g; ```. Run; ```; ./pad6; ```. ## Setup; EPEL ROOT 62202/gcc485/CentOS7; ROOT night buil/gcc10/lxplus; ; ## Additional context; Possible fix in Tpad::Close; Replace; ```; if (fCanvas->GetPadSave() == this); fCanvas->ClearPadSave();; if (fCanvas->GetSelectedPad() == this); fCanvas->SetSelectedPad(0);; if (fCanvas->GetClickSelectedPad() == this); fCanvas->SetClickSelectedPad(0);; ```; with. ```; if (fCanvas); {; if (fCanvas->GetPadSave() == this); fCanvas->ClearPadSave();; if (fCanvas->GetSelectedPad() == this); fCanvas->SetSe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6453:2372,optimiz,optimized,2372,https://root.cern,https://github.com/root-project/root/issues/6453,2,['optimiz'],['optimized']
Performance,"d::shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const>::~shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #21 ROOT::Internal::RDF::RColumnRegister::~RColumnRegister (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RColumnRegister.hxx:43; #22 ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::~RInterface (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RInterface.hxx:104; #23 main (argc=<optimized out>, argv=<optimized out>) at /home/yan/codes/RDF_bug_report/main.cxx:82; ```; </details>. <details>; <summary>ROOT backtrace</summary>. ```; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; rax 0xfffffffffffffe00 rbx 0x00007ffe6d80d638 rcx 0x00007ff0e8af95c7; rdx 0x0000000000000000 rsi 0x00007ffe6d80d638 rdi 0x00000000000d979c; rbp 0x00007ffe6d80d6a0 rsp 0x00007ffe6d80d628 r8 0x0000000000000001; r9 0x0000000000000000 r10 0x0000000000000000 r11 0x0000000000000202; r12 0x0000000000000000 r13 0x00007ffe6d80d660 r14 0x00007ffe6d80df50; r15 0x0000000000691200 rip 0x00007ff0e8af95c7 eflags [ IF ] ; cs 0x00000033 ss 0x0000002b ds 0x00000000 ; es 0x00000000 fs 0x00000000 gs 0x00000000 ; #0 0x00007ff0e8af95c7 in __GI___wait4 (pid=890780, stat_loc=stat_loc; entry=0x7ffe6d80d638, options=options; entry=0, usage=usage; entry=0x0) at ..",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:11324,optimiz,optimized,11324,https://root.cern,https://github.com/root-project/root/issues/12023,2,['optimiz'],['optimized']
Performance,"d::shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const>::~shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #28 ROOT::Internal::RDF::RColumnRegister::~RColumnRegister (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RColumnRegister.hxx:43; #29 ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::~RInterface (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RInterface.hxx:104; #30 main (argc=<optimized out>, argv=<optimized out>) at /home/yan/codes/RDF_bug_report/main.cxx:82; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:22177,optimiz,optimized,22177,https://root.cern,https://github.com/root-project/root/issues/12023,2,['optimiz'],['optimized']
Performance,"da/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344; #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271; #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230; #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317; #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this; entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431; #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this; entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406; #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl; entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638; #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838; #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940; #32 0x00007f54c1b27e7c in cling::In",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:6469,optimiz,optimized,6469,https://root.cern,https://github.com/root-project/root/issues/9595,2,['optimiz'],['optimized']
Performance,date and needs to be rebuilt; >Failed to load module libc; >Failed to load module std; >Failed to load module _Builtin_intrinsics; >Failed to load module ROOT_Foundation_C; >Failed to load module ROOT_Rtypes; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Core; >Failed to load module Rint; >Failed to load module RIO; >Failed to load module MathCore; >Failed to load module Hist; >Failed to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4015,load,load,4015,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"dd the following code:. ```.diff; + TDirectory::TContext context;; currentFile_.reset(TFile::Open(filename.c_str()));; ```. Although this fixes the problem for us, Philippe encouraged me to open up an issue to address this limitation. A slightly adjusted history of the relevant email correspondence is below. ----. Hi Kyle,. On the first user TFile destruction, the destructors is executed (in my case) on Thread 3 (see gdb output below) but the file is the current directory in Thread 1. The point where the file is opened and Thread 1's gDirectory is set is described in the stack trace below. It is likely that the problem is solved by adding:. TDirectory::TContext ctxt;. at the start of `art::RootIOPolicy::openAndReadMetaData`. This will insure that the new created file pointer is 'forgotten' by Thread 1's gDirectory and thus it should solve the problem. Cheers,; Philippe. ```; === gdb output. Thread 3 ""art"" hit Breakpoint 3, TFile::~TFile (this=0x3743520, __in_chrg=<optimized out>); at /scratch/workspace/canvas-products-all/vdevelop-/SLF7/e19-debug/build/root/v6_22_02/source/root-6.22.02/io/io/src/TFile.cxx:500; 500 TFile::~TFile(); 1: this->GetName() = 0x3721c50 ""../ProductMix_trimmed_w.d/mix_trimmed.root""; (gdb) thread apply all p TDirectory::CurrentDirectory(). Thread 4 (Thread 0x7fffd36a4700 (LWP 202402)):; $21 = (TDirectory *&) @0x7307188: 0x7fffeb0ec380 <ROOT::Internal::GetROOT1()::alloc>. Thread 3 (Thread 0x7fffd2ca3700 (LWP 202401)):; $22 = (TDirectory *&) @0x7412118: 0x3380870. Thread 2 (Thread 0x7fffd40a5700 (LWP 202400)):; $23 = (TDirectory *&) @0x74198d8: 0x7fffeb0ec380 <ROOT::Internal::GetROOT1()::alloc>. Thread 1 (Thread 0x7ffff7fb3b00 (LWP 202191)):; $24 = (TDirectory *&) @0x7fffeb0ecb60: 0x3743520. === end of gdb output; ```; ```; === File opening stack trace. #0 TFile::Open (url=0x3384770 ""../ProductMix_trimmed_w.d/mix_trimmed.root"", options=0x7fffedd7b7e1 """", ftitle=0x7fffedd7b7e1 """", compress=101, netopt=0); at /scratch/workspace/canvas-products-all",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:1393,optimiz,optimized,1393,https://root.cern,https://github.com/root-project/root/issues/6939,1,['optimiz'],['optimized']
Performance,"ddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:4969; #24 0x00007fffa92e0724 in TBufferFile::ReadObjectAny (this=0x7ffff83ea100, clCast=0x10a861920) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:2458; #25 0x00007fffa9389c44 in TGenCollectionStreamer::ReadObjects (this=0x10a861070, nElements=<optimized out>, b=..., onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:395; #26 0x00007fffa938a6f8 in TGenCollectionStreamer::ReadBufferGeneric (this=<optimized out>, b=..., obj=0x109986cc0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1368; #27 0x00007fffa93850a8 in TGenCollectionStreamer::ReadBufferDefault (this=0x10a861070, b=..., obj=0x109986cc0, onFileClass=0x0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1302; #28 0x00007fffa9384f00 in TGenCollectionStreamer::ReadBuffer (this=<optimized out>, b=..., obj=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1232; #29 0x00007fffa933ff7c in TCollectionClassStreamer::Stream (onfileClass=0x10a860aa0, obj=0x109986cc0, b=..., this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:177; #30 TCollectionClassStreamer::Stream (this=<optimized out>, b=..., obj=0x109986cc0, onfileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:172; #31 0x00007fffa8f04014 in TClass::StreamerExternal (pThis=<optimized out>, object=0x109986cc0, b=..., onfile_class=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6783; #32 0x00007fffa92db554 in TClass::Streamer (onfile_class=0x10a860aa0, b=..., obj=<optimized out>, this=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #33 TBufferFile::ReadFastArray (streamer=0x0, onFileClass=0x10a860aa0, n=1, cl=0x10a860aa0, start=<optimized out>, this=0x7ffff83ea100) at /bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:7368,optimiz,optimized,7368,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"ddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake E",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:13302,LOAD,LOADER,13302,https://root.cern,https://github.com/root-project/root/issues/12429,1,['LOAD'],['LOADER']
Performance,"dex 7a094cc01f..d74c69aa2b 100644; --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx; +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx; @@ -73,4 +73,6 @@ namespace cling {; std::string printValue(ROOT::RDataFrame *tdf);; } // ns cling; ; +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);; +; #endif // ROOT_RDATAFRAME; ```. This causes; ```; [522/527] Generating lib/modules.idx; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE24_M_release_last_use_coldEv, __orc_init_func.cling-module-1, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED1Ev }) }. [523/527] Generating tutorials/hsimple.root. Processing hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; (TFile *) 0x56335b1cf6e0; [527/527] Linking CXX executable tree/dataframe/test/dataframe_simple; ```. As you can see, the RDataFrame library is built happily, no missing symbols. Yet the JIT complains because it cannot load the library. ### ROOT version. master + modification. ### How did you install ROOT?. built myself. ### Which operating system are you using?. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12988:2505,load,load,2505,https://root.cern,https://github.com/root-project/root/issues/12988,1,['load'],['load']
Performance,"dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/al",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:21924,optimiz,optimized,21924,https://root.cern,https://github.com/root-project/root/issues/8931,2,['optimiz'],['optimized']
Performance,"digits = new TTreeReaderArray<o2::trd::Digit>(*dataReader, ""TRDDigit"");. int tfno = 0;; while(dataReader->Next()) {; cout << ""Next TF: "" << tfno << endl;. for (auto tracklet : *tracklets) {; cout << tracklet << endl;; }; cout << dec << ""Start to sort "" << std::distance(tracklets->begin(), tracklets->end()) << "" tracklets..."" << endl;; std::stable_sort(tracklets->begin(), tracklets->end(), comp_tracklet);; cout << ""Start to sort "" << std::distance(digits->begin(), digits->end()) << "" digits..."" << endl;; std::stable_sort(digits->begin(), digits->end(), comp_digit);; }. }; ```. The code creates the following stack trace:; ```; Fatal: fArray && ""invalid iterator!"" violated at line 118 of `/scratch/tdietel/alisw/slc7_x86-64/ROOT/v6-28-04-14/include/TTreeReaderArray.h'; aborting; #0 0x00007fa77058860c in waitpid () from /lib64/libc.so.6; #1 0x00007fa770505f62 in do_system () from /lib64/libc.so.6; #2 0x00007fa7712b7b8c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x165c5b0) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x165c5b0) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fa771198e69 in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=<optimized out>) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/base/src/TErrorDefaultHandler.cxx:177; #5 0x00007fa77124a7d5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fa750f2eabe """", fmt=<optimized out>, ap=0x7fff0771d888) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/foundation/src/TError.cxx:153; #6 0x00007fa77124b302 in Fatal (location=<optimized out>, fmt=<optimized out>) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:4292,optimiz,optimized,4292,https://root.cern,https://github.com/root-project/root/issues/13314,1,['optimiz'],['optimized']
Performance,ding /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:6601,Load,Loading,6601,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,ding /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm; 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm; 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm; 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:4401,Load,Loading,4401,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,ding /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm; 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm; 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm; 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minui,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:4261,Load,Loading,4261,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"dingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1067; #16 0x00007f5b8dbd0dca in TSystem::ProcessEvents() (this=0x55e75ccfd080) at ../core/base/src/TSystem.cxx:424; #17 0x00007f5b8130600d in (); #18 0x00007f5b79ae0450 in (); #19 0x00007f5b8de5215f in WrapperCall(Cppyy::TCppMethod_t, size_t, void*, void*, void*) (method=94452242807424, nargs=0, args_=0x7f5b79ae01d7, self=0x55e75ccfd080, result=0x7f5b79ae01d7) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778; #20 0x00007f5b8de527cf in CallT<unsigned char> (args=<optimized out>, nargs=<optimized out>, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816; #21 Cppyy::CallB(long, void*, unsigned long, void*) (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:833; #22 0x00007f5b8decdc0f in GILCallB (ctxt=0x7f5b79ae0430, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:69; #23 CPyCppyy::(anonymous namespace)::BoolExecutor::Execute(Cppyy::TCppMethod_t, Cppyy::TCppObject_t, CPyCppyy::CallContext*) (this=<optimized out>, method=<optimized out>, self=<optimized out>, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:148; #24 0x00007f5b8deba4c9 in CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>, this=<optimized out>) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #25 0x00007f5b8debd3a8 in CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (this=this entry=0x55e760617f50, self=0x55e75ccfd080, offset=0, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #26 0x00007f5b8debb6fa in CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (this=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9139:2101,optimiz,optimized,2101,https://root.cern,https://github.com/root-project/root/pull/9139,2,['optimiz'],['optimized']
Performance,"dl_catch_exception () from /lib64/libc.so.6; 2187: #19 0x00007f2a61750a23 in _dl_catch_error () from /lib64/libc.so.6; 2187: #20 0x00007f2a61bc652e in _dlerror_run () from /lib64/libdl.so.2; 2187: #21 0x00007f2a61bc602a in dlopen; 2187:; 2187: GLIBC_2.2.5 () from /lib64/libdl.so.2; 2187: #22 0x00000000002ce7f6 in __interceptor_dlopen.part.267 (); 2187: #23 0x00007f2a50c02ffb in cling::utils::platform::DLOpen (Path=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", Err=0x7f2a5e651200) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; 2187: #24 0x00007f2a5087994c in cling::DynamicLibraryManager::loadLibrary (this=<optimized out>, libStem=..., permanent=<optimized out>, resolved=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:375; 2187: #25 0x00007f2a508d6dce in cling::Interpreter::loadLibrary (this=0x614000001840, filename=..., lookup=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1469; 2187: #26 0x00007f2a508d8d67 in cling::Interpreter::loadFile (this=0x614000001840, filename=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", allowSharedLib=<optimized out>, T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; 2187: #27 0x00007f2a50bbe9cd in cling::MetaSema::actOnLCommand (this=<optimized out>, file=..., transaction=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; 2187: #28 0x00007f2a50bb2dc8 in cling::MetaParser::isLCommand (this=this; 2187: entry=0x7f2a5e5cf670, actionResult=; 2187: 0x7f2a5e5cf780: cling::MetaSema::AR_Success) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; 2187: #29 0x00007f2a50bb2833 in cling::MetaParser::isCommand (this=<optimized out>, actionResult=<optimized out>, resultValue=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProce",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:4415,optimiz,optimized,4415,https://root.cern,https://github.com/root-project/root/issues/11867,2,['optimiz'],['optimized']
Performance,"dler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fff89ef2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fff89e5a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fff8ac49ad8 in system_compat () from /lib64/glibc-hwcaps/power9/libpthread-2.28.so; #3 0x00007fff7c7a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x16573fa50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007fff7ca8eefc in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:195; #7 0x00007fff7c7ac09c in TUnixSystem::DispatchSignals (this=0x16573fa50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3610; #8 0x00007fff7c7ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #9 0x00007fff7c7a308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #10 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are rea",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:27590,optimiz,optimized,27590,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,dule Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5719,load,load,5719,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,dule Core; >Failed to load module Rint; >Failed to load module RIO; >Failed to load module MathCore; >Failed to load module Hist; >Failed to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to l,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4296,load,load,4296,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,dule HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3994,load,load,3994,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,dule RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5852,load,load,5852,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,dule Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5881,load,load,5881,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,dule SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_5:1:2: error: unknown type name 'ifdef'; >#ifdef PI; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_6:1:2: error: unknown type name 'ifdef'; >#ifdef ERROR; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >; > *** Break *** segmentation violation; >; >; >; >=================================================,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:6331,load,load,6331,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,e MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_5:1:2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5947,load,load,5947,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,e Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_5:1:2: error: unknown type name 'ifdef'; >#ifdef PI; > ^; ><<< cling interactive line includer >>>:1:1: erro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:6050,load,load,6050,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,e Rint; >Failed to load module RIO; >Failed to load module MathCore; >Failed to load module Hist; >Failed to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4328,load,load,4328,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,e RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to l,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4460,load,load,4460,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,e RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_5:1:2: error: unknown type name 'ifdef',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5981,load,load,5981,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"e class 'complex'; template <> class complex<float>;; ^ ~~~~~~~; cling-ptx: Forward declarations from /home/sehrig/workspace/root-project/install/lib/libcomplexDict.rootmap:3:19: error: explicit specialization of non-template class 'complex'; template <> class complex<double>;; ^ ~~~~~~~~; IncrementalCUDADeviceCompiler::declare(); failed at compile ptx code; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime6gClingE' unresolved while linking [cling interface function]!; You are probably missing the definition of cling::runtime::gCling; Maybe you need to load the corresponding shared library?; root [1]; ```; A really interesting observation is that `root.exe` includes and links to the CUDA SDK by default when it is available. ```C++; $ root.exe ; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Mar 05 2021, 17:50:00 |; | From heads/master@v6-23-01-RF-binSampling-1125-gd3d7cf0bb6 |; | With g++ (Spack GCC) 10.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] cudaGetLastError(); (cudaError_t) (cudaSuccess) : (unsigned int) 0; root [1] ; ``` ; I think this is related to TMVA using the CUDA library. Unfortunately this is not enough, because without `-xcuda` root cannot compile CUDA specific things like kernel ( `_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518:14320,load,load,14320,https://root.cern,https://github.com/root-project/root/issues/7518,1,['load'],['load']
Performance,"e configuration output](https://github.com/root-project/root/files/7709954/cmake.log), [CMakeCache.txt](https://github.com/root-project/root/files/7709963/CMakeCache.txt), the full [build log](https://github.com/root-project/root/files/7709957/build.log), and the [log for failed tests](https://github.com/root-project/root/files/7710157/ctest-failed.log). To save you some time looking over these files, here is the full list of tests that fail:. ```; The following tests FAILED:; 	 1 - clingtest-check-cling (Failed); 	 13 - pyunittests-pyroot-dependency-versions (Failed); 	 68 - pyunittests-pyroot-numbadeclare (Not Run); 	 69 - test-import-numba (Failed); 	160 - gtest-math-mathcore-test-stressMathCoreUnit (Failed); 	282 - test-stressmathcore (Failed); 	307 - test-TFormulaTests (Failed); 	800 - tutorial-pythia-pythiaExample (Failed); 	1142 - tutorial-pyroot-pyroot004_NumbaDeclare-py (Not Run); 	1143 - test-import-numba (Failed); 	1358 - roottest-cling-stl-dicts-build (Failed); 	1611 - roottest-root-dataframe-test_snapshot_copyaddresses (Failed); 	1753 - roottest-root-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta-ROOT-7462-make (Failed); 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed); 	2230 - roottest-root-tree-cache-perfstattest (Failed); ```; * You can ignore the failures for numba, as I don't have that installed.; * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. ; * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BU",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:2054,cache,cache-perfstattest-libevent-build,2054,https://root.cern,https://github.com/root-project/root/issues/9436,2,['cache'],"['cache-perfstattest', 'cache-perfstattest-libevent-build']"
Performance,"e in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid contai",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:1359,cache,cache,1359,https://root.cern,https://github.com/root-project/root/pull/16442,1,['cache'],['cache']
Performance,"e result of the RDataFrame execution should know how to merge itself with another result of the same type and the result of the merge operation should still know how to merge again. To this end, a new function called `GetMergeableValue` takes as input an RResultPtr<T> , e.g. the last action node of the graph, and returns an `RMergeableValue<T>*`, a new class that satisfies the previous requirements. The choice of creating a new class instead of, for example, returning the standard return value plus a function to merge two values of that type, has to do with the second requirement above.; In fact, while this could be feasible with the return value of a `Count` operation (the merge function would just be the sum of the two count values), it would not be enough for all operations.; Notably, to merge results of two `Mean` operations we would need also the counts of each mean to merge them as a weighted mean, so the function would take 4 parameters of which at most 2 are known beforehand (the mean and the counts of the action that is currently being examined by the GetMergeableValue function), while the other 2 parameters wouldn't be known until the user tries to perform the Merge on the two values. RMergeableValue is created after the execution of the computation graph from the information contained in the various action helpers in ""tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx"".; RMergeableValue itself is a base class, with RMergeableGenericAction as the derived class that is mostly used to get the right information from the helpers, e.g. the value of the action and a function to merge two of those values. For specific actions that require more information, e.g. `Mean`, more derived classes can be created, e.g. `RMergeableMean`. The class instances are passed as void* up the call chain: ActionHelper-->RAction-->RActionBase-->ROOT::Detail::RDF::GetMergeableValue(); In the function they are `static_cast`ed back to their correct RMergeableValue<T>* type. Currently, two tes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5552:1756,perform,perform,1756,https://root.cern,https://github.com/root-project/root/pull/5552,1,['perform'],['perform']
Performance,"e+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:17157,optimiz,optimized,17157,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"e/axel/build/root/master/src/core/base/src/TSysEvtHandler.cxx"", dl=28, il=22) at include/TQClass.h:47; #6 0x00007ffff7fa9eaa in ROOT::Internal::TQObjectInitBehavior::CreateClass (this=0x5555555bff80, ; cname=0x7ffff7af4b40 ""TSysEvtHandler"", id=0, info=..., isa=0x5555555bff60, dfil=0x7ffff7af6f65 ""TSysEvtHandler.h"", ; ifil=0x7ffff7adf928 ""/home/axel/build/root/master/src/core/base/src/TSysEvtHandler.cxx"", dl=28, il=22) at include/TQClass.h:70; #7 0x00007ffff7d3c467 in ROOT::TGenericClassInfo::GetClass (; this=0x7ffff7f7ce60 <ROOT::GenerateInitInstanceLocal(TSysEvtHandler const*)::instance>); at /home/axel/build/root/master/src/core/meta/src/TGenericClassInfo.cxx:250; #8 0x00007ffff7dcf596 in TSysEvtHandler::Dictionary () at core/G__Core.cxx:14387; #9 0x00007ffff7d1db76 in TClass::LoadClassDefault (requestedname=0x7fffffffb399 ""TSysEvtHandler""); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5769; #10 0x00007ffff7d1da90 in TClass::LoadClass (requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5740; #11 0x00007ffff7bdd915 in TROOT::LoadClass (this=0x7ffff7f53460 <ROOT::Internal::GetROOT1()::alloc>, ; requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false) at /home/axel/build/root/master/src/core/base/src/TROOT.cxx:2119; #12 0x00007ffff7d14d58 in TClass::GetClass (info=0x555556980ba0, load=true, silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:3323; #13 0x00007ffff7d07144 in TBaseClass::GetClassPointer (this=0x555556980c70, load=true); at /home/axel/build/root/master/src/core/meta/src/TBaseClass.cxx:66; #14 0x00007ffff7c4b6eb in TQObject::CollectClassSignalLists (this=0x555555d8eac0, list=..., cls=0x55555608c200); at /home/axel/build/root/master/src/core/base/src/TQObject.cxx:461; #15 0x00007ffff7faf3ef in TQObject::EmitVA<>(char const*, int) (this=0x555555d8eac0, signal_name=0x7ffff7fa0db3 ""Added()""); at /home/axel/build/root/master/src/core/base/inc/TQO",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7123:7275,Load,LoadClass,7275,https://root.cern,https://github.com/root-project/root/issues/7123,1,['Load'],['LoadClass']
Performance,"e/c++/12/bits/new_allocator.h:181; #7 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x209f2f8, __a=...) at /usr/include/c++/12/bits/alloc_traits.h:535; #8 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_node (__n=0x209f2f0, this=<optimized out>) at /usr/include/c++/12/bits/hashtable_policy.h:1984; #9 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_nodes (this=<optimized out>, __n=0x209f250) at /usr/include/c++/12/bits/hashtable_policy.h:2006; #10 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this=0x1ab6a80) a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:4835,optimiz,optimized,4835,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"e/clang/Serialization/ModuleFile.h:77: clang::serialization::InputFile::InputFile(clang::FileEntryRef, bool, bool): Assertion `!(isOverridden && isOutOfDate) && ""an overridden cannot be out-of-date""' failed.; ```. It turns out that the failure is implicitly caused by an updated version of GCC (from 11.3 to 11.4). ### Reproducer. Here is a redacted log a sessions exposing the problem:; ```; ssh lxplus-arm.cern.ch; > rpm -q gcc; gcc-11.4.1-2.1.el9.aarch64; > . /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/aarch64-el9/setup.sh; > . /cvmfs/sft.cern.ch/lcg/views/LCG_105a/aarch64-el9-gcc13-dbg/setup.sh; > root; root.exe: /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-6.30.04/src/ROOT/6.30.04/interpreter/llvm-project/clang/include/clang/Serialization/ModuleFile.h:77: clang::serialization::InputFile::InputFile(clang::FileEntryRef, bool, bool): Assertion `!(isOverridden && isOutOfDate) && ""an overridden cannot be out-of-date""' failed.; >; ```. The optimized build, of course, works; ```; ssh lxplus-arm.cern.ch; > rpm -q gcc; gcc-11.4.1-2.1.el9.aarch64; > . /cvmfs/sft.cern.ch/lcg/releases/gcc/13.1.0-b3d18/aarch64-el9/setup.sh; > . /cvmfs/sft.cern.ch/lcg/views/LCG_105a/aarch64-el9-gcc13-opt/setup.sh; > root; ------------------------------------------------------------------; | Welcome to ROOT 6.30/04 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxarm64 on Feb 03 2024, 21:41:03 |; | From heads/master@tags/v6-30-04 |; | With g++ (GCC) 13.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; >; ```. It woks also if I use an old container with gcc 11.3:; ```; ssh lxplus-arm.cern.ch; > /cvmfs/lhcb.cern.ch/lib/var/lib/LbEnv/3067/stable/linux-aarch64/bin/apptainer shell -e -B /cvmfs /cvmfs/lhcb.cern.ch/containers/os-base/alma9-devel/2023-06-30_12-00-00/aarch64; WARNING: /cvmfs/lhcb.cern.ch/lib/var/lib/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14789:1343,optimiz,optimized,1343,https://root.cern,https://github.com/root-project/root/issues/14789,1,['optimiz'],['optimized']
Performance,e/cont/src/TBtree.cxx:688; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 15: Calling 'TBtInnerNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:690; 16: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:248; /opt/root_src/core/cont/inc/TBtree.h:314:41: warning: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDereference]; 1: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1695; 2: Calling constructor for 'TBtLeafNode' in /opt/root_src/core/cont/src/TBtree.cxx:1695; 3: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 4: Calling constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/co,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:1739,load,loaded,1739,https://root.cern,https://github.com/root-project/root/issues/7424,1,['load'],['loaded']
Performance,"e/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 ; #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 ; #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 ; #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 ; #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 ; #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 ; #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 ; #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 ; #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 ; #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 ; #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 ; #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 ; #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 ; #19 0x0000000000400caf in main (argc=<optimized out>, argv=0x7fffffffda58) at /home/jhahnfel/ROOT/src/main/src/rmain.cxx:83; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543:2295,optimiz,optimized,2295,https://root.cern,https://github.com/root-project/root/issues/9543,6,['optimiz'],['optimized']
Performance,"e/root-v5/core/cont/src/TObjArray.cxx:460; #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451; #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>); at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352; #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, ; last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599; #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>); at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174; #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...); at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.h:111; #20 TBufferFile::ApplySequence (this=0xb5bea80, sequence=..., obj=0x4307c00) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:4013; #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00); at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981; #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379; #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430; #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>); at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253; #25 0x00007ffff14842f5 in TFile::CreateKey",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9564:4670,optimiz,optimized,4670,https://root.cern,https://github.com/root-project/root/issues/9564,2,['optimiz'],['optimized']
Performance,"e/tdietel/alice/sw/slc7_x86-64/ROOT/v6-28-04-14/lib/libCling.so; #17 0x00007fa76af8a0bc in HandleInterpreterException (metaProcessor=0x243df60, input_line=0x7fff0771e079 ""sortbug()"", compRes=; 0x7fff0771e03c: cling::Interpreter::kSuccess, result=0x7fff0771e170) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:2460; #18 0x00007fa76afa4749 in TCling::ProcessLine (this=0x16e7bc0, line=<optimized out>, error=0x7fff0771f04c) at /jenkins/workspace/build-any-ib/sw/20156516; /1/slc7_x86-64/GCC-Toolchain/v12.2.0-alice1-5/include/c++/12.2.0/bits/unique_ptr.h:191; #19 0x00007fa76afa4b02 in TCling::ProcessLineSynch (this=0x16e7bc0, line=0x16e8930 "".X /home/tdietel/alice/data/ole/./sortbug.C+"", error=0x7fff0771f04c); at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:3554; #20 0x00007fa7711777e7 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fff0771f04c, keep=<optimized out>) at /jenkins/workspace/build-any-ib; /sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/base/src/TApplication.cxx:1661; #21 0x00007fa77172040c in TRint::ProcessLineNr (this=0x16b4f60, filestem=<optimized out>, line=0x7fff0771f060 "".x sortbug.C+"", error=0x7fff0771f04c) at /; jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:820; #22 0x00007fa771721fc6 in TRint::Run (this=this; entry=0x16b4f60, retrn=retrn; entry=false) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:461; #23 0x00000000004011dd in main (argc=<optimized out>, argv=0x7fff077211e8) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-0; 4/main/src/rmain.cxx:84; ```. I assume the bug can be triggered with other data sets in plain ROOT. If needed, I could try to strip things down, but I don't know if this is the most efficient use of my time. ### ROOT version; ```; ------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:8895,optimiz,optimized,8895,https://root.cern,https://github.com/root-project/root/issues/13314,2,['optimiz'],['optimized']
Performance,"e/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib/libgtest.so.1.13.0; #18 0xf7d5cf46 in testing::Test::Run() () from /lib/libgtest.so.1.13.0; #19 0xf7d5d17a in testing::TestInfo::Run() () from /lib/libgtest.so.1.13.0; #20 0xf7d5d327 in testing::TestSuite::Run() () from /lib/libgtest.so.1.13.0; #21 0xf7d6a95b in testing::internal::UnitTestImpl::RunAllTests() () from /lib/libgtest.so.1.13.0; #22 0xf7d695cb in testing::UnitTest::Run() () from /lib/libgtest.so.1.13.0; #23 0xf7d1e137 in main () from /lib/libgtest_main.so.1.13.0; #24 0xf6837969 in __libc_start_call_main () from /lib/libc.so.6; #25 0xf6837a2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:11269,optimiz,optimized,11269,https://root.cern,https://github.com/root-project/root/issues/12427,1,['optimiz'],['optimized']
Performance,e1_NoRTTI; >Failed to load module Core; >Failed to load module Rint; >Failed to load module RIO; >Failed to load module MathCore; >Failed to load module Hist; >Failed to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load mo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4267,load,load,4267,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307; #30 0x00007f770e5b2787 in TROOT::InitInterpreter (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2104; #31 0x00007f770e5abc8c in ROOT::Internal::GetROOT2 () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:390; #32 0x00007f770e5abfee in ROOT::GetROOT () at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:472; #33 0x00007f770e570a1a in TDirectory::~TDirectory (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:99; #34 0x00007f770de58af0 in TDirectoryFile::~TDirectoryFile (this=0x7ffd338cef30, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TDirectoryFile.cxx:202; #35 0x0000000000401184 in main () at repro.cpp:5; ```. ### Reproducer. Given the following reproducer. ```cpp; #include <TDirectoryFile.h>. int main(){; TDirectoryFile f(""f"", ""f"");; }; ```. Compile with `g++ -g -o repro.out repro.cpp $(root-config --cflags --glibs)` and run. Note that if the equivalent is run via `root mymacro.C` the crash doesn't happen. ### ROOT version. master. ### Installation method. build from source. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13691:5757,optimiz,optimized,5757,https://root.cern,https://github.com/root-project/root/issues/13691,2,['optimiz'],['optimized']
Performance,"e: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb) s; Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0xbebebebebebebeae); frame #0: 0x0000000107bac674 libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) + 76; libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate:; -> 0x107bac674 <+76>: casalb w8, w9, [x22]; 0x107bac678 <+80>: cmp w8, #0x2; 0x107bac67c <+84>: b.ne 0x107bac6f4 ; <+204>; 0x107bac680 <+88>: mov x8, #-0x100000000 ; =-4294967296; Target 0: (repro.out) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0xbebebebebebebeae); * frame #0: 0x0000000107bac674 libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) + 76; frame #1: 0x0000000107c0c444 libclang_rt.asan_osx_dynamic.dylib`wrap__ZdaPv + 232; frame #2: 0x00000001044d4a60 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; frame #3: 0x0000000103ffc888 libRIO.so`TStreamerInfoActions::GenericReadAction(buf=0x000060e00010ef00, addr=0x0000602000056bd0, config=0x0000604000149910) at TStreamerInfoActions.cxx:195:45; frame #4: 0x0000000103caa5ec libRIO.so`TStreamerInfoActions::TConfiguredAction::operator()(this=0x00006030001693f0, buffer=0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16501:4444,queue,queue,4444,https://root.cern,https://github.com/root-project/root/pull/16501,1,['queue'],['queue']
Performance,"e: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:2717,load,loaded,2717,https://root.cern,https://github.com/root-project/root/issues/10704,1,['load'],['loaded']
Performance,"e; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major version for the interpreter ""C:/Program Files/Python39/python.exe"". -- Looking for pthread.h; -- Looking for pthread.h - not found; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platform: win32; -- ROOT Compiler: MSVC 19.29.30037.0; -- ROOT Processor: AMD64; -- ROOT Architecture: win32; -- Build Type: '' (flags = ''); -- Compiler Flags: -nologo -IC:/dev/root/build/win -FIw32pragma.h -FIsehmap.h -Zc:__cplusplus -MD -GR -EHsc- -W3 -wd4141 -wd4291 -wd4244 -wd4049 -D_WIN32 -D_XKEYCHECK_H -DNOMINMAX -D_CRT_SECURE_NO_WARNINGS; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.9.2; -- Looking for ZLib; CMake Error at D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:693 (set):; Maximum recursion depth of 1000 exceeded; Call Stack (most recent call first):; D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package); ... // many stack frames; D:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake:771 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:16 (_find_package); cmake/modules/SearchInstalledSoftware.cmake:55 (find_package); CMakeLists.txt:220 (include); ```. ### Setup. ROOT mas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633:2467,Perform,Performing,2467,https://root.cern,https://github.com/root-project/root/issues/8633,2,['Perform'],['Performing']
Performance,"eInterpVar` and the `PiecewiseInterpolation` classes in; HistFactory can both interpolate asymmetric up-and-down variations; between the +/- one standard deviation such that both the first and; second derivatives of the scale factors are smooth. The `PiecewiseInterpolation` class is more general, because instead of; taking constant interpolation parameters, it takes other `RooAbsReals`.; That means it makes no sense for that class to cache the polynomial; coefficients that have to re recomputed anyway each time the input; changes. It uses an optimized formula to do the interpolation on the; fly. The `FlexibleInterpVar` however precomputes and caches the polynomial; coefficients. This has serveral disadvantages:. * High cost in memory (the big ATLAS models can have thousands of; `FlexibleInterpVars`. * It's inconsistent with the `PiecewiseInterpolation`, which should be; equivalent. * Most importantly, and this was the motivation for this PR now:; when we do the code generation for AD, we can't pre-compute cached; coefficients because it would bloat the generated code with constant; arrays. Computing on the fly is much more AD-friendly. Validation of the new `FlexibleInterpVar` values for `low=0.9` and; `high=1.2` that shows the interpolated values are agreeing to the 5e-4; level. This is completely accepatable for such an ad-hoc polynomial; motivation, where the shape is not given by any physical meaning anyway; but just by the continuity condition at the boundaries. And at the; boundaries (and `param=0`), the difference between both implementations; goes to zero. It was also checked that this change has no performance; effect on fitting the full ATLAS Higgs combination modes. ```txt; param ref new diff_abs diff_rel; 0 -1.00 0.9000000000 0.9000000000 0.0000000000 0.00E+00; 1 -0.95 0.9047424331 0.9047437816 0.0000013485 1.49E-06; 2 -0.85 0.9140836603 0.9141118876 0.0000282273 3.09E-05; 3 -0.75 0.9230659064 0.9231653329 0.0000994265 1.08E-04; 4 -0.65 0.9317147727 0.93",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13067:1033,cache,cached,1033,https://root.cern,https://github.com/root-project/root/pull/13067,1,['cache'],['cached']
Performance,"eSinkFile::RPageSinkFile(std::string_view, const ROOT::Experimental::RNTupleWriteOptions&)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Warning in <[ROOT.NTuple] Warning /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTupleSerialize.cxx:1148 in static ROOT::Experimental::RResult<void> ROOT::Experimental::Internal::RNTupleSerializer::DeserializeHeaderV1(const void*, uint32_t, ROOT::Experimental::RNTupleDescriptorBuilder&)>: Pre-release format version: RC 1; [ OK ] RNTuple.TClassMultipleInheritance (87 ms); [ RUN ] RNTuple.TClassEBO; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3e5f0fbf63 in wait4 () from /lib64/libc.so.6; #1 0x00007f3e5f0701eb in do_system () from /lib64/libc.so.6; #2 0x00007f3e5f91a8d8 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:6894,optimiz,optimized,6894,https://root.cern,https://github.com/root-project/root/issues/12428,1,['optimiz'],['optimized']
Performance,"eally convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #10 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #11 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #12 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x22dedd8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #13 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x22dedd8, this=<optimized out>) at /usr/include/c++/12/bits/new_allocator.h:181; #14 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:23488,optimiz,optimized,23488,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"eamer (this=0x58ac6028, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/cont/src/TArrayI.cxx:157; #13 0xf7d7f75c in ROOT::streamer_TArrayI (buf=..., obj=0x58ac6028) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/core/G__Core.cxx:23134; #14 0xf6fa16a0 in TClass::Streamer (this=0x590e5010, obj=0x58ac6028, b=..., onfile_class=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/inc/TClass.h:614; #15 TBufferFile::WriteFastArray (streamer=0x0, this=0x58d8e800, start=0x58ac6028, cl=0x590e5010, n=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2354; #16 TBufferFile::WriteFastArray (this=0x58d8e800, start=0x58ac6028, cl=0x590e5010, n=1, streamer=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2336; #17 0xf722eaf7 in TStreamerInfo::WriteBufferAux<char**> (this=0x592155f0, b=..., arr=; 0xffefcb48: 0xffefcb44, compinfo=0x594d315c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:633; #18 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x594d3150) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #19 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x58dbeab4, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #20 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:2806,optimiz,optimized,2806,https://root.cern,https://github.com/root-project/root/issues/15738,2,['optimiz'],['optimized']
Performance,"eatures - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fortran compiler ABI info; -- Detecting Fortran compiler ABI info - done; -- Check for working Fortran compiler: /usr/bin/x86_64-pc-linux-gnu-gfortran - skipped; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90; -- Checking whether /usr/bin/x86_64-pc-linux-gnu-gfortran supports Fortran 90 - yes; -- Found GCC. Major version 10, minor version 3; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Looking for pthread_create in pthreads; -- Looking for pthread_create in pthreads - not found; -- Looking for pthread_create in pthread; -- Looking for pthread_create in pthread - found; -- Found Threads: TRUE ; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 10.3.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Debug' (flags = ''); -- Compiler Flags: -march=native -O2 -pipe -Og -fno-omit-frame-pointer -g -ggdb -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for version 3.8.10; CMake Error at CMakeLists.txt:139 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command. CMake Error at CMakeLists.txt:140 (string):; string sub-command REGEX, mode REPLACE needs at least 6 arguments total to; command.; ```. Note that the default flags for 'Debug' build are empty (on purpose, because compile flags are contr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8193:3947,Perform,Performing,3947,https://root.cern,https://github.com/root-project/root/issues/8193,4,['Perform'],['Performing']
Performance,"ec (shellcmd=<optimized out>, this=0x691200) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x691200) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007ff0e9305774 in TUnixSystem::DispatchSignals (this=0x691200, sig=kSigSegmentationViolation) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #10 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #11 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #12 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x22dedd8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #13 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x22dedd8, this=<optimized out>) at /usr/include/c++/12/bits/new_allocator.h:181; #14 std::allocator_traits<std::allocator<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:13702,optimiz,optimized,13702,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"ecks; the .gnu.hash section in ELF which is the GNU implementation of a bloom; filter and uses it. If the symbol is not in the bloom filter, the; implementation builds its own and uses it. The measured performance of the; bloom filter is 30% speed up for 2mb more memory. The custom bloom filter on; top of the .gnu.hash filter gives 1-2% better performance.; The advantage for the custom bloom filter is that it works on all; implementations which do not support .gnu.hash (windows and osx). It is also; customizable if we want to further reduce the false positive rates; (currently at p=2%).; * Hash table optimization -- we build a hash table which contains all symbols; for a given library. This allows us to avoid the fallback symbol iteration; if multiple symbols from the same library are requested. The hash table; optimization targets to optimize the case where the bloom filter tells us; the symbol is *maybe* in the library. Patch by Alexander Penev (@alexander-penev) and me!. Performance Report; ===. |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|22,82|26,89|20,08|; |osx 10.14| roottest-cling| 589,67|452,97|307,34|; |osx 10.14| roottest-python| 377,69|475,78|311,5|; |osx 10.14| roottest-root-hist| 60,59|90,98|49,65|; |osx 10.14| roottest-root-math| 106,18|140,41|73,96|; |osx 10.14| roottest-root-tree| 1287,53|1861|1149,35|; |osx 10.14| roottest-root-treeformula | 568,43|907,46|531|; |osx 10.15| root-io-stdarray| - | 126.02 | 31.42|; |osx 10.15| roottest-root-treeformula| - | 327.08 | 231.14 |. The effect of running ctest -j8:; |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|14,45|18,89|13,03|; |osx 10.14| roottest-cling| 88,96|118,94|100,1|; |osx 10.14| roottest-python| 107,57|60,93|100,88|; |osx 10.14| roottest-root-hist| 10,25|23,25|11,77|; |osx 10.14| r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4717:1594,Perform,Performance,1594,https://root.cern,https://github.com/root-project/root/pull/4717,1,['Perform'],['Performance']
Performance,"ectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_funct",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:22514,optimiz,optimized,22514,https://root.cern,https://github.com/root-project/root/issues/8931,2,['optimiz'],['optimized']
Performance,"ed as integers.; Every state index also has a state name attached, but instead of storing; it in each row of the dataset, the mapping from state index to; state name is now stored in the category class. **For reviewers**:; Although there is a lot of noise, that's mostly getting rid of unnecessary classes. The user-facing interfaces are stable (to be proven by the fact that all the rest of RooFit still compiles, and that tutorials run).; This is the chance to modernise/improve the `RooCategory` interface. It would be nice if you could specifically look at `RooCategory.h`, maybe in conjunction with the modernised tutorial on how they can be used in the future:; https://github.com/hageboeck/root/blob/cleanupCategories/tutorials/roofit/rf404_categories.C. More details what happened:; - Replace RooCatType by an integer.; - Replace names saved in each instance of RooCatType by a map in; RooAbsCategory that maps state numbers to strings. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Convert RooVectorDataStore from saving RooCatType to integers of; category states.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore. - Provide new interfaces for categories to work without RooCatType.; - Prevent clearing of shapeDirty in RooAbsCategory::evaluate(), since; derived category classes might need to recompute their shapes if one; of their input categories change.; - Add function to define multiple category states at once with; initialiser lists. - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interface with R__SUGGEST_ALTERNATIVE.; - Create RooCatType instances on-demand in case users continue to use; the legacy interface. - Consolidate RooMultiCategory and RooSuperCategory. These share almost; all the code, so RooSuperCategory will now use a RooMultiCategory for; state definition and ret",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219:1358,load,loading,1358,https://root.cern,https://github.com/root-project/root/pull/5219,1,['load'],['loading']
Performance,"ed out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:24855,optimiz,optimized,24855,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"ed out>, cinfo=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:8290; #22 0x00007fffa8f0be24 in TClass::NewObject (this=0x10a9218e0, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:433; #23 0x00007fffa8f0fa14 in TClass::New (this=<optimized out>, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:4969; #24 0x00007fffa92e0724 in TBufferFile::ReadObjectAny (this=0x7ffff83ea100, clCast=0x10a861920) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:2458; #25 0x00007fffa9389c44 in TGenCollectionStreamer::ReadObjects (this=0x10a861070, nElements=<optimized out>, b=..., onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:395; #26 0x00007fffa938a6f8 in TGenCollectionStreamer::ReadBufferGeneric (this=<optimized out>, b=..., obj=0x109986cc0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1368; #27 0x00007fffa93850a8 in TGenCollectionStreamer::ReadBufferDefault (this=0x10a861070, b=..., obj=0x109986cc0, onFileClass=0x0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1302; #28 0x00007fffa9384f00 in TGenCollectionStreamer::ReadBuffer (this=<optimized out>, b=..., obj=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1232; #29 0x00007fffa933ff7c in TCollectionClassStreamer::Stream (onfileClass=0x10a860aa0, obj=0x109986cc0, b=..., this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:177; #30 TCollectionClassStreamer::Stream (this=<optimized out>, b=..., obj=0x109986cc0, onfileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:172; #31 0x00007fffa8f04014 in TClass::StreamerExternal (pThis=<optimized out>, object=0x109986cc0, b=..., onfile_cl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:6966,optimiz,optimized,6966,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"ed out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:27635,optimiz,optimized,27635,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,ed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Faile,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5042,load,load,5042,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,ed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4500,load,load,4500,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,ed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3056,load,load,3056,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,ed to load module libc; >Failed to load module std; >Failed to load module _Builtin_intrinsics; >Failed to load module ROOT_Foundation_C; >Failed to load module ROOT_Rtypes; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Core; >Failed to load module Rint; >Failed to load module RIO; >Failed to load module MathCore; >Failed to load module Hist; >Failed to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4050,load,load,4050,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"ed to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable12PopulateMenuERNS0_10RMenuItemsE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::PopulateMenu(ROOT::Experimental::RMenuItems&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RDrawable; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RPadBa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:4374,load,load,4374,https://root.cern,https://github.com/root-project/root/issues/14587,1,['load'],['load']
Performance,ed; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_5:1:2: error: unknown type name 'ifdef'; >#ifdef PI; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_6:1:2: error: unknown ty,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:6114,load,load,6114,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"ed_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x1ab6a70) at /usr/include/c++/12/bits/shared_ptr_base.h:613; #16 0x0000000000409c77 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x1ab6a70) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #17 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x1ab6a70) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #18 0x0000000000408271 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #19 std::__shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #20 std::shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:9580,optimiz,optimized,9580,https://root.cern,https://github.com/root-project/root/issues/12023,2,['optimiz'],['optimized']
Performance,"ed_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x1cf6560) at /usr/include/c++/12/bits/shared_ptr_base.h:613; #23 0x0000000000409c77 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x1cf6560) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #24 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x1cf6560) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #25 0x0000000000408271 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #26 std::__shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #27 std::shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_tra",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:20433,optimiz,optimized,20433,https://root.cern,https://github.com/root-project/root/issues/12023,4,['optimiz'],['optimized']
Performance,"ee larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922; #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965; #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354; #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458; #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400; #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45; #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91; #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178; #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503; #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542; #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178; #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792; #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:5383,optimiz,optimized,5383,https://root.cern,https://github.com/root-project/root/issues/6640,1,['optimiz'],['optimized']
Performance,"efault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (con",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:35282,optimiz,optimized,35282,https://root.cern,https://github.com/root-project/root/issues/10676,4,['optimiz'],['optimized']
Performance,"efaultEnv::GetPostMaster() () from /lib64/libXrdCl.so.3; #4 0x00007fffe9245fc5 in XrdCl::FileStateHandler::~FileStateHandler() () from /lib64/libXrdCl.so.3; #5 0x00007fffe9243bd0 in XrdCl::File::~File() () from /lib64/libXrdCl.so.3; #6 0x00007fffe9243c6d in XrdCl::File::~File() () from /lib64/libXrdCl.so.3; #7 0x00007fffef69630f in TNetXNGFile::~TNetXNGFile (this=0x2019f20, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/net/netxng/src/TNetXNGFile.cxx:233; #8 0x00007fffef696396 in TNetXNGFile::~TNetXNGFile (this=0x2019f20, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/net/netxng/src/TNetXNGFile.cxx:236; #9 0x00007ffff7bc5ad3 in TCollection::GarbageCollect (obj=0x2019f20) at /home/matevz/root-dev/dev-1/core/cont/src/TCollection.cxx:736; #10 0x00007ffff7bcdbe5 in TList::Delete (this=0x4307c0, option=0x7ffff7e1726b ""slow"") at /home/matevz/root-dev/dev-1/core/cont/src/TList.cxx:508; #11 0x00007ffff7af756b in TROOT::~TROOT (this=0x7ffff7f5a900 <ROOT::Internal::GetROOT1()::alloc>, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/core/base/src/TROOT.cxx:889; #12 0x00007ffff7af4f5f in at_exit_of_TROOT () at /home/matevz/root-dev/dev-1/core/base/src/TROOT.cxx:290; #13 0x00007ffff7317247 in __run_exit_handlers () from /lib64/libc.so.6; #14 0x00007ffff73173f0 in exit () from /lib64/libc.so.6; #15 0x00007ffff7c91627 in TUnixSystem::Exit (this=0x42a800, code=0, mode=true) at /home/matevz/root-dev/dev-1/core/unix/src/TUnixSystem.cxx:2157; #16 0x00007ffff7b0cc16 in TApplication::Terminate (this=0x482000, status=0) at /home/matevz/root-dev/dev-1/core/base/src/TApplication.cxx:1672; #17 0x00007ffff7facf9d in TRint::Terminate (this=0x482000, status=0) at /home/matevz/root-dev/dev-1/core/rint/src/TRint.cxx:696; #18 0x00007ffff7b0b37d in TApplication::ProcessLine (this=0x482000, line=0x7fffffffb589 "".q"", sync=false, err=0x7fffffffb51c); at /home/matevz/root-dev/dev-1/core/base/src/TApplication.cxx:1334; #19 0x00007ffff7fad334 in TRint::ProcessLineNr (t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767:1605,optimiz,optimized,1605,https://root.cern,https://github.com/root-project/root/issues/8767,1,['optimiz'],['optimized']
Performance,"eighted samples. It should be clarified both in the code documentation and in the user guide, if the implementation can handle weighted templates in the asymptotic limit, by applying the SPD approximation discussed by Bohm and Zech, 2014. This is possible (as we show in our paper https://inspirehep.net/literature/2512593), but only if the implementations handles this special case. Conway's paper does not discuss weighted templates and does not explain how to use the SPD approximation in this context. Long version:. The code documentation of RooBarlowBeestonLL on the master is incorrect. It is stated that this class implements the Barlow-Beeston likelihood computation, but it actually implements an approximation introduced by Conway in 2011. The approximation is only asymptotically equivalent to Barlow-Beeston, for small samples it is inferior. We recently published a paper about a new approximation to Barlow-Beeston (https://inspirehep.net/literature/2512593), which is fast to compute and can be used with weighted templates and weighted data. In this paper, we compare the performance of Barlow-Beeston and several approximations including ours. It is shown there, that Conway's approximation is inferior to the exact computation by Barlow-Beeston. I was pointed to this class by the LHCb collaboration. There is uncertainty in the community what this class actually computes and whether it is asymptotically correct for weighted templates. I kindly ask to correct and extend the documentation. **I think the best solution is to revert the implementation of BarlowBeestonLL to actually implement the original BarlowBeeston.** Then make a new class called ConwayLL which implements Conway's approximation. I am happy to provide another class which implements our method in ROOT. So far, the reference implementation is in the iminuit Python package. ### ROOT version. Master branch. ### Installation method. None. ### Operating system. Irrelevant. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15252:2003,perform,performance,2003,https://root.cern,https://github.com/root-project/root/issues/15252,1,['perform'],['performance']
Performance,"eing switching ON 'builtin_ftgl' option; -- Checking for module 'davix>=0.6.4'; -- Package 'davix', required by 'virtual:world', not found; -- Looking for uuid_generate_random in uuid; -- Looking for uuid_generate_random in uuid - found; -- Found libuuid: /usr/include; -- Davix dependencies not found, switching OFF 'davix' option.; -- Looking for TBB; -- Found TBB: /usr (Required is at least version ""2018""); -- Looking for VDT; -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; -- Switching ON 'builtin_vdt' option; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /usr/lib/libblas.so; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Building LLVM in 'Release' mode.; -- The ASM compiler identification is GNU; -- Found assembler: /usr/bin/cc; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Looking for backtrace; -- Looking for backtrace - found; -- backtrace facility detected in default set of libraries; -- Found Backtrace: /usr/include; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- Found Python module pygments; -- Found Python module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:8119,Perform,Performing,8119,https://root.cern,https://github.com/root-project/root/issues/10528,2,['Perform'],['Performing']
Performance,"el 3 would enable the debug messages that are currently only available when the compiler flag DEBUG is defined. In my experience, trouble with minimizing some function is common so it would be a great asset to enable more debug output at anytime by just increasing the print level without recompiling ROOT. The DEBUG messages are particularly problematic in the current system, because they use std::cout while MnPrint uses the compile-time configurable MNLOG (which defaults to std::cerr). ### Possible negative side-effects. #### Breaking changes?. This proposal does not change the output for print level 0, but there is a minor change for print level 1. It changes the output of scripts/software that uses print level 1, because previously level 1 meant ""print errors and info"" while in the new hierarchy it means ""print errors and warnings"". I think this is a minor effect, which has to be documented in the next changelog but it cannot cause backward incompatibilities or breakage. #### Reduced performance?. The impact on performance is expected to be negligible. I propose to place additional calls into the compiled code for everyone, but these calls are not executed unless the user picks a high print level. For a low print level, there is just the minor additional cost of a branch, which moreover can be predicted very well by the CPU, so the added cost should be almost zero. Furthermore, these branches do not happen in hot code paths. Hot paths are inside the cost function (which are unaffected) and in the linear algebra routines that Minuit2 uses (which are not instrumented with debug messages). ### Positive side-effects for wrappers and frontends. An important positive side effect for wrappers like iminuit is that we could show our users debug messages, too. Right now, we cannot, because DEBUG messages can only be enabled at compile-time, not at run-time. The DEBUG messages are also problematic in the current system, because they use std::cout while MnPrint uses the compil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6421:3144,perform,performance,3144,https://root.cern,https://github.com/root-project/root/issues/6421,1,['perform'],['performance']
Performance,"el and exit Cling. ```; $ ./cling --std=c++14 -xcuda --cuda-path=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x00; ```; The `CodeUnloading/AtExit.C` cling test also fails with the commit. ### Setup. 1. ROOT master beginning from commit 2c4a756d38d9b5f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7433:1170,optimiz,optimized,1170,https://root.cern,https://github.com/root-project/root/issues/7433,1,['optimiz'],['optimized']
Performance,"el/ROOT/src/core/meta/src/TClass.cxx:5460 ; #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 ; #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 ; #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 ; #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 ; #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 ; #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 ; #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 ; #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 ; #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 ; #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 ; #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 ; #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 ; #18 0x00007ffff7bba436 in TRint::Run (this=this@entry=0x680190, retrn=retrn@entry=false) at /home/jhahnfel/ROOT/src/core/rint/src/TRint.cxx:455 ; #19 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543:2153,optimiz,optimized,2153,https://root.cern,https://github.com/root-project/root/issues/9543,1,['optimiz'],['optimized']
Performance,el; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4714,load,load,4714,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"el=cxlevel; entry=1, srcsize=srcsize; entry=0x7ff4299869ac, src=src; entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S; \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300; zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <incomplete sequence \344>..., tgtsize=tgtsize; entry=0x7ff4299869ac, tgt=tgt; entry=0x7ff3c94c924f ""ZL\b\177\272"", irep=irep; entry=0x7ff4299869a8, compressionAlgorithm=ROOT::RCompressionSetting::EAlgorithm::kZLIB) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:79; #6 0x00007ff44949256c in TBasket::WriteBuffer (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBasket.cxx:1245; #7 0x00007ff4494a0f3d in operator() (__closure=<synthetic pointer>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:3134; #8 TBranch::WriteBasketImpl (this=0x7ff42547e5f0, basket=0x7ff4253b6a90, where=7, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:3189; #9 0x00007ff4494a1b11 in TBranch::FillImpl (imtHelper=0x0, this=0x7ff42547e5f0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:923; #10 TBranch::FillImpl (this=this; entry=0x7ff42547e5f0, imtHelper=imtHelper; entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854; #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:2360,optimiz,optimized,2360,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,"em::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x16573fa50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007fff7ca8eefc in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:195; #7 0x00007fff7c7ac09c in TUnixSystem::DispatchSignals (this=0x16573fa50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3610; #8 0x00007fff7c7ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #9 0x00007fff7c7a308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #10 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=..., this=0x7fffc4480180) at /usr/include/c++/8/new:169; #12 llvm::orc::ExecutionSession::lookup (this=0x1656ebc10, SearchOrder=std::vec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:28091,optimiz,optimized,28091,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"ementation. The degradation is caused by tbb function:. tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::receive_or_steal_task(long&). I suspect the reason is because #785 in the following function:. https://github.com/zzxuanyuan/root/blob/15cceff19b48dfe4a4b0c69c1ec07ea75bd1ccb5/tree/tree/src/TTreeCacheUnzip.cxx#L708. CreateTasks() explicitly creates 2 tasks (empty_task and MappingTask; and set_ref_count(2) means 2 tasks in total). The scheduler might make a better decision here since it knows there will be only one task except empty_task running in future. On the other hand, TTaskGroup uses tbb::task_group which calls the following function:. https://github.com/01org/tbb/blob/b9805bacadd4d0474fd3358cf0c7153042ce50c3/include/tbb/task_group.h#L108. task_group_base() also first creates a empty_task. However, it only creates 1 task(itself) by setting reference count as 1 (set_ref_count(1)). When it invoke another task by calling . https://github.com/01org/tbb/blob/b9805bacadd4d0474fd3358cf0c7153042ce50c3/include/tbb/task_group.h#L103. allocate_additional_child() will create a new task as child and increment reference count by 1. I guess accumulating tasks on-the-fly might degrade the performance since the tbb scheduler could spend more time on finding tasks to work on. In a short, I think explicitly defining the total number of tasks and task graph should have better performance (more efficient for scheduler I guess) than adding more tasks to task_group as the program runs. There are two alternative approaches that might improve the performance. ; 1. Since we have already know we will only have one task (except empty_task) to add into the task_group, we could revise TTaskGroup interface and notify it what task is going to run in advance.; 2. We could get rid of TTaskGroup in my current implemention and synchronously map baskets to different tasks. If we do not mind a little performance drops, the current implementation should be fine. Thanks,. Zhe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010:1425,perform,performance,1425,https://root.cern,https://github.com/root-project/root/pull/1010,4,['perform'],['performance']
Performance,"en run; interactively. Avoiding to register a canvas with the same name; multiple times fixes the crash:. ```; #8 0x00007f5b7876967d in TCanvas::Resize(char const*) (this=0x55e768e126c0) at ../graf2d/gpad/src/TCanvas.cxx:1740; #9 0x00007f5b3e90d668 in TRootCanvas::HandleContainerConfigure(Event_t*) (this=0x55e76852b460) at ../gui/gui/src/TRootCanvas.cxx:1789; #10 0x00007f5b3e8464fd in TGFrame::HandleEvent(Event_t*) (this=0x55e767938e70, event=0x7f5b79adff40) at ../gui/gui/src/TGFrame.cxx:476; #11 0x00007f5b3e7f4c9a in TGClient::HandleEvent(Event_t*) (this=0x55e768de2290, event=0x7f5b79adff40) at ../gui/gui/src/TGClient.cxx:846; #12 0x00007f5b3e7f531d in TGClient::ProcessOneEvent() (this=0x55e768de2290) at ../gui/gui/src/TGClient.cxx:656; #13 TGClient::ProcessOneEvent() (this=0x55e768de2290) at ../gui/gui/src/TGClient.cxx:648; #14 0x00007f5b3e7f536b in TGClient::HandleInput() (this=0x55e768de2290) at ../gui/gui/src/TGClient.cxx:703; #15 0x00007f5b8dcb0ff8 in TUnixSystem::DispatchOneEvent(bool) (this=0x55e75ccfd080, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1067; #16 0x00007f5b8dbd0dca in TSystem::ProcessEvents() (this=0x55e75ccfd080) at ../core/base/src/TSystem.cxx:424; #17 0x00007f5b8130600d in (); #18 0x00007f5b79ae0450 in (); #19 0x00007f5b8de5215f in WrapperCall(Cppyy::TCppMethod_t, size_t, void*, void*, void*) (method=94452242807424, nargs=0, args_=0x7f5b79ae01d7, self=0x55e75ccfd080, result=0x7f5b79ae01d7) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778; #20 0x00007f5b8de527cf in CallT<unsigned char> (args=<optimized out>, nargs=<optimized out>, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816; #21 Cppyy::CallB(long, void*, unsigned long, void*) (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:833; #22 0x00007f5b8d",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9139:1097,optimiz,optimized,1097,https://root.cern,https://github.com/root-project/root/pull/9139,1,['optimiz'],['optimized']
Performance,"enkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```; -- TEST COMMAND -- ; cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist; /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook; -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #5 <signal handler called>; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ================================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14155:1138,optimiz,optimized,1138,https://root.cern,https://github.com/root-project/root/issues/14155,1,['optimiz'],['optimized']
Performance,"entation of; the full path to shared objects allowing search at constant time O(1). This; also fixes issues when resolving symbols from OSX where the system libraries; contain multiple levels of symlinks.; * Bloom filter optimization -- it uses a stohastic data structure which gives; a definitive answer if a symbol is not in the set. The implementation checks; the .gnu.hash section in ELF which is the GNU implementation of a bloom; filter and uses it. If the symbol is not in the bloom filter, the; implementation builds its own and uses it. The measured performance of the; bloom filter is 30% speed up for 2mb more memory. The custom bloom filter on; top of the .gnu.hash filter gives 1-2% better performance.; The advantage for the custom bloom filter is that it works on all; implementations which do not support .gnu.hash (windows and osx). It is also; customizable if we want to further reduce the false positive rates; (currently at p=2%).; * Hash table optimization -- we build a hash table which contains all symbols; for a given library. This allows us to avoid the fallback symbol iteration; if multiple symbols from the same library are requested. The hash table; optimization targets to optimize the case where the bloom filter tells us; the symbol is *maybe* in the library. Patch by Alexander Penev (@alexander-penev) and me!. Performance Report; ===. |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|22,82|26,89|20,08|; |osx 10.14| roottest-cling| 589,67|452,97|307,34|; |osx 10.14| roottest-python| 377,69|475,78|311,5|; |osx 10.14| roottest-root-hist| 60,59|90,98|49,65|; |osx 10.14| roottest-root-math| 106,18|140,41|73,96|; |osx 10.14| roottest-root-tree| 1287,53|1861|1149,35|; |osx 10.14| roottest-root-treeformula | 568,43|907,46|531|; |osx 10.15| root-io-stdarray| - | 126.02 | 31.42|; |osx 10.15| roottest-root-treeformula| - | 327.08 | 231.14 |. The effect of runn",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4717:1213,optimiz,optimization,1213,https://root.cern,https://github.com/root-project/root/pull/4717,1,['optimiz'],['optimization']
Performance,"entry=0x7ffcac8d2400, funcname=<optimized out>, libp=libp; entry=0x7ffcac8d2440, hash=<optimized out>, p_ifunc=0x2243ac0, funcmatch=funcmatch; entry=1, memfunc_flag=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/ifunc.cxx:6710; #22 0x00007fba33204c22 in G__getfunction (item=item; entry=0xe65770 ""RunEtaC()"", known3=known3; entry=0x7ffcac8dcee4, memfunc_flag=<optimized out>, memfunc_flag; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/func.cxx:2901; #23 0x00007fba331e1752 in G__getitem (item=0xe65770 ""RunEtaC()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1918; #24 0x00007fba331e5c70 in G__getexpr (expression=expression; entry=0x2315180 ""RunEtaC()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1488; #25 0x00007fba331f090c in G__calc_internal (exprwithspace=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1071; #26 0x00007fba33262efe in G__process_cmd (line=line; entry=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", prompt=prompt; entry=0xe550a8 """", more=more; entry=0xe550a0, err=err; entry=0x7ffcac8e070c, rslt=rslt; entry=0x7ffcac8e0710) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/pause.cxx:2331; #27 0x00007fba37e4b1c0 in TCint::ProcessLine (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:549; #28 0x00007fba37e46687 in TCint::ProcessLineSynch (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:631; #29 0x00007fba37e91c05 in TApplication::Execut",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:6153,optimiz,optimized,6153,https://root.cern,https://github.com/root-project/root/issues/6977,1,['optimiz'],['optimized']
Performance,"envs/aslsRun2_ana/lib/libFoam.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libGraf.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libHist.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMatrix.6.22.06.so"" ""/<path/to>/opt/anaconda3/envs/aslsRun2_ana/lib/libMathCore.6.22.06.so"" ""-lsandbox.1"" ""-lCoreStorage"" ""-lcsfde"" ""-lMatch.1"" -o ""/<path/to>/Downloads/.wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/RooSDSCBShape_cxx.so""' failed!; [#0] ERROR:ObjectHandling -- RooWorkspace::CodeRepo::compileClasses() ERROR compiling class RooSDSCBShape, to fix this you can do the following: ; 1) Fix extracted source code files in directory .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/; 2) In clean ROOT session compiled fixed classes by hand using '.x .wscode.305a6bb0-6f9d-11eb-9678-a001a8c0beef.ws/ClassName.cxx+'; 3) Reopen file with RooWorkspace with broken source code in UPDATE mode. Access RooWorkspace to force loading of class; Broken instances in workspace will _not_ be compiled, instead precompiled fixed instances will be used.; 4) Reimport fixed code in workspace using 'RooWorkspace::importClassCode(""*"",kTRUE)' method, Write() updated workspace to file and close file; 5) Reopen file in clean ROOT session to confirm that problems are fixed; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT version 6.22/06 on macOS, obtained from conda-forge. ### Additional context; <!--; Add any other context about the problem here.; -->; See the forum post [here](https://root-forum.cern.ch/t/import-custom-pdf-in-rooworkspace/43478?u=mwilkins). In my view, `importClassCode` ought to be sufficient on its own, but in any case, once this is resolved, the required sequence of `RooWorkspace::addClassDeclImportDir`, `RooWorkspace::addClassImplImportDir`, `RooWorkspace::importClassCode`, `TClass::SetDeclFile`, and `TClass::SetImplFileName` ought to",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7249:8002,load,loading,8002,https://root.cern,https://github.com/root-project/root/issues/7249,1,['load'],['loading']
Performance,"er.cxx:1081; #9 0x00007fea7e9ad0bf in THashList::RecursiveRemove (this=0x5593666f1840, obj=0x559367a40820) at ../core/cont/src/THashList.cxx:354; #10 0x00007fea7e8d4e14 in TROOT::RecursiveRemove (this=0x7fea7ec46740 <ROOT::Internal::GetROOT1()::alloc>, obj=0x559367a40820) at ../core/base/src/TROOT.cxx:2455; #11 0x00007fea80417f82 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at ../core/base/inc/TROOT.h:398; #12 0x00007fea7e927b18 in TNamed::~TNamed (this=0x559367a40820, __in_chrg=<optimized out>) at ../core/base/src/TNamed.cxx:45; #13 0x00007fea7e9081d5 in TDirectory::~TDirectory (this=0x559367a40820, __in_chrg=<optimized out>) at ../core/base/src/TDirectory.cxx:117; #14 0x00007fea7ef7c856 in TDirectoryFile::~TDirectoryFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TDirectoryFile.cxx:202; #15 0x00007fea7ef9673f in TFile::~TFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TFile.cxx:566; #16 0x00007fea7ef96776 in TFile::~TFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TFile.cxx:566; #17 0x00007fea7e9288d9 in TObject::Delete (this=0x559367a40820) at ../core/base/src/TObject.cxx:178; #18 0x00007fea802bbf82 in TTree::ChangeFile (this=0x559368ca6c20, file=0x559367a40820) at ../tree/tree/src/TTree.cxx:2813; #19 0x00007fea802bf66e in TTree::CopyEntries (this=0x559368ca6c20, tree=0x559368ca7a30, nentries=53446198, option=0x7ffcad78e7a1 "" fast"", needCopyAddresses=true) at ../tree/tree/src/TTree.cxx:3567; #20 0x00007fea802c825a in TTree::Merge (this=0x559368ca6c20, li=0x7ffcad78e560, info=0x7ffcad78e780) at ../tree/tree/src/TTree.cxx:6940; #21 0x00007fea8020066b in ROOT::merge_TTree (obj=0x559368ca6c20, coll=0x7ffcad78e560, info=0x7ffcad78e780) at tree/tree/G__Tree.cxx:4209; #22 0x00007fea7ef8e60d in TFileMerger::MergeOne (this=0x7ffcad78f2b0, target=0x559367a40820, sourcelist=0x7ffcad78f308, type=12, info=..., oldkeyname="""", allNames=..., status=; 0x7ffcad78e6ec: true, onlyListed=; 0x7ffcad78e6e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10102:4438,optimiz,optimized,4438,https://root.cern,https://github.com/root-project/root/issues/10102,1,['optimiz'],['optimized']
Performance,"er/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (method=6088041216, self=0x16b1482f0, nargs=2, args=0x7fffc4480880, result_type=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:594; #30 0x00007fff7cb4f480 in CPyCppyy::CPPMethod::ExecuteFast (ctxt=<optimized out>, offset=<optimized out>, self=<optimized out>, this=0x16ae03d30) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #31 CPyCppyy::CPPMethod::Execute (this=0x16ae03d30, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #32 0x00007fff7cb4fe44 in CPyCppyy::CPPMethod::Call (this=0x16ae03d30, self=; 0x7fff6b79ae90: 0x7fff6b533fc0, args=0x7fff7cc54b08, kwds=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783; #33 0x00007fff7cb56de8 in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fff6b79ae80, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /usr/include/c++/8/bits/move.h:74; #34 0x00007fff7cb93498 in CPyCppyy::tpp_call (pytmpl=0x7fff6b53b228, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:32460,optimiz,optimized,32460,https://root.cern,https://github.com/root-project/root/issues/12372,3,['optimiz'],['optimized']
Performance,er; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUtil; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ROOTTreeViewer; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTGeomViewer; Failed to load module ROOTFitPan,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:2368,load,load,2368,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,"er>(nullptr, validCols));; {code}; and one of the component of make_shared is the call to the following shared_ptr constructor; {code:c++}; // This constructor is non-standard, it is used by allocate_shared.; template<typename _Alloc, typename... _Args>; shared_ptr(_Sp_make_shared_tag __tag, const _Alloc& __a,; _Args&&... __args); : __shared_ptr<_Tp>(__tag, __a, std::forward<_Args>(__args)...); { }; {code}; Note the use of std::forward. The snapshot test has 2 steps:. 1. Do the work, including a call to SnapshotImpl which contains the problem line, with only compiled code; 2. Do the same work relying on interpreted code, in which case SnapshotImpl is called via the interpreter. The symptoms of the failure is that **if** the snapshot test is compiled with optimization then. a. The compiled version works fine; b. In the interpreted version the constructor of the RInterface is wrong because the shared_ptr its constructor sees is **not** initialized. If the snapshot test is compiled without optimization then both steps succeeds. The main difference between the two is the amount of fully realized (i.e. non-inlined) functions emitted by the compiler. In the success fully case we have a stack like. {code}; interp SnapshotImpl calls; compiled std::make_shared<ROOT::Detail::RDF::RLoopManager … [in debug mode. this routine and down are used compiled]; compiled std::allocate_shared<ROOT::Detail::RDF::RLoopManager; ... implementation details .. all compiled.; compiled ROOT::Detail::RDF::RLoopManager::RLoopManager; compiled std::make_shared<ROOT::RDF::RInterface …; compiled std::allocate_shared<ROOT::RDF::RInterface …; compiled std::shared_ptr< ROOT::RDF::RInterface; compiled std::__shared_ptr<ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager; {code}. {code}; interp SnapshotImpl calls; interp std::make_shared<ROOT::Detail::RDF::RLoopManager …; interp std::allocate_shared<ROOT::Detail::RDF::RLoopManager; ... implementation details .. all interpreted.; compiled ROOT::Detail::R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2158:1245,optimiz,optimization,1245,https://root.cern,https://github.com/root-project/root/pull/2158,1,['optimiz'],['optimization']
Performance,"erInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb) s; Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0xbebebebebebebeae); frame #0: 0x0000000107bac674 libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) + 76; libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate:; -> 0x107bac674 <+76>: casalb w8, w9, [x22]; 0x107bac678 <+80>: cmp w8, #0x2; 0x107bac67c <+84>: b.ne 0x107bac6f4 ; <+204>; 0x107bac680 <+88>: mov x8, #-0x100000000 ; =-4294967296; Target 0: (repro.out) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0xbebebebebebebeae); * frame #0: 0x0000000107bac674 libclang_rt.asan_osx_dynamic.dylib`__asan::Allocator::Deallocate(void*, unsigned long, unsigned long, __sanitizer::BufferedStackTrace*, __asan::AllocType) + 76; frame #1: 0x0000000107c0c444 libclang_rt.asan_osx_dynamic.dylib`wrap__ZdaPv + 232; frame #2: 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16501:3851,queue,queue,3851,https://root.cern,https://github.com/root-project/root/pull/16501,1,['queue'],['queue']
Performance,"eration support for RooLandau and RooGamma; f3d9863ef8 [RF] Use RooWorkspace in `testRooFuncWrapper`; b5e7f383ac [RF] Use variable names based on `RooAbsArg` names in code generation; 4f7c3b0a6c [RF] Add AD support for RooChebychev and RooAddPdf.; 6438fdb78a [RF] Format RooPolyVar.(h/cxx) and RooPolynomial.(h/cxx) files.; 75d5e3d4b7 [RF] Add code-squash support for RooPolyVar and RooPolynomial.; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initial interface and implementation",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12723:1390,Optimiz,Optimize,1390,https://root.cern,https://github.com/root-project/root/pull/12723,5,['Optimiz'],['Optimize']
Performance,erent parts of clang; take. Example use:. ```; ROOT_CLING_TIMING=1 root.exe -l -b -q tutorials/hsimple.C . Processing tutorials/hsimple.C...; hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds; (TFile *) 0x37430c0; ===-------------------------------------------------------------------------===; Clang front-end time report; ===-------------------------------------------------------------------------===; Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---; 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules; 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm; 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm; 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm; 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm; 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm; 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm; 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm; 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm; 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm; 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:1089,Load,Loading,1089,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"erface/GBRForestTools.h. The interface remains the same, only that the template parameter; specifying the backend is gone. This change adds support for unbalanced trees. To see the fixed logic, as one run a modified version of the `tmva101_Training.py` tutorial (remember to run `tutorials/tmva/tmva100_DataPreparation.py` first):; ```python; import ROOT; import numpy as np. from tmva100_DataPreparation import variables. def load_data(signal_filename, background_filename):; # Read data from ROOT files; data_sig = ROOT.RDataFrame(""Events"", signal_filename).AsNumpy(); data_bkg = ROOT.RDataFrame(""Events"", background_filename).AsNumpy(). # Convert inputs to format readable by machine learning tools; x_sig = np.vstack([data_sig[var] for var in variables]).T; x_bkg = np.vstack([data_bkg[var] for var in variables]).T; x = np.vstack([x_sig, x_bkg]). # Create labels; num_sig = x_sig.shape[0]; num_bkg = x_bkg.shape[0]; y = np.hstack([np.ones(num_sig), np.zeros(num_bkg)]). # Compute weights balancing both classes; num_all = num_sig + num_bkg; w = np.hstack([np.ones(num_sig) * num_all / num_sig, np.ones(num_bkg) * num_all / num_bkg]). return x, y, w. # Load data; x, y, w = load_data(""train_signal.root"", ""train_background.root""). # Fit xgboost model; from xgboost import XGBClassifier; xbdt = XGBClassifier(max_depth=3, n_estimators=500); xbdt.fit(x, y, sample_weight=w). # Save model in TMVA format; ROOT.TMVA.Experimental.SaveXGBoost(xbdt, ""myBDT"", ""tmva101.root"", num_inputs=x.shape[1]). # Load data; x, y_true, w = load_data(""test_signal.root"", ""test_background.root""). # Load trained model; File = ""tmva101.root"". bdt = ROOT.TMVA.Experimental.RBDT(""myBDT"", File). # Make prediction; y_pred_ref = xbdt.predict_proba(x)[:, 1]; y_pred = bdt.Compute(x).T. diff = y_pred - y_pred_ref. print(""max diff"", np.max(np.abs(diff))); ```; Before, the max difference was `0.379578`, and with this PR it is `5.9604645e-08`, compatible with floating point precision. FYI @martamaja10, @lmoneta, @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173:1516,Load,Load,1516,https://root.cern,https://github.com/root-project/root/pull/15173,3,['Load'],['Load']
Performance,"erpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; #10 0x00007fff9ba04d00 in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /usr/include/c++/8/bits/atomic_base.h:295; #11 0x00007fff9a459050 in llvm::orc::LLJIT::lookupLinkerMangled (Name=..., JD=..., this=0x174098770) at /usr/include/c++/8/ppc64le-redhat-linux/bits/gthr-default.h:778; #12 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x174098770) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #13 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x174098770) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x17404b400, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #15 0x00007fff9a450208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x174094f70) at /usr/include/c++/8/bits/unique_ptr.h:345; #16 cling::IncrementalExecutor::executeWrapper (this=0x174094f70, function=..., returnValue=0x7fffd51c7cb0) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #17 0x00007fff9a39b964 in cling::Interpreter::RunFunction (this=0x1740192b0, FD=<optimized out>, res=res; entry=0x7fffd51c7cb0) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fff9a3a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffd51c7cb0, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #19 0x00007fff9a24178c in TCling::Calc (this=0x174039100, line=0x174e16fa0 ""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:22351,optimiz,optimized,22351,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"erpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; #12 0x00007fffa4004d00 in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /usr/include/c++/8/bits/atomic_base.h:295; #13 0x00007fffa2a59050 in llvm::orc::LLJIT::lookupLinkerMangled (Name=..., JD=..., this=0x11efcd4b0) at /usr/include/c++/8/ppc64le-redhat-linux/bits/gthr-default.h:778; #14 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x11efcd4b0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #15 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x11efcd4b0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #16 cling::IncrementalJIT::getSymbolAddress (this=0x11ef800c0, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #17 0x00007fffa2a50208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x11efca180) at /usr/include/c++/8/bits/unique_ptr.h:345; #18 cling::IncrementalExecutor::executeWrapper (this=0x11efca180, function=..., returnValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #19 0x00007fffa299b964 in cling::Interpreter::RunFunction (this=0x11ef4d780, FD=<optimized out>, res=res; entry=0x7fffff157520) at /usr/include/c++/8/bits/basic_string.h:2306; #20 0x00007fffa29a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffff157520, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #21 0x00007fffa2aecf60 in cling::MetaSema::<lambda(cling::Transaction*, std::__cxx11::string, llvm::StringRef, cling::Value*)>::operator() (__closure=<synthetic pointer>, ret=0x7fffff157520, args=..., func=""rf104_classfact",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:15936,optimiz,optimized,15936,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795; #64 0x00007f54c943fe5e in TRint::Run (this=this; entry=0x55ed24b82e70, retrn=retrn; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446; #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this; entry=0x55ed2cce0be0, Ty=<optimized out>, Ty; entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174; #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354; #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this; entry=0x55ed2cce0be0, QTy=QTy; entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204; #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227; #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType; entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668; #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:16386,optimiz,optimized,16386,https://root.cern,https://github.com/root-project/root/issues/9595,1,['optimiz'],['optimized']
Performance,"es not matter. . ```; $ root -l data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple; root [0]; Attaching file data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple as _file0...; (TFile *) 0x55fecfbb7140; root [1] _file0->ls(); TFile**		data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple	; TFile*		data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple	; KEY: ROOT::Experimental::RNTuple	Events;1	object title; root [2] Events<Enter>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f17510ea707 in __GI___wait4 (pid=109605, stat_loc=stat_loc; entry=0x7ffd9df79db8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f17510ea6cb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffd9df79db8, options=options; entry=0) at waitpid.c:38; #2 0x00007f17510627fb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f1751960d69 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2395; #5 0x00007f17519606f4 in TUnixSystem::DispatchSignals (this=0x55fecde2a420, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:402; #10 0x00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::Loo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12673:1291,optimiz,optimized,1291,https://root.cern,https://github.com/root-project/root/issues/12673,1,['optimiz'],['optimized']
Performance,"es/5286101/mwe.tar.gz). The gist is that the event here is a simple class: ; ```. #ifndef _mwe_event_h; #define _mwe_event_h. #include ""TObject.h"" ; #include <array>. class MWEEvent ; {. public: ; MWEEvent() { iev =-1; bar=-1; foo[0] =-1; foo[1]=-1; } . // workaround for not being able to access foo directly ; double get_foo(int i) const { return foo[i]; } . int iev; ; double bar; ; double foo[2]; ; virtual ~MWEEvent() { ; } . ClassDef(MWEEvent,1);; }; ; ```. A tree of these objects can be read with PyROOT fine if only the scalar members are touched, or the getter is used:. ```; import ROOT . ROOT.gSystem.Load(""build/libmwe.so"") . f = ROOT.TFile(""out.root""); ; t = f.Get(""tree""); . ev = ROOT.MWEEvent() . t.SetBranchAddress(""event"",ev) . for i in range(10): ; t.GetEntry(i); ; print (ev.iev) ; print (ev.bar) ; print (ev.get_foo(0)); print (ev.get_foo(1)); ```. But if you try to access the array member directly (as used to work), it does not work:; ```; import ROOT . ROOT.gSystem.Load(""build/libmwe.so"") . f = ROOT.TFile(""out.root""); ; t = f.Get(""tree""); . ev = ROOT.MWEEvent() . t.SetBranchAddress(""event"",ev) . for i in range(10): ; t.GetEntry(i); ; print (ev.iev) ; print (ev.bar) ; print (ev.foo[0]); print (ev.foo[1]). ```. This results in . ```; python breaks.py ; 0; 0.9989327176093981 ; -0.43476438941434026 ; 0.7817962561955079 ; 0 ; 0.9989327176093981 ; *** Break *** segmentation violation; ; ; ; =========================================================== ; There was a crash. ; This is the entire stack trace of all threads: ; =========================================================== ; #0 0x00007fd99fe87eca in wait4 () from /lib64/libc.so.6 ; #1 0x00007fd99fe03aa7 in do_system () from /lib64/libc.so.6 ; #2 0x00007fd9924acda1 in TUnixSystem::StackTrace() () from /usr/lib64/root/libCore.so; #3 0x00007fd991cf9f42 in (anonymous namespace)::TExceptionHandlerImp::HandleException(int) () from /usr/lib64/root/libcppyy_backend3_8.so.6.22; #4 0x00007fd9924a8749 in TUnixSystem:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468:1769,Load,Load,1769,https://root.cern,https://github.com/root-project/root/issues/6468,1,['Load'],['Load']
Performance,"estBit' in /opt/root_src/core/cont/src/TRefArray.cxx:211; 34: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:211; 35: Calling 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 36: Assuming the condition is true in /opt/root_src/core/base/inc/TObject.h:187; 37: Returning the value 1, which participates in a condition later in /opt/root_src/core/base/inc/TObject.h:187; 38: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 39: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 40: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:214; 41: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:215; 42: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 43: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 44: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 45: Returning the value 1 (loaded from 'valid'), which participates in a condition later in /opt/root_src/core/cont/src/TRefArray.cxx:258; 46: Returning from 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 47: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:347; 48: Array access (via field 'fUIDs') results in a null pointer dereference in /opt/root_src/core/cont/src/TRefArray.cxx:348; /opt/root_src/core/cont/src/TRefArray.cxx:348:30: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming 'obj' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:378; 2: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:378; 3: Calling 'TRefArray::Last' in /opt/root_src/core/cont/src/TRefArray.cxx:379; 4: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:575; 5: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:575; 6: Returning pointer, which participates in a condition later in /opt/root_src/core/cont/src/TRef",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:15987,load,loaded,15987,https://root.cern,https://github.com/root-project/root/issues/7424,1,['load'],['loaded']
Performance,"esting=""ON"" -Droottest=""ON"" /srv/root/src/root; ```; and the following features were enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_openui5 cefweb clad dataframe davix exceptions fftw3 fitsio fortran gdml gviz http fcgi imt mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia6 pythia8 qt5web r roofit webgui root7 rpath runtime_cxxmodules shadowpw shared sqlite ssl tmva tmva-cpu tmva-pymva tmva-rmva spectrum unuran uring x11 xml xrootd; ```; The [CMakeCache.txt](https://github.com/root-project/root/files/6343170/CMakeCache.txt) file is attached. The test failures are as follows:. ```sh; The following tests FAILED:; 	 10 - pyunittests-pyroot-import-load-libs (Failed); 	 85 - gtest-core-metacling-test-TClingTest (Failed); 	994 - tutorial-v7-ntuple-ntpl005_introspection (Failed); 	1335 - roottest-python-JupyROOT-importROOT_notebook (Failed); 	1336 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; F",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:1520,load,load-libs,1520,https://root.cern,https://github.com/root-project/root/issues/7936,1,['load'],['load-libs']
Performance,"estore/recompute these values. A temporary fix was introduced for now in FairRoot, which is to simply do the recompute for all TGeoVolumeAssembly in the geometry tree, which seems to be fast enough that we do not have to try to track affected Volumes to be more selective. ; This may however not be the case later when applied to complete geometries for experiments like CBM. ### To Reproduce; Steps to reproduce the behavior with the attached files (includes ""ROOT-only"" examples both for problem and for macro-level fix):; 1. Compile a copy of ROOT 6.22.08 (done with FairSoft apr21p2 and FairRoot v18.6.7, should work with any older versions of each and with recent versions of FairRoot, as well as with a standalone version of ROOT); 1. Download [BboxAlignPb_example_2023_02_07.zip](https://github.com/root-project/root/files/10674368/BboxAlignPb_example_2023_02_07.zip) and unzip the macro, the standard container dictionary header and the two root files in a folder; 1. Go to this folder, load your ROOT environment; 1. Run; ```; root -l -b; root [0] .L alignment_map_def.h+; root [1] .x BboxAlignBug.C(""mcbm_beam_2022_05_23_nickel.geo.root"", ""AlignmentMatrices_mcbm_beam_2022_05_23_nickel.root""); ```; Of the 3 transformations visible in the printout; - Two are applied to TGeoVolumeAssembly objects and lead to these assembly having zero size bounding boxes (`/cave_1/sts_v22e_mcbm_0` and `/cave_1/sts_v22e_mcbm_0/Station01_1`); - One is applied to a Node and leads to 2 TGeoVolumeAssembly higher in the hierarchy to have zero size bounding boxes (`/cave_1/sts_v22e_mcbm_0/Station02_2/Ladder10_2/HalfLadder10d_2/HalfLadder10d_Module04_2`); <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 3. Don't forget to attach the required input files!; 4. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; 1. ROOT 6.22.08, 6.26.10; 1. OS: Debian 8, Debian 10, Ubuntu 20.04; 1. Compi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12242:2537,load,load,2537,https://root.cern,https://github.com/root-project/root/issues/12242,1,['load'],['load']
Performance,"eter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x17404b400, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #15 0x00007fff9a450208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x174094f70) at /usr/include/c++/8/bits/unique_ptr.h:345; #16 cling::IncrementalExecutor::executeWrapper (this=0x174094f70, function=..., returnValue=0x7fffd51c7cb0) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #17 0x00007fff9a39b964 in cling::Interpreter::RunFunction (this=0x1740192b0, FD=<optimized out>, res=res; entry=0x7fffd51c7cb0) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fff9a3a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffd51c7cb0, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #19 0x00007fff9a24178c in TCling::Calc (this=0x174039100, line=0x174e16fa0 ""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""..., error=0x7fffd51c7de8) at /usr/include/c++/8/bits/basic_string.h:256; #20 0x00007fffa32551c8 in ROOT::Internal::RDF::<lambda(const string&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, codeSlice=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""...) at /usr/include/c++/8/bits/basic_string.h:2294; #21 ROOT::Internal::RDF::InterpreterCalc (code=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:22963,optimiz,optimized,22963,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"eter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #16 cling::IncrementalJIT::getSymbolAddress (this=0x11ef800c0, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #17 0x00007fffa2a50208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x11efca180) at /usr/include/c++/8/bits/unique_ptr.h:345; #18 cling::IncrementalExecutor::executeWrapper (this=0x11efca180, function=..., returnValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #19 0x00007fffa299b964 in cling::Interpreter::RunFunction (this=0x11ef4d780, FD=<optimized out>, res=res; entry=0x7fffff157520) at /usr/include/c++/8/bits/basic_string.h:2306; #20 0x00007fffa29a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffff157520, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #21 0x00007fffa2aecf60 in cling::MetaSema::<lambda(cling::Transaction*, std::__cxx11::string, llvm::StringRef, cling::Value*)>::operator() (__closure=<synthetic pointer>, ret=0x7fffff157520, args=..., func=""rf104_classfactory"", T=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:643; #22 cling::MetaSema::actOnxCommand (this=0x11f2601d0, file=..., args=..., result=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #23 0x00007fffa2afed24 in cling::MetaParser::isXCommand (this=this; entry=0x7fffff1572b0, actionResult=; 0x7fffff157260: cling::MetaSema::AR_Success, resultValue=resultValue; entry=0x7fffff157520) at /usr/include/c++/8/bits/basic_string.h:2306; #24 0x00007fffa2affe20 in cling::MetaParser::isCommand (this=0x7fffff1572b0, actionResult=; 0x7fffff157260: clin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:16548,optimiz,optimized,16548,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"f your local storage.; N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:5219,cache,cache,5219,https://root.cern,https://github.com/root-project/root/pull/14039,1,['cache'],['cache']
Performance,"f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, n",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:21149,optimiz,optimized,21149,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, n",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:17634,optimiz,optimized,17634,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126; #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37; #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215; #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this; entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr; entry=0x55ed2cd76b08, PerformInit=PerformInit; entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670; #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this; entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr; entry=0x55ed2cd76b08, PerformInit=PerformInit; entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481; #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this; entry=0x55ed2cce1280, D=<optimized out>, D; entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024; #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this; entry=0x55ed2cce1280, GD=..., GV=GV; entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793; #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this; entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540; #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:3943,optimiz,optimized,3943,https://root.cern,https://github.com/root-project/root/issues/9595,6,"['Perform', 'optimiz']","['PerformInit', 'optimized']"
Performance,"f=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:23362,optimiz,optimized,23362,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"facd7a73b0c in llvm::cast_retty<clang::UsingDecl, clang::Decl const*>::ret_type llvm::dyn_cast<clang::UsingDecl, clang::Decl const>(clang::Decl const*) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/include/llvm/Support/Casting.h:334; #19 0x00007facd7a73536 in TClingMemberIter::Advance() () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/metacling/src/TClingMemberIter.cxx:128; #20 0x00007facd7a780e9 in TClingMemberIter::Init() () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/metacling/src/TClingMemberIter.h:152; #21 0x00007facd7a763a5 in TClingMethodInfo::TClingMethodInfo(cling::Interpreter*, TClingClassInfo*) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/metacling/src/TClingMethodInfo.cxx:276; #22 0x00007facd79333fe in TCling::MethodInfo_Factory(ClassInfo_t*) const () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/metacling/src/TCling.cxx:8863; #23 0x00007facdfe45a3a in TListOfFunctions::Load() () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/meta/src/TListOfFunctions.cxx:390; #24 0x00007facdfe18843 in TClass::GetListOfMethods(bool) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/meta/src/TClass.cxx:3721; #25 0x00007facdc59f206 in Cppyy::GetNumMethods(unsigned long) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1323; #26 0x00007facdc8effb9 in CPyCppyy::BuildScopeProxyDict(unsigned long, _object*) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:166; #27 0x00007facdc8f2654 in CPyCppyy::CreateScopeProxy () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:673; #28 0x00007facdc8cbbe2 in CPyCppyy::meta_getattro(_object*, _object*) () at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:323; #29 0x00007facdf52e1cc in PyEval_EvalF",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6359:4467,Load,Load,4467,https://root.cern,https://github.com/root-project/root/issues/6359,1,['Load'],['Load']
Performance,"false>::__destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:163; #8 0x00007fffee41cf98 in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:196; #9 0x00007fffee41ae3b in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*, std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> > > (__first=0x5555587feb70, __last=0x5555587feb78) at /usr/include/c++/11/bits/alloc_traits.h:848; #10 0x00007fffee4192ad in std::vector<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >, std::allocator<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> > > >::~vector (this=0x7fffffff9280, __in_chrg=<optimized out>); at /usr/include/c++/11/bits/stl_vector.h:680; #11 0x00007fffee4162c1 in llvm::orc::RTDyldObjectLinkingLayer::handleRemoveResources (this=0x55555587cd40, ; K=93825045309680); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.cpp:336; #12 0x00007fffee378503 in llvm::orc::ExecutionSession::removeResourceTracker (this=0x555555cc9bb0, RT=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2162; #13 0x00007fffee36932a in llvm::orc::ResourceTracker::remove (this=0x5555587f28f0); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:53; #14 0x00007fffec164fc7 in cling::IncrementalJIT::removeModule (this=0x5555557aaed0, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10898:2852,optimiz,optimized,2852,https://root.cern,https://github.com/root-project/root/issues/10898,1,['optimiz'],['optimized']
Performance,"ff720b5ad in _dlerror_run () from /lib64/libdl.so.2; #12 0x00007ffff720b041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #13 0x00007fffefcd2e24 in cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (); ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:3887,Load,Load,3887,https://root.cern,https://github.com/root-project/root/issues/7657,1,['Load'],['Load']
Performance,"ff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314; #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94; #15 THashTable::Add (this=0xe65a20, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashTable.cxx:96; #16 0x00007ffff7be6bf1 in THashList::AddLast (this=this@entry=0x5be690, obj=obj@entry=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/cont/src/THashList.cxx:100; #17 0x00007ffff7c4e0d1 in TListOfDataMembers::AddLast (this=0x5be690, obj=0xee3bc0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TListOfDataMembers.cxx:103; #18 0x00007ffff7ab8785 in TList::Add (obj=0xee3bc0, this=0x5be690) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TList.h:87; #19 TROOT::GetListOfGlobals (this=0x7ffff7da7a60 <ROOT::Internal::GetROOT1()::alloc>, load=load@entry=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/base/src/TROOT.cxx:1767; #20 0x00007fffeeab1058 in TCling::HandleNewDecl (this=0x4a0550, DV=0xedf238, isDeserialized=isDeserialized@entry=true, modifiedTClasses=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:555; #21 0x00007fffeeabb785 in TCling::UpdateListsOnCommitted (this=0x4a0550, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:6115; #22 0x00007fffeebd0103 in cling::MultiplexInterpreterCallbacks::TransactionCommitted (this=0x57fe20, T=...) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:76; #23 0x00007fffeed05d71 in cling::IncrementalParser::commitTransaction (this=0x4a2980, PRT=..., ClearDiagClient=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:532; #24 0x00007fff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:6256,load,load,6256,https://root.cern,https://github.com/root-project/root/pull/2776,4,['load'],['load']
Performance,"ffer (this=<optimized out>, b=..., pointer=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6758; #42 0x00007fffa98ea688 in TMVA::Experimental::SOFIE::RModel::Streamer (R(bool)=..., this=0x109986ba0) at /builddir/build/BUILD/root-6.28.00/tmva/sofie/src/RModel.cxx:646; #43 TMVA::Experimental::SOFIE::RModel::Streamer (this=0x109986ba0, R(bool)=...) at /builddir/build/BUILD/root-6.28.00/tmva/sofie/src/RModel.cxx:644; #44 0x00007fffa8f0aa30 in TClass::StreamerTObject (pThis=0x10a596170, object=0x109986ba0, b=...) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6797; #45 0x00007fffa93abef0 in TClass::Streamer (onfile_class=0x0, b=..., obj=0x109986ba0, this=0x10a596170) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #46 TKey::ReadObjectAny (this=0x10aa98220, expectedClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TKey.cxx:1102; #47 0x00007fffa934c51c in TDirectoryFile::GetObjectChecked (this=0x7ffff83eb1c8, namecycle=<optimized out>, expectedClass=0x10a596170) at /builddir/build/BUILD/root-6.28.00/io/io/src/TDirectoryFile.cxx:1111; #48 0x0000000108cd56c0 in TDirectory::GetObject<TMVA::Experimental::SOFIE::RModel> (ptr=<synthetic pointer>: <optimized out>, namecycle=0x108cd6d08 ""model"", this=0x7ffff83eb1c8) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:651; #49 EmitModel (inputfile=..., outname=""Add"") at /builddir/build/BUILD/root-6.28.00/ppc64le-redhat-linux-gnu/tmva/sofie/test/EmitFromRoot_all.cxx:26; #50 0x0000000108cd23dc in main (argc=<optimized out>, argv=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; ===========================================================; pure virtual method called; terminate called without an active exception; Subprocess aborted; ~~~. Disabling the SOFIE parser, so that the build completes. There are error during testing:. There are failures when running in interpreter mode:. ~~~; 98/1192 Test #779: tutorial-roofit-rf104_classf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:10946,optimiz,optimized,10946,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"ffff05eafdf in ROOT::Internal::GetROOT2() () from /usr/lib/root/6.24/lib/libCore.so.6.24; #8 0x00007ffff06eee6c in TClass::GetClass(std::type_info const&, bool, bool, unsigned long, unsigned long) () from /usr/lib/root/6.24/lib/libCore.so.6.24; #9 0x00007ffff3529838 in o2::conf::ConfigurableParamHelper<o2::conf::KeyValParam>::putKeyValues (tree=0x5555556a24a0, this=0x7ffff35743e0 <o2::conf::KeyValParam::sInstance>) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/include/CommonUtils/ConfigurableParamHelper.h:138; #10 o2::conf::ConfigurableParam::initPropertyTree () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:265; #11 0x00007ffff3529953 in o2::conf::ConfigurableParam::initialize () at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:357; #12 0x00007ffff352fbc5 in o2::conf::ConfigurableParam::updateFromFile (configFile="""", paramsList="""", unchangedOnly=unchangedOnly@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/Common/Utils/src/ConfigurableParam.cxx:386; #13 0x0000555555564294 in o2sim_init (asservice=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:54; #14 0x00005555555673c3 in o2sim (asservice=asservice@entry=false) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/../macro/o2sim.C:230; #15 0x000055555555f5bf in main (argc=-38592, argv=<optimized out>) at /home/qon/alice/sw/SOURCES/O2/dev/0/run/o2sim.cxx:30; ```; This is on 64 bit Gentoo Linux compiling ROOT myself with GCC 10.2.; I assume the llvm11 is pulled in by libgandiva of apache-arrow, which links to my system llvm. I do not see this problem with ROOT 6.22.08 (setup identical otherwise), so I assume it might be to the bump of the LLVM version in ROOT.; So far I have tried the 6.24.00 tag and the `v6-24-00-patches` branch, both with the same result. For reference, we had very similar issues quite a while ago, which was fixed by #4689, although perhaps now it is the other way around, with ROOT linking to my llvm11 symbols.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8180:3794,optimiz,optimized,3794,https://root.cern,https://github.com/root-project/root/issues/8180,2,['optimiz'],['optimized']
Performance,"finally working. This patch enables ROOT to preload all modules at startup time. In my; environment, this patch fixes 14 tests for runtime cxxmodules. Preloading all the modules has several advantages. 1. We do not have to; rely on rootmap files which don't support some features (namespaces and; templates) 2. Lookup would be faster because we don't have to do; trampoline via rootmap files. The only disadvantage of preloading all the modules is the startup time performance.; `root.exe -q -l memory.C`; This is a release build without modules:; ```; cpu time = 0.091694 seconds; sys time = 0.026187 seconds; res memory = 133.008 Mbytes; vir memory = 217.742 Mbytes; ```; This is a release build with modules, with this patch:; ```; cpu time = 0.234134 seconds; sys time = 0.066774 seconds; res memory = 275.301 Mbytes; vir memory = 491.832 Mbytes; ```; As you can see, preloading all the modules makes both time and memory 2; to 3 times worse **at a startup time**. **Edit** : With hsimple.C; `root.exe -l -b tutorials/hsimple.C -q ~/CERN/ROOT/memory.C`; Release build without modules:; ```; Processing tutorials/hsimple.C... ; hsimple : Real Time = 0.04 seconds Cpu Time = 0.05 seconds ; (TFile *) 0x555ae2a9d560 ; Processing /home/yuka/CERN/ROOT/memory.C... ; cpu time = 0.173591 seconds ; sys time = 0.011835 seconds ; res memory = 135.32 Mbytes ; vir memory = 209.664 Mbytes ; ```; Release build with modules, with this patch:; ```; Processing tutorials/hsimple.C...; hsimple : Real Time = 0.04 seconds Cpu Time = 0.04 seconds; (TFile *) 0x55d1b036d230; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.290742 seconds; sys time = 0.043851 seconds; res memory = 256.844 Mbytes; vir memory = 438.484 Mbytes; ```. However, it is a matter of course that we get slower startup time if we; try to load all the modules at startup time, not on-demand. I haven't had a good benchmark for this but, in theory, it reduces execution time instead as we're anyway loading modules after the startup.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1814:2019,load,load,2019,https://root.cern,https://github.com/root-project/root/pull/1814,2,['load'],"['load', 'loading']"
Performance,fixed code to load JupyROOT in python2,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6305:14,load,load,14,https://root.cern,https://github.com/root-project/root/pull/6305,1,['load'],['load']
Performance,"fixes #7584 . This PR shows a possible refactor of the logic that finally creates the ranges to send to the distributed resources. It works in the following steps:; 1. Split the big HeadNode class in differente head node types according to the original data source (e.g. EntriesHeadNode, TreeHeadNode, in the future also RNTupleHeadNode). Use a factory to get the correct head node type according to user provided arguments to the RDataFrame constructor; 2. Create a different Range type per each head node type. This makes the passing of information more modular, allowing sending only a couple of integers in the case of empty RDF , or adding info about friend trees in the case of a tree based RDF; 3. Better support friends with the recently introduced `ROOT::Internal::TreeUtils` functions; 4. NEW: Cache the created `Range`s for reuse in the same python session. This still doesn't improve the initial startup time discussed in #8232",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8391:804,Cache,Cache,804,https://root.cern,https://github.com/root-project/root/pull/8391,1,['Cache'],['Cache']
Performance,g /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm; 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm; 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm; 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm; 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:3985,Load,Loading,3985,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,g /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm; 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm; 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:9102,Load,Loading,9102,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,g /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm; 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm; 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm; 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuil,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:4126,Load,Loading,4126,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"g at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead will be reduced significantly when using RDataFrame in conjunction with RNTuple.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:5664,cache,cache,5664,https://root.cern,https://github.com/root-project/root/pull/14039,3,"['bottleneck', 'cache', 'perform']","['bottleneck', 'cache', 'performed']"
Performance,"g-analyzer-core.NonNullParamChecker]; 1: Assuming 'size' is <= 'maxsize' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:818; 2: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:818; 3: Calling 'TPgSQLStatement::SetSQLParamType' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:820; 4: Assuming 'npar' is >= 0 in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 5: Left side of '||' is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 6: Assuming 'npar' is < field 'fNumBuffers' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 7: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 8: Assuming 'maxsize' is < 0 in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:704; 9: Taking true branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:704; 10: Assuming the condition is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:705; 11: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:705; 12: Storing null pointer value in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:706; 13: 'isbinary' is true in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:713; 14: '?' condition is true in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:713; 15: 'isbinary' is true in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:714; 16: '?' condition is true in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:714; 17: Returning the value 1 (loaded from 'kTRUE'), which participates in a condition later in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:716; 18: Returning from 'TPgSQLStatement::SetSQLParamType' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:820; 19: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:820; 20: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:822; /opt/root_src/core/base/inc/TVersionCheck.h; /opt/root_src/sql/mysql/src/TMySQLStatement.cxx; /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7525:6542,load,loaded,6542,https://root.cern,https://github.com/root-project/root/issues/7525,1,['load'],['loaded']
Performance,"g.so); ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x93F38B7: llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x91305C5: AddReachableCodeToWorklist(llvm::BasicBlock*, llvm::DataLayout const&, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, llvm::InstCombineWorklist&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9139861: combineInstructionsOverFunction(llvm::Function&, llvm::InstCombineWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, bool, llvm::LoopInfo*) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x913A00E: llvm::InstructionCombiningPass::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CCC7: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4CE00: llvm::FPPassManager::runOnModule(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x9E4BEE5: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== by 0x6F12B5A: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /build/vvassilev/root-release-master/lib/libCling.so); ==22765== ; ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (defined); ==22765=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:3718,Optimiz,OptimizationRemarkEmitter,3718,https://root.cern,https://github.com/root-project/root/issues/11385,1,['Optimiz'],['OptimizationRemarkEmitter']
Performance,"g/src/TClingClassInfo.cxx:1098; #21 0x00007fffa2e2cdf4 in TCling::ClassInfo_New (this=<optimized out>, cinfo=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:8290; #22 0x00007fffa8f0be24 in TClass::NewObject (this=0x10a9218e0, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:433; #23 0x00007fffa8f0fa14 in TClass::New (this=<optimized out>, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:4969; #24 0x00007fffa92e0724 in TBufferFile::ReadObjectAny (this=0x7ffff83ea100, clCast=0x10a861920) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:2458; #25 0x00007fffa9389c44 in TGenCollectionStreamer::ReadObjects (this=0x10a861070, nElements=<optimized out>, b=..., onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:395; #26 0x00007fffa938a6f8 in TGenCollectionStreamer::ReadBufferGeneric (this=<optimized out>, b=..., obj=0x109986cc0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1368; #27 0x00007fffa93850a8 in TGenCollectionStreamer::ReadBufferDefault (this=0x10a861070, b=..., obj=0x109986cc0, onFileClass=0x0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1302; #28 0x00007fffa9384f00 in TGenCollectionStreamer::ReadBuffer (this=<optimized out>, b=..., obj=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1232; #29 0x00007fffa933ff7c in TCollectionClassStreamer::Stream (onfileClass=0x10a860aa0, obj=0x109986cc0, b=..., this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:177; #30 TCollectionClassStreamer::Stream (this=<optimized out>, b=..., obj=0x109986cc0, onfileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:172; #31 0x00007fffa8f0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:6913,optimiz,optimized,6913,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"g::Value*, cling::Transaction**, unsigned long) () from /home/tdietel/alice/sw/slc7_x86-64/ROOT/v6-28-04-14/lib/libCling.so; #15 0x00007fa76b0675ea in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/tdietel/alice/sw/slc7_x86-64/ROOT/v6-28-04-14/lib/libCling.so; #16 0x00007fa76b142c97 in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/tdietel/alice/sw/slc7_x86-64/ROOT/v6-28-04-14/lib/libCling.so; #17 0x00007fa76af8a0bc in HandleInterpreterException (metaProcessor=0x243df60, input_line=0x7fff0771e079 ""sortbug()"", compRes=; 0x7fff0771e03c: cling::Interpreter::kSuccess, result=0x7fff0771e170) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:2460; #18 0x00007fa76afa4749 in TCling::ProcessLine (this=0x16e7bc0, line=<optimized out>, error=0x7fff0771f04c) at /jenkins/workspace/build-any-ib/sw/20156516; /1/slc7_x86-64/GCC-Toolchain/v12.2.0-alice1-5/include/c++/12.2.0/bits/unique_ptr.h:191; #19 0x00007fa76afa4b02 in TCling::ProcessLineSynch (this=0x16e7bc0, line=0x16e8930 "".X /home/tdietel/alice/data/ole/./sortbug.C+"", error=0x7fff0771f04c); at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:3554; #20 0x00007fa7711777e7 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fff0771f04c, keep=<optimized out>) at /jenkins/workspace/build-any-ib; /sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/base/src/TApplication.cxx:1661; #21 0x00007fa77172040c in TRint::ProcessLineNr (this=0x16b4f60, filestem=<optimized out>, line=0x7fff0771f060 "".x sortbug.C+"", error=0x7fff0771f04c) at /; jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:820; #22 0x00007fa771721fc6 in TRint::Run (this=this; entry=0x16b4f60, retrn=retrn;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:8392,optimiz,optimized,8392,https://root.cern,https://github.com/root-project/root/issues/13314,1,['optimiz'],['optimized']
Performance,"gROOT->ProcessLine(""#include ... "") faster loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6719:43,load,loaded,43,https://root.cern,https://github.com/root-project/root/issues/6719,1,['load'],['loaded']
Performance,"gcc9-dbg/include/GaudiKernel/StatEntity.h:12:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/Accumulators.h:14:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/Gaudi/MonitoringHub.h:15:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json.hpp:49:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/adl_serializer.hpp:5:; In file included from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/conversions/from_json.hpp:18:; /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/detail/meta/type_traits.hpp:11:10: fatal error: cannot open file '/build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/jsonmcpp/3.9.1/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp': No such file or directory; #include <nlohmann/json_fwd.hpp>; ^; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:72: bool cling::TransactionUnloader::unloadFromPreprocessor(cling::Transaction*, cling::DeclUnloader&): Assertion `Successful && ""Cannot handle that yet!""' failed.; *** Break *** abort; ...; ```; The header file being loaded is in `/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-dbg/include/nlohmann/json_fwd.hpp`, which is included in `ROOT_INCLUDE_PATH `. According to Vassil. This is due to some bug/feature in clang when it resolves include paths with symlinks. The problem is avoided if the realpath of the directory containing the header is prepended explicitely to `ROOT_INCLUDE_PATH`. ```; $ export ROOT_INCLUDE_PATH=/cvmfs/sft.cern.ch/lcg/releases/jsonmcpp/3.9.1-72770/x86_64-centos7-gcc9-dbg/include:$ROOT_INCLUDE_PATH; $ python -c 'import GaudiPython'; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7950:2169,load,loaded,2169,https://root.cern,https://github.com/root-project/root/issues/7950,1,['load'],['loaded']
Performance,"ght help us fixing this issue.; 2187: ===========================================================; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=0x1 <error: Cannot access memory at address 0x1>, alternate=0x7f2a491937c0 <error: Cannot access memory at address 0x7f2a491937c0>) at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:792; 2187: #8 0x00007f2a60081efb in _GLOBAL__sub_I_libInitOrder.cxx () at roottest/root/meta/tclass/libInitOrder.cxx:123; 2187: #9 0x00007f2a631f305a in call_init (l=<optimized out>, argc=argc; 2187: entry=37, argv=argv; 2187: entry=0x7ffc0cd45a68, env=env; 2187: entry=0x61600030f680) at dl-init.c:72; 2187: #10 0x00007f2a631f315a in call_init (env=0x61600030f680, argv=0x7ffc0cd45a68, argc=37, l=<optimized out>) at dl-init.c:30; 2187: #11 _dl_init (main_map=0x61a00008b280, argc=37, argv=0x7ffc0cd45a68, env=0x61600030f680) at dl-init.c:119; 2187: #12 0x00007f2a617509bc in _dl_catch_exception () from /lib64/libc.so.6; 2187: #13 0x00007f2a631fa88e in dl_open_worker (a=0x7ffc0cd41a20) at dl-open.c:794; 2187: #14 dl_open_worker (a=0x7ffc0cd41a20) at dl-open.c:757; 2187: #15 0x00007f2a61750964 in _dl_catch_exception () from /lib64/libc.so.6; 2187: #16 0x00007f2a631faa71 in _dl_open (file=0x6070000a18e0 ""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", mode=-2147483391, caller_dlopen=0x2ce7f6 <__interceptor_dlopen.part.267+102>, nsid=<optimized out>, argc=37, argv=<optimized out>, env=0x61600030f680) at dl-open.c:876; 2187: #17 0x00007f2a61bc5f8a in dlopen_doit () from /lib64/libdl.so.2; 2187: #18 0x00007f2a61750964 in _dl_catch_exception () from /lib64/libc.so.6; 2187: #19 0x00007f2a61750a23 in _dl_catch_error () fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:8680,optimiz,optimized,8680,https://root.cern,https://github.com/root-project/root/issues/11867,1,['optimiz'],['optimized']
Performance,"gin handler for TVirtualStreamerInfo was found but failed to create the factory object!; ```; The reason is that during TClingCallFunc::make_wrapper, the call to cling::Interpreter::compileFunction ends with:; ```; if (const llvm::GlobalValue* GV; = getLastTransaction()->getModule()->getNamedValue(name)); ```; However in the 'broken' case, the getLastTransaction does not return the transaction for the code being compiled by DeclareCFunction but instead the one used/created at:. ```; #0 cling::IncrementalParser::endTransaction (this=0x4a2980, T=0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345; #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111; #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106; #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466; #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630; #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,; dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:2293,optimiz,optimized,2293,https://root.cern,https://github.com/root-project/root/pull/2776,2,['optimiz'],['optimized']
Performance,"gle AMD EPYC 7702P 64-Core Processor), the test as is use close to 94% of all cpus and only a little system time:; ```; User time (seconds): 7250.76; System time (seconds): 3.58; Percent of CPU this job got: 12019%; ```; However tweaking to 390000 files of a 1000 entries, we get:; ```; User time (seconds): 450.77; System time (seconds): 438.39; Percent of CPU this job got: 7039%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.63; ```. Some are straight-forward to avoid:. ```; // Avoid lock internal to linux date/time:; diff --git a/io/io/src/TKey.cxx b/io/io/src/TKey.cxx; index e604af2980..f349bd8710 100644; --- a/io/io/src/TKey.cxx; +++ b/io/io/src/TKey.cxx; @@ -99,7 +99,7 @@ TKey::TKey() : TNamed(), fDatime((UInt_t)0); ////////////////////////////////////////////////////////////////////////////////; /// TKey default constructor.; ; -TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0); +TKey::TKey(TDirectory* motherDir) : TNamed(), fDatime((UInt_t)0, (UInt_t)0); {; Build(motherDir, """", 0);; ; ```; Some require some thoughts:; ```; Try to avoid bottlenecking on recording TContext with gROOT when reading objects out files.; diff --git a/tree/dataframe/src/RLoopManager.cxx b/tree/dataframe/src/RLoopManager.cxx; index 4112e7aeb8..8d92534015 100644; --- a/tree/dataframe/src/RLoopManager.cxx; +++ b/tree/dataframe/src/RLoopManager.cxx; @@ -495,6 +495,7 @@ void RLoopManager::RunTreeProcessorMT(); const auto entryRange = r.GetEntriesRange(); // we trust TTreeProcessorMT to call SetEntriesRange; const auto nEntries = entryRange.second - entryRange.first;; auto count = entryCount.fetch_add(nEntries);; + // TDirectory::TContext ctxt(nullptr);; try {; // recursive call to check filters and conditionally execute actions; while (r.Next()) {; diff --git a/tree/treeplayer/src/TTreeProcessorMT.cxx b/tree/treeplayer/src/TTreeProcessorMT.cxx; index ad0100e377..f29a67b65b 100644; --- a/tree/treeplayer/src/TTreeProcessorMT.cxx; +++ b/tree/treeplayer/src/TTreeProcessorMT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12761:1829,bottleneck,bottlenecking,1829,https://root.cern,https://github.com/root-project/root/issues/12761,1,['bottleneck'],['bottlenecking']
Performance,"grad migrad0(*FULL, temp_fit_parameters); ; FunctionMinimum min_migrad0 = migrad0(); // OK; MnSimplex simplex0(*FULL, temp_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=0x7ffcf9555c48, fcn=..., st=..., strategy=..., maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:120; #8 0x00007f045c905c51 in ROOT::Minuit2::MnApplication::operator() (this=0x7ffcf9555b00, maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/MnApplication.cxx:57; #9 0x000000000041068c in main (); ===========================================================; ```. ### Setup; CentOS7/gcc-4.8.5 root 6.22 from EPEL . ### Additional context; Not a personal priority of me, so it is unlikely that I will provode a patch in the next days.; However, I can briefly describe how the FPE occurs.; It occurs on line 48 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:2066,optimiz,optimized,2066,https://root.cern,https://github.com/root-project/root/issues/6775,1,['optimiz'],['optimized']
Performance,grant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm; 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm; 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:7719,Load,Loading,7719,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,grant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm; 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm; 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm; 0.000,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:7585,Load,Loading,7585,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"gs=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196; #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:9910,optimiz,optimized,9910,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,"gui/gui/src/TGClient.cxx:846; #12 0x00007f5b3e7f531d in TGClient::ProcessOneEvent() (this=0x55e768de2290) at ../gui/gui/src/TGClient.cxx:656; #13 TGClient::ProcessOneEvent() (this=0x55e768de2290) at ../gui/gui/src/TGClient.cxx:648; #14 0x00007f5b3e7f536b in TGClient::HandleInput() (this=0x55e768de2290) at ../gui/gui/src/TGClient.cxx:703; #15 0x00007f5b8dcb0ff8 in TUnixSystem::DispatchOneEvent(bool) (this=0x55e75ccfd080, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1067; #16 0x00007f5b8dbd0dca in TSystem::ProcessEvents() (this=0x55e75ccfd080) at ../core/base/src/TSystem.cxx:424; #17 0x00007f5b8130600d in (); #18 0x00007f5b79ae0450 in (); #19 0x00007f5b8de5215f in WrapperCall(Cppyy::TCppMethod_t, size_t, void*, void*, void*) (method=94452242807424, nargs=0, args_=0x7f5b79ae01d7, self=0x55e75ccfd080, result=0x7f5b79ae01d7) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778; #20 0x00007f5b8de527cf in CallT<unsigned char> (args=<optimized out>, nargs=<optimized out>, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816; #21 Cppyy::CallB(long, void*, unsigned long, void*) (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:833; #22 0x00007f5b8decdc0f in GILCallB (ctxt=0x7f5b79ae0430, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:69; #23 CPyCppyy::(anonymous namespace)::BoolExecutor::Execute(Cppyy::TCppMethod_t, Cppyy::TCppObject_t, CPyCppyy::CallContext*) (this=<optimized out>, method=<optimized out>, self=<optimized out>, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:148; #24 0x00007f5b8deba4c9 in CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9139:1647,optimiz,optimized,1647,https://root.cern,https://github.com/root-project/root/pull/9139,4,['optimiz'],['optimized']
Performance,h arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeaf.cxx:272; /opt/root_src/tree/tree/src/TLeafObject.cxx:94:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/tree/tree/src/TLeafObject.cxx:94; /opt/root_src/tree/tree/src/TTree.cxx:2084:30: warning: Dereference of null pointer (loaded from variable 'apointer') [clang-analyzer-core.NullDereference]; 1: Assuming 'ptrClass' is non-null in /opt/root_src/tree/tree/src/TTree.cxx:1586; 2: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:1586; 3: Assuming 'addr' is null in /opt/root_src/tree/tree/src/TTree.cxx:1592; 4: Left side of '&&' is false in /opt/root_src/tree/tree/src/TTree.cxx:1592; 5: 'actualClass' is non-null in /opt/root_src/tree/tree/src/TTree.cxx:1605; 6: Left side of '&&' is true in /opt/root_src/tree/tree/src/TTree.cxx:1605; 7: Assuming the condition is false in /opt/root_src/tree/tree/src/TTree.cxx:1605; 8: Left side of '&&' is false in /opt/root_src/tree/tree/src/TTree.cxx:1605; 9: Passing null pointer value via 3rd parameter 'addobj' in /opt/root_src/tree/tree/src/TTree.cxx:1610; 10: Calling 'TTree::Branch' in /opt/root_src/tree/tree/src/TTree.cxx:1610; 11: Assuming 'fgBranchStyle' is not equal to 1 in /opt/root_src/tree/tree/src/TTree.cxx:2004; 12: Taking false branch in /opt/root_src/tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7429:71165,load,loaded,71165,https://root.cern,https://github.com/root-project/root/issues/7429,1,['load'],['loaded']
Performance,"h. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:18450,optimiz,optimized,18450,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,h/physics/src/TRobustEstimator.cxx:1277; 6: 'ntotal' is <= 'kWorkMax' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1281; 7: Taking false branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1281; 8: 'ii' is >= 'ntotal' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1287; 9: Loop condition is false. Execution continues on line 1290 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1287; 10: Loop condition is true. Entering loop body in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1293; 11: Assuming the condition is false in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 12: Taking false branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 13: The value 1073741823 is assigned to 'mid' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1302; 14: Assigned value is garbage or undefined in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1303; /opt/root_src/math/splot/src/TSPlot.cxx:959:23: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:959; /opt/root_src/math/splot/src/TSPlot.cxx:966:13: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:966; /opt/root_src/core/cont/inc/TBits.h; /opt/root_src/math/fumili/src/TFumili.cxx; /opt/root_src/math/genvector/src/3DConversions.cxx; /opt/root_src/math/genvector/src/AxisAngleXother.cxx; /opt/root_src/math/mathcore/inc/Fit/FitData.h; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h; /opt/root_src/math/mathcore/inc/TMath.h; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx; /opt/root_src/math/mathcore/src/GoFTest.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephes.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephesInv.cxx; /opt/root_src/math/mathcore/src/TKDTree.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:230511,load,loaded,230511,https://root.cern,https://github.com/root-project/root/issues/7458,1,['load'],['loaded']
Performance,h/physics/src/TRobustEstimator.cxx:1281; 7: Taking false branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1281; 8: 'ii' is >= 'ntotal' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1287; 9: Loop condition is false. Execution continues on line 1290 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1287; 10: Loop condition is true. Entering loop body in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1293; 11: Assuming the condition is false in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 12: Taking false branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 13: The value 1073741823 is assigned to 'mid' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1302; 14: Assigned value is garbage or undefined in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1303; /opt/root_src/math/splot/src/TSPlot.cxx:959:23: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:959; /opt/root_src/math/splot/src/TSPlot.cxx:966:13: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:966; /opt/root_src/core/cont/inc/TBits.h; /opt/root_src/math/fumili/src/TFumili.cxx; /opt/root_src/math/genvector/src/3DConversions.cxx; /opt/root_src/math/genvector/src/AxisAngleXother.cxx; /opt/root_src/math/mathcore/inc/Fit/FitData.h; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h; /opt/root_src/math/mathcore/inc/TMath.h; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx; /opt/root_src/math/mathcore/src/GoFTest.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephes.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephesInv.cxx; /opt/root_src/math/mathcore/src/TKDTree.cxx; /opt/root_src/math/mathcore/src/TKDTreeBinning.cxx; /opt/root_src/math/mathcore/src/T,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:230591,load,loaded,230591,https://root.cern,https://github.com/root-project/root/issues/7458,1,['load'],['loaded']
Performance,"h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:17672,optimiz,optimized,17672,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:5093,optimiz,optimized,5093,https://root.cern,https://github.com/root-project/root/issues/8931,2,['optimiz'],['optimized']
Performance,"h=/opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/cuda-10.1.243-7i5cvq4bobfu6g23zltag3fpcwdlc3ye --cuda-gpu-arch=sm_35. ****************** CLING ******************; * Type C++ code and press enter to run it *; * Type .q to exit *; *******************************************; [cling]$ __global__ void g(){}; [cling]$ .q; Segmentation fault (core dumped); ```. The stack trace in gdb is:. ```; ***************** CLING *****************; Type C++ code and press enter to run it; Type .q to exit; *******************************************; [cling]$ _global_ void g(){}; [cling]$ .q. Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7ffb1a0 in ?? (); (gdb) bt; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x0000000000c5aa6e in _start (); (gdb) where; #0 0x00007ffff7ffb1a0 in ?? (); #1 0x00007ffff65e6a27 in __run_exit_handlers (status=0, listp=0x7ffff6788718 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true,; run_dtors=run_dtors@entry=true) at exit.c:108; #2 0x00007ffff65e6be0 in __GI_exit (status=<optimized out>) at exit.c:139; #3 0x00007ffff65c40ba in __libc_start_main (main=0x1058ad0 <main(int, char**)>, argc=5, argv=0x7fffffff4448, init=<optimized out>, fini=<optimized out>,; rtld_fini=<optimized out>, stack_end=0x7fffffff4438) at ../csu/libc-start.c:342; #4 0x00; ```; The `CodeUnloading/AtExit.C` cling test also fails with the commit. ### Setup. 1. ROOT master beginning from commit 2c4a756d38d9b5f0348f645a116b3014159f03d6; 2. Operating system: Ubuntu 20.04.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7433:1316,optimiz,optimized,1316,https://root.cern,https://github.com/root-project/root/issues/7433,7,['optimiz'],['optimized']
Performance,"hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f052580ec3a in __GI___wait4 (pid=34047, stat_loc=stat_loc; entry=0x7ffc6b5a07e8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f052580ebfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffc6b5a07e8, options=options; entry=0) at waitpid.c:38; #2 0x00007f052577df67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f0525fc2afe in TUnixSystem::StackTrace() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #4 0x00007f0525fbf985 in TUnixSystem::DispatchSignals(ESignals) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #5 <signal handler called>; #6 0x00007f05215c1076 in TClingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f052152ab45 in TCling::SetClassInfo(TClass*, bool) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #8 0x00007f0525f60963 in TClass::SetUnloaded() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #9 0x00007f0525f07b38 in ROOT::RemoveClass(char const*) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #10 0x00007f0525f7c1cf in ROOT::TGenericClassInfo::~TGenericClassInfo() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:8033,optimiz,optimized,8033,https://root.cern,https://github.com/root-project/root/issues/12358,1,['optimiz'],['optimized']
Performance,"hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f45ad4d0c3a in __GI___wait4 (pid=33425, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f45ad4d0bfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0) at waitpid.c:38; #2 0x00007f45ad43ff67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f45adc84afe in TUnixSystem::StackTrace() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #4 0x00007f45adc81985 in TUnixSystem::DispatchSignals(ESignals) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #5 <signal handler called>; #6 0x00007f45a9283076 in TClingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f45a91ecb45 in TCling::SetClassInfo(TClass*, bool) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #8 0x00007f45adc22963 in TClass::SetUnloaded() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #9 0x00007f45adbc9b38 in ROOT::RemoveClass(char const*) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #10 0x00007f45adc3e1cf in ROOT::TGenericClassInfo::~TGenericClassInfo() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:2352,optimiz,optimized,2352,https://root.cern,https://github.com/root-project/root/issues/12358,1,['optimiz'],['optimized']
Performance,"hain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158; #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185; #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this; entry=0x162d700, durationInMs=durationInMs; entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364; #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717; #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73; #10 std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:6494,optimiz,optimized,6494,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,"heck duplicate issues. - [X] Checked for duplicates. ### Description. As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/190460/testReport/projectroot.roottest.root/hist/roottest_root_hist_h2root, `h2root` fails from time to time on Linux and always if the *march=native* option is active. ### Reproducer. ```; -- TEST COMMAND -- ; cd /home/sftnight/build/workspace/root-pullrequests-build/build/roottest/root/hist; /usr/bin/timeout -s USR2 270s h2root mb4i1.hbook; -- BEGIN TEST OUTPUT --. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f55ea9f53ea in __GI___wait4 (pid=1686062, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #5 <signal handler called>; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14155:988,optimiz,optimized,988,https://root.cern,https://github.com/root-project/root/issues/14155,1,['optimiz'],['optimized']
Performance,"hi -. We're seeing a problem with the pythonization of std::vector::operator==; with root 6.28.00 (at least with the version being built in dev4). This was originally reported in the ATLAS context as ATEAM-885,; but i have reduced it here to a standalone reproducer in the attached; archive. The included setup script should be appriate for lxplus7.; Run:. $ . ./setup; $ ./build.sh; $ python test.py. and it gives the errors:. IncrementalExecutor::executeFunction: symbol '_ZNSt7__equalILb0EE5equalIPK4TestS4_EEbT_S5_T0_' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of bool std::__equal<false>::equal<Test const*, Test const*>(Test const*, Test const*, Test const*); Maybe you need to load the corresponding shared library?. thanks,; sss. [pythonization-bug2.zip](https://github.com/root-project/root/files/10867231/pythonization-bug2.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12406:726,load,load,726,https://root.cern,https://github.com/root-project/root/issues/12406,1,['load'],['load']
Performance,"hine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage.; N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:4165,perform,performance,4165,https://root.cern,https://github.com/root-project/root/pull/14039,1,['perform'],['performance']
Performance,"his=0x165848f30, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #19 0x00007fff7699fe04 in cling::Interpreter::compileFunction (this=0x165715770, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #20 0x00007fff768fea38 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #21 0x00007fff76908a68 in TClingCallFunc::make_wrapper (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1006; #22 0x00007fff76908e78 in TClingCallFunc::IFacePtr (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:2004; #23 0x00007fff7682c3bc in TCling::CallFunc_IFacePtr (this=<optimized out>, func=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:7888; #24 0x00007fff7ca8f81c in GetCallFunc (method=<optimized out>) at /usr/include/c++/8/bits/locale_facets.h:877; #25 WrapperCall (method=6088041216, nargs=2, args_=0x7fffc4480880, self=0x16b1482f0, result=0x16b0b6990) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (method=6088041216, self=0x16b1482f0, nargs=2, args=0x7fffc4480880, result_type=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:31225,optimiz,optimized,31225,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"his=<optimized out>, b=..., obj=0x109986cc0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1368; #27 0x00007fffa93850a8 in TGenCollectionStreamer::ReadBufferDefault (this=0x10a861070, b=..., obj=0x109986cc0, onFileClass=0x0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1302; #28 0x00007fffa9384f00 in TGenCollectionStreamer::ReadBuffer (this=<optimized out>, b=..., obj=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1232; #29 0x00007fffa933ff7c in TCollectionClassStreamer::Stream (onfileClass=0x10a860aa0, obj=0x109986cc0, b=..., this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:177; #30 TCollectionClassStreamer::Stream (this=<optimized out>, b=..., obj=0x109986cc0, onfileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:172; #31 0x00007fffa8f04014 in TClass::StreamerExternal (pThis=<optimized out>, object=0x109986cc0, b=..., onfile_class=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6783; #32 0x00007fffa92db554 in TClass::Streamer (onfile_class=0x10a860aa0, b=..., obj=<optimized out>, this=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #33 TBufferFile::ReadFastArray (streamer=0x0, onFileClass=0x10a860aa0, n=1, cl=0x10a860aa0, start=<optimized out>, this=0x7ffff83ea100) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1609; #34 TBufferFile::ReadFastArray (this=0x7ffff83ea100, start=<optimized out>, cl=0x10a860aa0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1596; #35 0x00007fffa94a224c in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x10a395fa0, addr=<optimized out>, buf=...) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1362; #36 TStreamerInfoActi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:7922,optimiz,optimized,7922,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/li,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:6736,Load,Loading,6736,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm; 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm; 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm; 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:8830,Load,Loading,8830,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm; 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm; 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm; 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:4676,Load,Loading,4676,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"hon/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:6380,optimiz,optimized,6380,https://root.cern,https://github.com/root-project/root/issues/15117,3,['optimiz'],['optimized']
Performance,"hon; from dask.distributed import Client, LocalCluster. def fill_histo(n):; import ROOT; df = ROOT.RDataFrame(10); h1 = df.Define(""x"", ""42"").Histo1D(""x"").GetValue(); h2 = df.Define(""y"", ""8"").Histo1D(""y"").GetValue(); return h1, h2. def main():; cluster = LocalCluster(); client = Client(cluster); future = client.map(fill_histo, (1,2,3,4)); print(client.gather(future)). if __name__ == '__main__':; main(); ```. A weird detail is that the reproducer runs fine if just `h1` is returned. I got the following stacktrace:. ```; #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459; #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656; #10 0x00007fcd3c12e32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494; #11 0x00007fcd3c12e384 in CPyCppyy::BindCppObjectNoCast (address=0x7fcd1d8d5f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass; entry=3, flags=flags; entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809; #12 0x00007fcd3c312873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7fcd3c32071a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39; #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59; #14 0x00007fcd3c31249e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150; #15 0x00007fcd42c0af8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0; ```. Python: 3.8.6; ROOT: master@v6-23-01-1495-gff0c693e49; Output of `pip freeze`:; ```; click==7.1.2; cloudpickle==1.6.0; dask==2.30.0; distributed==2.30.1; HeapDict==1.0.1; msgpack==1.0.0; psutil==5.7.3; PyYAML==5.3.1; sortedcontainers==2.2.2; tblib==1.7.0; toolz==0.11.1; tornado==6.1; zict==2.0.0; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6765:1515,optimiz,optimized,1515,https://root.cern,https://github.com/root-project/root/issues/6765,1,['optimiz'],['optimized']
Performance,"ht/localbuilds/nightlies/master--dev3LCG/build/build/Athena/x86_64-centos7-gcc11-opt/lib/libAthDSoCallBacks.so D[0x13d4]]; 0x7f103405a05a dlopen@@GLIBC_2.2.5 ??:0 + 0x4a [/lib64/libdl.so.2 D[0x105a]]; 0x7f102c046c45 cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) ??:0 + 0x7f102c046c45 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xc69c45]]; 0x7f102bf3eff1 cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) ??:0 + 0x7f102bf3eff1 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xb61ff1]]; 0x7f102be771c6 TCling::Load(char const*, bool) ??:0 + 0x1a6 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xa9a1c6]]; 0x7f1031ec07c9 TSystem::Load(char const*, char const*, bool) ??:0 + 0x799 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCore.so D[0x2117c9]]; 0x7f1031e4ec71 TROOT::LoadClass(char const*, char const*, bool) ??:0 + 0x71 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCore.so D[0x19fc71]]; 0x7f102be752c3 TCling::ShallowAutoLoadImpl(char const*) ??:0 + 0x2e3 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xa982c3]]; 0x7f102be8c0c4 TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) ??:0 + 0x164 [/cvmf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11933:8984,Load,Load,8984,https://root.cern,https://github.com/root-project/root/issues/11933,1,['Load'],['Load']
Performance,"htly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111; #5 0x00007ffff758ffea in CPyCppyy::BuildScopeProxyDict (scope=18, ; pyclass=0x1335040); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254; #6 0x00007ffff7591ed3 in CPyCppyy::CreateScopeProxy (name=..., ; parent=0x2f57300); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681; #7 0x00007ffff756a4ca in CPyCppyy::meta_getattro (pyclass=0x2f57300, ; pyname=0x7ffff770f9f0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324; #8 0x00007ffff7d01ef7 in _PyObject_LookupAttr (v=0x2f57300, ; name=<optimized out>, result=result@entry=0x7fffffff87b8); at /build/jenkins/workspace/lcg_release_pipeline/build/externals/Python-3.9.12/src/Python/3.9.12/Objects/object.c:927; ```. I think things are going wrong in CPyCppyy::BuildScopeProxyDict, where we have; around line 247:. ```; if (setupSetItem) {; TemplateProxy* pysi = (TemplateProxy*)PyObject_GetAttrString(pyclass, const_cast<char*>(""__setitem__""));; if (!pysi) {; pysi = TemplateProxy_New(mtCppName, ""__setitem__"", pyclass);; PyObject_SetAttrString(pyclass, const_cast<char*>(""__setitem__""), (PyObject*)pysi);; }; if (isTemplate) pysi->AdoptTemplate(new CPPSetItem(scope, method));; else pysi->AdoptMethod(new CPPSetItem(scope, method));; Py_XDECREF(pysi);; }; ```. The problem is that here we do indeed retrieve an object from the getattr; call, but it is _not_ an instance of TemplateProxy. It is rather an instance; of CPPOverload:. ```; (gdb) p *pysi; $1 = {ob_base = {ob_refcnt = 2, ; ob_type = 0x7ffff75fcfe0 <CPyCppyy::CPPOverload_Type>}, fSelf = 0x0, ; fTempla",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13410:2831,optimiz,optimized,2831,https://root.cern,https://github.com/root-project/root/issues/13410,1,['optimiz'],['optimized']
Performance,http: let better control cache settings from web server,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2752:25,cache,cache,25,https://root.cern,https://github.com/root-project/root/pull/2752,1,['cache'],['cache']
Performance,"https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:; ```py; $: cat sparktest.py ; import pyspark; import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y); ```. ```bash; $: python sparktest.py ; 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable; Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties; Setting default log level to ""WARN"".; To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).; /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>; self._sock = None; ResourceWarning: Enable tracemalloc to get the object allocation traceback; ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8938:1321,load,load,1321,https://root.cern,https://github.com/root-project/root/pull/8938,1,['load'],['load']
Performance,"ialised value(s); ==75628== at 0xCE735BC: llvm::getAllocAlignment(llvm::CallBase const*, llvm::TargetLibraryInfo const*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA0A1EF: llvm::InstCombinerImpl::annotateAnyAllocSite(llvm::CallBase&, llvm::TargetLibraryInfo const*) [clone .part.0] (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA1277B: llvm::InstCombinerImpl::visitCallBase(llvm::CallBase&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xCA15A53: llvm::InstCombinerImpl::visitCallInst(llvm::CallInst&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xC9BEF7E: llvm::InstCombinerImpl::run() (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xC9C2298: combineInstructionsOverFunction(llvm::Function&, llvm::InstructionWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::TargetTransformInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, unsigned int, llvm::LoopInfo*) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0xC9C31AC: llvm::InstCombinePass::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x978A08D: llvm::detail::PassModel<llvm::Function, llvm::InstCombinePass, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.32.02); ==75628== by 0x979857D: llvm::detail::PassModel<llvm::Function, llvm::PassManager<llvm::Function, llvm::AnalysisManagerllvm::Function>, llvm::PreservedAnalyses, llvm::AnalysisManagerllvm::Function>::run(llvm::Function&, llvm::AnalysisManagerllvm::Function&) (in /export/home/jb242989/root_v6.32.02_deb/lib/libCling.so.6.3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16123:6388,Optimiz,OptimizationRemarkEmitter,6388,https://root.cern,https://github.com/root-project/root/issues/16123,1,['Optimiz'],['OptimizationRemarkEmitter']
Performance,ib64/libc.so.6. Thread 4 (Thread 0x7f9330940700 (LWP 8836)):; #0 0x00007f9369773d19 in syscall () from /lib64/libc.so.6; #1 0x00007f9331a0e79e in XrdSys::LinuxSemaphore::Wait (this=0x7ee4870) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysLinuxSemaphore.hh:161; #2 XrdCl::SyncQueue<XrdCl::JobManager::JobHelper>::Get (this=0x7ee4698) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdCl/XrdClSyncQueue.hh:67; #3 XrdCl::JobManager::RunJobs (this=0x7ee4680) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:146; #4 0x00007f9331a0e989 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:33; #5 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #6 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 3 (Thread 0x7f9331141700 (LWP 8835)):; #0 0x00007f9369a57e9d in nanosleep () from /lib64/libpthread.so.0; #1 0x00007f9331b1dded in XrdSysTimer::Wait (mills=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysTimer.cc:239; #2 0x00007f93319b2118 in XrdCl::TaskManager::RunTasks (this=0x7ee9660) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:244; #3 0x00007f93319b2269 in RunRunnerThread (arg=<optimized out>) at /build/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7496:3484,optimiz,optimized,3484,https://root.cern,https://github.com/root-project/root/issues/7496,1,['optimiz'],['optimized']
Performance,ib64/libc.so.6. Thread 5 (Thread 0x7f933013f700 (LWP 8837)):; #0 0x00007f9369773d19 in syscall () from /lib64/libc.so.6; #1 0x00007f9331a0e79e in XrdSys::LinuxSemaphore::Wait (this=0x7ee4870) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysLinuxSemaphore.hh:161; #2 XrdCl::SyncQueue<XrdCl::JobManager::JobHelper>::Get (this=0x7ee4698) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdCl/XrdClSyncQueue.hh:67; #3 XrdCl::JobManager::RunJobs (this=0x7ee4680) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:146; #4 0x00007f9331a0e989 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:33; #5 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #6 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 4 (Thread 0x7f9330940700 (LWP 8836)):; #0 0x00007f9369773d19 in syscall () from /lib64/libc.so.6; #1 0x00007f9331a0e79e in XrdSys::LinuxSemaphore::Wait (this=0x7ee4870) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysLinuxSemaphore.hh:161; #2 XrdCl::SyncQueue<XrdCl::JobManager::JobHelper>::Get (this=0x7ee4698) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdCl/XrdClSyncQueue.hh:67; #3 XrdCl::JobManager::RunJobs (this=0x7ee4680) at /build/cmsbld/au,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7496:2212,optimiz,optimized,2212,https://root.cern,https://github.com/root-project/root/issues/7496,1,['optimiz'],['optimized']
Performance,"ib64/libpython3.13.so.1.0; #47 0x00007f3f14173894 in _PyEval_EvalFrameDefault () from /lib64/libpython3.13.so.1.0; #48 0x00007f3f142797ed in pymain_run_module () from /lib64/libpython3.13.so.1.0; #49 0x00007f3f1427500c in Py_RunMain () from /lib64/libpython3.13.so.1.0; #50 0x00007f3f1422bcbc in Py_BytesMain () from /lib64/libpython3.13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f13f12e87 in wait4 () from /lib64/libc.so.6; #1 0x00007f3f13e664fb in do_system () from /lib64/libc.so.6; #2 0x00007f3f13322cf0 in TUnixSystem::Exec (this=0x5619b6bb82b0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #3 TUnixSystem::StackTrace (this=0x5619b6bb82b0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #4 0x00007f3f13511b7d in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:208; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:13407,optimiz,optimized,13407,https://root.cern,https://github.com/root-project/root/issues/15799,1,['optimiz'],['optimized']
Performance,"ibe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I get a segfault with the following program; ```cpp; #include <ROOT/RHist.hxx>; #include <TRandom.h>. int main(){; ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){; myhisto.Fill(gRandom->Gaus(10,1));; }; }; ```; ```; $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`; $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0) at waitpid.c:38; #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an att",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7971:1023,optimiz,optimized,1023,https://root.cern,https://github.com/root-project/root/issues/7971,1,['optimiz'],['optimized']
Performance,"ibrary (this=0x614000001840, filename=..., lookup=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1469; 2187: #26 0x00007f2a508d8d67 in cling::Interpreter::loadFile (this=0x614000001840, filename=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", allowSharedLib=<optimized out>, T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; 2187: #27 0x00007f2a50bbe9cd in cling::MetaSema::actOnLCommand (this=<optimized out>, file=..., transaction=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; 2187: #28 0x00007f2a50bb2dc8 in cling::MetaParser::isLCommand (this=this; 2187: entry=0x7f2a5e5cf670, actionResult=; 2187: 0x7f2a5e5cf780: cling::MetaSema::AR_Success) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; 2187: #29 0x00007f2a50bb2833 in cling::MetaParser::isCommand (this=<optimized out>, actionResult=<optimized out>, resultValue=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; 2187: #30 0x00007f2a50baaf05 in cling::MetaProcessor::process (this=<optimized out>, input_line=..., compRes=<optimized out>, result=0x33f, disableValuePrinting=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; 2187: #31 0x00007f2a5058c5ff in HandleInterpreterException (metaProcessor=metaProcessor; 2187: entry=0x60700007bb60, input_line=0x7f2a6338f0de "".L /home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", compRes=; 2187: 0x7f2a5e5cef40: cling::Interpreter::kSuccess, result=result; 2187: entry=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:2455; 2187: #32 0x00007f2a50595b52 in TCling::Load (this=<optimized out>, filename=<optimized out>, system=<optimized out>) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3503; 2187: #33 0x00007f2a62daf8c5 in TSystem::Load (this=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:5334,optimiz,optimized,5334,https://root.cern,https://github.com/root-project/root/issues/11867,4,['optimiz'],['optimized']
Performance,"ic.dylib`__sanitizer::Symbolizer::SymbolizePC(unsigned long) + 138 frame #6: 0x0000000110992ece libclang_rt.tsan_osx_dynamic.dylib`__tsan::SymbolizeStack(__sanitizer::StackTrace) + 94; frame #7: 0x000000011099318e libclang_rt.tsan_osx_dynamic.dylib`__tsan::ScopedReportBase::AddStack(__sanitizer::StackTrace, bool) + 46 frame #8: 0x000000011097e64f libclang_rt.tsan_osx_dynamic.dylib`__tsan::SignalUnsafeCall(__tsan::ThreadState*, unsigned long) + 287 frame #9: 0x000000011097e76a libclang_rt.tsan_osx_dynamic.dylib`__tsan::user_free(__tsan::ThreadState*, unsigned long, void*, bool) + 234; frame #10: 0x000000011097c441 libclang_rt.tsan_osx_dynamic.dylib`wrap_free + 113 frame #11: 0x0000000134b3a45b libCling.6.22.06.so`clang::ASTReader::makeModuleVisible(clang::Module*, clang::Module::NameVisibilityKind, clang::SourceLocation) + 939; frame #12: 0x00000001348dc772 libCling.6.22.06.so`clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) + 7106 frame #13: 0x0000000134ddcf80 libCling.6.22.06.so`clang::Sema::ActOnModuleImport(clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang:; :IdentifierInfo*, clang::SourceLocation> >) + 80 frame #14: 0x00000001345c73c9 libCling.6.22.06.so`cling::Interpreter::loadModule(clang::Module*, bool) + 345 * frame #15: 0x00000001344edc9a libCling.6.22.06.so`LoadModule(ModuleName=""Smatrix"", interp=0x00007b4c0000de40) at TCling.cxx:1066:18 [opt]; frame #16: 0x00000001344e29cf libCling.6.22.06.so`TCling::TCling(char const*, char const*, char const* const*) at TCling.cxx:1075:7 [opt]; frame #17: 0x00000001344e297e libCling.6.22.06.so`TCling::TCling(char const*, char const*, char const* const*) at TCling.cxx:1187 [opt]; frame #18: 0x00000001344e232b libCling.6.22.06.so`TCling::TCling(this=0x00007b58000ab600, name=<unavailable>, title=<unavailable>, argv=<unavailable>) at TCling.cx; x:1511 [opt]; frame ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7418:1894,load,loadModule,1894,https://root.cern,https://github.com/root-project/root/issues/7418,1,['load'],['loadModule']
Performance,"ickle`` serialization, ; and it is a moment when `dill`/`pathos` enters the game, significantly extending the functionality; . ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Similar behaviour for `python2` and `python3` is expected ; b ut it works for `python2` and fails for `python3`; ; ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. to reproduce see this very simple gist ; https://gist.github.com/VanyaBelyaev/278074969f2f940f180885be35f04db9 . It has been tested with different LCG releases from LCG_94 to LCG_97a; and it always works for `pytjon2` and fails for `python3`. for `python3` one gets an error; ```; Traceback (most recent call last):; File ""./test_dill.py"", line 13, in <module>; hh = dill.loads ( dill.dumps ( h ) ); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 294, in dumps; dump(obj, file, protocol, byref, fmode, recurse)#, strictio); File ""/cvmfs/sft.cern.ch/lcg/views/LCG_97python3/x86_64-centos7-gcc9-opt/lib/python3.7/site-packages/dill/_dill.py"", line 287, in dump; pik.dump(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 437, in dump; self.save(obj); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 549, in save; self.save_reduce(obj=obj, *rv); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 637, in save_reduce; save(func); File ""/cvmfs/sft.cern.ch/lcg/releases/LCG_97python3/Python/3.7.6/x86_64-centos7-gcc9-opt/lib/python3.7/pickle.py"", line 504, in save; f(self, obj) # Call unboun",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370:1439,load,loads,1439,https://root.cern,https://github.com/root-project/root/issues/6370,1,['load'],['loads']
Performance,"ict.cxx, …/…/lib/libforward_listDict.rootmap; [ 79%] Generating G__vectorDict.cxx, …/…/lib/libvectorDict.rootmap; In file included from input_line_7:21:; /srv/ussapc/home/ussapc/sw/root_build/include/ROOT/TReentrantRWLock.hxx:26:10: fatal error: ‘tbb/enumerable_thread_specific.h’ file not found; #include “tbb/enumerable_thread_specific.h”; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error: /srv/ussapc/home/ussapc/sw/root_build/core/rootcling_stage1/src/rootcling_stage1: compilation failure (/srv/ussapc/home/ussapc/sw/root_build/lib/libThreaddb2bde6cdd_dictUmbrella.h); gmake[2]: *** [core/thread/CMakeFiles/G__Thread.dir/build.make:109: core/thread/G__Thread.cxx] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:27339: core/thread/CMakeFiles/G__Thread.dir/all] Error 2; gmake[1]: *** Waiting for unfinished jobs…. I found out that tbb is required by imt, so again; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8; …; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCSampler.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/ToyMCStudy.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UniformProposal.cxx.o; [100%] Building CXX object roofit/roostats/CMakeFiles/RooStats.dir/src/UpperLimitMCSModule.cxx.o; [100%] Linking CXX shared library …/…/lib/libRooStats.so; [100%] Built target RooStats; (stucks). $ cmake --build . – install; [ 0%] Built target OPENUI5; [ 0%] Performing download step (download, verify and extract) for ‘XROOTD’. unbeliveable…; $ rm -rf *; $ cmake -Dclad=OFF -Dvdt=OFF -Dimt=OFF -Dxrootd=OFF -DCMAKE_INSTALL_PREFIX=…/root_install …/root-6.24.00; $ cmake --build . – install -j 8. runs.; Please fix at next release.; I would recommend to implement a “localonly” option in case you don’t have internet access from the installation PC. Georg. _ROOT Version: 6.24.00; _Platform: RetHat 8.3; _Compiler:gcc 8.3.1-5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292:2654,Perform,Performing,2654,https://root.cern,https://github.com/root-project/root/issues/8292,1,['Perform'],['Performing']
Performance,"id> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292; #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564; #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0; #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700; #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=; 0x7ff42a1884f0: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:10808,optimiz,optimized,10808,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,"iers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsoft/STL, or wait for VS 2022 17.4 Preview 1 to ship (we can't provide an ETA yet, but it'll be some time). ### Setup; 1. ROOT version: `master`; 2. Operating system: Windows 11; 3. How you obtained ROOT: Built it ourselves (or tried to). ### Additional context; Su",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10875:1836,load,loading,1836,https://root.cern,https://github.com/root-project/root/issues/10875,1,['load'],['loading']
Performance,"igUnix.cpp:36; #9 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=..., this=0x7fffff156ce0) at /usr/include/c++/8/new:169; #11 llvm::orc::ExecutionSession::lookup (this=0x11efcd6f0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; #12 0x00007fffa4004d00 in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /usr/include/c++/8/bits/atomic_base.h:295; #13 0x00007fffa2a59050 in llvm::orc::LLJIT::lookupLinkerMangled (Name=..., JD=..., this=0x11efcd4b0) at /usr/include/c++/8/ppc64le-redhat-linux/bits/gthr-default.h:778; #14 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x11efcd4b0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #15 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x11efcd4b0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #16 cling::IncrementalJIT::getSymbolAddress (this=0x11ef800c0, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #17 0x00007fffa2a50208 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:14830,optimiz,optimized,14830,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"ignals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::ProcessWork (this=this; entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205; #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373; #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364; #39 fair::mq::DeviceRunner::Run (this=this; entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182; #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 std::__find_if<__gnu_cxx::__normal_iterato",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:35420,optimiz,optimized,35420,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,"ild/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysTimer.cc:239; #2 0x00007f93319b2118 in XrdCl::TaskManager::RunTasks (this=0x7ee9660) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:244; #3 0x00007f93319b2269 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:37; #4 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #5 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7f9331942700 (LWP 8834)):; #0 0x00007f9369779fd3 in epoll_wait () from /lib64/libc.so.6; #1 0x00007f9331b22c17 in XrdSys::IOEvents::PollE::Begin (this=0x7efc120, syncsem=<optimized out>, retcode=<optimized out>, eTxt=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysIOEventsPollE.icc:213; #2 0x00007f9331b1f4f5 in XrdSys::IOEvents::BootStrap::Start (parg=0x7ffe2f5220d0) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysIOEvents.cc:131; #3 0x00007f9331b1d5e8 in XrdSysThread_Xeq (myargs=0x7edce20) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysPthread.cc:86; #4 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #5 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7f93693e3980 (LWP 5985)):; #0 0x00007f9369740549 in waitpid () from /lib64/libc.so.6; #1 0x00007f93696bdfb2 in do_s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7496:5035,optimiz,optimized,5035,https://root.cern,https://github.com/root-project/root/issues/7496,3,['optimiz'],['optimized']
Performance,"ile for conda](https://drive.google.com/file/d/1vi96YXfesiLvO9lvm7fPix8CY3s4JDlS/view?usp=sharing) (made via `conda list --explicit > pkgs.txt`, so this is OS-specific). **Text version of code:**; ```; import ROOT as rt; # ipywidgets for nice visualizations, as per tutorial setup; !jupyter nbextension enable --py widgetsnbextension; # now let's enable JsMVA; %jsmva on. outputFile = rt.TFile( ""TMVA.root"", 'RECREATE' ); rt.TMVA.Tools.Instance(); factory = rt.TMVA.Factory(""TMVAClassification"", TargetFile=outputFile,; V=False, Color=True, DrawProgressBar=True, Transformations=[""I"", ""D"", ""P"", ""G"", ""D""],; AnalysisType=""Classification""). dataset = ""tmva_class_example"" #the dataset name; loader = rt.TMVA.DataLoader(dataset); loader.AddVariable('var0','var0','D'); loader.AddVariable('var1','var1','D'). # now get the input file; input = 'input_00.root'; input = rt.TFile.Open(input). sig = input.Get('ts'); bck = input.Get('tb'). sig_weight = 1.; bck_weight = 1.; loader.AddSignalTree(sig,sig_weight) # I crash here; #loader.AddBackgroundTree(bck,bck_weight); ```; **The error:**; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /opt/conda/envs/hw/lib/python3.7/site-packages/JupyROOT/helpers/utils.py in post_execute(self); 347 else:; 348 for t in transformers:; --> 349 (out, err, otype) = t(out, err); 350 if otype == 'html':; 351 IPython.display.display(HTML(out)). /opt/conda/envs/hw/lib/python3.7/site-packages/JsMVA/OutputTransformer.py in transform(self, output, error); 330 self.addClassForOutputFlag(Header.group(5)); 331 self.__currentHeaderName = Header.group(2); --> 332 self.__transformOneGroup(Header.group(5)); 333 elif EmptyHeader:; 334 self.__currentType = EmptyHeader.group(1). /opt/conda/envs/hw/lib/python3.7/site-packages/JsMVA/OutputTransformer.py in __transformOneGroup(self, firstLine); 226 if j != 0:; 227 processed_lines += 1; --> 228 self.iterLines.next(); 229 tmp_str += ""<tr>""; 230 if",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6657:2325,load,loader,2325,https://root.cern,https://github.com/root-project/root/issues/6657,1,['load'],['loader']
Performance,"ile of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at ../core/base/src/TObject.cxx:925; #8 0x00007fea7ef90e56 in TFileMerger::RecursiveRemove (this=0x7ffcad78f2b0, obj=0x559367a40820) at ../io/io/src/TFileMerger.cxx:1081; #9 0x00007fea7e9ad0bf in THashList::RecursiveRemove (this=0x5593666f1840, obj=0x559367a40820) at ../core/cont/src/THashList.cxx:354; #10 0x00007fea7e8d4e14 in TROOT::RecursiveRemove (this=0x7fea7ec46740 <ROOT::Internal::GetROOT1()::alloc>, obj=0x559367a40820) at ../core/base/src/TROOT.cxx:2455; #11 0x00007fea80417f82 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at ../core/base/inc/TROOT.h:398; #12 0x00007fea7e927b18 in TNamed::~TNamed (this=0x559367a40820, __in_chrg=<optimized out>) at ../core/base/src/TNamed.cxx:45; #13 0x00007fea7e9081d5 in TDirectory::~TDirectory (this=0x559367a40820, __in_chrg=<optimized out>) at ../core/base/src/TDirectory.cxx:117; #14 0x00007fea7ef7c856 in TDirectoryFile::~TDirectoryFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TDirectoryFile.cxx:202; #15 0x00007fea7ef9673f in TFile::~TFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TFile.cxx:566; #16 0x00007fea7ef96776 in TFile::~TFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TFile.cxx:566; #17 0x00007fea7e9288d9 in TObject::Delete (this=0x559367a40820) at ../core/base/src/TObject.cxx:178; #18 0x00007fea802bbf82 in TTree::ChangeFile (this=0x559368ca6c20, file=0x559367a40820) at ../tree/tree/src/TTree.cxx:2813; #19 0x00007fea802bf66e in TTree::CopyEntries (this=0x559368ca6c20, tree=0x559368ca7a30, nentries=53446198, option=0x7ffcad78e7a1 "" fast"", needCopyAddresses=true) at ../tree/tree/src/TTree.cxx:3567; #20 0x00007fea802c825a in TTree::Merge (this=0x559368ca6c20, li=0x7ffcad78e560, info=0x7ffcad78e780) at ../tree/tree/src/TTree.cxx:6940; #21 0x00007fea8020066b in ROOT::merge_TTree (obj=0x559368ca6c20, coll=0x7ffcad78e560, info=0x7ffcad78e780",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10102:4189,optimiz,optimized,4189,https://root.cern,https://github.com/root-project/root/issues/10102,1,['optimiz'],['optimized']
Performance,"ile.cxx:2458; #25 0x00007fffa9389c44 in TGenCollectionStreamer::ReadObjects (this=0x10a861070, nElements=<optimized out>, b=..., onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:395; #26 0x00007fffa938a6f8 in TGenCollectionStreamer::ReadBufferGeneric (this=<optimized out>, b=..., obj=0x109986cc0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1368; #27 0x00007fffa93850a8 in TGenCollectionStreamer::ReadBufferDefault (this=0x10a861070, b=..., obj=0x109986cc0, onFileClass=0x0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1302; #28 0x00007fffa9384f00 in TGenCollectionStreamer::ReadBuffer (this=<optimized out>, b=..., obj=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1232; #29 0x00007fffa933ff7c in TCollectionClassStreamer::Stream (onfileClass=0x10a860aa0, obj=0x109986cc0, b=..., this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:177; #30 TCollectionClassStreamer::Stream (this=<optimized out>, b=..., obj=0x109986cc0, onfileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:172; #31 0x00007fffa8f04014 in TClass::StreamerExternal (pThis=<optimized out>, object=0x109986cc0, b=..., onfile_class=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6783; #32 0x00007fffa92db554 in TClass::Streamer (onfile_class=0x10a860aa0, b=..., obj=<optimized out>, this=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #33 TBufferFile::ReadFastArray (streamer=0x0, onFileClass=0x10a860aa0, n=1, cl=0x10a860aa0, start=<optimized out>, this=0x7ffff83ea100) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1609; #34 TBufferFile::ReadFastArray (this=0x7ffff83ea100, start=<optimized out>, cl=0x10a860aa0, n=<optimized out>, streamer=<optimized out>, onFileClass",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:7580,optimiz,optimized,7580,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"ile.cxx:3981; #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379; #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430; #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>); at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253; #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024); at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960; --Type <RET> for more, q to quit, c to continue without paging--; #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0); at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839; #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249; #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262; #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20); at eventhandling/hades.cc:956; #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512; #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547; (gdb); ```. ### To Reproduce; Custom code requires whole framework, hard to regenerate. ### Setup; 1. root@v5-34-00-patches (sorry that I still need to use root-5); 2. Operating system; ```; $ lsb_release -a; LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9564:6157,optimiz,optimized,6157,https://root.cern,https://github.com/root-project/root/issues/9564,1,['optimiz'],['optimized']
Performance,iled to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Fail,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5072,load,load,5072,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,iled to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUtil; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ROOTTreeViewer; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:2239,load,load,2239,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,iled to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to loa,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3761,load,load,3761,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,iled to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Fail,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3486,load,load,3486,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,iled to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Faile,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3452,load,load,3452,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,iled to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module F,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3642,load,load,3642,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,iled to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Fai,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5164,load,load,5164,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"iler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash.; This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc; entry=0x7fff17431338, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff17431338, options=options; entry=0) at waitpid.c:38; #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so; #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in it",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:1561,optimiz,optimized,1561,https://root.cern,https://github.com/root-project/root/issues/14037,1,['optimiz'],['optimized']
Performance,ime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Fai,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4567,load,load,4567,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,"imeUniverse.h:27:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error:; could not build module 'std'; #include <string>; ~~~~~~~~^; /home/luowt/Apps/root/root_build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error:; could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:510:; /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /home/luowt/Apps/root/root_build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; /home/luowt/Apps/root/root_build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/luowt/Apps/root/root_build/include/Rtypes.h:197:; In file included from <module-includes>:3:; /home/luowt/Apps/root/root_build/include/TClassEdit.h:29:10: fatal error: could not build module 'std'; #include <cxxabi.h>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:482: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:31685: core/CMakeFiles/G__Core.dir/all] Error 2. ### Reproducer. Build from source. ### ROOT version. root-master on wsl2, Ubuntu22.04. ### Installation method. Build from source. ### Operating system. Windows wsl2 Ubuntu22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14062:4416,load,loading,4416,https://root.cern,https://github.com/root-project/root/issues/14062,1,['load'],['loading']
Performance,in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kDouble_t:' at line 181 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182:35: warning: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:61297,load,loaded,61297,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat16_t:' at line 180 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:181:35: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:59603,load,loaded,59603,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUInt_t:' at line 184 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185:35: warning: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:66385,load,loaded,66385,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,"in Defines and Filters.; When dealing with very large computation graphs with many Define/Filter; transformations defined with jitted strings, the time for matching; column names to strings was non negligible. The previous mechanism to discover the columns present in the strings; to be jitted was based on regular expressions. The new approach is based; on a lexer, lexertk. The idea is to extract identifiers from; the string and then compare them with the column names available; in the DF.; This pr is an extreme version of this performance improvement: https://github.com/root-project/root/pull/3320.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3324:533,perform,performance,533,https://root.cern,https://github.com/root-project/root/pull/3324,1,['perform'],['performance']
Performance,"in TCling::CallFunc_IFacePtr (this=<optimized out>, func=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:7888; #24 0x00007fff7ca8f81c in GetCallFunc (method=<optimized out>) at /usr/include/c++/8/bits/locale_facets.h:877; #25 WrapperCall (method=6088041216, nargs=2, args_=0x7fffc4480880, self=0x16b1482f0, result=0x16b0b6990) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (method=6088041216, self=0x16b1482f0, nargs=2, args=0x7fffc4480880, result_type=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:594; #30 0x00007fff7cb4f480 in CPyCppyy::CPPMethod::ExecuteFast (ctxt=<optimized out>, offset=<optimized out>, self=<optimized out>, this=0x16ae03d30) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #31 CPyCppyy::CPPMethod::Execute (this=0x16ae03d30, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #32 0x00007fff7cb4fe44 in CPyCppyy::CPPMethod::Call (this=0x16ae03d30, self=; 0x7fff6b79ae90: 0x7fff6b533fc0, args=0x7fff7cc54b08, kwds=<optimized out>, ctxt=0x7fffc4480860) at /builddir/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:31989,optimiz,optimized,31989,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,"in _dlerror_run () from /lib64/libdl.so.2; #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2; #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err; entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this; entry=0x55ed24bf4fb0, libStem=..., permanent=permanent; entry=false, resolved=resolved; entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372; #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940; #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581; #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction; entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=; 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=; 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:135; #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=; 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_bas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:11329,optimiz,optimized,11329,https://root.cern,https://github.com/root-project/root/issues/9595,2,['optimiz'],['optimized']
Performance,"in clone3 () from /lib/libc.so.6; Thread 2 (Thread 0xe320db40 (LWP 117254) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 1 (Thread 0xf73179c0 (LWP 117207) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf68e3e1a in __wait4_time64 () from /lib/libc.so.6; #2 0xf68e3c3a in waitpid () from /lib/libc.so.6; #3 0xf6862810 in do_system () from /lib/libc.so.6; #4 0xf70c9ebb in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x565f30c0) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #5 TUnixSystem::StackTrace (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #6 0xf6f77e71 in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/base/src/TErrorDefaultHandler.cxx:177; #7 0xf70489cc in ErrorHandler (level=6000, location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"", ap=0xffde8958 ""\304\305\352\367R"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:153; #8 0xf704919a in Fatal (location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:9521,optimiz,optimized,9521,https://root.cern,https://github.com/root-project/root/issues/12427,4,['optimiz'],['optimized']
Performance,"in the context of this synchronization. - https://github.com/wlav/CPyCppyy/pull/11; - https://github.com/wlav/CPyCppyy/pull/12; - https://github.com/wlav/CPyCppyy/pull/14; - https://github.com/wlav/CPyCppyy/pull/16 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/17 *(was in PyROOT before)*; - https://github.com/wlav/cppyy-backend/pull/20 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/18; - https://github.com/wlav/CPyCppyy/pull/19; - https://github.com/wlav/CPyCppyy/pull/21; - https://github.com/wlav/CPyCppyy/pull/22; - https://github.com/wlav/CPyCppyy/pull/23. ## Performance validation. To validate the performance, I ran the [Python tests in roottest](https://github.com/root-project/roottest/tree/master/python) and the [PyROOT pythonization tests](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test) and compared runtimes with and without the cppyy upgrade. The total runtime of these tests reduced by about 4 % from 208 s to 287 s, so the performance impact of this PR is marginal. The runtime comparison for each test can be found in [cppyy_upgrade_test_runtimes.txt](https://github.com/root-project/root/files/14623432/cppyy_upgrade_test_runtimes.txt).; The worst observed performance penalty is 24 %. However, significant speedups are observed in some of the longer tests. For convenience, the 20 tests with the longest runtime are listed here:; ```; title no_cppyy_upgrade cppyy_upgrade ratio; python-regression-regression 32.61 34.30 1.051825; pyroot-pyz-rdataframe-asnumpy 14.30 14.61 1.021678; pyroot-pyz-rdataframe-makenumpy 13.66 9.65 0.706442; python-function-function 12.27 11.08 0.903015; python-cpp-cpp 12.03 11.26 0.935993; python-cpp-advanced 11.55 10.83 0.937662; pyroot-pyz-rdataframe-histo-profile 11.24 7.37 0.655694; python-basic-basic 10.11 9.95 0.984174; python-stl-stl 8.35 7.87 0.942515; pyroot-pyz-rtensor 6.94 2.32 0.334294; python-ttree-ttree 6.15 5.70 0.926829; python-basic-datatype 5.87 5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507:3126,perform,performance,3126,https://root.cern,https://github.com/root-project/root/pull/14507,1,['perform'],['performance']
Performance,"include/TClassEdit.h:132:74: error: no type named 'string' in namespace 'std'; virtual bool GetPartiallyDesugaredNameWithScopeHandling(const std::string & /*tname*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:133:68: error: no type named 'string' in namespace 'std'; std::string & /*result*/,; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:12: error: no template named 'vector' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:141:24: error: no member named 'string' in namespace 'std'; std::vector<std::string> fElements;; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:148:27: error: no type named 'string' in namespace 'std'; void ShortType(std::string &answer, int mode);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:158:9: error: no type named 'string' in namespace 'std'; std::string CleanType (const char *typeDesc,int mode = 0,const char **tail = nullptr);; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:159:34: error: no type named 'string_view' in namespace 'std'; inline bool IsArtificial(std::string_view name) { return name.find('@') != name.npos; }; ~~~~~^; /Users/couet/git/root-bin/include/TClassEdit.h:167:44: error: no type named 'string_view' in namespace 'std'; ROOT::ESTLType UnderlyingIsSTLCont(std::string_view type);; ~~~~~^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 76%] Built target MetaCling. ```; I have no problems on ARM. ### Reproducer. ```; git clone https://github.com/root-project/root.git ; mkdir root-build; cd root-build; cmake ../root; make -j8; ```. ### ROOT version. master. ### Installation method. cmake / make. ### Operating system. MacOS 15 (Sequoia) on Intel processor. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16451:9243,load,loading,9243,https://root.cern,https://github.com/root-project/root/issues/16451,1,['load'],['loading']
Performance,ing /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm; 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm; 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm; 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm; 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm; 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm; 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/T,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:3433,Load,Loading,3433,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"ing since moving to ROOT 6.32 on AlmaLinux 9.4. It worked fine with 6.20.04 running on Centos7. The library for accessing the TTree information was created using MakeProject. . ### Reproducer. This is the python code that crashes; ```; #!/usr/bin/env python3; import os; import ROOT; import argparse. parser = argparse.ArgumentParser(description='Analyse events.'); parser.add_argument(""inputfile""); parser.add_argument(""-o"",""--outputfile"",default=""Output.root"",help=""Name of output file""); args = parser.parse_args(). READEVENTANALYSISLIBRARY=ROOT.gSystem.Getenv(""READEVENTANALYSISLIBRARY"");; ROOT.gSystem.Load(READEVENTANALYSISLIBRARY);. globalRecon = ROOT.TChain(""ReconDir/Global""); globalRecon.AddFile(args.inputfile). OutputFile = ROOT.TFile(args.outputfile,""RECREATE"",""ND280 Analysis""); hTrackMomenta = ROOT.TH1F(""TrackMomenta"", ""Charged Track Momentum"", 100, 0, 1000.0). entries = globalRecon.GetEntries(); for entry in range(entries):; 	print("" entry = ""+str(entry)); 	ientry = globalRecon.LoadTree(entry); 	if ientry < 0:; 		break; 	nb = globalRecon.GetEntry(entry); 	if nb<=0:; 		continue; 	; 	for	pid in globalRecon.PIDs :; 		if(pid.Charge != 0) :; 			print("" charge is ""+str(pid.Charge)); 		#	hTrackMomenta.Fill(pid.FrontMomentum); OutputFile.Write(); OutputFile.Close(); ```. The crash traceback suggest this as the line causing the crash:. #7 0x00007fe963a68e9a in TBranchElement::ReadLeavesClones(TBuffer&) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #8 0x00007fe963a60899 in TBranch::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #9 0x00007fe963a7326b in TBranchElement::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #10 0x00007fe963ad7300 in TTree::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so. ### ROOT version. 6.32.00 . ### Installation method. prebuilt binary root_v6.32.00.Linux-almalinux9.4-x86_64-gcc11.4.tar.gz. ### Operating system. AlmaLinux 9.4. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16725:1261,Load,LoadTree,1261,https://root.cern,https://github.com/root-project/root/issues/16725,1,['Load'],['LoadTree']
Performance,"ing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9; -- Cling will look for C++ headers in '/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/x86_64-suse-linux:/usr/bin/../lib64/gcc/x86_64-suse-linux/10/../../../../include/c++/10/backward' at runtime.; -- And then fallback to: 'clang-12.0.0'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration. System Linux-5.11.16-1-default; Processor 6 core AMD Ryzen 5 3600XT 6-Core Processor (x86_64); Build type Release; Install path /usr/local; Compiler Clang 12.0.0; Compiler flags:; C -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined. -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4 builtin_nlohmannjson builtin_openui5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8097:3752,Perform,Performing,3752,https://root.cern,https://github.com/root-project/root/issues/8097,12,['Perform'],['Performing']
Performance,"ing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #37 0x0000000000000000 in ?? (); ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running from Python:. ~~~; 427/1192 Test #397: pyunittests-dataframe-histograms ....................................***Failed 191.35 sec; test_histo1D (dataframe_histograms.HistogramsFromRDF) ... *** Break *** segmentation violation; ===========================================================; There was a crash (#8 0x00007fff7c7ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fff89ef2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fff89e5a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fff8ac49ad8 in system_compat () from /lib64/glibc-hwcaps/power9/libpthread-2.28.so; #3 0x00007fff7c7a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x16573fa50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007fff7ca8eefc in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #6 (anonymous namesp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:26595,optimiz,optimized,26595,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"ingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f052152ab45 in TCling::SetClassInfo(TClass*, bool) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #8 0x00007f0525f60963 in TClass::SetUnloaded() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #9 0x00007f0525f07b38 in ROOT::RemoveClass(char const*) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #10 0x00007f0525f7c1cf in ROOT::TGenericClassInfo::~TGenericClassInfo() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #11 0x00007f05257728a7 in __run_exit_handlers (status=0, listp=0x7f0525918718 <__exit_funcs>, run_list_atexit=run_list_atexit; entry=true, run_dtors=run_dtors; entry=true) at exit.c:108; #12 0x00007f0525772a60 in __GI_exit (status=<optimized out>) at exit.c:139; #13 0x00007f052575008a in __libc_start_main (main=0x556722a83100 <main>, argc=5, argv=0x7ffc6b5a37b8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffc6b5a37a8) at ../csu/libc-start.c:342; #14 0x0000556722a8568e in _start (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f05215c1076 in TClingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f052152ab45 in TCling::SetClassInfo(TClass*, bool) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #8 0x00007f0525f60963 in TClass::SetUnloaded() () from /software/root/6.26.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:9412,optimiz,optimized,9412,https://root.cern,https://github.com/root-project/root/issues/12358,3,['optimiz'],['optimized']
Performance,"ingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f45a91ecb45 in TCling::SetClassInfo(TClass*, bool) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #8 0x00007f45adc22963 in TClass::SetUnloaded() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #9 0x00007f45adbc9b38 in ROOT::RemoveClass(char const*) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #10 0x00007f45adc3e1cf in ROOT::TGenericClassInfo::~TGenericClassInfo() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #11 0x00007f45ad4348a7 in __run_exit_handlers (status=0, listp=0x7f45ad5da718 <__exit_funcs>, run_list_atexit=run_list_atexit; entry=true, run_dtors=run_dtors; entry=true) at exit.c:108; #12 0x00007f45ad434a60 in __GI_exit (status=<optimized out>) at exit.c:139; #13 0x00007f45ad41208a in __libc_start_main (main=0x55c185446100 <main>, argc=5, argv=0x7fff23a4b5a8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff23a4b598) at ../csu/libc-start.c:342; #14 0x000055c18544868e in _start (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f45a9283076 in TClingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f45a91ecb45 in TCling::SetClassInfo(TClass*, bool) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #8 0x00007f45adc22963 in TClass::SetUnloaded() () from /software/root/6.26.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:3731,optimiz,optimized,3731,https://root.cern,https://github.com/root-project/root/issues/12358,3,['optimiz'],['optimized']
Performance,"ingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f45a91ecb45 in TCling::SetClassInfo(TClass*, bool) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #8 0x00007f45adc22963 in TClass::SetUnloaded() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #9 0x00007f45adbc9b38 in ROOT::RemoveClass(char const*) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #10 0x00007f45adc3e1cf in ROOT::TGenericClassInfo::~TGenericClassInfo() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #11 0x00007f45ad4348a7 in __run_exit_handlers (status=0, listp=0x7f45ad5da718 <__exit_funcs>, run_list_atexit=run_list_atexit; entry=true, run_dtors=run_dtors; entry=true) at exit.c:108; #12 0x00007f45ad434a60 in __GI_exit (status=<optimized out>) at exit.c:139; #13 0x00007f45ad41208a in __libc_start_main (main=0x55c185446100 <main>, argc=5, argv=0x7fff23a4b5a8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff23a4b598) at ../csu/libc-start.c:342; #14 0x000055c18544868e in _start (); ===========================================================; ```. ### Expected behavior. The struct above, while weird, is valid C\+\+ code. It would be nice if we could write such objects into ROOT files. ### To Reproduce. Attached is a small reproducer, which works on Linux (and possibly macOS). (I didn't bother with setting up a CMake based build for Windows compatibility.). [self-reference.zip](https://github.com/root-project/root/files/10786205/self-reference.zip). It should be able to reproduce the issue with:. ```; [bash][atspot01]:self-reference > make; genreflex SelfReferenceDict.hpp -o SelfReferenceDict.cpp --rootmap=libSelfReferenceDict.rootmap \; --rootmap-lib=libSelfReferenceDict.so --library=libSelfReferenceDict.so --select=selection.xml; c++ -pthread -std=c++17 -m64 -I/software/root/6.26.06/x86_64-ubuntu2004",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:5413,optimiz,optimized,5413,https://root.cern,https://github.com/root-project/root/issues/12358,3,['optimiz'],['optimized']
Performance,insics; >Failed to load module ROOT_Foundation_C; >Failed to load module ROOT_Rtypes; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Core; >Failed to load module Rint; >Failed to load module RIO; >Failed to load module MathCore; >Failed to load module Hist; >Failed to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load modul,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4138,load,load,4138,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,inter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load mo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4587,load,load,4587,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"inux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { head",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:8023,Cache,CacheParser,8023,https://root.cern,https://github.com/root-project/root/issues/11765,1,['Cache'],['CacheParser']
Performance,"invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105; #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90; #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:24590,optimiz,optimized,24590,https://root.cern,https://github.com/root-project/root/issues/8931,2,['optimiz'],['optimized']
Performance,"io/src/TBufferFile.cxx:4013; #21 0x00007ffff14479ca in TBufferFile::WriteClassBuffer (this=this@entry=0xb5bea80, cl=0xb23c790, pointer=pointer@entry=0x4307c00); at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:3981; #22 0x00007fffefc15c9c in TTree::Streamer (this=this@entry=0x4307c00, b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:8379; #23 0x00007ffff38e829f in HTree::Streamer (this=0x4307c00, R__b=...) at ../build/pc/EventHandlingDict.cc:1430; #24 0x00007ffff14b5476 in TKey::TKey (this=0x467fca0, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024, motherDir=<optimized out>); at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253; #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024); at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960; --Type <RET> for more, q to quit, c to continue without paging--; #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0); at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839; #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249; #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262; #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20); at eventhandling/hades.cc:956; #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512; #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547; (gdb); ```. ### To Reproduce; Custom code requires whole framework, hard to regenerate. ### Setup; 1. root@v5-34-00-patches (sorry that I still n",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9564:5967,optimiz,optimized,5967,https://root.cern,https://github.com/root-project/root/issues/9564,2,['optimiz'],['optimized']
Performance,ipt; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module We,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5450,load,load,5450,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"is=0x7ffdab5e2070, entry=0) at /home/eguiraud/ROOT/build_dbg/include/TTreeReader.h:191; #15 0x0000561d87cc8829 in TTreeReader::Next (this=0x7ffdab5e2070) at /home/eguiraud/ROOT/build_dbg/include/TTreeReader.h:183; #16 0x0000561d87cc863b in main () at repro_treereader.cpp:42; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```c++; #include <TChain.h>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TTree.h>; #include <TFile.h>; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main(); {; {; // write a TTree and its friend to the same file:; // when t1 is read back, it automatically also loads its friend; TFile f(""f.root"", ""recreate"");; TTree t1(""t1"", ""t1"");; TTree t2(""t2"", ""t2"");; int x = 42;; t2.Branch(""x"", &x);; t1.Fill();; t2.Fill();; t1.AddFriend(&t2);; t1.Write();; t2.Write();; f.Close();; }. {; // reading t2.x via chain->SetBranchAddress works; TChain c;; c.Add(""f.root/t1"");; c.LoadTree(0);; int x = 0;; c.SetBranchAddress(""t2.x"", &x);; c.GetEntry(0);; std::cout << x << '\n'; // prints 42; }. {; // reading t2.x via TTreeReader segfaults; TChain c;; c.Add(""f.root/t1"");; c.LoadTree(0);; TTreeReader r(&c);; TTreeReaderValue<int> rv(r, ""t2.x"");; r.Next();; }. return 0;; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master@b694869108 (v6.23). ### Additional context; <!--; Add any other context about the problem here.; -->. This blocks #6741 . Using TTree directly instead of passing through TChain works:. ```c++; { ; TFile f(""f.root""); ; auto *t = f.Get<TTree>(""t1""); ; TTreeReader r(t); ; TTreeReaderValue<int> rv(r, ""t2.x""); ; r.Next();; std::cout << *rv << std::endl; // prints 42 ; } ; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6993:3002,Load,LoadTree,3002,https://root.cern,https://github.com/root-project/root/issues/6993,2,['Load'],['LoadTree']
Performance,"itZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the source tree (`roofitcore/MultiProcess`), but have only been partially maintained since we started with the final version. Probably the best thing to do there is to remove that, but maybe people disagree and want to keep it for comparison w",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:5339,Queue,Queue,5339,https://root.cern,https://github.com/root-project/root/pull/8294,1,['Queue'],['Queue']
Performance,"ition is true in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:5263; 84: Left side of '&&' is true in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:5263; 85: Calling 'TGuiBldDragManager::IsGrabDisabled' in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:5263; 86: 'f' is non-null, which participates in a condition later in /opt/root_src/gui/guibuilder/inc/TGuiBldDragManager.h:103; 87: Left side of '&&' is true in /opt/root_src/gui/guibuilder/inc/TGuiBldDragManager.h:103; 88: Returning value, which participates in a condition later in /opt/root_src/gui/guibuilder/inc/TGuiBldDragManager.h:103; 89: Returning from 'TGuiBldDragManager::IsGrabDisabled' in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:5263; 90: Assuming the condition is true in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:5263; 91: Taking true branch in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:5263; 92: Returning pointer (loaded from 'parent'), which participates in a condition later in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:5264; 93: Returning from 'TGuiBldDragManager::GetEditableParent' in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:2481; 94: 'p' is non-null in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:2483; 95: Taking true branch in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:2483; 96: Called C++ object pointer is null in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:2484; /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:3338:7: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Control jumps to 'case kSaveAct:' at line 4795 in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:4699; 2: Assuming field 'fBuilder' is null in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:4796; 3: Taking false branch in /opt/root_src/gui/guibuilder/src/TGuiBldDragManager.cxx:4796; 4: Calling 'TGuiBldDragManager::Save' in /opt/root_src/gui/guibui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:73412,load,loaded,73412,https://root.cern,https://github.com/root-project/root/issues/7533,1,['load'],['loaded']
Performance,"its/shared_ptr_base.h:317; #2 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x209f320, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #3 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x209f318, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #4 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x209f318, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #5 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x209f2f8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #6 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x209f2f8, this=<optimized out>) at /usr/include/c++/12/bits/new_allocator.h:181; #7 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x209f2f8, __a=...) at /usr/include/c++/12/bits/alloc_traits.h:535; #8 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_node (__n=0x209f2f0, this=<optimized out>) at /usr/include/c++/1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:3708,optimiz,optimized,3708,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"ive.google.com/file/d/1se_HHE1YcwhwEsrihEeFq2llPNtEo9xc/view?usp=sharing); [YAML file for conda](https://drive.google.com/file/d/1cFovrs1n3A3ap-n9TDjvcJCXtQvNkRSY/view?usp=sharing) (made via `conda env export --name ENVNAME > envname.yml`); [TXT file for conda](https://drive.google.com/file/d/1vi96YXfesiLvO9lvm7fPix8CY3s4JDlS/view?usp=sharing) (made via `conda list --explicit > pkgs.txt`, so this is OS-specific). **Text version of code:**; ```; import ROOT as rt; # ipywidgets for nice visualizations, as per tutorial setup; !jupyter nbextension enable --py widgetsnbextension; # now let's enable JsMVA; %jsmva on. outputFile = rt.TFile( ""TMVA.root"", 'RECREATE' ); rt.TMVA.Tools.Instance(); factory = rt.TMVA.Factory(""TMVAClassification"", TargetFile=outputFile,; V=False, Color=True, DrawProgressBar=True, Transformations=[""I"", ""D"", ""P"", ""G"", ""D""],; AnalysisType=""Classification""). dataset = ""tmva_class_example"" #the dataset name; loader = rt.TMVA.DataLoader(dataset); loader.AddVariable('var0','var0','D'); loader.AddVariable('var1','var1','D'). # now get the input file; input = 'input_00.root'; input = rt.TFile.Open(input). sig = input.Get('ts'); bck = input.Get('tb'). sig_weight = 1.; bck_weight = 1.; loader.AddSignalTree(sig,sig_weight) # I crash here; #loader.AddBackgroundTree(bck,bck_weight); ```; **The error:**; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /opt/conda/envs/hw/lib/python3.7/site-packages/JupyROOT/helpers/utils.py in post_execute(self); 347 else:; 348 for t in transformers:; --> 349 (out, err, otype) = t(out, err); 350 if otype == 'html':; 351 IPython.display.display(HTML(out)). /opt/conda/envs/hw/lib/python3.7/site-packages/JsMVA/OutputTransformer.py in transform(self, output, error); 330 self.addClassForOutputFlag(Header.group(5)); 331 self.__currentHeaderName = Header.group(2); --> 332 self.__transformOneGroup(Header.group(5)); 333 elif EmptyHeader:; 334 self.__current",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6657:2071,load,loader,2071,https://root.cern,https://github.com/root-project/root/issues/6657,1,['load'],['loader']
Performance,"iz/libcmaes), a novel high performance C++11 (with Python bindings) library for blackbox optimization. The new minimizer yields better results than Minuit2 for most problems, though for an higher computation cost on average. See below for links to relevant benchmarks backing up these claims. This implementation is on behalf of [Inria Saclay Research group TAO](http://www.inria.fr/en/teams/tao), [Laboratoire de l'Accelerateur Lineaire, group AppStat](http://appstat.lal.in2p3.fr/) and [University Paris-Sud LRI](https://www.lri.fr/index_en.php?lang=EN). ===Features===; - Seamless replacement for Minuit, Minuit2 and Fumili; - Seamless support for RooFit; - Relying on libcmaes allows for best performances known for CMA-ES + access to several flavors of the original algorithm, yielding best results with a trade off for computational cost, as needed; - Compilation support for both Autotools and CMake; - Included tutorial files, tests, and a special benchmark vs Minuit2. ===Documentation===; - Main documentation for building and using the new minimizer is here: https://github.com/beniz/libcmaes/wiki/using-CMA-ES-in-CERN's-ROOT. ===Performances===; - On-par with Minuit2 on low dimensional problems (< 10-D), consistently beats Minuit2 in higher dimension, leading to better fits. These claims are backed by two benchmarks and two experiments on real world data (we are still waiting from some results from usage at CERN); - Benchmark CMA-ES vs Minuit on [BBOB](http://coco.gforge.inria.fr/doku.php?id=bbob-2013) available here: https://drive.google.com/open?id=0B3J1vWYhta9ibktXc2JLRUExUTA&authuser=0; - In-ROOT benchmark vs Minuit2 on low-dimensional problems, results available here: https://drive.google.com/open?id=0B3J1vWYhta9iTmR0T0hnN21lSGM&authuser=0; - Beats out Minuit2 up to 98% of the time on some experiments (data + code available on demand from Auger group, ask me). I am available for help in testing and possibly integrating and maintaining this addition, just let me know.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/40:1329,Perform,Performances,1329,https://root.cern,https://github.com/root-project/root/pull/40,1,['Perform'],['Performances']
Performance,"ization -- we build a hash table which contains all symbols; for a given library. This allows us to avoid the fallback symbol iteration; if multiple symbols from the same library are requested. The hash table; optimization targets to optimize the case where the bloom filter tells us; the symbol is *maybe* in the library. Patch by Alexander Penev (@alexander-penev) and me!. Performance Report; ===. |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|22,82|26,89|20,08|; |osx 10.14| roottest-cling| 589,67|452,97|307,34|; |osx 10.14| roottest-python| 377,69|475,78|311,5|; |osx 10.14| roottest-root-hist| 60,59|90,98|49,65|; |osx 10.14| roottest-root-math| 106,18|140,41|73,96|; |osx 10.14| roottest-root-tree| 1287,53|1861|1149,35|; |osx 10.14| roottest-root-treeformula | 568,43|907,46|531|; |osx 10.15| root-io-stdarray| - | 126.02 | 31.42|; |osx 10.15| roottest-root-treeformula| - | 327.08 | 231.14 |. The effect of running ctest -j8:; |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|14,45|18,89|13,03|; |osx 10.14| roottest-cling| 88,96|118,94|100,1|; |osx 10.14| roottest-python| 107,57|60,93|100,88|; |osx 10.14| roottest-root-hist| 10,25|23,25|11,77|; |osx 10.14| roottest-root-math| 8,33|21,23|9,27|; |osx 10.14| roottest-root-tree| 555|840,89|510,97|; |osx 10.14| roottest-root-treeformula | 235,44|402,82|228,91|. We think in `-j8` we lose the advantage of the new PR because the PCH had the rootmaps read in memory and restarting the processes allowed the kernel efficiently reuse that memory. Whereas, the modules and this PR scans the libraries from disk and builds in-memory optimization data structures. Reading from disk seems to be the bottleneck (not verified) but if that's an issue in future we can write out the index making subsequent runs at *almost* zero cost.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4717:3023,optimiz,optimization,3023,https://root.cern,https://github.com/root-project/root/pull/4717,2,"['bottleneck', 'optimiz']","['bottleneck', 'optimization']"
Performance,"ized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:17789,optimiz,optimized,17789,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"ized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:21304,optimiz,optimized,21304,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"ized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:15685,optimiz,optimized,15685,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"ject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /u",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:25571,optimiz,optimized,25571,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"ject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:34219,optimiz,optimized,34219,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"jname; entry=0x55b06913d600, errstring=errstring; entry=0x55b06913d608, mallocedp=mallocedp; entry=0x55b06913d5f8, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:5863,optimiz,optimized,5863,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,jsroot: add loading of openui ui.commons library for GED,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2794:12,load,loading,12,https://root.cern,https://github.com/root-project/root/pull/2794,1,['load'],['loading']
Performance,"ked for duplicates. ### Description. [df106_HiggsToFourLeptons.C](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html) crashes when it is compiled and run (it runs fine if interpreted).; This is due to jitted code in some filters that call user-defined functions whose signature is unknown to Cling. This is a general problem with functions that evaluate code at runtime and, while it might not be possible to fix in all cases, it should at least be better documented. The tutorials themselves should be written to work both when compiled and when interpreted, or specify why they cannot be run as-is if compiled. There is also a more general discussion to be made about RDF and the kind of guarantees that it should provide to its users. Ideally there should be a way to use RDF such that it will be guaranteed to run correctly regardless of being compiled or interpreted. Finally, the documentation of RDF should be updated to better clarify the caveats and limitations of passing C++ expressions as strings, both in terms of performance and, especially, in terms of compatibility with compiled code (i.e. it should be clear to a user that a filter using an interpreted string containing a user-defined function may not work when AOT-compiled without additional efforts on the user side - like manually passing the signatures to cling beforehand). ### Bullet point recap; - [ ] fix the tutorials so they run properly when compiled AOT; - [ ] update the doc of RDF to include caveats and limitations of using jitted expressions; - [ ] (to be discussed) introduce an opt-in ""strict mode"" for RDF (C++ only) that checks and rejects all cases when jitting is required. This would allow a user to catch code that may incur in performance penalties and may not work properly when AOT-compiled. . ### Reproducer. 1. download the source code of [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html); 2. compile it; 3. run it. ### ROOT version. 6.33.01. ### Installation",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15638:1077,perform,performance,1077,https://root.cern,https://github.com/root-project/root/issues/15638,1,['perform'],['performance']
Performance,"ked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```; TGeoManager::Import(""mother.gdml"");; ```. `mother.gdml`:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">; <define />; <solids>; <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />; </solids>; <structure>; <volume name=""world"">; <physvol>; <file name=""child.gdml"" />; </physvol>; <materialref ref=""world_material"" />; <solidref ref=""world_solid"" />; </volume>; </structure>; <setup name=""Default"" version=""1.0"">; <world ref=""world"" />; </setup>; </gdml>; ```. `child.gdml`:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""; xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">; <define>; <position name=""cube_v0"" unit=""mm"" x=""10.0"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9744:1001,load,load,1001,https://root.cern,https://github.com/root-project/root/issues/9744,1,['load'],['load']
Performance,kspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm; 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm; 0.000,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:7176,Load,Loading,7176,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"ktrace</summary>. ```; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; rax 0xfffffffffffffe00 rbx 0x00007ffe6d80d638 rcx 0x00007ff0e8af95c7; rdx 0x0000000000000000 rsi 0x00007ffe6d80d638 rdi 0x00000000000d979c; rbp 0x00007ffe6d80d6a0 rsp 0x00007ffe6d80d628 r8 0x0000000000000001; r9 0x0000000000000000 r10 0x0000000000000000 r11 0x0000000000000202; r12 0x0000000000000000 r13 0x00007ffe6d80d660 r14 0x00007ffe6d80df50; r15 0x0000000000691200 rip 0x00007ff0e8af95c7 eflags [ IF ] ; cs 0x00000033 ss 0x0000002b ds 0x00000000 ; es 0x00000000 fs 0x00000000 gs 0x00000000 ; #0 0x00007ff0e8af95c7 in __GI___wait4 (pid=890780, stat_loc=stat_loc; entry=0x7ffe6d80d638, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007ff0e8af958b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffe6d80d638, options=options; entry=0) at waitpid.c:38; #2 0x00007ff0e8a7035b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007ff0e930771d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x691200) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x691200) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007ff0e9305774 in TUnixSystem::DispatchSignals (this=0x691200, sig=kSigSegmentationViolation) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:12433,optimiz,optimized,12433,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"l (allowing a ""builtin_lz4"" option in CMake analogous to ""builtin_lzma""). I am unable to test this on Windows currently. The LZ4 algorithm focuses on decompression speed while sacrificing compression ratio. Compression level < 4 uses the ""LZ4 compression"" algorithm while compression level >= 4 uses ""LZ4HC"" (HC = high compression) variant. LZ4HC is comparable to zlib in speeds, but has approximately 20% larger file size. To evaluate, I use the Event executable in the test/ directory. I extend this to allow the compression algorithm be specified via CLI. Example invocation:. time ./Event 4000 6 99 1 1000 4; time ./Event 4000 4 99 0 1000 4. Here, the CLI arguments are:; - 1: Number of events (4000); - 2: Compression ratio (6); - 3: Split level (99); - 4: 1 for write, 0 for read.; - 5: Number of tracks per event (1000).; - 6: Compression algorithm (1 = zlib, 2 = lzma, 4 = lz4. 3 is the deprecated zlib-like algorithm). I extended MainEvent.cxx to include TTreePerfStats information, which gives us access to the compression-time-only rates. Performance results (testing on a 2.6GHz Intel Westmere E56xx-based VM) summary:. LZ4HC compression:; - File size: 231MB; - 14.7MB/s CPU time for writing. ZLIB level-6 compression:; - File size: 189MB; - 10.5MB/s CPU time for writing.; Summary: LZ4HC compression resulted in a file 20% larger. Compression time was 44% faster. LZMA level-6 compression:; - File size: 163MB; - .62MB/s CPU time for writing.; Summary: LZMA compression resulted in a file 13% smaller. Compression time was 16x slower than ZLIB level-6. LZ4 decompression:; - 233MB/s CPU time for decompression only.; - 189MB/s CPU time for reading. ZLIB decompression:; - 118MB/s CPU time for decompression only; - 104MB/s CPU time for reading.; Summary: LZ4 decompression was 97% faster, resulting in 81% faster reading for this case. LZMA decompression:; - 15.4MB/s CPU time for decompression only; - 14.7MB/s CPU time for reading.; Summary: LZMA decompression was 7x slower than zlib.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/59:1216,Perform,Performance,1216,https://root.cern,https://github.com/root-project/root/pull/59,1,['Perform'],['Performance']
Performance,l/src/TBufferXML.cxx:1175; 50: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:1175; 51: 'typ_id' is equal to kTString in /opt/root_src/io/xml/src/TBufferXML.cxx:1177; 52: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:1177; 53: Assuming 'elem' is non-null in /opt/root_src/io/xml/src/TBufferXML.cxx:1181; 54: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:1181; 55: Assuming 'arrsize1' is <= 0 in /opt/root_src/io/xml/src/TBufferXML.cxx:1187; 56: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:1187; 57: Calling 'TBufferXML::WorkWithElement' in /opt/root_src/io/xml/src/TBufferXML.cxx:1195; 58: Assuming 'stack' is non-null in /opt/root_src/io/xml/src/TBufferXML.cxx:978; 59: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:978; 60: Assuming the condition is true in /opt/root_src/io/xml/src/TBufferXML.cxx:983; 61: Taking true branch in /opt/root_src/io/xml/src/TBufferXML.cxx:983; 62: Calling 'TBufferXML::PerformPostProcessing' in /opt/root_src/io/xml/src/TBufferXML.cxx:984; 63: Assuming the condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:1203; 64: Taking false branch in /opt/root_src/io/xml/src/TBufferXML.cxx:1203; 65: '?' condition is false in /opt/root_src/io/xml/src/TBufferXML.cxx:1207; 66: Dereference of null pointer in /opt/root_src/io/xml/src/TBufferXML.cxx:1207; /opt/root_src/io/xml/src/TBufferXML.cxx:2535:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/io/xml/src/TBufferXML.cxx:2535; /opt/root_src/io/xml/src/TBufferXML.cxx:2558:21: warning: U,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:126993,Perform,PerformPostProcessing,126993,https://root.cern,https://github.com/root-project/root/issues/7431,1,['Perform'],['PerformPostProcessing']
Performance,"l=""1"" High=""10"" Low=""0"" Const=""False"" />; </Sample>. </Channel>; ```. and when I run this through `hist2workspace`, I get the following error:. ```; $ hist2workspace meas.xml. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#2] INFO:HistFactory -- hist2workspace is less verbose now. Use -v and -vv for more details. ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute InputFile of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute HistoName of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; ./meas_channel_0.xml:14: element ShapeFactor: validity error : No declaration for attribute HistoPath of element ShapeFactor; "" InputFile=""data/data.root"" HistoName=""inits_shape_factor_0"" HistoPath=""""; ^; [#2] ERROR:HistFactory -- Loading of xml document ""./meas_channel_0.xml"" failed; HistFactory - Exception; hist2workspace - Caught Exception: HistFactory - Exception; ```. which is correctly erroring, but also somewhat confusing. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With Apple clang version 14.0.0 (clang-1400.0.29.202) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. homebrew. ### Operating system. MacOS (13.0.1 (22A400)). ### Additional context. This comes out of scikit-hep/pyhf#2247 (please read that for some context).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13287:4384,Load,Loading,4384,https://root.cern,https://github.com/root-project/root/issues/13287,1,['Load'],['Loading']
Performance,"l=true, abstime=0x7f132a11f330, op=137, ; expected=0, futex_word=0x7f1370d85acc <_PyRuntime+428>) at futex-internal.c:57; 19 Thread 0x7f132991f640 (LWP 34586) ""python"" __GI___libc_read (nbytes=4, buf=0x7f13382bf140, fd=31) at ../sysdeps/unix/sysv/linux/read.c:26; 20 Thread 0x7f132911e640 (LWP 34587) ""python"" __futex_abstimed_wait_common64 (private=<optimized out>, cancel=true, abstime=0x0, op=393, ; expected=0, futex_word=0x562911e622b0) at futex-internal.c:57; * 21 Thread 0x7f131ad44640 (LWP 34739) ""python"" 0x00007f1332cbafdc in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/libCling.so; ```. The two most interesting ones are threads `1` and `21`:; Thread1; ```; #6 std::__condvar::wait (__m=..., this=<optimized out>); at /usr/src/debug/gcc-12.2.1-2.fc36.x86_64/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/std_mutex.h:155; #7 std::condition_variable::wait (this=<optimized out>, __lock=...) at ../../../../../libstdc++-v3/src/c++11/condition_variable.cc:41; #8 0x00007f133726f0aa in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x7f1310200730, __lock=...); at /usr/include/c++/12/condition_variable:312; #9 0x00007f133726df05 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x7f1310200730, __lock=..., __p=...) at /usr/include/c++/12/condition_variable:321; #10 0x00007f1337269c3e in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x7f13102006f8); at /home/vpadulan/programs/rootproject/rootsrc/core/thread/src/TReentrantRWLock.cxx:190; #11 0x00007f1337277d74 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:7804,optimiz,optimized,7804,https://root.cern,https://github.com/root-project/root/issues/11515,1,['optimiz'],['optimized']
Performance,"l>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-31",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1532,load,load-safe-path,1532,https://root.cern,https://github.com/root-project/root/pull/11882,1,['load'],['load-safe-path']
Performance,"lFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:29666,optimiz,optimized,29666,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"lFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:28353,optimiz,optimized,28353,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"lFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:23644,optimiz,optimized,23644,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"lFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:32292,optimiz,optimized,32292,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"lFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:19705,optimiz,optimized,19705,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"lFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:22331,optimiz,optimized,22331,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"lFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:30979,optimiz,optimized,30979,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"lFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:21018,optimiz,optimized,21018,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"lap->Print(); overlap->Draw(); ```; which produces:; ```console; 17:07:21 wdconinc@menelaos ~/EIC/detectors/epic (main *$%=) $ root -l ; root [0] auto* geo = TGeoManager::Import(""overlap_issue.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: overlap_issue.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is barrel. Master volume is barrel; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Warning in <TGeoManager::CheckGeometry>: Volume ""plate"" has no medium: assigned dummy medium and material; Warning in <TGeoManager::CheckGeometry>: Volume ""barrel"" has no medium: assigned dummy medium and material; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2; Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; (TGeoManager *) 0x556180ad1d50; root [1] geo->CheckOverlaps(); Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for barrel and daughters within 0.1; warning: Failed to call `P020_REveGeoPainter()` to execute the macro.; Add this function or rename the macro. Falling back to `.L`.; Check overlaps: [==========] 3 [100.00 %] 00:00 ; Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [2] geo->PrintOverlaps(); === Overlaps for Default ===; = Overlap ov00000: barrel/plate_1 overlapping barrel/plate_2 ovlp=10.0823; root [3] auto* vol1 = geo->GetTopNode()->GetDaughter(0)->GetVolume(); (TGeoVolume *) 0x556181070960; root [4] auto* vol2 = geo->GetTopNode()->GetDaughter(1)-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11784:2220,cache,cache,2220,https://root.cern,https://github.com/root-project/root/issues/11784,1,['cache'],['cache']
Performance,"lation; ===========================================================; There was a crash (#5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa13a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x173f45850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa13ac1c8 in TUnixSystem::DispatchSignals (this=0x173f45850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #6 0x00007fffa13a308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #7 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=..., t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:20056,optimiz,optimized,20056,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"lation; ===========================================================; There was a crash (#5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa80f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa805a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8ba9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x11eee5850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa8bac1c8 in TUnixSystem::DispatchSignals (this=0x11eee5850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #6 0x00007fffa8ba308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #7 0x00007fffa8b9d428 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fffa8db70c0 <textinput::TerminalConfigUnix::Get()::s>, signum=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #8 0x00007fffa8b9d47c in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #9 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:13188,optimiz,optimized,13188,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,lcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:449; /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/gui/gui/src/TGNumberEntry.cxx:574; /opt/root_src/gui/gui/src/TGPack.cxx:561:30: warning: Access to field 'fFrame' results in a dereference of a null pointer (loaded from variable 'f0') [clang-analyzer-core.NullDereference]; 1: Assuming 'delta' is >= 'min_dec' in /opt/root_src/gui/gui/src/TGPack.cxx:532; 2: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:532; 3: 'f0' initialized to a null pointer value in /opt/root_src/gui/gui/src/TGPack.cxx:537; 4: Calling 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 5: Loop condition is false. Execution continues on line 226 in /opt/root_src/gui/gui/src/TGPack.cxx:217; 6: Returning without writing to 'f0' in /opt/root_src/gui/gui/src/TGPack.cxx:227; 7: Returning from 'TGPack::FindFrames' in /opt/root_src/gui/gui/src/TGPack.cxx:538; 8: Assuming field 'fDragOverflow' is >= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:540; 9: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:540; 10: Assuming field 'fDragOverflow' is <= 0 in /opt/root_src/gui/gui/src/TGPack.cxx:550; 11: Taking false branch in /opt/root_src/gui/gui/src/TGPack.cxx:550; 12: Access to f,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:48227,load,loaded,48227,https://root.cern,https://github.com/root-project/root/issues/7533,1,['load'],['loaded']
Performance,"ld/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):; error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned long); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):; error code: 1; ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer.; However, you can see the problem this way:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |; | From tag , 3 March 2022 |; | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] &RooArgSet::operator delete; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlE",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:2186,load,load,2186,https://root.cern,https://github.com/root-project/root/issues/10203,1,['load'],['load']
Performance,"le/d/1j-oDBQo4RlSvzS4Ved7oRWTpetGBzgF1/view?usp=sharing); [Notebook file](https://drive.google.com/file/d/1se_HHE1YcwhwEsrihEeFq2llPNtEo9xc/view?usp=sharing); [YAML file for conda](https://drive.google.com/file/d/1cFovrs1n3A3ap-n9TDjvcJCXtQvNkRSY/view?usp=sharing) (made via `conda env export --name ENVNAME > envname.yml`); [TXT file for conda](https://drive.google.com/file/d/1vi96YXfesiLvO9lvm7fPix8CY3s4JDlS/view?usp=sharing) (made via `conda list --explicit > pkgs.txt`, so this is OS-specific). **Text version of code:**; ```; import ROOT as rt; # ipywidgets for nice visualizations, as per tutorial setup; !jupyter nbextension enable --py widgetsnbextension; # now let's enable JsMVA; %jsmva on. outputFile = rt.TFile( ""TMVA.root"", 'RECREATE' ); rt.TMVA.Tools.Instance(); factory = rt.TMVA.Factory(""TMVAClassification"", TargetFile=outputFile,; V=False, Color=True, DrawProgressBar=True, Transformations=[""I"", ""D"", ""P"", ""G"", ""D""],; AnalysisType=""Classification""). dataset = ""tmva_class_example"" #the dataset name; loader = rt.TMVA.DataLoader(dataset); loader.AddVariable('var0','var0','D'); loader.AddVariable('var1','var1','D'). # now get the input file; input = 'input_00.root'; input = rt.TFile.Open(input). sig = input.Get('ts'); bck = input.Get('tb'). sig_weight = 1.; bck_weight = 1.; loader.AddSignalTree(sig,sig_weight) # I crash here; #loader.AddBackgroundTree(bck,bck_weight); ```; **The error:**; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /opt/conda/envs/hw/lib/python3.7/site-packages/JupyROOT/helpers/utils.py in post_execute(self); 347 else:; 348 for t in transformers:; --> 349 (out, err, otype) = t(out, err); 350 if otype == 'html':; 351 IPython.display.display(HTML(out)). /opt/conda/envs/hw/lib/python3.7/site-packages/JsMVA/OutputTransformer.py in transform(self, output, error); 330 self.addClassForOutputFlag(Header.group(5)); 331 self.__currentHeaderName = Header.group(2); --> 332 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6657:1994,load,loader,1994,https://root.cern,https://github.com/root-project/root/issues/6657,1,['load'],['loader']
Performance,led to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROO,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5519,load,load,5519,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,led to load module Hist; >Failed to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_R,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4401,load,load,4401,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,led to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Clin,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4238,load,load,4238,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,led to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3520,load,load,3520,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,led to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5006,load,load,5006,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,led to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistD,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4468,load,load,4468,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"les when I write this small report). If it's really easier for you, the next time I can try to make a push release with the corrections. The good thing that I noted is that there are some fixes in the recent html pages compared to the pdf User's Guide of 2018, so I refer to this page when I cite the mistakes:; https://root.cern/root/htmldoc/guides/users-guide/Trees.html. 14.3; is the use the TTree::Show method; \- to use; 14.4; the branches and the leaves, is TTree::Print.; \- no need for a comma; 14.6; boxes"".; \- no need for the quote.; witch is marked; \- which is marked; exposed expression; \- I think that would sound better as ""set expression"" or another adjective.; Below them there are two text widgets; \- possible, but I think 'there' is redundant here.; for specifying; \- to specify; \-\- I think this text should be checked by a native speaker for articles and other issues.; When the “Rec” box is checked, the Draw and Scan commands; \- no need for quotes around Rec (or add them around Draw and Scan); 14.7; This picture shows the TTree class:; \- should be rewritten with a reference to the picture. On the pdf manual the picture is on a separate page, away from this line!; 14.7.3; save all branch buffers every n byte.; \- bytes.; 14.7.4; When a TTree is memory resident, you set it up so that it retains retain only the last few entries.; \- retains; For example, this can be very useful for monitoring purpose.; \- just for monitoring, remove 'purpose'. Maybe rewrite this phrase.; 14.7.6; The function TTree::GetUserInfo() allows adding any object defined by a user to the tree that is not depending on the entry number.; \- allows to add to the tree any user\-defined object that doesn't depend on... (actually didn't read the complete Chapter). 14.23; The performance depends not only of the processor type, but also of the disk devices (local, NFS, AFS, etc.).; \- Performance depends not only on the processor type, but also on storage devices (local, NFS, AFS, etc.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284:2060,perform,performance,2060,https://root.cern,https://github.com/root-project/root/issues/7284,2,"['Perform', 'perform']","['Performance', 'performance']"
Performance,"limits check. [core/winnt/src/TWinNTSystem.cxx:5035]: (style) Statements following return, break, continue, goto or throw will never be executed.; [tree/treeplayer/src/TSelectorDraw.cxx:380]: (style) Statements following return, break, continue, goto or throw will never be executed. [net/auth/src/TAuthenticate.cxx:4205]: (error) Resource leak: fd; [roofit/roofitcore/src/BidirMMapPipe.cxx:1880]: (error) Memory leak: s; [tree/tree/src/TLeaf.cxx:222]: (error) Memory leak: countname; [tree/tree/src/TLeaf.cxx:226]: (error) Memory leak: countname; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfS; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfB. [roofit/roofitcore/src/RooAbsArg.cxx:280]: (style) Redundant checking of STL container element existence before removing it. [core/dictgen/src/rootcling_impl.cxx:457]: (performance) Possible inefficient checking for 'fieldSelRules' emptiness.; [core/dictgen/src/rootcling_impl.cxx:4573]: (performance) Possible inefficient checking for 'filesIncludedByLinkdef' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:322]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:374]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:419]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:475]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:587]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:787]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [html/src/TDocParser.cxx:684]: (performance) Possible inefficient checking for 'currentType' emptiness.; [proof/proofd/src/XrdProofdManager.cxx:804]: (performance) Possible inefficient checking for 'uwrks' emptiness.; [proof/pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1343:2356,perform,performance,2356,https://root.cern,https://github.com/root-project/root/pull/1343,1,['perform'],['performance']
Performance,"lines regarding the integrals indicates that the model after the fit does not describe data well, despite a small EDM):. ```; Param of Interest: RawRDst; Saving PDF snapshot; DEBUG: BEFORE FIT:; 89215 data, 	73919.4 model; integral: 73919.4; ==============================; Minimizing the Minuit (Migrad). ... 6.97828e-06; Fit ran with status 0; Stat error on R(D*) is 0.000011; EDM at end was 0.000007; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 = 3 +/- 1.68695e-05; 1: Nmu			 = 1e+06 +/- 5.62344; 3: alpha_BFD1			 = 3 +/- 0.000235825. 4x4 matrix is as follows. | 0 | 1 | 2 | 3 |; ---------------------------------------------------------; 0 | 1 -1.634e-08 7.913e-15 -8.172e-09 ; 1 | -1.634e-08 1 1.04e-08 -2.452e-08 ; 2 | 7.913e-15 1.04e-08 1 -9.891e-07 ; 3 | -8.172e-09 -2.452e-08 -9.891e-07 1 . Stopwatch: fit ran in 0.589563 seconds with 0.843554 seconds in prep; DEBUG: AFTER FIT:; 89215 data, 	4.92006e+06 model; integral: 7.56395e-83; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The fit converges. ### To Reproduce. We have our demo fitter publicly available at: https://github.com/umd-lhcb/histfactory-fitter-demo/tree/dev. The `dev` branch contains our latest development. The baseline fit was performed with `make fit-noshapes` so all shape variations are turned off. ### Setup. 1. ROOT version: 6.28.02; 2. Operating system: NixOS (Linux) with `gcc12`; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. We build our self with the help of `nix`. ### Additional information. We noticed that newer ROOT started to use `RooBinWidthFunction` to support histogram templates with arbitrary binning scheme:. https://github.com/root-project/root/commit/dc65afe00ec72d18ebc5d31e7b2d6b50c6a20423#diff-42ea09980f1ed2bacde4381f212c35d78be6ddedccf746953dc99d6455525d8aL1256-R1221. Maybe there's a bug when introducing `RooBinWidthFunction`?. FYI @guitargeek",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12729:2158,perform,performed,2158,https://root.cern,https://github.com/root-project/root/issues/12729,1,['perform'],['performed']
Performance,ling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong64_t:' at line 186 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187:41: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:69575,load,loaded,69575,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,"ling the SOFIE parser, so that the build completes. There are error during testing:. There are failures when running in interpreter mode:. ~~~; 98/1192 Test #779: tutorial-roofit-rf104_classfactory ..................................***Failed Error regular expression found in output. Regex=[segmentation violation]126.58 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C...; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa80f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa805a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8ba9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x11eee5850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa8bac1c8 in TUnixSystem::DispatchSignals (this=0x11eee5850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #6 0x00007fffa8ba308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #7 0x00007fffa8b9d428 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fffa8db70c0 <textinput::TerminalConfigUnix::Get()::s>, signum=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #8 0x00007fffa8b9d47c in (anonymous namespace)::TerminalConfigUnix__handleSignal (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:12736,optimiz,optimized,12736,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,"linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):; error code: 1; ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer.; However, you can see the problem this way:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |; | From tag , 3 March 2022 |; | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] &RooArgSet::operator delete; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; root [1] &RooArgSet::sort. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. (void (RooAbsCollection::*)(Bool_t)) Function @0x55db0ed30460; root [2] &RooArgSet::operator delete; (void (*)(void *) noexcept) Function @0x7f94fd5e3900; ```. Here, trying to take the address of RooArgSet's operator delete fails, even though the class is in the library's dictionary and should autoload. Taking the address of a different member function (sort) works and triggers the autoloading of the clas",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:3337,load,load,3337,https://root.cern,https://github.com/root-project/root/issues/10203,1,['load'],['load']
Performance,lling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong64_t:' at line 178 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179:35: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:56012,load,loaded,56012,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,"llowing code in ArchLinux x86_64 with ROOT master:; ```c++; vector<ROOT::RDF::RResultPtr<TH1D>> pointer_not_allocated_error(){; // Create a data frame with 100 rows; ROOT::RDataFrame rdf(100);. // Define a new column `x` that contains random numbers and create a histogram; ROOT::RDF::RResultPtr<TH1D> h = rdf.Define(""x"", [](){ return gRandom->Rndm(); }).Histo1D(""x"");. // Add the histogram to a vector; vector<ROOT::RDF::RResultPtr<TH1D>> histograms;; histograms.push_back(h);. // Attempt to throw an error; throw std::runtime_error(""intended error throw for debugging"");. return histograms;; }; ```. ### Additional context; For additional context see https://root-forum.cern.ch/t/pointer-not-allocated-when-adding-rresultptr-to-vector/51831/2. Interesting part of the gdb backtrace follows (thanks @eguiraud!):; ```; >>> bt; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at pthread_kill.c:44; #1 0x00007ffff72a1503 in __pthread_kill_internal (signo=6, threadid=<optimized out>) at pthread_kill.c:78; #2 0x00007ffff7251958 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff723b53d in __GI_abort () at abort.c:79; #4 0x00007ffff729563e in __libc_message (action=action@entry=do_abort, fmt=fmt@entry=0x7ffff73b4432 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:155; #5 0x00007ffff72ab22c in malloc_printerr (str=str@entry=0x7ffff73b6ff8 ""free(): double free detected in tcache 2"") at malloc.c:5660; #6 0x00007ffff72ad587 in _int_free (av=0x7ffff73f1ba0 <main_arena>, p=0x55555e7134c0, have_lock=have_lock@entry=0) at malloc.c:4469; #7 0x00007ffff72af9f3 in __GI___libc_free (mem=<optimized out>) at malloc.c:3385; #8 0x00007ffff18d07b4 in std::_Vector_base<ROOT::RDF::RResultPtr<TH1D>, std::allocator<ROOT::RDF::RResultPtr<TH1D> > >::~_Vector_base (this=0x55555881f750) at /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.0/../../../../include/c++/12.2.0/bits/stl_vector.h:366; #9 0x00007ffff23aa435 in cling::Value::~Value() () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11494:1747,optimiz,optimized,1747,https://root.cern,https://github.com/root-project/root/issues/11494,1,['optimiz'],['optimized']
Performance,load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >in,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5780,load,load,5780,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load mo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4365,load,load,4365,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_5:1:2: error: unknown type name 'ifdef'; >#ifdef PI; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_6:1:2: error: unknown type name 'ifdef'; >#ifdef ERROR; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >; > *** Break *** segmentation violation; >; >; >; >==============,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:6296,load,load,6296,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module AS,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4084,load,load,4084,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module FitPanel; Failed to load module Unuran; Failed to load module Quadp; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:1865,load,load,1865,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4054,load,load,4054,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module RO,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3340,load,load,3340,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,load module Quadp; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUtil; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ROOTTreeViewer; Failed to loa,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:2152,load,load,2152,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,load module Unuran; Failed to load module Quadp; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUtil; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:2122,load,load,2122,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5326,load,load,5326,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"lobals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:20521,optimiz,optimized,20521,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:18473,optimiz,optimized,18473,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:27121,optimiz,optimized,27121,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"lookup (this=0x1099d16e0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; #10 0x00007fffa4604d20 in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /usr/include/c++/8/bits/atomic_base.h:295; #11 0x00007fffa3058c20 in llvm::orc::LLJIT::lookupLinkerMangled (Name=..., JD=..., this=0x10993f430) at /usr/include/c++/8/ppc64le-redhat-linux/bits/gthr-default.h:778; #12 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x10993f430) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #13 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x10993f430) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x109984c70, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:583; #15 0x00007fffa3050770 in cling::IncrementalExecutor::getPointerToGlobalFromJIT (this=0x1099ceb50, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #16 0x00007fffa2f9fee4 in cling::Interpreter::compileFunction (this=0x10994ea90, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #17 0x00007fffa2efea78 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fffa2f067e8 in TClingCallFunc::make_ctor_wrapper (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1215; #19 0x00007fffa2f07164 in TClingCallFunc::ExecDefaultConstructor (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:4618,optimiz,optimized,4618,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"lookup (this=0x11efcd6f0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; #12 0x00007fffa4004d00 in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /usr/include/c++/8/bits/atomic_base.h:295; #13 0x00007fffa2a59050 in llvm::orc::LLJIT::lookupLinkerMangled (Name=..., JD=..., this=0x11efcd4b0) at /usr/include/c++/8/ppc64le-redhat-linux/bits/gthr-default.h:778; #14 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x11efcd4b0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #15 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x11efcd4b0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #16 cling::IncrementalJIT::getSymbolAddress (this=0x11ef800c0, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #17 0x00007fffa2a50208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x11efca180) at /usr/include/c++/8/bits/unique_ptr.h:345; #18 cling::IncrementalExecutor::executeWrapper (this=0x11efca180, function=..., returnValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #19 0x00007fffa299b964 in cling::Interpreter::RunFunction (this=0x11ef4d780, FD=<optimized out>, res=res; entry=0x7fffff157520) at /usr/include/c++/8/bits/basic_string.h:2306; #20 0x00007fffa29a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffff157520, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #21 0x00007fffa2aecf60 in cling::MetaSema::<lambda(cling:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:15709,optimiz,optimized,15709,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"lookup (this=0x1656ebc10, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; #13 0x00007fff78004d00 in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /usr/include/c++/8/bits/atomic_base.h:295; #14 0x00007fff76a59050 in llvm::orc::LLJIT::lookupLinkerMangled (Name=..., JD=..., this=0x16584c2e0) at /usr/include/c++/8/ppc64le-redhat-linux/bits/gthr-default.h:778; #15 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x16584c2e0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #16 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x16584c2e0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #17 cling::IncrementalJIT::getSymbolAddress (this=0x1657ff820, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #18 0x00007fff76a50690 in cling::IncrementalExecutor::getPointerToGlobalFromJIT (this=0x165848f30, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #19 0x00007fff7699fe04 in cling::Interpreter::compileFunction (this=0x165715770, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #20 0x00007fff768fea38 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #21 0x00007fff76908a68 in TClingCallFunc::make_wrapper (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1006; #22 0x00007fff76908e78 in TClingCallFunc::IFacePtr (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:2004; #23 0x00007fff7682c3bc in TCling::Cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:30031,optimiz,optimized,30031,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"lookup (this=0x1740989b0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; #10 0x00007fff9ba04d00 in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /usr/include/c++/8/bits/atomic_base.h:295; #11 0x00007fff9a459050 in llvm::orc::LLJIT::lookupLinkerMangled (Name=..., JD=..., this=0x174098770) at /usr/include/c++/8/ppc64le-redhat-linux/bits/gthr-default.h:778; #12 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x174098770) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #13 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x174098770) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x17404b400, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #15 0x00007fff9a450208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x174094f70) at /usr/include/c++/8/bits/unique_ptr.h:345; #16 cling::IncrementalExecutor::executeWrapper (this=0x174094f70, function=..., returnValue=0x7fffd51c7cb0) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #17 0x00007fff9a39b964 in cling::Interpreter::RunFunction (this=0x1740192b0, FD=<optimized out>, res=res; entry=0x7fffd51c7cb0) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fff9a3a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffd51c7cb0, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #19 0x00007fff9a24178c in TCling::Calc (this=0x174039100,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:22124,optimiz,optimized,22124,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"lopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:6015,optimiz,optimized,6015,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"ls(ESignals) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #5 <signal handler called>; #6 0x00007f05215c1076 in TClingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f052152ab45 in TCling::SetClassInfo(TClass*, bool) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #8 0x00007f0525f60963 in TClass::SetUnloaded() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #9 0x00007f0525f07b38 in ROOT::RemoveClass(char const*) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #10 0x00007f0525f7c1cf in ROOT::TGenericClassInfo::~TGenericClassInfo() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #11 0x00007f05257728a7 in __run_exit_handlers (status=0, listp=0x7f0525918718 <__exit_funcs>, run_list_atexit=run_list_atexit; entry=true, run_dtors=run_dtors; entry=true) at exit.c:108; #12 0x00007f0525772a60 in __GI_exit (status=<optimized out>) at exit.c:139; #13 0x00007f052575008a in __libc_start_main (main=0x556722a83100 <main>, argc=5, argv=0x7ffc6b5a37b8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffc6b5a37a8) at ../csu/libc-start.c:342; #14 0x0000556722a8568e in _start (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f05215c1076 in TClingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f052152ab45 in TCling::SetClassInfo(TClass*, bool) () from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:9273,optimiz,optimized,9273,https://root.cern,https://github.com/root-project/root/issues/12358,1,['optimiz'],['optimized']
Performance,"ls(ESignals) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #5 <signal handler called>; #6 0x00007f45a9283076 in TClingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f45a91ecb45 in TCling::SetClassInfo(TClass*, bool) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #8 0x00007f45adc22963 in TClass::SetUnloaded() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #9 0x00007f45adbc9b38 in ROOT::RemoveClass(char const*) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #10 0x00007f45adc3e1cf in ROOT::TGenericClassInfo::~TGenericClassInfo() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #11 0x00007f45ad4348a7 in __run_exit_handlers (status=0, listp=0x7f45ad5da718 <__exit_funcs>, run_list_atexit=run_list_atexit; entry=true, run_dtors=run_dtors; entry=true) at exit.c:108; #12 0x00007f45ad434a60 in __GI_exit (status=<optimized out>) at exit.c:139; #13 0x00007f45ad41208a in __libc_start_main (main=0x55c185446100 <main>, argc=5, argv=0x7fff23a4b5a8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff23a4b598) at ../csu/libc-start.c:342; #14 0x000055c18544868e in _start (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f45a9283076 in TClingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f45a91ecb45 in TCling::SetClassInfo(TClass*, bool) () from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:3592,optimiz,optimized,3592,https://root.cern,https://github.com/root-project/root/issues/12358,1,['optimiz'],['optimized']
Performance,"lts, (except for the first iteration):; ```; Chunk: 0 Time/ms: 0; Chunk: 1 Time/ms: 111; Chunk: 2 Time/ms: 161; Chunk: 3 Time/ms: 211; Chunk: 4 Time/ms: 262; Chunk: 5 Time/ms: 312; Chunk: 6 Time/ms: 362; Chunk: 7 Time/ms: 415; Chunk: 8 Time/ms: 469; Chunk: 9 Time/ms: 521; ```. ### Optional: share how it could be improved; It would be nice if there was a static method to tune the resolution of the `TThreadTimer` as well as the `TSystem::kITimerResolution` for applications requiring high performance, so that there is no 10ms (or 100ms at the beginning) delay due to a `Printf()` (or an` Emit()` for the signal-slot mechanism to communicate between threads). Right now, `ESysConstants::kItimerResolution` is not assignable at runtime, and `TThreadTimer` timeout is not configurable by the user, thus the only solution is a fork and recompile. ### To Reproduce. 1. cd /opt/ && git clone https://github.com/CLIUtils/CLI11; 2. Download [zdt2.zip](https://github.com/root-project/root/files/6744587/zdt2.zip) and unzip it, cd into it; 3. mkdir build && cd build; 4. cmake -DROOT_DIR=/build-debug-mode-ROOT -DCMAKE_BUILD_TYPE=Debug ../; 5. make; 6. gui/runGUI --prbs 26 -q. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 28 2021, 13:40:49 |; | From heads/th1_long@v6-25-01-1451-gaed0c8868c |; | With c++ (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; If you run the full example, you might find a deadlock at the end, just press CTRL+C to exit. The lock is maybe due to `TList` data race, see https://github.com/root-project/root/issues/8365#issuecomment-871005764 See also https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8582:4617,perform,performance-effects-in-a-root-based-data-acquisition,4617,https://root.cern,https://github.com/root-project/root/issues/8582,1,['perform'],['performance-effects-in-a-root-based-data-acquisition']
Performance,"lude/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:147; ...; ```. Unfortunately all I could decipher from this is that things go south while accessing the `DataVector<xAOD::TauJet_v3>` type in Python. That access itself happens in a fairly complicated way itself, in this helper code:. https://gitlab.cern.ch/atlas/athena/-/blob/master/Control/xAODRootAccess/python/GenerateDVIterators.py. As before, I found that by explicitly accessing types ""in the right order"", I can work around the issue. (See: https:/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:10151,optimiz,optimized,10151,https://root.cern,https://github.com/root-project/root/issues/8578,3,['optimiz'],['optimized']
Performance,"luding decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage.; N.B. If no '--threads' argument was provided this is 1, otherwise it is the minimum of the value provided and the number of threads your CPU can run in parallel. It is worth noting that - on shared systems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is simila",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:3600,bottleneck,bottleneck,3600,https://root.cern,https://github.com/root-project/root/pull/14039,1,['bottleneck'],['bottleneck']
Performance,"ly, there is no safeguard to prevent new commits from introducing new errors, which is prone to happen, as not everyone is familiar with the doxygen syntax. To maintain in a sustainable way the 'clean status' of the reference guide and online documentation, it would be helpful to add an automation script that compiles the documentation only with the files modified in the Pull Request to be merged, in the same way that a bot checks now about clang-format, etc. Because Doxygen can be configured to have only one input file, this extra check will not involve much time as compared to building the whole documentation. Then, it could be checked whether no warnings are produced by the 'touched' files. ### Optional: share how it could be improved; - [ ] The Github action or CI script should modify the -DDOCU_INPUT CMake flag to only add those touched by the Pull Request; - [x] The INCLUDE_PATH in the Doxyfile should be extended (for good, not just in the script) to all possible include folders, as you might touch a 'source file', but would get a bunch of warnings if Doxygen does not find the corresponding include path. (This is not the case in the full build, as the include files are also part of the INPUT, but wouldn't be the case if we just 'touch' the sources in the PR).; - [ ] The WARN_LOGFILE (-DDOCU_LOGFILE in cmake) should be set by the CI script to a useful filename. If the file is empty after running doxygen, the Test passes.; - [ ] Optional: HAVE_DOT, listLibs, etc. could be set to NO in case a speedup is wanted.; - [ ] Potentially hook it also up with spell-checking checks, see https://github.com/codespell-project/codespell; - [ ] Alternative approach suggested by albert-github to avoid missing references: use the overnight tag file from https://root.cern/reference/ with the pull request update test; - [ ] https://github.com/root-project/jenkins-pipelines/issues/10 jenkins parsing log fine-tune. ### Additional context; See https://root.cern/for_developers/doxygen/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9953:2155,tune,tune,2155,https://root.cern,https://github.com/root-project/root/issues/9953,1,['tune'],['tune']
Performance,"m /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <iosfwd>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/exception_defines.h>; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 75%] Built target MetaCling; make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Root builds without any errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. `mkdir -p HEP/root`; 2. `cd HEP/root`; 3. `mkdir build install`; 4. `git clone --depth=1 https://github.com/root-project/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:28995,load,loading,28995,https://root.cern,https://github.com/root-project/root/issues/10528,1,['load'],['loading']
Performance,"m name:. ```python; @ROOT.DeclareCallable([""float""], ""float"", ""my_name""); def f(x):; return 2.0 * x. ROOT.ROOT.my_name(21) # Returns 42; ```. **DEPRECATED:**. Add workflow to invoke Python callables from C++. The mechanism builds with cling a C++ wrapper class around Python callables and publishs them to the user. See following example for the basic mechanism. ```python; import ROOT. # Because C++ is strongly typed, we have to declare the types of the inputs and the output; @ROOT.DeclareCppCallable([""float""], ""float""); def func(x):; return 2.0 * x. print(func(1.0)) # Prints 2.0; print(ROOT.PyROOT.func(1.0)) # Prints 2.0; ROOT.gInterpreter.ProcessLine(""cout << PyROOT::func(1.0) << endl;"") # Prints 2.0; ```. This allows us to run Python code in wrapped C++ workflow, e.g. for `RDataFrame`:. ```python; import ROOT; import numpy. @ROOT.DeclareCppCallable([""unsigned int""], ""float""); def func(x):; return numpy.power(x, 2). df = ROOT.RDataFrame(4).Define(""x"", ""rdfentry_"").Define(""y"", ""PyROOT::func(x)""); npy = df.AsNumpy(); print(npy[""x""]) # Prints [0, 1, 2, 3]; print(npy[""y""]) # Prints [0.0, 1.0, 4.0, 9.0]; ```. Finally, the approach is fully compatible with any custom C++ types you may have. ```python; import ROOT. ROOT.gInterpreter.Declare(""""""; struct Foo {; static const int foo = 42;; };; """"""). @ROOT.DeclareCppCallable([""Foo""], """"); def func(x):; print(x.foo). ROOT.gInterpreter.ProcessLine(""Foo x; PyROOT::func(x);"") # Prints 42; ```; There are still some things to check before merging:. - [ ] Double check reference counting; - [ ] C++ wrapper takes (lvalue) references, what happens with rvalues? What is the universal thingy?; - [ ] We put the C++ callable in the `PyROOT::` namespace. This is fine? It can be everything, even the global namespace. What is a sane solution here?; - [ ] How many copies we are doing finally? What is the performance?; - [ ] What happens in MT scenarios? Put in a test case!; - [ ] We have to ship the public cppyy interface with the ROOT headers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488:4210,perform,performance,4210,https://root.cern,https://github.com/root-project/root/pull/3488,1,['perform'],['performance']
Performance,"m the file system. Do not change; the active source during cint run. Use -C option or C1 command otherwise. Note4: In source code trace mode, cint sometimes displays extra-characters.; This is harmless. Please ignore. CINT/ROOT C/C++ interpreter interface.; All commands must be preceded by a . (dot), except; for the evaluation statement { } and the ?.; ===========================================================================; > [file] : output redirection to [file]; 2> [file] : error redirection to [file]; >& [file] : output&error redirection to [file]; Help: ? : help; help : help; /[keyword] : search keyword in help information; Shell: ![shell] : execute shell command; Source: v <[line]>: view source code <around [line]>; V [stack] : view source code in function call stack; t : show function call stack; f [file] : select file to debug; T : turn on/off trace mode for all source; J [stat] : Set warning level [0-5]; A [1|0] : allowing automatic variable on/off; trace <classname> : turn on trace mode for class; deltrace <classname> : turn off trace mode for class; Evaluation: p [expr] : evaluate expression (no declaration/loop/condition); Evaluation: s [expr] : step into expression (no declaration/loop/condition); Evaluation: S [expr] : step over expression (no declaration/loop/condition); {[statements]} : evaluate statement (any kind); x [file] : load [file] and execute function [file](w/o extension); xk [file] : keep [file] if already loaded else load it, and execute function [file](w/o extension); X [file] : load [file] and execute function [file](w/o extension); Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension); E <[file]>: open editor and evaluate {statements} in the file; Load/Unload: L [file] : load [file]; Lk [file] : keep [file] if already loaded, else load it; La [file] : reload all files loaded after [file]; U [file] : unload [file]; C [1|0] : copy source to $TMPDIR (on/off); undo : undo previous declaration",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:3142,load,load,3142,https://root.cern,https://github.com/root-project/root/issues/10191,6,['load'],"['load', 'loaded']"
Performance,"m/wlav/CPyCppyy/pull/17 *(was in PyROOT before)*; - https://github.com/wlav/cppyy-backend/pull/20 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/18; - https://github.com/wlav/CPyCppyy/pull/19; - https://github.com/wlav/CPyCppyy/pull/21; - https://github.com/wlav/CPyCppyy/pull/22; - https://github.com/wlav/CPyCppyy/pull/23. ## Performance validation. To validate the performance, I ran the [Python tests in roottest](https://github.com/root-project/roottest/tree/master/python) and the [PyROOT pythonization tests](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test) and compared runtimes with and without the cppyy upgrade. The total runtime of these tests reduced by about 4 % from 208 s to 287 s, so the performance impact of this PR is marginal. The runtime comparison for each test can be found in [cppyy_upgrade_test_runtimes.txt](https://github.com/root-project/root/files/14623432/cppyy_upgrade_test_runtimes.txt).; The worst observed performance penalty is 24 %. However, significant speedups are observed in some of the longer tests. For convenience, the 20 tests with the longest runtime are listed here:; ```; title no_cppyy_upgrade cppyy_upgrade ratio; python-regression-regression 32.61 34.30 1.051825; pyroot-pyz-rdataframe-asnumpy 14.30 14.61 1.021678; pyroot-pyz-rdataframe-makenumpy 13.66 9.65 0.706442; python-function-function 12.27 11.08 0.903015; python-cpp-cpp 12.03 11.26 0.935993; python-cpp-advanced 11.55 10.83 0.937662; pyroot-pyz-rdataframe-histo-profile 11.24 7.37 0.655694; python-basic-basic 10.11 9.95 0.984174; python-stl-stl 8.35 7.87 0.942515; pyroot-pyz-rtensor 6.94 2.32 0.334294; python-ttree-ttree 6.15 5.70 0.926829; python-basic-datatype 5.87 5.86 0.998296; python-pickle-write 5.56 5.56 1.000000; python-basic-overload 5.29 5.30 1.001890; python-pythonizations-pythonizations 5.27 5.20 0.986717; python-pythonizations-smartptr 5.04 4.89 0.970238; python-basic-operator 4.79 4.74 0.989562; python-cpp-cpp1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507:3362,perform,performance,3362,https://root.cern,https://github.com/root-project/root/pull/14507,1,['perform'],['performance']
Performance,"m::DispatchSignals (this=0x1a0b980, sig=kSigSegmentationViolation) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007fd0a58b3774 in TPad::PaintLine (this=0x238b1d0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:4171; #6 0x0000000000400b7c in main (argc=<optimized out>, argv=<optimized out>) at test/pad3.cxx:11; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fd0a58b3774 in TPad::PaintLine (this=0x238b1d0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:4171; #6 0x0000000000400b7c in main (argc=<optimized out>, argv=<optimized out>) at test/pad3.cxx:11; ===========================================================; ```. ## Expected behavior; No crash. ## To Reproduce; Code. ```; #include <TCanvas.h>; #include <TLine.h>; #include <TPad.h>. int main(int argc, char **argv) {; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad();; c->cd();; TLine* l= new TLine(0,1,0,1);; l->Paint();; delete l;; delete c;; delete C;; return 0;; }; ```. compile; ```; g++ pad3.cxx $(root-config --glibs --cflags --libs) -o pad3 -g; ```; run. ```; ./pad3; ```. ## Setup; ROOT 6.22.02 gcc4.8.5 on CentOS7; and. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh; on lxplus. ## Possible fix; Replace. ```; if (!gPad->IsBatch()); GetPainter()->DrawLine(x[0], y",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6446:1775,optimiz,optimized,1775,https://root.cern,https://github.com/root-project/root/issues/6446,4,['optimiz'],['optimized']
Performance,"m::orc::LLJIT::lookupLinkerMangled (Name=..., JD=..., this=0x10993f430) at /usr/include/c++/8/ppc64le-redhat-linux/bits/gthr-default.h:778; #12 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x10993f430) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #13 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x10993f430) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x109984c70, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:583; #15 0x00007fffa3050770 in cling::IncrementalExecutor::getPointerToGlobalFromJIT (this=0x1099ceb50, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #16 0x00007fffa2f9fee4 in cling::Interpreter::compileFunction (this=0x10994ea90, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #17 0x00007fffa2efea78 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fffa2f067e8 in TClingCallFunc::make_ctor_wrapper (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1215; #19 0x00007fffa2f07164 in TClingCallFunc::ExecDefaultConstructor (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name="""", address=0x0, nary=0) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1895; #20 0x00007fffa2f1838c in TClingClassInfo::New (this=0x10a9e3870, normCtxt=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingClassInfo.cxx:1098; #21 0x00007fffa2e2cdf4 in TCling::ClassInfo_New (this=<optimized out>, cinfo=<optimized out>) at /builddir/build/BUILD/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:4995,optimiz,optimized,4995,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,"m::orc::LLJIT::lookupLinkerMangled (Name=..., JD=..., this=0x16584c2e0) at /usr/include/c++/8/ppc64le-redhat-linux/bits/gthr-default.h:778; #15 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x16584c2e0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #16 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x16584c2e0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #17 cling::IncrementalJIT::getSymbolAddress (this=0x1657ff820, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #18 0x00007fff76a50690 in cling::IncrementalExecutor::getPointerToGlobalFromJIT (this=0x165848f30, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #19 0x00007fff7699fe04 in cling::Interpreter::compileFunction (this=0x165715770, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #20 0x00007fff768fea38 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #21 0x00007fff76908a68 in TClingCallFunc::make_wrapper (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1006; #22 0x00007fff76908e78 in TClingCallFunc::IFacePtr (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:2004; #23 0x00007fff7682c3bc in TCling::CallFunc_IFacePtr (this=<optimized out>, func=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:7888; #24 0x00007fff7ca8f81c in GetCallFunc (method=<optimized out>) at /usr/include/c++/8/bits/locale_facets.h:877; #25 WrapperCall (method=6088041216, nargs=2, args_=0x7fffc4480880, self=0x16b1482f0, result=0x16b0b6990) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:30408,optimiz,optimized,30408,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,"mIntFactory` plugin system; 10085390e5 [RF] Generalize RooMultiVarGaussian to be constructed from TMatrixDBase; 37f1e60345 [RF] Refactor RooIntegrator1D to use free functions; 47332b7fd5 [RF] Add `testRooIntegrator1D.cxx`; 9009fb2218 [RF] Fix bug in NLL summation in RooBatchCompute. 695eeef717 [RF] No need to create NLL manually in testLikelihoodJob; 498e846794 [RF] New `gtest_wrapper.h` for gtest backwards compatibility; c8c5b0d9c0 [RF] Add unit test for binned likelihood optimization; aedc556499 [RF] Use `BinnedLikelihood` in createNLL also without RooSimultaneous; 1ab0f6ddba [RF] Remove default constructors of old test statistic classes; 8d79da19c3 [RF] Deprecate now unused RooDataWeightedAverage; 2de763972e [RF] Use BatchMode for data projection plots; a6d0b50a63 [RF] Remove useless variable ownership management from RooAbsData; f07f77dfad [RF] Replace `RooCmdArg()` with `{}` in default parameter lists; d82b617a5b [RF] More use of `RooFit::OwningPtr<T>`; 7f288f1ca8 [RF] Avoid some usage of the non-thread safe `Form()` in RooFit; 0c9b6b6116 [RF][HF] Remove FlexibleInterpVar constructor from RooArgLists; 466f3f689c [RF][HF] Consistent 6th-degree polynomial interpolation in HistFactory; 07b56333f9 [RF] Put members in RooAbsReal class declaration in order; 25db2c78c4 [RF] Add code generation plus AD test for RooLognormal; 37c232f555 [RF] Don't test codegen + AD in testHistFactory on Windows; 1e74086875 [RF] Extend AD tests in `testHistFactory`; 3535820cda [RF] Throw error in RooNLLVarNew code gen when fitting old HistFactory; 33fe9c3ac5 [RF] Add Code-Squash AD support for RooLogNormal.; 344f5f93bf [RF] Add Code-Squash AD support for RooPiecewiseInterpolation.; 51a50839b6 [RF] Extend `testHistFactory` unit test to fit with code generation AD; efecd18bcc [RF] Add `""codegen""` as new option for `BatchMode()`; 6df4d2e80e [RF] Add `RooAbsReal::hasGradient()` and `gradient()` interface; 8adfe677a1 [RF] Only use floating parameters in RooFuncWrapper; 168b9ef861 [RF] Add Cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13295:2475,optimiz,optimization,2475,https://root.cern,https://github.com/root-project/root/pull/13295,1,['optimiz'],['optimization']
Performance,macOS has introduced feature named System Integrity Protection which prevents DYLD_* and LD_* environment variables to be propageted to a ROOT process.; We must disable the feature to use multiple versions of ROOT with AliBuild. There are two solution for this:. - Fix gSystem->Load() to allow dynamic loading using another environment variable; Pros: It just works (possibly) without out of tree modifications. Easy to relocate.; Cons: It's dirty. Unexpected load paths may be used even if they they have low priority. - Change all macros ever made so that they call gSystem->Load() with the full path or call AddDynamicPath in advance; Pros: It's neat. One can control load path precisely.; Cons: Too many macros to fix. We should fix the macros after relocation of libraries. This commit implements the former solution.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1360:278,Load,Load,278,https://root.cern,https://github.com/root-project/root/pull/1360,5,"['Load', 'load']","['Load', 'load', 'loading']"
Performance,"maes/ with ROOT. This PR builds ROOT with CMA-ES support and I've been able to run some of the tests, indicating that it is working fine. **Issues**; However, some caveats remain, on which help is required, at the moment. - [ ] `build/include/libcmaes/cmaes.h` and `build/include/Eigen` are not properly passed to the compiler at build time. I cannot find how to do it properly. At the moment I am using symlinks as a temporary hack (see how to build below). - [ ] To access the inner option of the CMA-ES Minimizer, I was using code similar to; ```C++; ROOT::Math::IOptions &opts = ROOT::Math::MinimizerOptions::Default(fitter);; opts.SetIntValue(""lambda"",lambda);; ```; Code above now appears to fail with errors such as:; ```; root [0] .L tutorials/fit/cmaesFitBench.C++g; Info in <TUnixSystem::ACLiC>: creating shared library /home/beniz/research/siminole/dev/tmp/root/build/./tutorials/fit/cmaesFitBench_C.so; In file included from input_line_11:9:; ././tutorials/fit/cmaesFitBench.C:58:16: error: no type named 'IOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; ././tutorials/fit/cmaesFitBench.C:58:45: error: no member named 'MinimizerOptions' in namespace 'ROOT::Math'; ROOT::Math::IOptions *opts = ROOT::Math::MinimizerOptions::Default(fitter);; ~~~~~~~~~~~~^; Error in <ACLiC>: Dictionary generation failed!; ```; Help is needed to fix the above. **How to build**; ```; cd build; cmake ../ -Dminuit2=on -Dtesting=on -Dlibcmaes=on; make; ```; The build will fail because of the header issue mentioned above, so do:; ```; cd include; ln -s eigen3/Eigen .; ln -s eigen3/unsupported .; cd ..; make; ```; You can then use the newly built ROOT and test that CMA-ES is working:; ```; .L tutorials/fit/cmaesGausFit.C++g; cmaesGausFit(); ```. Please see instructions and links from PR #40 for more tests, performance checks, etc... Once everything is fine, I'll be able to squash all commits into a single one if needed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/507:2136,perform,performance,2136,https://root.cern,https://github.com/root-project/root/pull/507,1,['perform'],['performance']
Performance,"mall diff in a couple classes to print debug statements; ```; --- a/tree/tree/src/TEntryList.cxx; +++ b/tree/tree/src/TEntryList.cxx; @@ -155,6 +155,8 @@ See comments to those functions for more details; #include ""TSystem.h""; #include ""TObjString.h""; ; +#include <iostream>; +; ClassImp(TEntryList);; ; ////////////////////////////////////////////////////////////////////////////////; @@ -839,6 +841,7 @@ Long64_t TEntryList::GetEntryAndTree(Int_t index, Int_t &treenum); //Then, when GetEntryAndTree(21, treenum, kTRUE) is called, first entry of the; //third sublist will be returned; ; + std::cout << ""Got input index: "" << index << ""\n"";; ```; ```; --- a/tree/treeplayer/src/TTreeReader.cxx; +++ b/tree/treeplayer/src/TTreeReader.cxx; @@ -18,6 +18,7 @@; #include ""TTreeReaderValue.h""; #include ""TFriendProxy.h""; ; +#include <iostream>; ; // clang-format off; /**; @@ -547,6 +548,7 @@ TTreeReader::EEntryStatus TTreeReader::SetEntryBase(Long64_t entry, Bool_t local; const Long64_t loadResult = treeToCallLoadOn->LoadTree(entryAfterList);; fSetEntryBaseCallingLoadTree = kFALSE;; ; + std::cout << ""With entryAfterList="" << entryAfterList <<"" got loadResult="" << loadResult << ""\n"";; ```. I get the following output; ```; $: ./repro.o; std::numeric_limits<int>::max(): 2147483647; Total entries in chain: 2168958436; Total entries in entrylist: 2168958436; Giving input entry 2147483647; Got input index: 2147483647; Got tree index 100 and entry index 47; Giving input entry 2147483648; Got input index: -2147483648; Got tree index -1 and entry index -1; Got input index: -2147483648; With entryAfterList=1616 got loadResult=1616; What is the entry status? not kEntryBeyondEnd; ```. ## Things to notice. The total number of entries in the chain/tentrylist is larget than `std::numeric_limits<int>::max()`. With the first call to `GetEntryAndTree`, I give as input exactly the int limit, and the output is correct (index of the tree = 100, index of the entry in that tree = 47). With the next call, t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11026:2910,load,loadResult,2910,https://root.cern,https://github.com/root-project/root/issues/11026,4,"['Load', 'load']","['LoadTree', 'loadResult']"
Performance,"master which shows; ```; strace -e file python -c 'import ROOT' 2>&1 | awk -v FS='""' '{ print $1 }' | sort | uniq -c; 206 access(; 2 chdir(; 1 execve(; 1 +++ exited with 0 +++; 181 getcwd(; 2 newfstatat(0, ; 2 newfstatat(1, ; 2 newfstatat(2, ; 532 newfstatat(3, ; 29 newfstatat(4, ; 10123 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95944, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95946, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; 1 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=95950, si_uid=1000, si_status=0, si_utime=0, si_stime=0} ---; ```; And; ```; time python -c ""import ROOT"". real	0m0.779s; user	0m0.572s; sys	0m0.203s; ```. That is a factor ~3 reduction in `newfstatat` calls and >40% improved speed for `import ROOT`. One of the main motivators is the presence of spurious paths in .pcm files, which are then traversed when loading the library. For example, taken a ROOT sourced from the install directory, I see; ```; $: strings lib/Core.pcm | grep rootbuild; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/include; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/<<< cling interactive line includer >>>; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_1; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_2; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_3; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_4; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/input_line_5; /home/vpadulan/programs/rootproject/rootbuild/master-fbd6abb371-release/core/inpu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14296:2520,load,loading,2520,https://root.cern,https://github.com/root-project/root/issues/14296,1,['load'],['loading']
Performance,"me/axel/build/root/master/src/core/base/src/TSysEvtHandler.cxx"", dl=28, il=22) at include/TQClass.h:47; #5 0x00007ffff7fa9eaa in ROOT::Internal::TQObjectInitBehavior::CreateClass (this=0x5555555bff80, ; cname=0x7ffff7af4b40 ""TSysEvtHandler"", id=0, info=..., isa=0x5555555bff60, dfil=0x7ffff7af6f65 ""TSysEvtHandler.h"", ; ifil=0x7ffff7adf928 ""/home/axel/build/root/master/src/core/base/src/TSysEvtHandler.cxx"", dl=28, il=22) at include/TQClass.h:70; #6 0x00007ffff7d3c467 in ROOT::TGenericClassInfo::GetClass (; this=0x7ffff7f7ce60 <ROOT::GenerateInitInstanceLocal(TSysEvtHandler const*)::instance>); at /home/axel/build/root/master/src/core/meta/src/TGenericClassInfo.cxx:250; #7 0x00007ffff7dcf596 in TSysEvtHandler::Dictionary () at core/G__Core.cxx:14387; #8 0x00007ffff7d1db76 in TClass::LoadClassDefault (requestedname=0x7fffffffb399 ""TSysEvtHandler""); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5769; #9 0x00007ffff7d1da90 in TClass::LoadClass (requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5740; #10 0x00007ffff7bdd915 in TROOT::LoadClass (this=0x7ffff7f53460 <ROOT::Internal::GetROOT1()::alloc>, ; requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false) at /home/axel/build/root/master/src/core/base/src/TROOT.cxx:2119; #11 0x00007ffff7d14d58 in TClass::GetClass (info=0x555556980ba0, load=true, silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:3323; #12 0x00007ffff7d07144 in TBaseClass::GetClassPointer (this=0x555556980c70, load=true); at /home/axel/build/root/master/src/core/meta/src/TBaseClass.cxx:66; #13 0x00007ffff7c4b6eb in TQObject::CollectClassSignalLists (this=0x555555d8eac0, list=..., cls=0x55555608c200); at /home/axel/build/root/master/src/core/base/src/TQObject.cxx:461; #14 0x00007ffff7faf3ef in TQObject::EmitVA<>(char const*, int) (this=0x555555d8eac0, signal_name=0x7ffff7fa0db3 ""Added()""); at /home/axel/build/root/master/src/core/base/inc/TQOb",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7123:2729,Load,LoadClass,2729,https://root.cern,https://github.com/root-project/root/issues/7123,1,['Load'],['LoadClass']
Performance,me/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm; 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:9651,Load,Loading,9651,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,me/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm; 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm; 0.0000,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:9384,Load,Loading,9384,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"me; entry=0xe73375 ""InitAnalysis()"", memnamesize=memnamesize; entry=2147483647, tagname=tagname; entry=0xfa35e0 ""mgr"", known2=0x7ffcac8ce1a4, varglobal=0x7fba33a89180 <G__global>, objptr=2) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/var.cxx:6821; #15 0x00007fba332c51b5 in G__getvariable (item=item; entry=0xe73370 ""mgr->InitAnalysis()"", known=known; entry=0x7ffcac8ce1a4, varglobal=0x7fba33a89180 <G__global>, varlocal=0x7ffcac8d1aa0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/var.cxx:5407; #16 0x00007fba331e12f1 in G__getitem (item=0xe73370 ""mgr->InitAnalysis()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1906; #17 0x00007fba331e5c70 in G__getexpr (expression=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1488; #18 0x00007fba331f2003 in G__test (expr=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1998; #19 0x00007fba33256ef4 in G__exec_if () at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/parse.cxx:1381; #20 G__exec_statement (mparen=mparen; entry=0x7ffcac8d188c) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/parse.cxx:7285; #21 0x00007fba3321462a in G__interpret_func (result7=result7; entry=0x7ffcac8d2400, funcname=<optimized out>, libp=libp; entry=0x7ffcac8d2440, hash=<optimized out>, p_ifunc=0x2243ac0, funcmatch=funcmatch; entry=1, memfunc_flag=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/ifunc.cxx:6710; #22 0x00007fba33204c22 in G__getfunction (item=item; entry=0xe65770 ""RunEtaC()"", known3=known3; entry=0x7ffcac8dcee4, memfunc_flag=<optimized out>, memfunc_flag; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:4684,optimiz,optimized,4684,https://root.cern,https://github.com/root-project/root/issues/6977,1,['optimiz'],['optimized']
Performance,"merInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf184 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char** const&, TStreamerInfo::TCompInfo* const*, int, int, int, int, int) [inlined] TBuffer::BufferSize(this=0x000060e00010ef00) const at TBuffer.h:98:41 [opt]; 95 	 TObject *GetParent() const;; 96 	 char *Buffer() const { return fBuffer; }; 97 	 char *GetCurrent() const { return fBufCur; }; -> 98 	 Int_t BufferSize() const { return fBufSize; }; 99 	 void DetachBuffer() { fBuffer = nullptr; }; 100 	 Int_t Length() const { return (Int_t)(fBufCur - fBuffer); }; 101 	 void Expand(Int_t newsize, Bool_t copy = kTRUE); // expand buffer to newsize; Target 0: (repro.out) stopped.; (lldb) p fBufSize; (Int_t) 32008; (lldb) s; Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf194 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavai",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16501:1924,queue,queue,1924,https://root.cern,https://github.com/root-project/root/pull/16501,1,['queue'],['queue']
Performance,"mfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #20 0x00007f7f0802301b in ?? (); #21 0x00007ffda9ea3b0f in ?? (); #22 0x0000000000000000 in ?? (); ===========================================================. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f7f16f182ca in wait4 () from /lib64/libc.so.6; #1 0x00007f7f16e61953 in do_system () from /lib64/libc.so.6; #2 0x00007f7f08f197d3 in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCore.so; #3 0x00007f7f170293bf in (anonymous namespace)::TExceptionHandlerImp::HandleException(int",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16578:19965,Load,LoadText,19965,https://root.cern,https://github.com/root-project/root/issues/16578,1,['Load'],['LoadText']
Performance,"mfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #20 0x00007f7f0802301b in ?? (); #21 0x00007ffda9ea3b0f in ?? (); #22 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16578:16199,Load,LoadText,16199,https://root.cern,https://github.com/root-project/root/issues/16578,2,['Load'],['LoadText']
Performance,"mfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #15 0x00007f7f01848ed8 in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #16 0x00007f7f0184a5e8 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #17 0x00007f7f017b10c7 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #18 0x00007f7f016b9542 in TCling::LoadText(char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #19 0x00007f7f016b96aa in TCling::Declare(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Wed/x86_64-el9-gcc14-opt/lib/libCling.so; #20 0x00007f7f0802301b in ?? (); #21 0x00007ffda9ea3b0f in ?? (); #22 0x0000000000000000 in ?? (); ===========================================================. ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 02 2024, 00:22:18 |; | From heads/master@v6-31-01-3406-g2dc2e0f126 |; | With g++ (GCC) 14.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. lcg nightlies. ### Operating system. Linux (alma 9). ### Additional c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16578:27640,Load,LoadText,27640,https://root.cern,https://github.com/root-project/root/issues/16578,1,['Load'],['LoadText']
Performance,"mized out>, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:148; #24 0x00007f5b8deba4c9 in CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>, this=<optimized out>) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #25 0x00007f5b8debd3a8 in CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (this=this entry=0x55e760617f50, self=0x55e75ccfd080, offset=0, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #26 0x00007f5b8debb6fa in CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (this=this entry=0x55e760617f50, self=self entry=0x55e75ccfd080, offset=<optimized out>, ctxt=ctxt entry=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728; #27 0x00007f5b8debc46c in CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (this=0x55e760617f50, self= 0x7f5b8080ef50: 0x7f5b808043c0, args=0x7f5b8e1ab040, kwds=<optimized out>, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783; #28 0x00007f5b8dec09fe in CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, PyObject*, PyObject*) (pymeth=0x7f5b8080ef40, args=0x7f5b8e1ab040, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566; #29 0x00007f5b8e941333 in _PyObject_MakeTpCall () at /usr/lib/libpython3.9.so.1.0; #30 0x00007f5b8e93d218 in _PyEval_EvalFrameDefault () at /usr/lib/libpython3.9.so.1.0; #31 0x00007f5b8e936fd9 in () at /usr/lib/libpython3.9.so.1.0; #32 0x00007f5b8e948b8e in _PyFunction_Vectorcall () at /usr/lib/libpython3.9.so.1.0; #33 0x00007f5b8e93aec9 in _PyEval_EvalFrameDefault () at /usr/lib/libpython3.9.so.1.0; #34 0x00007f5b8e94896b in _PyFunction_Vectorcall () at /usr/lib/libpython3.9.so.1.0; #35 0x00007f5b8e93858e in _PyEval_EvalFrameDefault () at /usr/lib/libpython3.9.so.1.0; #36 0x000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9139:3470,optimiz,optimized,3470,https://root.cern,https://github.com/root-project/root/pull/9139,1,['optimiz'],['optimized']
Performance,"mized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:18346,optimiz,optimized,18346,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"mized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202a8f00, callargs=0x7f101f5fe000, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #84 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:21861,optimiz,optimized,21861,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4148,load,load,4148,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,"mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57; #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterat",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:31359,optimiz,optimized,31359,https://root.cern,https://github.com/root-project/root/issues/8931,2,['optimiz'],['optimized']
Performance,n /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case 1073745921:' at line 147 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Called C++ object pointer is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:148; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:173:35: warning: Access to field 'boolean' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:46043,load,loaded,46043,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,"n TTreeReader::SetEntryBase (this=0x7ffdab5e2070, entry=0, local=false) at ../../../root_dbg/tree/treeplayer/src/TTreeReader.cxx:609; #14 0x0000561d87cc8858 in TTreeReader::SetEntry (this=0x7ffdab5e2070, entry=0) at /home/eguiraud/ROOT/build_dbg/include/TTreeReader.h:191; #15 0x0000561d87cc8829 in TTreeReader::Next (this=0x7ffdab5e2070) at /home/eguiraud/ROOT/build_dbg/include/TTreeReader.h:183; #16 0x0000561d87cc863b in main () at repro_treereader.cpp:42; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ```c++; #include <TChain.h>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TTree.h>; #include <TFile.h>; #include <ROOT/RDataFrame.hxx>; #include <iostream>. int main(); {; {; // write a TTree and its friend to the same file:; // when t1 is read back, it automatically also loads its friend; TFile f(""f.root"", ""recreate"");; TTree t1(""t1"", ""t1"");; TTree t2(""t2"", ""t2"");; int x = 42;; t2.Branch(""x"", &x);; t1.Fill();; t2.Fill();; t1.AddFriend(&t2);; t1.Write();; t2.Write();; f.Close();; }. {; // reading t2.x via chain->SetBranchAddress works; TChain c;; c.Add(""f.root/t1"");; c.LoadTree(0);; int x = 0;; c.SetBranchAddress(""t2.x"", &x);; c.GetEntry(0);; std::cout << x << '\n'; // prints 42; }. {; // reading t2.x via TTreeReader segfaults; TChain c;; c.Add(""f.root/t1"");; c.LoadTree(0);; TTreeReader r(&c);; TTreeReaderValue<int> rv(r, ""t2.x"");; r.Next();; }. return 0;; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master@b694869108 (v6.23). ### Additional context; <!--; Add any other context about the problem here.; -->. This blocks #6741 . Using TTree directly instead of passing through TChain works:. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6993:2699,load,loads,2699,https://root.cern,https://github.com/root-project/root/issues/6993,1,['load'],['loads']
Performance,"n main (argc=<optimized out>, argv=<optimized out>) at /afs/cern.ch/user/a/averbyts/Projects/zevis/test/pad2.cxx:84; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fe98b1ddee9 in TPad::FillCollideGrid(TObject*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fe98b1de2eb in TPad::PlaceBox(TObject*, double, double, double&, double&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /afs/cern.ch/user/a/averbyts/Projects/zevis/test/pad2.cxx:84; ===========================================================. [averbyts@lxplus701 test]$ . ```; ## Expected behavior; No FPE. ## To Reproduce; Code:. ```; #include <TCanvas.h>; #include <TPad.h>; #include <TH1D.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428:2228,optimiz,optimized,2228,https://root.cern,https://github.com/root-project/root/issues/6428,2,['optimiz'],['optimized']
Performance,"n of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/PluginManager/interface/PluginInfo.h"" export * }; ^; ```; Full ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:8128,Cache,CacheParser,8128,https://root.cern,https://github.com/root-project/root/issues/11765,1,['Cache'],['CacheParser']
Performance,"n with ""-lNew""; For example if test.cpp is the root program to compile I will use; ```; g++ -o test test.cpp `root-config --new --cflags --glibs`; ```; The program work without any issue with rootn.exe.; Using the compiled program, Immediately it breaks:. ```; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f9ece411e8a in waitpid () from /lib64/libc.so.6; #1 0x00007f9ece38d757 in do_system () from /lib64/libc.so.6; #2 0x00007f9ed00a44f5 in TUnixSystem::StackTrace() () from /home/root-6.26.04/builddir/lib/libCore.so; #3 0x00007f9ed00a1cc5 in TUnixSystem::DispatchSignals(ESignals) () from /home/root-6.26.04/builddir/lib/libCore.so; #4 <signal handler called>; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadGraphicsLibs() () from /home/root-6.26.04/builddir/lib/libCore.so; #7 0x00007f9ecff6ca2a in TApplication::InitializeGraphics() () from /home/root-6.26.04/builddir/lib/libCore.so; #8 0x00007f9ecff70d89 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/root-6.26.04/builddir/lib/libCore.so; #9 0x00000000004011fc in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f9ec9b38d5b in TClingCallFunc::SetArg(long) () from /home/root-6.26.04/builddir/lib/libCling.so; #6 0x00007f9ecff6d683 in TApplication::LoadG",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11353:1076,Load,LoadGraphicsLibs,1076,https://root.cern,https://github.com/root-project/root/issues/11353,1,['Load'],['LoadGraphicsLibs']
Performance,"n.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. -- END TEST OUTPUT --; CMake Error at /home/sftnight/build/workspace/root-pullrequests-build/build/RootTestDriver.cmake:186 (message):; got exit code 139 but expected 0; ```. ### ROOT version. master. ### Installation method. Jenkins/CI. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14155:3271,optimiz,optimized,3271,https://root.cern,https://github.com/root-project/root/issues/14155,3,['optimiz'],['optimized']
Performance,"n/abstract.h:123; #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067; #31 PyEval_EvalCode (co=co; entry=0x7af586c71b00, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200) at Python/ceval.c:1134; #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291; #33 run_mod (mod=<optimized out>, filename=filename; entry=0x7af5865a5e30, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200, flags=flags; entry=0x7ffea3a92318, arena=arena; entry=0x7af5865026f0) at Python/pythonrun.c:1312; #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, locals=0x7af586550200, globals=0x7af586550200, start=257, filename=0x7af5865a5e30, fp=0x5fe0e477c7f0) at Python/pythonrun.c:1208; #35 _PyRun_SimpleFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:15512,optimiz,optimized,15512,https://root.cern,https://github.com/root-project/root/issues/15117,2,['optimiz'],['optimized']
Performance,"n::LoadTree`, while for #16804 `TChain::LoadTree` is the sole culprit. As in #16804, the root cause of the issue is that the following code is not invoked often enough:; https://github.com/root-project/root/blob/2cc4b70d2e2bd89d9b639c894b4e0558be47c22b/tree/tree/src/TChain.cxx#L1407-L1434; I will call the operation above an ""address refresh"". TChain has code triggering an address refresh when needed for friends of the current tree:; https://github.com/root-project/root/blob/2cc4b70d2e2bd89d9b639c894b4e0558be47c22b/tree/tree/src/TChain.cxx#L1384-L1393. Unfortunately this doesn't work for two reasons:; 1. The code cannot possibly be reached unless `c2` itself has friends because of the following condition:; https://github.com/root-project/root/blob/2cc4b70d2e2bd89d9b639c894b4e0558be47c22b/tree/tree/src/TChain.cxx#L1370; In our case `c2` doesn't have friends, but the `fTree` does. This is easy to fix (or work around).; 2. Even if `fFriends` is made non-null, `fetree->IsUpdated()` always returns `false` because `TTree::LoadTree` resets it:; https://github.com/root-project/root/blob/18b4f317b389fa7931d7eb8e00525f4dca44be0f/tree/tree/src/TTree.cxx#L6512; Fixing this is much more annoying. For [my application](https://gitlab.cern.ch/Proto/Darwin/-/merge_requests/44), I ended up subscribing to the `Notify` signal and calling `TFriendElement::MarkUpdated` again. This is only a partial solution because when `c2` loads a new file, it doesn't reset friend elements that were marked updated, which would happen somewhere along this line:; https://github.com/root-project/root/blob/2cc4b70d2e2bd89d9b639c894b4e0558be47c22b/tree/tree/src/TChain.cxx#L1666. ### Reproducer. Rename to `recursiveBugDemo.C` and run the following macro: [recursiveBugDemo.txt](https://github.com/user-attachments/files/17593622/recursiveBugDemo.txt). It works similarly to #16804 and should only print `true`. ### ROOT version. Seen in:. * ROOT 6.30/04 (anaconda); * ROOT 6.28/04 (LCG 104). I couldn't find any co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16805:1488,Load,LoadTree,1488,https://root.cern,https://github.com/root-project/root/issues/16805,1,['Load'],['LoadTree']
Performance,n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the **fifteenth** run it finally becomes stable with this output:. ```; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:5545,Load,LoadPCM,5545,https://root.cern,https://github.com/root-project/root/issues/8518,4,['Load'],['LoadPCM']
Performance,"nFileClass=0x0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1302; #28 0x00007fffa9384f00 in TGenCollectionStreamer::ReadBuffer (this=<optimized out>, b=..., obj=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1232; #29 0x00007fffa933ff7c in TCollectionClassStreamer::Stream (onfileClass=0x10a860aa0, obj=0x109986cc0, b=..., this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:177; #30 TCollectionClassStreamer::Stream (this=<optimized out>, b=..., obj=0x109986cc0, onfileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:172; #31 0x00007fffa8f04014 in TClass::StreamerExternal (pThis=<optimized out>, object=0x109986cc0, b=..., onfile_class=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6783; #32 0x00007fffa92db554 in TClass::Streamer (onfile_class=0x10a860aa0, b=..., obj=<optimized out>, this=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #33 TBufferFile::ReadFastArray (streamer=0x0, onFileClass=0x10a860aa0, n=1, cl=0x10a860aa0, start=<optimized out>, this=0x7ffff83ea100) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1609; #34 TBufferFile::ReadFastArray (this=0x7ffff83ea100, start=<optimized out>, cl=0x10a860aa0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1596; #35 0x00007fffa94a224c in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x10a395fa0, addr=<optimized out>, buf=...) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1362; #36 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x109986ba0, conf=0x10a395fa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1405; #37 0x00007fffa92d3130 in T",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:8146,optimiz,optimized,8146,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"n_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:19132,optimiz,optimized,19132,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"n_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:27780,optimiz,optimized,27780,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:26449,optimiz,optimized,26449,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, locals=0x7f10202a8e40) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #80 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202a8e40, globals=0x7f10202a8e40, source=0x55f90aaa9b60) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #81 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #82 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f5fe018, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #83 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:20340,optimiz,optimized,20340,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:9044,optimiz,optimized,9044,https://root.cern,https://github.com/root-project/root/issues/8578,4,['optimiz'],['optimized']
Performance,"nceLocal(TSysEvtHandler const*)::instance>); at /home/axel/build/root/master/src/core/meta/src/TGenericClassInfo.cxx:250; #7 0x00007ffff7dcf596 in TSysEvtHandler::Dictionary () at core/G__Core.cxx:14387; #8 0x00007ffff7d1db76 in TClass::LoadClassDefault (requestedname=0x7fffffffb399 ""TSysEvtHandler""); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5769; #9 0x00007ffff7d1da90 in TClass::LoadClass (requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5740; #10 0x00007ffff7bdd915 in TROOT::LoadClass (this=0x7ffff7f53460 <ROOT::Internal::GetROOT1()::alloc>, ; requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false) at /home/axel/build/root/master/src/core/base/src/TROOT.cxx:2119; #11 0x00007ffff7d14d58 in TClass::GetClass (info=0x555556980ba0, load=true, silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:3323; #12 0x00007ffff7d07144 in TBaseClass::GetClassPointer (this=0x555556980c70, load=true); at /home/axel/build/root/master/src/core/meta/src/TBaseClass.cxx:66; #13 0x00007ffff7c4b6eb in TQObject::CollectClassSignalLists (this=0x555555d8eac0, list=..., cls=0x55555608c200); at /home/axel/build/root/master/src/core/base/src/TQObject.cxx:461; #14 0x00007ffff7faf3ef in TQObject::EmitVA<>(char const*, int) (this=0x555555d8eac0, signal_name=0x7ffff7fa0db3 ""Added()""); at /home/axel/build/root/master/src/core/base/inc/TQObject.h:109; #15 0x00007ffff7fae61a in TQObject::Emit (this=0x555555d8eac0, signal=0x7ffff7fa0db3 ""Added()""); at /home/axel/build/root/master/src/core/base/inc/TQObject.h:173; #16 0x00007ffff7faec35 in TSysEvtHandler::Added (this=0x555555d8eab0); at /home/axel/build/root/master/src/core/base/inc/TSysEvtHandler.h:50; #17 0x00007ffff7c680da in TSignalHandler::Add (this=0x555555d8eab0); at /home/axel/build/root/master/src/core/base/src/TSysEvtHandler.cxx:172; #18 0x00007ffff7faadb5 in TRint::TRint (this=0x5555555d5780, appClassName=0x5555555549b8 ""Rint",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7123:3333,load,load,3333,https://root.cern,https://github.com/root-project/root/issues/7123,1,['load'],['load']
Performance,"nction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #78 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5faa20, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #79 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90aaa9b60, globals=<optimized out>, loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:19525,optimiz,optimized,19525,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"ndex -1; Got input index: -2147483648; With entryAfterList=1616 got loadResult=1616; What is the entry status? not kEntryBeyondEnd; ```. ## Things to notice. The total number of entries in the chain/tentrylist is larget than `std::numeric_limits<int>::max()`. With the first call to `GetEntryAndTree`, I give as input exactly the int limit, and the output is correct (index of the tree = 100, index of the entry in that tree = 47). With the next call, the input is the int limit + 1, from which one would expect the same tree and just one entry beyond the previous one, i.e. 48. Instead the result is tree index = -1 and entry index = -1. This is a bug resulting from a wrong signature in `TEntryList::GetEntryAndTree`:; https://github.com/root-project/root/blob/8323e504ae187954dcb9bcdfd5df2f9a5ed2abca/tree/tree/src/TEntryList.cxx#L831. Which should accept a `Long64_t` like all other places in the class where an entry number is expected, but instead takes an `Int_t`. This results in a further bug in TTreeReader, that calls this method at https://github.com/root-project/root/blob/8323e504ae187954dcb9bcdfd5df2f9a5ed2abca/tree/treeplayer/src/TTreeReader.cxx#L532. When the wrong entry index / tree index is returned, the consecutive call to [`treeToCallLoadOn->LoadTree(entryAfterList)`](https://github.com/root-project/root/blob/8323e504ae187954dcb9bcdfd5df2f9a5ed2abca/tree/treeplayer/src/TTreeReader.cxx#L547) will give result `-2`, like shown in the output above. This will then set the entry status to `kEntryBeyondEnd` at https://github.com/root-project/root/blob/8323e504ae187954dcb9bcdfd5df2f9a5ed2abca/tree/treeplayer/src/TTreeReader.cxx#L571-L580 . Practically, the TTreeReader thinks there are no more entries to process. This means that e.g. an RDataFrame would also stop processing entries after this value. ### Expected behavior. The TEntryList is able to give the correct tree and entry index even after `std::numeric_limits<int>::max()`. ### Setup; ROOT master; GCC 12; Fedora 36",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11026:4739,Load,LoadTree,4739,https://root.cern,https://github.com/root-project/root/issues/11026,1,['Load'],['LoadTree']
Performance,"ndler.cxx"", dl=28, il=22) at include/TQClass.h:70; #7 0x00007ffff7d3c467 in ROOT::TGenericClassInfo::GetClass (; this=0x7ffff7f7ce60 <ROOT::GenerateInitInstanceLocal(TSysEvtHandler const*)::instance>); at /home/axel/build/root/master/src/core/meta/src/TGenericClassInfo.cxx:250; #8 0x00007ffff7dcf596 in TSysEvtHandler::Dictionary () at core/G__Core.cxx:14387; #9 0x00007ffff7d1db76 in TClass::LoadClassDefault (requestedname=0x7fffffffb399 ""TSysEvtHandler""); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5769; #10 0x00007ffff7d1da90 in TClass::LoadClass (requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5740; #11 0x00007ffff7bdd915 in TROOT::LoadClass (this=0x7ffff7f53460 <ROOT::Internal::GetROOT1()::alloc>, ; requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false) at /home/axel/build/root/master/src/core/base/src/TROOT.cxx:2119; #12 0x00007ffff7d14d58 in TClass::GetClass (info=0x555556980ba0, load=true, silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:3323; #13 0x00007ffff7d07144 in TBaseClass::GetClassPointer (this=0x555556980c70, load=true); at /home/axel/build/root/master/src/core/meta/src/TBaseClass.cxx:66; #14 0x00007ffff7c4b6eb in TQObject::CollectClassSignalLists (this=0x555555d8eac0, list=..., cls=0x55555608c200); at /home/axel/build/root/master/src/core/base/src/TQObject.cxx:461; #15 0x00007ffff7faf3ef in TQObject::EmitVA<>(char const*, int) (this=0x555555d8eac0, signal_name=0x7ffff7fa0db3 ""Added()""); at /home/axel/build/root/master/src/core/base/inc/TQObject.h:109; #16 0x00007ffff7fae61a in TQObject::Emit (this=0x555555d8eac0, signal=0x7ffff7fa0db3 ""Added()""); at /home/axel/build/root/master/src/core/base/inc/TQObject.h:173; #17 0x00007ffff7faec35 in TSysEvtHandler::Added (this=0x555555d8eab0); at /home/axel/build/root/master/src/core/base/inc/TSysEvtHandler.h:50; #18 0x00007ffff7c680da in TSignalHandler::Add (this=0x555555d8eab0); at /home/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7123:7710,load,load,7710,https://root.cern,https://github.com/root-project/root/issues/7123,1,['load'],['load']
Performance,"ndling of default units in ROOT's geometry system. Although this commit is an ostensible improvement, reducing points of maintenance, there are some consequences that were maybe not anticipated. I refer to the [units README file](https://github.com/root-project/root/blob/master/geom/geom/README_units.md). In that file it states:. > To ensure backwards compatibility ROOT's default system of units is - as it was before - based on centimeters, seconds and GigaElectronVolts, ie. the defaults are equivalent to:; > ; > ```c++; > TGeoManager::SetDefaultUnits(kRootUnits);; > ```. Unfortunately, this statement is not true. As you see from the definition of the `TGeoManager::fgDefaultUnits` static data member https://github.com/root-project/root/blob/49d0be0b9455e026e6d68e2e651113af3f1e4654/geom/geom/src/TGeoManager.cxx#L302 the default units are G4 units, which it has been for some time (perhaps the beginning?). There was thus an inconsistency with the default units and with those assumed by TGDMLParse, which, before the above commit, made an unconditional assumption of ROOT units. The above commit addresses this inconsistency, but the neutrino community at Fermilab (specifically the LArSoft project and the experiments it supports) experienced an [unintended consequence](https://github.com/LArSoft/larcorealg/pull/18)--the default units are now honored by the TGDML parser, but they are simply G4 units instead of ROOT units. In order to make ROOT units the default, we use the workaround:. ```c++; TGeoManager::LockDefaultUnits(false);; TGeoManager::SetDefaultUnits(TGeoManager::kRootUnits);; TGeoManager::LockDefaultUnits(true);; ```. as the units are locked upon library load: https://github.com/root-project/root/blob/612b68ea1f70c3f5ce7deb8a6b664b8a08987991/geom/geom/src/TGeoManager.cxx#L304. This issue requests two things:. - Please correct the README file to accurately state the default units (G4).; - Suggest a better mechanism to allow the user to establish the default units.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8695:1820,load,load,1820,https://root.cern,https://github.com/root-project/root/issues/8695,1,['load'],['load']
Performance,"ne TTree is provided then it will be used for all files.; If multiple TTrees are specified, each TTree is read from the respective file. Specifying branches:; Branches can be specified using one of the following flags. Currently only one can be used at a time. --all-branches; Reads every branch from the specified files and TTrees.; --branches bname1 [bname2...]; Reads the branches with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:1824,bottleneck,bottlenecks,1824,https://root.cern,https://github.com/root-project/root/pull/14039,2,"['bottleneck', 'throughput']","['bottlenecks', 'throughput']"
Performance,"nf=0x10a395fa0, addr=<optimized out>, buf=...) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1362; #36 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x109986ba0, conf=0x10a395fa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1405; #37 0x00007fffa92d3130 in TStreamerInfoActions::TConfiguredAction::operator() (this=0x109f4d790, this=0x109f4d790, object=0x109986ba0, buffer=...) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TStreamerInfoActions.h:123; #38 TBufferFile::ApplySequence (obj=0x109986ba0, sequence=..., this=0x7ffff83ea100) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:3580; #39 TBufferFile::ApplySequence (this=0x7ffff83ea100, sequence=..., obj=0x109986ba0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:3562; #40 0x00007fffa92de27c in TBufferFile::ReadClassBuffer (this=0x7ffff83ea100, cl=0x10a596170, pointer=0x109986ba0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TStreamerInfo.h:209; #41 0x00007fffa8f0d858 in TClass::ReadBuffer (this=<optimized out>, b=..., pointer=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6758; #42 0x00007fffa98ea688 in TMVA::Experimental::SOFIE::RModel::Streamer (R(bool)=..., this=0x109986ba0) at /builddir/build/BUILD/root-6.28.00/tmva/sofie/src/RModel.cxx:646; #43 TMVA::Experimental::SOFIE::RModel::Streamer (this=0x109986ba0, R(bool)=...) at /builddir/build/BUILD/root-6.28.00/tmva/sofie/src/RModel.cxx:644; #44 0x00007fffa8f0aa30 in TClass::StreamerTObject (pThis=0x10a596170, object=0x109986ba0, b=...) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6797; #45 0x00007fffa93abef0 in TClass::Streamer (onfile_class=0x0, b=..., obj=0x109986ba0, this=0x10a596170) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #46 TKey::ReadObjectAny (this=0x10aa98220, exp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:9807,optimiz,optimized,9807,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,ng /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm; 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm; 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm; 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm; 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm; 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm; 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:3701,Load,Loading,3701,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,ng /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm; 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm; 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:8966,Load,Loading,8966,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"ng at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fb46db2607d in TViewer3DPad::AddObject(TBuffer3D const&, bool*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGpad.so; #6 0x00007fb451224035 in TGeoPainter::PaintShape(TGeoShape const&, char const*) const () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #7 0x00007fb4512261ad in TGeoPainter::PaintVolume(TGeoVolume*, char const*, TGeoMatrix*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #8 0x00007fb451224a01 in TGeoPainter::Paint(char const*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #9 0x00007fb451222460 in TGeoPainter::DrawVolume(TGeoVolume*, char const*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #10 0x0000000000400a94 in main (); ===========================================================; ```. ### Expected behavior; Loading of the *.GDML file without issues - default behaviour for non-existing ""type"" argument. ### To Reproduce; 1. Create a GDML file with G4 (10.5) containing a tessellated object; 2. Importing it with ROOT TGeoManager::Import(). ### Setup; 1. ROOT version: 6.22.02; 2. Operating system: CC7; 3. How you obtained ROOT: built myself. ### Additional context; I add an example *gdml file with the missing ""type"" attribute in the tessellated object. The CAD part are here the simple ""Cubes"" for testing - tiny things at the very front. Don't get confused by the ""normal"" G4 geometry ""TPC' object in the center; [withTessCAD.gdml.zip](https://github.com/root-project/root/files/5583749/withTessCAD.gdml.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6868:3859,Load,Loading,3859,https://root.cern,https://github.com/root-project/root/issues/6868,1,['Load'],['Loading']
Performance,"ng expression, the value is never actually read from 'iyc' [clang-analyzer-deadcode.DeadStores]; 1: Although the value stored to 'iyc' is used in the enclosing expression, the value is never actually read from 'iyc' in /opt/root_src/tmva/tmvagui/src/network.cxx:54; /opt/root_src/tmva/tmvagui/src/regression_averagedevs.cxx:19:18: warning: Value stored to 'Nevt' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'Nevt' is never read in /opt/root_src/tmva/tmvagui/src/regression_averagedevs.cxx:19; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:283:18: warning: Division by zero [clang-analyzer-core.DivideZero]; 1: Calling 'findImage' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:273; 2: Assuming the condition is true in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:260; 3: 'fileFound' is true in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:262; 4: Taking true branch in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:262; 5: Returning pointer (loaded from 'img'), which participates in a condition later in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:267; 6: Returning from 'findImage' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:273; 7: Assuming 'img' is non-null in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:274; 8: Taking false branch in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:274; 9: Calling 'TImage::GetHeight' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 10: Returning zero in /opt/root_src/graf2d/graf/inc/TImage.h:229; 11: Returning from 'TImage::GetHeight' in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 12: 'h_' initialized to 0 in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:280; 13: Division by zero in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:283; /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714:16: warning: Value stored to 'dir' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'dir' is never read in /opt/root_src/tmva/tmvagui/src/tmvaglob.cxx:714; /opt/root_src/tmva/tmvagui/src/variables.cxx:186:7: warning: Value s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:143428,load,loaded,143428,https://root.cern,https://github.com/root-project/root/issues/7526,1,['load'],['loaded']
Performance,"ng something forbidden in root 6.24.00 ?. Best,. Jean-Baptiste. ### Describe the bug; I have a model with a single category, describing the shape of a distribution, with three unconstrained nuisance parameters, one constrained nuisance parameter and one parameter of interest. The three unconstrained NP describe the shape of the background and the background yield. The poi is proportional to the signal yield. The dataset is a background only dataset. . I can do the fit with as pdf : model_had1A = RooProdPdf (fsb_had1A, constbias_had1A) where; fsb = ns x fs + nb x fb, fs and fb are signal and background pdf, ns contains the poi, nb is free floating. It runs; smoothly even if we are close to the unphysical region (poi < 0). (Probably many error messages from the exploration of the unphysical region have been removed from the output.); I can also try a fit with the pdf : simPdf = RooSimultaneous (indexCat=had1A, had1A=model_had1A) : this is virtually the same pdf, but this time embeded in a RooSimultaneous object. The fit fails. Between the two root versions, one things that appeared weird to me is that fsb_had1A does not seem to be; normalized when embeded in the RooSimultaneous in root 6.24.00. Maybe that is fine, but this is different from; what I see in root 6.22.02. ### Expected behavior; I would expect exactly the same results in both fits, with a best fit poi = 0 and a reasonable uncertainty.; This is what I see in root-6.22.02. In root 6.24.00 the fit with a RooSimultaneous fails. . ### To Reproduce; I put the code here /afs/cern.ch/user/j/jdevivi/public/ISSUEROOFIT. In root-6.24.00, I just do ; root.exe testWSsimulvsprod.C. In root-6.22.02, I do; root.exe load.C testWSsimulvsprod.C; since I use a RooCrystalBall from root-6.24 and did not put the code in the workspace. Log files can be found in the same directory. ### Setup; ROOT version : 6.24.00; Operating system : macos 10.15.7 clang-12; I built root myself. But I also tried via a docker image built for ATLAS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8307:1805,load,load,1805,https://root.cern,https://github.com/root-project/root/issues/8307,1,['load'],['load']
Performance,"ng.so; #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #18 0x00007f1015f29b76 in clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #19 0x00007f1015f2b186 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #20 0x00007f101a3d01a1 in clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #21 0x00007f101a3d07e7 in clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #22 0x00007f101a3d17ee in clang::Preprocessor::HandleDirective(clang::Token&) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #23 0x00007f101a38f15d in clang::Lexer::LexTokenInt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:9645,load,loadModule,9645,https://root.cern,https://github.com/root-project/root/issues/15970,2,['load'],['loadModule']
Performance,"ng/src/TCling.cxx:2667; 10: Assuming the condition is false in /opt/root_src/core/foundation/inc/TClassEdit.h:188; 11: Returning zero, which participates in a condition later in /opt/root_src/core/foundation/inc/TClassEdit.h:188; 12: Returning from 'IsStdArray' in /opt/root_src/core/metacling/src/TCling.cxx:2667; 13: Taking false branch in /opt/root_src/core/metacling/src/TCling.cxx:2667; 14: Control jumps to 'case kNone:' at line 2686 in /opt/root_src/core/metacling/src/TCling.cxx:2685; 15: Execution continues on line 2712 in /opt/root_src/core/metacling/src/TCling.cxx:2688; 16: Field 'Indentation' is 2 in /opt/root_src/core/metacling/src/TCling.cxx:2714; 17: Taking true branch in /opt/root_src/core/metacling/src/TCling.cxx:2714; 18: Calling 'TClass::GetClassInfo' in /opt/root_src/core/metacling/src/TCling.cxx:2727; 19: Calling 'atomic::operator bool' in /opt/root_src/core/meta/inc/TClass.h:431; 20: Calling '__atomic_base::load' in /usr/include/c++/9/atomic:88; 21: Value assigned to field 'fClassInfo', which participates in a condition later in /usr/include/c++/9/bits/atomic_base.h:419; 22: Returning from '__atomic_base::load' in /usr/include/c++/9/atomic:88; 23: Returning from 'atomic::operator bool' in /opt/root_src/core/meta/inc/TClass.h:431; 24: Assuming the condition is false in /opt/root_src/core/meta/inc/TClass.h:431; 25: Left side of '&&' is false in /opt/root_src/core/meta/inc/TClass.h:431; 26: Returning pointer, which participates in a condition later in /opt/root_src/core/meta/inc/TClass.h:433; 27: Returning from 'TClass::GetClassInfo' in /opt/root_src/core/metacling/src/TCling.cxx:2727; 28: Assuming the condition is true in /opt/root_src/core/metacling/src/TCling.cxx:2727; 29: Taking true branch in /opt/root_src/core/metacling/src/TCling.cxx:2727; 30: Assuming 'scopeDecl' is non-null in /opt/root_src/core/metacling/src/TCling.cxx:2737; 31: Taking false branch in /opt/root_src/core/metacling/src/TCling.cxx:2737; 32: Assuming 'scopeDecl' is a 'CXXRecordDec",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7426:10361,load,load,10361,https://root.cern,https://github.com/root-project/root/issues/7426,1,['load'],['load']
Performance,"ng::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this; entry=0x55ed255fe680, input_line=..., compRes=; 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result; entry=0x0, disableValuePrinting=disableValuePrinting; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=; 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442; #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942; #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-sou",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:13220,optimiz,optimized,13220,https://root.cern,https://github.com/root-project/root/issues/9595,1,['optimiz'],['optimized']
Performance,"ng::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this; entry=0x55ed255fe680, input_line=..., compRes=; 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result; entry=0x0, disableValuePrinting=disableValuePrinting; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=; 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442; #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942; #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; ===========================================================. Root > pure virtual method called; terminate called without an active exception; Aborted (core dumpe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:27542,optimiz,optimized,27542,https://root.cern,https://github.com/root-project/root/issues/9595,1,['optimiz'],['optimized']
Performance,"nixSystem::Exec (shellcmd=<optimized out>, this=0x165c5b0) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x165c5b0) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fa771198e69 in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=<optimized out>) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/base/src/TErrorDefaultHandler.cxx:177; #5 0x00007fa77124a7d5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fa750f2eabe """", fmt=<optimized out>, ap=0x7fff0771d888) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/foundation/src/TError.cxx:153; #6 0x00007fa77124b302 in Fatal (location=<optimized out>, fmt=<optimized out>) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/foundation/src/TError.cxx:251; #7 0x00007fa750f2a19e in void std::__merge_adaptive<TTreeReaderArray<o2::trd::Tracklet64>::Iterator_t<TTreeReaderArray<o2::trd::Tracklet64> >, long, o2::trd::Tracklet64*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(o2::trd::Tracklet64, o2::trd::Tracklet64)> >(TTreeReaderArray<o2::trd::Tracklet64>::Iterator_t<TTreeReaderArray<o2::trd::Tracklet64> >, TTreeReaderArray<o2::trd::Tracklet64>::Iterator_t<TTreeReaderArray<o2::trd::Tracklet64> >, TTreeReaderArray<o2::trd::Tracklet64>::Iterator_t<TTreeReaderArray<o2::trd::Tracklet64> >, long, long, o2::trd::Tracklet64*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(o2::trd::Tracklet64, o2::trd::Tracklet64)>) () from /home/tdietel/alice/data/ole/sortbug_C.so; #8 0x00007fa750f27d24 in void std::__stable_sort_adaptive<TTreeReaderArray<o2::trd::Tracklet64>::Iterator_t<TTreeReaderArray<o2::trd::Tracklet64> >, o2::trd::Tracklet64*, long, __gnu_c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:5219,optimiz,optimized,5219,https://root.cern,https://github.com/root-project/root/issues/13314,2,['optimiz'],['optimized']
Performance,"nload / you built it yourself.; -->; ROOT master; Fedora 32; `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`; ### Additional context; <!--; Add any other context about the problem here.; -->; Stack trace of the reproducer; ```; Fill: Switching to new file: filemergerinput_1.root; Fill: Switching to new file: filemergerinput_2.root; Fill: Switching to new file: filemergeroutput_1.root; Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb); aborting; #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc; entry=0x7ffcc038dd08, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffcc038dd08, options=options; entry=0) at waitpid.c:38; #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120; #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174; #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:2614,optimiz,optimized,2614,https://root.cern,https://github.com/root-project/root/issues/6640,1,['optimiz'],['optimized']
Performance,"normalization range. When passing a range name to the `RooAbsPdf::fitTo` call, this is visible because new integrals will be created over the fit range, to fix the definition of the coefficients. I will refer to these integrals as coefnorm integrals.; In ROOT 6.28, coefnorm integrals for ranged fits of `RooAddPdf`s were changed. This, however, added several integrals that with the old method would not be evaluated. In particular:; - the new implementation is unable to elide coefnorm integrals over ranges equivalents to the full range; - in the new implementation, to every coefnorm integral over the fit range correspond an integral over an empty named range. This is separate to the integral with no range, which is also done; - calling `addPdf.fixAddCoefRange(fit_range)` before the fit (a common solution if you wanted to avoid coefnorm integrals) removes the unnamed range coefnorm integrals, but not the named range ones. Note, however, that in all the test I performed these integral do not seem to affect fit results, which are the same before and after 6.28.; Instead, the problem is that those integrals may not be easy to compute: this issue was noticed because among the extra integrals was a complex numeric integral that had to be evaluated at each event in the dataset, was extremely slow, and in practice caused the fit to never converge. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra integrals over unnamed ranges, passing the full range to fitTo does not add integrals, calling `fixAddCoefRange` removes all coefnorm integrals. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```Python; import ROOT; from ROOT.RooFit import RooConst. # in this simple example the symptoms are only ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12645:1480,perform,performed,1480,https://root.cern,https://github.com/root-project/root/issues/12645,1,['perform'],['performed']
Performance,"note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; In file included from input_line_3:2:; In file included from /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/include/Rtypes.h:34:; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:230:37: error: expected ';' at end of declaration list; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:240:18: error: expected ';' at end of declaration list; bad_typeid () _GLIBCXX_USE_NOEXCEPT { }; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/typeinfo:247:25: error: exception specification of overriding function is more lax than base version; virtual const char* what() const _GLIBCXX_USE_NOEXCEPT;; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/12.2.1/include/g++-v12/bits/exception.h:76:5: note: overridden virtual function is here; what() const _GLIBCXX_TXN_SAFE_DYN _GLIBCXX_NOTHROW;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; ```; Error with runtime_cxxmodules=ON; ```; [ 76%] Generating G__RIO.cxx, ../../lib/RIO.pcm; cd /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/io/io && /usr/bin/cmake -E env LD_LIBRARY_PATH=/var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib:/usr/bin/../lib: /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/core/rootcling_stage1/src/rootcling_stage1 -v2 -f G__RIO.cxx -cxxmodule -s /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/lib/libRIO.so -m Core.pcm -m Thread.pcm -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06 -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/ginclude -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/externals -excludePath /var/tmp/portage/sci-physics/root-6.26.06/work/root-6.26.06_build/builtins -",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11381:13680,load,loading,13680,https://root.cern,https://github.com/root-project/root/issues/11381,1,['load'],['loading']
Performance,"notebook (Failed); 	1437 - roottest-python-pickle-read (Failed); 	1496 - roottest-root-dataframe-regression_snapshot (Failed); 	1499 - roottest-root-dataframe-test_snapshot (Failed); 	1500 - roottest-root-dataframe-test_stringfiltercolumn (Failed); 	1501 - roottest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that te",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:2672,load,loaded,2672,https://root.cern,https://github.com/root-project/root/issues/7936,1,['load'],['loaded']
Performance,"nst*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #13 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #14 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #15 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #16 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; ...; ```. The unload() call here may free the Transaction T; (via IncrementalParser::deregisterTransaction) and return it to the pool.; But the code in findScope is protected by . ```; // The user wants to see the template instantiation, existing or not.; // Here we might not have an active transaction to handle; // the caused instantiation decl.; // Also quickFindDecl could trigger deserialization of decls.; Interpreter::PushTransactionRAII pushedT(m_Interpreter);; ```. The dtor of this runs when we hit the return above --- and this will; end up releasing the _same_ Transaction object to the pool. This version of the code in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:15434,Load,LoadClassDefault,15434,https://root.cern,https://github.com/root-project/root/issues/7657,1,['Load'],['LoadClassDefault']
Performance,"nst*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #30 0x00007ffff5619f76 in TClass::TClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #31 0x00007ffff561a48a in ROOT::CreateClass(char const*, short, std::type_info const&, TVirtualIsAProxy*, char const*, char const*, int, int) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #32 0x00007ffff562906a in ROOT::TGenericClassInfo::GetClass() (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #33 0x00007ffff5606b70 in TClass::LoadClassDefault(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #34 0x00007ffff560ee9c in TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patche; s/x86_64-centos7-gcc8-opt/lib/libCore.so; #35 0x00007ffff645805b in ?? (); #36 0x000000000000042e in ?? (); #37 0x00007fffefb8337e in TClingMethodInfo::TClingMethodInfo(TClingMethodInfo const&) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #38 0x00007ffff560f4b0 in ?? (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #39 0x00007fffffff3208 in ?? (); #40 0x00007fffffff3180 in ?? (); #41 0x000000010559b1b0 in ?? (); #42 0x0000000000000000 in ?? (); ```. The ultimate trigger here is what it usually is --- trying to find ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:8043,Load,LoadClassDefault,8043,https://root.cern,https://github.com/root-project/root/issues/7657,1,['Load'],['LoadClassDefault']
Performance,"nt.cxx:702; 4: Assuming 'npar' is < field 'fNumBuffers' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 5: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 6: Assuming 'maxsize' is < 0 in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:704; 7: Taking true branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:704; 8: Assuming the condition is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:705; 9: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:705; 10: Storing null pointer value in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:706; 11: 'isbinary' is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:713; 12: '?' condition is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:713; 13: 'isbinary' is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:714; 14: '?' condition is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:714; 15: Returning the value 1 (loaded from 'kTRUE'), which participates in a condition later in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:716; 16: Returning from 'TPgSQLStatement::SetSQLParamType' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:806; 17: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:806; 18: Null pointer passed as 1st argument to string copy function in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:808; /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:822:4: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Assuming 'size' is <= 'maxsize' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:818; 2: Taking false branch in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:818; 3: Calling 'TPgSQLStatement::SetSQLParamType' in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:820; 4: Assuming 'npar' is >= 0 in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 5: Left side of '||' is false in /opt/root_src/sql/pgsql/src/TPgSQLStatement.cxx:702; 6: A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7525:4559,load,loaded,4559,https://root.cern,https://github.com/root-project/root/issues/7525,1,['load'],['loaded']
Performance,"nt/src/var.cxx:5407; #16 0x00007fba331e12f1 in G__getitem (item=0xe73370 ""mgr->InitAnalysis()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1906; #17 0x00007fba331e5c70 in G__getexpr (expression=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1488; #18 0x00007fba331f2003 in G__test (expr=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1998; #19 0x00007fba33256ef4 in G__exec_if () at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/parse.cxx:1381; #20 G__exec_statement (mparen=mparen; entry=0x7ffcac8d188c) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/parse.cxx:7285; #21 0x00007fba3321462a in G__interpret_func (result7=result7; entry=0x7ffcac8d2400, funcname=<optimized out>, libp=libp; entry=0x7ffcac8d2440, hash=<optimized out>, p_ifunc=0x2243ac0, funcmatch=funcmatch; entry=1, memfunc_flag=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/ifunc.cxx:6710; #22 0x00007fba33204c22 in G__getfunction (item=item; entry=0xe65770 ""RunEtaC()"", known3=known3; entry=0x7ffcac8dcee4, memfunc_flag=<optimized out>, memfunc_flag; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/func.cxx:2901; #23 0x00007fba331e1752 in G__getitem (item=0xe65770 ""RunEtaC()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1918; #24 0x00007fba331e5c70 in G__getexpr (expression=expression; entry=0x2315180 ""RunEtaC()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1488; #25 0x00007fba331f090c in G__calc_internal (exprwithspace=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1071; #26",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:5205,optimiz,optimized,5205,https://root.cern,https://github.com/root-project/root/issues/6977,3,['optimiz'],['optimized']
Performance,nt/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:6895,Load,Loading,6895,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/cli",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:17063,optimiz,optimized,17063,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:7921,optimiz,optimized,7921,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:10533,optimiz,optimized,10533,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:11839,optimiz,optimized,11839,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:13145,optimiz,optimized,13145,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:14451,optimiz,optimized,14451,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:15757,optimiz,optimized,15757,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:9227,optimiz,optimized,9227,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,ntMethodIdx' is <= 0 in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 10: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 11: 'method' initialized here in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:392; 12: Value assigned to field 'fCurrentMethod' in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:398; 13: Assuming field 'fCurrentMethod' is not equal to null in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:400; 14: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:400; 15: Assuming the condition is true in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:406; 16: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:406; 17: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:407; 18: 'methCat' is null in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:408; 19: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:408; 20: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:410; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:761:13: warning: Value stored to 'sSelCut' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSelCut' during its initialization is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:761; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:762:13: warning: Value stored to 'bSelCut' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'bSelCut' during its initialization is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:762; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:787:10: warning: Value stored to 'sSelCut' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'sSelCut' is never read in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:787; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:788:10: warning: Value stored to 'bSelCut' is never read [,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:56880,load,loaded,56880,https://root.cern,https://github.com/root-project/root/issues/7526,1,['load'],['loaded']
Performance,"nterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^gettext@0.21%apple-clang@13.1.6+bzip2+curses+git~libunistring+libxml2+tar+xz arch=darwin-monterey-m1; [+] ^libffi@3.4.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^openssl@1.1.1q%apple-clang@13.1.6~docs~shared certs=mozilla patches=3fdcf2d arch=darwin-monterey-m1; [+] ^ca-certificates-mozilla@2022-07-19%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^sqlite@3.39.2%apple-clang@13.1.6+column_metadata+dynamic_extensions+fts~functions+rtree arch=darwin-monterey-m1; [+] ^unuran@1.8.1%apple-clang@13.1.6~gsl+rngstreams+shared arch=darwin-monterey-m1; [+] ^rngstreams@1.0.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^vdt@0.4.3%apple-clang@13.1.6~ipo~preload build_type=RelWithDebInfo arch=darwin-monterey-m1; [+] ^python@3.9.13%apple-clang@13.1.6+bz2+ctypes+dbm~debug+libxml2+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix~tkinter~ucs4+uuid+zlib patches=0d98e93,4c24573,f2fd060 arch=darwin-monterey-m1; [+] ^apple-libuuid@1353.100.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^bzip2@1.0.8%apple-clang@13.1.6~debug~pic+shared arch=darwin-monterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^ncurses@5.7.20081102%apple-clang@13.1.6~symlinks+termlib abi=5 patches=f84b270 arch=darwin-monterey-m1; [+] ^gettext@0.21%apple-clang@13.1.6+bzip2+curses+git~libunistring+libxml2+tar+xz arch=darwin-monterey-m1; [+] ^sqlite@3.39.2%apple-clang@13.1.6+column_metadata+dynamic_extensions+fts~functions+rtree arch=darwin-monterey-m1; [+] ^xz@5.2.5%apple-clang@13.1.6~pic libs=shared,static arch=darwin-monterey-m1; [+] ^xxhash@0.8.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^zstd@1.5.2%apple-clang@13.1.6~programs libs=shared,static arch=darwin-monterey-m1; </pre></details>. which results in the cmake command:; <details><summary>cmake",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11312:10452,optimiz,optimizations,10452,https://root.cern,https://github.com/root-project/root/issues/11312,1,['optimiz'],['optimizations']
Performance,"ntry=0, clockid=clockid; entry=1, abstime=abstime; entry=0x7af5721fe520, private=private; entry=0) at ./nptl/futex-internal.c:139; #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503; #4 ___pthread_cond_timedwait64 (cond=cond; entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex; entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime; entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652; #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73; #6 take_gil (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval_gil.h:256; #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _P",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:4975,optimiz,optimized,4975,https://root.cern,https://github.com/root-project/root/issues/15117,2,['optimiz'],['optimized']
Performance,"nymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567; #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:13053,optimiz,optimized,13053,https://root.cern,https://github.com/root-project/root/issues/15117,6,['optimiz'],['optimized']
Performance,"o : [dataset] : Added class ""Signal""; : Add Tree sig_tree of type Signal with 10000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg_tree of type Background with 10000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_Higgs_Classification.py"", line 141, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 overloaded methods succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Backgr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:11800,load,loader,11800,https://root.cern,https://github.com/root-project/root/issues/12429,2,['load'],['loader']
Performance,o load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5583,load,load,5583,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,o load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUtil; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ROOTTreeViewer; Failed to load module MathCore; Failed t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:2179,load,load,2179,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,o load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load m,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4110,load,load,4110,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,o load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5263,load,load,5263,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,o load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3367,load,load,3367,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,o load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3397,load,load,3397,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,o load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >F,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5748,load,load,5748,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,o load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load mod,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3794,load,load,3794,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,"o; #2 0x00007fff8ac49ad8 in system_compat () from /lib64/glibc-hwcaps/power9/libpthread-2.28.so; #3 0x00007fff7c7a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x16573fa50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007fff7ca8eefc in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:195; #7 0x00007fff7c7ac09c in TUnixSystem::DispatchSignals (this=0x16573fa50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3610; #8 0x00007fff7c7ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #9 0x00007fff7c7a308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #10 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=...,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:27960,optimiz,optimized,27960,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"oRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar sigma(""sigma"", ""width of gaussian"", 1, 0.1, 10);. RooGaussian gauss(""gauss"", ""gaussian PDF"", x, mean, sigma);. RooRealVar mean2(mean);. gauss.replaceServer(mean, mean2, true, false);; gauss.Print(""v"");. std::cout << ""x : "" << &gauss.getX() << std::endl;; std::cout << ""mean : "" << &gauss.getMean() << std::endl;; std::cout << ""sigma: "" << &gauss.getSigma() << std::endl;; ```. Here, the proxy for `mean` will still point to the original `mean`, but; the server was redirected to the copy `mean2`. This is dangerous, and; desyncing of the proxy and server list are actually the underlying; reason for a set of RooFit problems. The safter `RooAbsArg::redirectServers()` should always be used,; becauese that one is also updating the proxies. Therefore, the; `replaceServer()` interface is now marked as dangerous everywhere; possible: in a printout when you use it, in the docs, and with the; `R__SUGGEST_ALTERNATIVE` macro. Internally, the `replaceServer()` was also used in `redirectServers()`.; But this was also causing problems: `replaceServer()` always adds the; new server at the end of the server list, which means the list gets; reordered. This can confuse usercode that rely on the server list being; ordered (yes, that's not a good idea anyway, but there are many codes; that do this). This reordering can also be seein in the example code; above. Therefore, the `redirectServers()` function is now rewritten to replace; the server without changing its position in the server list. This also; means that the original server list doesn't need to be copied, as not; iterators are invalidated. Furthermore, the `redirectServers()` is more optimized now. Before, it; redundantly figured out whether a server was a value and/or shape; server. Now, this is figured out only once when removing the original; server from the client. In summary: this PR makes RooFit code safer and faster by changing; `RooAbsArg::redirectServers()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12040:1914,optimiz,optimized,1914,https://root.cern,https://github.com/root-project/root/pull/12040,1,['optimiz'],['optimized']
Performance,oad module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4423,load,load,4423,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,oad module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to loa,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4396,load,load,4396,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,oad module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to l,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:2906,load,load,2906,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,oad module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module RO,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5615,load,load,5615,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,oad module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Fai,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:2863,load,load,2863,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,"obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965; #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354; #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458; #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400; #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45; #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91; #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178; #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503; #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542; #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178; #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792; #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:3539; #21 0x00007fb64bd35246 in TTree::Merge (this=0x3c045e0, li=0x7ffcc0390e10, info=0x7ffcc0390f00) at /home/vpadulan",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:5562,optimiz,optimized,5562,https://root.cern,https://github.com/root-project/root/issues/6640,1,['optimiz'],['optimized']
Performance,"ocal/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227; #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType; entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668; #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126; #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37; #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215; #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this; entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr; entry=0x55ed2cd76b08, PerformInit=PerformInit; entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670; #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this; entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr; entry=0x55ed2cd76b08, PerformInit=PerformInit; entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481; #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this; entry=0x55ed2cce1280, D=<optimized out>, D; entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024; #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this; entry=0x55ed2cce1280, GD=..., GV=GV; entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793; #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenMo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:3707,Perform,PerformInit,3707,https://root.cern,https://github.com/root-project/root/issues/9595,4,['Perform'],['PerformInit']
Performance,"oday's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ```; geonwoo@geonwoo-VirtualBox:~$ root; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fd7d1a1bc2a in __GI___wait4 (pid=4287, stat_loc=stat_loc; entry=0x7ffdd0caeb28, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fd7d1a1bbeb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffdd0caeb28, options=options; entry=0) at waitpid.c:38; #2 0x00007fd7d198b0e7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fd7d203d1ce in TUnixSystem::StackTrace() () from /home/geonwoo/root/lib/libCore.so.6.22; #4 0x00007fd7d203a055 in TUnixSystem::DispatchSignals(ESignals) () from /home/geonwoo/root/lib/libCore.so.6.22; #5 <signal handler called>; #6 0x00007fd7d0566be6 in (anonymous namespace)::RedirectingFileSystemParser::uniqueOverlayTree((anonymous namespace)::RedirectingFileSystem*, (anonymous namespace)::Entry*, (anonymous namespace)::Entry*) () from /home/geonwoo/root/lib/libCling.so; #7 0x00007fd7d0566d05 in (anonymous namespace)::RedirectingFileSystemParser::uniqueOverlayTree((anonymous namespace)::RedirectingFileSystem*, (anonymous namespace)::Entry*, (anonymous namespace)::Entry*) () from /home/geonwoo/root/lib/libCling.so; #8 0x00007fd7d056c4c4 in (anonymous namespace)::RedirectingFileSystem::create(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, void (*)(llvm::SMDiagnostic const&, void*), ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6859:1353,optimiz,optimized,1353,https://root.cern,https://github.com/root-project/root/issues/6859,1,['optimiz'],['optimized']
Performance,"odeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346; #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394; #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344; #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271; #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230; #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317; #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this; entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431; #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this; entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406; #28 0x00007f54c2344859 in clang::Parser::ParseTopLevelDecl (this=0x55ed24fca480, Result=..., IsFirstDecl=IsFirstDecl; entry=false) at /usr/local/src/conda/clang_packages-9.0.1/lib/Parse/Parser.cpp:638; #29 0x00007f54c1bc1c81 in cling::IncrementalParser::ParseInternal (this=0x55ed24bb3d00, input=...) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #30 0x00007f54c1bc3c2d in c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:6031,optimiz,optimized,6031,https://root.cern,https://github.com/root-project/root/issues/9595,2,['optimiz'],['optimized']
Performance,odule RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5820,load,load,5820,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,odule RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_5:1:2: error: unknown type name 'ifdef'; >#ifdef PI; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_6:1:2: error: unknown type name 'ifdef'; >#ifdef ERROR; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >; > *** Break *** segmentation violat,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:6267,load,load,6267,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,odule XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expe,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5909,load,load,5909,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"oesn't work with embedded debugging info:; ```; epsftws build $ env CLING_DEBUG=1 EXTRA_CLING_ARGS='-gdwarf-5 -gembed-source' gdb -- bin/root.exe; GNU gdb (Gentoo 12.1 vanilla) 12.1; Copyright (C) 2022 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1222,load,load,1222,https://root.cern,https://github.com/root-project/root/pull/11882,1,['load'],['load']
Performance,"of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:2543,Throughput,Throughput,2543,https://root.cern,https://github.com/root-project/root/pull/14039,1,['Throughput'],['Throughput']
Performance,"ointer>, start=<synthetic pointer>, N=32, this=0x45a0a0) at src/thread_cache.h:238; #3 tcmalloc::ThreadCache::ReleaseToCentralCache (this=this@entry=0x45a040, src=src@entry=0x45a0a0, cl=<optimized out>, N=N@entry=32) at src/thread_cache.cc:206; #4 0x00007ffff57dff2c in tcmalloc::ThreadCache::ListTooLong (this=0x45a040, list=0x45a0a0, cl=<optimized out>) at src/thread_cache.cc:164; #5 0x00007ffff6dc2465 in TString::UnLink (this=0xcbb820) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/inc/TString.h:265; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007ffff68a2266 in TString::~TString (this=0xcbb820, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TString.cxx:249; #7 0x00007ffff68ac37f in TStyle::~TStyle (this=0xcbb500, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TStyle.cxx:478; #8 0x00007ffff68ac46c in TStyle::~TStyle (this=0xcbb500, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TStyle.cxx:483; #9 0x00007ffff68fa74e in TCollection::GarbageCollect (obj=0xcbb500) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/cont/src/TCollection.cxx:736; #10 0x00007ffff6902c6f in TList::Delete (this=0xcb8070, option=0x7ffff69efd24 """") at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/cont/src/TList.cxx:537; #11 0x00007ffff689635c in TROOT::EndOfProcessCleanups (this=0x7ffff6b34040 <ROOT::Internal::GetROOT1(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429:2631,optimiz,optimized,2631,https://root.cern,https://github.com/root-project/root/issues/13429,1,['optimiz'],['optimized']
Performance,"older is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; This solves the initial problem with the python tutorial that now can run without errors; ```; $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s; user 0m18.505s; sys 0m0.733s; ```. There is still something to discuss: the libraries under `install/lib` still have `LC_RPATH` pointing to `build/lib`:; ```; $ otool -l install/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6128:1451,Load,Load,1451,https://root.cern,https://github.com/root-project/root/pull/6128,3,['Load'],['Load']
Performance,ome/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm; 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm; 0.0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:9519,Load,Loading,9519,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,ome/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm; 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm; 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:9235,Load,Loading,9235,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,on is false. Execution continues on line 1290 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1287; 10: Loop condition is true. Entering loop body in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1293; 11: Assuming the condition is false in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 12: Taking false branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 13: The value 1073741823 is assigned to 'mid' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1302; 14: Assigned value is garbage or undefined in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1303; /opt/root_src/math/splot/src/TSPlot.cxx:959:23: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:959; /opt/root_src/math/splot/src/TSPlot.cxx:966:13: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:966; /opt/root_src/core/cont/inc/TBits.h; /opt/root_src/math/fumili/src/TFumili.cxx; /opt/root_src/math/genvector/src/3DConversions.cxx; /opt/root_src/math/genvector/src/AxisAngleXother.cxx; /opt/root_src/math/mathcore/inc/Fit/FitData.h; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h; /opt/root_src/math/mathcore/inc/TMath.h; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx; /opt/root_src/math/mathcore/src/GoFTest.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephes.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephesInv.cxx; /opt/root_src/math/mathcore/src/TKDTree.cxx; /opt/root_src/math/mathcore/src/TKDTreeBinning.cxx; /opt/root_src/math/mathcore/src/TMath.cxx; /opt/root_src/math/mathcore/src/triangle.c; /opt/root_src/math/matrix/inc/TMatrixT.h; /opt/root_src/math/matrix/inc/TVectorT.h; /opt/root_src/math/matrix/src/TDecompBK.cxx; /opt/root_src/math/matrix/src/TDecompLU.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:230815,load,loaded,230815,https://root.cern,https://github.com/root-project/root/issues/7458,1,['load'],['loaded']
Performance,"on module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime.; -- And then fallback to: 'c++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:9662,Perform,Performing,9662,https://root.cern,https://github.com/root-project/root/issues/10528,8,['Perform'],['Performing']
Performance,"on-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:16825,optimiz,optimized,16825,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"on/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b0691",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:17979,optimiz,optimized,17979,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"on: symbol '_ZN4ROOT12Experimental8RPadBase8UseStyleERKSt10shared_ptrINS0_6RStyleEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::UseStyle(std::shared_ptr<ROOT::Experimental::RStyle> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental9RDrawableE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RDrawable; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RPadBase; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:4800,load,load,4800,https://root.cern,https://github.com/root-project/root/issues/14587,1,['load'],['load']
Performance,"onal: share how it could be improved. The type information is stored, so an automatic conversion could be done. ### To Reproduce. ```python; import ROOT as gbl; gbl.gSystem.Load(""/afs/cern.ch/user/p/piedavid/public/delphes_bamboo/DelphesIO/libDelphesIO.so""); gbl.Electron; f = gbl.TFile.Open(""/afs/cern.ch/user/a/atalierc/public/snowmass/delphes_lhe_file_47_14TeV.lhe.root""); tree = f.Get(""Delphes""); df = gbl.ROOT.RDataFrame(tree); df.Define(""leadElPT"", ""Electron[0]->PT""); ```; where the last statement needs this to work (the typedef to distinguish the column and type name):; ```python; gbl.gInterpreter.Declare(""using delphes_electron = Electron;""); df.Define(""leadElPT1"", ""static_cast<delphes_electron*>(Electron[0])->PT""); ```; but for integration in an analysis framework, converting the container is more convenient. What I came up with is this:; ```C++; #include <TObjArray.h>; #include <ROOT/RVec.hxx>. namespace rdfhelpers {; template<typename OBJ>; ROOT::VecOps::RVec<OBJ*> objArrayToRVec(const TObjArray& arr) {; ROOT::VecOps::RVec<OBJ*> out{reinterpret_cast<OBJ**>(arr.GetObjectRef()), static_cast<std::size_t>(arr.GetEntries())};; auto it = *dynamic_cast<TObjArrayIter*>(arr.MakeIterator());; std::size_t i = 0;; while ( ( i != out.size() ) && ( out[i] == *it ) ) {; it.Next();; ++i;; }; if ( i != out.size() ) { // not equal to contiguous array, copy pointers; it.Reset();; const auto n = out.size();; out = ROOT::VecOps::RVec<OBJ*>();; out.reserve(n);; do {; out.push_back(static_cast<OBJ*>(*it));; } while ( it.Next() );; }; return out;; }; };; ```; then I can add a set of defines and use those containers instead:; ```python; df = df.Define(""myElectrons"", ""rdfhelpers::objArrayToRVec<delphes_electron>(Electron)""); df.Define(""leadElPT"", ""myElectrons[0]->PT""); ```. ### Setup; ROOT 6.24/00 from LCG_100 (x86_64-centos7-gcc10-opt) on lxplus. CC: @jnsandhya @selvaggi @pavel-demin (CMS upgrade performance study tools experts and Delphes maintainers, they may be interested as well)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8644:2382,perform,performance,2382,https://root.cern,https://github.com/root-project/root/issues/8644,1,['perform'],['performance']
Performance,"ontext about the problem here.; -->; <details>; <summary>GDB backtrace</summary>. ```; #0 0x00007ffff7f1e2c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2216c80) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #1 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2216c80) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #2 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x209f320, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #3 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x209f318, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #4 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x209f318, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #5 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x209f2f8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #6 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x209f2f8, this=<optimized out>) at /usr/include/c++/12/bits/new_allocator.h:181; #7 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x209f2f8, __a=...) at /usr/inclu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:3262,optimiz,optimized,3262,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"ooks a custom action for execution. The behavior of the action is completely dependent on the; Helper object provided by the caller. The minimum required interface for the helper is the following (more; methods can be present, e.g. a constructor that takes the number of worker threads is usually useful):. * Helper must publicly inherit from ROOT::Detail::TDF::TActionImpl<Helper>; * Helper(Helper &&): a move-constructor is required. Copy-constructors are discouraged.; * ColumnTypes_t: alias for a ROOT::TypeTraits::TypeList instantiation that specifies the types of the; columns to be passed to this action helper.; * Result_t: alias for the type of the result of this action helper. Must be default-constructible.; * ROOT::Detail::TDF::ColumnNames_t GetColumnNames() const: return the names of the columns processed by this; action. The number of names must be equal to the size of ColumnTypes_t.; * void Exec(unsigned int slot, ColumnTypes...columnValues): each working thread shall call this method; during the event-loop, possibly concurrently. No two threads will ever call Exec with the same 'slot' value:; this parameter is there to facilitate writing thread-safe helpers. The other arguments will be the values of; the requested columns for the particular entry being processed.; * void InitTask(TTreeReader *, unsigned int slot): each working thread shall call this method during the event; loop, before processing a batch of entries (possibly read from the TTreeReader passed as argument, if not null).; This method can be used e.g. to prepare the helper to process a batch of entries in a given thread. Can be no-op.; * void Initialize(): this method is called once before starting the event-loop. Useful for setup operations.; Can be no-op.; * void Finalize(): this method is called at the end of the event loop. Commonly used to finalize the contents; of the result.; * Result_t &PartialUpdate(unsigned int slot): this method is optional, i.e. can be omitted. If present, it should; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1905:1115,concurren,concurrently,1115,https://root.cern,https://github.com/root-project/root/pull/1905,1,['concurren'],['concurrently']
Performance,"oot-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x558efe2e6c50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007f3e5f919dd4 in TUnixSystem::DispatchSignals (this=0x558efe2e6c50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 <signal handler called>; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G\325Y\212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:7959,optimiz,optimized,7959,https://root.cern,https://github.com/root-project/root/issues/12428,1,['optimiz'],['optimized']
Performance,"oot_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838; #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940; #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this; entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943; #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332; #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename; entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers; entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths; entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode; entry=0x7f54bf620000 ""\n#line 1 \""test_cpp_ACLiC_dict dictionary payload\""\n\n#",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:7924,optimiz,optimized,7924,https://root.cern,https://github.com/root-project/root/issues/9595,3,['optimiz'],['optimized']
Performance,"oot_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #30 0x00007f54c1bc3c2d in cling::IncrementalParser::Compile (this=0x55ed24bb3d00, input=..., Opts=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838; #31 0x00007f54c1b27d93 in cling::Interpreter::DeclareInternal (this=0x55ed24bb2ca0, input=..., CO=..., T=0x0) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940; #32 0x00007f54c1b27e7c in cling::Interpreter::parseForModule (this=this; entry=0x55ed24bb2ca0, input=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:943; #33 0x00007f54c1a95fab in TCling::RegisterModule (this=0x55ed24bb1eb0, modulename=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=<optimized out>, payloadCode=<optimized out>, fwdDeclsCode=<optimized out>, triggerFunc=0x7f54bf61f170 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()>, fwdDeclsArgToSkip=..., classesHeaders=0x7f54bf622040 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::classesHeaders>, lateRegistration=false, hasCxxModule=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2332; #34 0x00007f54c8f4ec13 in TROOT::RegisterModule (modulename=modulename; entry=0x7f54bf6202bc ""test_cpp_ACLiC_dict"", headers=headers; entry=0x7f54bf6220b0 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::headers>, includePaths=includePaths; entry=0x7f54bf622060 <(anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl()::includePaths>, payloadCode=payloadCode; entry=0x7f54bf620000 ""n#line 1 ""test_cpp_ACLiC_dict dictionary payload""nn#ifnde",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:22271,optimiz,optimized,22271,https://root.cern,https://github.com/root-project/root/issues/9595,3,['optimiz'],['optimized']
Performance,"opt/root_src/core/foundation/inc/TClassEdit.h:188; 12: Returning from 'IsStdArray' in /opt/root_src/core/metacling/src/TCling.cxx:2667; 13: Taking false branch in /opt/root_src/core/metacling/src/TCling.cxx:2667; 14: Control jumps to 'case kNone:' at line 2686 in /opt/root_src/core/metacling/src/TCling.cxx:2685; 15: Execution continues on line 2712 in /opt/root_src/core/metacling/src/TCling.cxx:2688; 16: Field 'Indentation' is 2 in /opt/root_src/core/metacling/src/TCling.cxx:2714; 17: Taking true branch in /opt/root_src/core/metacling/src/TCling.cxx:2714; 18: Calling 'TClass::GetClassInfo' in /opt/root_src/core/metacling/src/TCling.cxx:2727; 19: Calling 'atomic::operator bool' in /opt/root_src/core/meta/inc/TClass.h:431; 20: Calling '__atomic_base::load' in /usr/include/c++/9/atomic:88; 21: Value assigned to field 'fClassInfo', which participates in a condition later in /usr/include/c++/9/bits/atomic_base.h:419; 22: Returning from '__atomic_base::load' in /usr/include/c++/9/atomic:88; 23: Returning from 'atomic::operator bool' in /opt/root_src/core/meta/inc/TClass.h:431; 24: Assuming the condition is false in /opt/root_src/core/meta/inc/TClass.h:431; 25: Left side of '&&' is false in /opt/root_src/core/meta/inc/TClass.h:431; 26: Returning pointer, which participates in a condition later in /opt/root_src/core/meta/inc/TClass.h:433; 27: Returning from 'TClass::GetClassInfo' in /opt/root_src/core/metacling/src/TCling.cxx:2727; 28: Assuming the condition is true in /opt/root_src/core/metacling/src/TCling.cxx:2727; 29: Taking true branch in /opt/root_src/core/metacling/src/TCling.cxx:2727; 30: Assuming 'scopeDecl' is non-null in /opt/root_src/core/metacling/src/TCling.cxx:2737; 31: Taking false branch in /opt/root_src/core/metacling/src/TCling.cxx:2737; 32: Assuming 'scopeDecl' is a 'CXXRecordDecl' in /opt/root_src/core/metacling/src/TCling.cxx:2742; 33: 'recordDecl' is non-null in /opt/root_src/core/metacling/src/TCling.cxx:2743; 34: Taking false branch in /opt/root_src",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7426:10563,load,load,10563,https://root.cern,https://github.com/root-project/root/issues/7426,1,['load'],['load']
Performance,opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong_t:' at line 185 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186:35: warning: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:68085,load,loaded,68085,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUShort_t:' at line 183 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184:35: warning: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:64691,load,loaded,64691,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,opt/root_src/tmva/tmva/src/Reader.cxx:406; /opt/root_src/tmva/tmva/src/Reader.cxx:443:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:432; 2: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:435; 3: Assuming 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 7: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:440; 8: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 10: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:443; /opt/root_src/tmva/tmva/src/Reader.cxx:535:22: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:519; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:519; 3: Value assigned to 'method' in /opt/root_src/tmva/tmva/src/Reader.cxx:526; 4: 'kl' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:528; 5: Assuming 'kl' is equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:530; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:530; 7: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/Reader.cxx:535; /opt/root_src/tmva/tmva/src/Reader.cxx:584:22: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Calling 'Reader::EvaluateRegression' in /opt/root_src/tmva/tmva/src/Reader.cxx:617; 2: Assuming the condition is fals,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:114161,load,loaded,114161,https://root.cern,https://github.com/root-project/root/issues/7526,1,['load'],['loaded']
Performance,optimize xml reading in TMVA (at least for CMS use case),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/584:0,optimiz,optimize,0,https://root.cern,https://github.com/root-project/root/pull/584,1,['optimiz'],['optimize']
Performance,"optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:7063,optimiz,optimized,7063,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,orkspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm; 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm; 0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:7031,Load,Loading,7031,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"ost cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```; 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):; error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned long); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooF",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:1153,load,load,1153,https://root.cern,https://github.com/root-project/root/issues/10203,1,['load'],['load']
Performance,"ost recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/root/cur/lib/ROOT/\_\_init__.py"", line 22, in <module> import cppyy; File ""/opt/root/cur/lib/cppyy/\_\_init__.py"", line 64, in <module> libcppyy_mod_name, major, minor)); ImportError: Failed to import libcppyy2_7. Please check that ROOT has been built for Python 2.7. However, I allowed Python 2 support in ROOT, and `python2` imports ROOT fine. A similar error was for Python 3, but Python 3 version for my PyPy and ROOT installations were different, so I checked that with Python 2. ### Describe the solution you'd like; Allow PyPy to use ROOT. ### Describe alternatives you've considered; I think that PyPy is the most general fast Python implementation (I didn't use other ones and not sure whether they will work with ROOT).; I've heard about `numba`, but it looks like it's mostly useful with numpy.; `Jython` didn't run when I tried it with `tox`. ### Additional context; I've sent a letter to PyPy developers, and this is what they [replied](https://mail.python.org/pipermail/pypy-dev/2021-May/016164.html):. > ROOT uses a fork of cppyy with several local modifications (and; it's also very much behind cppyy master). One of them is precisely this:; >; > \> ImportError: Failed to import libcppyy2_7. Please check that ROOT has; been built for Python 2.7; > ; > Which is referring to their ""multi-python"" build, a local ""invention."" But; also, libcppyy is not used in PyPy and should never be loaded directly for; portable use. (If they had stayed with standard Python platform tags, they; would not have to load it explicitly.); >; > \> Could you please add support of ROOT in PyPy?; >; > This really is on the ROOT folk to make their fork compatible with the; Python ecosphere, so file a bug report with them. There was a discussion on ROOT forum in 2019 (https://root-forum.cern.ch/t/how-to-start-pypy-with-root-module), but it didn't give any direct solution to the issue, and maybe something has changed since then.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8110:2343,load,loaded,2343,https://root.cern,https://github.com/root-project/root/issues/8110,2,['load'],"['load', 'loaded']"
Performance,"ot should behave the same on RHEL+EPEL 8 ppc64le and RHEL+EPEL 8 x86_64. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for RHEL+EPEL 8 on ppc64le using the default compiler -- g++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16); 2. Run tests. ### Setup; 1. ROOT version 6.28.00; 2. Operating system RHEL+EPEL 8 ppc64le; 3. Built from source. ### Additional context. How the build crashes with the SOFIE parser option enabled:. ~~~; ===========================================================; There was a crash (#5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa84f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa845a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8fa9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x1098e5850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa8fac1c8 in TUnixSystem::DispatchSignals (this=0x1098e5850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #6 0x00007fffa8fa308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #7 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:2098,optimiz,optimized,2098,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,"ot-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x59354f60) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #27 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x594d4bc0, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:5228,optimiz,optimized,5228,https://root.cern,https://github.com/root-project/root/issues/15738,6,['optimiz'],['optimized']
Performance,"ot-project/root/issues/12718; * https://github.com/root-project/root/issues/7686; * https://github.com/root-project/root/issues/11924; * https://github.com/root-project/root/issues/12230; * https://github.com/root-project/root/issues/11411; * https://github.com/root-project/root/issues/11596. ## Upstream contributions to cppyy in the context of this synchronization. - https://github.com/wlav/CPyCppyy/pull/11; - https://github.com/wlav/CPyCppyy/pull/12; - https://github.com/wlav/CPyCppyy/pull/14; - https://github.com/wlav/CPyCppyy/pull/16 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/17 *(was in PyROOT before)*; - https://github.com/wlav/cppyy-backend/pull/20 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/18; - https://github.com/wlav/CPyCppyy/pull/19; - https://github.com/wlav/CPyCppyy/pull/21; - https://github.com/wlav/CPyCppyy/pull/22; - https://github.com/wlav/CPyCppyy/pull/23. ## Performance validation. To validate the performance, I ran the [Python tests in roottest](https://github.com/root-project/roottest/tree/master/python) and the [PyROOT pythonization tests](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test) and compared runtimes with and without the cppyy upgrade. The total runtime of these tests reduced by about 4 % from 208 s to 287 s, so the performance impact of this PR is marginal. The runtime comparison for each test can be found in [cppyy_upgrade_test_runtimes.txt](https://github.com/root-project/root/files/14623432/cppyy_upgrade_test_runtimes.txt).; The worst observed performance penalty is 24 %. However, significant speedups are observed in some of the longer tests. For convenience, the 20 tests with the longest runtime are listed here:; ```; title no_cppyy_upgrade cppyy_upgrade ratio; python-regression-regression 32.61 34.30 1.051825; pyroot-pyz-rdataframe-asnumpy 14.30 14.61 1.021678; pyroot-pyz-rdataframe-makenumpy 13.66 9.65 0.706442; python-function-function 12.27 11.0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507:2752,perform,performance,2752,https://root.cern,https://github.com/root-project/root/pull/14507,1,['perform'],['performance']
Performance,"ou are probably missing the definition of vtable for ROOT::Experimental::RDrawable; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7ExecuteERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Execute(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase18SetDrawableVersionEm' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::SetDrawableVersion(unsigned long); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZTVN4ROOT12Experimental8RPadBaseE' unresolved while linking [cling interface function]!; You are probably missing the definition of vtable for ROOT::Experimental::RPadBase; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental8RPadBase13CollectSharedERSt6vectorIPNS0_8Internal13RIOSharedBaseESaIS5_EE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RPadBase::CollectShared(std::vector<ROOT::Experimental::Internal::RIOSharedBase*, std::allocator<ROOT::Experimental::Internal::RIOSharedBase*> >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental9RDrawable7DisplayERKNS1_15RDisplayContextE' unresolved while linking [cling interface function]!; You are probably missing the definition of ROOT::Experimental::RDrawable::Display(ROOT::Experimental::RDrawable::RDisplayContext const&); Maybe you need to load the corresponding shared library?; ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:5399,load,load,5399,https://root.cern,https://github.com/root-project/root/issues/14587,3,['load'],['load']
Performance,"out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #67 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:19017,optimiz,optimized,19017,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #85 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:22532,optimiz,optimized,22532,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"owing of declarations in the `std` namespace. In summary, given that ROOT issues an implicit `using namespace std;` and due to the way `SemaLookup` works, decls that shadow something in the `std` namespace cannot be referenced without using their fully-qualified name, i.e. `::xxx`.; See discussion in ROOT-5971 for the details. This pull-request improves the situation by emitting a warning for that case. ## Changes or fixes:; - Add `Interpreter::m_InputFlags`, which provides additional information about the context in which parsing occurs. In particular, the `kInputFromFile` and `kIFFLineByLine` flags allow to tell whether a sequence of calls to `Interpreter::process()` is issued from `MetaProcessor::readInputFromFile()` for the contents of an external file.; - Update cling's DefinitionShadower to emit a warning if a new declaration shadows a name in the `std` namespace (that became available via the implicit `using namespace std`). This diagnostic is disabled for unnamed macros, as input is typically ingested in a single `process()` call, which makes all the variables local to the generated wrapper. . This requires to change the lookup redeclaration kind to `NotForRedeclaration`, which has a performance penalty, given that the lookup will follow using directives, etc. This is approximately one order of magnitude slower than `ForVisibleRedeclaration` (see table below). The overhead seems acceptable given that this kind of lookup already occurs when a declaration is referenced and that definition is rare w.r.t. use.; ```; +-------------------------+-------------------------------+; | Redeclaration kind | Time (us) for 1000000 lookups |; +-------------------------+-------------------------------+; | ForVisibleRedeclaration | 27617 |; | NotForRedeclaration | 717458 |; +-------------------------+-------------------------------+; ```. ## Checklist:; - [X] tested changes locally. This PR improves the situation for [ROOT-5971](https://sft.its.cern.ch/jira/browse/ROOT-5971).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9788:1357,perform,performance,1357,https://root.cern,https://github.com/root-project/root/pull/9788,1,['perform'],['performance']
Performance,"oxy::PopProxy (this=0x7fffd4016090) at ../io/io/src/TGenCollectionProxy.cxx:1333; #1 0x00007ffff7d57a15 in TVirtualCollectionProxy::TPushPop::~TPushPop (this=0x7fffdc0dad20, __in_chrg=<optimized out>) at ../core/cont/inc/TVirtualCollectionProxy.h:65; #2 0x00007ffff76274b1 in TEmulatedCollectionProxy::Destructor (this=0x7fffd4016090, p=0x7fffd40156e0, dtorOnly=false) at ../io/io/src/TEmulatedCollectionProxy.cxx:87; #3 0x00007ffff7d4f8c2 in TClass::Destructor (this=0x7fffd40152c0, obj=0x7fffd40156e0, dtorOnly=false) at ../core/meta/src/TClass.cxx:5417; #4 0x00007ffff676afdb in TBranchElement::ReleaseObject (this=0x7fffd4017590) at ../tree/tree/src/TBranchElement.cxx:4743; #5 0x00007ffff676b265 in TBranchElement::ResetAddress (this=0x7fffd4017590) at ../tree/tree/src/TBranchElement.cxx:4806; #6 0x00007ffff675b10b in TBranchElement::~TBranchElement (this=0x7fffd4017590, __in_chrg=<optimized out>) at ../tree/tree/src/TBranchElement.cxx:982; #7 0x00007ffff675b338 in TBranchElement::~TBranchElement (this=0x7fffd4017590, __in_chrg=<optimized out>) at ../tree/tree/src/TBranchElement.cxx:1003; #8 0x00007ffff7ceae9f in TCollection::GarbageCollect (obj=0x7fffd4017590) at ../core/cont/src/TCollection.cxx:736; #9 0x00007ffff7cfbe70 in TObjArray::Delete (this=0x7fffd4011ab8) at ../core/cont/src/TObjArray.cxx:376; (More stack frames follow...). Thread 1 (Thread 0x7ffff42bec00 (LWP 312681) ""repro_ttreeproc""):; #0 0x00007ffff767d973 in TGenCollectionProxy::PopProxy (this=0x7fffd4016090) at ../io/io/src/TGenCollectionProxy.cxx:1333; #1 0x00007ffff656b78d in (anonymous namespace)::TCollectionLessSTLReader::GetSize (this=0x5555577ccb80, proxy=0x5555577cdde0) at ../tree/treeplayer/src/TTreeReaderArray.cxx:130; #2 0x0000555555561837 in ROOT::Internal::TTreeReaderArrayBase::GetSize (this=0x7fffffffc1c0) at /home/blue/ROOT/master/cmake-build-foo/include/TTreeReaderArray.h:35; #3 0x00005555555612bc in workload (r=...) at repro_ttreeprocmt.cpp:10; #4 0x0000555555563ef5 in std::__invoke_impl<vo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10357:2395,optimiz,optimized,2395,https://root.cern,https://github.com/root-project/root/issues/10357,1,['optimiz'],['optimized']
Performance,"oxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_0.9~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- 530/857 C++ tutorials have been activated.; -- 119/166 python tutorials have been activated.; -- ROOT Configuration . System Linux-5.11.0-051100-generic; Processor 4 core Intel(R) Core(TM) i7-6700HQ CPU @ 2.60GHz (x86_64); Build type RelWithDebInfo; Install path /usr/local; Compiler GNU 9.3.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -g -DNDEBUG; C++ -std=c++14 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -g -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_llvm builtin_lz4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7654:3745,Perform,Performing,3745,https://root.cern,https://github.com/root-project/root/issues/7654,12,['Perform'],['Performing']
Performance,"p; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT master; Fedora 32; `cmake -GNinja -Ddev=ON -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON -DCMAKE_INSTALL_PREFIX=$ROOT_INSTALL $ROOT_HOME`; ### Additional context; <!--; Add any other context about the problem here.; -->; Stack trace of the reproducer; ```; Fill: Switching to new file: filemergerinput_1.root; Fill: Switching to new file: filemergerinput_2.root; Fill: Switching to new file: filemergeroutput_1.root; Fatal in <TFileMerger::RecursiveRemove>: Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb); aborting; #0 0x00007fb64aa08eca in __GI___wait4 (pid=307930, stat_loc=stat_loc; entry=0x7ffcc038dd08, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fb64aa08e8b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffcc038dd08, options=options; entry=0) at waitpid.c:38; #2 0x00007fb64a984aa7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fb64d2901a2 in TUnixSystem::Exec (this=0x1ce7800, shellcmd=0x3dc6940 ""/home/vpadulan/Programs/rootproject/rootinstall/debugtest/etc/gdb-backtrace.sh 307906 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120; #4 0x00007fb64d290a08 in TUnixSystem::StackTrace (this=0x1ce7800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007fb64d1328b7 in DefaultErrorHandler (level=6000, abort_bool=true, location=0x7fb64a12d1e4 ""TFileMerger::RecursiveRemove"", msg=0x376e0b0 ""Output file of the TFile Merger (targeting filemergeroutput.root) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TErrorDefaultHandler.cxx:174; #6 0x00007fb64d203bf5 in ErrorHandler(Int_t, const char *, const char",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:2472,optimiz,optimized,2472,https://root.cern,https://github.com/root-project/root/issues/6640,1,['optimiz'],['optimized']
Performance,"p_fit_parameters);; FunctionMinimum min_simplex0 = simplex0(); // FPE; exit(0);; }; ```; ```; g++ simplex.cc -o simplex.exe $(root-config --glibs --cflags) -lMinuit2; ./simplex.exe; ```; results in . ```; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=0x7ffcf9555c48, fcn=..., st=..., strategy=..., maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:120; #8 0x00007f045c905c51 in ROOT::Minuit2::MnApplication::operator() (this=0x7ffcf9555b00, maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/MnApplication.cxx:57; #9 0x000000000041068c in main (); ===========================================================; ```. ### Setup; CentOS7/gcc-4.8.5 root 6.22 from EPEL . ### Additional context; Not a personal priority of me, so it is unlikely that I will provode a patch in the next days.; However, I can briefly describe how the FPE occurs.; It occurs on line 48 in SimplexBuilder when all parameters are fixed and 1./double(n) is always 1/0. So it is just plain crash, not an FPE.; T",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:2143,optimiz,optimized,2143,https://root.cern,https://github.com/root-project/root/issues/6775,1,['optimiz'],['optimized']
Performance,"pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #20 std::shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const>::~shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #21 ROOT::Internal::RDF::RColumnRegister::~RColumnRegister (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RColumnRegister.hxx:43; #22 ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::~RInterface (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RInterface.hxx:104; #23 main (argc=<optimized out>, argv=<optimized out>) at /home/yan/codes/RDF_bug_report/main.cxx:82; ```; </details>. <details>; <summary>ROOT backtrace</summary>. ```; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; rax 0xfffffffffffffe00 rbx 0x00007ffe6d80d638 rcx 0x00007ff0e8af95c7; rdx 0x0000000000000000 rsi 0x00007ffe6d80d638 rdi 0x00000000000d979c; rbp 0x00007ffe6d80d6a0 rsp 0x00007ffe6d80d628 r8 0x0000000000000001; r9 0x0000000000000000 r10 0x0000000000000000 r11 0x0000000000000202; r12 0x0000000000000000 r13 0x00007ffe6d80d660 r14 0x00007ffe6d80df50;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:11046,optimiz,optimized,11046,https://root.cern,https://github.com/root-project/root/issues/12023,2,['optimiz'],['optimized']
Performance,"pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #27 std::shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const>::~shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #28 ROOT::Internal::RDF::RColumnRegister::~RColumnRegister (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RColumnRegister.hxx:43; #29 ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::~RInterface (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RInterface.hxx:104; #30 main (argc=<optimized out>, argv=<optimized out>) at /home/yan/codes/RDF_bug_report/main.cxx:82; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:21899,optimiz,optimized,21899,https://root.cern,https://github.com/root-project/root/issues/12023,2,['optimiz'],['optimized']
Performance,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module FitPanel; Failed to load module Unuran; Failed to load module Quadp; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Fai,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:867,load,load,867,https://root.cern,https://github.com/root-project/root/issues/14964,32,['load'],['load']
Performance,pcm'; Failed to load module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load module ROOT_F,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:1864,load,load,1864,https://root.cern,https://github.com/root-project/root/issues/11901,30,['load'],['load']
Performance,ple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4847,load,load,4847,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"plugin, otherwise heavy checks in the PluginHandler take place that perform interpreter lookups. Fixes #15579",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15816:68,perform,perform,68,https://root.cern,https://github.com/root-project/root/pull/15816,1,['perform'],['perform']
Performance,prepareForParsing is where Cling creates temporary FileID in order to; perform a lookup. However this gives extra AST contents to module(pcm); and resulted in enormous pcm size and a startup time overhead. We can; cache FileID when the given code is same and return already existing; FileID instead of creating exactly the same one. ```; master; cpu time = 0.291462 seconds; sys time = 0.064409 seconds; res memory = 345.816 Mbytes; vir memory = 573.508 Mbytes; patch; cpu time = 0.235828 seconds; sys time = 0.098327 seconds; res memory = 260.012 Mbytes; vir memory = 377.945 Mbytes; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2464:71,perform,perform,71,https://root.cern,https://github.com/root-project/root/pull/2464,2,"['cache', 'perform']","['cache', 'perform']"
Performance,"preter/cling/lib/MetaProcessor/MetaParser.cpp:147:9; #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12; #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33; #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24; #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29; #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10; #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27; #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20; #11 0x7fffd78dd08b (<unknown module>); #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3; #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20; #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29; #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:819:9; #16 0x7fffea151826 in cling:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8041:2238,Load,Load,2238,https://root.cern,https://github.com/root-project/root/pull/8041,1,['Load'],['Load']
Performance,"ptimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa13a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x173f45850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa13ac1c8 in TUnixSystem::DispatchSignals (this=0x173f45850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #6 0x00007fffa13a308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #7 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=..., this=0x7fffd51c79a0) at /usr/include/c++/8/new:169; #9 llvm::orc::ExecutionSession::lookup (this=0x1740989b0, SearchOrder=std::vector",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:20187,optimiz,optimized,20187,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"ptimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa80f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa805a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8ba9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x11eee5850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa8bac1c8 in TUnixSystem::DispatchSignals (this=0x11eee5850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #6 0x00007fffa8ba308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #7 0x00007fffa8b9d428 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fffa8db70c0 <textinput::TerminalConfigUnix::Get()::s>, signum=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #8 0x00007fffa8b9d47c in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #9 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:13319,optimiz,optimized,13319,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"ptimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa84f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa845a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8fa9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x1098e5850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa8fac1c8 in TUnixSystem::DispatchSignals (this=0x1098e5850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #6 0x00007fffa8fa308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #7 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=..., this=0x7ffff83e9070) at /usr/include/c++/8/new:169; #9 llvm::orc::ExecutionSession::lookup (this=0x1099d16e0, SearchOrder=std::vector",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:2681,optimiz,optimized,2681,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:19900,optimiz,optimized,19900,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:28548,optimiz,optimized,28548,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:22526,optimiz,optimized,22526,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:31174,optimiz,optimized,31174,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:23839,optimiz,optimized,23839,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:32487,optimiz,optimized,32487,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:21213,optimiz,optimized,21213,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:29861,optimiz,optimized,29861,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"ptimized out>, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:4969; #24 0x00007fffa92e0724 in TBufferFile::ReadObjectAny (this=0x7ffff83ea100, clCast=0x10a861920) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:2458; #25 0x00007fffa9389c44 in TGenCollectionStreamer::ReadObjects (this=0x10a861070, nElements=<optimized out>, b=..., onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:395; #26 0x00007fffa938a6f8 in TGenCollectionStreamer::ReadBufferGeneric (this=<optimized out>, b=..., obj=0x109986cc0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1368; #27 0x00007fffa93850a8 in TGenCollectionStreamer::ReadBufferDefault (this=0x10a861070, b=..., obj=0x109986cc0, onFileClass=0x0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1302; #28 0x00007fffa9384f00 in TGenCollectionStreamer::ReadBuffer (this=<optimized out>, b=..., obj=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1232; #29 0x00007fffa933ff7c in TCollectionClassStreamer::Stream (onfileClass=0x10a860aa0, obj=0x109986cc0, b=..., this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:177; #30 TCollectionClassStreamer::Stream (this=<optimized out>, b=..., obj=0x109986cc0, onfileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:172; #31 0x00007fffa8f04014 in TClass::StreamerExternal (pThis=<optimized out>, object=0x109986cc0, b=..., onfile_class=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6783; #32 0x00007fffa92db554 in TClass::Streamer (onfile_class=0x10a860aa0, b=..., obj=<optimized out>, this=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #33 TBufferFile::ReadFastArray (streamer=0x0, onFileClass=0x10a86",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:7340,optimiz,optimized,7340,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"ptimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:26320,optimiz,optimized,26320,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"ptimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:34968,optimiz,optimized,34968,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"pyROOT uses special thread for events processing, where `gSystem->ProcessEvents()` are called.; Both in script and interactive mode. Problem that thread id is not known from beginning and changing once when running python in script mode. Therefore special mode is now implemented, which simply uses `gSystem->ProcessEvents()` calls to allow processing; of web-windows communication. RWebWindow simply ""trust"" that ProcessEvents will not be called concurrently. Also improve timeout handling in THttpServer and in TWebCanvas. Both using special timers to process their events.; While it is not always possible `TurnOn/TurnOff` timers (it fails from inside timeout handler), just increase/decrease timeout interval, but always let run timer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13630:447,concurren,concurrently,447,https://root.cern,https://github.com/root-project/root/pull/13630,1,['concurren'],['concurrently']
Performance,"pyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:594; #30 0x00007fff7cb4f480 in CPyCppyy::CPPMethod::ExecuteFast (ctxt=<optimized out>, offset=<optimized out>, self=<optimized out>, this=0x16ae03d30) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #31 CPyCppyy::CPPMethod::Execute (this=0x16ae03d30, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #32 0x00007fff7cb4fe44 in CPyCppyy::CPPMethod::Call (this=0x16ae03d30, self=; 0x7fff6b79ae90: 0x7fff6b533fc0, args=0x7fff7cc54b08, kwds=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783; #33 0x00007fff7cb56de8 in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fff6b79ae80, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /usr/include/c++/8/bits/move.h:74; #34 0x00007fff7cb93498 in CPyCppyy::tpp_call (pytmpl=0x7fff6b53b228, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:598; #35 0x00007fff8a3d0fec in _PyObject_FastCallKeywords () from /lib64/libpython3.6m.so.1.0; #36 0x00007fff8a3d1ed4 in call_function () from /lib64/libpython3.6m.so.1.0; #37 0x00007fff8a3d2fb4 in _PyEval_EvalFrameDefault () from /lib64/libpython3.6m.so.1.0; #38 0x00007fff8a39a880 in fast_function () from /lib64/libpython3.6m.so.1.0; #39 0x00007fff8a3d1cb8 in call_function () from /lib64/libpython3.6m.so.1.0; #40 0x00007fff8a3d2fb4 in _PyEval_EvalFrameDef",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:32981,optimiz,optimized,32981,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"r ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for versions 3.10.4 (Main) and 2.7.18; -- Looking for ZLib; -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.12""); -- Looking for nlohmann/json.hpp; -- nlohmann/json.hpp not found. Switching on builtin_nlohmannjson option; -- Looking for Freetype; -- Found Freetype: /usr/lib/libfreetype.so (found version ""2.12.1""); -- Looking for PCRE; -- Found PCRE: /usr/include (found version ""8.45""); -- Looking for LZMA; -- Looking for lzma_auto_decoder in /usr/lib/liblzma.so; -- Looking for lzma_auto_decoder in /usr/lib/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10528:1629,Perform,Performing,1629,https://root.cern,https://github.com/root-project/root/issues/10528,4,['Perform'],['Performing']
Performance,"r()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0; entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243; #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::ProcessWork (this=this; entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205; #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373; #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364; #39 fair::mq::DeviceRunner::Run (this=this; entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182; #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51; ===========================================================; ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372; * https://alice.its.cern.ch/jira/browse/O2-2532",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:52156,optimiz,optimized,52156,https://root.cern,https://github.com/root-project/root/issues/8931,3,['optimiz'],['optimized']
Performance,"r, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this=0x1ab6a80) at /usr/include/c++/12/bits/hashtable.h:2500; #11 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (this=0x1ab6a80, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/hashtable.h:1584; #12 std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::~unordered_map (this=0x1ab6a80, __",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:6618,optimiz,optimized,6618,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"r, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear (this=0x1cf6570) at /usr/include/c++/12/bits/hashtable.h:2500; #18 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (this=0x1cf6570, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/hashtable.h:1584; #19 std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::~unordered_map (this=0x1cf6570, __",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:17471,optimiz,optimized,17471,https://root.cern,https://github.com/root-project/root/issues/12023,2,['optimiz'],['optimized']
Performance,"r/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007ff0e9305774 in TUnixSystem::DispatchSignals (this=0x691200, sig=kSigSegmentationViolation) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #10 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #11 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #12 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x22dedd8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #13 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x22dedd8, this=<optimized out>) at /usr/include/c++/12/bits/new_allocator.h:181; #14 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, tr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:13863,optimiz,optimized,13863,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"race looks typically like this; ```; #5 0x00007fc5a101e282 in TPad::ExecuteEvent(int, int, int) (this=0x5960390, event=21, px=1031, py=120) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:2149; #6 0x00007fc5a100442d in TCanvas::HandleInput(EEventType, int, int) (this=0x3566d70, event=kButton1Motion, px=637, py=120) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TCanvas.cxx:1291; #7 0x00007fc5a156c04b in TRootEmbeddedCanvas::HandleContainerMotion(Event_t*) (this=0x3565110, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TRootEmbeddedCanvas.cxx:387; #8 0x00007fc5a14a19f1 in TGFrame::HandleEvent(Event_t*) (this=0x35665d0, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TGFrame.cxx:531; #9 0x00007fc5a1458a48 in TGClient::HandleEvent(Event_t*) (this=0x2e17e80, event=0x7ffe06062550) at /usr/src/debug/root-6.22.02/gui/gui/src/TGClient.cxx:843; #10 0x00007fc5a1458f85 in TGClient::ProcessOneEvent() (this=this; ```. I was able to trace the problem to the math operations performed in the TPad.cxx and TPavelabel.cxx and it looks in many cases there are simply divisions by zero. e.g. in TPaveLabel.cxx instead of . ```; Double_t wh = (Double_t)gPad->XtoPixel(gPad->GetX2());; Double_t hh = (Double_t)gPad->YtoPixel(gPad->GetY1());; Double_t labelsize, textsize = GetTextSize();; Int_t automat = 0;; if (GetTextFont()%10 > 2) { // fixed size font specified in pixels; labelsize = GetTextSize();; } else {; if (TMath::Abs(textsize -0.99) < 0.001) automat = 1;; if (textsize == 0) { textsize = 0.99; automat = 1;}; Int_t ypixel = TMath::Abs(gPad->YtoPixel(y1) - gPad->YtoPixel(y2));; labelsize = textsize*ypixel/hh;; if (wh < hh) labelsize *= hh/wh;; }; ```; One can have; ```; Double_t wh = gPad->XtoPixel(gPad->GetX2())==0?1.0:(Double_t)gPad->XtoPixel(gPad->GetX2());; Double_t hh = gPad->YtoPixel(gPad->GetY1())==0?1.0:(Double_t)gPad->YtoPixel(gPad->GetY1());; ....; ```. In the TPad.cxx there are many unsafe operations in the TPad::ExecuteEvent and TPa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344:1257,perform,performed,1257,https://root.cern,https://github.com/root-project/root/issues/6344,1,['perform'],['performed']
Performance,"rain(ws->argSet(""norm_bkg,gamma_stat_CR_bin_0,gamma_stat_SR_bin_0,gamma_stat_SR_bin_1,gamma_stat_SR_bin_2,gamma_stat_SR_bin_3,gamma_stat_SR_bin_4,gamma_stat_SR_bin_5,gamma_stat_SR_bin_6,gamma_stat_SR_bin_7,gamma_stat_SR_bin_8,gamma_stat_SR_bin_9,gamma_stat_SR_bin_10,norm_bkg,gamma_stat_CR_bin_0,gamma_stat_SR_bin_0,gamma_stat_SR_bin_1,gamma_stat_SR_bin_2,gamma_stat_SR_bin_3,gamma_stat_SR_bin_4,gamma_stat_SR_bin_5,gamma_stat_SR_bin_6,gamma_stat_SR_bin_7,gamma_stat_SR_bin_8,gamma_stat_SR_bin_9,gamma_stat_SR_bin_10"")),GlobalObservables(ws->argSet(""nominalLumi,nom_gamma_stat_CR_bin_0,nom_gamma_stat_SR_bin_0,nom_gamma_stat_SR_bin_1,nom_gamma_stat_SR_bin_2,nom_gamma_stat_SR_bin_3,nom_gamma_stat_SR_bin_4,nom_gamma_stat_SR_bin_5,nom_gamma_stat_SR_bin_6,nom_gamma_stat_SR_bin_7,nom_gamma_stat_SR_bin_8,nom_gamma_stat_SR_bin_9,nom_gamma_stat_SR_bin_10,nominalLumi,nom_gamma_stat_CR_bin_0,nom_gamma_stat_SR_bin_0,nom_gamma_stat_SR_bin_1,nom_gamma_stat_SR_bin_2,nom_gamma_stat_SR_bin_3,nom_gamma_stat_SR_bin_4,nom_gamma_stat_SR_bin_5,nom_gamma_stat_SR_bin_6,nom_gamma_stat_SR_bin_7,nom_gamma_stat_SR_bin_8,nom_gamma_stat_SR_bin_9,nom_gamma_stat_SR_bin_10"")));. std::cout << ""starting point : "" << nll->getVal() << std::endl;; RooArgSet params(*nll->getParameters((RooArgSet*)0));; params.Print(""v"");; ; gErrorIgnoreLevel = 0;; ROOT::Minuit2::MnPrint::ClearFilter();; ROOT::Math::MinimizerOptions::SetDefaultPrintLevel(2);; ; RooMinimizer mini(*nll);; mini.setMaxFunctionCalls(10000);; mini.setMaxIterations(175000);; mini.setPrintLevel(2);; mini.optimizeConst(1);; mini.setMinimizerType(""Minuit2"");; mini.setEvalErrorWall(1);; mini.setOffsetting(1);; mini.setPrintEvalErrors(5);; mini.setVerbose(0);; mini.setProfile(1);; mini.setStrategy(2);; mini.setEps(0.001);; ; std::cout << ""starting minimization"" << std::endl;; ; mini.minimize(""Minuit2"",""Migrad"");. // the call to nll->getVal() here seems to break it; std::cout << ""nll val at minimum is "" << nll->getVal() << std::endl;; ; mini.hesse();; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7659:2230,optimiz,optimizeConst,2230,https://root.cern,https://github.com/root-project/root/issues/7659,1,['optimiz'],['optimizeConst']
Performance,rame-redefine; 397/1231 Test #373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview ............. Passed 1.07 sec; Start 375: gtest-tree-dataframe-test-dataframe-definepersample; 398/1231 Test #374: gtest-tree-dataframe-test-dataframe-redefine ........................ Passed 3.63 sec; Start 376: gtest-tree-dataframe-test-dataframe-simple; 399/1231 Test #375: gtest-tree-dataframe-test-dataframe-definepersample ................. Passed 3.06 sec; Start 377: gtest-tree-dataframe-test-dataframe-helpers; 400/1231 Test #368: gtest-tree-dataframe-test-dataframe-interface ....................... Passed 21.83 sec; Start 378: gtest-tree-dataframe-test-dataframe-vecops; 401/1231 Test #378: gtest-tree-dataframe-test-dataframe-vecops .......................... Passed 3.95 sec; Start 379: gtest-tree-dataframe-test-dataframe-snapshot; 402/1231 Test #377: gtest-tree-dataframe-test-dataframe-helpers ......................... Passed 8.48 sec; Start 380: gtest-tree-dataframe-test-dataframe-display; 403/1231 Test #365: gtest-tree-dataframe-test-dataframe-cache ........................... Passed 44.39 sec; Start 381: gtest-tree-dataframe-test-dataframe-ranges; Start 382: gtest-tree-dataframe-test-dataframe-leaves; 405/1231 Test #381: gtest-tree-dataframe-test-dataframe-ranges .......................... Passed 2.10 sec; Start 383: gtest-tree-dataframe-test-dataframe-resptr; 406/1231 Test #383: gtest-tree-dataframe-test-dataframe-resptr .......................... Passed 0.61 sec; Start 384: gtest-tree-dataframe-test-dataframe-take; 407/1231 Test #382: gtest-tree-dataframe-test-dataframe-leaves .......................... Passed 2.14 sec; Start 385: gtest-tree-dataframe-test-dataframe-entrylist; 408/1231 Test #385: gtest-tree-dataframe-test-dataframe-entrylist ....................... Passed 0.90 sec; Start 386: gtest-tree-dataframe-test-dataframe-merge-results; 409/1231 Test #386: gtest-tree-dataframe-test-dataframe-merge-results ................... Passed 0.54 sec; Start 387: gtest-tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:3189,cache,cache,3189,https://root.cern,https://github.com/root-project/root/pull/10300,1,['cache'],['cache']
Performance,"rapper.cxx:778; #20 0x00007f5b8de527cf in CallT<unsigned char> (args=<optimized out>, nargs=<optimized out>, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816; #21 Cppyy::CallB(long, void*, unsigned long, void*) (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:833; #22 0x00007f5b8decdc0f in GILCallB (ctxt=0x7f5b79ae0430, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:69; #23 CPyCppyy::(anonymous namespace)::BoolExecutor::Execute(Cppyy::TCppMethod_t, Cppyy::TCppObject_t, CPyCppyy::CallContext*) (this=<optimized out>, method=<optimized out>, self=<optimized out>, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:148; #24 0x00007f5b8deba4c9 in CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>, this=<optimized out>) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #25 0x00007f5b8debd3a8 in CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (this=this entry=0x55e760617f50, self=0x55e75ccfd080, offset=0, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #26 0x00007f5b8debb6fa in CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (this=this entry=0x55e760617f50, self=self entry=0x55e75ccfd080, offset=<optimized out>, ctxt=ctxt entry=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728; #27 0x00007f5b8debc46c in CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (this=0x55e760617f50, self= 0x7f5b8080ef50: 0x7f5b808043c0, args=0x7f5b8e1ab040, kwds=<optimized out>, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783; #28 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9139:2578,optimiz,optimized,2578,https://root.cern,https://github.com/root-project/root/pull/9139,5,['optimiz'],['optimized']
Performance,"rapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #21 0x00007fff76908a68 in TClingCallFunc::make_wrapper (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1006; #22 0x00007fff76908e78 in TClingCallFunc::IFacePtr (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:2004; #23 0x00007fff7682c3bc in TCling::CallFunc_IFacePtr (this=<optimized out>, func=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:7888; #24 0x00007fff7ca8f81c in GetCallFunc (method=<optimized out>) at /usr/include/c++/8/bits/locale_facets.h:877; #25 WrapperCall (method=6088041216, nargs=2, args_=0x7fffc4480880, self=0x16b1482f0, result=0x16b0b6990) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (method=6088041216, self=0x16b1482f0, nargs=2, args=0x7fffc4480880, result_type=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:594; #30 0x00007fff7cb4f480 in CPyCppyy::CPPMethod::ExecuteFast (ctxt=<optimized out>, offset=<optimized out>, self=<optimized out>, this=0x16ae03d30) at /builddir/build/BUILD/root-6.28.00/bindings/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:31627,optimiz,optimized,31627,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"rashes in TStreamerInfo::AddReadAction. See original report: https://github.com/cms-sw/cmsdist/pull/6314#issuecomment-721115953. With the recent updates to switch more std::pair's TClass to be auto-generated from the typename (as opposed to generated from interpreter information), more STL's collection TClass have their StreamerInfo build earlier. In the case above, a file is being fast cloned and thus the StreamerInfo to the new file. In particular there is this sequence of operation. * Get `TClass` for `pair(type1, vector<type2>>`; ** At this point the dictionary for `vector<type2>` is not loaded.; ** The TClass for the pair is generated nonetheless; *** This requires the building of the `StreamerInfo` for the `TClass` for `vector<type2>`, let's call it `c1` but (intentionaly because it is not needed yet) does not trigger the loading of the dictionary the `vector<type2>`; * Some other operation requires the loading of the library that contains the dictionary for `vector<type2>`; ** SInce `c1` exists, it is replaced by the dictionary generated TClass for `vector<type2>`, let's call it `c2`; ** Part of this replacement is to transfer `c1`'s StreamerInfo into `c2` (after 'reseting` it's state); * Then the `StreamerInfos` are copied form the input file to the output ; ** This includes ""building"" and ""compiling"" the StreamerInfo; *** This crasesd when calling `AddReadAction`. An STL collection's TClass (like `c1` and `c2`)'s StreamerInfo contains an artificial StreamerElement (for infrastructures purposes) that points back to its owner. So when the `StreamerInfo` is created it has internally a pointer to `c1`. The deficiency is that when`c1` is replaced by `c2` and then deleted, the StreamerInfo was not updated and thus the later building of the `StreamerInfo` was using a stale pointer to `c1`. ```; #4 <signal handler called>; #5 0x00002af4f3e84290 in TStreamerInfo::AddReadAction (this=0x2af506a31000, readSequence=0x2af536e87740, i=0, compinfo=0x2af59072d588) at /data/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6767:890,load,loading,890,https://root.cern,https://github.com/root-project/root/issues/6767,2,['load'],['loading']
Performance,raw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4782,load,load,4782,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,rc/BidirMMapPipe.cxx:1880]: (error) Memory leak: s; [tree/tree/src/TLeaf.cxx:222]: (error) Memory leak: countname; [tree/tree/src/TLeaf.cxx:226]: (error) Memory leak: countname; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfS; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfB. [roofit/roofitcore/src/RooAbsArg.cxx:280]: (style) Redundant checking of STL container element existence before removing it. [core/dictgen/src/rootcling_impl.cxx:457]: (performance) Possible inefficient checking for 'fieldSelRules' emptiness.; [core/dictgen/src/rootcling_impl.cxx:4573]: (performance) Possible inefficient checking for 'filesIncludedByLinkdef' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:322]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:374]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:419]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:475]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:587]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:787]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [html/src/TDocParser.cxx:684]: (performance) Possible inefficient checking for 'currentType' emptiness.; [proof/proofd/src/XrdProofdManager.cxx:804]: (performance) Possible inefficient checking for 'uwrks' emptiness.; [proof/proofd/src/XrdProofdSandbox.cxx:467]: (performance) Possible inefficient checking for 'staglst' emptiness.; [proof/proofd/src/XrdProofdSandbox.cxx:571]: (performance) Possible inefficient checking for 'actln' emptiness.; [roofit/roofitcore/src/RooSimWSTool.cxx:574]: (performance) Possible inefficient checking for 'slist' emptiness. all the reports Prefer prefix ++/-- oper,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1343:2733,perform,performance,2733,https://root.cern,https://github.com/root-project/root/pull/1343,1,['perform'],['performance']
Performance,rc/Rotated.cxx:396; 110: 'align' is not equal to MLEFT in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 111: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 112: 'align' is not equal to BLEFT in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 113: Left side of '||' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 114: 'align' is equal to NONE in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 115: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:396; 116: 'bg' is 1 in /opt/root_src/graf2d/x11/src/Rotated.cxx:412; 117: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:412; 118: Assuming 'xpoints' is null in /opt/root_src/graf2d/x11/src/Rotated.cxx:419; 119: Taking true branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:419; 120: Potential leak of memory pointed to by 'item' in /opt/root_src/graf2d/x11/src/Rotated.cxx:419; /opt/root_src/graf2d/x11/src/Rotated.cxx:1205:18: warning: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') [clang-analyzer-core.NullDereference]; 1: Calling 'XRotPaintAlignedString' in /opt/root_src/graf2d/x11/src/Rotated.cxx:328; 2: Assuming 'text' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:349; 3: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:349; 4: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:351; 5: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:351; 6: Loop condition is false. Execution continues on line 356 in /opt/root_src/graf2d/x11/src/Rotated.cxx:354; 7: Loop condition is false. Execution continues on line 358 in /opt/root_src/graf2d/x11/src/Rotated.cxx:356; 8: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:361; 9: Left side of '&&' is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:361; 10: Calling 'XRotRetrieveFromCache' in /opt/root_src/graf2d/x11/src/Rotated.cxx:366; 11: Assuming the condition is false in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7432:91756,load,loaded,91756,https://root.cern,https://github.com/root-project/root/issues/7432,1,['load'],['loaded']
Performance,"rc/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542; #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520; #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591; #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463; #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436; #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795; #64 0x00007f54c943fe5e in TRint::Run (this=this; entry=0x55ed24b82e70, retrn=retrn; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446; #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83; ===========================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:14829,optimiz,optimized,14829,https://root.cern,https://github.com/root-project/root/issues/9595,1,['optimiz'],['optimized']
Performance,"rc/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:567; #22 0x00007af5870dddb3 in CPyCppyy::tpp_call (pytmpl=0x7af5722e0040, args=0x7af5722a9750, kwds=0x7af5722d6280) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywords=keywords; entry=0x0) at Objects/call.c:215; #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112; #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99; #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123; #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067; #31 PyEval_EvalCode (co=co; entry=0x7af586c71b00, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200) at Python/ceval.c:1134; #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291; #33 run_mod (mod=<optimized out>, filena",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:14550,optimiz,optimized,14550,https://root.cern,https://github.com/root-project/root/issues/15117,2,['optimiz'],['optimized']
Performance,"rceptor_dlopen.part.267+102>, nsid=<optimized out>, argc=37, argv=<optimized out>, env=0x61600030f680) at dl-open.c:876; 2187: #17 0x00007f2a61bc5f8a in dlopen_doit () from /lib64/libdl.so.2; 2187: #18 0x00007f2a61750964 in _dl_catch_exception () from /lib64/libc.so.6; 2187: #19 0x00007f2a61750a23 in _dl_catch_error () from /lib64/libc.so.6; 2187: #20 0x00007f2a61bc652e in _dlerror_run () from /lib64/libdl.so.2; 2187: #21 0x00007f2a61bc602a in dlopen; 2187:; 2187: GLIBC_2.2.5 () from /lib64/libdl.so.2; 2187: #22 0x00000000002ce7f6 in __interceptor_dlopen.part.267 (); 2187: #23 0x00007f2a50c02ffb in cling::utils::platform::DLOpen (Path=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", Err=0x7f2a5e651200) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; 2187: #24 0x00007f2a5087994c in cling::DynamicLibraryManager::loadLibrary (this=<optimized out>, libStem=..., permanent=<optimized out>, resolved=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:375; 2187: #25 0x00007f2a508d6dce in cling::Interpreter::loadLibrary (this=0x614000001840, filename=..., lookup=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1469; 2187: #26 0x00007f2a508d8d67 in cling::Interpreter::loadFile (this=0x614000001840, filename=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", allowSharedLib=<optimized out>, T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; 2187: #27 0x00007f2a50bbe9cd in cling::MetaSema::actOnLCommand (this=<optimized out>, file=..., transaction=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; 2187: #28 0x00007f2a50bb2dc8 in cling::MetaParser::isLCommand (this=this; 2187: entry=0x7f2a5e5cf670, actionResult=; 2187: 0x7f2a5e5cf780: cling::MetaSema::AR_Success) at /home/jhahnfel/ROOT/src/interpreter/cling/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:4173,optimiz,optimized,4173,https://root.cern,https://github.com/root-project/root/issues/11867,4,['optimiz'],['optimized']
Performance,rder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_5:1:2: error: unknown type name 'ifdef'; >#ifdef PI; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_6:1:2: error: unknown type name 'ifdef'; >#ifdef ERROR;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:6145,load,load,6145,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"re"", ""new_jersey"",; ""new_mexico"", ""new_york"", ""north_carolina"", ""north_dakota"",; ""ohio"", ""oklahoma"", ""oregon"", ""pennsylvania"",; ""rhode_island"", ""south_carolina"", ""south_dakota"", ""tennessee"",; ""texas"", ""utah"", ""vermont"", ""virginia"",; ""washington"", ""west_virginia"", ""wisconsin"", ""wyoming""; };; Double_t pop[nx] = {; 4708708, 6595778, 2889450, 36961664, 5024748, 3518288, 885122, 18537969,; 9829211, 1545801, 12910409, 6423113, 3007856, 2818747, 4314113, 4492076,; 1318301, 5699478, 6593587, 9969727, 5266214, 2951996, 5987580, 974989,; 1796619, 2643085, 1324575, 8707739, 2009671, 19541453, 9380884, 646844,; 11542645, 3687050, 3825657, 12604767, 1053209, 4561242, 812383, 6296254,; 24782302, 2784572, 621760, 7882590, 6664195, 1819777, 5654774, 544270; };. Double_t lon1 = -130;; Double_t lon2 = -65;; Double_t lat1 = 24;; Double_t lat2 = 50;; TH2Poly *p = new TH2Poly(""USA"",""USA Population"",lon1,lon2,lat1,lat2);; gErrorIgnoreLevel = 9999;; TFile::SetCacheFileDir(""."");; TFile *f = TFile::Open(""http://root.cern/files/usa.root"", ""CACHEREAD"");. if (!f) {; printf(""Cannot access usa.root. Is internet working ?\n"");; return;; }. // Define the TH2Poly bins.; TMultiGraph *mg;; TKey *key;; TIter nextkey(gDirectory->GetListOfKeys());; while ((key = (TKey*)nextkey())) {; TObject *obj = key->ReadObj();; if (obj->InheritsFrom(""TMultiGraph"")) {; mg = (TMultiGraph*)obj;; p->AddBin(mg);; }; }. // Fill TH2Poly.; printf(""nx = %d\n"",nx);; for (i=0; i<nx; i++) {; printf(""%s %f\n"",states[i], pop[i]); // commenting this line make it fail; p->Fill(states[i], pop[i]);; }. gStyle->SetOptStat(11);; p->DrawClone(""COL"");; }; ```. When the macro is run in compiled mode it is fine. The histogram has 48 entries. ```; root sg50b.C++; ```. When it is run in interpreted mode it is fine if we keep the `printf` in the filling loop but it is failing if we comment it.; In that case only one bin is filled. The number of entries is 1 instead of 48. ### ROOT version. Master. ### Operating system. MacOS - Intel Processor",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14598:1758,CACHE,CACHEREAD,1758,https://root.cern,https://github.com/root-project/root/issues/14598,1,['CACHE'],['CACHEREAD']
Performance,"re/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so; #15 0x00007f0bcbd35f7c in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) () from /nix/store/1dspsr9mq9f5s2vp29fks49wnmx6cjr2-root-6.22.08/lib/libCling.so; ===========================================================. Root >; ```. * On ROOT version 6.25/01 from the master branch; ```; $ root -l; root [0] ROOT::VecOps::RVec<double> v({2., 3., 1.});; root [1] Take(v, 2); (ROOT::VecOps::RVec<double>) { 2.0000000, 3.0000000 }; root [2] ROOT::VecOps::RVec<double> firstTwo = Take(v, 2);; IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerC1EPNS1_15DynamicExprInfoEPN5clang11DeclContextEPKcPNS_11InterpreterE' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'!; You are probably missing the definition of cling::runtime::internal::LifetimeHandler::LifetimeHandler(cling::runtime::internal::DynamicExprInfo*, clang::DeclContext*, char const*, cling::Interpreter*); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN5cling7runtime8internal15LifetimeHandlerD1Ev' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'!; You are probably missing the definition of cling::runtime::internal::LifetimeHandler::~LifetimeHandler(); Maybe you need to load the corresponding shared library?; root [3] .q. $ root -l; root [0] ROOT::VecOps::RVec<double> v {2., 3., 1.};; root [1] auto firstTwo2 = Take(v, 2);; ROOT_prompt_1:1:1: error: Syntax error; auto firstTwo2 = Take(v, 2);; ^; FunctionDecl 0x2b43f38 <input_line_9:1:1, ROOT_prompt_1:3:1> input_line_9:1:6 __cling_Un1Qu31 'void (void *)'; |-ParmVarDecl 0x2b43e80 <col:22, col:28> col:28 vpClingValue 'void *'; |-CompoundStmt 0x2b442c0 <col:42, ROOT_prompt_1:3:1>; | |-DeclStmt 0x2b442a0 <line:1:1, col:28>; | | `-VarDecl 0x2b44018 <col:1, col:27> col:6 firstTwo2 'auto' cinit; | | `-CallExpr 0x2b4427",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9261:9740,load,load,9740,https://root.cern,https://github.com/root-project/root/issues/9261,2,['load'],['load']
Performance,"re/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:22119,optimiz,optimized,22119,https://root.cern,https://github.com/root-project/root/issues/8931,12,['optimiz'],['optimized']
Performance,"reamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUInt: ReadBasicPointer(UInt_t); continue;; Target 0: (repro.out) stopped.; (lldb); Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf184 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char** const&, TStreamerInfo::TCompInfo* const*, int, int, int, int, int) [inlined] TBuffer::BufferSize(this=0x000060e00010ef00) const at TBuffer.h:98:41 [opt]; 95 	 TObject *GetParent() const;; 96 	 char *Buffer() const { return fBuffer; }; 97 	 char *GetCurrent() const { return fBufCur; }; -> 98 	 Int_t BufferSize() const { return fBufSize; }; 99 	 void DetachBuffer() { fBuffer = nullptr; }; 100 	 Int_t Length() const { return (Int_t)(fBufCur - fBuffer); }; 101 	 void Expand(Int_t newsize, Bool_t copy = kTRUE); // expand buffer to newsize; Target 0: (repro.out) stopped.; (lldb) p fBufSize; (Int_t) 32008; (lldb) s; Process 13498 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = step in; frame #0: 0x00000001044cf194 libRIO.so`int TStreamerInfo::ReadBuffer<char**>(this=<unavailable>, b=<unavailable>, arr=<unavailable>, compinfo=<unavailable>, first=<unavailable>, last=<unavailable>, narr=<unavailable>, eoffset=<unavailable>, arrayMode=0) at TStreamerInfoReadBuffer.cxx:923:65 [opt]; 920 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong: ReadBasicPointer(Long_t); continue;; 921 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kLong64: ReadBasicPointer(Long64_t); continue;; 922 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kFloat: ReadBasicPointer(Float_t); continue;; -> 923 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kDouble: ReadBasicPointer(Double_t); continue;; 924 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUChar: ReadBasicPointer(UChar_t); continue;; 925 	 case TStreamerInfo::kOffsetP + TStreamerInfo::kUShort: ReadBasicPointer(UShort_t); continue;; 926 	 case TStre",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16501:2727,queue,queue,2727,https://root.cern,https://github.com/root-project/root/pull/16501,1,['queue'],['queue']
Performance,"rectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, thi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:22483,optimiz,optimized,22483,https://root.cern,https://github.com/root-project/root/issues/8931,2,['optimiz'],['optimized']
Performance,"redhat-linux/bits/gthr-default.h:778; #12 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x10993f430) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #13 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x10993f430) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x109984c70, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:583; #15 0x00007fffa3050770 in cling::IncrementalExecutor::getPointerToGlobalFromJIT (this=0x1099ceb50, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #16 0x00007fffa2f9fee4 in cling::Interpreter::compileFunction (this=0x10994ea90, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #17 0x00007fffa2efea78 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fffa2f067e8 in TClingCallFunc::make_ctor_wrapper (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1215; #19 0x00007fffa2f07164 in TClingCallFunc::ExecDefaultConstructor (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name="""", address=0x0, nary=0) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1895; #20 0x00007fffa2f1838c in TClingClassInfo::New (this=0x10a9e3870, normCtxt=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingClassInfo.cxx:1098; #21 0x00007fffa2e2cdf4 in TCling::ClassInfo_New (this=<optimized out>, cinfo=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:8290; #22 0x00007fffa8f0be24 in TClass::NewObject (this=0x10a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:5156,optimiz,optimized,5156,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"redhat-linux/bits/gthr-default.h:778; #15 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x16584c2e0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #16 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x16584c2e0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #17 cling::IncrementalJIT::getSymbolAddress (this=0x1657ff820, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #18 0x00007fff76a50690 in cling::IncrementalExecutor::getPointerToGlobalFromJIT (this=0x165848f30, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #19 0x00007fff7699fe04 in cling::Interpreter::compileFunction (this=0x165715770, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #20 0x00007fff768fea38 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #21 0x00007fff76908a68 in TClingCallFunc::make_wrapper (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1006; #22 0x00007fff76908e78 in TClingCallFunc::IFacePtr (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:2004; #23 0x00007fff7682c3bc in TCling::CallFunc_IFacePtr (this=<optimized out>, func=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:7888; #24 0x00007fff7ca8f81c in GetCallFunc (method=<optimized out>) at /usr/include/c++/8/bits/locale_facets.h:877; #25 WrapperCall (method=6088041216, nargs=2, args_=0x7fffc4480880, self=0x16b1482f0, result=0x16b0b6990) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (m",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:30569,optimiz,optimized,30569,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,ree-dataframe-test-dataframe-take ............................ Passed 2.19 sec; Start 388: gtest-tree-dataframe-test-dataframe-vary; 411/1231 Test #387: gtest-tree-dataframe-test-dataframe-samplecallback .................. Passed 1.09 sec; Start 389: gtest-tree-dataframe-test-datasource-more; 412/1231 Test #380: gtest-tree-dataframe-test-dataframe-display ......................... Passed 10.54 sec; Start 390: gtest-tree-dataframe-test-datasource-root; Start 391: gtest-tree-dataframe-test-datasource-trivial; 414/1231 Test #390: gtest-tree-dataframe-test-datasource-root ........................... Passed 4.54 sec; Start 392: gtest-tree-dataframe-test-datasource-lazy; 415/1231 Test #392: gtest-tree-dataframe-test-datasource-lazy ........................... Passed 0.28 sec; Start 393: gtest-tree-dataframe-test-datasource-csv; 416/1231 Test #388: gtest-tree-dataframe-test-dataframe-vary ............................ Passed 6.93 sec; Start 394: gtest-tree-dataframe-test-dataframe-concurrency; 417/1231 Test #379: gtest-tree-dataframe-test-dataframe-snapshot ........................ Passed 20.68 sec; Start 395: gtest-tree-dataframe-test-datasource-ntuple; 418/1231 Test #389: gtest-tree-dataframe-test-datasource-more ........................... Passed 7.48 sec; Start 396: gtest-tree-dataframe-test-datasource-sqlite; 419/1231 Test #395: gtest-tree-dataframe-test-datasource-ntuple ......................... Passed 1.80 sec; Start 397: pyunittests-dataframe-misc; 420/1231 Test #393: gtest-tree-dataframe-test-datasource-csv ............................ Passed 3.56 sec; Start 398: pyunittests-dataframe-histograms; 421/1231 Test #391: gtest-tree-dataframe-test-datasource-trivial ........................ Passed 6.48 sec; Start 399: pyunittests-dataframe-cache; 422/1231 Test #396: gtest-tree-dataframe-test-datasource-sqlite ......................... Passed 4.60 sec; Start 400: pyunittests-dataframe-merge-results; 423/1231 Test #397: pyunittests-dataframe-misc .........................,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:5192,concurren,concurrency,5192,https://root.cern,https://github.com/root-project/root/pull/10300,1,['concurren'],['concurrency']
Performance,rence]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:403; 11: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 12: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 13: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:406; /opt/root_src/tmva/tmva/src/Reader.cxx:443:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:432; 2: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:435; 3: Assuming 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 4: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:437; 5: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 6: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:439; 7: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:440; 8: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:441; 10: Access to field 'fDat,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:113114,load,loaded,113114,https://root.cern,https://github.com/root-project/root/issues/7526,1,['load'],['loaded']
Performance,"require.js was used in jupyter notebook by default, therefore was used; also for JSROOT. In jupyter lab one can load JSROOT direcrtly. ; If JSROOT fails to load from static location, default; https://root.cern/js/notebook/ version will be used",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6180:112,load,load,112,https://root.cern,https://github.com/root-project/root/pull/6180,2,['load'],['load']
Performance,"ring the dictionary build twice.; See the result of $ grep -r ""Generating G__Imt"" core/imt; core/imt/CMakeFiles/Imt.dir/build.make:@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --blue --bold --progress-dir=/Users/axel/build/root/cmake/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) ""Generating G__Imt.cxx, ../../lib/libImt.rootmap""; core/imt/CMakeFiles/G__Imt.dir/build.make:@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --blue --bold --progress-dir=/Users/axel/build/root/cmake/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) ""Generating G__Imt.cxx, ../../lib/libImt.rootmap"". With this change, G__Imt.cxx has only one target:; $ grep -r ""Generating G__Imt"" core/imt; core/imt/CMakeFiles/G__Imt.dir/build.make:@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --blue --bold --progress-dir=/Users/axel/build/root/cmake/CMakeFiles --progress-num=$(CMAKE_PROGRESS_1) ""Generating G__Imt.cxx, ../../lib/libImt.rootmap"". This fixes sporadic build problems due to two targets creating the same output file concurrently:; [ 73%] Generating G__Imt.cxx, ../../lib/libImt.rootmap; Scanning dependencies of target G__Imt; [ 73%] Generating G__Imt.cxx, ../../lib/libImt.rootmap; [ 73%] Building CXX object core/imt/CMakeFiles/Imt.dir/G__Imt.cxx.o; g++: error: /mnt/build/workspace/lcg_release_tar/BUILDTYPE/Debug/COMPILER/native/LABEL/ubuntu16/build/projects/ROOT-6.16.00/src/ROOT-6.16.00-build/core/imt/G__Imt.cxx: No such file or directory; g++: fatal error: no input files; compilation terminated.; core/imt/CMakeFiles/Imt.dir/build.make:106: recipe for target 'core/imt/CMakeFiles/Imt.dir/G__Imt.cxx.o' failed; make[5]: *** [core/imt/CMakeFiles/Imt.dir/G__Imt.cxx.o] Error 1; [ 73%] Built target G__Imt; make[5]: Target 'core/imt/CMakeFiles/Imt.dir/build' not remade because of errors.; CMakeFiles/Makefile2:18311: recipe for target 'core/imt/CMakeFiles/Imt.dir/all' failed; make[4]: *** [core/imt/CMakeFiles/Imt.dir/all] Error 2. (cherry picked from commit a3e7a3c535b80c3a6cf0883a0bf8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3636:1167,concurren,concurrently,1167,https://root.cern,https://github.com/root-project/root/pull/3636,1,['concurren'],['concurrently']
Performance,"ring); [Notebook file](https://drive.google.com/file/d/1se_HHE1YcwhwEsrihEeFq2llPNtEo9xc/view?usp=sharing); [YAML file for conda](https://drive.google.com/file/d/1cFovrs1n3A3ap-n9TDjvcJCXtQvNkRSY/view?usp=sharing) (made via `conda env export --name ENVNAME > envname.yml`); [TXT file for conda](https://drive.google.com/file/d/1vi96YXfesiLvO9lvm7fPix8CY3s4JDlS/view?usp=sharing) (made via `conda list --explicit > pkgs.txt`, so this is OS-specific). **Text version of code:**; ```; import ROOT as rt; # ipywidgets for nice visualizations, as per tutorial setup; !jupyter nbextension enable --py widgetsnbextension; # now let's enable JsMVA; %jsmva on. outputFile = rt.TFile( ""TMVA.root"", 'RECREATE' ); rt.TMVA.Tools.Instance(); factory = rt.TMVA.Factory(""TMVAClassification"", TargetFile=outputFile,; V=False, Color=True, DrawProgressBar=True, Transformations=[""I"", ""D"", ""P"", ""G"", ""D""],; AnalysisType=""Classification""). dataset = ""tmva_class_example"" #the dataset name; loader = rt.TMVA.DataLoader(dataset); loader.AddVariable('var0','var0','D'); loader.AddVariable('var1','var1','D'). # now get the input file; input = 'input_00.root'; input = rt.TFile.Open(input). sig = input.Get('ts'); bck = input.Get('tb'). sig_weight = 1.; bck_weight = 1.; loader.AddSignalTree(sig,sig_weight) # I crash here; #loader.AddBackgroundTree(bck,bck_weight); ```; **The error:**; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /opt/conda/envs/hw/lib/python3.7/site-packages/JupyROOT/helpers/utils.py in post_execute(self); 347 else:; 348 for t in transformers:; --> 349 (out, err, otype) = t(out, err); 350 if otype == 'html':; 351 IPython.display.display(HTML(out)). /opt/conda/envs/hw/lib/python3.7/site-packages/JsMVA/OutputTransformer.py in transform(self, output, error); 330 self.addClassForOutputFlag(Header.group(5)); 331 self.__currentHeaderName = Header.group(2); --> 332 self.__transformOneGroup(Header.group(5)); 333 eli",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6657:2032,load,loader,2032,https://root.cern,https://github.com/root-project/root/issues/6657,1,['load'],['loader']
Performance,"rivate=0, cancel=true, abstime=0x0, op=393, expected=0, ; --Type <RET> for more, q to quit, c to continue without paging--; futex_word=0x7f1362292d60 <thread_status+1760>) at futex-internal.c:57; 16 Thread 0x7f133ebf1640 (LWP 34518) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x0, op=393, expected=0, ; futex_word=0x7f1362292de0 <thread_status+1888>) at futex-internal.c:57; 17 Thread 0x7f132aa21640 (LWP 34584) ""python"" __GI___libc_read (nbytes=4, buf=0x7f133827b950, fd=33) at ../sysdeps/unix/sysv/linux/read.c:26; 18 Thread 0x7f132a120640 (LWP 34585) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x7f132a11f330, op=137, ; expected=0, futex_word=0x7f1370d85acc <_PyRuntime+428>) at futex-internal.c:57; 19 Thread 0x7f132991f640 (LWP 34586) ""python"" __GI___libc_read (nbytes=4, buf=0x7f13382bf140, fd=31) at ../sysdeps/unix/sysv/linux/read.c:26; 20 Thread 0x7f132911e640 (LWP 34587) ""python"" __futex_abstimed_wait_common64 (private=<optimized out>, cancel=true, abstime=0x0, op=393, ; expected=0, futex_word=0x562911e622b0) at futex-internal.c:57; * 21 Thread 0x7f131ad44640 (LWP 34739) ""python"" 0x00007f1332cbafdc in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/libCling.so; ```. The two most interesting ones are threads `1` and `21`:; Thread1; ```; #6 std::__condvar::wait (__m=..., this=<optimized out>); at /usr/src/debug/gcc-12.2.1-2.fc36.x86_64/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/std_mutex.h:155; #7 std::condition_variable::wait (this=<optimized out>, __lock=...) at ../../../../../libstdc++-v3/src/c++11/condition_variable.cc:41; #8 0x00007f133726f0aa in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x7f1310200730, __lock=...); at /usr/include/c++/12/condition_variable:312; #9 0x00007f133726df05 in std::_V2::condition_variable_any::wait<std::unique",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:7143,optimiz,optimized,7143,https://root.cern,https://github.com/root-project/root/issues/11515,1,['optimiz'],['optimized']
Performance,"rn |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With c++ (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] ConfigType c;; root [1]; ```. I can also happily write objects of this type into ROOT files. But as soon as I try to merge two such ROOT files with `hadd`, I get:. ```; hadd Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f45ad4d0c3a in __GI___wait4 (pid=33425, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f45ad4d0bfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff23a485e8, options=options; entry=0) at waitpid.c:38; #2 0x00007f45ad43ff67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f45adc84afe in TUnixSystem::StackTrace() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #4 0x00007f45adc81985 in TUnixSystem::DispatchSignals(ESignals) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #5 <signal handler called>; #6 0x00007f45",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:1693,Load,Load,1693,https://root.cern,https://github.com/root-project/root/issues/12358,1,['Load'],['Load']
Performance,"rning from 'Decl::getSemanticDC' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:440; 21: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:440; 22: Returning from 'Decl::getDeclContext' in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:444; 23: Returning pointer, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:444; 24: Returning from 'Decl::getDeclContext' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2246; 25: Assuming 'ctxt' is non-null in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2247; 26: Left side of '&&' is true in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2247; 27: Loop condition is false. Execution continues on line 2250 in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2247; 28: Returning pointer (loaded from 'ctxt'), which participates in a condition later in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2250; 29: Returning from 'GetEnclosingSpace' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2285; 30: Calling 'WriteNamespaceHeader' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2285; 31: 'ctxt' is non-null in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2266; 32: Left side of '&&' is true in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2266; 33: Calling 'DeclContext::isNamespace' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2266; 34: Returning the value 1, which participates in a condition later in /opt/root_src/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:1863; 35: Returning from 'DeclContext::isNamespace' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2266; 36: Taking true branch in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2266; 37: Assuming 'indent' is >= 'closing_brackets' in /opt/root_src/core/clingutils/src/TClingUtils.cxx:2268; 38: Loop cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7423:11172,load,loaded,11172,https://root.cern,https://github.com/root-project/root/issues/7423,1,['load'],['loaded']
Performance,roduce. - Install dependencies via `apt`; - N.B. `python` and `python-dev` do not exist on Ubuntu22; use `python3` and `python-is-python3` instead; likewise `libglew1.5-dev` should now be `libglew-dev`; - Download and unpack `root_v6.26.10.Linux-ubuntu22-x86_64-gcc11.3.tar.gz` in `/opt`; - `cd /opt/root; source bin/thisroot.sh`; - Then I get the following:. ```; ➜ which root; /opt/root/bin/root; ➜ root; input_line_1:1:2: fatal error: module file '/home/sftnight/build/ws/BUILDTYPE/Release/LABEL/ROOT-ubuntu2204/V/6-26/build/lib/libc.pcm' not found: module file not found; #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/opt/root/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; Module libc not found.; Failed to load module std; <<< cling interactive line includer >>>: fatal error: module file '/home/sftnight/build/ws/BUILDTYPE/Release/LABEL/ROOT-ubuntu2204/V/6-26/build/lib/libc.pcm' not found: module file not found; <<< cling interactive line includer >>>: note: imported by module '_Builtin_intrinsics' in '/opt/root/lib/_Builtin_intrinsics.pcm'; Failed to load module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to loa,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:1513,load,load,1513,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,"roject/root/blob/2cc4b70d2e2bd89d9b639c894b4e0558be47c22b/tree/tree/src/TChain.cxx#L1407-L1434; I will call the operation above an ""address refresh"". TChain has code triggering an address refresh when needed for friends of the current tree:; https://github.com/root-project/root/blob/2cc4b70d2e2bd89d9b639c894b4e0558be47c22b/tree/tree/src/TChain.cxx#L1384-L1393. Unfortunately this doesn't work for two reasons:; 1. The code cannot possibly be reached unless `c2` itself has friends because of the following condition:; https://github.com/root-project/root/blob/2cc4b70d2e2bd89d9b639c894b4e0558be47c22b/tree/tree/src/TChain.cxx#L1370; In our case `c2` doesn't have friends, but the `fTree` does. This is easy to fix (or work around).; 2. Even if `fFriends` is made non-null, `fetree->IsUpdated()` always returns `false` because `TTree::LoadTree` resets it:; https://github.com/root-project/root/blob/18b4f317b389fa7931d7eb8e00525f4dca44be0f/tree/tree/src/TTree.cxx#L6512; Fixing this is much more annoying. For [my application](https://gitlab.cern.ch/Proto/Darwin/-/merge_requests/44), I ended up subscribing to the `Notify` signal and calling `TFriendElement::MarkUpdated` again. This is only a partial solution because when `c2` loads a new file, it doesn't reset friend elements that were marked updated, which would happen somewhere along this line:; https://github.com/root-project/root/blob/2cc4b70d2e2bd89d9b639c894b4e0558be47c22b/tree/tree/src/TChain.cxx#L1666. ### Reproducer. Rename to `recursiveBugDemo.C` and run the following macro: [recursiveBugDemo.txt](https://github.com/user-attachments/files/17593622/recursiveBugDemo.txt). It works similarly to #16804 and should only print `true`. ### ROOT version. Seen in:. * ROOT 6.30/04 (anaconda); * ROOT 6.28/04 (LCG 104). I couldn't find any code change in master in the relevant areas. ### Installation method. anaconda and LCG 104. ### Operating system. Linux (CentOS 9, Ubuntu 22.04, Ubuntu 24.04). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16805:1883,load,loads,1883,https://root.cern,https://github.com/root-project/root/issues/16805,1,['load'],['loads']
Performance,"rom /lib64/ld-linux-x86-64.so.2; #9 0x00007ffff720afab in dlopen_doit () from /lib64/libdl.so.2; #10 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #11 0x00007ffff720b5ad in _dlerror_run () from /lib64/libdl.so.2; #12 0x00007ffff720b041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #13 0x00007fffefcd2e24 in cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:3704,Load,Load,3704,https://root.cern,https://github.com/root-project/root/issues/7657,1,['Load'],['Load']
Performance,"root master, xrootd-5.3.0. To reproduce: TFile::Open(""root://.....""), then .q root. I will also post this to xrootd git. ```; 0x00007ffff74b1a66 in pthread_rwlock_rdlock () from /lib64/libpthread.so.0; (gdb) bt; #0 0x00007ffff74b1a66 in pthread_rwlock_rdlock () from /lib64/libpthread.so.0; #1 0x00007fffe91ecd62 in XrdCl::Env::GetInt(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int&) (); from /lib64/libXrdCl.so.3; #2 0x00007fffe9207a39 in XrdCl::PostMaster::PostMaster() () from /lib64/libXrdCl.so.3; #3 0x00007fffe91fed5e in XrdCl::DefaultEnv::GetPostMaster() () from /lib64/libXrdCl.so.3; #4 0x00007fffe9245fc5 in XrdCl::FileStateHandler::~FileStateHandler() () from /lib64/libXrdCl.so.3; #5 0x00007fffe9243bd0 in XrdCl::File::~File() () from /lib64/libXrdCl.so.3; #6 0x00007fffe9243c6d in XrdCl::File::~File() () from /lib64/libXrdCl.so.3; #7 0x00007fffef69630f in TNetXNGFile::~TNetXNGFile (this=0x2019f20, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/net/netxng/src/TNetXNGFile.cxx:233; #8 0x00007fffef696396 in TNetXNGFile::~TNetXNGFile (this=0x2019f20, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/net/netxng/src/TNetXNGFile.cxx:236; #9 0x00007ffff7bc5ad3 in TCollection::GarbageCollect (obj=0x2019f20) at /home/matevz/root-dev/dev-1/core/cont/src/TCollection.cxx:736; #10 0x00007ffff7bcdbe5 in TList::Delete (this=0x4307c0, option=0x7ffff7e1726b ""slow"") at /home/matevz/root-dev/dev-1/core/cont/src/TList.cxx:508; #11 0x00007ffff7af756b in TROOT::~TROOT (this=0x7ffff7f5a900 <ROOT::Internal::GetROOT1()::alloc>, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/core/base/src/TROOT.cxx:889; #12 0x00007ffff7af4f5f in at_exit_of_TROOT () at /home/matevz/root-dev/dev-1/core/base/src/TROOT.cxx:290; #13 0x00007ffff7317247 in __run_exit_handlers () from /lib64/libc.so.6; #14 0x00007ffff73173f0 in exit () from /lib64/libc.so.6; #15 0x00007ffff7c91627 in TUnixSystem::Exit (this=0x42a800, code=0, mode=true) at /h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767:968,optimiz,optimized,968,https://root.cern,https://github.com/root-project/root/issues/8767,1,['optimiz'],['optimized']
Performance,"rootcling performs an integrity check on the headers that are passed; via the command line and the ones we have in the modulemap. As this; check currently fails because we had to split up the Core and Thread,; we signal with a `use` directive that these other modules belong to; the current module. The `use` directive is usually only for signalling that we intend; to use this other module from our module, but as we anyway don't; use `-fmodules-decluse` in ROOT we can just reuse this for telling; rootcling that it should also check the split out submodules when; doing the integrity check for the headers. To give a concrete example: `ThreadLocalStorage` had to split; out of `Thread` to fix a cycle between `Core` and `Thread`.; However, rootcling now doesn't see the ThreadLocalStorage headers; in the `Thread` module but we pass them to the rootcling invocation; for `Thread`. This adds a `use ThreadLocalStorage` to Thread and; lets rootcling also iterate all `use`'d other modules when doing; this check, so we again have the full set of modules here.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1458:10,perform,performs,10,https://root.cern,https://github.com/root-project/root/pull/1458,1,['perform'],['performs']
Performance,rootcling writes dependency information which is never read/used when loading the rdict file.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5211:70,load,loading,70,https://root.cern,https://github.com/root-project/root/pull/5211,1,['load'],['loading']
Performance,rootcling/root-io error loading std::filesystem::path,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13574:24,load,loading,24,https://root.cern,https://github.com/root-project/root/issues/13574,1,['load'],['loading']
Performance,roottools CMake target purpose is to provide handle to used as a dependency in roottest.git.; It will fix problem of data generation for roottest.git tests in very parallel build (ROOT-performance PR node).,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3279:185,perform,performance,185,https://root.cern,https://github.com/root-project/root/pull/3279,1,['perform'],['performance']
Performance,"rors**; Everywhere TGraphAsymmErrors uses arrays for the y-Errors, my class uses two dimensional arrays (Double_t**) of which the first dimension represents the index of the error dimension and the second one the point. It is assumed that the first y-Error is the statistical one and all following are systematical ones. Therefore when the statistical errors are being computed by a function everything applies to only the first error dimension.; In case a single error on y is required (Like for fitting) the errors are being summed according to the value of fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the errors from all error types. **Drawing / Painting**; The painting is being performed by the functions TGraphMultiErrors::Paint, TGraphMultiErrors::PaintReverse and TGraphMultiErrors::PaintGraphMultiErrors. If this class should ever become part of ROOT the first two are to be deleted, cause there are similar functions in the class TGraphPainter and the last one is supposed to be included in the TGraphPainter class. The function TGraphMultiErrors::Paint is similar to TGraph::Paint and TGraphPainter::PaintHelper and can be deleted if the class should become part of root and TGraphMultiErrors::PaintGraphMultiErrors is being included in the TGraphPainter class.; The function TGraphMultiErrors::PaintReverse serves the same purpose as TGraphPainter::PaintReverse and should be deleted too if the class becomes part of ROOT.; The function TGraphMultiErrors::PaintGraphMultiErrors performs the actual painting and would have to be included in the TGraphPainter class. **Drawing / Painting options**; To be able to define different drawing options for the multiple error dimensions the option string can consist of mu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:2131,perform,performed,2131,https://root.cern,https://github.com/root-project/root/pull/3449,1,['perform'],['performed']
Performance,"rr=0x7f2a5e651200) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; 2187: #24 0x00007f2a5087994c in cling::DynamicLibraryManager::loadLibrary (this=<optimized out>, libStem=..., permanent=<optimized out>, resolved=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:375; 2187: #25 0x00007f2a508d6dce in cling::Interpreter::loadLibrary (this=0x614000001840, filename=..., lookup=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1469; 2187: #26 0x00007f2a508d8d67 in cling::Interpreter::loadFile (this=0x614000001840, filename=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", allowSharedLib=<optimized out>, T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; 2187: #27 0x00007f2a50bbe9cd in cling::MetaSema::actOnLCommand (this=<optimized out>, file=..., transaction=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; 2187: #28 0x00007f2a50bb2dc8 in cling::MetaParser::isLCommand (this=this; 2187: entry=0x7f2a5e5cf670, actionResult=; 2187: 0x7f2a5e5cf780: cling::MetaSema::AR_Success) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; 2187: #29 0x00007f2a50bb2833 in cling::MetaParser::isCommand (this=<optimized out>, actionResult=<optimized out>, resultValue=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; 2187: #30 0x00007f2a50baaf05 in cling::MetaProcessor::process (this=<optimized out>, input_line=..., compRes=<optimized out>, result=0x33f, disableValuePrinting=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; 2187: #31 0x00007f2a5058c5ff in HandleInterpreterException (metaProcessor=metaProcessor; 2187: entry=0x60700007bb60, input_line=0x7f2a6338f0de "".L /home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:4919,optimiz,optimized,4919,https://root.cern,https://github.com/root-project/root/issues/11867,2,['optimiz'],['optimized']
Performance,rror) Memory leak: s; [tree/tree/src/TLeaf.cxx:222]: (error) Memory leak: countname; [tree/tree/src/TLeaf.cxx:226]: (error) Memory leak: countname; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfS; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfB. [roofit/roofitcore/src/RooAbsArg.cxx:280]: (style) Redundant checking of STL container element existence before removing it. [core/dictgen/src/rootcling_impl.cxx:457]: (performance) Possible inefficient checking for 'fieldSelRules' emptiness.; [core/dictgen/src/rootcling_impl.cxx:4573]: (performance) Possible inefficient checking for 'filesIncludedByLinkdef' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:322]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:374]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:419]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:475]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:587]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:787]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [html/src/TDocParser.cxx:684]: (performance) Possible inefficient checking for 'currentType' emptiness.; [proof/proofd/src/XrdProofdManager.cxx:804]: (performance) Possible inefficient checking for 'uwrks' emptiness.; [proof/proofd/src/XrdProofdSandbox.cxx:467]: (performance) Possible inefficient checking for 'staglst' emptiness.; [proof/proofd/src/XrdProofdSandbox.cxx:571]: (performance) Possible inefficient checking for 'actln' emptiness.; [roofit/roofitcore/src/RooSimWSTool.cxx:574]: (performance) Possible inefficient checking for 'slist' emptiness. all the reports Prefer prefix ++/-- operators for non-primitive types,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1343:2855,perform,performance,2855,https://root.cern,https://github.com/root-project/root/pull/1343,8,['perform'],['performance']
Performance,"rrors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the errors from all error types. **Drawing / Painting**; The painting is being performed by the functions TGraphMultiErrors::Paint, TGraphMultiErrors::PaintReverse and TGraphMultiErrors::PaintGraphMultiErrors. If this class should ever become part of ROOT the first two are to be deleted, cause there are similar functions in the class TGraphPainter and the last one is supposed to be included in the TGraphPainter class. The function TGraphMultiErrors::Paint is similar to TGraph::Paint and TGraphPainter::PaintHelper and can be deleted if the class should become part of root and TGraphMultiErrors::PaintGraphMultiErrors is being included in the TGraphPainter class.; The function TGraphMultiErrors::PaintReverse serves the same purpose as TGraphPainter::PaintReverse and should be deleted too if the class becomes part of ROOT.; The function TGraphMultiErrors::PaintGraphMultiErrors performs the actual painting and would have to be included in the TGraphPainter class. **Drawing / Painting options**; To be able to define different drawing options for the multiple error dimensions the option string can consist of multiple blocks separated by semicolons. The painting method separates the options in multiple options for each y error dimension and one for basic painting and the x errors. In case there are <= NErrorDimensions blocks given, the first block is used for basic painting and for the first dimension of y errors. Y error dimensions without an individual block are painted with “”.; Tn case there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmErrors are implemented. For explanation of the drawing options see TGraphPainter::PaintGraphAsymmErrors.; Additionally one can speci",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3449:2938,perform,performs,2938,https://root.cern,https://github.com/root-project/root/pull/3449,1,['perform'],['performs']
Performance,"rser.cpp:120; #49 0xf1240484 in cling::MetaProcessor::process () at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #50 0xf1058c2f in HandleInterpreterException (metaProcessor=0x581f2be0, input_line=<optimized out>, compRes=; 0xffefe348: cling::Interpreter::kSuccess, result=0xffefe350) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2438; #51 0xf108107b in TCling::ProcessLine (this=<optimized out>, line=<optimized out>, error=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:2611; #52 0xf10816f8 in TCling::ProcessLineSynch (this=0x578739c0, line=0x585e37e0 "".X /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/main/src/rmain.cxx:84; ===========================================================; The lines below might hint at the cause of the crash. If you see quest",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:9324,optimiz,optimized,9324,https://root.cern,https://github.com/root-project/root/issues/15738,3,['optimiz'],['optimized']
Performance,"running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 ROOT::Experimental::RClassField::RClassField (this=0x7ffc9edb22f0, fieldName=..., className=..., classp=<optimized out>) at /usr/include/c++/13/bits/new_allocator.h:88; #7 0x00007f3e5fcafc66 in ROOT::Experimental::RClassField::RClassField (this=this; entry=0x7ffc9edb22f0, fieldName=""klass"", className=""8G325Y212U"") at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:841; #8 0x0000558efca002c2 in ROOT::Experimental::RField<TestEBO, void>::RField (name=..., this=0x7ffc9edb22f0) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/inc/ROOT/RField.hxx:643; #9 RNTuple_TClassEBO_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_types.cxx:387; #10 0x00007f3e5fc02eb3 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] () from /lib64/libgtest.so.1.13.0; #11 0x00007f3e5fbef17e in testing::Test::Run() () from /lib64/libgtest.so.1.13.0; #12 0x00007f3e5fbef385 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.13.0; #13 0x00007f3e5fbef4d7 in testing::TestSuite::Run() () from /lib64/libgtest.so.1.13.0; #14 0x00007f3e5fbfc090 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.13.0; #15 0x00007f3e5fbfae98 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.13.0; #16 0x00007f3e5fbac116 in main () from /lib64/libgtest_main.so.1.13.0; #17 0x00007f3e5f048b4a in __libc_start_call_main () from /lib64/libc.so.6; #18 0x00007f3e5f048c0b in __libc_start_main_impl () from /lib64/libc.so.6; #19 0x0000558",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12428:10259,optimiz,optimized,10259,https://root.cern,https://github.com/root-project/root/issues/12428,1,['optimiz'],['optimized']
Performance,s >= 'ntotal' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1287; 9: Loop condition is false. Execution continues on line 1290 in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1287; 10: Loop condition is true. Entering loop body in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1293; 11: Assuming the condition is false in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 12: Taking false branch in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1294; 13: The value 1073741823 is assigned to 'mid' in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1302; 14: Assigned value is garbage or undefined in /opt/root_src/math/physics/src/TRobustEstimator.cxx:1303; /opt/root_src/math/splot/src/TSPlot.cxx:959:23: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:959; /opt/root_src/math/splot/src/TSPlot.cxx:966:13: warning: Value stored to 'loaded' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'loaded' is never read in /opt/root_src/math/splot/src/TSPlot.cxx:966; /opt/root_src/core/cont/inc/TBits.h; /opt/root_src/math/fumili/src/TFumili.cxx; /opt/root_src/math/genvector/src/3DConversions.cxx; /opt/root_src/math/genvector/src/AxisAngleXother.cxx; /opt/root_src/math/mathcore/inc/Fit/FitData.h; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h; /opt/root_src/math/mathcore/inc/TMath.h; /opt/root_src/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx; /opt/root_src/math/mathcore/src/GaussIntegrator.cxx; /opt/root_src/math/mathcore/src/GoFTest.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephes.cxx; /opt/root_src/math/mathcore/src/SpecFuncCephesInv.cxx; /opt/root_src/math/mathcore/src/TKDTree.cxx; /opt/root_src/math/mathcore/src/TKDTreeBinning.cxx; /opt/root_src/math/mathcore/src/TMath.cxx; /opt/root_src/math/mathcore/src/triangle.c; /opt/root_src/math/matrix/inc/TMatrixT.h; /opt/root_src/math/matrix/inc/TVectorT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:230735,load,loaded,230735,https://root.cern,https://github.com/root-project/root/issues/7458,1,['load'],['loaded']
Performance,"s discussion is that we should not allow views on fields with a mappable type and that have a read callback.; The signature of a read callback function is; ```c++; void callback_func(RFieldValue &);; ```. ## Changes of fixes:; - Fields with a mappable type need to be distinguished from ""simple"" fields (i.e. those that have no additional actions after reading). Thus, the `kTraitMappable` trait is introduced in this PR; it is set for fields of fundamental types that can be directly mapped via `RField<T>::Map()`. These fields also map as-is to a single column.; The `fIsSimple` member now takes a different meaning: a field is simple if it is both mappable (i.e. kTraitMappable) and has no post-read callback.; - Read callbacks are managed via the _protected_ member functions `RFieldBase::{Add,Remove}ReadCallback()`.; - `RFieldBase::Read()` calls the read callbacks as appropriate. The fast path still only calls `fPrincipalColumn->Read()`.; Callbacks should be relatively rare; thus, the branch is marked as `R__unlikely()`, as it provides a small performance increase for non-mappable types that have no read callback.; - As discussed, views are disallowed on fields with a mappable type and a read callback. ## Experimental measurements; The overhead of the changes in this PR was measured in a synthetic test case. The schema is comprised of 4 fields of fundamental data types + 2 fields referring to user-defined `struct`s (containing 4 and 8 members of fundamental data types, respectively). The test program reads all fields across 10000k entries. The file lies in a tmpfs. The overhead has been measured to be:; - No callbacks: **~0.5%** w.r.t. the state of RNTuple before this patch set.; - 1 _nop_ callback function for one of the `struct` fields: **~2.7%** w.r.t. the base time.; - 2 _nop_ callback functions, one for each of the `struct` fields: **~3.4%** w.r.t. the base time. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #11730.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11731:1504,perform,performance,1504,https://root.cern,https://github.com/root-project/root/pull/11731,1,['perform'],['performance']
Performance,"s false. Exiting loop in /opt/root_src/io/io/src/TBufferFile.cxx:2350; 11: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 12: 'tag' declared without an initial value in /opt/root_src/io/io/src/TBufferFile.cxx:2359; 13: Calling 'TBufferFile::ReadClass' in /opt/root_src/io/io/src/TBufferFile.cxx:2360; 14: Taking false branch in /opt/root_src/io/io/src/TBufferFile.cxx:2567; 15: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:120; 16: Loop condition is false. Exiting loop in /opt/root_src/io/io/src/TBufferFile.cxx:2567; 17: expanded from macro 'R__ASSERT' in /opt/root_src/core/foundation/inc/TError.h:119; 18: Assuming field 'fBufCur' is < field 'fBuffer' in /opt/root_src/io/io/src/TBufferFile.cxx:2571; 19: Left side of '||' is true in /opt/root_src/io/io/src/TBufferFile.cxx:2571; 20: Returning without writing to '*objTag' in /opt/root_src/io/io/src/TBufferFile.cxx:2574; 21: Returning pointer (loaded from 'cl'), which participates in a condition later in /opt/root_src/io/io/src/TBufferFile.cxx:2574; 22: Returning from 'TBufferFile::ReadClass' in /opt/root_src/io/io/src/TBufferFile.cxx:2360; 23: 'clRef' is non-null in /opt/root_src/io/io/src/TBufferFile.cxx:2363; 24: Left side of '&&' is true in /opt/root_src/io/io/src/TBufferFile.cxx:2363; 25: Left side of '&&' is false in /opt/root_src/io/io/src/TBufferFile.cxx:2363; 26: Assuming field 'fVersion' is > 0 in /opt/root_src/io/io/src/TBufferFile.cxx:2397; 27: Taking true branch in /opt/root_src/io/io/src/TBufferFile.cxx:2397; 28: Assuming the condition is false in /opt/root_src/io/io/src/TBufferFile.cxx:2399; 29: Taking false branch in /opt/root_src/io/io/src/TBufferFile.cxx:2399; 30: Assuming 'obj' is non-null in /opt/root_src/io/io/src/TBufferFile.cxx:2400; 31: Taking true branch in /opt/root_src/io/io/src/TBufferFile.cxx:2400; 32: 2nd function call argument is an uninitialized value in /opt/root_src/io/io/src/TBufferFile.cxx:2401; /opt/root_src/io/io/src/TB",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:1863,load,loaded,1863,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,"s in an RDataFrame computation graph can introduce serious overheads both in terms of performance and memory usage. In extreme (but very realistic) cases, this leads to OOM crashes. . A flamegraph (attached) can highlight that the main culprit is the allocation/deallocation of very large STL containers (std::map, std::vector), which happens in the machinery of the `RColumnRegister` class. This class has a copy-on-write policy, introduced by https://github.com/root-project/root/pull/10899 and further explained at https://github.com/root-project/root/pull/11297 . ![many_defines_original](https://github.com/root-project/root/assets/15638895/298b9fb4-b18c-4fb8-a103-8a7fccf225a7). For large graphs (O(10K) nodes), we start seeing multiple GBs of memory used just to make the `Define` calls, and a large portion of the total runtime being spent in the destruction of the RDataFrame itself (i.e. at the end of the application the user is stuck at the terminal). The copy-on-write policy is there for a reason. This way, any new branch of the computation graph can share the information about the columns defined (available) for that branch, without being contaminated by information coming from other branches of the graph (this is the cause of the CI errors in https://github.com/root-project/root/pull/14490 for example). We need to rethink about a way to keep the same functionality that does not incur in the performance/memory usage penalties. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>. #include <string>; #include <iostream>. int main(); {. ROOT::RDataFrame df(1);. auto node = df.Define(""col_0"",; [](); { return 42; });. // Increase the number of iterations for a more evident effect; for (std::size_t i = 0; i < 10000; i++); {; node = node.Define(""col_"" + std::to_string(i + 1),; [](); { return 42; });; }. std::cout << ""End of main\n"";; }; ```. ### ROOT version. Any. ### Installation method. Built from source. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14510:1519,perform,performance,1519,https://root.cern,https://github.com/root-project/root/issues/14510,1,['perform'],['performance']
Performance,"s in tracking remaining problems (if there should be any):. ```txt; 5473c5c1b0 Fixed how VDT would be used.; 352c35395a [tmva][sofie] Add in RSofieReader specialization for single output; ead7963b5b [tmva][sofie] Add in RSofieReader support for multiple inputs and custom operators; 8b005a0659 [tmva][pymva] Do not disable tensorflow eager execution on MacoS; 7793c2038e [tmva][pymva] Use .h5 file instead of .keras; 4c9e26ca58 Log ONNX Operator implemented and the merge conflicts are resolved; d016febdb6 Update ROperator_Slice.hxx; 6b2bef2aab Fixed bugs in Slice SOFIE Operator, added slice gtests; f0cb4e9ceb [tmva][sofie-gnn] Tutorial for SOFIE-GNN; 3c17793839 [tmva][sofie-gnn] Fix on loading required packages (sonnet, graph_nets) and restricting numpy version; 2f2b9c62ad [tmva][sofie-gnn] Docstrings for SOFIE-GNN implementations and vectorization in node aggregate and GraphIndependent; 1968e25b63 [tmva][sofie-gnn] Make Edge_update in core using a single infer call for all edges; e4555770c7 [tmva][sofie-gnn] Add support for LayerNormalization and registering additional functions; b6ac312508 [tmva][sofie-gnn] Test LHCb toy model with SOFIE-GNN; 5455f90c3a [tmva][sofie-gnn] Python in-memory parse function and tests; d925d6a805 [tmva][sofie-gnn] Introducing RModel_GraphIndependent; 2df806aa32 [tmva][sofie-gnn] Introducing RFunctions for SOFIE-GNN; 1ca9b4c240 [tmva][sofie-gnn] Introducing SOFIE-GNN; 6cb0d0a957 [TMVA] Don't use the same file name (`TMVA.root`) everywhere (#13576); 4fe2f6ef61 [pymva] Refactor TestRModelParserPyTorch to use RSofieReader; e53fcb7b6a [tmva][sofie] Fix formattting in RModel; f93775a9dc [tmva][sofie] Add options to append generated C++ code and weights; 4f0450b46e [tmva] fix bug in reshape operator when it is used as the first operator of the model; 8fa423de1a [TMVA/SOFIE] Save weights in ROOT binary files (#13423); 91d7dc9cee [tmva] use SetDirectory(nullptr); 34c4a497c5 [tmva] reduce usage of `Form` method; df8ab656e3 [tmvagui] avoid usage of Fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13783:1005,load,loading,1005,https://root.cern,https://github.com/root-project/root/pull/13783,1,['load'],['loading']
Performance,"s null in /opt/root_src/tmva/tmva/src/PDF.cxx:267; /opt/root_src/tmva/tmva/src/Reader.cxx:384:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:110845,load,loaded,110845,https://root.cern,https://github.com/root-project/root/issues/7526,1,['load'],['loaded']
Performance,"s succeeded. Full details:; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TString theMethodName, TString methodTitle, TString theOption = """") =>; TypeError: could not convert argument 2; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader* loader, TMVA::Types::EMVA theMethod, TString methodTitle, TString theOption = """") =>; runtime_error: FATAL error; TMVA::MethodBase* TMVA::Factory::BookMethod(TMVA::DataLoader*, TMVA::Types::EMVA, TString, TString, TMVA::Types::EMVA, TString) =>; TypeError: takes at least 6 arguments (4 given); CMake Error at /builddir/build/BUILD/root-6.28.00/redhat-linux-build/RootTestDriver.cmake:232 (message):; error code: 1; ~~~. #### tutorial-tmva-TMVA_RNN_Classification-py. TypeError: none of the 3 overloaded methods succeeded.; ~~~; 1272/1272 Test #1269: tutorial-tmva-TMVA_RNN_Classification-py ............................***Failed 1.39 sec; Warning in <TMVA_RNN_Classificaton>: Skip using Keras since tensorflow is not installed; Warning in <TMVA_RNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN; DataSetInfo : [dataset] : Added class ""Signal""; : Add Tree sgn of type Signal with 2000 events; DataSetInfo : [dataset] : Added class ""Background""; : Add Tree bkg of type Background with 2000 events; <FATAL> : Unknown method index in map: 0; ***> abort program execution; Running with nthreads = 25769803776; --- RNNClassification : Using input file: time_data_t10_d30.root; number of variables is 300; vars_time0[0]; [ --- ]; vars_time9[29]; prepared DATA LOADER ; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.28.00/tutorials/tmva/TMVA_RNN_Classification.py"", line 331, in <module>; factory.BookMethod(; File ""/builddir/build/BUILD/root-6.28.00/redhat-linux-build/lib/ROOT/_pythonization/_tmva/_factory.py"", line 61, in BookMethod; return self._BookMethod(*args, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; TypeError: none of the 3 over",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12429:12784,multi-thread,multi-thread,12784,https://root.cern,https://github.com/root-project/root/issues/12429,1,['multi-thread'],['multi-thread']
Performance,"s with matching names. Will error if any of the branches are not found.; --branches-regex bregex1 [bregex2 ...]; Reads any branches with a name matching the provided regex. Will error if any provided regex does not match at least one branch. Meta arguments:; --threads nthreads; The number of threads to use for file reading. Will automatically cap to the number of available threads on the machine.; --tasks-per-worker ntasks; The number of tasks to generate for each worker thread when using multithreading. Description:. rootreadspeed is a tool used to help identify bottlenecks in ROOT analysis programs by providing an idea of what throughput you can expect when reading ROOT files in certain configurations. It does this by providing information about the number of bytes read from your files, how long this takes, and the different throughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:2184,Throughput,Throughput,2184,https://root.cern,https://github.com/root-project/root/pull/14039,1,['Throughput'],['Throughput']
Performance,"s);; 	; 	// background used in model; 	RooRealVar fitargpar(""shape"", ""fit argus shape parameter"", -6.5, -8, -6);; 	RooRealVar fitpower(""power"", ""fit argus power parameter"", 0.5, 0, 1);; 	RooArgusBG fitbkg(""fitbkg"", ""Fit Background ARGUS"", x, RooConst(m0), fitargpar, fitpower);; 	RooRealVar fitnsig(""nsig"", ""signal number"", 0.6 * nevents, 0, 1.2 * nevents);; 	RooRealVar fitnbg(""nbg"", ""bg number"", 0.4 * nevents, 0, 1.2 * nevents);. 	// fitting model; 	RooAddPdf model(""model"", ""BW+a fitted"", RooArgList(fitsig, fitbkg), RooArgList(fitnsig, fitnbg));. 	RooMCStudy* mcstudy =; 		new RooMCStudy(mcdist, x, FitModel(model), Binned(kFALSE), Silence(), Extended(kFALSE),; 			FitOptions(Extended(kFALSE), PrintEvalErrors(-1), Save(kTRUE)));. 	RooDLLSignificanceMCSModule sigModule(""nsig"", 0);; 	mcstudy->addModule(sigModule);. 	mcstudy->generateAndFit(100, nevents, kTRUE);. 	std::cout << mcstudy->fitParDataSet() << std::endl;; }; ```. which results in . ```; [#0] ERROR:InputArguments -- RooDataSet::merge(fitParData_model_distribution) ERROR: datasets have different size; RooDataSet::fitParData_model_distribution[#mean_{gauss},#sigma_{gauss},nbg,nsig,power,shape,NLL,ngen,#mean_{gauss}err,#mean_{gauss}pull,#sigma_{gauss}err,#sigma_{gauss}pull,nbgerr,nbgpull,nsigerr,nsigpull,powererr,powerpull,shapeerr,shapepull] = 84 entries; ```. ### Setup; ROOT 6.22/02; WSL v2 with Ubuntu 20.04 ; Binay download (built for linuxx8664gcc). ### Additional context; RooDLLSignificanceMCSModule::finalizeRun() states that ` If a RooDataSet is returned, it must have a length equal to the number of toy experiments performed and will merged with the fitpar dataset of RooMCStudy. `, however that is not true.; If some of the toy experiments performed did not converge, the RooMCStudy dataset size is lower than the number of experiments. At the same time, there is no way (that i could find) to access the fit result status of current run from RooAbsMCStudyModule, making it hard to consistently avoid the merge error",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6949:3420,perform,performed,3420,https://root.cern,https://github.com/root-project/root/issues/6949,2,['perform'],['performed']
Performance,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:4249,load,load-test,4249,https://root.cern,https://github.com/root-project/root/issues/10704,2,['load'],['load-test']
Performance,"s. **Differences to TGraphAsymmErrors**; Everywhere TGraphAsymmErrors uses arrays for the y-Errors, my class uses two dimensional arrays (Double_t**) of which the first dimension represents the index of the error dimension and the second one the point. It is assumed that the first y-Error is the statistical one and all following are systematical ones. Therefore when the statistical errors are being computed by a function everything applies to only the first error dimension.; In case a single error on y is required (Like for fitting) the errors are being summed according to the value of fSumErrorsMode which can be at the moment TGraphMultiErrors::kOnlyFirst for only returning the error of the first error type (usally the statistic one), TGraphMultiErrors::kSquareSum for returning the squared sum of the errors of all types (Gaussian propagation) or TGraphMultiErrors::kSum for just returning the sum of the errors from all error types. **Drawing / Painting**; The painting is being performed by the TGraphPainter class like for any other classes. Therefore I added the function TGraphPainter::PaintGraphMultiErrors and included a corresponding line in the TGraphPainter::PaintHelper function. **Drawing / Painting options**; To be able to define different drawing options for the multiple error dimensions the option string can consist of multiple blocks separated by semicolons. The painting method separates the options in multiple options for each y error dimension and one for basic painting and the x errors. In case there are <= NErrorDimensions blocks given, the first block is used for basic painting and for the first dimension of y errors. Y error dimensions without an individual block are painted with “”.; Tn case there are NErrorDimensions + 1 given, the first block is used only for basic painting. The remaining blocks are distributed over the y error dimensions In case there are > NErrorDimensions + 1 blocks given an error is returned. All drawing options of TGraphAsymmEr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452:2075,perform,performed,2075,https://root.cern,https://github.com/root-project/root/pull/3452,1,['perform'],['performed']
Performance,"s/core/meta/src/TClass.cxx:2679; #13 0x00007ffff260a9f6 in TClass::GetBaseClass (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:2688; #14 0x00007ffff2611f76 in TClass::InheritsFrom (this=0x2c3e4b0, cl=0x235be20); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:4891; #15 0x00007ffff26163d7 in TClass::Property (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:6097; #16 0x00007ffff261a27d in TClass::IsClassStructOrUnion (this=0x2c3e4b0); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/inc/TClass.h:352; #17 0x00007ffff260e309 in TClass::GetListOfDataMembers (this=0x2c3e4b0, ; load=true); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/meta/src/TClass.cxx:3759; #18 0x00007ffff7d132ac in CloseStreamerInfoROOTFile (writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/io/rootpcm/src/rootclingIO.cxx:162; #19 0x00007ffff305e2a7 in FinalizeStreamerInfoWriting (interp=..., ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2632; #20 0x00007ffff305ecd8 in GenerateFullDict (dictStream=..., interp=..., ; scan=..., ctorTypes=..., isSplit=false, isGenreflex=true, ; writeEmptyRootPCM=false); at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-26-00-patches/src/ROOT/v6-26-00-patches/core/dictgen/src/rootcling_impl.cxx:2784; #21 0x00007ffff306ba57 in RootClingMain (argc=7, argv=0x4a4f10, ; isGenreflex=true); at",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11259:4569,load,load,4569,https://root.cern,https://github.com/root-project/root/issues/11259,1,['load'],['load']
Performance,"s/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:621; #23 0x00007af5872cacc4 in _PyObject_MakeTpCall (tstate=tstate; entry=0x5fe0e474d0c0, callable=callable; entry=0x7af5722e0040, args=args; entry=0x7af586c1dbb0, nargs=1, keywords=keywords; entry=0x0) at Objects/call.c:215; #24 0x00007af5872750f2 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:112; #25 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586c1dbb0, callable=0x7af5722e0040, tstate=0x5fe0e474d0c0) at ./Include/cpython/abstract.h:99; #26 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5722e0040) at ./Include/cpython/abstract.h:123; #27 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7ffea3a920b0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5893; #28 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #29 0x00007af5873c6ce1 in _PyEval_EvalFrame (throwflag=0, f=0x7af586c1da40, tstate=0x5fe0e474d0c0) at ./Include/internal/pycore_ceval.h:46; #30 _PyEval_Vector (kwnames=0x0, argcount=0, args=0x0, locals=0x5fe0e474d0c0, con=0x7ffea3a921a0, tstate=0x5fe0e474d0c0) at Python/ceval.c:5067; #31 PyEval_EvalCode (co=co; entry=0x7af586c71b00, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200) at Python/ceval.c:1134; #32 0x00007af58740d379 in run_eval_code_obj (locals=0x7af586550200, globals=0x7af586550200, co=0x7af586c71b00, tstate=0x5fe0e474d0c0) at Python/pythonrun.c:1291; #33 run_mod (mod=<optimized out>, filename=filename; entry=0x7af5865a5e30, globals=globals; entry=0x7af586550200, locals=locals; entry=0x7af586550200, flags=flags; entry=0x7ffea3a92318, arena=arena; entry=0x7af5865026f0) at Python/pythonrun.c:1312; #34 0x00007af58740e5a8 in pyrun_file (flags=0x7ffea3a92318, closeit=-2040898000, loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:14811,optimiz,optimized,14811,https://root.cern,https://github.com/root-project/root/issues/15117,6,['optimiz'],['optimized']
Performance,"s://github.com/root-project/root/pull/12641; 7. https://github.com/root-project/root/pull/12647; 8. https://github.com/root-project/root/pull/12660; 9. https://github.com/root-project/root/pull/12668. Related to https://github.com/root-project/root/issues/12319. After merging this PR, the following RooFit commits in ROOT `master` (as of `4afc9f56bb`) are the ones that are not in `v6-28-00-patches` (as of `to fill out after merging`). ```txt; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12681:1300,Optimiz,Optimize,1300,https://root.cern,https://github.com/root-project/root/pull/12681,2,['Optimiz'],['Optimize']
Performance,"s::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105; #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:23789,optimiz,optimized,23789,https://root.cern,https://github.com/root-project/root/issues/8931,2,['optimiz'],['optimized']
Performance,s; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Ex,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5356,load,load,5356,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"s=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneS",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:25635,optimiz,optimized,25635,https://root.cern,https://github.com/root-project/root/issues/15970,6,['optimiz'],['optimized']
Performance,"s=<optimized out>, b=..., onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:395; #26 0x00007fffa938a6f8 in TGenCollectionStreamer::ReadBufferGeneric (this=<optimized out>, b=..., obj=0x109986cc0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1368; #27 0x00007fffa93850a8 in TGenCollectionStreamer::ReadBufferDefault (this=0x10a861070, b=..., obj=0x109986cc0, onFileClass=0x0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1302; #28 0x00007fffa9384f00 in TGenCollectionStreamer::ReadBuffer (this=<optimized out>, b=..., obj=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1232; #29 0x00007fffa933ff7c in TCollectionClassStreamer::Stream (onfileClass=0x10a860aa0, obj=0x109986cc0, b=..., this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:177; #30 TCollectionClassStreamer::Stream (this=<optimized out>, b=..., obj=0x109986cc0, onfileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:172; #31 0x00007fffa8f04014 in TClass::StreamerExternal (pThis=<optimized out>, object=0x109986cc0, b=..., onfile_class=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6783; #32 0x00007fffa92db554 in TClass::Streamer (onfile_class=0x10a860aa0, b=..., obj=<optimized out>, this=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #33 TBufferFile::ReadFastArray (streamer=0x0, onFileClass=0x10a860aa0, n=1, cl=0x10a860aa0, start=<optimized out>, this=0x7ffff83ea100) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1609; #34 TBufferFile::ReadFastArray (this=0x7ffff83ea100, start=<optimized out>, cl=0x10a860aa0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1596; #35 0x00007fffa94a2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:7719,optimiz,optimized,7719,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"s=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:774; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:14215,load,load,14215,https://root.cern,https://github.com/root-project/root/issues/12771,1,['load'],['load']
Performance,"sToFourLeptons_8C.html) crashes when it is compiled and run (it runs fine if interpreted).; This is due to jitted code in some filters that call user-defined functions whose signature is unknown to Cling. This is a general problem with functions that evaluate code at runtime and, while it might not be possible to fix in all cases, it should at least be better documented. The tutorials themselves should be written to work both when compiled and when interpreted, or specify why they cannot be run as-is if compiled. There is also a more general discussion to be made about RDF and the kind of guarantees that it should provide to its users. Ideally there should be a way to use RDF such that it will be guaranteed to run correctly regardless of being compiled or interpreted. Finally, the documentation of RDF should be updated to better clarify the caveats and limitations of passing C++ expressions as strings, both in terms of performance and, especially, in terms of compatibility with compiled code (i.e. it should be clear to a user that a filter using an interpreted string containing a user-defined function may not work when AOT-compiled without additional efforts on the user side - like manually passing the signatures to cling beforehand). ### Bullet point recap; - [ ] fix the tutorials so they run properly when compiled AOT; - [ ] update the doc of RDF to include caveats and limitations of using jitted expressions; - [ ] (to be discussed) introduce an opt-in ""strict mode"" for RDF (C++ only) that checks and rejects all cases when jitting is required. This would allow a user to catch code that may incur in performance penalties and may not work properly when AOT-compiled. . ### Reproducer. 1. download the source code of [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html); 2. compile it; 3. run it. ### ROOT version. 6.33.01. ### Installation method. from source. ### Operating system. Debian GNU/Linux trixie. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15638:1772,perform,performance,1772,https://root.cern,https://github.com/root-project/root/issues/15638,1,['perform'],['performance']
Performance,"sdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f55ea9f53ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffffe689758, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f55ea95bbdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f55eb242bc4 in TUnixSystem::StackTrace() () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #4 0x00007f55eb23fef5 in TUnixSystem::DispatchSignals(ESignals) () from /home/sftnight/build/workspace/root-pullrequests-build/build/lib/libCore.so.6.31; #5 <signal handler called>; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000556fff8be829 in hlimit_ (); #8 0x0000556fff8ad586 in main (); #9 0x00007f55ea934d90 in __libc_start_call_main (main=main; entry=0x556fff8ad4d0 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffffe68cf78) at ../sysdeps/nptl/libc_start_call_main.h:58; #10 0x00007f55ea934e40 in __libc_start_main_impl (main=0x556fff8ad4d0 <main>, argc=2, argv=0x7ffffe68cf78, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffffe68cf68) at ../csu/libc-start.c:392; #11 0x0000556fff8ad8b5 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x0000556fff8ce440 in mzlink_ (); #7 0x0000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14155:1920,optimiz,optimized,1920,https://root.cern,https://github.com/root-project/root/issues/14155,3,['optimiz'],['optimized']
Performance,"se (ttree_setbranchaddress.TTreeSetBranchAddress.test_fallback_case) ... *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f13f12e87 in wait4 () from /lib64/libc.so.6; #1 0x00007f3f13e664fb in do_system () from /lib64/libc.so.6; #2 0x00007f3f13322cf0 in TUnixSystem::Exec (this=0x5619b6bb82b0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #3 TUnixSystem::StackTrace (this=0x5619b6bb82b0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #4 0x00007f3f13511c5f in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:1612,optimiz,optimized,1612,https://root.cern,https://github.com/root-project/root/issues/15799,1,['optimiz'],['optimized']
Performance,"se branch in /opt/root_src/math/matrix/src/TDecompLU.cxx:791; 9: Calling 'TDecompLU::DecomposeLUCrout' in /opt/root_src/math/matrix/src/TDecompLU.cxx:798; 10: Assuming 'n' is <= kWorkMax in /opt/root_src/math/matrix/src/TDecompLU.cxx:608; 11: Taking false branch in /opt/root_src/math/matrix/src/TDecompLU.cxx:608; 12: Assuming 'i' is >= 'n' in /opt/root_src/math/matrix/src/TDecompLU.cxx:616; 13: Loop condition is false. Execution continues on line 627 in /opt/root_src/math/matrix/src/TDecompLU.cxx:616; 14: 'j' is >= 'n' in /opt/root_src/math/matrix/src/TDecompLU.cxx:627; 15: Loop condition is false. Execution continues on line 693 in /opt/root_src/math/matrix/src/TDecompLU.cxx:627; 16: 'isAllocated' is false in /opt/root_src/math/matrix/src/TDecompLU.cxx:693; 17: Taking false branch in /opt/root_src/math/matrix/src/TDecompLU.cxx:693; 18: Returning without writing to '*index' in /opt/root_src/math/matrix/src/TDecompLU.cxx:696; 19: Returning the value 1 (loaded from 'kTRUE'), which participates in a condition later in /opt/root_src/math/matrix/src/TDecompLU.cxx:696; 20: Returning from 'TDecompLU::DecomposeLUCrout' in /opt/root_src/math/matrix/src/TDecompLU.cxx:798; 21: Left side of '||' is false in /opt/root_src/math/matrix/src/TDecompLU.cxx:798; 22: 'nrZeros' is <= 0 in /opt/root_src/math/matrix/src/TDecompLU.cxx:798; 23: Taking false branch in /opt/root_src/math/matrix/src/TDecompLU.cxx:798; 24: 'det' is null in /opt/root_src/math/matrix/src/TDecompLU.cxx:805; 25: Taking false branch in /opt/root_src/math/matrix/src/TDecompLU.cxx:805; 26: Assuming 'j' is < 'n' in /opt/root_src/math/matrix/src/TDecompLU.cxx:818; 27: Loop condition is true. Entering loop body in /opt/root_src/math/matrix/src/TDecompLU.cxx:818; 28: Loop condition is false. Execution continues on line 839 in /opt/root_src/math/matrix/src/TDecompLU.cxx:828; 29: Loop condition is false. Execution continues on line 818 in /opt/root_src/math/matrix/src/TDecompLU.cxx:839; 30: Assuming 'j' is >= 'n' in /opt/roo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:130798,load,loaded,130798,https://root.cern,https://github.com/root-project/root/issues/7458,1,['load'],['loaded']
Performance,se branch in /opt/root_src/tree/tree/src/TTree.cxx:2004; 13: Assuming 'splitlevel' is >= 0 in /opt/root_src/tree/tree/src/TTree.cxx:2007; 14: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:2007; 15: Passing null pointer value via 3rd parameter 'addobj' in /opt/root_src/tree/tree/src/TTree.cxx:2010; 16: Calling 'TTree::BranchOld' in /opt/root_src/tree/tree/src/TTree.cxx:2010; 17: Assuming 'cl' is non-null in /opt/root_src/tree/tree/src/TTree.cxx:2058; 18: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:2058; 19: Assuming the condition is false in /opt/root_src/tree/tree/src/TTree.cxx:2062; 20: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:2062; 21: Assuming 'splitlevel' is not equal to 0 in /opt/root_src/tree/tree/src/TTree.cxx:2075; 22: Taking false branch in /opt/root_src/tree/tree/src/TTree.cxx:2075; 23: 'apointer' initialized to a null pointer value in /opt/root_src/tree/tree/src/TTree.cxx:2083; 24: Dereference of null pointer (loaded from variable 'apointer') in /opt/root_src/tree/tree/src/TTree.cxx:2084; /opt/root_src/tree/tree/src/TTree.cxx:7012:4: warning: Value stored to 'i' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'i' is never read in /opt/root_src/tree/tree/src/TTree.cxx:7012; /opt/root_src/tree/tree/src/TTree.cxx:7591:10: warning: Value stored to 'nch' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'nch' is never read in /opt/root_src/tree/tree/src/TTree.cxx:7591; /opt/root_src/tree/tree/src/TTree.cxx:9170:7: warning: Value stored to 'pf' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'pf' is never read in /opt/root_src/tree/tree/src/TTree.cxx:9170; /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:597:7: warning: Potential leak of memory pointed to by 'ptr' [clang-analyzer-cplusplus.NewDeleteLeaks]; 1: Assuming field 'fParallel' is true in /opt/root_src/tree/tree/src/TTreeCacheUnzip.cxx:681; 2: Left side of '&&' is true in /opt/root_src/tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7429:73125,load,loaded,73125,https://root.cern,https://github.com/root-project/root/issues/7429,1,['load'],['loaded']
Performance,"se search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Using a `std::pair` for a custom class inside another custom class seems to somehow break the dictionary load mechanism. In the [attached reproducer](https://github.com/root-project/root/files/8609137/reproducer.tar.gz), `OtherClass` contains a `std::pair<int, MyClass>`; for both custom classes a dictionary is created. Manually loading the dictionary in the Root shell seems to lead to an incomplete type state for `MyClass`, such that some assertions fail. The failure disappear if the same assertion is tested before on a class from the same dictionary and not encompassed in the `std::pair`. It thus seems that the presence of the `std::pair` somehow interferes with loading the dictionary for the contained class. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The presence of `std:::pair` should not interfere with the dictionary of its contained classes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. This [reproducer](https://github.com/root-project/root/files/8609137/reproducer.tar.gz) showcases the problem:; ```bash; $ rootcling -f dict.cpp MyClass.h OtherClass.h LinkDef.h; $ g++ -shared -std=c++14 -fPIC -I$ROOTSYS/include dict.cpp -o libDict.so ; $ root; root [0] .L libDict.so; root [1] std::is_copy_assignable<MyClass>::value; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/type_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512:1055,load,loading,1055,https://root.cern,https://github.com/root-project/root/issues/10512,1,['load'],['loading']
Performance,"se the following GitHub issue:; * https://github.com/root-project/root/issues/12718; * https://github.com/root-project/root/issues/7686; * https://github.com/root-project/root/issues/11924; * https://github.com/root-project/root/issues/12230; * https://github.com/root-project/root/issues/11411; * https://github.com/root-project/root/issues/11596. ## Upstream contributions to cppyy in the context of this synchronization. - https://github.com/wlav/CPyCppyy/pull/11; - https://github.com/wlav/CPyCppyy/pull/12; - https://github.com/wlav/CPyCppyy/pull/14; - https://github.com/wlav/CPyCppyy/pull/16 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/17 *(was in PyROOT before)*; - https://github.com/wlav/cppyy-backend/pull/20 *(was in PyROOT before)*; - https://github.com/wlav/CPyCppyy/pull/18; - https://github.com/wlav/CPyCppyy/pull/19; - https://github.com/wlav/CPyCppyy/pull/21; - https://github.com/wlav/CPyCppyy/pull/22; - https://github.com/wlav/CPyCppyy/pull/23. ## Performance validation. To validate the performance, I ran the [Python tests in roottest](https://github.com/root-project/roottest/tree/master/python) and the [PyROOT pythonization tests](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/test) and compared runtimes with and without the cppyy upgrade. The total runtime of these tests reduced by about 4 % from 208 s to 287 s, so the performance impact of this PR is marginal. The runtime comparison for each test can be found in [cppyy_upgrade_test_runtimes.txt](https://github.com/root-project/root/files/14623432/cppyy_upgrade_test_runtimes.txt).; The worst observed performance penalty is 24 %. However, significant speedups are observed in some of the longer tests. For convenience, the 20 tests with the longest runtime are listed here:; ```; title no_cppyy_upgrade cppyy_upgrade ratio; python-regression-regression 32.61 34.30 1.051825; pyroot-pyz-rdataframe-asnumpy 14.30 14.61 1.021678; pyroot-pyz-rdataframe-makenumpy 13",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14507:2712,Perform,Performance,2712,https://root.cern,https://github.com/root-project/root/pull/14507,1,['Perform'],['Performance']
Performance,"se will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads is unlikely to help, and in fact using too many threads may degrade performance if they make requests to different regions of your local storage.; N.B. If no '--threads' argument was provided this is 1, otherw",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:3235,optimiz,optimize,3235,https://root.cern,https://github.com/root-project/root/pull/14039,2,"['optimiz', 'perform']","['optimize', 'performant']"
Performance,"sers/bellenot/libs/pythia8/8.3.03/share/Pythia8/xmldoc"" ""-P"" ""C:/Users/bellenot/build/release/RootTestDriver.cmake""; 993: Environment variables:; 993: ROOT_HIST=0; 993: Test timeout computed to be: 1500; 993: input_line_35:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RCanvas>*)obj)->operator-><ROOT::Experimental::RCanvas, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: input_line_39:10:7: warning: ignoring return value of function declared with 'nodiscard' attribute [-Wunused-result]; 993: ((const shared_ptr<ROOT::Experimental::RBox>*)obj)->operator-><ROOT::Experimental::RBox, 0>();; 993: ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 993: Traceback (most recent call last):; 993: File ""C:\Users\bellenot\git\master\tutorials\launcher.py"", line 34, in <module>; 993: spec.loader.exec_module(module); 993: File ""<frozen importlib._bootstrap_external>"", line 850, in exec_module; 993: File ""<frozen importlib._bootstrap>"", line 228, in _call_with_frames_removed; 993: File ""C:/Users/bellenot/git/master/tutorials/rcanvas/rbox.py"", line 24, in <module>; 993: box1.border.color = RColor.kBlue; 993: AttributeError: <class cppyy.gbl.ROOT.Experimental.RColor at 0x12092B98> has no attribute 'kBlue'. Full details:; 993: attribute access requires an instance; 993: 'ROOT::Experimental::RColor::kBlue' is not a known C++ class; 993: 'kBlue' is not a known C++ template; 993: 'kBlue' is not a known C++ enum; 993: CMake Error at C:/Users/bellenot/build/release/RootTestDriver.cmake:227 (message):; 993: error code: 1; 993:; 993:; 1/1 Test #993: tutorial-rcanvas-rbox-py .........***Failed 3.69 sec. 0% tests passed, 1 tests failed out of 1. Label Time Summary:; tutorial = 3.69 sec*proc (1 test). Total Test time (real) = 6.60 sec. The following tests FAILED:; 993 - tutorial-rcanvas-r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9035:1465,load,loader,1465,https://root.cern,https://github.com/root-project/root/pull/9035,1,['load'],['loader']
Performance,"setting seems to be silently ignored). Constraint term ""removal"" can be achieved by changing the constraint term to be uniform, but `RooStats::HistFactory::Measurement::AddNoSyst` also provides an alternative method. The xml created from that seems to be incompatible with `hist2workspace`, as the xml uses `NoSyst` and `hist2workspace` seems to (at least parse) `NoConstraint` instead, but crashes for `NoSyst`. ### Expected behavior; I expect constraint term editing to work for both `OverallSys` and `HistoSys` modifiers. Both approaches of changing the constraint term to be uniform and removing it completely should work with `hist2workspace`. . ### To Reproduce; Download the required input files from https://cernbox.cern.ch/index.php/s/AO4ruN3G7LNtcRo. They contain a minimal HistFactory workspace specification (xml + ROOT file with histograms) and a simple script to fit the workspace. #### Baseline for comparisons; To establish the baseline behavior, run `hist2workspace` on the provided HistFactory workspace (xml + ROOT) and perform a fit:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; The relevant best-fit parameter values are:; ```txt; NO. NAME VALUE; 1 alpha_NP_norm -4.66233e-01; 2 alpha_NP_shape -1.70517e-01; 3 mu 1.04248e+00; ```. #### `OverallSys` with uniform constraint [working as expected]. To see the behavior of the `OverallSys` modifier when removing the associated constraint term, edit the xml and add the `ConstraintTerm` configuration. The measurement should then look like this:; ```xml; <Measurement Name=""minimal_example"" Lumi=""1"" LumiRelErr=""0.1"" ExportOnly=""True"">; <POI>mu</POI>; <ParamSetting Const=""True"">Lumi</ParamSetting>; <ConstraintTerm Type=""Uniform"" RelativeUncertainty=""1"">NP_norm</ConstraintTerm>; </Measurement>; ```; Repeat the workspace conversion and fitting:; ```bash; cd input; hist2workspace minimal_example.xml; cd ..; root -l -q fit.cxx; ```; and the result is now; ```txt; NO. NAME VALUE; 1 alpha_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9070:1460,perform,perform,1460,https://root.cern,https://github.com/root-project/root/issues/9070,1,['perform'],['perform']
Performance,"shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #10 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #11 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #12 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x22dedd8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #13 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x22dedd8, this=<optimized out>) at /usr/include/c++/12/bits/new_allocator.h:181; #14 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x22dedd8, __a=...) at /usr/include/c++/12/bits/alloc_traits.h:535; #15 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_node (__n=0x22dedd0, this=<optimized out>) at /usr/include/c+",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:14558,optimiz,optimized,14558,https://root.cern,https://github.com/root-project/root/issues/12023,2,['optimiz'],['optimized']
Performance,"side() ) {; TGeoNode * node2 = _tgeoMgr->FindNextBoundaryAndStep( 100, 1) ;; if( !node2 || _tgeoMgr->IsOutside() ) {; break;; }; const double *position = _tgeoMgr->GetCurrentPoint();; const double *previouspos = _tgeoMgr->GetLastPoint();; double length = _tgeoMgr->GetStep();; TVirtualGeoTrack *track = _tgeoMgr->GetLastTrack();; std::cout << ""track is "" << track << std::endl;; } // while not outside; return 0;; }. EOF. cat >geopatch.cpp <<EOF; #include <TGeoManager.h>; #include <TEnv.h>; #include <TPluginManager.h>; #include <TROOT.h>; #include <iostream>; TVirtualGeoPainter *TGeoManager::GetGeomPainter(); {; if (!fPainter) {; const char *kind = gEnv->GetValue(""GeomPainter.Name"", """");; if (!kind || !*kind){}; //APS: switching back to root fixes it; kind = (gROOT->IsWebDisplay() && !gROOT->IsWebDisplayBatch()) ? ""web"" : ""root"";; if (auto h = gROOT->GetPluginManager()->FindHandler(""TVirtualGeoPainter"", kind)) {; if (h->LoadPlugin() == -1) {; Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);; return nullptr;; }; fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);; if (!fPainter) {; Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);; return nullptr;; }; } else {; Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);; }; }; return fPainter;; }. EOF; ; mkdir build; cd build; cmake ..; make; repro; reproBroken; ```. #### Output from reproducer. ```; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16167:3226,Load,LoadPlugin,3226,https://root.cern,https://github.com/root-project/root/issues/16167,2,"['Load', 'load']","['LoadPlugin', 'load']"
Performance,"signal handler called>; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:12098,optimiz,optimized,12098,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,splitcoll-arrayview needs a dictionary to run. This creates a dependency; between dictionary generation step and test target to fix a build-system; race condition.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5715:148,race condition,race condition,148,https://root.cern,https://github.com/root-project/root/pull/5715,1,['race condition'],['race condition']
Performance,"sr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib:/opt/openmpi/lib:/opt/rocm/lib:/opt/nvidia/hpc_sdk/Linux_x86_64/23.3/cuda/12.0/targets/x86_64-linux/lib:/opt/AMD/aocl/aocl-linux-aocc-4.1.0/aocc/lib:/usr/lib64:/usr/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/ompd:/opt/AMD/aocc-compiler-4.1.0.sles15/lib:/opt/AMD/aocc-compiler-4.1.0.sles15/lib32:/usr/lib/x86_64-linux-gnu:/usr/lib64:/usr/lib32:/usr/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/user/Builds/root_build/bin/root.exe -l -q -b -n -x hsimple.C -e return. Processing hsimple.C... *** Break *** segmentation violation. There was a crash.; This is the entire stack trace of all threads:. #0 0x00007f2dab100ad7 in __GI___wait4 (pid=5485, stat_loc=stat_loc; entry=0x7fff17431338, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f2dab100c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fff17431338, options=options; entry=0) at waitpid.c:38; #2 0x00007f2dab05051b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f2dabac274b in TUnixSystem::StackTrace() () from /home/user/Builds/root_build/lib/libCore.so; #4 0x00007f2dabac7624 in TUnixSystem::DispatchSignals(ESignals) () from /home/user/Builds/root_build/lib/libCore.so; #5 <signal handler called>; #6 0x00007f2da746e068 in llvm::PHINode::getIncomingValueForBlock(llvm::BasicBlock const*) const () from /home/user/Builds/root_build/lib/libCling.so; #7 0x00007f2da82a91e8 in llvm::TryToSimplifyUncondBranchFromEmptyBlock(llvm::BasicBlock*, llvm::DomTreeUpdater*) () from /home/user/Builds/root_build/lib/libCling.so; #8 0x00007f2da83255f9 in llvm::simplifyCFG(llvm::BasicBlock*, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::SimplifyCFGOptions const&, llvm::ArrayRef<llvm::WeakVH>) () from /home/user/Builds/root_build/lib/libCling.so; #9 0x00007f2da7e3dac6 in iterativelySimplifyCFG(llvm::Function&, llvm::TargetTransformInfo const&, llvm::DomTreeUpdater*, llvm::Simpli",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14037:1703,optimiz,optimized,1703,https://root.cern,https://github.com/root-project/root/issues/14037,1,['optimiz'],['optimized']
Performance,src/MethodBase.cxx:2711; 5: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2711; 6: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2712; /opt/root_src/tmva/tmva/src/MethodBase.cxx:2715:21: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: 'resMulticlass' initialized here in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2707; 2: Assuming 'resMulticlass' is null in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2708; 3: Taking true branch in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2708; 4: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2711; 5: Loop condition is false. Execution continues on line 2715 in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2711; 6: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/MethodBase.cxx:2715; /opt/root_src/tmva/tmva/src/MethodBoost.cxx:410:35: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:361; 2: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:361; 3: Assuming the condition is false in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:364; 4: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:364; 5: Assuming 'varTrafoStart' is <= 0 in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:379; 6: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:379; 7: Assuming field 'fCurrentMethodIdx' is < field 'fBoostNum' in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:388; 8: Loop condition is true. Entering loop body in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:388; 9: Field 'fCurrentMethodIdx' is <= 0 in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 10: Taking false branch in /opt/root_src/tmva/tmva/src/MethodBoost.cxx:390; 11: 'method' initialized here in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:55087,load,loaded,55087,https://root.cern,https://github.com/root-project/root/issues/7526,1,['load'],['loaded']
Performance,"src/TObjArray.cxx:468:29; #10 0x7f8851b7c3bd in TClass::Streamer(void*, TBuffer&, TClass const*) const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/inc/TClass.h:610:7; #11 0x7f8851b7c3bd in TKey::ReadObjectAny(TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TKey.cxx:1108:11; #12 0x7f8851a61884 in TDirectoryFile::GetObjectChecked(char const*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TDirectoryFile.cxx:1111:25; #13 0x7f88400d8d51 in void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/inc/TDirectory.h:214:18; #14 0x7f88400d8d51 in TCling::LoadPCMImpl(TFile&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1769:12; #15 0x7f88400dbc28 in TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1874:4; #16 0x7f88400e2139 in TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:2299:7; #17 0x7f8857aa5a33 in TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) /home/sft",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715:3958,Load,LoadPCM,3958,https://root.cern,https://github.com/root-project/root/issues/12715,1,['Load'],['LoadPCM']
Performance,"src/TObjArray.cxx:468:29; #16 0x7f8851b7c3bd in TClass::Streamer(void*, TBuffer&, TClass const*) const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/inc/TClass.h:610:7; #17 0x7f8851b7c3bd in TKey::ReadObjectAny(TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TKey.cxx:1108:11; #18 0x7f8851a61884 in TDirectoryFile::GetObjectChecked(char const*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TDirectoryFile.cxx:1111:25; #19 0x7f88400d8d51 in void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/inc/TDirectory.h:214:18; #20 0x7f88400d8d51 in TCling::LoadPCMImpl(TFile&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1769:12; #21 0x7f88400dbc28 in TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1874:4; #22 0x7f88400e2139 in TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:2299:7; #23 0x7f8857aa5a33 in TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) /home/sft",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715:15402,Load,LoadPCM,15402,https://root.cern,https://github.com/root-project/root/issues/12715,1,['Load'],['LoadPCM']
Performance,"src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007fc2c54dd41d in TObject::AppendPad (this=0x190c210, option=0x400c96 """") at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fc2c54dd41d in TObject::AppendPad (this=0x190c210, option=0x400c96 """") at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. ```. ## Expected behavior; No crash. ## To Reproduce; Code:. ```; #include <TCanvas.h>; #include <TText.h>; #include <TPad.h>; #include <fenv.h>. int main(int argc, char **argv) {; TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);; C->cd();; TPad* c= new TPad();; //c->cd(1);//works; c->cd();//fails; TText* t= new TText(0.5,0.5,""some text"");; t->Draw();; delete t;; delete c;; delete C;; return 0;; }. ```; Compile. ```; g++ pad4.cxx $(root-config --glibs --cflags --libs) -o pad4 -g; ```. run. ```; ./pad4; ```. ## Setup; ROOT 6.22.02 gcc4.8.5 on CentOS7/EPEL. ## Additional context; Possible fix:; Change ; ```. TVirtualPad *TPad::cd(Int_t subpadnumber); {; if (!subpadnumber) {; gPad = this;; if (!gPad->IsBatch() && GetPainter()) GetPainter()->SelectDrawable(fPixmapID);; return gPad;; }; ..... ```; to. ```. TVirtualPad *TPad::cd(Int_t subpadnumber); {; if (!subpadnumber) {",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6447:1925,optimiz,optimized,1925,https://root.cern,https://github.com/root-project/root/issues/6447,2,['optimiz'],['optimized']
Performance,"st JSON. . The attached class `TJSON` allows for this in a relatively straight forward manner. For example, one can do . ```c++; TJSON null;; TJSON b(true);; TJSON s(""RawString"");; TJSON s2(std::string(""C++String""));; TJSON i(42);; TJSON f(3.14);; TJSON a = TJSON::Array();; TJSON o = TJSON::Object();; ```; for null, boolean, string, numbers (int and float), arrays or objects (associative container). . A more complex object can be created like . ```c++ ; TJSON o2 = std::map<std::string,TJSON>{; {""key1"",""value""},; {""key2"",true},; {""key3"",; {""key4"", TJSON::Array(""This"",""is"",""an"",""array""),; ""key5"",; {""boolean"", true}; }; }; };; ```. and elements are accessed via `operator[]` . ```c++; assert o2[""key1""] == ""value"";; assert o2[""key3""][""key4""][1] == ""is""; ```. One can loop over arrays or objects via `TJSON::ArrayRange` or `TJSON::ObjectRange` respectively. . ```c++; TJSON a = TJSON::Array();; TJSON o = TJSON::Object();. for (size_t i = 0; i < 4; i++); a[i] = ""Test""+std::to_string(i);. o[""key0""] = ""value1"";; o[""key1""] = a;; o[""key2""] = 123;. std::cout << ""Array: "" << std::endl;; for (auto& e : a.ArrayRange()); std::cout << e << std::endl;. std::cout << ""Object: "" << std::endl;; for (auto& kv : o.ObjectRange()); std::cout << ""o["" << kv.first << ""] = "" << kv.second << std::endl;; ```. JSON can be read and written to streams . ```c++; std::cout << ""=== Loading ==="" << std::endl;; std::string s(""{\""key1\"":\""string\"",""; 		"" \""key2\"": true,""; 		"" \""key3\"": 1234,""; 		"" \""key4\"":null}"");. std::stringstream str(s);. TJSON j;; str >> j;; std::cout << j << std::endl;; ; TJSON j2 = TJSON::Load(s);; std::cout << j2 << std::endl;; ```. I attach `TJSON.h` and `TJSON.cxx` as well as a script with examples `Example.C`. Note, objects of the class are clearly not meant to by stored in ROOT files and thus there is no call to the `ClassImp` macro. . . Feel free to incorporate the code as you see fit. . Yours, . Christian; [TJSON.zip](https://github.com/root-project/root/files/5614520/TJSON.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6889:1868,Load,Loading,1868,https://root.cern,https://github.com/root-project/root/issues/6889,2,['Load'],"['Load', 'Loading']"
Performance,stPainter; Failed to load module PyMVA; Failed to load module FitPanel; Failed to load module Unuran; Failed to load module Quadp; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUtil; Failed to load module ASImageGui; Failed to load module G,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:2040,load,load,2040,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,"stance ""issue still exists in today's master"".; -->. This issue was addressed here: https://github.com/root-project/root/pull/3914, but it is present in ROOT 6.14/09. ### Describe the bug. The hadd ""-v 0"" option to set the verbosity level to 0 does not work in ROOT 6.14/09. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Here is an example of running hadd on two files to create an output file.; ```; hadd target.root file_1.root file_2.root. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_1.root; hadd Source file 2: file_2.root; hadd Target path: target.root:/; hadd Target path: target.root:/Histograms; ```; Result: target.root created containing a tree with the expected number of entries. I would like to use the ""-v 0"" option for hadd to set the verbosity level to 0 as described by the program info.; ```; hadd. Usage: hadd [-f[fk][0-9]] [-k] [-T] [-O] [-a]; [-n maxopenedfiles] [-cachesize size] [-j ncpus] [-v [verbosity]]; targetfile source1 [source2 source3 ...]. If the option -v is used, explicitly set the verbosity level;; 0 request no output, 99 is the default; ```. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; hadd -v 0 target.root file_1.root file_2.root. hadd Target file: 0; hadd compression setting for all ouput: 1; hadd Source file 1: target.root; Error in <TFile::TFile>: file target.root does not exist; Error in <TFileMerger::AddFile>: cannot open file target.root; hadd exiting due to error in target.root; ```; Result: target.root not created. ```; hadd target.root file_1.root file_2.root -v 0. hadd Target file: target.root; hadd compression setting for all ouput: 1; hadd Source file 1: file_2.root; hadd Source file 2:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11372:1302,cache,cachesize,1302,https://root.cern,https://github.com/root-project/root/issues/11372,1,['cache'],['cachesize']
Performance,"stance):. ```; >>> thread apply all bt 10. Thread 2 (Thread 0x7fffdc0e2640 (LWP 312745) ""repro_ttreeproc""):; #0 0x00007ffff767d973 in TGenCollectionProxy::PopProxy (this=0x7fffd4016090) at ../io/io/src/TGenCollectionProxy.cxx:1333; #1 0x00007ffff7d57a15 in TVirtualCollectionProxy::TPushPop::~TPushPop (this=0x7fffdc0dad20, __in_chrg=<optimized out>) at ../core/cont/inc/TVirtualCollectionProxy.h:65; #2 0x00007ffff76274b1 in TEmulatedCollectionProxy::Destructor (this=0x7fffd4016090, p=0x7fffd40156e0, dtorOnly=false) at ../io/io/src/TEmulatedCollectionProxy.cxx:87; #3 0x00007ffff7d4f8c2 in TClass::Destructor (this=0x7fffd40152c0, obj=0x7fffd40156e0, dtorOnly=false) at ../core/meta/src/TClass.cxx:5417; #4 0x00007ffff676afdb in TBranchElement::ReleaseObject (this=0x7fffd4017590) at ../tree/tree/src/TBranchElement.cxx:4743; #5 0x00007ffff676b265 in TBranchElement::ResetAddress (this=0x7fffd4017590) at ../tree/tree/src/TBranchElement.cxx:4806; #6 0x00007ffff675b10b in TBranchElement::~TBranchElement (this=0x7fffd4017590, __in_chrg=<optimized out>) at ../tree/tree/src/TBranchElement.cxx:982; #7 0x00007ffff675b338 in TBranchElement::~TBranchElement (this=0x7fffd4017590, __in_chrg=<optimized out>) at ../tree/tree/src/TBranchElement.cxx:1003; #8 0x00007ffff7ceae9f in TCollection::GarbageCollect (obj=0x7fffd4017590) at ../core/cont/src/TCollection.cxx:736; #9 0x00007ffff7cfbe70 in TObjArray::Delete (this=0x7fffd4011ab8) at ../core/cont/src/TObjArray.cxx:376; (More stack frames follow...). Thread 1 (Thread 0x7ffff42bec00 (LWP 312681) ""repro_ttreeproc""):; #0 0x00007ffff767d973 in TGenCollectionProxy::PopProxy (this=0x7fffd4016090) at ../io/io/src/TGenCollectionProxy.cxx:1333; #1 0x00007ffff656b78d in (anonymous namespace)::TCollectionLessSTLReader::GetSize (this=0x5555577ccb80, proxy=0x5555577cdde0) at ../tree/treeplayer/src/TTreeReaderArray.cxx:130; #2 0x0000555555561837 in ROOT::Internal::TTreeReaderArrayBase::GetSize (this=0x7fffffffc1c0) at /home/blue/ROOT/master/cmake-build-f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10357:2245,optimiz,optimized,2245,https://root.cern,https://github.com/root-project/root/issues/10357,1,['optimiz'],['optimized']
Performance,"std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=; 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902; #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163; #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:21466,optimiz,optimized,21466,https://root.cern,https://github.com/root-project/root/issues/8931,2,['optimiz'],['optimized']
Performance,std::pair screws dictionary load,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512:28,load,load,28,https://root.cern,https://github.com/root-project/root/issues/10512,1,['load'],['load']
Performance,"std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (this=0x1ab6a80, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/hashtable.h:1584; #12 std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::~unordered_map (this=0x1ab6a80, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/unordered_map.h:102; #13 std::_Destroy<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > > (__pointer=0x1ab6a80) at /usr/include/c++/12/bits/stl_construct.h:151; #14 std::allocator_traits<std::allocator<void> >::destroy<std::unordered_map<std::__cxx1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:7233,optimiz,optimized,7233,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable (this=0x1cf6570, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/hashtable.h:1584; #19 std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > >::~unordered_map (this=0x1cf6570, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/unordered_map.h:102; #20 std::_Destroy<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > > (__pointer=0x1cf6570) at /usr/include/c++/12/bits/stl_construct.h:151; #21 std::allocator_traits<std::allocator<void> >::destroy<std::unordered_map<std::__cxx1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:18086,optimiz,optimized,18086,https://root.cern,https://github.com/root-project/root/issues/12023,2,['optimiz'],['optimized']
Performance,"stract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:8892,optimiz,optimized,8892,https://root.cern,https://github.com/root-project/root/issues/15117,2,['optimiz'],['optimized']
Performance,suming 'nbin' is >= 1 in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:187; 14: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:187; 15: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:198; 16: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:198; 17: Value assigned to 'h1' in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:199; 18: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 19: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 20: Assuming 'cell_value' is not equal to kValue in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 21: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 22: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:208; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86:36: warning: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') [clang-analyzer-core.NullDereference]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 3: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 3: Passing null pointer value via 1st parameter 'foam' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 4: Calling 'PDEFoamKernelLinN::WeightLinNeighbors' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 5: Called C++ object pointer is null in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:107978,load,loaded,107978,https://root.cern,https://github.com/root-project/root/issues/7526,1,['load'],['loaded']
Performance,"t /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:823; #27 0x00007fffeebcb560 in cling::Interpreter::DeclareCFunction (this=0x4a0f30, name=..., code=..., withAccessControl=true) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1096; #28 0x00007fffeebcb862 in cling::Interpreter::compileFunction (this=0x4a0f30, name=..., code=..., ifUnique=false, withAccessControl=true); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:1140; #29 0x00007fffeeafb83c in TClingCallFunc::compile_wrapper (withAccessControl=true, wrapper=..., wrapper_name=..., this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:270; #30 TClingCallFunc::make_wrapper (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:1096; #31 0x00007fffeeafbcb8 in TClingCallFunc::IFacePtr (this=this@entry=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2233; #32 0x00007fffeeafbe83 in TClingCallFunc::ExecT<long> (address=0x0, this=0xcf3c10) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2045; #33 TClingCallFunc::ExecInt (this=0xcf3c10, address=0x0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TClingCallFunc.cxx:2065; #34 0x00007ffff7c56e8d in TMethodCall::Execute (this=0xd97710, object=<optimized out>, retLong=@0x7fffffffd958: 0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TMethodCall.cxx:457; #35 0x0000000000401009 in TMethodCall::Execute(long&) (); #36 0x00000000004010ea in long TPluginHandler::ExecPluginImpl<>() (); #37 0x000000000040106d in long TPluginHandler::ExecPlugin<>(int) (); #38 0x0000000000400e21 in mytest() (); #39 0x0000000000400e92 in main (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:9381,optimiz,optimized,9381,https://root.cern,https://github.com/root-project/root/pull/2776,2,['optimiz'],['optimized']
Performance,"t /usr/include/c++/8/bits/locale_facets.h:877; #25 WrapperCall (method=6088041216, nargs=2, args_=0x7fffc4480880, self=0x16b1482f0, result=0x16b0b6990) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (method=6088041216, self=0x16b1482f0, nargs=2, args=0x7fffc4480880, result_type=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:80; #29 CPyCppyy::(anonymous namespace)::InstanceExecutor::Execute (this=0x167f07840, method=6088041216, self=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:594; #30 0x00007fff7cb4f480 in CPyCppyy::CPPMethod::ExecuteFast (ctxt=<optimized out>, offset=<optimized out>, self=<optimized out>, this=0x16ae03d30) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #31 CPyCppyy::CPPMethod::Execute (this=0x16ae03d30, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:725; #32 0x00007fff7cb4fe44 in CPyCppyy::CPPMethod::Call (this=0x16ae03d30, self=; 0x7fff6b79ae90: 0x7fff6b533fc0, args=0x7fff7cc54b08, kwds=<optimized out>, ctxt=0x7fffc4480860) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783; #33 0x00007fff7cb56de8 in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fff6b79ae80, args=0x7fff7cc54b08, kwds=0x7fff7cc60ab0)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:32265,optimiz,optimized,32265,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"t /usr/include/root/ROOT/RDF/RInterface.hxx:104; #30 main (argc=<optimized out>, argv=<optimized out>) at /home/yan/codes/RDF_bug_report/main.cxx:82; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #10 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #11 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #12 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x22dedd8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #13 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:23134,optimiz,optimized,23134,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"t what was happening was that the job was hitting; the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below.; When i run this on lxplus, it fails after about 21600 iterations, at which; point we have. ```; 21600 vmsize 1.2G nvma 65469; ```. So the total vmsize still (relatively...) quite small, but the number; of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```; 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 ; 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 ; 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 ; 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 ; 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 ; 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 ; 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 ; ```. So each time the jitter runs, it is producing a section of executable; memory, a section of read-only memory, and a section of read-write memory.; This would also be a performance issue. The jitter should somehow be more intelligent about grouping together; regions of the same protection. This may however be in tension; with other requirements, such as this comment from IncrementalJit.cpp:. ```; // A memory manager for Cling that reserves memory for code and data sections; // to keep them contiguous for the emission of one module. This is required; // for working exception handling support since one .eh_frame section will; // refer to many separate .text sections. However, stack unwinding in libgcc; // assumes that two unwinding objects (for example coming from two modules); // are non-overlapping, which is hard to guarantee with separate allocations; // for the individual code sections.; ```. This was fixed in the original ATLAS job that prompted this by removing the behavior that was triggering auto-parsing. Thus, this is not a priority for us. But i wanted to go ahead and submit this in order to document the issue. ### Reproducer. ```; import RO",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14156:1478,perform,performance,1478,https://root.cern,https://github.com/root-project/root/issues/14156,1,['perform'],['performance']
Performance,"t-6.32.00/redhat-linux-build/tutorials/./hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/metacling/src/TCling.cxx:3578; #53 0xf7b971cb in TApplication::ExecuteFile (file=<optimized out>, error=<optimized out>, keep=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1863; #54 0xf7b97562 in TApplication::ProcessFile (this=0x5784e320, file=0xffeff0cd ""hsimple.C"", error=0xffeff0bc, keep=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TApplication.cxx:1735; #55 0xf7ee0cbe in TRint::ProcessLineNr (this=0x5784e320, filestem=0xf7ef42de ""ROOT_cli_"", line=0xffeff0ca "".x hsimple.C"", error=0xffeff0bc) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:820; #56 0xf7ee2fbd in TRint::Run (this=0x5784e320, retrn=false) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/rint/src/TRint.cxx:461; #57 0x565db23d in main (argc=<optimized out>, argv=0xfff01224) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/main/src/rmain.cxx:84; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:10096,optimiz,optimized,10096,https://root.cern,https://github.com/root-project/root/issues/15738,1,['optimiz'],['optimized']
Performance,"t-io-transient-base-WriteFile (Failed); 	1754 - roottest-root-io-transient-base-hadd_autoload (Failed); 	1799 - roottest-root-meta-countIncludePaths (Failed); 	1841 - roottest-root-meta-MakeProject-runaliceesd (Failed); 	1852 - roottest-root-meta-ROOT-7462-make (Failed); 	2229 - roottest-root-tree-cache-perfstattest-libevent-build (Failed); 	2230 - roottest-root-tree-cache-perfstattest (Failed); ```; * You can ignore the failures for numba, as I don't have that installed.; * The math tests seem to fail because of strict tolerances and errors related to SIMD being enabled (I used `-march=native` on a machine that has AVX2 support). I suggest enabling SIMD on at least one of the CI builds in Jenkins to cover that if that's not the case now. ; * The test `roottest-root-tree-cache-perfstattest-libevent-build` and some others fail because of a build type not being set (I just set `CMAKE_CXX_FLAGS` and not `CMAKE_BUILD_TYPE`, which should be a valid configuration). It's fine to require setting a build type for testing, but having a fallback for when it's not set is probably better. In CI a build type is usually set, so you won't see these failures in Jenkins.; * Some of the other tests fail due to `unresolved while linking` errors from cling, which could be something related to the `-fPIE` fixes.; * The test loadAllLibs may fail if `Loading library libVMCLibrary.so [rc = -1]` shows in the output, which can happen if VMC is installed as a separate package somewhere. Having VMC installed can also make other tests fail as well, as it will try to load wrong ROOT libraries from another build. I had to uninstall both ROOT and VMC on my machine to be able to run the tests, which is not great. I think it is a good idea to have ROOT (and maybe VMC) installed with yum on at least one of the build nodes to ensure this sort of problem doesn't happen (i.e. picking up wrong ROOT and other libraries from elsewhere while running roottest). This has been a recurring problem with roottest.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9436:3079,load,loadAllLibs,3079,https://root.cern,https://github.com/root-project/root/issues/9436,3,"['Load', 'load']","['Loading', 'load', 'loadAllLibs']"
Performance,"t-source/core/metacling/src/TCling.cxx:2542; #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520; #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591; #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463; #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436; #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795; #64 0x00007f54c943fe5e in TRint::Run (this=this; entry=0x55ed24b82e70, retrn=retrn; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446; #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:15297,optimiz,optimized,15297,https://root.cern,https://github.com/root-project/root/issues/9595,1,['optimiz'],['optimized']
Performance,"t.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:8661,optimiz,optimized,8661,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"t.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:9967,optimiz,optimized,9967,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"t.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:11273,optimiz,optimized,11273,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"t.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:12579,optimiz,optimized,12579,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"t.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:13885,optimiz,optimized,13885,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"t.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:15191,optimiz,optimized,15191,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"t.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:16497,optimiz,optimized,16497,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,t/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong64_t:' at line 178 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179:35: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:56221,load,loaded,56221,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,"tBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TSchemaRule.cxx:459; #39 0x00002b4bd1cd28b8 in ROOT::TGenericClassInfo::CreateRuleSet (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>, vect=..., ProcessReadRules=true) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:319; #40 0x00002b4bd1cd26bd in ROOT::TGenericClassInfo::GetClass (this=0x2b4bf40eb840 <ROOT::GenerateInitInstanceLocal(reco::btag::TrackData const*)::instance>) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TGenericClassInfo.cxx:286; #41 0x00002b4bd1cac20b in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:3039; #42 0x00002b4bd1cabf33 in TClass::GetClass (name=0xc24d320 ""reco::btag::TrackData"", load=true, silent=false) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f72422b66/root-6.28.03/core/meta/src/TClass.cxx:2970; #43 0x00002b4bf68090a5 in ?? (); #44 0x0000000000000001 in ?? (); #45 0x00000001951b6c50 in ?? (); #46 0x00007ffd951b6840 in ?? (); #47 0x00007ffd951b6948 in ?? (); #48 0x00007ffd951b6910 in ?? (); #49 0x00002b4bd18990fd in WrapperCall (method=47604637311029, nargs=140727105054640, args_=0x7ffd951b6760, self=0x7ffd951b6750, result=0x7ffd951b6748) at /pool/condor/dir_43945/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.03-a7d22f99f85372e3ac7a621f724",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12771:13879,load,load,13879,https://root.cern,https://github.com/root-project/root/issues/12771,2,['load'],['load']
Performance,"tMerger::fillBranch<o2::data::SubEventInfo> (this=this; entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr; entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281; #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313; #19 o2::devices::O2HitMerger::handleSimData (this=this; entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377; #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357; #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460; #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158; #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763; #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:23408,optimiz,optimized,23408,https://root.cern,https://github.com/root-project/root/issues/8931,4,['optimiz'],['optimized']
Performance,"tOrder.cxx:123; 2187: #9 0x00007f2a631f305a in call_init (l=<optimized out>, argc=argc; 2187: entry=37, argv=argv; 2187: entry=0x7ffc0cd45a68, env=env; 2187: entry=0x61600030f680) at dl-init.c:72; 2187: #10 0x00007f2a631f315a in call_init (env=0x61600030f680, argv=0x7ffc0cd45a68, argc=37, l=<optimized out>) at dl-init.c:30; 2187: #11 _dl_init (main_map=0x61a00008b280, argc=37, argv=0x7ffc0cd45a68, env=0x61600030f680) at dl-init.c:119; 2187: #12 0x00007f2a617509bc in _dl_catch_exception () from /lib64/libc.so.6; 2187: #13 0x00007f2a631fa88e in dl_open_worker (a=0x7ffc0cd41a20) at dl-open.c:794; 2187: #14 dl_open_worker (a=0x7ffc0cd41a20) at dl-open.c:757; 2187: #15 0x00007f2a61750964 in _dl_catch_exception () from /lib64/libc.so.6; 2187: #16 0x00007f2a631faa71 in _dl_open (file=0x6070000a18e0 ""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", mode=-2147483391, caller_dlopen=0x2ce7f6 <__interceptor_dlopen.part.267+102>, nsid=<optimized out>, argc=37, argv=<optimized out>, env=0x61600030f680) at dl-open.c:876; 2187: #17 0x00007f2a61bc5f8a in dlopen_doit () from /lib64/libdl.so.2; 2187: #18 0x00007f2a61750964 in _dl_catch_exception () from /lib64/libc.so.6; 2187: #19 0x00007f2a61750a23 in _dl_catch_error () from /lib64/libc.so.6; 2187: #20 0x00007f2a61bc652e in _dlerror_run () from /lib64/libdl.so.2; 2187: #21 0x00007f2a61bc602a in dlopen; 2187:; 2187: GLIBC_2.2.5 () from /lib64/libdl.so.2; 2187: #22 0x00000000002ce7f6 in __interceptor_dlopen.part.267 (); 2187: #23 0x00007f2a50c02ffb in cling::utils::platform::DLOpen (Path=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", Err=0x7f2a5e651200) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; 2187: #24 0x00007f2a5087994c in cling::DynamicLibraryManager::loadLibrary (this=<optimized out>, libStem=..., permanent=<optimized out>, resolved=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DynamicLibraryManage",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:3265,optimiz,optimized,3265,https://root.cern,https://github.com/root-project/root/issues/11867,4,['optimiz'],['optimized']
Performance,"t_RooFitMultiProcess_ProcessManager; 3. test_RooFitMultiProcess_Job; 2. TestStatistics:; 1. testLikelihoodGradientJob; 2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the sourc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:5147,Queue,Queue,5147,https://root.cern,https://github.com/root-project/root/pull/8294,1,['Queue'],['Queue']
Performance,"t_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:26053,optimiz,optimized,26053,https://root.cern,https://github.com/root-project/root/issues/10676,5,['optimiz'],['optimized']
Performance,"t_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:34701,optimiz,optimized,34701,https://root.cern,https://github.com/root-project/root/issues/10676,5,['optimiz'],['optimized']
Performance,"ta/Run2012BC_DoubleMuParked_Muons.zstd.ntuple as _file0...; (TFile *) 0x55fecfbb7140; root [1] _file0->ls(); TFile**		data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple	; TFile*		data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple	; KEY: ROOT::Experimental::RNTuple	Events;1	object title; root [2] Events<Enter>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f17510ea707 in __GI___wait4 (pid=109605, stat_loc=stat_loc; entry=0x7ffd9df79db8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f17510ea6cb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffd9df79db8, options=options; entry=0) at waitpid.c:38; #2 0x00007f17510627fb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f1751960d69 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2395; #5 0x00007f17519606f4 in TUnixSystem::DispatchSignals (this=0x55fecde2a420, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:402; #10 0x00007f174bd7939f in cling::MultiplexInterpreterCallbacks::LookupObject(clang::LookupResult&, clang::Scope*) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12673:1395,optimiz,optimized,1395,https://root.cern,https://github.com/root-project/root/issues/12673,1,['optimiz'],['optimized']
Performance,"tail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64; #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0; entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243; #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::Pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:34132,optimiz,optimized,34132,https://root.cern,https://github.com/root-project/root/issues/8931,4,['optimiz'],['optimized']
Performance,"tcling_stage1 0x00000001077c389c llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 140; 20 rootcling_stage1 0x0000000104e0948c compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) + 2848; 21 rootcling_stage1 0x0000000104e0a6d0 compileModuleAndReadASTImpl(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1860; 22 rootcling_stage1 0x0000000104e06378 compileModuleAndReadAST(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) + 1284; 23 rootcling_stage1 0x0000000104e05b54 clang::CompilerInstance::findOrCompileModuleAndReadAST(llvm::StringRef, clang::SourceLocation, clang::SourceLocation, bool) + 2112; 24 rootcling_stage1 0x0000000104e065c8 clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocation>>, clang::Module::NameVisibilityKind, bool) + 516; 25 rootcling_stage1 0x0000000105db3628 clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) + 3988; 26 rootcling_stage1 0x0000000105dadc08 clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::detail::SearchDirIteratorImpl<true>, clang::FileEntry const*) + 144; 27 rootcling_stage1 0x0000000105dae410 clang::Preprocessor::HandleDirective(clang::Token&) + 1604; 28 rootcling_stage1 0x0000000105d85814 clang::Lexer::LexTokenInternal(clang::Token&, bool) + 5604; 29 rootcling_stage1 0x0000000105de0c28 clang::Preprocessor::Lex(clang::Token&) + 104; 30 rootcling_stage1 0x00000001050cfd08 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, clang::Sema",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16498:7998,load,loadModule,7998,https://root.cern,https://github.com/root-project/root/issues/16498,1,['load'],['loadModule']
Performance,"td::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""..., error=0x7fffd51c7de8) at /usr/include/c++/8/bits/basic_string.h:256; #20 0x00007fffa32551c8 in ROOT::Internal::RDF::<lambda(const string&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, codeSlice=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""...) at /usr/include/c++/8/bits/basic_string.h:2294; #21 ROOT::Internal::RDF::InterpreterCalc (code=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""..., context=""RLoopManager::Run"") at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RDFUtils.cxx:357; #22 0x00007fffa326c338 in ROOT::Detail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:24270,optimiz,optimized,24270,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"te_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x7ff44b231140 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/mutex:729; #22 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x3ee2b40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:404; #23 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1674; #24 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60; #25 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), F",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:12838,optimiz,optimized,12838,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,"tem.cxx:3586; #10 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=..., this=0x7fffc4480180) at /usr/include/c++/8/new:169; #12 llvm::orc::ExecutionSession::lookup (this=0x1656ebc10, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; #13 0x00007fff78004d00 in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /usr/include/c++/8/bits/atomic_base.h:295; #14 0x00007fff76a59050 in llvm::orc::LLJIT::lookupLinkerMangled (Name=..., JD=..., this=0x16584c2e0) at /usr/include/c++/8/ppc64le-redhat-linux/bits/gthr-default.h:778; #15 llvm::orc::LLJIT::lookup (UnmangledName=..., JD=..., this=0x16584c2e0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #16 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x16584c2e0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #17 cling::IncrementalJIT::getSymbolAddress (this=0x1657ff820, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #18 0x00007fff76a50690 in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:29152,optimiz,optimized,29152,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"tems or if running other heavy applications - the number of your own threads running at any time may be lower than the limit due to demand on the CPU. 3. The 'Real Time' is similar to 'CPU Time / number of threads' AND 'Compressed Throughput' is lower than expected for your storage medium:; This would imply that your CPU threads aren't decompressing data as fast as your storage medium can provide it, and so decompression is the bottleneck. The best way to decrease your runtime would be to utilise a system with a faster CPU, or make use use of more threads when running, or use a compression algorithm with a higher decompression rate such as LZ4, possibly at the cost of some extra file size. A note on caching:. If your data is stored on a local disk, the system may cache some/all of the file in memory after it is first read. If this is realistic of how your analysis will run - then there is no concern. However, if you expect to only read files once in a while - and as such the files are unlikely to be in the cache - consider clearing the cache before running rootreadspeed. On Linux this can be done by running `echo 3 > /proc/sys/vm/drop_caches` as a superuser or a specific file can be dropped from the cache with `dd of=<FILENAME> oflag=nocache conv=notrunc,fdatasync count=0 > /dev/null 2>&1`. Known overhead of TTreeReader, RDataFrame:. rootreadspeed is designed to read all data present in the specified branches, trees and files at the highest possible speed. When the application bottleneck is not in the computations performed by analysis logic, higher-level interfaces built on top of TTree such as TTreeReader and RDataFrame are known to add a significant runtime overhead with respect to the runtimes reported by rootreadspeed (up to a factor 2). In realistic analysis applications it has been observed that a large part of that overhead is compensated by the ability of TTreeReader and RDataFrame to read branch values selectively, based on event cuts, and this overhead wi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:5467,cache,cache,5467,https://root.cern,https://github.com/root-project/root/pull/14039,2,['cache'],['cache']
Performance,"ternal () from /lib64/ld-linux-x86-64.so.2; #6 0x00007ffff7def59e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #7 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #8 0x00007ffff7deeb8b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #9 0x00007ffff720afab in dlopen_doit () from /lib64/libdl.so.2; #10 0x00007ffff7dea7d4 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #11 0x00007ffff720b5ad in _dlerror_run () from /lib64/libdl.so.2; #12 0x00007ffff720b041 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #13 0x00007fffefcd2e24 in cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepA",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:3434,load,loadLibrary,3434,https://root.cern,https://github.com/root-project/root/issues/7657,1,['load'],['loadLibrary']
Performance,"ternals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:137:63: note: expanded from macro 'atomic_exchange'; #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOMIC_SEQ_CST); ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class MyClass with content:. #line 1 ""libMyLibrary dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""MyClass.h"". #undef _BACKWARD_BACKWARD_WARNING_H. ROOT_prompt_0:1:1: error: must use 'class' tag to refer to type 'MyClass' in this scope; MyClass c;; ^; class ; ROOT_prompt_0:1:1: note: class 'MyClass' is hidden by a non-type declaration of 'MyClass' here; ROOT_prompt_0:1:9: error: variable has incomplete type 'MyClass'; MyClass c;; ^; libMyLibrary dictionary forward declarations' payload:5:62: note: forward declaration of 'MyClass'; class __attribute__((annotate(""$clingAutoload$MyClass.h""))) MyClass;; ^; root [1]; ```. ## Expected behavior. When using the same demonstrator code on Linux, everything goes as expected. ```; [bash][Legolas]:root-boost-dictionary-error > root; ------------------------------------------------------------------; | Welcome to ROOT 6.22/02 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 17 2020, 12:46:52 |; | From tags/v6-22-02@v6-22-02 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] MyClass c;; root [1]; ```. ## To Reproduce. Just take the demonstrator code from https://github.com/krasznaa/root-boost-dictionary-error, tweak its [Makefile](https://github.com/krasznaa/root-boost-dictionary-error/blob/master/Makefile) to work correctly for you, and then try to have interactive ROOT load the dictionary for the `MyClass` type, as I've shown above. ## Setup. - ROOT 6.22/02;; - Boost 1.73.0;; - macOS 10.15.6;; - Xcode 12.0. ## Additional context. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:11153,load,load,11153,https://root.cern,https://github.com/root-project/root/issues/6454,1,['load'],['load']
Performance,"ters from the `TGraph(Asymm,Bent)Errors` classes as Python `list`:. ```; #10 0x00007f7361d62896 in CPyCppyy::(anonymous namespace)::DoubleConverter::FromMemory (this=0x7f7361e399f8 <(anonymous namespace)::InitConvFactories_t::InitConvFactories_t()::{lambda(long*)#51}::operator()(long*) const::c>, address=0x55e74bab5000) at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:952; #11 0x00007f7361dbf232 in ll_item (self=0x7f7354768960, index=88746) at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:376; #12 0x00007f736fc1e9e5 in iter_iternext (iterator=<iterator at remote 0x7f73620b46a0>) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/iterobject.c:65; #13 0x00007f736fbf33fd in list_extend (self=self; entry=0x7f732b67c200, iterable=<cppyy.LowLevelView at remote 0x7f7354768960>) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/listobject.c:966; #14 0x00007f736fc11261 in list___init___impl (iterable=<optimized out>, self=0x7f732b67c200) at /usr/src/debug/python3.11-3.11.4-1.fc37.x86_64/Objects/listobject.c:2790; ```. ### Reproducer. ```python; import ROOT; import numpy. if __name__ == ""__main__"":; n = 10; x = numpy.array([0.22, 0.05, 0.25, 0.35, 0.5, 0.61, 0.7, 0.85, 0.89, 0.95], dtype=numpy.double); y = numpy.array([1, 2.9, 5.6, 7.4, 9, 9.6, 8.7, 6.3, 4.5, 1], dtype=numpy.double); exl = numpy.array([.05, .1, .07, .07, .04, .05, .06, .07, .08, .05], dtype=numpy.double); eyl = numpy.array([.8, .7, .6, .5, .4, .4, .5, .6, .7, .8], dtype=numpy.double); exh = numpy.array([.02, .08, .05, .05, .03, .03, .04, .05, .06, .03], dtype=numpy.double); eyh = numpy.array([.6, .5, .4, .3, .2, .2, .3, .4, .5, .6], dtype=numpy.double); gr = ROOT.TGraphAsymmErrors(n, x, y, exl, exh, eyl, eyh). print(list(gr.GetEXlow())); ```. ### ROOT version. master, but any will do. ### Installation method. built from source. ### Operating system. Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13600:1163,optimiz,optimized,1163,https://root.cern,https://github.com/root-project/root/issues/13600,1,['optimiz'],['optimized']
Performance,"test in `testNaNPacker` to also run on GPU; a3294b725f [RF] Code format for `testNaNPacker.cxx`; 8a67cf611c [RF] Support pdf normalization with error logging in RooBatchCompute; 5ae7ae018e [RF] More `RooNaNPacker` to RooBatchCompute; 84870e3207 [RF] Less use of the `RunContext` class in RooFit; aa47d71aae [RF] Implement `RooPolynomial` and `RooPolyVar` in BatchMode; e826686911 [RF] Remove the `RooAbsReal::evaluateSpan()` family of functions; 3608bc02fb [RF] Don't put scalar intermediate results into loops in generated code; 249131f739 [RF] Generalize and reuse some of the BatchMode code in code squashing; 7a12837f66 [RF] Split up CodeSquashContext in `.h` and `.cxx` file; 1985b1b8d7 [RF] Reuse BatchMode code to fill observables vector in RooFuncVector; 022e9fbd49 [RF] Improved implementation of `RooHelpers::Detail::snapshotImpl()`; d2bb816269 [RF] Move implemenation of `RooAbsArg::cloneTree()` to RooHelpers; cf515dec74 [RF] Optimize implementation of `cloneTreeWithSameParameters()`; 3d258d8a4c [RF] Mode `RooAbsCollection::snapshot()` implementation to RooHelpers; f4fc140268 [RF] Remove RooMomentMorphND; 6af8005e97 [RF] Add `selfNormalized` flag to RooWrapperPdf; d677b811d9 [RF] Increase version number of `RooRealVar` from 9 to 10; 13d83d5808 [RF] Fix wrong size for gradient output array in testRooFuncWrapper.; 912c32c5e2 [RF] Remove deprecated `Format(const char*, int)` command argument; 6dcc352289 [RF] Move loop management for code generation into CodeSquashContext; ad2361c6ea [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); c43c1ff1f3 [RF] Add 'translate' to RooNllVarNew.; 666a4fcbde [RF] Minor improvements to RooFit evaluation code generation; c51376731b [RF][NFC] Fix typo.; 826a6b38f4 [RF] Disable RooFuncWrapper test if clad is off.; 4148a05e5a [RF] Remove wrong header declaration from roofit/roofit.; 98d004c200 [RF] Fix visibility of the res/ directories.; e97347056c [RF] Make RooBatchCompute dependency public.; 4483b01b7f [RF] Add initia",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12708:1708,Optimiz,Optimize,1708,https://root.cern,https://github.com/root-project/root/pull/12708,2,['Optimiz'],['Optimize']
Performance,"the full method was protected with the global lock. Now we split it in two parts, the first one where the cache is looked at and no state is modified with a read lock. The second, where the cache is filled and the interpreter is invoked with a write lock. This helps considerably scaling MT workflows.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2237:106,cache,cache,106,https://root.cern,https://github.com/root-project/root/pull/2237,2,['cache'],['cache']
Performance,"this PR aims to reduce the contention in TClass::GetBaseClassOffset.; Zero is returned as offset value if the class that the TClass instance represents; and all of its ancestors has no multiple inheritance.; This information can be checked without accessing the interpreter, and therewith; acquiring the global lock, because it now originally resides in the dictionaries.; The information is put in the dictionaries by rootcling, which explores the; inheritance chain *at build time*. The expectation is to reduce *considerably* contention due to accesses to the interpreter and caches of offsets in the TClassInfo instances. Potentially, this mechanism can be upgraded inserting in the dictionaries; not only the aforementioned information, but also the offsets to all the; bases.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319:579,cache,caches,579,https://root.cern,https://github.com/root-project/root/pull/2319,1,['cache'],['caches']
Performance,"this is a repeat of https://root-forum.cern.ch/t/std-bitset-streamer-endianness-issue/41529. ---. hi there,. I was adding support for reading/writing `std::bitset<N>` to [groot](https://go-hep.org/x/hep/groot) when I noticed the following behaviour:. ```; $> cat ./Event.h; #ifndef MYEVT_H; #define MYEVT_H 1. #include <bitset>. struct Event {; 	std::bitset<16> Bs;; };. #endif // MYEVT_H. $> cat ./run.C; #include ""Event.h"". void run() {; 	gSystem->Load(""./libEvent.so"");. 	auto f = TFile::Open(""std-bitset.root"", ""RECREATE"");; 	auto t = new TTree(""tree"", ""tree"");. 	int bufsize = 32000;; 	int splitlvl = 99;. 	Event e;; 	e.Bs = std::bitset<16>(""0001010111101010"");. 	t->Branch(""evt"", &e, bufsize, splitlvl);. 	t->Fill();; 	f->Write();; 	f->Close();. 	exit(0);; }. $> root -b -q ./run.C; ```. reading back the file with `groot`, I see the following bit patterns:. ```; $> root-dump testdata/std-bitset.root ; >>> file[testdata/std-bitset.root]; key[000]: tree;1 ""tree"" (TTree); [000][evt]: {[0 1 0 1 0 1 1 1 1 0 1 0 1 0 0 0]}; ```. _ie:_ it seems endianness of the bitset isn't handled when writing the bitset (and it's whatever it happens to be on the writing machine).; (I was expecting: `[0 0 0 1 0 1 0 1 1 1 1 0 1 0 1 0]` as the on-disk bytes). or are `bitset<N>` values always little-endian encoded?. I was also a bit surprised to see a `std::bitset<N>` to take (N+4)bytes on disk (instead of ""just"" N**bits** +4bytes, or, even, just N**bits**). is there an underlying reason I am missing here? (it's also quite possible I am completely mistaken, of course). thx,; -s; ___; _Please read [tips for efficient and successful posting](https://root-forum.cern.ch/t/tips-for-efficient-and-successful-posting/28292) and [posting code](https://root-forum.cern.ch/t/posting-code-read-this-first/28293)_. ROOT Version: 6.22/02; Built for linuxx8664gcc on Aug 17 2020, 12:46:52; From tags/v6-22-02@v6-22-02; ___",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6412:450,Load,Load,450,https://root.cern,https://github.com/root-project/root/issues/6412,1,['Load'],['Load']
Performance,"this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fffa2f067e8 in TClingCallFunc::make_ctor_wrapper (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1215; #19 0x00007fffa2f07164 in TClingCallFunc::ExecDefaultConstructor (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name="""", address=0x0, nary=0) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1895; #20 0x00007fffa2f1838c in TClingClassInfo::New (this=0x10a9e3870, normCtxt=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingClassInfo.cxx:1098; #21 0x00007fffa2e2cdf4 in TCling::ClassInfo_New (this=<optimized out>, cinfo=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:8290; #22 0x00007fffa8f0be24 in TClass::NewObject (this=0x10a9218e0, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:433; #23 0x00007fffa8f0fa14 in TClass::New (this=<optimized out>, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:4969; #24 0x00007fffa92e0724 in TBufferFile::ReadObjectAny (this=0x7ffff83ea100, clCast=0x10a861920) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:2458; #25 0x00007fffa9389c44 in TGenCollectionStreamer::ReadObjects (this=0x10a861070, nElements=<optimized out>, b=..., onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:395; #26 0x00007fffa938a6f8 in TGenCollectionStreamer::ReadBufferGeneric (this=<optimized out>, b=..., obj=0x109986cc0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1368; #27 0x00007fffa93850a8 in TGenCollectionStreamer::ReadBufferDefault (this=0x10a861070, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:6159,optimiz,optimized,6159,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,"this=this@entry=0x1aa32b0, testArg=..., ignoreArg=ignoreArg@entry=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:870; #8 0x00007fffe0de1a80 in RooAbsArg::dependsOn (this=0x1aa32b0, serverList=..., ignoreArg=0x0, valueOnly=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:847; #9 RooAbsArg::observableOverlaps (this=<optimized out>, nset=<optimized out>, testArg=...); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:923; #10 0x00007fffe0e6d04d in RooAddPdf::checkObservables (this=<optimized out>, nset=<optimized out>); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:832; #11 0x00007fffe0de178d in RooAbsArg::recursiveCheckObservables (this=0x7fffffff6bc8, nset=0x7fffffff6360); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsArg.cxx:830; #12 0x00007fffe0e13ade in RooAbsGenContext::RooAbsGenContext (this=0x2934400, model=..., vars=...,; prototype=<optimized out>, auxProto=0x0, verbose=false); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsGenContext.cxx:63; #13 0x00007fffe0e5e1ce in RooAddGenContext::RooAddGenContext (this=0x2934400, model=..., vars=..., prototype=0x0,; auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddGenContext.cxx:55; #14 0x00007fffe0e6e25e in RooAddPdf::genContext (this=0x7fffffff5290, vars=..., prototype=0x7ffff66c2a4f <raise+271>,; auxProto=0x0, verbose=false) at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAddPdf.cxx:1055; #15 0x00007fffe0e2966c in RooAbsPdf::autoGenContext (this=0x7fffffff6bc8, vars=..., prototype=<optimized out>,; auxProto=<optimized out>, verbose=false, autoBinned=<optimized out>, binnedTag=0x7ffff7fdb33a """"); at /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:2014; #16 0x00007fffe0e29ef4 in RooAbsPdf::generate (this=0x7fffffff6bc8, whatVars=..., nEvents=1000, verbose=false,; autoBinned=true, binnedTag=0x7ffff7fdb33a """", expectedData=false, extended=<optimized out>); at /home/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547:2155,optimiz,optimized,2155,https://root.cern,https://github.com/root-project/root/issues/9547,1,['optimiz'],['optimized']
Performance,"tility ] Unable to pre-load libXrdSecpwd.so: Plugin unable to load libXrdSecpwd-4.so; dlopen(libXrdSecpwd-4.so, 256): image not found; ```. This happens because the library depends on other libraries (`libXrdCrypto`, `libXrdUtils`) and cannot find them since the `@rpath` palceholder is not substituted with the correct path to the libraries directory at runtime.; While this is true for the xrootd libraries in `build/lib`, it's not for the ones in `build/XROOTD-prefix/../src` which have the `LC_RPATH` variable set. The difference can be shown with `otool -l`; ```; $ otool -l build/lib/libXrdSecpwd-4.so > libXrdSecpwd_buildlib.txt; $ otool -l build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so > libXrdSecpwd_xrootdprefixlib.txt; $ diff libXrdSecpwd_buildlib.txt libXrdSecpwd_xrootdprefixlib.txt; < build/lib/libXrdSecpwd-4.so:; ---; > build/XROOTD-prefix/src/XROOTD-build/src/libXrdSecpwd-4.so:; 307a308,311; > cmd LC_RPATH; > cmdsize 80; > path /Users/sftnight/vpadulan/build/XROOTD-prefix/src/XROOTD-build/src (offset 12); > Load command 14; 312c316; < Load command 14; ---; ```. This `LC_RPATH` variable is set for our own libraries, e.g. `libHtml.so`; ```; $ otool -l build/lib/libHtml.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; But for some reason this information is lost after building `builtin_xrootd` (probably while installing the libraries from the prefix to the install directory). A way to solve this is by manually adding the `CMAKE_INSTALL_RPATH` option to the `cmake` invokation of `builtin_xrootd` as is done in this PR. The result is:; ```; $ otool -l build/lib/libXrdSecpwd-4.so; [...]; Load command 15; cmd LC_RPATH; cmdsize 80; path /Users/sftnight/vpadulan/build/lib (offset 12); ```; This solves the initial problem with the python tutorial that now can run without errors; ```; $time python build/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py. real 0m20.308s; user 0m18.505s; sys 0m0.733s;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6128:1277,Load,Load,1277,https://root.cern,https://github.com/root-project/root/pull/6128,2,['Load'],['Load']
Performance,"tils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true); at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615; 615 {; (gdb) p tname.c_str(); $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>""; (gdb) bt; #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true); at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615; #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437; #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854; #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0); at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041; #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false); at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957; #5 0x00007ffff78df048 in ?? (); #6 0x0000000000000000 in ?? (); (gdb) n; .....; 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();; (gdb); 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));; (gdb); 639 if (!t.isNull()) {; (gdb) p t.dump(); TemplateSpecializationType 0x555556b681d0 'function<int (const int *, const std::string &)>' sugar function; |-TemplateArgument type 'int (const int *, const std::string &)'; `-RecordType 0x555556b67b20 'class std::function<int (const int *, const class std::__cxx11::basic_string<char> &)>'; `-ClassTemplateSpecialization 0x555556b67a18 'function'; $34 = void; ```. (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8470:1916,load,load,1916,https://root.cern,https://github.com/root-project/root/issues/8470,1,['load'],['load']
Performance,"timized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:24070,optimiz,optimized,24070,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"tine () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5; #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 3 (Thread 0x7ff4442a5700 (LWP 25365) ""ZMQbg/Reaper""):; #0 0x00007ff446807f43 in epoll_wait () from /lib64/libc.so.6; #1 0x00007ff445edd301 in zmq::epoll_t::loop() () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5; #2 0x00007ff445f15068 in thread_routine () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5; #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7ff444aa6700 (LWP 25360) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44b30da64 in __gthread_cond_timedwait (__abs_timeout=0x7ff444a9fe30, __mutex=<optimized out>, __cond=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:17116,optimiz,optimized,17116,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,"tly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:; Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed.; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::AddRule; 21 0x00007ffff6adee6c in TClass::AddRule (rule=0x572670 ""HepMC::GenVertex m_event"",; 22 0x00007ffff6adead2 in (anonymous namespace)::ReadRulesContent; 23 0x00007ffff6adec40 in TClass::ReadRules; 24 0x00007fffecd0b3a0 in TCling::Initialize; ```; There are several points to consider:; * We should understand why there are still DeferredDeclsToEmit;; * We should remove the `TClingMemberIter` from the init path as it is *very expensive*. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7398:1776,Load,Load,1776,https://root.cern,https://github.com/root-project/root/pull/7398,1,['Load'],['Load']
Performance,tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:384; /opt/root_src/tmva/tmva/src/Reader.cxx:406:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:403; 11: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:404; 12: Taking true branch in /opt/root_src/tmva/tmva/src/R,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:112040,load,loaded,112040,https://root.cern,https://github.com/root-project/root/issues/7526,1,['load'],['loaded']
Performance,to load module FitPanel; Failed to load module Unuran; Failed to load module Quadp; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUtil; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:2087,load,load,2087,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3700,load,load,3700,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,to load module MathCore; >Failed to load module Hist; >Failed to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4372,load,load,4372,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load mo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3114,load,load,3114,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3584,load,load,3584,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFi,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3613,load,load,3613,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,to load module std; >Failed to load module _Builtin_intrinsics; >Failed to load module ROOT_Foundation_C; >Failed to load module ROOT_Rtypes; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Core; >Failed to load module Rint; >Failed to load module RIO; >Failed to load module MathCore; >Failed to load module Hist; >Failed to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module F,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4082,load,load,4082,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,"tomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977; #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=; 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902; #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:21100,optimiz,optimized,21100,https://root.cern,https://github.com/root-project/root/issues/8931,2,['optimiz'],['optimized']
Performance,"tor_wrapper (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1215; #19 0x00007fffa2f07164 in TClingCallFunc::ExecDefaultConstructor (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name="""", address=0x0, nary=0) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1895; #20 0x00007fffa2f1838c in TClingClassInfo::New (this=0x10a9e3870, normCtxt=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingClassInfo.cxx:1098; #21 0x00007fffa2e2cdf4 in TCling::ClassInfo_New (this=<optimized out>, cinfo=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:8290; #22 0x00007fffa8f0be24 in TClass::NewObject (this=0x10a9218e0, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:433; #23 0x00007fffa8f0fa14 in TClass::New (this=<optimized out>, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:4969; #24 0x00007fffa92e0724 in TBufferFile::ReadObjectAny (this=0x7ffff83ea100, clCast=0x10a861920) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:2458; #25 0x00007fffa9389c44 in TGenCollectionStreamer::ReadObjects (this=0x10a861070, nElements=<optimized out>, b=..., onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:395; #26 0x00007fffa938a6f8 in TGenCollectionStreamer::ReadBufferGeneric (this=<optimized out>, b=..., obj=0x109986cc0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1368; #27 0x00007fffa93850a8 in TGenCollectionStreamer::ReadBufferDefault (this=0x10a861070, b=..., obj=0x109986cc0, onFileClass=0x0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1302; #28 0x00007fffa9384f00 in TGenCollectionStreamer::ReadBuffer (t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:6309,optimiz,optimized,6309,https://root.cern,https://github.com/root-project/root/issues/12372,3,['optimiz'],['optimized']
Performance,"tr_base.h:1071; #19 std::__shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #20 std::shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const>::~shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #21 ROOT::Internal::RDF::RColumnRegister::~RColumnRegister (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RColumnRegister.hxx:43; #22 ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::~RInterface (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RInterface.hxx:104; #23 main (argc=<optimized out>, argv=<optimized out>) at /home/yan/codes/RDF_bug_report/main.cxx:82; ```; </details>. <details>; <summary>ROOT backtrace</summary>. ```; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:10896,optimiz,optimized,10896,https://root.cern,https://github.com/root-project/root/issues/12023,2,['optimiz'],['optimized']
Performance,"tr_base.h:1071; #26 std::__shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #27 std::shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const>::~shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #28 ROOT::Internal::RDF::RColumnRegister::~RColumnRegister (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RColumnRegister.hxx:43; #29 ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::~RInterface (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RInterface.hxx:104; #30 main (argc=<optimized out>, argv=<optimized out>) at /home/yan/codes/RDF_bug_report/main.cxx:82; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then pl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:21749,optimiz,optimized,21749,https://root.cern,https://github.com/root-project/root/issues/12023,2,['optimiz'],['optimized']
Performance,"ts/invoke.h""; ^; /home/root-build/include/ROOT/RStringView.hxx:66:10: note: submodule of top-level module 'std' implicitly imported here; #include <string>; ^; /home/root-build/include/ROOT/RStringView.hxx:71:13: error: no type named 'string' in namespace 'std'; inline std::string &operator+=(std::string &left, std::string_view right); ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:71:37: error: no type named 'string' in namespace 'std'; inline std::string &operator+=(std::string &left, std::string_view right); ~~~~~^; /home/root-build/include/ROOT/RStringView.hxx:73:28: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return left.append(right.data(), right.size());; ~~~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:73:42: error: member reference base type 'std::string_view' (aka 'int') is not a structure or union; return left.append(right.data(), right.size());; ~~~~~^~~~~; /home/root-build/include/ROOT/RStringView.hxx:85:8: error: unknown type name 'size_t'; size_t fLength{0};; ^; /home/root-build/include/ROOT/RStringView.hxx:88:47: error: unknown type name 'size_t'; explicit TStringView(const char *cstr, size_t len) : fData(cstr), fLength(len) {}; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/root-build/include/Rtypes.h:195:; /home/root-build/etc/cling/std.modulemap:462:12: error: header 'bits/invoke.h' not found; header ""bits/invoke.h""; ^; /home/root-build/include/TClassEdit.h:29:10: note: submodule of top-level module 'std' implicitly imported here; #include <cxxabi.h>; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make: *** [all] Error 2; ```. Which I'm guessing is an indication that c++17 features are required. Is version 6.28/04 incompatible with c++14?. Thanks",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13453:11177,load,loading,11177,https://root.cern,https://github.com/root-project/root/issues/13453,1,['load'],['loading']
Performance,"ttest-root-dataframe-test_glob (Failed); 	1502 - roottest-root-dataframe-test_reduce (Failed); 	1513 - roottest-root-dataframe-ctors (Failed); ```. *__Update__: JupyROOT tests using wrong Python version were due to a configuration issue in jupyter on my machine. Please ignore those. For the other tests, I repeated the build with GCC 10.3 and I still see the same failures.*. Please click [here](https://github.com/root-project/root/files/6343199/output.txt) for the full output for each test.; Some things to note:. - Test pyunittests-pyroot-import-load-libs fails with; ```sh; ERROR: test_import (import_load_libs.ImportLoadLibs); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/srv/root/src/root/bindings/pyroot/pythonizations/test/import_load_libs.py"", line 117, in test_import; raise Exception('Found not whitelisted libraries after importing ROOT:' \; Exception: Found not whitelisted libraries after importing ROOT:; - libz3; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ```; Note that z3 is a library used by LLVM. It may be that because I have other versions of LLVM/Clang in the system, z3 got installed and picked up by the builtin LLVM from the ROOT build. Ideally, this sort of behavior of automatically picking whatever is installed on the system should be avoided, as it can cause problems, so I recommend looking into the configuration of the builtin LLVM more closely and either disabling z3 if not used, or adding it to the dependencies of ROOT and enabling by force. - Test tutorial-v7-ntuple-ntpl005_introspection failure is related to uring support, is that tested in nightlies? It could also be a permissions issue that I don't have configured properly, I don't know.; ```sh; Start 995: tutorial-v7-ntuple-ntpl005_introspection; 7/18 Test #995: tutorial-v7-ntuple-ntpl005_introspection ...........***Failed 1.57 sec; .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936:3109,load,loaded,3109,https://root.cern,https://github.com/root-project/root/issues/7936,1,['load'],['loaded']
Performance,"ualGeoPainter"", kind)) {; if (h->LoadPlugin() == -1) {; Error(""GetGeomPainter"", ""could not load plugin for %s geo_painter"", kind);; return nullptr;; }; fPainter = (TVirtualGeoPainter *)h->ExecPlugin(1, this);; if (!fPainter) {; Error(""GetGeomPainter"", ""could not create %s geo_painter"", kind);; return nullptr;; }; } else {; Error(""GetGeomPainter"", ""not found plugin %s for geo_painter"", kind);; }; }; return fPainter;; }. EOF; ; mkdir build; cd build; cmake ..; make; repro; reproBroken; ```. #### Output from reproducer. ```; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; track is 0x47f4ce0; track is 0x47f4ce0; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo; Info in <TGeoManager::CloseGeometry>: ----------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16167:4215,cache,cache,4215,https://root.cern,https://github.com/root-project/root/issues/16167,1,['cache'],['cache']
Performance,"ude/c++/8/bits/basic_string.h:256; #20 0x00007fffa32551c8 in ROOT::Internal::RDF::<lambda(const string&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, codeSlice=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""...) at /usr/include/c++/8/bits/basic_string.h:2294; #21 ROOT::Internal::RDF::InterpreterCalc (code=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""..., context=""RLoopManager::Run"") at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RDFUtils.cxx:357; #22 0x00007fffa326c338 in ROOT::Detail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:24419,optimiz,optimized,24419,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"ug. We are trying to update the XrootD version to 5.1.1 :; https://github.com/cms-sw/cmsdist/pull/6831; but the test fails in the file open attempt; with this:. ```; 27-Apr-2021 13:36:43 CEST Initiating request to open file root://eoscms.cern.ch//eos/cms/store/data/Run2018A/ZeroBias/ALCARECO/SiStripCalMinBias-12Nov2019_UL2018-v1/260000/0F90F012-3C97-344E-8E2F-F459A798FA74.root. Thread 1 ""cmsRun"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70. (gdb) where; #0 0x00007ffff74a42b1 in TMutex::UnLock (this=0x7fffb0c95750); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/thread/src/TMutex.cxx:70; #1 0x00007ffff76c8b97 in TLockGuard::~TLockGuard (this=0x7fffffff0b90, __in_chrg=<optimized out>) at include/TVirtualMutex.h:86; #2 0x00007ffff67266df in TPluginHandler::CheckForExecPlugin (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/src/TPluginManager.cxx:284; #3 0x00007ffff6765285 in TPluginHandler::ExecPluginImpl<char const*, bool> (this=0x7fffd04c19c0); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:151; #4 0x00007ffff6764dee in TPluginHandler::ExecPlugin<char const*, bool> (this=0x7fffd04c19c0, nargs=2); at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/slc7_amd64_gcc900/lcg/root/6.22.08-1fec05f50351c1988c4bf604c7ec21c3/root-6.22.08/core/base/inc/TPluginManager.h:173; #5 0x00007ffff6756a72 in TSystem::FindHelper (this=0x7ffff2c38000, ; path=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8008:1411,optimiz,optimized,1411,https://root.cern,https://github.com/root-project/root/issues/8008,1,['optimiz'],['optimized']
Performance,"ughputs in MB/s, both in total and per thread. Compressed vs Uncompressed Throughput:. Throughput speeds are provided as compressed and uncompressed - ROOT files are usually saved in compressed format, so these will often differ. Compressed bytes is the total number of bytes read from TFiles during the readspeed test (possibly including meta-data). Uncompressed bytes is the number of bytes processed by reading the branch values in the TTree. Throughput is calculated as the total number of bytes over the total runtime (including decompression time) in the uncompressed and compressed cases. Interpreting results:. There are three possible scenarios when using rootreadspeed, namely:. 1. The 'Real Time' is significantly lower than your own analysis runtime.; This would imply your actual application code is dominating the runtime of your analysis, ie. your analysis logic or framework is taking up the time. The best way to decrease the runtime would be to optimize your code, attempt to parallelize it onto multiple threads if possible, or use a machine with a more performant CPU. The best way to decrease the runtime would be to optimize your code (or the framework's), parallelize it onto multiple threads if possible (for example with RDataFrame and EnableImplicitMT) or switch to a machine with a more performant CPU. 2. The 'Real Time' is significantly higher than 'CPU Time / number of threads'.; If the real time is higher than the CPU time per core it implies the reading of data is the bottleneck, as the CPU cores are wasting time waiting for data to arrive from your disk/drive or network connection in order to decompress it. The best way to decrease your runtime would be transferring the data you need onto a faster storage medium (i.e. a faster disk/drive such as an SSD, or connecting to a faster network for remote file access), or to use a compression algorithm with a higher compression ratio, possibly at the cost of the decompression rate. Changing the number of threads i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14039:3060,optimiz,optimize,3060,https://root.cern,https://github.com/root-project/root/pull/14039,2,"['optimiz', 'perform']","['optimize', 'performant']"
Performance,ulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kULong64_t:' at line 126 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Forming reference to null pointer in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:126; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:128:28: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'helper') [clang-analyzer-core.NullDereference]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapPro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:37607,load,loaded,37607,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,ule GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_5:1:2: error: unknown type name 'ifdef'; >#ifdef PI; > ^; ><<< cling i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:6012,load,load,6012,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,ule ROOT_Foundation_Stage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed t,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:2989,load,load,2989,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,ule ROOT_Rtypes; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Core; >Failed to load module Rint; >Failed to load module RIO; >Failed to load module MathCore; >Failed to load module Hist; >Failed to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBl,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4207,load,load,4207,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,ule Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minui,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3967,load,load,3967,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,ule X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPa,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4526,load,load,4526,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,ule XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_5:1:2: error: unknown type name 'ifdef'; >#ifdef PI; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_6:1:2: error: unknown type name 'ifdef'; >#ifdef ERROR; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >; > *** Break *** segmentation violation; >; >; >; >===========================================================; >There was a crash.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:6375,load,load,6375,https://root.cern,https://github.com/root-project/root/issues/7055,12,['load'],['load']
Performance,"un ??:0 + 0x7f103405a5ad [/lib64/libdl.so.2 D[0x15ad]]; 0x7f103405a041 dlopen@@GLIBC_2.2.5 ??:0 + 0x31 [/lib64/libdl.so.2 D[0x1041]]; 0x7f100b3323d4 ath_dlopen ??:0 + 0x84 [/build/atnight/localbuilds/nightlies/master--dev3LCG/build/build/Athena/x86_64-centos7-gcc11-opt/lib/libAthDSoCallBacks.so D[0x13d4]]; 0x7f103405a05a dlopen@@GLIBC_2.2.5 ??:0 + 0x4a [/lib64/libdl.so.2 D[0x105a]]; 0x7f102c046c45 cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) ??:0 + 0x7f102c046c45 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xc69c45]]; 0x7f102bf3eff1 cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) ??:0 + 0x7f102bf3eff1 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xb61ff1]]; 0x7f102be771c6 TCling::Load(char const*, bool) ??:0 + 0x1a6 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xa9a1c6]]; 0x7f1031ec07c9 TSystem::Load(char const*, char const*, bool) ??:0 + 0x799 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCore.so D[0x2117c9]]; 0x7f1031e4ec71 TROOT::LoadClass(char const*, char const*, bool) ??:0 + 0x71 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCore.so D[0x19fc71]]; 0x7f102be752c3 TCling::ShallowAutoLoadImpl(char const*) ??:0 + 0x2e3 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xa982c3]]; 0x7f102be8c0c4 TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_stri",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11933:8805,Load,Load,8805,https://root.cern,https://github.com/root-project/root/issues/11933,1,['Load'],['Load']
Performance,"uplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```; Python 3.9.6 (default, Mar 29 2024, 10:51:09); [Clang 15.0.0 (clang-1500.3.9.4)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>; from ._cpython_cppyy import *; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>; c = loader.load_cpp_backend(); File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; >>> quit(); ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```; git clone https://github.com/root-project/root; cd root; mkdir build; cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON; source ../install-2/thisroot.sh; python3 -c 'import ROOT'; ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```; ---------------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jun 25 2024, 12:00:47 |; | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15924:995,load,load,995,https://root.cern,https://github.com/root-project/root/issues/15924,2,['load'],['load']
Performance,"ur issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When changing the compression settings using hadd, using the same compression level used by the input file won't trigger a recompression of the branches in the output file, even with a different algorithm. ie. Passing -f301 with a 101 compressed input file results in a ""301"" compressed file but with 101 compressed branches. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I would expect the output file's branches to be recompressed with the provided compression algorithm. ie. Passing -f301 with a 101 compressed input file results in a genuine 301 compressed file with 301 compressed branches. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Get the compression settings of any .root file, for example the 101 compressed [dimuon dataset](http://opendata.web.cern.ch/record/12341).; 2. Run `hadd` and change the compression to a different algorithm of the same level, for example 101 -> 201 or 403 -> 303:; `hadd -f201 fake_dimuon_201.root orig_dimuon_101.root`; 3. You can validate the weird behaviour by performing an intermediate conversion:; `hadd -f202 real_202_out.root orig_dimuon_101.root` -> `hadd -f201 real_dimuon_201.root real_dimuon_202.root`. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; 1. ROOT Version 6.27/01; 2. Linux CentOS 8 + Linux Debian 11; 3. Built from source. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11245:1756,perform,performing,1756,https://root.cern,https://github.com/root-project/root/issues/11245,1,['perform'],['performing']
Performance,"ur nightly builds for some MacOS builds, for example [here](https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/lastCompletedBuild/testReport/) (v6.22, mac10.15). The issue seems to be caused by multiple python versions installed (e.g. system python3 and python3 coming with Xcode 12): it seems that ROOT picks up different versions at different times causing stacktraces that look like this:. ```; Processing /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/root/tutorials/tmva/TMVA_CNN_Classification.C...; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; Error in <TCling__LazyFunctionCreatorAutoloadForModule>: Failed to load library /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12PyMethodBase12PyInitializeEv' unresolved while linking [cling interface function]!; You are probably missing the definition of TMVA::PyMethodBase::PyInitialize(); Maybe you need to load the corresponding shared library?; CMake Error at /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/RootTestDriver.cmake:237 (message):; error code: 1; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6563:1144,load,loadLibrary,1144,https://root.cern,https://github.com/root-project/root/issues/6563,4,['load'],"['load', 'loadLibrary', 'loaded']"
Performance,"us fixing this issue.; ===========================================================; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #10 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #11 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #12 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x22dedd8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #13 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x22dedd8, this=<optimized out>) at /usr/include/c++/12/bits/new_allocator.h:181; #14 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x22dedd8, __a=...) at /usr/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:23736,optimiz,optimized,23736,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"use a more scalable implementation for RooChebychev which allows use of; Chebychev polynomial of arbitrarily high orders; also the extra effort; for every new order used is constant, so the effort (CPU) for evaluating; a RooChebychev grows linearly with the highest order Chebychev order; used, and comes in at only a couple of FLOPS per order (getting the; value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,; otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3775:11,scalab,scalable,11,https://root.cern,https://github.com/root-project/root/pull/3775,1,['scalab'],['scalable']
Performance,"usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591; #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463; #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436; #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795; #64 0x00007f54c943fe5e in TRint::Run (this=this; entry=0x55ed24b82e70, retrn=retrn; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446; #65 0x000055ed237870e5 in main (argc=<optimized out>, argv=0x7fffe1b0e1c8) at /usr/local/src/conda/root_base-6.25.2/root-source/main/src/rmain.cxx:83; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this; entry=0x55ed2cce0be0, Ty=<optimized out>, Ty; entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174; #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354; #8 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:15671,optimiz,optimized,15671,https://root.cern,https://github.com/root-project/root/issues/9595,1,['optimiz'],['optimized']
Performance,v6.20 - Load dependent libraries as part of AutoLoading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5713:8,Load,Load,8,https://root.cern,https://github.com/root-project/root/pull/5713,1,['Load'],['Load']
Performance,v622 - Load dependent libraries as part of AutoLoading.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5712:7,Load,Load,7,https://root.cern,https://github.com/root-project/root/pull/5712,1,['Load'],['Load']
Performance,v624: TFileMerger _actually_ delete directory only if we induced its creation/loading,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8229:78,load,loading,78,https://root.cern,https://github.com/root-project/root/pull/8229,1,['load'],['loading']
Performance,v7: draw_mt.cxx force loading of WebDisplay lib,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2682:22,load,loading,22,https://root.cern,https://github.com/root-project/root/pull/2682,1,['load'],['loading']
Performance,"v=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:14699,optimiz,optimized,14699,https://root.cern,https://github.com/root-project/root/issues/15970,6,['optimiz'],['optimized']
Performance,"val.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:25292,optimiz,optimized,25292,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"val.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:33940,optimiz,optimized,33940,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"ve a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError: 'TROOT' object has no attribute 'SetBatch'. Did you mean: 'GetPath'?; ```. ### Setup; 1.; ```; root-config --version; 6.26/10; ```. 2. Fedora 37. 3. dnf install. 1st",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12635:1192,perform,performance,1192,https://root.cern,https://github.com/root-project/root/issues/12635,1,['perform'],['performance']
Performance,"vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007faf4b42df36 in _PyObject_Vectorcall (kwnames=0x0, nargsf=1, args=0x7ffdb628f890, callable=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #39 _PyObject_FastCall (nargs=1, args=0x7ffdb628f890, func=0x7faf4b960e80); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:9703,optimiz,optimized,9703,https://root.cern,https://github.com/root-project/root/issues/8578,3,['optimiz'],['optimized']
Performance,"ver be executed.; [tree/treeplayer/src/TSelectorDraw.cxx:380]: (style) Statements following return, break, continue, goto or throw will never be executed. [net/auth/src/TAuthenticate.cxx:4205]: (error) Resource leak: fd; [roofit/roofitcore/src/BidirMMapPipe.cxx:1880]: (error) Memory leak: s; [tree/tree/src/TLeaf.cxx:222]: (error) Memory leak: countname; [tree/tree/src/TLeaf.cxx:226]: (error) Memory leak: countname; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfS; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfB. [roofit/roofitcore/src/RooAbsArg.cxx:280]: (style) Redundant checking of STL container element existence before removing it. [core/dictgen/src/rootcling_impl.cxx:457]: (performance) Possible inefficient checking for 'fieldSelRules' emptiness.; [core/dictgen/src/rootcling_impl.cxx:4573]: (performance) Possible inefficient checking for 'filesIncludedByLinkdef' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:322]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:374]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:419]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:475]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:587]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:787]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [html/src/TDocParser.cxx:684]: (performance) Possible inefficient checking for 'currentType' emptiness.; [proof/proofd/src/XrdProofdManager.cxx:804]: (performance) Possible inefficient checking for 'uwrks' emptiness.; [proof/proofd/src/XrdProofdSandbox.cxx:467]: (performance) Possible inefficient checking for 'staglst' emptiness.; [proof/proofd/src/XrdProo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1343:2492,perform,performance,2492,https://root.cern,https://github.com/root-project/root/pull/1343,1,['perform'],['performance']
Performance,"via S3-->Davix, the read is working just fine but when opening a file with either CREATE or RECREATE flag I obtain:; ```; root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root"", ""CREATE""); Info in <parseConfig>: Setting S3 SecretKey and AccessKey. Access Key : dciangot ; Error in <TDavixFile::DavixReadBuffer>: can not read data with davix: Result HTTP 404 : File not found , while readding after 3 attempts (18); Error in <TDavixFile::Init>: s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003.root failed to read the file type data.; (TFile *) nullptr; ```; Leaving behind only a file with size 0. ### Expected behavior; I'm actually not sure if this should be expected, but I did expect the file to be created correctly. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; - MinIO s3 object storage. - `~/.rootrc` file:; ```; Davix.Debug: 2; Davix.GSI.CACheck: y; Davix.GSI.CAdir: /etc/ssl/certs; Davix.S3.Alternate: y; ```; - and then interactively:; ```; $> S3_ACCESS_KEY=dciangot S3_SECRET_KEY=xxxx root -b; ------------------------------------------------------------------; | Welcome to ROOT 6.24/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 03 2021, 23:37:00 |; | From tag , 1 September 2021 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile *_file0 = TFile::Open(""s3s://minio-herd.cloud.cnaf.infn.it/dciangot/W0003378.root"", ""CREATE""); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.24/06; Davix 0.7.6; OS: cc7",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9584:1551,CAChe,CACheck,1551,https://root.cern,https://github.com/root-project/root/issues/9584,1,['CAChe'],['CACheck']
Performance,"virtualenv) breaks the python based ROOT tools.; So, i would like to be possible to have a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError: 'TROOT' object has no attribute 'SetBatch'. Did you mean: 'GetPath'?; ```. ### ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12635:1109,perform,performance,1109,https://root.cern,https://github.com/root-project/root/issues/12635,1,['perform'],['performance']
Performance,"void (clang::CompilerInstance&)>)::$_3>(long) CompilerInstance.cpp:0:0; #17 0x0000000003e4378f llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) CrashRecoveryContext.cpp:0:0; #18 0x0000000003e438b4 RunSafelyOnThread_Dispatch(void*) CrashRecoveryContext.cpp:0:0; #19 0x0000000003e4388d llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) CrashRecoveryContext.cpp:0:0; #20 0x00000000019ac171 compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) CompilerInstance.cpp:0:0; #21 0x00000000019aa3b1 compileAndLoadModule(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) CompilerInstance.cpp:0:0; #22 0x00000000019a964a clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__2::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) CompilerInstance.cpp:0:0; #23 0x0000000003b2a5be clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) PPDirectives.cpp:0:0; #24 0x0000000003b221d5 clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) PPDirectives.cpp:0:0; #25 0x0000000003b22b03 clang::Preprocessor::HandleDirective(clang::Token&) PPDirectives.cpp:0:0; #26 0x0000000003afa515 clang::Lexer::LexTokenInternal(clang::Token&, bool) Lexer.cpp:0:0; #27 0x0000000003af7b42 clang::Lexer::Lex(clang::Token&) Lexer.cpp:0:0; #28 0x0000000003b5a264 clang::Preprocessor::Lex(clang::Token&) Preprocessor.cpp:0:0; #29 0x0000000001c40f00 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) Parser.cpp:0:0; #30 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861:3403,load,loadModule,3403,https://root.cern,https://github.com/root-project/root/issues/10861,1,['load'],['loadModule']
Performance,"w_allocator.h:145; #10 0x0000152ece697bca in std::allocator_traits<std::allocator<ROOT::TClassAlt*> >::deallocate (__a=..., __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/alloc_traits.h:492; #11 0x0000152ece697604 in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::_M_deallocate (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354; #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335; #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683; #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:3920,optimiz,optimized,3920,https://root.cern,https://github.com/root-project/root/issues/12957,2,['optimiz'],['optimized']
Performance,"ware Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1388,load,loading,1388,https://root.cern,https://github.com/root-project/root/pull/11882,3,['load'],"['load', 'loading']"
Performance,"webgui: allow --web also when ROOTWebDisplay library already load, ROOT-9927",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3358:61,load,load,61,https://root.cern,https://github.com/root-project/root/pull/3358,1,['load'],['load']
Performance,whitelist libMultiProc as library loaded importing ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7048:34,load,loaded,34,https://root.cern,https://github.com/root-project/root/pull/7048,1,['load'],['loaded']
Performance,"wing code to set up the generation of dictionary source files:. https://gitlab.cern.ch/atlas/atlasexternals/-/blob/master/Build/AtlasCMake/modules/AtlasDictionaryFunctions.cmake. And that provides a much better behaviour. Mainly because in ATLAS's setup dictionary generations do not need to wait for anything. Even if the library that a dictionary is being produced for depends on a number of upstream libraries, the dictionary for that library can be generated before all the upstream libraries would have finished building. In practice this actually means that the start of any ATLAS software build is dominated by running dictionary generation. As GNU Make and Ninja both prefer running those build steps first. (As they do not have any dependencies themselves.). The reason I blame the dictionary generation code is that regular C(\+\+) code building with Ninja scales very well to many cores. Even when one has many small libraries in a project, Ninja can start the build of object files before all of the libraries that they depend on would've finished building. (In ATLAS's offline software the very end of a build is taken up purely by library/executable linking steps.). ## To Reproduce. Unfortunately you need a pretty powerful machine to do so... But once you do, just do something similar to what I did:. ```; cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=17 \; -Dall=ON -Dbuiltin_gsl=ON -Dbuiltin_freetype=ON -Dbuiltin_lzma=ON -Dbuiltin_veccore=ON \; -DXROOTD_ROOT_DIR=~/software/xrootd/4.12.2/x86_64-ubuntu2004-gcc9-opt \; -DTBB_ROOT_DIR=~/software/oneTBB/2020.2/x86_64-ubuntu2004-gcc9-opt \; -DCMAKE_INSTALL_PREFIX=~/software/root/6.20.08/x86_64-ubuntu2004-gcc9-opt ../root-6.20.08/; ninja; ```. ## Setup. As mentioned earlier, I used ROOT 6.20/08 for this particular test. But the behaviour has been like this since forever. I performed the build on Ubuntu 20.04 with GCC 9, but that should make little difference to the overall behaviour. ## Additional context. N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432:3361,perform,performed,3361,https://root.cern,https://github.com/root-project/root/issues/6432,1,['perform'],['performed']
Performance,"with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497; Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; Error in <TFile::Init>: HERD.gdml not a ROOT file; (TGeoManager *) 0x55710546f930; ```. ### Setup; 1. ROOT version: 6.22.08; 2. Operating system: Archlinux with GCC 10.2.0; 3. Self-built Root instance",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7987:2019,cache,cache,2019,https://root.cern,https://github.com/root-project/root/issues/7987,1,['cache'],['cache']
Performance,"wnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:16059,optimiz,optimized,16059,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm; 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:7312,Load,Loading,7312,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm; 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm; 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm; 0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:7445,Load,Loading,7445,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196; #7 0x00007af586111799 in TUnixSystem::DispatchSignals (this=0x5fe0e479def0, sig=kSigSegmentationViolation) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:3626; #8 <signal handler called>; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spac",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:10630,optimiz,optimized,10630,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,"x105a]]; 0x7f102c046c45 cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) ??:0 + 0x7f102c046c45 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xc69c45]]; 0x7f102bf3eff1 cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) ??:0 + 0x7f102bf3eff1 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xb61ff1]]; 0x7f102be771c6 TCling::Load(char const*, bool) ??:0 + 0x1a6 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xa9a1c6]]; 0x7f1031ec07c9 TSystem::Load(char const*, char const*, bool) ??:0 + 0x799 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCore.so D[0x2117c9]]; 0x7f1031e4ec71 TROOT::LoadClass(char const*, char const*, bool) ??:0 + 0x71 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCore.so D[0x19fc71]]; 0x7f102be752c3 TCling::ShallowAutoLoadImpl(char const*) ??:0 + 0x2e3 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xa982c3]]; 0x7f102be8c0c4 TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) ??:0 + 0x164 [/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Thu/ROOT/HEAD/x86_64-centos7-gcc11-opt/lib/libCling.so D[0xaaf0c4]]; 0x7f102be8c604 TCling::AutoLoad(char const*, bool) ??:0 + 0x214 [/cvmfs/sft-nigh",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11933:9173,Load,LoadClass,9173,https://root.cern,https://github.com/root-project/root/issues/11933,1,['Load'],['LoadClass']
Performance,"x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (defined); ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x2d27d000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); IncrementalExecutor::executeFunction: symbol '_ZNK5cling5Value5getAsIP4TH1FEET_v' unresolved while linking function '_GLOBAL__sub_I_cling_module_25'!; You are probably missing the definition of TH1F* cling::Value::getAs<TH1F*>() const; Maybe you need to load the corresponding shared library?; ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x33aaa000) (noaccess); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (defined); ==22765== Warning: set address range perms: large range [0x1f838000, 0x2fae5000) (noaccess); terminate called after throwing an instance of 'cling::InvalidDerefException'; what(): Trying to dereference null pointer or trying to call routine taking non-null arguments; ==22765== ; ==22765== Process terminating with default action of signal 6 (SIGABRT); ==22765== at 0x546E18B: raise (raise.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11385:6331,load,load,6331,https://root.cern,https://github.com/root-project/root/issues/11385,1,['load'],['load']
Performance,"x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619; #5 <signal handler called>; #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this; entry=0x55ed2cce0be0, Ty=<optimized out>, Ty; entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174; #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354; #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this; entry=0x55ed2cce0be0, QTy=QTy; entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204; #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227; #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType; entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668; #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126; #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37; #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215; #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this; entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr; entry=0x55ed2cd76b08, PerformInit=PerformInit; entry=true) at /usr/local/src/c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:2794,optimiz,optimized,2794,https://root.cern,https://github.com/root-project/root/issues/9595,1,['optimiz'],['optimized']
Performance,"x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:57; #1 __futex_abstimed_wait_common (cancel=true, private=-392944720, abstime=0x7af5721fe520, clockid=-2029319085, expected=0, futex_word=0x7af5875bf86c <_PyRuntime+428>) at ./nptl/futex-internal.c:87; #2 __GI___futex_abstimed_wait_cancelable64 (futex_word=futex_word; entry=0x7af5875bf86c <_PyRuntime+428>, expected=expected; entry=0, clockid=clockid; entry=1, abstime=abstime; entry=0x7af5721fe520, private=private; entry=0) at ./nptl/futex-internal.c:139; #3 0x00007af586e93e9b in __pthread_cond_wait_common (abstime=0x7af5721fe520, clockid=1, mutex=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at ./nptl/pthread_cond_wait.c:503; #4 ___pthread_cond_timedwait64 (cond=cond; entry=0x7af5875bf840 <_PyRuntime+384>, mutex=mutex; entry=0x7af5875bf870 <_PyRuntime+432>, abstime=abstime; entry=0x7af5721fe520) at ./nptl/pthread_cond_wait.c:652; #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73; #6 take_gil (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval_gil.h:256; #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:4567,optimiz,optimized,4567,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,"x86_64-ubuntu2004-gcc9-opt/include -fPIC -c -o SelfReferenceDict.o SelfReferenceDict.cpp; c++ -o libSelfReferenceDict.so -shared -m64 -L/software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib -lCore -lImt -lRIO -lNet -lHist -lGraf -lGraf3d -lGpad -lROOTVecOps -lTree -lTreePlayer -lRint -lPostscript -lMatrix -lPhysics -lMathCore -lThread -lMultiProc -lROOTDataFrame -Wl,-rpath,/software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib -pthread -lm -ldl -rdynamic SelfReferenceDict.o; [bash][atspot01]:self-reference > ./test.py ; hadd Target file: output.root; hadd compression setting for all output: 1; hadd Source file 1: input1.root; hadd Source file 2: input2.root; hadd Target path: output.root:/; input_line_32:7:15: error: field has incomplete type 'ConfigType'; ConfigType _0;; ^; libSelfReferenceDict dictionary forward declarations' payload:5:68: note: forward declaration of 'ConfigType'; struct __attribute__((annotate(""$clingAutoload$ConfigType.hpp""))) ConfigType;; ^; Error in <Load>: Could not declare TEmulatedTuple<ConfigType,string>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f052580ec3a in __GI___wait4 (pid=34047, stat_loc=stat_loc; entry=0x7ffc6b5a07e8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f052580ebfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffc6b5a07e8, options=options; entry=0) at waitpid.c:38; #2 0x00007f052577df67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f0525fc2afe in TUnixSystem::StackTrace() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #4 0x00007f0525fbf985 in TUnixSystem::DispatchSignals(ESignals) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #5 <signal handler called>; #6 0x00007f05",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:7374,Load,Load,7374,https://root.cern,https://github.com/root-project/root/issues/12358,1,['Load'],['Load']
Performance,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130:2209,load,loading,2209,https://root.cern,https://github.com/root-project/root/issues/11130,1,['load'],['loading']
Performance,x:378; /opt/root_src/io/io/src/TKey.cxx:82:1: warning: non-POD static (TString) [clazy-non-pod-global-static]; /opt/root_src/io/io/src/TMakeProject.cxx:39:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]; 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/io/io/src/TMakeProject.cxx:39; /opt/root_src/io/io/src/TMapFile.cxx:293:7: warning: Value stored to 'recreate' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'recreate' is never read in /opt/root_src/io/io/src/TMapFile.cxx:293; /opt/root_src/io/io/src/TMapFile.cxx:623:20: warning: Access to field 'fNext' results in a dereference of a null pointer (loaded from field 'fLast') [clang-analyzer-core.NullDereference]; 1: Assuming field 'fWritable' is true in /opt/root_src/io/io/src/TMapFile.cxx:599; 2: Left side of '||' is false in /opt/root_src/io/io/src/TMapFile.cxx:599; 3: Assuming field 'fMmallocDesc' is non-null in /opt/root_src/io/io/src/TMapFile.cxx:599; 4: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:599; 5: Assuming 'obj' is equal to field 'fGetting' in /opt/root_src/io/io/src/TMapFile.cxx:601; 6: '?' condition is false in /opt/root_src/io/io/src/TMapFile.cxx:601; 7: 'lock' is false in /opt/root_src/io/io/src/TMapFile.cxx:603; 8: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:603; 9: Assuming 'name' is null in /opt/root_src/io/io/src/TMapFile.cxx:609; 10: Left side of '&&' is false in /opt/root_src/io/io/src/TMapFile.cxx:609; 11: Calling 'TMapFile::Remove' in /opt/root_src/io/io/src/TMapFile.cxx:614; 12: Field 'fWritable' is true in /opt/root_src/io/io/src/TMapFile.cxx:717; 13: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:92493,load,loaded,92493,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,"xSystem.cxx:2442; #4 0x00007f3f13511b7d in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:208; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:14668,optimiz,optimized,14668,https://root.cern,https://github.com/root-project/root/issues/15799,1,['optimiz'],['optimized']
Performance,"xSystem.cxx:2442; #4 0x00007f3f13511c5f in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:2354,optimiz,optimized,2354,https://root.cern,https://github.com/root-project/root/issues/15799,1,['optimiz'],['optimized']
Performance,"xSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. ```. ## Expected behavior; no FPE. ## To Reproduce. Code; ```. #include <TCanvas.h>; #include <TPad.h>; #include <TBox.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6449:1774,optimiz,optimized,1774,https://root.cern,https://github.com/root-project/root/issues/6449,1,['optimiz'],['optimized']
Performance,"xabi project is disabled; -- libunwind project is disabled; -- lld project is disabled; -- lldb project is disabled; -- mlir project is disabled; -- openmp project is disabled; -- parallel-libs project is disabled; -- polly project is disabled; -- pstl project is disabled; -- flang project is disabled; ```; and these:; ```; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found Python3: /usr/bin/python3 (found suitable version ""3.11.6"", minimum required is ""3.0"") found components: Interpreter ; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 13.0.0; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/include/c++/13:/usr/include/x86_64-linux-gnu/c++/13:/usr/include/c++/13/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-13'; -- Performing Test CXX_HAS_fno_rtti; ```. The last lines of this cmake were:; ```cmake; -- ROOT Configuration . System Linux-6.5.0-15-generic; Processor 2 core Intel(R) Core(TM) i5-6200U CPU @ 2.30GHz (x86_64); Build type Release; Install path /home/<user>/root_install; Compiler GNU 13.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_lz4 builtin_lzma builtin_nlohmannjson builtin_openui5 builtin_pcre builtin_tbb builtin_vdt builtin_xrootd builtin_xxhash builtin_zstd clad dataframe gdml http imt mlp opengl proof pyroot roofit webgui root7 rpath runtime_cxxmodules shared s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:3281,Perform,Performing,3281,https://root.cern,https://github.com/root-project/root/issues/14479,1,['Perform'],['Performing']
Performance,"xample. ```python; # reproducer.py; import ROOT; v = ROOT.vector[int](range(10)); while 1:; _ = str(v); ```. And here the output of `valgrind --tool=massif python reproducer.py`:. ```; MB; 389.3^ #; | @@@@@#; | :@@@@@@@@@#; | @@@@@@@@@@@@@@#; | :@@@@@@@@@@@@@@@@@@#; | @::::@@@ @@@@@@@@@@@@@@#; | @@@@@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | ::@:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @@@@@@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @:@@:@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | @::@@@:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; | :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |::::@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; |:: :@:@::@ @:@ :@::@@@ @@:@@@ @ @:@@ :::@ :@@@ @@:: :@@@ @@@@@@@@@@@@@@#; 0 +----------------------------------------------------------------------->Gi; 0 146.4; ```. Here the logfile of the last snapshot:. [massif.log](https://github.com/root-project/root/files/5970579/massif.log). However, the issue can also be reproduced using a compiled program calling into `TInterpreter::ToString`:. ```cpp; #include ""TInterpreter.h""; #include <vector>; #include <string>. #include <iostream>. void rep() {; std::vector<int> x = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};; while (true) {; auto s = gInterpreter->ToString(""vector<int>"", &x);; // std::cout << s << std::endl;; }; }. int main() {; rep();; }; ```. ```bash; g++ rep.cxx $(root-config --libs --cflags) # take care that you don't optimize away the call; valgrind --tool=massif ./a.out; ```. Here the massif log from this run:. [massif_clingToString.log](https://github.com/root-project/root/files/5970887/massif_clingToString.log)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7187:1978,optimiz,optimize,1978,https://root.cern,https://github.com/root-project/root/issues/7187,1,['optimiz'],['optimize']
Performance,"xx:549; #28 0x00007fba37e46687 in TCint::ProcessLineSynch (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:631; #29 0x00007fba37e91c05 in TApplication::ExecuteFile (file=<optimized out>, error=0x7ffcac8e1474, keep=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:1110; #30 0x00007fba37e92ef7 in TApplication::ProcessLine (this=0x1464300, line=<optimized out>, sync=<optimized out>, err=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:959; #31 0x00007fba37817692 in TRint::Run (this=this; entry=0x1464300, retrn=retrn; entry=false) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/rint/src/TRint.cxx:417; #32 0x0000000000401ee2 in main (argc=<optimized out>, argv=0x7ffcac8e3658) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ALIROOT/aliroot.cxx:152; ===========================================================. The lines below might hint at the cause of the crash.; If they do not help you then please submit a bug report at; http://root.cern.ch/bugs. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007fba36ddb793 in AliAnalysisTask::SetUsed (this=0x27a9980, flag=flag; entry=true) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ANALYSIS/ANALYSIS/AliAnalysisTask.cxx:540; #7 0x00007fba36dc471a in AliAnalysisManager::InitAnalysis (this=0x24a9f30) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ANALYSIS/ANALYSIS/AliAnalysisManager.cxx:1633; ===========================================================. Root > Function RunEtaC() busy flag cleared; ```. I want to merge all the jobs and create a .r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:7833,optimiz,optimized,7833,https://root.cern,https://github.com/root-project/root/issues/6977,1,['optimiz'],['optimized']
Performance,y in /opt/root_src/math/mathcore/inc/Fit/FitData.h:202; 5: Assuming 'j' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 6: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 7: Assuming 'j' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 8: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 9: Assuming 'j' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 10: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 11: Assuming 'j' is < field 'fDim' in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 12: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/inc/Fit/FitData.h:206; 13: Dereference of undefined pointer value in /opt/root_src/math/mathcore/inc/Fit/FitData.h:207; /opt/root_src/math/mathcore/inc/Fit/FitUtil.h:208:24: warning: Dereference of null pointer (loaded from variable 'x2') [clang-analyzer-core.NullDereference]; 1: Assuming field 'fIntegral' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 2: Left side of '&&' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1273; 3: Assuming field 'fBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 4: Left side of '&&' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1274; 5: 'x2' initialized to a null pointer value in /opt/root_src/math/mathcore/src/FitUtil.cxx:1278; 6: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 7: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1282; 8: 'useBinVolume' is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 9: '?' condition is false in /opt/root_src/math/mathcore/src/FitUtil.cxx:1294; 10: 'useBinIntegral' is true in /opt/root_src/math/mathcore/src/FitUtil.cxx:1296; 11: Taking false branch in /opt/root_src/math/mathcore/src/FitUtil.cxx:1296; 12: 'useBinVol,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:3847,load,loaded,3847,https://root.cern,https://github.com/root-project/root/issues/7458,1,['load'],['loaded']
Performance,"yCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324; #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExtern",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:8806,optimiz,optimized,8806,https://root.cern,https://github.com/root-project/root/issues/8578,3,['optimiz'],['optimized']
Performance,"yEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:24786,optimiz,optimized,24786,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"yEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:33434,optimiz,optimized,33434,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"yes -Ddcache=OFF -Ddistcc=OFF -Dfcgi=yes -Dfftw3=yes -Dfitsio=yes -Dfortran=yes -Dgdml=yes -Dgfal=OFF -Dgminimal=OFF -Dgsl_shared=yes -Dgviz=yes -Dhttp=yes -Dimt=yes -Dlibcxx=no -Dmathmore=yes -Dmemstat=OFF -Dminimal=OFF -Dminuit2=yes -Dminuit=yes -Dmlp=yes -Dmonalisa=OFF -Dmpi=yes -Dmysql=yes -Dodbc=yes -Dopengl=yes -Doracle=no -Dpgsql=yes -Dpythia6=yes -Dpyroot=yes -Dpythia8=yes -Dqt5web=yes -Dr=yes -Droofit=yes -Droot7=yes -Drootbench=OFF -Droottest=OFF -Drpath=OFF -Druntime_cxxmodules=OFF -Dshadowpw=yes -Dspectrum=ON -Dsqlite=yes -Dssl=yes -Dtcmalloc=OFF -Dtest_distrdf_pyspark=OFF -Dtesting=no -Dtmva=yes -Dtmva-cpu=yes -Dtmva-gpu=no -Dtmva-pymva=yes -Dtmva-rmva=yes -Dunuran=yes -During=no -Dvc=yes -Dvdt=OFF -Dveccore=OFF -Dvecgeom=OFF -Dvmc=no -Dx11=yes -Dxml=yes -Dxrootd=yes -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=/var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_toolchain.cmake /var/tmp/portage/sci-physics/root-9999/work/root-9999; loading initial cache file /var/tmp/portage/sci-physics/root-9999/work/root-9999_build/gentoo_common_config.cmake; -- The C compiler identification is GNU 10.3.0; -- The CXX compiler identification is GNU 10.3.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.31.1"") ; -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Found Python3: /usr/bin/python3.8 (found version ""3.8.10"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- The Fortran compiler identification is GNU 10.3.0; -- Detecting Fo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8193:2487,load,loading,2487,https://root.cern,https://github.com/root-project/root/issues/8193,2,"['cache', 'load']","['cache', 'loading']"
Performance,"yout version 7 of class 'RooRealVar' differs from ; the in-memory layout version 7:; RooAbsBinning _binning; //; vs; unique_ptr<RooAbsBinning,default_delete<RooAbsBinning> > _binning; //; ```. The warning is uexpected because:; * it comes from the RooRealVar class that was not changed in 068465e; * it only appears now after seemingly unrelated changes in the RooAbsArg base class; * the memory layout and checksums of the RooRealVar classes didn't change between 6.24 (version of the reference file) and ROOT master. Here is the streamer info of RooRealVar in master:; ```; root [7] TClass::GetClass(""RooRealVar"")->GetStreamerInfo()->ls(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset=720 type= 8 Symmetric error associated with current value; double _asymErrLo offset=728 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset=736 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset=744 type=64 ; i= 0, RooAbsRealLValue type= 0, offset= 0, len=1, method=0; i= 1, _error type= 28, offset=720, len=3, method=0 [optimized]; i= 2, _binning type= 64, offset=744, len=1, method=0; ```; Here is the streamer info for RooRealVar from the [categories_v624.root reference file](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/categories_v624.root):; ```; root [6] _file0->ShowStreamerInfo(). StreamerInfo for class: RooRealVar, version=7, checksum=0xfd173f72; RooAbsRealLValue BASE offset= 0 type= 0 Abstract modifiable real-valued object; double _error offset= 0 type= 8 Symmetric error associated with current value; double _asymErrLo offset= 0 type= 8 Low side of asymmetric error associated with current value; double _asymErrHi offset= 0 type= 8 High side of asymmetric error associated with current value; RooAbsBinning* _binning offset= 0 type=64; ```. ### Expected b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8791:1904,optimiz,optimized,1904,https://root.cern,https://github.com/root-project/root/issues/8791,1,['optimiz'],['optimized']
Performance,"ython/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwname",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:6677,optimiz,optimized,6677,https://root.cern,https://github.com/root-project/root/issues/15117,4,['optimiz'],['optimized']
Performance,"zation -- it uses a stohastic data structure which gives; a definitive answer if a symbol is not in the set. The implementation checks; the .gnu.hash section in ELF which is the GNU implementation of a bloom; filter and uses it. If the symbol is not in the bloom filter, the; implementation builds its own and uses it. The measured performance of the; bloom filter is 30% speed up for 2mb more memory. The custom bloom filter on; top of the .gnu.hash filter gives 1-2% better performance.; The advantage for the custom bloom filter is that it works on all; implementations which do not support .gnu.hash (windows and osx). It is also; customizable if we want to further reduce the false positive rates; (currently at p=2%).; * Hash table optimization -- we build a hash table which contains all symbols; for a given library. This allows us to avoid the fallback symbol iteration; if multiple symbols from the same library are requested. The hash table; optimization targets to optimize the case where the bloom filter tells us; the symbol is *maybe* in the library. Patch by Alexander Penev (@alexander-penev) and me!. Performance Report; ===. |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|22,82|26,89|20,08|; |osx 10.14| roottest-cling| 589,67|452,97|307,34|; |osx 10.14| roottest-python| 377,69|475,78|311,5|; |osx 10.14| roottest-root-hist| 60,59|90,98|49,65|; |osx 10.14| roottest-root-math| 106,18|140,41|73,96|; |osx 10.14| roottest-root-tree| 1287,53|1861|1149,35|; |osx 10.14| roottest-root-treeformula | 568,43|907,46|531|; |osx 10.15| root-io-stdarray| - | 126.02 | 31.42|; |osx 10.15| roottest-root-treeformula| - | 327.08 | 231.14 |. The effect of running ctest -j8:; |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|14,45|18,89|13,03|; |osx 10.14| roottest-cling| 88,96|1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4717:1428,optimiz,optimization,1428,https://root.cern,https://github.com/root-project/root/pull/4717,2,['optimiz'],"['optimization', 'optimize']"
Performance,"zation routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Derived is found to inherit from TObject; 2187:; 2187: *** Break *** segmentation violation; 2187:; 2187:; 2187:; 2187: ===========================================================; 2187: There was a crash.; 2187: This is the entire stack trace of all threads:; 2187: ===========================================================; 2187: #0 0x00007f2a616e15db in waitpid () from /lib64/libc.so.6; 2187: #1 0x00007f2a61643ce7 in do_system () from /lib64/libc.so.6; 2187: #2 0x00007f2a630125cb in TUnixSystem::StackTrace (this=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2395; 2187: #3 0x00007f2a6301c2df in TUnixSystem::DispatchSignals (this=0x617000000080, sig=kSigSegmentationViolation) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:3615; 2187: #4 <signal handler called>; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=0x1 <error: Cannot access memory at address 0x1>, alternate=0x7f2a491937c0 <error: Cannot access memory at address 0x7f2a491937c0>) at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:792; 2187: #8 0x00007f2a60081efb in _GLOBAL__sub_I_libInitOrder.cxx () at roottest/root/meta/tclass/libInitOrder.cxx:123; 2187: #9 0x00007f2a631f305a in call_init (l=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:1361,optimiz,optimized,1361,https://root.cern,https://github.com/root-project/root/issues/11867,1,['optimiz'],['optimized']
Performance,"zer-deadcode.DeadStores]; 1: Value stored to 'pMinor' during its initialization is never read in /opt/root_src/graf3d/eve/src/TEveProjectionAxesGL.cxx:185; /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:232:46: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Loop condition is true. Entering loop body in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:328; 2: Passing value via 1st parameter 'el' in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:330; 3: Calling 'TEveProjectionManager::ImportElementsRecurse' in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:330; 4: Calling 'TEveProjectionManager::ShouldImport' in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:217; 5: Assuming field 'fImportEmpty' is true in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:173; 6: Taking true branch in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:173; 7: Returning the value 1 (loaded from 'kTRUE'), which participates in a condition later in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:174; 8: Returning from 'TEveProjectionManager::ShouldImport' in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:217; 9: Taking true branch in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:217; 10: Assuming 'pble' is null in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:221; 11: Taking false branch in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:221; 12: Called C++ object pointer is null in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:232; /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:371:18: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Loop condition is false. Execution continues on line 335 in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:328; 2: Assuming the condition is true in /opt/root_src/graf3d/eve/src/TEveProjectionManager.cxx:335; 3: Taking true branch in /opt/root_src/graf3d/eve/src/TEveProjectionM",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7531:7613,load,loaded,7613,https://root.cern,https://github.com/root-project/root/issues/7531,1,['load'],['loaded']
Performance,"| Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Oct 28 2022, 09:49:15 |; | From heads/redirect-xrootd@v6-09-01-24773-gd85df4c5e9 |; | With c++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-15) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] auto f1 = TFile::Open(""file://Run2012BC_DoubleMuParked_Muons.root"");; root [1] auto f2 = TFile::Open(""Run2012BC_DoubleMuParked_Muons.root"");; root [2] f1->GetName(); (const char *) ""Run2012BC_DoubleMuParked_Muons.root""; root [3] f2->GetName(); (const char *) ""root://eoshome-a.cern.ch//eos/user/a/amadio/Run2012BC_DoubleMuParked_Muons.root""; root [4] .q; $; ```; and with a slightly modified `df102_NanoAODDimuonAnalysis` tutorial to avoid `TChain`:; ```diff; void df102_NanoAODDimuonAnalysis(const char* filename); {; // Enable multi-threading; ROOT::EnableImplicitMT();; ; - // std::cout << ""Using filename: "" << filename << std::endl;; + auto f = TFile::Open(filename);; + auto t = f->Get<TTree>(""Events"");; ; - ROOT::RDataFrame df(""Events"", filename);; + ROOT::RDataFrame df(*t);; ```. I got the following:. ```sh; $ time ./dimuon file://Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 13.34; $ time ./dimuon Run2012BC_DoubleMuParked_Muons.root ; Info in <TCanvas::Print>: pdf file dimuon_spectrum.pdf has been created; Events with exactly two muons: pass=31104343 all=61540413 -- eff=50.54 % cumulative eff=50.54 %; Muons with opposite charge: pass=24067843 all=31104343 -- eff=77.38 % cumulative eff=39.11 %; 8.81; $; ```. **Note:** With the final version of the patch, instead of using `file://`, which now doe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644:1736,multi-thread,multi-threading,1736,https://root.cern,https://github.com/root-project/root/pull/11644,1,['multi-thread'],['multi-threading']
Performance,~~This PR should turn green when [ROOT-9790](https://sft.its.cern.ch/jira/browse/ROOT-9790) is resolved.~~ A temporary workaround for greedy jitting of `Cache` and `Snapshot` has been added.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3602:153,Cache,Cache,153,https://root.cern,https://github.com/root-project/root/pull/3602,1,['Cache'],['Cache']
Performance,"~~~~~~~^; /Users/marcomeyer/Software/root/build/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'Cling_Runtime_Extra'; #include ""cling/Interpreter/Visibility.h""; ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /Users/marcomeyer/Software/root/build/include/Rtypes.h:23:; In file included from <module-includes>:1:; /Users/marcomeyer/Software/root/build/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /Users/marcomeyer/Software/root/build/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /Users/marcomeyer/Software/root/build/include/Rtypes.h:29:; In file included from <module-includes>:1:; /Users/marcomeyer/Software/root/build/include/ThreadLocalStorage.h:60:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /Users/marcomeyer/Software/root/build/include/Rtypes.h:195:; In file included from <module-includes>:2:; /Users/marcomeyer/Software/root/build/include/ROOT/RStringView.hxx:25:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; make[2]: *** [core/G__Core.cxx] Error 1; make[1]: *** [core/CMakeFiles/G__Core.dir/all] Error 2; make: *** [all] Error 2. ```. ### Reproducer. ```; cmake ../src -DCMAKE_INSTALL_PREFIX=$SOFTWARE/root/20240113 -Dimt=ON -Dbuiltin_glew=ON -Dmathmore=ON -DCMAKE_CXX_STANDARD=17; make -j10; ```. ### ROOT version. ROOT Version 6.26.10. ### Installation method. build from source. ### Operating system. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:27736,load,loading,27736,https://root.cern,https://github.com/root-project/root/issues/14337,1,['load'],['loading']
Performance,"… IncrementalExecutor. This patch contains two functionality:; 1. Autoloading of dynamic symbols for system headers; There is three kind of symbols in shared object file, which is 1; normal symbols, 2 dynamic symbols, and 3 hidden visibility symbols.; Linker doesn't care about 3, but should take care (of course) 1 and; 2. For system headers, often symbols are defined in .dynsym section; which means they are 2 dynamic symbols. This patch adds support of; autoloading those symbols. We fallback to resolving dynamic symbols; from system headers only if we couldn't resolve from normal symbol; table, as the initialization of header search is expensive (iterating; through all system headers); 2. Register callback from IncrementalExecutor; Previously, LazyFunctionCreatorAutoload was getting callback only; from DynamicLibraryManager::loadLibrary. This was enough for fixing; tests, but is insufficient to handle ""symbol <something> unresolved; while linking function"" errors as those errors are emitted from; IncrementalExecutor. Adding a callback from IncrementalExecutor; enables us to unresolved symbols. It fixes these kind of errors:; `IncrementalExecutor::executeFunction: symbol '_ZN7TCanvasC1EPKcS1_iiii' unresolved while linking function '_GLOBAL__sub_I_cling_module_8'!`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3017:837,load,loadLibrary,837,https://root.cern,https://github.com/root-project/root/pull/3017,1,['load'],['loadLibrary']
Performance,"… Windows. This was breaking the Windows build with the following error:; ```; [2020-10-08T10:19:28.238Z] axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z' [C:\build\workspace\root-pullrequests-build\build\hist\histv7\test\histhistv7testUnit.vcxproj]; ```; On Windows (well, multi-configuration generators) we need to change those flags in different places, hence we must not have `CACHE` and `FORCE`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6591:519,CACHE,CACHE,519,https://root.cern,https://github.com/root-project/root/pull/6591,1,['CACHE'],['CACHE']
Performance,… case. Thanks @Axel-Naumann !. This fixes the performance issues for millions of request to the type system from cppyy if the type is for example a `std::vector<int>`. Waiting for response of Wim for integration in the official cppyy-clingwrapper repo.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3515:47,perform,performance,47,https://root.cern,https://github.com/root-project/root/pull/3515,1,['perform'],['performance']
Performance,… to decide to optimize/not the user scripts,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6232:15,optimiz,optimize,15,https://root.cern,https://github.com/root-project/root/pull/6232,1,['optimiz'],['optimize']
Performance,"…: do not validate arch.'. This patch was fixing https://sft.its.cern.ch/jira/browse/ROOT-6966 and real solution was deployed later on cling side, allowing to load target options and etc. from PCH in CIFactory.cpp.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1796:159,load,load,159,https://root.cern,https://github.com/root-project/root/pull/1796,1,['load'],['load']
Performance,"…R_PYTHON_VERSION_STRING to build PyROOT instead. - Keep PYTHON_VERSION_STRING as set by CMake; - Set DUNDER_PYTHON_VERSION_STRING to build PyROOT; - Remove from Cache not needed OTHER... variables; - Revert 2082d7ce. Plus fixes in parsing of libcppyy_backend library name and extension, which caused:; http://cdash.cern.ch/viewTest.php?onlyfailed&buildid=839381",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5217:162,Cache,Cache,162,https://root.cern,https://github.com/root-project/root/pull/5217,1,['Cache'],['Cache']
Performance,"…efined symbols. As a general rule, libraries containing C/C++ extensions that are meant; to be loaded from Python, should not be linked against libPython; the; reason for this is that when these libraries are imported, Python has; already loaded the libPython symbols, and if these are different from; the ones used to link against the extension module a crash can happen. libcppyy and libROOTPythonizations, being only imported from Python, do; not need to link against libPython. On the other hand, this is needed for libROOTTPython, which is used only; form C++.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5643:96,load,loaded,96,https://root.cern,https://github.com/root-project/root/pull/5643,2,['load'],['loaded']
Performance,"…ffer. This patch avoids asking ROOT to create a TClass entry in interpreted mode when loading an enum from a given namespace. This is dangerous in case no call to TClass::GetClass(""enum::namespace"") is not called in a context where autoloading is enabled. This should fix ROOT-10528 where GaudiMath::Interpolation is available across dictionaries. When reading the LHCbMathDict_rdict.pcm we find an enum GaudiMath::Interpolation::Type. This in turn creates a never used TClass entry for GaudiMath::Interpolation for which ROOT complains at teardown with:. Fatal in <TClass::SetUnloaded>: The TClass for GaudiMath::Interpolation is being unloaded when in state 3. Patch by Marco Clemencic(@pikacic) and me!. cc: @smuzaffar",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4944:87,load,loading,87,https://root.cern,https://github.com/root-project/root/pull/4944,1,['load'],['loading']
Performance,"…h absolute path. The reason for this fix is that, on MacOS12 with soversion enabled, loading e.g. libcppyy_backend3_8.so does not work even if LD_LIBRARY_PATH and PYTHONPATH are properly set. An alternative that would also work would be to load the library with no path and its fully versioned name (e.g. libcppyy_backend3_8.6.27.so). The problem of that solution is that, at the moment of loading libcppyy_backend, cppyy is; not fully initialized and lookups can't be done yet, so we can't get the ROOT version via gROOT.GetVersion(). This fixes:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/3075/LABEL=mac12,SPEC=soversion,V=master/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9725:86,load,loading,86,https://root.cern,https://github.com/root-project/root/pull/9725,3,['load'],"['load', 'loading']"
Performance,"…hanged. This patch (also) aims to make runtime module installable. This part of code in Clang is comparing the location of ""modulemap which; is currently loaded and gives a definition of current module (say, stl); and ""the location of the modulemap where the current implicit module (like stl) was built"". This was problematic for CMSSW, as they should install modulemaps; and prebuilt pcms to other directory. stl and libc pcms should be; prebuilt, installed and used from installed directory, so this check is; redundant for that usecase.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3180:155,load,loaded,155,https://root.cern,https://github.com/root-project/root/pull/3180,1,['load'],['loaded']
Performance,"…header. This fixes the following errors on Windows (with all macros using `RColor`):; ```; C:\build\release\tutorials\v7>root -l box.cxx; root [0]; Processing box.cxx...; IncrementalExecutor::executeFunction: symbol '?kGreen@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kGreen; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kRed@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kRed; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '?kBlue@RColor@Experimental@ROOT@@2V?$array@E$02@std@@B' unresolved while linking [cling interface function]!; You are probably missing the definition of public: static class std::array<unsigned char,3> const ROOT::Experimental::RColor::kBlue; Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6097:481,load,load,481,https://root.cern,https://github.com/root-project/root/pull/6097,3,['load'],['load']
Performance,"…led. Commit 04576cbe952993832153b4455f934f267a7c259e (silently) extended the semantic of 'disabling class autoloading',; in addition to preventing calls to AutoLoad it also made AutoLoad itself to return immediately when the autoloading; (i.e. ""AutoLoad"" becomes ""MaybeAutoLoad""). However, it left untouched the code in CheckClassInfo that handled its ""autoload"" parameter and which still explicitly; enabled AutoLoading when requested. This inconsistency lead to the 2nd part of ROOT-10528 where a class to TClass::GetClass for enums when the AutoLoading; was disabled lead to a broken State where an ""interpreted"" TClass (for the namespace holding the enum) even though a; library is available for it. This happened because TClass::GetClass explicit auto-loading attempt failed but; CheckClassInfo's autoloading and search for the namespace succeeded.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4995:758,load,loading,758,https://root.cern,https://github.com/root-project/root/pull/4995,1,['load'],['loading']
Performance,"…les. When we load a library, during its static intialization it calls; TCling::RegisterModule to make ROOT's runtime aware of that load. Regular; ROOT also will do some header parsing to add the minimal infrastructure; in place for cling to be able to call into that library. C++ modules define away the need to parse. This patch intends to skip all; parsing at this stage and fix recursive parsing issues for C++ modules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1356:14,load,load,14,https://root.cern,https://github.com/root-project/root/pull/1356,2,['load'],['load']
Performance,"…ue,Array}. when they are attached to the same branch.; TNamedBranchProxy did not implement a Hash method.; Therefore when adding TNamedBranchProxy instances to the THashList dedicated to their bookkeping in TTreeReader TObject::Hash was used.; Unfortunately when trying to find the TNamedBranchProxies, their name was used and the hash was built differently by THashList (based on the name).; In order to fix this the following steps were taken.; - THashList was replaced by an unordered_map with names as keys and unique_ptr<TNamedBranchProxy> as values. The unique_ptr is used to automatically manage ownership.; - The key is not the name of the branch as known by the branch any more but rather the name the user inputs in the constructor of the TTreeReader{Array,Value}.; - An exception is thrown in debug mode if the system tries to push in the TTreeReader collection of proxy with a name held by a proxy in that collection.; - The methods of TTreeReader were adapted to use this new container as well as the code in TTreeReaderValue and TTreeReaderArray. A real usecase from CMS where the mass of the W boson is studied shows a significant speedup (30%).; The code uses TDataFrame and several nodes are created which read from the same branch in an input tree which holds weights in a collection.; This configuration stressed the performance degradation pattern fixed by this commit as it triggered multiple times the deserialisation of the ""weights branch"". Thanks to Elisabetta Manca and Lorenzo Bianchini for providing the bug report and initial reproducer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1784:1337,perform,performance,1337,https://root.cern,https://github.com/root-project/root/pull/1784,2,['perform'],['performance']
Safety," (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91; #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178; #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503; #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542; #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178; #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792; #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:3539; #21 0x00007fb64bd35246 in TTree::Merge (this=0x3c045e0, li=0x7ffcc0390e10, info=0x7ffcc0390f00) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:6875; #22 0x00007fb64bc79085 in ROOT::merge_TTree (obj=0x3c045e0, coll=0x7ffcc0390e10, info=0x7ffcc0390f00) at tree/tree/G__Tree.cxx:4109; #23 0x00007fb64cb1fa1a in TFileMerger::MergeRecursive (this=0x7ffcc0391e90, target=0x3c283e0, sourcelist=0x7ffcc0391ee8, type=12) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:623; #24 0x00007fb64cb20ee4 in TFileMerger::PartialMerge (this=0x7ffcc0391e90, in_type=12) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:864; #25 0x00007fb64cb1e4e9 in TFileMerger::Merge (this=0x7ffcc0391e90) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:371; #26 0x00000000004024ea in main () at tfilemerger_setmaxtreesize.cpp:47; Aborted (core dumped); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:7328,Abort,Aborted,7328,https://root.cern,https://github.com/root-project/root/issues/6640,1,['Abort'],['Aborted']
Safety," -y clean all. mkdir /reproducer && cd /reproducer; git clone -b master --depth 1 http://github.com/root-project/root source; git -C source log; gcc --version; cmake -GNinja -S source -B build -Dxrootd=OFF; cmake --build build. ```; ```console; ❯ singularity --version; singularity version 3.8.7-1.fc35; ❯ singularity build -f reproducer.sif reproducer.def; (...skip...); + mkdir /reproducer; + cd /reproducer; + git clone -b master --depth 1 http://github.com/root-project/root source; Cloning into 'source'...; (...skip...); + git -C source log; commit 9c12a2a4e707ee75f37bde96772ab53e94f01033 (grafted, HEAD -> master, origin/master, origin/HEAD); Author: Jonas Rembser <jonas.rembser@cern.ch>; Date: Mon Apr 25 11:58:45 2022 +0200. [RF] Also compare parameter errors in RooFitResult::isIdentical(NoCov). The `RooFitResult::isIdentical` method so far only compared parameter; values and covariance matrix values. Even though comparing the final; parameter errors would be redundant with the covariance matrix checks,; it's still important to check parameter errors for two reasons:. 1. Initial parameter errors need to be compared, because the the; initial error determins the initial step size which influences the; minimization path. If initial errors are different, the final; parameter values are almost never identical. Catching differences in initial parameter errors informs the user; that differences in fit result are because of the starting; conditions. 2. In the case of `RooFitResult::isIdenticalNoCov`, we need to check; the error of final parameters because there is no comparison of; covariance matrix values. The signature of the public function `isIdenticalNoCov` is extended by a; tolerance parameter for the error comparison. This is expected to not; break user code, because the function was only introduced in 6.26 and is; so far only used in a single unit test (`testSumW2Error`). The `testRooAbsPdf` unit test didn't reset the initial parameter errors; correctly, which is n",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478:1211,redund,redundant,1211,https://root.cern,https://github.com/root-project/root/issues/10478,1,['redund'],['redundant']
Safety," /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #46 TKey::ReadObjectAny (this=0x10aa98220, expectedClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TKey.cxx:1102; #47 0x00007fffa934c51c in TDirectoryFile::GetObjectChecked (this=0x7ffff83eb1c8, namecycle=<optimized out>, expectedClass=0x10a596170) at /builddir/build/BUILD/root-6.28.00/io/io/src/TDirectoryFile.cxx:1111; #48 0x0000000108cd56c0 in TDirectory::GetObject<TMVA::Experimental::SOFIE::RModel> (ptr=<synthetic pointer>: <optimized out>, namecycle=0x108cd6d08 ""model"", this=0x7ffff83eb1c8) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:651; #49 EmitModel (inputfile=..., outname=""Add"") at /builddir/build/BUILD/root-6.28.00/ppc64le-redhat-linux-gnu/tmva/sofie/test/EmitFromRoot_all.cxx:26; #50 0x0000000108cd23dc in main (argc=<optimized out>, argv=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; ===========================================================; pure virtual method called; terminate called without an active exception; Subprocess aborted; ~~~. Disabling the SOFIE parser, so that the build completes. There are error during testing:. There are failures when running in interpreter mode:. ~~~; 98/1192 Test #779: tutorial-roofit-rf104_classfactory ..................................***Failed Error regular expression found in output. Regex=[segmentation violation]126.58 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C...; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa80f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa805a38c in do_system () from /lib64/glibc-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:11723,abort,aborted,11723,https://root.cern,https://github.com/root-project/root/issues/12372,1,['abort'],['aborted']
Safety," ; (d) less memory consumption (better memory scalability). The development for this commit was motivated from a use case in ALICE, in which the parallel world ""scene"" can be very large (~100K volumes). In this case, TGeoVoxelFinder takes very long; to construct and consumes a very large amount of memory (GBs). In addition, the evaluation of the Safety function dominates the Geant simulation time. The improvements in this commit are mainly achieved through:. * The use of a boundary volume hierarchy (BVH) as the base acceleration entity, replacing TGeoVoxelFinder.; BVH are the standard in industry/computer-graphics, for what concerns ray-object intersection tasks. The BVH is constructed from axis-aligned bounding boxes and employed in the FindBoundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh com",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:1250,Safe,Safety,1250,https://root.cern,https://github.com/root-project/root/pull/16442,1,['Safe'],['Safety']
Safety," Fedora for s390x, RHEL+EPEL for s390x; 3. How you obtained ROOT: Compilation from source. ### Additional context. Thefailing test:; ~~~; 295/1272 Test #250: gtest-roofit-roofitcore-test-testRooProdPdf .........................***Failed 1.02 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 8 tests from 2 test suites.; [----------] Global test environment set-up.; [----------] 2 tests from RooProdPdf; [ RUN ] RooProdPdf.TestGetPartIntList; /builddir/build/BUILD/root-6.28.00/roofit/roofitcore/test/testRooProdPdf.cxx:146: Failure; Expected equality of these values:; hashRooProduct(prod); Which is: 3649468902; 2448666198; [ FAILED ] RooProdPdf.TestGetPartIntList (229 ms); [ RUN ] RooProdPdf.TestDepsAreCond; Warning in <RooNaNPacker>: Fast recovery from undefined function values only implemented for little-endian machines. If necessary, request an extension of functionality on https://root.cern; [ OK ] RooProdPdf.TestDepsAreCond (644 ms); [ DISABLED ] RooProdPdf.DISABLED_ChangeServerNormSetForProdPdfInAddPdf; [----------] 2 tests from RooProdPdf (873 ms total); [----------] 6 tests from RooProdPdf/TestProdPdf; [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0off (17 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt0cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1off (13 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt1cpu (9 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2off; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2off (16 ms); [ RUN ] RooProdPdf/TestProdPdf.CachingOpt/opt2cpu; [ OK ] RooProdPdf/TestProdPdf.CachingOpt/opt2c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12430:1518,recover,recovery,1518,https://root.cern,https://github.com/root-project/root/issues/12430,1,['recover'],['recovery']
Safety," For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. [Detaching after vfork from child process 800350]; root [0] double f(double x) { return x*x; }; root [1] double y = f(3.0);; Failure value returned from cantFail wrapped call; inconsistent use of embedded source; UNREACHABLE executed at /srv/root/src/root/inte",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1969,safe,safe,1969,https://root.cern,https://github.com/root-project/root/pull/11882,1,['safe'],['safe']
Safety," GLEW; gl2ps; LibXml2; MySQL; PostgreSQL; Sqlite; CFITSIO; XROOTD; FTGL; LibXml2; TBB; Vdt; OCaml; ```; Then I got the following lines ; ```; -- clang project is enabled; -- clang-tools-extra project is disabled; -- compiler-rt project is disabled; -- cross-project-tests project is disabled; -- libc project is disabled; -- libclc project is disabled; -- libcxx project is disabled; -- libcxxabi project is disabled; -- libunwind project is disabled; -- lld project is disabled; -- lldb project is disabled; -- mlir project is disabled; -- openmp project is disabled; -- parallel-libs project is disabled; -- polly project is disabled; -- pstl project is disabled; -- flang project is disabled; ```; and these:; ```; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found Python3: /usr/bin/python3 (found suitable version ""3.11.6"", minimum required is ""3.0"") found components: Interpreter ; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 13.0.0; -- Not building amdgpu-arch: hsa-runtime64 not found; -- Building Cling as part of ROOT; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/include/c++/13:/usr/include/x86_64-linux-gnu/c++/13:/usr/include/c++/13/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-13'; -- Performing Test CXX_HAS_fno_rtti; ```. The last lines of this cmake were:; ```cmake; -- ROOT Configuration . System Linux-6.5.0-15-generic; Processor 2 core Intel(R) Core(TM) i5-6200U CPU @ 2.30GHz (x86_64); Build type Release; Install path /home/<user>/root_install; Compiler GNU 13.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module ; Shared -Wl,--no-undefined -Wl,--hash-s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:2863,detect,detection,2863,https://root.cern,https://github.com/root-project/root/issues/14479,1,['detect'],['detection']
Safety," Tagging @pcanal on that issue. . A simple standalone bug reproducer is provided below. ; In the script `numTest` can be set to `0` or `1` . The case `numTest=0` allows illustrating the bug: ; The input file `myFileWithHists.root` is created with 4 histograms: `hist1`, `hist2`, `hist3` and `hist4`. ; The `TFileMerger` object should create a file `myExclusiveFile.root` and is required to only copy `hist1`, `hist2`. ; But instead the full file is copied and `myExclusiveFile.root` contains all histograms. ; ```; selectiveHadd Source file 1: myFileWithHists.root; [TFile::Cp] Total 0.00 MB	|====================| 100.00 % [6.7 MB/s]. romain@romain-dell:~/Desktop$ root -l myExclusiveFile.root ; root [0] ; Attaching file myExclusiveFile.root as _file0...; (TFile *) 0x562d3abbe360; root [1] .ls; TFile**		myExclusiveFile.root	; TFile*		myExclusiveFile.root	; KEY: TH1F	hist1;1	hist1; KEY: TH1F	hist2;1	hist2; KEY: TH1F	hist3;1	hist3; KEY: TH1F	hist4;1	hist4; root [2] ; ```. The case `numTest=1` is a way to avoid this bug. ; One can create a dummy empty file and add it as input file of the `TFileMerger` so that there is 2 input files the one of interest + the dummy empty one . ; In that case as requested only `hist1` and `hist2` are found in the `myExclusiveFile.root` file.; ```; selectiveHadd Source file 1: myFileWithHists.root; Creating a dummy empty file to avoid a bug in TFileMerger class: /tmp/dummyEmptyFile-52fce558-3043-11ee-8e02-2201a8c0beef.root; selectiveHadd Source file 2: /tmp/dummyEmptyFile-52fce558-3043-11ee-8e02-2201a8c0beef.root; selectiveHadd Target path: myExclusiveFile.root:/. romain@romain-dell:~/Desktop$ root -l myExclusiveFile.root ; root [0] ; Attaching file myExclusiveFile.root as _file0...; (TFile *) 0x55932d5cd940; root [1] .ls; TFile**		myExclusiveFile.root	; TFile*		myExclusiveFile.root	; KEY: TH1F	hist1;1	hist1; KEY: TH1F	hist2;1	hist2; root [2] ; ```. Many thanks in advance for fixing that issue, ; Romain. ### Reproducer. ```C++; #include ""TFileMerge",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13359:1307,avoid,avoid,1307,https://root.cern,https://github.com/root-project/root/issues/13359,1,['avoid'],['avoid']
Safety," a high function value to Minuit.; This value was always the same, though.; Like this, Minuit cannot compute a gradient to get out of this region,; because all bad parameter points yield the same function value. With this commit, RooFit can pack information about the ""badness"" of a; parameter point into the mantissa of a NaN, e.g. how much negative the; values of a PDF came out or how far the sum of PDF coefficients is from; 1. This information is packed into NaN using ""RooNaNPacker"", and passed; through the computation graph. It is finally unpacked in RooMinimizerFcn; before being handed to the minimiser. This allows for the calculation of; gradients, enabling the fitter to recover from an invalid state more; easily. When NaNs are being unpacked, they are presented to Minuit as maximum; function value + badness * penaltyStrength, so a gradient can be; computed that points away from the bad region. The maximum function; value comes from previous minimisation steps, the badness is the payload; of the packed NaN, and the strength can be set from the outside. If the minimisation starts out in an undefined region, and the maximum; function value is not (yet) known, 0. + badness * strength is used.; Once a well-defined region is found, the valid function values are; offset such that they are all lower than 0. In this way, Minuit is; encouraged to step into the well-defined regions, and sees a rapidly; rising function when stepping out. When fit results are saved, though,; this offset is subtracted in order to recover ""correct"" NLL values. Concretely:; - Add RooNaNPacker.; - Add a function to set the magnitude of the penalty term that's; supposed to drive the minimiser away from undefined regions.; - Add a function to RooMinimizerFcn that returns a possible artificial; offset. This helps to hide any offsetting from the outside world.; - When saving a fit result, remove any offset, and copy the number of; invalid function values into the fit result (was broken previously).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6401:1781,recover,recover,1781,https://root.cern,https://github.com/root-project/root/pull/6401,1,['recover'],['recover']
Safety," a segfault for non-debug builds):. ```cpp; #include <TTree.h>; #include <TFile.h>; #include <TApplication.h>. int main(); {; //TApplication app(""app"", nullptr, nullptr);; TFile *outputFile = new TFile(""output.root"", ""RECREATE"");. TTree *tree = new TTree(""tree"", ""treeliberated tree"");; outputFile->Write();. tree->StartViewer();. //app.Run();; outputFile->Close();; }; ```. ```; #8 0x00007fd6cf22b8c2 in TGCompositeFrame::TGCompositeFrame (this=0x56036dc34a10, p=0x0, w=10, h=10, options=3, back=0) at ../../../root_dbg/gui/gui/src/TGFrame.cxx:853; #9 0x00007fd6cf22d4cc in TGMainFrame::TGMainFrame (this=0x56036dc34a10, p=0x0, w=10, h=10, options=2) at ../../../root_dbg/gui/gui/src/TGFrame.cxx:1430; #10 0x00007fd6d64b9a6c in TTreeViewer::TTreeViewer (this=0x56036dc34a10, tree=0x56036d05df80) at ../../../root_dbg/tree/treeviewer/src/TTreeViewer.cxx:349; #11 0x00007fd6d809e059 in ?? (); #12 0x000056036c1be340 in ?? (); #13 0x000056036c1be340 in ?? (); #14 0x000056036dc34a10 in ?? (); #15 0x000056036dc34a10 in ?? (); #16 0x00007fff775fd220 in ?? (); #17 0x00007fff775fd3d8 in ?? (); #18 0x00007fff775fdc20 in ?? (); #19 0x00007fff775fd3f8 in ?? (); #20 0x00000001775fd3e0 in ?? (); #21 0x0000000000000000 in ?? (); ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. The crash is due to a nullptr dereference in `TGCompositeFrame::TGCompositeFrame` (`fParent` is null), which in turn is caused by a failed check in `TGWindow::TGWindow` at `TGWindow.cxx:54`:. ```; if (!p && gClient) {; p = gClient->GetRoot();; }; ```. In the condition above, if the user created no `TApplication`, `gClient` is false-y. Rather than crash and burning, we could detect the situation and produce a helpful error message. ### Additional context; <!--; Add any other context about the problem here.; -->. At least [one user](https://root-forum.cern.ch/t/break-segmentation-violation-for-a-compiled-program/42022/12) could have used a better error message :smile:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6743:1892,detect,detect,1892,https://root.cern,https://github.com/root-project/root/issues/6743,1,['detect'],['detect']
Safety," and execute function [file](w/o extension); Xk [file] : keep [file] it already loaded else load it. and execute function [file](w/o extension); E <[file]>: open editor and evaluate {statements} in the file; Load/Unload: L [file] : load [file]; Lk [file] : keep [file] if already loaded, else load it; La [file] : reload all files loaded after [file]; U [file] : unload [file]; C [1|0] : copy source to $TMPDIR (on/off); undo : undo previous declarations; lang : local language (EUC,SJIS,EUROPEAN,UNKNOWN); preproc : toggle preprocessing of interpreted files; Monitor: g <[var]> : list global variable; l <[var]> : list local variable; proto <[scope]::>[func] : show function prototype; class <[name]> : show class definition (one level); Class <[name]> : show class definition (all level); typedef <name> : show typedefs; function : show interpreted functions; macro : show macro functions; template : show templates; include : show include paths; file : show loaded files; where : show current file position; security : show security level; refcount : reference count control on/off; garbage : show garbage collection buffer; Garbage : Do garbage collection; cover [file] : save trace coverage; return [val] : return undefined symbol value; Run: S : step over function/loop; s : step into function/loop; i : ignore and step over; c <[line]>: continue <to [line]>; e : step out from function; f [file] : select file to debug; b [line] : set break point; db [line] : delete break point; a [assert]: break only if assertion is true; O [0~4] : Set bytecode compiler mode; debug : bytecode status display on/off; asmstep : bytecode step mode on/off; status : show bytecode exec flags; dasm : disassembler; except : toggle exception catching; Quit: q : quit cint; qqq : quit cint - mandatory; qqqqq : exit process immediately; qqqqqqq : abort process; save : call emergency routine to save important data. ROOT special commands.; ===========================================================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191:5153,abort,abort,5153,https://root.cern,https://github.com/root-project/root/issues/10191,1,['abort'],['abort']
Safety," be disappointingly small.); Under this interpretation, I want to cast doubt on ; ```; const Int_t kMaxUChar = 256;; const Int_t kMaxUShort = 65534;; ```; While there were some promising publications of computer scientists claiming to have succeeded in storing 256 in an unsigned char, later attempts to reproduce that research found that the bit sequence was indistinguishable from zero. The general consensus among computer scientists today is that the highest value which can be stored in a uint8_t is in fact 255. On the other hand, a few years later initially doubtful claims that 65535 could be stored in an unsigned short *were* replicated. Today, big tech (e.g. GAFAM) routinely store that value in their 16 bit numbers and even smaller startups are picking up on the trend. ``</sarcasm>``. (Also, while the kMaxUShort error is rendered harmless by the bitshift in kMaxShort, the kMaxUChar error means that kMinChar and kMaxChar are wrong. In fact, Char_t(kMinChar)>Char_t(kMaxChar) is true. However, nine out of ten math professors agree that the maximum of a set of values should be at least as large as the minimum of that set. ``[[citation needed]]``). These issues have been present in the codebase since at least ROOT5, so fixing them would break backwards compatibility. My suggestion is a different one. C++14 introduces an attribute called ``[[deprecated]]``. ```; [[deprecated(""kMaxUChar has a misleading value and should not be used.""; "" Please use std::numeric_limits<unsigned char>::max()"")]] ; const Int_t kMaxUChar = 256;; ```. And while we are at it, let's be honest: Most users are already somewhat aware that there is a C++ ecosystem outside the safe-ish space that is ROOT. The fallout of vendor-specific implementations has long decayed to a safe level, the air is fresh and breathable, standard compliant implementations are blooming. Thus:; ```; [[deprecated(""Just call it \""int\""."")]]; typedef int Int_t; //Signed integer 4 bytes (int); ```. Just my two cents,; Philipp",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12208:2912,safe,safe-ish,2912,https://root.cern,https://github.com/root-project/root/issues/12208,2,['safe'],"['safe', 'safe-ish']"
Safety," be reproduced with a very limited example, divided in three pieces; ### 1. Write an RNTuple; ```cpp; void write_ntuple(); {; auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");. std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleWriter::Recreate(std::move(model), ntuplename, filename);. constexpr int nentries = 10;; for (int i = 0; i < nentries; i++) {; *myintfield = i;; *myintfieldsquared = i*i;; ntuple->Fill();; // Create a cluster every 5 entries; if (i == 4 || i == 9) ntuple->CommitCluster();; }; }; ```; ### 2. Read the RNTuple (this will create a `cachedntuple.root` file); ```cpp; void read_ntuple(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""myntuple.root""};; auto ntuple = RNTupleReader::Open(ntuplename, filename);. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; }; }; ```; ### 3. Print info of the cached RNTuple; ```cpp; void read_cache(); {; std::string_view ntuplename{""myntuple""};; std::string_view filename{""cachedntuple.root""};. auto model = RNTupleModel::Create();; auto myintfield = model->MakeField<int>(""myintfield"");; auto myintfieldsquared = model->MakeField<int>(""myintfieldsquared"");; auto ntuple = RNTupleReader::Open(std::move(model), ntuplename, filename);; ntuple->PrintInfo();. for (auto entryid: *ntuple){; ntuple->LoadEntry(entryid);; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfield << ""\n"";; std::cout << ""Read entry "" << entryid << "" with value "" << *myintfieldsquared << ""\n"";; }; }; ```. ## TODOS. 1. Still missing all the logic for automatically switching to read the cached RNTuple rather than the original one; 2. That `entriessofar` variable needed to pass to the `CommitCluster` function hopefully can be avoided; 3. Tests with more complex data schemes; 4. Some logic to enable the caching optionally from the user side",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8329:2496,avoid,avoided,2496,https://root.cern,https://github.com/root-project/root/pull/8329,1,['avoid'],['avoided']
Safety," bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (%check section)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8073:1587,abort,aborted,1587,https://root.cern,https://github.com/root-project/root/issues/8073,1,['abort'],['aborted']
Safety," but a package maintainer who tests the build with `root --help` would be surprised by the nonzero exit status. Is this behavior a design decision, or does it imply some check failures?. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `root --help` exits with exit status 0. ### To Reproduce; 1. In a Bourn-like shell, run; ```sh; root --help; echo ""Exit status: $?""; ```. ```console; $ root --help; echo ""Exit status: $?"". usage: root; [-b B]; [-x X]; [-e E]; [-n N]; [-t T]; [-q Q]; [-l L]; [-a A]; [-config CONFIG]; [-h HELP]; [--version VERSION]; [--notebook NOTEBOOK]; [--web WEB]; [--web=<browser> WEB=<BROWSER>]; [dir]; [file:data.root]; [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show the ROOT banner; -a Show the ROOT splash screen; -config print ./configure options; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; Exit status: 1; ```. ### Setup; This issue is reproducible on my laptop (x86_64 NixOS), LXPLUS7 LXPLUS8 and LXPLUS9. My laptop:; ```; $ root --version; ROOT Version: 6.26/08; Built for linuxx8664gcc on Jan 01 1980, 00:00:00; From @; $ nix-info -m; - system: `""x86_64-linux""`; - host os: `Linux 5.15.80, NixOS, 22.11 (Raccoon), 22.11.20221130.596a8e8`; - multi-user?: `yes`; - sandbox: `yes`; - version: `nix-env (Nix) 2.11.0`; - nixpkgs: `/nix/store/qwgw2b19ga8dr7c6wfpd6p87bdjyrnha-source`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11977:1653,safe,safety,1653,https://root.cern,https://github.com/root-project/root/issues/11977,1,['safe'],['safety']
Safety," by the caller. The minimum required interface for the helper is the following (more; methods can be present, e.g. a constructor that takes the number of worker threads is usually useful):. * Helper must publicly inherit from ROOT::Detail::TDF::TActionImpl<Helper>; * Helper(Helper &&): a move-constructor is required. Copy-constructors are discouraged.; * ColumnTypes_t: alias for a ROOT::TypeTraits::TypeList instantiation that specifies the types of the; columns to be passed to this action helper.; * Result_t: alias for the type of the result of this action helper. Must be default-constructible.; * ROOT::Detail::TDF::ColumnNames_t GetColumnNames() const: return the names of the columns processed by this; action. The number of names must be equal to the size of ColumnTypes_t.; * void Exec(unsigned int slot, ColumnTypes...columnValues): each working thread shall call this method; during the event-loop, possibly concurrently. No two threads will ever call Exec with the same 'slot' value:; this parameter is there to facilitate writing thread-safe helpers. The other arguments will be the values of; the requested columns for the particular entry being processed.; * void InitTask(TTreeReader *, unsigned int slot): each working thread shall call this method during the event; loop, before processing a batch of entries (possibly read from the TTreeReader passed as argument, if not null).; This method can be used e.g. to prepare the helper to process a batch of entries in a given thread. Can be no-op.; * void Initialize(): this method is called once before starting the event-loop. Useful for setup operations.; Can be no-op.; * void Finalize(): this method is called at the end of the event loop. Commonly used to finalize the contents; of the result.; * Result_t &PartialUpdate(unsigned int slot): this method is optional, i.e. can be omitted. If present, it should; return the value of the partial result of this action for the given 'slot'. Different threads might call this; method ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1905:1246,safe,safe,1246,https://root.cern,https://github.com/root-project/root/pull/1905,1,['safe'],['safe']
Safety," failure:; * Fedora 39; * C++20; * ROOT built in Release mode (-O3); * The test `dataframe-vecops`, which needs to be run via ctest and using gtest infrastructure; * The test being compiled in release mode too. The failure is:; ```; 730/2406 Test #393: gtest-tree-dataframe-test-dataframe-vecops ........................................................***Failed 5.01 sec; Running main() from /builddir/build/BUILD/googletest-1.13.0/googletest/src/gtest_main.cc; [==========] Running 4 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 4 tests from RDFAndVecOps; [ RUN ] RDFAndVecOps.ReadStdVectorAsRVec; [ OK ] RDFAndVecOps.ReadStdVectorAsRVec (4678 ms); [ RUN ] RDFAndVecOps.DefineRVec; [ OK ] RDFAndVecOps.DefineRVec (0 ms); [ RUN ] RDFAndVecOps.SnapshotRVec; [ OK ] RDFAndVecOps.SnapshotRVec (6 ms); [ RUN ] RDFAndVecOps.RVecBool; double free or corruption (out); CMake Error at /github/home/ROOT-CI/src/cmake/modules/RootTestDriver.cmake:232 (message):; error code: Subprocess aborted; ```. And gdb says:; ```; 0 0x00007f25d4eae834 in __pthread_kill_implementation () from /lib64/libc.so.6; 1 0x00007f25d4e5c8ee in raise () from /lib64/libc.so.6; 2 0x00007f25d4e448ff in abort () from /lib64/libc.so.6; 3 0x00007f25d4e457d0 in __libc_message.cold () from /lib64/libc.so.6; 4 0x00007f25d4eb87a5 in malloc_printerr () from /lib64/libc.so.6; 5 0x00007f25d4eba840 in _int_free_merge_chunk () from /lib64/libc.so.6; 6 0x00007f25d4ebd3de in free () from /lib64/libc.so.6; 7 0x00007f25d6c5efa8 in TList::Delete(char const*) () from /github/home/ROOT-CI/build/lib/libCore.so; 8 0x00007f25d6c56566 in THashList::Delete(char const*) () from /github/home/ROOT-CI/build/lib/libCore.so; 9 0x00007f25d67235b5 in TDirectoryFile::Close(char const*) () from /github/home/ROOT-CI/build/lib/libRIO.so; 10 0x00007f25d6741406 in TFile::Close(char const*) () from /github/home/ROOT-CI/build/lib/libRIO.so; 11 0x00000000004324e1 in MakeTreeWithBools(std::__cxx11::basic_string<char, s",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14803:1075,abort,aborted,1075,https://root.cern,https://github.com/root-project/root/pull/14803,1,['abort'],['aborted']
Safety, in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1549; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1711:13: warning: Value stored to 'safe' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'safe' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1711; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1716:21: warning: Value stored to 'az' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'az' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoArb8.cxx:1716; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1968:11: warning: Maybe you meant to call TGeoTrap::DistFromInside() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoArb8.cxx:1983:11: warning: Maybe you meant to call TGeoTrap::DistFromOutside() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoArb8.cxx:2032:11: warning: Maybe you meant to call TGeoTrap::Safety() instead [clazy-skipped-base-method]; /opt/root_src/geom/geom/src/TGeoBBox.cxx:324:25: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Control jumps to 'case 1:' at line 298 in /opt/root_src/geom/geom/src/TGeoBBox.cxx:297; 2: Execution continues on line 317 in /opt/root_src/geom/geom/src/TGeoBBox.cxx:302; 3: Assuming 'ic' is < 'ndiv' in /opt/root_src/geom/geom/src/TGeoBBox.cxx:322; 4: Loop condition is true. Entering loop body in /opt/root_src/geom/geom/src/TGeoBBox.cxx:322; 5: Value assigned to field 'fNodes' in /opt/root_src/geom/geom/src/TGeoBBox.cxx:323; 6: Called C++ object pointer is null in /opt/root_src/geom/geom/src/TGeoBBox.cxx:324; /opt/root_src/geom/geom/src/TGeoBBox.cxx:458:20: warning: Value stored to 'snxt' during its initialization is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'snxt' during its initialization is never read in /opt/root_src/geom/geom/src/TGeoBBox.cxx:458; /opt/root_src/geom/geom/src/TGeoBBox.cxx:513:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7428:2016,Safe,Safety,2016,https://root.cern,https://github.com/root-project/root/issues/7428,1,['Safe'],['Safety']
Safety," interpArgs[8]: -Wno-undefined-inline; interpArgs[9]: -fsigned-char; interpArgs[10]: -O1; interpArgs[11]: -mllvm; interpArgs[12]: -optimize-regalloc=0; interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap; interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib; interpArgs[15]: -fmodules; interpArgs[16]: -fno-implicit-module-maps; interpArgs[17]: -Rmodule-build; interpArgs[18]: -fno-autolink; interpArgs[19]: --ptrcheck; Process 35096 stopped; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; libc.so.7`__sys_thr_kill:; -> 0x8279b9dca <+10>: jb 0x8279b7f28; 0x8279b9dd0 <+16>: retq; 0x8279b9dd1: int3; 0x8279b9dd2: int3; (lldb) bt; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; frame #1: 0x00000008279326f4 libc.so.7`__raise + 52; frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73; frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73; frame #4: 0x0000000825448abf libc++.so.1`operator new(unsigned long) + 111; frame #5: 0x000000082544f2e3 libc++.so.1`std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) + 195; frame #6: 0x00000008351c7d9c libCling.so`llvm::DataLayout::operator=(llvm::DataLayout const&) + 44; frame #7: 0x00000008351c7cd3 libCling.so`llvm::DataLayout::DataLayout(llvm::DataLayout const&) + 195; frame #8: 0x00000008351cbc62 libCling.so`cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&, clang::CompilerInstance const&, std::__1::unique_ptr<llvm::orc::ExecutorProcessControl, std::__1::default_delete<llvm::orc::ExecutorProcessControl> >, llvm::Error&, void*, bool) + 1154; frame #9: 0x00000008351c863a libCling.so`cling::IncrementalExecutor::IncrementalExecutor(clang::DiagnosticsEngine&, clang::Com",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14075:1897,abort,abort,1897,https://root.cern,https://github.com/root-project/root/issues/14075,1,['abort'],['abort']
Safety," like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./test.o; terminate called after throwing an instance of 'std::invalid_argument'; what(): Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; Aborted (core dumped); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11063:2220,Abort,Aborted,2220,https://root.cern,https://github.com/root-project/root/pull/11063,1,['Abort'],['Aborted']
Safety," might help us fixing this issue.; ===========================================================; #5 ROOT::Minuit2::SimplexBuilder::Minimum (this=0x7ffcf9555c58, mfcn=..., seed=..., maxfcn=200, minedm=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/SimplexBuilder.cxx:48; #6 0x00007f045c93e1cd in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=<optimized out>, mfcn=..., gc=..., seed=..., strategy=..., maxfcn=200, toler=<optimized out>) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:166; #7 0x00007f045c93c737 in ROOT::Minuit2::ModularFunctionMinimizer::Minimize (this=0x7ffcf9555c48, fcn=..., st=..., strategy=..., maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/ModularFunctionMinimizer.cxx:120; #8 0x00007f045c905c51 in ROOT::Minuit2::MnApplication::operator() (this=0x7ffcf9555b00, maxfcn=200, toler=0.10000000000000001) at /usr/src/debug/root-6.22.02/math/minuit2/src/MnApplication.cxx:57; #9 0x000000000041068c in main (); ===========================================================; ```. ### Setup; CentOS7/gcc-4.8.5 root 6.22 from EPEL . ### Additional context; Not a personal priority of me, so it is unlikely that I will provode a patch in the next days.; However, I can briefly describe how the FPE occurs.; It occurs on line 48 in SimplexBuilder when all parameters are fixed and 1./double(n) is always 1/0. So it is just plain crash, not an FPE.; To avoid it the Simplex builder should not be called for the case when there are no free parameters but instead, ModularFunctionMinimizer::Minimize() should call FCn just once and return ""current state"". And yes, just preempting a question about a fit with zero free parameters. Yes, it is very useful. ; Imagine a set of different models fitted to the data using the same codebase. Some models have 2 free parameters, others 3, but some have 0. And for the last category because if this bug one cannot use simplex from ROOT. (I use migrad).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6775:3155,avoid,avoid,3155,https://root.cern,https://github.com/root-project/root/issues/6775,1,['avoid'],['avoid']
Safety," of code duplication that would only get worse with the further parametrzation. To clear this up, we could implement one modern and fully parametrized crystal ball shape with a clear name like **RooCrystalBall** that can serve as a drop-in replacement for both RooCBShape and RooDSCBShape as well as cover the usecase of the asymmetric Gaussian core. Such a class and a rigurous test is implemented in https://github.com/root-project/root/pull/7257, which can serve as a starting point for this development. In addition to the commit suggested in the PR, there are a few more things that could be done to make RooCrystalBall the new standard:. * Write documentation.; * Implement batch computation interface.; * Maybe even deprecate the old shapes somehow. They probably need to be kept for backwards compatibility, but they could be put in RooFitMore and the user gets a nudge to use the new shape if it is used. Probably we should also look at the crystal ball implementation in Higgs combine to see if we can take some of the improvements upstream:; * [RooDoubleCBFast.h](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/interface/RooDoubleCBFast.h); * [RooDoubleCBFast.cc](https://github.com/cms-analysis/HiggsAnalysis-CombinedLimit/blob/102x/src/RooDoubleCBFast.cc). More things to consider:; * The RooDSCB shape was **only merged last summer in https://github.com/root-project/root/pull/6172 and it has not made it into any release so far!** So we have the opportunity to safely change it/replace it for 6.24 without disturbing users of previous ROOT versions.; * Some people also use a custom [RooSDSCBShape](https://github.com/root-project/root/issues/7249). It presumably stands for ""single double sided crystal ball"" and it has just a non-Gaussian tail on the **right** (compared to RooCBShape which has it on the left). So the single-tail constructor of the new RooCrystalBall also takes an additional flag to indicate where the tail is, with the left side as default.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7258:2623,safe,safely,2623,https://root.cern,https://github.com/root-project/root/issues/7258,1,['safe'],['safely']
Safety," of function template specialization 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilterHelper<>' requested here; auto passed = CheckFilterHelper(slot, entry, ColumnTypes_t{}, TypeInd_t{});; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/RFilter.hxx:72:4: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::CheckFilters' requested here; RFilter(FilterF f, const ROOT::RDF::ColumnNames_t &columns, std::shared_ptr<PrevNode_t> pd,; ^; /Users/marcomeyer/Software/root/20230831/include/ROOT/RDF/InterfaceUtils.hxx:459:40: note: in instantiation of member function 'ROOT::Detail::RDF::RFilter<void (*)(), ROOT::Detail::RDF::RNodeBase>::RFilter' requested here; std::unique_ptr<RFilterBase>(new F_t(std::forward<F>(f), cols, *prevNodeOnHeap, *colRegister, name)));; ^; input_line_49:2:23: note: in instantiation of function template specialization 'ROOT::Internal::RDF::JitFilterHelper<void (&)(), ROOT::Detail::RDF::RNodeBase>' requested here; ROOT::Internal::RDF::JitFilterHelper(R_rdf::func0, new const char*[0]{}, 0, """", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x600002a21600), reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x600002a209c0),reinterpret_cast<ROOT::Internal::RDF::RColumnRegister*>(0x600000bb80a0));; ^; libc++abi: terminating due to uncaught exception of type std::runtime_error: ; An error occurred during just-in-time compilation in RLoopManager::Run. The lines above might indicate the cause of the crash; All RDF objects that have not run their event loop yet should be considered in an invalid state. Abort trap: 6; ```. ### Reproducer. Not sure how to reproduce. I have just called.. `ROOT::RDataFrame df(*tree);` with a tree initially stored in a root file. ### ROOT version. Last commit of the day on august 31,2023. ### Installation method. build form ource. ### Operating system. macos. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13656:3457,Abort,Abort,3457,https://root.cern,https://github.com/root-project/root/issues/13656,1,['Abort'],['Abort']
Safety," of roofit if I ""forget"" to multiply the pdf by the bin size *only in the sum part* of the likelihood formula. -If I compute it in what I think is ""correct"", I could not find the value obtain by roofit. Hypothesis of explanation : createNLL does not anticipate the possibility of binned pdf. More details : pdf : 3 slides; [Minimum_Problem_NLL.pdf](https://github.com/root-project/root/files/6383379/Minimum_Problem_NLL.pdf). A minimum reproducible example is given here :; /afs/cern.ch/work/e/escalier/public/ForOthers/ForRootExperts/ProblemNLL. (github prevents to attach a .C file : it would be useful to authorize it if we wish to keep persistent minimum examples for the future). Remark : the anomaly would not have consequence for the result of a fit. But if the bin size would be variable, maybe there would be (I don't know). Anyway, there is incompatibility of treatment of the bin size for the total of the pdf and the value of pdf in a given bin. ### Expected behavior; the expected value is given in the example : roofit does not find the mathematical correct value because it forgets to multiply by the bin size for the ""sum part"" (while it does not forget to multiply by the bin size for the ""total prediction"" part. ### To Reproduce; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. a) put : do_mistake_computation_find_official_roofit_value=1 for reproducing the result of roofit. b) put do_mistake_computation_find_official_roofit_value=0 for reproducing what I think is the correct value (different to the one of roofit). 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; root -b Minimum.C+. ### Setup; 1. ROOT version : 6.18.00; 2. Operating system : windows (session unix from mobaxterm); 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; installed by experts on the french cluster of computers (cc in2p3, France). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8005:1945,predict,prediction,1945,https://root.cern,https://github.com/root-project/root/issues/8005,1,['predict'],['prediction']
Safety," out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942; #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; ===========================================================. Root > pure virtual method called; terminate called without an active exception; Aborted (core dumped); ```. </p>; </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you replace `PATH_FOR_REPRODUCING` with a suitable folder on your system. (The build includes LLVM+Clang debug information so it requires ~20GB of space and benefits from fast storage.). 1. Start a docker container with a directory mounted from the host (to make switching between CentOS 7 and 8 easier):. ```bash; PATH_FOR_REPRODUCING=/scratch2/root-debug2; mkdir -p ""$PATH_FOR_REPRODUCING""; docker run --rm -it -v ""$PATH_FOR_REPRODUCING"":""$PATH_FOR_REPRODUCING"" -w ""$PATH_FOR_REPRODUCING"" centos:7 bash; ```. 2. Inside the CentOS 7 docker container install mamba and ROOT:. ```bash; curl -LO https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh; bash Mambaforge-Linux-x86_64.sh -b -p $PWD/mambaforge; source $PWD/mambaforge/bin/activate; mamba create --yes --prefix $PWD/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:28579,Abort,Aborted,28579,https://root.cern,https://github.com/root-project/root/issues/9595,1,['Abort'],['Aborted']
Safety," special column `rdfentry_`, despite the name, does not correspond to the global TChain entry number _in MT runs_ (see also [the relevant docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#helper-cols)). This is surprising for users (hence the big warning in the docs linked above) and makes it unnecessarily difficult to e.g. attach a numpy array as an additional column (because it's hard to index into it correctly without stable global row numbers). We could instead make `rdfentry_` always match the ""real"" (global) entry number in the dataset -- if only each MT task knew the offset of the current tree w.r.t. all other trees in the chain. ### Proposed solution . - have TTreeProcessorMT tell each MT task which tree it is processing w.r.t. to the global chain (`#1`, `#2`, `#3`, ...); - have each task calculate its tree's offset by going over a list of tree entry numbers, filling missing values as needed (the list of entry numbers would be implemented as an array of fixed size `nTrees` with atomic elements. This plus the fact that threads only need to write into the atomic elements if they see the value has not been calculated yet should minimize thread contention) . ### Other solution considered. - we could always build a global TChain, for every task, and always use global entry numbers everywhere. However this would require that TTreeProcessorMT reads out the number of entries in each tree before the tasks even start, because it first needs to come up with entry ranges for each task. My intuition is that this would bring a larger performance impact than the proposed solution: we know from DistRDF that the (redundant) opening O(1k) remote files at startup is a significant cost.; - we could do nothing: `rdfentry_` would be unstable and it could not be relied upon to e.g. index into manually added ""friend columns"" or to fill TEntryLists (like [this user would have liked to do](https://root-forum.cern.ch/t/accessing-entry-information-using-rdataframe/52378))",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12190:1661,redund,redundant,1661,https://root.cern,https://github.com/root-project/root/issues/12190,1,['redund'],['redundant']
Safety," tools, that also rely on this behavior, resulting in an infinite recursion. My concrete example is vcpkg, a popular package manager (not only for Windows), that pulls itself into a CMake project via a toolchain file to inject dependencies. Unfortunately, vcpkg needs to hook `find_package` itself to point it to the installed dependencies. ### Expected behavior. ROOT can be configured with vcpkg and other tools sensitive to overriden `find_package`. This requires ROOT to not override `find_package`. ### To Reproduce. Clone ROOT, create `build_win` folder, run:; ```; PS C:\dev\root\build_win> cmake -DCMAKE_TOOLCHAIN_FILE=D:\dev\vcpkg\scripts\buildsystems\vcpkg.cmake ..; -- Building for: Visual Studio 16 2019; -- Selecting Windows SDK version 10.0.19041.0 to target Windows 10.0.19042.; -- The C compiler identification is MSVC 19.29.30037.0; -- The CXX compiler identification is MSVC 19.29.30037.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: C:/Program Files/Git/cmd/git.exe (found version ""2.30.0.windows.2""); -- Detected ROOT_VERSION 6.25.01; -- Looking for Python; -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found version ""3.9.2""); -- Could NOT find Python2 (missing: Python2_EXECUTABLE Python2_LIBRARIES Python2_INCLUDE_DIRS Python2_NumPy_INCLUDE_DIRS Interpreter Development NumPy Development.Module Development.Embed); Reason given by package:; Interpreter: Wrong major ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633:1219,Detect,Detecting,1219,https://root.cern,https://github.com/root-project/root/issues/8633,2,['Detect'],['Detecting']
Safety," was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1722,safe,safe-path,1722,https://root.cern,https://github.com/root-project/root/pull/11882,1,['safe'],['safe-path']
Safety," when resolving symbols from OSX where the system libraries; contain multiple levels of symlinks.; * Bloom filter optimization -- it uses a stohastic data structure which gives; a definitive answer if a symbol is not in the set. The implementation checks; the .gnu.hash section in ELF which is the GNU implementation of a bloom; filter and uses it. If the symbol is not in the bloom filter, the; implementation builds its own and uses it. The measured performance of the; bloom filter is 30% speed up for 2mb more memory. The custom bloom filter on; top of the .gnu.hash filter gives 1-2% better performance.; The advantage for the custom bloom filter is that it works on all; implementations which do not support .gnu.hash (windows and osx). It is also; customizable if we want to further reduce the false positive rates; (currently at p=2%).; * Hash table optimization -- we build a hash table which contains all symbols; for a given library. This allows us to avoid the fallback symbol iteration; if multiple symbols from the same library are requested. The hash table; optimization targets to optimize the case where the bloom filter tells us; the symbol is *maybe* in the library. Patch by Alexander Penev (@alexander-penev) and me!. Performance Report; ===. |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:-----------:|:---------------|; |osx 10.14|roottest-python-pythonizations|22,82|26,89|20,08|; |osx 10.14| roottest-cling| 589,67|452,97|307,34|; |osx 10.14| roottest-python| 377,69|475,78|311,5|; |osx 10.14| roottest-root-hist| 60,59|90,98|49,65|; |osx 10.14| roottest-root-math| 106,18|140,41|73,96|; |osx 10.14| roottest-root-tree| 1287,53|1861|1149,35|; |osx 10.14| roottest-root-treeformula | 568,43|907,46|531|; |osx 10.15| root-io-stdarray| - | 126.02 | 31.42|; |osx 10.15| roottest-root-treeformula| - | 327.08 | 231.14 |. The effect of running ctest -j8:; |platform|test|PCH-time|Module-time|Module-PR-time|; |:--------|:---|:---------:|:--------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4717:1318,avoid,avoid,1318,https://root.cern,https://github.com/root-project/root/pull/4717,1,['avoid'],['avoid']
Safety," {aka ‘const double*’} to ‘Double_t (TF1::)(const Double_t*, const Double_t*)’ {aka ‘double (TF1::)(const double*, const double*)’}; /home/bgruber/root/hist/hist/src/TF2.cxx:349:13: note: ‘xx’ declared here; 349 | Double_t xx[2];; | ^~; ```. ```; /home/bgruber/root/graf2d/graf/src/TText.cxx: In member function ‘virtual void TText::Copy(TObject&) const’:; /home/bgruber/root/graf2d/graf/src/TText.cxx:117:72: warning: ‘void operator delete(void*, std::size_t)’ called on pointer ‘obj’ with nonzero offset 112 [-Wfree-nonheap-object]; 117 | delete reinterpret_cast<std::wstring*>(&((TText&)obj).fWcsTitle);; | ^; ```. ```; /home/bgruber/root/geom/geom/src/TGeoManager.cxx:521:4: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]; 521 | if (fHashVolumes) fHashVolumes->Clear(""nodelete""); SafeDelete(fHashVolumes);; | ^~; ...; /home/bgruber/root/core/foundation/inc/ROOT/RConfig.hxx:534:26: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’; 534 | # define SafeDelete(p) { if (p) { delete p; p = 0; } }; | ^; ```. Several `may be used uninitialized` warnings in `/home/bgruber/root/graf2d/asimage/src/TASImage.cxx` and `/home/bgruber/root/gui/gui/src/TGNumberEntry.cxx`. ```; In function ‘char* strncpy(char*, const char*, size_t)’,; inlined from ‘TGTextLine::TGTextLine(const char*)’ at /home/bgruber/root/gui/gui/src/TGText.cxx:74:14:; /usr/include/bits/string_fortified.h:95:34: warning: ‘char* __builtin_strncpy(char*, const char*, long unsigned int)’ output truncated before terminating nul copying as many bytes from a string as its length; -Wstringop-truncation]; 95 | return __builtin___strncpy_chk (__dest, __src, __len,; | ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~; 96 | __glibc_objsize (__dest));; | ~~~~~~~~~~~~~~~~~~~~~~~~~; /home/bgruber/root/gui/gui/src/TGText.cxx: In constructor ‘TGTextLine::TGTextLine(const char*)’:; /home/bgruber/root/gui/gui/src/TGText.cxx:72:23: note: length computed here; 72 | fLength =",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8129:4619,Safe,SafeDelete,4619,https://root.cern,https://github.com/root-project/root/issues/8129,1,['Safe'],['SafeDelete']
Safety,"# API Redesign. ## Goal. The goal is this PR is to improve the API of the CNN layers (MaxPooling and Conv currently), by eliminating redundant constructor arguments and fields. By redundant in this context, I refer to arguments that can be directly computed from others, and fields that unnecesseraly exist in multiple classes. ## Key points. Below some discussion points on design decisions I made, but still consider debatable. ; Since my experience in production level C++ is very limited I highly value opinions from experienced colleagues and previous authors of the module. ### Making `MaxPoolingLayer` a sub-class of `ConvLayer`. Every layer type in a convolutional network follows the logic existing in our `ConvLayer`:. A filter is sliding over the input and at each step applies an operation to the input elements within its receptive field to produce a single output element. * In a convolutional layer this operation is a linear combination with learnable parameters.; * In an average pooling layer the operation is a linear combination with constant parameters (and equal to the inverse of the receptive field's size).; * In a max pooling layer its a non linear operation. As we can see they all share the same logic and therefore fields. ## Results. 1. Common fields between the 2 layer types in the CNN module are now not duplicated (strides sizes, padding sizes, filter sizes). The same for the 4 `protected` methods in `ConvLayer`. 2. We now have a cleaner API, as the constructor arguments where reduced from 26 to 16 without any change in the functionality).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117:133,redund,redundant,133,https://root.cern,https://github.com/root-project/root/pull/2117,4,['redund'],['redundant']
Safety,"# Goal. This PR implements `Im2Col` in CUDA in (what I consider) an optimal way in terms of performance. I achieve that by assigning one thread per output element. This means that threads do not share their write address and therefore no synchronization is required. They do share read address which is of course thread safe. I complement the new functionality with a complete testing suite to assert correctness. # Extra tasks. The tests within the `CNN` module suffer from extensive code duplication as the `Reference` and `CPU` versions do exactly the same thing (the CUDA one's would just worsen the issue). Instead I refactored the `Im2Col` one's using templated arguments: As a result the tests are now defined only once and called independently from each architecture using templates. This approach is also followed in the `DNN` module. If time allows, I plan to refactor all tests within the `CNN` module in a similar manner.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118:320,safe,safe,320,https://root.cern,https://github.com/root-project/root/pull/2118,1,['safe'],['safe']
Safety,# This Pull request:. ## Changes or fixes:. Absence of safety in public methods resulting in nullptr access if ftraininfo was undefined by constructor. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary). Fixes https://github.com/root-project/root/issues/14569,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14859:55,safe,safety,55,https://root.cern,https://github.com/root-project/root/pull/14859,1,['safe'],['safety']
Safety,# This Pull request:. ## Changes or fixes:. Adds offsetting named argument to `RooAbsPdf::fitTo()` as requested in #11856. I have decided to use the naming convention for the named argument options that was already present in `RooAbsPdf::CreateNLL()` to avoid confusion and for the potential case that the other named argument options in the latter will also be added to `RooAbsPdf::fitTo()`. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12001:254,avoid,avoid,254,https://root.cern,https://github.com/root-project/root/pull/12001,1,['avoid'],['avoid']
Safety,"# This Pull request:. ## Changes or fixes:. Avoids the crash reported in https://its.cern.ch/jira/browse/ROOT-10795. It does not solve the underlying cause, which is that TFormLeafInfo line 219 is called, that returns type = 64. Then:; switch (type) reaches the default and returns a null:. ![image](https://github.com/root-project/root/assets/10653970/60f61a1b-613f-4b38-98c0-6336ed27a2dc). ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15335:44,Avoid,Avoids,44,https://root.cern,https://github.com/root-project/root/pull/15335,1,['Avoid'],['Avoids']
Safety,# This Pull request:. ## Changes or fixes:. Change avoids extra memory allocation in TDecompChol::TDecompChol. I have copied what is done in other TDecomp* classes.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15284:51,avoid,avoids,51,https://root.cern,https://github.com/root-project/root/pull/15284,1,['avoid'],['avoids']
Safety,# This Pull request:. ## Changes or fixes:. Clarifies covariance matrix format. Adds safety-bounds-checking. See https://root-forum.cern.ch/t/tprincipal-fails-for-a-very-large-number-of-entries/58795. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15110:85,safe,safety-bounds-checking,85,https://root.cern,https://github.com/root-project/root/pull/15110,1,['safe'],['safety-bounds-checking']
