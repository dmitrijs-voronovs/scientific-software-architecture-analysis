quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Energy Efficiency,"﻿. ENSURE_BT_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; ENSURE_BT_CONVERGENCE. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; ENSURE_BT_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__ensure_bt_convergence.html:184,Reduce,Reduce,184,psi4manual/1.9.x/autodir_options_c/optking__ensure_bt_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__ensure_bt_convergence.html,1,['Reduce'],['Reduce']
Energy Efficiency,"﻿. ERD. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. ERD¶. Input File; Description. erd/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using ERD integrals. erd/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using ERD integrals. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodoc_testsuite_erd-1.html:330,energy,energy,330,psi4manual/1.1.0/autodoc_testsuite_erd-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodoc_testsuite_erd-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ERD. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. ERD¶. Input File; Description. erd/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using ERD integrals. erd/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using ERD integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_erd-1.html:332,energy,energy,332,psi4manual/1.2.1/autodoc_testsuite_erd-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_erd-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ERD. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. ERD¶. Input File; Description. erd/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using ERD integrals. erd/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using ERD integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_erd-1.html:332,energy,energy,332,psi4manual/1.3.2/autodoc_testsuite_erd-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_erd-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ERD. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; ERD. ERD¶. Input File; Description. erd/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using ERD integrals. erd/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using ERD integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; ERD. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_erd-1.html:183,energy,energy,183,psi4manual/1.4.0/autodoc_testsuite_erd-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_erd-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ERD. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; ERD. ERD¶. Input File; Description. erd/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using ERD integrals. erd/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using ERD integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; ERD. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_erd-1.html:335,energy,energy,335,psi4manual/1.5.0/autodoc_testsuite_erd-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_erd-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ERD. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; ERD. ERD¶. Input File; Description. erd/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using ERD integrals. erd/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using ERD integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; ERD. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_erd.html:183,energy,energy,183,psi4manual/1.6.x/autodoc_testsuite_erd.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_erd.html,1,['energy'],['energy']
Energy Efficiency,"﻿. ERD. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; ERD. ERD¶. Input File; Description. erd/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using ERD integrals. erd/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using ERD integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; ERD. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_erd.html:335,energy,energy,335,psi4manual/1.7.x/autodoc_testsuite_erd.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_erd.html,1,['energy'],['energy']
Energy Efficiency,"﻿. ERD. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; ERD. ERD¶. Input File; Description. erd/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using ERD integrals. erd/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using ERD integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; ERD. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_erd.html:337,energy,energy,337,psi4manual/1.8.x/autodoc_testsuite_erd.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_erd.html,1,['energy'],['energy']
Energy Efficiency,"﻿. ERD. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; ERD. ERD¶. Input File; Description. erd/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using ERD integrals. erd/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using ERD integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; ERD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_erd.html:185,energy,energy,185,psi4manual/1.9.x/autodoc_testsuite_erd.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_erd.html,1,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; CCEOM ». E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. Type: conv double; Default: 1e-8. Previous topic; COMPLEX_TOLERANCE; Next topic; EOM_GUESS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; CCEOM ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/cceom__e_convergence-1.html:212,energy,energy,212,psi4manual/4.0b2/autodir_options_c/cceom__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/cceom__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. Previous topic; DIPMOM; Next topic; EX_ALLOW; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__e_convergence-1.html:201,energy,energy,201,psi4manual/4.0b2/autodir_options_c/detci__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; LMP2 ». E_CONVERGENCE¶. Convergence criterion for energy (change). Type: conv double; Default: 1e-7. Previous topic; DOMAIN_PRINT_EXIT; Next topic; FOCK_TOLERANCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; LMP2 ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/lmp2__e_convergence-1.html:200,energy,energy,200,psi4manual/4.0b2/autodir_options_c/lmp2__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/lmp2__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MCSCF ». E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-8. Previous topic; DOCC; Next topic; FAVG; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MCSCF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mcscf__e_convergence-1.html:201,energy,energy,201,psi4manual/4.0b2/autodir_options_c/mcscf__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mcscf__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; PSIMRCC ». E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-9. Previous topic; DIIS_START; Next topic; FAVG_CCSD_T; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/psimrcc__e_convergence-1.html:203,energy,energy,203,psi4manual/4.0b2/autodir_options_c/psimrcc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/psimrcc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; SAPT ». E_CONVERGENCE¶. Convergence criterion for energy (change) in the SAPT term during solution of the CPHF equations. Type: conv double; Default: 1e-10. Previous topic; DO_THIRD_ORDER; Next topic; FREEZE_CORE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/sapt__e_convergence-1.html:200,energy,energy,200,psi4manual/4.0b2/autodir_options_c/sapt__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/sapt__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; SCF ». E_CONVERGENCE¶. Convergence criterion for SCF energy. Type: conv double; Default: 1e-8. Previous topic; DISTRIBUTED_MATRIX; Next topic; EXTERN; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/scf__e_convergence-1.html:203,energy,energy,203,psi4manual/4.0b2/autodir_options_c/scf__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/scf__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCEOM ». E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. Type: conv double; Default: 1e-8. Previous topic; COMPLEX_TOLERANCE; Next topic; EOM_GUESS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCEOM ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/cceom__e_convergence-1.html:227,energy,energy,227,psi4manual/4.0b3/autodir_options_c/cceom__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/cceom__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. Previous topic; DIPMOM; Next topic; EX_ALLOW; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__e_convergence-1.html:216,energy,energy,216,psi4manual/4.0b3/autodir_options_c/detci__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; LMP2 ». E_CONVERGENCE¶. Convergence criterion for energy (change). Type: conv double; Default: 1e-7. Previous topic; DOMAIN_PRINT_EXIT; Next topic; FOCK_TOLERANCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; LMP2 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/lmp2__e_convergence-1.html:215,energy,energy,215,psi4manual/4.0b3/autodir_options_c/lmp2__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/lmp2__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MCSCF ». E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-8. Previous topic; DOCC; Next topic; FAVG; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MCSCF ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mcscf__e_convergence-1.html:216,energy,energy,216,psi4manual/4.0b3/autodir_options_c/mcscf__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mcscf__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP2 ». E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-8. Previous topic; DO_SOS; Next topic; HESS_TYPE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP2 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp2__e_convergence-1.html:215,energy,energy,215,psi4manual/4.0b3/autodir_options_c/omp2__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp2__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-8. Previous topic; E3_SCALE; Next topic; HESS_TYPE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__e_convergence-1.html:215,energy,energy,215,psi4manual/4.0b3/autodir_options_c/omp3__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; PSIMRCC ». E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-9. Previous topic; DIIS_START; Next topic; FAVG_CCSD_T; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/psimrcc__e_convergence-1.html:218,energy,energy,218,psi4manual/4.0b3/autodir_options_c/psimrcc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/psimrcc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SAPT ». E_CONVERGENCE¶. Convergence criterion for energy (change) in the SAPT term during solution of the CPHF equations. Type: conv double; Default: 1e-10. Previous topic; DO_THIRD_ORDER; Next topic; FREEZE_CORE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/sapt__e_convergence-1.html:215,energy,energy,215,psi4manual/4.0b3/autodir_options_c/sapt__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/sapt__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SCF ». E_CONVERGENCE¶. Convergence criterion for SCF energy. See Table SCF Convergence & Algorithm for default convergence criteria for different calculation types. Type: conv double; Default: 1e-8. Previous topic; DISTRIBUTED_MATRIX; Next topic; EXTERN; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/scf__e_convergence-1.html:218,energy,energy,218,psi4manual/4.0b3/autodir_options_c/scf__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/scf__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCENERGY ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-8. Previous topic; DIIS; Next topic; FORCE_RESTART; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/ccenergy__e_convergence-1.html:219,energy,energy,219,psi4manual/4.0b4/autodir_options_c/ccenergy__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/ccenergy__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCEOM ». E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-8. Previous topic; COMPLEX_TOLERANCE; Next topic; EOM_GUESS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCEOM ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/cceom__e_convergence-1.html:227,energy,energy,227,psi4manual/4.0b4/autodir_options_c/cceom__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/cceom__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-8. Previous topic; DIPMOM; Next topic; EX_ALLOW; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__e_convergence-1.html:216,energy,energy,216,psi4manual/4.0b4/autodir_options_c/detci__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; FNOCC ». E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-8. Previous topic; DIPMOM; Next topic; MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; FNOCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/fnocc__e_convergence-1.html:219,energy,energy,219,psi4manual/4.0b4/autodir_options_c/fnocc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/fnocc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; LMP2 ». E_CONVERGENCE¶. Convergence criterion for energy (change). See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-8. Previous topic; DOMAIN_PRINT_EXIT; Next topic; FOCK_TOLERANCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; LMP2 ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/lmp2__e_convergence-1.html:215,energy,energy,215,psi4manual/4.0b4/autodir_options_c/lmp2__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/lmp2__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; MCSCF ». E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-8. Previous topic; DOCC; Next topic; FAVG; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; MCSCF ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/mcscf__e_convergence-1.html:216,energy,energy,216,psi4manual/4.0b4/autodir_options_c/mcscf__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/mcscf__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; MRCC ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-8. Previous topic; MRCC; Next topic; INTS_TOLERANCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/mrcc__e_convergence-1.html:215,energy,energy,215,psi4manual/4.0b4/autodir_options_c/mrcc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/mrcc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OCC ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-8. Previous topic; E3_SCALE; Next topic; EA_POLES; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/occ__e_convergence-1.html:214,energy,energy,214,psi4manual/4.0b4/autodir_options_c/occ__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/occ__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; PSIMRCC ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-8. Previous topic; DIIS_START; Next topic; FAVG_CCSD_T; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/psimrcc__e_convergence-1.html:218,energy,energy,218,psi4manual/4.0b4/autodir_options_c/psimrcc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/psimrcc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SAPT ». E_CONVERGENCE¶. Convergence criterion for energy (change) in the SAPT term during solution of the CPHF equations. Type: conv double; Default: 1e-10. Previous topic; DO_THIRD_ORDER; Next topic; FREEZE_CORE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/sapt__e_convergence-1.html:215,energy,energy,215,psi4manual/4.0b4/autodir_options_c/sapt__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/sapt__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SCF ». E_CONVERGENCE¶. Convergence criterion for SCF energy. See Table SCF Convergence & Algorithm for default convergence criteria for different calculation types. Type: conv double; Default: 1e-8. Previous topic; DISTRIBUTED_MATRIX; Next topic; EXTERN; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/scf__e_convergence-1.html:218,energy,energy,218,psi4manual/4.0b4/autodir_options_c/scf__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/scf__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCENERGY ». E_CONVERGENCE¶. Convergence criterion for energy (change). See Table// Post-SCF Convergence for default convergence// criteria for different calculation types. Type: conv double; Default: 1e-6. Previous topic; DOMAINS; Next topic; FOCK_TOLERANCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/ccenergy__e_convergence-1.html:219,energy,energy,219,psi4manual/4.0b5/autodir_options_c/ccenergy__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/ccenergy__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCEOM ». E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. Previous topic; COMPLEX_TOLERANCE; Next topic; EOM_GUESS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCEOM ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/cceom__e_convergence-1.html:227,energy,energy,227,psi4manual/4.0b5/autodir_options_c/cceom__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/cceom__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. Previous topic; DIPMOM; Next topic; EX_ALLOW; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__e_convergence-1.html:216,energy,energy,216,psi4manual/4.0b5/autodir_options_c/detci__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; FNOCC ». E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. Previous topic; DIPMOM; Next topic; MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; FNOCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/fnocc__e_convergence-1.html:219,energy,energy,219,psi4manual/4.0b5/autodir_options_c/fnocc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/fnocc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; MCSCF ». E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. Previous topic; DOCC; Next topic; FAVG; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; MCSCF ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/mcscf__e_convergence-1.html:216,energy,energy,216,psi4manual/4.0b5/autodir_options_c/mcscf__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/mcscf__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; MRCC ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. Previous topic; MRCC; Next topic; INTS_TOLERANCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/mrcc__e_convergence-1.html:215,energy,energy,215,psi4manual/4.0b5/autodir_options_c/mrcc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/mrcc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OCC ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. Previous topic; E3_SCALE; Next topic; EA_POLES; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/occ__e_convergence-1.html:214,energy,energy,214,psi4manual/4.0b5/autodir_options_c/occ__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/occ__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; PSIMRCC ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. Previous topic; DIIS_START; Next topic; FAVG_CCSD_T; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/psimrcc__e_convergence-1.html:218,energy,energy,218,psi4manual/4.0b5/autodir_options_c/psimrcc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/psimrcc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SAPT ». E_CONVERGENCE¶. Convergence criterion for energy (change) in the SAPT term during solution of the CPHF equations. Type: conv double; Default: 1e-10. Previous topic; DO_THIRD_ORDER; Next topic; FREEZE_CORE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/sapt__e_convergence-1.html:215,energy,energy,215,psi4manual/4.0b5/autodir_options_c/sapt__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/sapt__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SCF ». E_CONVERGENCE¶. Convergence criterion for SCF energy. See Table SCF Convergence & Algorithm for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. Previous topic; DISTRIBUTED_MATRIX; Next topic; EXTERN; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/scf__e_convergence-1.html:218,energy,energy,218,psi4manual/4.0b5/autodir_options_c/scf__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/scf__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCENERGY ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. Previous topic; DIIS; Next topic; FORCE_RESTART. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/ccenergy__e_convergence-1.html:226,energy,energy,226,psi4manual/1.0.0/autodir_options_c/ccenergy__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/ccenergy__e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCEOM ». E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. Previous topic; COMPLEX_TOLERANCE; Next topic; EOM_GUESS. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCEOM ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cceom__e_convergence-1.html:234,energy,energy,234,psi4manual/1.0.0/autodir_options_c/cceom__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cceom__e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-10. Previous topic; DIIS_START_CONVERGENCE; Next topic; ENERGY_LEVEL_SHIFT. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__e_convergence-1.html:222,energy,energy,222,psi4manual/1.0.0/autodir_options_c/dcft__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. Previous topic; DIPMOM; Next topic; EX_ALLOW. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__e_convergence-1.html:223,energy,energy,223,psi4manual/1.0.0/autodir_options_c/detci__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. Previous topic; E3_SCALE; Next topic; EKT_IP. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DFOCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__e_convergence-1.html:223,energy,energy,223,psi4manual/1.0.0/autodir_options_c/dfocc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dfocc__e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; FNOCC ». E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. Previous topic; DIPMOM; Next topic; MAXITER. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; FNOCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/fnocc__e_convergence-1.html:226,energy,energy,226,psi4manual/1.0.0/autodir_options_c/fnocc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/fnocc__e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; MCSCF ». E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. Previous topic; DOCC; Next topic; FAVG. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; MCSCF ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/mcscf__e_convergence-1.html:223,energy,energy,223,psi4manual/1.0.0/autodir_options_c/mcscf__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/mcscf__e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; MRCC ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. Previous topic; MRCC; Next topic; INTS_TOLERANCE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/mrcc__e_convergence-1.html:222,energy,energy,222,psi4manual/1.0.0/autodir_options_c/mrcc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/mrcc__e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OCC ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. Previous topic; E3_SCALE; Next topic; EA_POLES. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/occ__e_convergence-1.html:221,energy,energy,221,psi4manual/1.0.0/autodir_options_c/occ__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/occ__e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; PSIMRCC ». E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. Previous topic; DIIS_START; Next topic; FAVG_CCSD_T. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; PSIMRCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/psimrcc__e_convergence-1.html:225,energy,energy,225,psi4manual/1.0.0/autodir_options_c/psimrcc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/psimrcc__e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SAPT ». E_CONVERGENCE¶. Convergence criterion for energy (change) in the SAPT term during solution of the CPHF equations. Type: conv double; Default: 1e-10. Previous topic; DO_THIRD_ORDER; Next topic; EXCH_SCALE_ALPHA. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/sapt__e_convergence-1.html:222,energy,energy,222,psi4manual/1.0.0/autodir_options_c/sapt__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/sapt__e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». E_CONVERGENCE¶. Convergence criterion for SCF energy. See Table SCF Convergence & Algorithm for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. Previous topic; DISTRIBUTED_MATRIX; Next topic; EXTERN. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__e_convergence-1.html:225,energy,energy,225,psi4manual/1.0.0/autodir_options_c/scf__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCENERGY; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCENERGY; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/ccenergy__e_convergence.html:194,energy,energy,194,psi4manual/master/autodir_options_c/ccenergy__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/ccenergy__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCEOM; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCEOM; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cceom__e_convergence.html:202,energy,energy,202,psi4manual/master/autodir_options_c/cceom__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cceom__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DCT; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-10. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DCT; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dct__e_convergence.html:189,energy,energy,189,psi4manual/master/autodir_options_c/dct__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dct__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/detci__e_convergence.html:191,energy,energy,191,psi4manual/master/autodir_options_c/detci__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/detci__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DFOCC; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__e_convergence.html:191,energy,energy,191,psi4manual/master/autodir_options_c/dfocc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dfocc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DLPNO; E_CONVERGENCE. E_CONVERGENCE¶. Energy convergence criteria for local MP2 iterations. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DLPNO; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dlpno__e_convergence.html:165,Energy,Energy,165,psi4manual/master/autodir_options_c/dlpno__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dlpno__e_convergence.html,1,['Energy'],['Energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FNOCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FNOCC; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/fnocc__e_convergence.html:194,energy,energy,194,psi4manual/master/autodir_options_c/fnocc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/fnocc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; MCSCF; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; MCSCF; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/mcscf__e_convergence.html:191,energy,energy,191,psi4manual/master/autodir_options_c/mcscf__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/mcscf__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; MRCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; MRCC; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/mrcc__e_convergence.html:190,energy,energy,190,psi4manual/master/autodir_options_c/mrcc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/mrcc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OCC; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/occ__e_convergence.html:189,energy,energy,189,psi4manual/master/autodir_options_c/occ__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/occ__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/psimrcc__e_convergence.html:193,energy,energy,193,psi4manual/master/autodir_options_c/psimrcc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/psimrcc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for SCF energy. See Table SCF Convergence & Algorithm for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/scf__e_convergence.html:193,energy,energy,193,psi4manual/master/autodir_options_c/scf__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/scf__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCENERGY; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCENERGY; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/ccenergy__e_convergence-1.html:185,energy,energy,185,psi4manual/1.4.0/autodir_options_c/ccenergy__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/ccenergy__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCEOM; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCEOM; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cceom__e_convergence-1.html:193,energy,energy,193,psi4manual/1.4.0/autodir_options_c/cceom__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cceom__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DCT; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-10. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DCT; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dct__e_convergence-1.html:180,energy,energy,180,psi4manual/1.4.0/autodir_options_c/dct__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dct__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__e_convergence-1.html:182,energy,energy,182,psi4manual/1.4.0/autodir_options_c/detci__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DFOCC; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__e_convergence-1.html:182,energy,energy,182,psi4manual/1.4.0/autodir_options_c/dfocc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dfocc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FNOCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FNOCC; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/fnocc__e_convergence-1.html:185,energy,energy,185,psi4manual/1.4.0/autodir_options_c/fnocc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/fnocc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; MCSCF; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; MCSCF; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/mcscf__e_convergence-1.html:182,energy,energy,182,psi4manual/1.4.0/autodir_options_c/mcscf__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/mcscf__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; MRCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; MRCC; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/mrcc__e_convergence-1.html:181,energy,energy,181,psi4manual/1.4.0/autodir_options_c/mrcc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/mrcc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OCC; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/occ__e_convergence-1.html:180,energy,energy,180,psi4manual/1.4.0/autodir_options_c/occ__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/occ__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/psimrcc__e_convergence-1.html:184,energy,energy,184,psi4manual/1.4.0/autodir_options_c/psimrcc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/psimrcc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SAPT; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy (change) in the SAPT \(E_{ind,resp}^{(20)}\) term during solution of the CPHF equations. Type: conv double; Default: 1e-10. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SAPT; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/sapt__e_convergence-1.html:181,energy,energy,181,psi4manual/1.4.0/autodir_options_c/sapt__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/sapt__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for SCF energy. See Table SCF Convergence & Algorithm for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__e_convergence-1.html:184,energy,energy,184,psi4manual/1.4.0/autodir_options_c/scf__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCENERGY; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCENERGY; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/ccenergy__e_convergence-1.html:185,energy,energy,185,psi4manual/1.5.0/autodir_options_c/ccenergy__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/ccenergy__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCEOM; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCEOM; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cceom__e_convergence-1.html:193,energy,energy,193,psi4manual/1.5.0/autodir_options_c/cceom__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cceom__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DCT; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-10. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DCT; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dct__e_convergence-1.html:180,energy,energy,180,psi4manual/1.5.0/autodir_options_c/dct__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dct__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__e_convergence-1.html:182,energy,energy,182,psi4manual/1.5.0/autodir_options_c/detci__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DFOCC; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__e_convergence-1.html:182,energy,energy,182,psi4manual/1.5.0/autodir_options_c/dfocc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dfocc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DLPNO; E_CONVERGENCE. E_CONVERGENCE¶. Energy convergence criteria for local MP2 iterations. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DLPNO; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dlpno__e_convergence-1.html:156,Energy,Energy,156,psi4manual/1.5.0/autodir_options_c/dlpno__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dlpno__e_convergence-1.html,2,['Energy'],['Energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FNOCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FNOCC; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/fnocc__e_convergence-1.html:185,energy,energy,185,psi4manual/1.5.0/autodir_options_c/fnocc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/fnocc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; MCSCF; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; MCSCF; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/mcscf__e_convergence-1.html:182,energy,energy,182,psi4manual/1.5.0/autodir_options_c/mcscf__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/mcscf__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; MRCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; MRCC; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/mrcc__e_convergence-1.html:181,energy,energy,181,psi4manual/1.5.0/autodir_options_c/mrcc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/mrcc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OCC; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/occ__e_convergence-1.html:180,energy,energy,180,psi4manual/1.5.0/autodir_options_c/occ__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/occ__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/psimrcc__e_convergence-1.html:184,energy,energy,184,psi4manual/1.5.0/autodir_options_c/psimrcc__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/psimrcc__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SAPT; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy (change) in the SAPT \(E_{ind,resp}^{(20)}\) term during solution of the CPHF equations. Type: conv double; Default: 1e-10. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SAPT; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/sapt__e_convergence-1.html:181,energy,energy,181,psi4manual/1.5.0/autodir_options_c/sapt__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/sapt__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for SCF energy. See Table SCF Convergence & Algorithm for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__e_convergence-1.html:184,energy,energy,184,psi4manual/1.5.0/autodir_options_c/scf__e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCENERGY; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCENERGY; E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/ccenergy__e_convergence.html:185,energy,energy,185,psi4manual/1.6.x/autodir_options_c/ccenergy__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/ccenergy__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCEOM; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCEOM; E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cceom__e_convergence.html:193,energy,energy,193,psi4manual/1.6.x/autodir_options_c/cceom__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cceom__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DCT; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-10. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DCT; E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dct__e_convergence.html:180,energy,energy,180,psi4manual/1.6.x/autodir_options_c/dct__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dct__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__e_convergence.html:182,energy,energy,182,psi4manual/1.6.x/autodir_options_c/detci__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DFOCC; E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__e_convergence.html:182,energy,energy,182,psi4manual/1.6.x/autodir_options_c/dfocc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dfocc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DLPNO; E_CONVERGENCE. E_CONVERGENCE¶. Energy convergence criteria for local MP2 iterations. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DLPNO; E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dlpno__e_convergence.html:156,Energy,Energy,156,psi4manual/1.6.x/autodir_options_c/dlpno__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dlpno__e_convergence.html,1,['Energy'],['Energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FNOCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FNOCC; E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/fnocc__e_convergence.html:185,energy,energy,185,psi4manual/1.6.x/autodir_options_c/fnocc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/fnocc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; MCSCF; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; MCSCF; E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/mcscf__e_convergence.html:182,energy,energy,182,psi4manual/1.6.x/autodir_options_c/mcscf__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/mcscf__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; MRCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; MRCC; E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/mrcc__e_convergence.html:181,energy,energy,181,psi4manual/1.6.x/autodir_options_c/mrcc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/mrcc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OCC; E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/occ__e_convergence.html:180,energy,energy,180,psi4manual/1.6.x/autodir_options_c/occ__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/occ__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/psimrcc__e_convergence.html:184,energy,energy,184,psi4manual/1.6.x/autodir_options_c/psimrcc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/psimrcc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SAPT; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy (change) in the SAPT \(E_{ind,resp}^{(20)}\) term during solution of the CPHF equations. Type: conv double; Default: 1e-10. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SAPT; E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/sapt__e_convergence.html:181,energy,energy,181,psi4manual/1.6.x/autodir_options_c/sapt__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/sapt__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for SCF energy. See Table SCF Convergence & Algorithm for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__e_convergence.html:184,energy,energy,184,psi4manual/1.6.x/autodir_options_c/scf__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCENERGY; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCENERGY; E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/ccenergy__e_convergence.html:185,energy,energy,185,psi4manual/1.7.x/autodir_options_c/ccenergy__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/ccenergy__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCEOM; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCEOM; E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cceom__e_convergence.html:193,energy,energy,193,psi4manual/1.7.x/autodir_options_c/cceom__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cceom__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DCT; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-10. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DCT; E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dct__e_convergence.html:180,energy,energy,180,psi4manual/1.7.x/autodir_options_c/dct__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dct__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__e_convergence.html:182,energy,energy,182,psi4manual/1.7.x/autodir_options_c/detci__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DFOCC; E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__e_convergence.html:182,energy,energy,182,psi4manual/1.7.x/autodir_options_c/dfocc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dfocc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DLPNO; E_CONVERGENCE. E_CONVERGENCE¶. Energy convergence criteria for local MP2 iterations. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DLPNO; E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dlpno__e_convergence.html:156,Energy,Energy,156,psi4manual/1.7.x/autodir_options_c/dlpno__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dlpno__e_convergence.html,1,['Energy'],['Energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FNOCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FNOCC; E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/fnocc__e_convergence.html:185,energy,energy,185,psi4manual/1.7.x/autodir_options_c/fnocc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/fnocc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; MCSCF; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; MCSCF; E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/mcscf__e_convergence.html:182,energy,energy,182,psi4manual/1.7.x/autodir_options_c/mcscf__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/mcscf__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; MRCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; MRCC; E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/mrcc__e_convergence.html:181,energy,energy,181,psi4manual/1.7.x/autodir_options_c/mrcc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/mrcc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OCC; E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/occ__e_convergence.html:180,energy,energy,180,psi4manual/1.7.x/autodir_options_c/occ__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/occ__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/psimrcc__e_convergence.html:184,energy,energy,184,psi4manual/1.7.x/autodir_options_c/psimrcc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/psimrcc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SAPT; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy (change) in the SAPT \(E_{ind,resp}^{(20)}\) term during solution of the CPHF equations. Type: conv double; Default: 1e-10. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SAPT; E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/sapt__e_convergence.html:181,energy,energy,181,psi4manual/1.7.x/autodir_options_c/sapt__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/sapt__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for SCF energy. See Table SCF Convergence & Algorithm for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__e_convergence.html:184,energy,energy,184,psi4manual/1.7.x/autodir_options_c/scf__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCENERGY; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCENERGY; E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/ccenergy__e_convergence.html:187,energy,energy,187,psi4manual/1.8.x/autodir_options_c/ccenergy__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/ccenergy__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCEOM; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCEOM; E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cceom__e_convergence.html:195,energy,energy,195,psi4manual/1.8.x/autodir_options_c/cceom__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cceom__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DCT; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-10. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DCT; E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dct__e_convergence.html:182,energy,energy,182,psi4manual/1.8.x/autodir_options_c/dct__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dct__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__e_convergence.html:184,energy,energy,184,psi4manual/1.8.x/autodir_options_c/detci__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DFOCC; E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__e_convergence.html:184,energy,energy,184,psi4manual/1.8.x/autodir_options_c/dfocc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dfocc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DLPNO; E_CONVERGENCE. E_CONVERGENCE¶. Energy convergence criteria for local MP2 iterations. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DLPNO; E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dlpno__e_convergence.html:158,Energy,Energy,158,psi4manual/1.8.x/autodir_options_c/dlpno__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dlpno__e_convergence.html,1,['Energy'],['Energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FNOCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FNOCC; E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/fnocc__e_convergence.html:187,energy,energy,187,psi4manual/1.8.x/autodir_options_c/fnocc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/fnocc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; MCSCF; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; MCSCF; E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/mcscf__e_convergence.html:184,energy,energy,184,psi4manual/1.8.x/autodir_options_c/mcscf__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/mcscf__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; MRCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; MRCC; E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/mrcc__e_convergence.html:183,energy,energy,183,psi4manual/1.8.x/autodir_options_c/mrcc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/mrcc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OCC; E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/occ__e_convergence.html:182,energy,energy,182,psi4manual/1.8.x/autodir_options_c/occ__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/occ__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/psimrcc__e_convergence.html:186,energy,energy,186,psi4manual/1.8.x/autodir_options_c/psimrcc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/psimrcc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SAPT; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy (change) in the SAPT \(E_{ind,resp}^{(20)}\) term during solution of the CPHF equations. Type: conv double; Default: 1e-10. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SAPT; E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/sapt__e_convergence.html:183,energy,energy,183,psi4manual/1.8.x/autodir_options_c/sapt__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/sapt__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for SCF energy. See Table SCF Convergence & Algorithm for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__e_convergence.html:186,energy,energy,186,psi4manual/1.8.x/autodir_options_c/scf__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCENERGY; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCENERGY; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/ccenergy__e_convergence.html:187,energy,energy,187,psi4manual/1.9.x/autodir_options_c/ccenergy__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/ccenergy__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCEOM; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for CC-EOM. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCEOM; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cceom__e_convergence.html:195,energy,energy,195,psi4manual/1.9.x/autodir_options_c/cceom__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cceom__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DCT; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-10. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DCT; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dct__e_convergence.html:182,energy,energy,182,psi4manual/1.9.x/autodir_options_c/dct__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dct__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__e_convergence.html:184,energy,energy,184,psi4manual/1.9.x/autodir_options_c/detci__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DFOCC; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__e_convergence.html:184,energy,energy,184,psi4manual/1.9.x/autodir_options_c/dfocc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dfocc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DLPNO; E_CONVERGENCE. E_CONVERGENCE¶. Energy convergence criteria for local MP2 iterations. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DLPNO; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dlpno__e_convergence.html:158,Energy,Energy,158,psi4manual/1.9.x/autodir_options_c/dlpno__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dlpno__e_convergence.html,1,['Energy'],['Energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FNOCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for CC energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Note that convergence is met only when E_CONVERGENCE and R_CONVERGENCE are satisfied. Type: conv double; Default: 1.0e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FNOCC; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/fnocc__e_convergence.html:187,energy,energy,187,psi4manual/1.9.x/autodir_options_c/fnocc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/fnocc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; MCSCF; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; MCSCF; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/mcscf__e_convergence.html:184,energy,energy,184,psi4manual/1.9.x/autodir_options_c/mcscf__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/mcscf__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; MRCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; MRCC; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/mrcc__e_convergence.html:183,energy,energy,183,psi4manual/1.9.x/autodir_options_c/mrcc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/mrcc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OCC; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/occ__e_convergence.html:182,energy,energy,182,psi4manual/1.9.x/autodir_options_c/occ__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/occ__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PSIMRCC; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/psimrcc__e_convergence.html:186,energy,energy,186,psi4manual/1.9.x/autodir_options_c/psimrcc__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/psimrcc__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SAPT; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for energy (change) in the SAPT \(E_{ind,resp}^{(20)}\) term during solution of the CPHF equations. Type: conv double; Default: 1e-10. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SAPT; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/sapt__e_convergence.html:183,energy,energy,183,psi4manual/1.9.x/autodir_options_c/sapt__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/sapt__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; E_CONVERGENCE. E_CONVERGENCE¶. Convergence criterion for SCF energy. See Table SCF Convergence & Algorithm for default convergence criteria for different calculation types. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__e_convergence.html:186,energy,energy,186,psi4manual/1.9.x/autodir_options_c/scf__e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Energy — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». Energy¶. energy(name[, bypass_scf, molecule])[source]¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; Hartree–Fock (HF) or density functional theory (DFT). mp2; 2nd-order Moller-Plesset perturbation theory (MP2). df-mp2; MP2 with density fitting. dcft; density cumulant functional theory. mcscf; multiconfigurational self consistent field (SCF). sapt0; 0th-order symmetry adapted perturbation theory (SAPT). sapt2; 2nd-order SAPT, traditional definition. sapt2+; SAPT including all 2nd-order terms. sapt2+(3); SAPT including perturbative triples. sapt2+3;  . sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation. sapt2-ct; SAPT2 plus CT. sapt2+-ct; SAPT2+ plus CT. sapt2+(3)-ct; SAPT2+(3) plus CT. sapt2+3-ct; SAPT2+3 plus CT. cc2; approximate coupled cluster singles and doubles (CC2). ccsd; coupled cluster singles and doubles (CCSD). bccd; Brueckner coupled cluster doubles (BCCD). cc3; approximate coupled cluster singles, doubles, and triples (CC3). ccsd(t); CCSD with perturbative triples. bccd(t); BCCD with perturbative triples. ccenergy; expert full control over ccenergy module. mpn; nth-order Moller–Plesset perturbation theory. zaptn; nth-order z-averaged perturbation theory (ZAPT). cisd; configuration interaction (CI) singles and doubles (CISD). cisdt; CI singles, doubles, and triples (CISDT). cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ). cin; nth-order CI. fci; full configuration interaction (FCI). detci; expert full control over detci module. adc; 2nd-order algebraic diagrammatic construction (ADC). eom-cc2; EOM-CC2. eom-ccsd; equation of motion (EOM) CCSD. eom-cc3; EOM-CC3. name; calls meth",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/energy-1.html:161,energy,energy,161,psi4manual/4.0b2/energy-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/energy-1.html,12,"['adapt', 'charge', 'energy']","['adapted', 'charge', 'energy']"
Energy Efficiency,"﻿. Energy — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». Energy¶. energy(name[, bypass_scf, molecule])[source]¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; Hartree–Fock (HF) or density functional theory (DFT). mp2; 2nd-order Moller-Plesset perturbation theory (MP2). df-mp2; MP2 with density fitting. conv-mp2; conventional MP2 (non-density-fitting). dcft; density cumulant functional theory. mcscf; multiconfigurational self consistent field (SCF). sapt0; 0th-order symmetry adapted perturbation theory (SAPT). sapt2; 2nd-order SAPT, traditional definition. sapt2+; SAPT including all 2nd-order terms. sapt2+(3); SAPT including perturbative triples. sapt2+3;  . sapt0-ct; 0th-order SAPT plus charge transfer (CT) calculation. sapt2-ct; SAPT2 plus CT. sapt2+-ct; SAPT2+ plus CT. sapt2+(3)-ct; SAPT2+(3) plus CT. sapt2+3-ct; SAPT2+3 plus CT. cc2; approximate coupled cluster singles and doubles (CC2). ccsd; coupled cluster singles and doubles (CCSD). bccd; Brueckner coupled cluster doubles (BCCD). cc3; approximate coupled cluster singles, doubles, and triples (CC3). ccsd(t); CCSD with perturbative triples. bccd(t); BCCD with perturbative triples. ccenergy; expert full control over ccenergy module. mpn; nth-order Moller–Plesset perturbation theory. zaptn; nth-order z-averaged perturbation theory (ZAPT). cisd; configuration interaction (CI) singles and doubles (CISD). cisdt; CI singles, doubles, and triples (CISDT). cisdtq; CI singles, doubles, triples, and quadruples (CISDTQ). cin; nth-order CI. fci; full configuration interaction (FCI). detci; expert full control over detci module. adc; 2nd-order algebraic diagrammatic construction (ADC). eom-cc2; EOM-CC2. eom-ccsd; ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/energy-1.html:176,energy,energy,176,psi4manual/4.0b3/energy-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/energy-1.html,10,"['adapt', 'energy']","['adapted', 'energy']"
Energy Efficiency,"﻿. Energy — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoking a Calculation ». Energy¶. energy(name[, bypass_scf, molecule])[source]¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order Moller–Plesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/energy-1.html:176,energy,energy,176,psi4manual/4.0b4/energy-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/energy-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. Energy — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Psithon Functions: Invoking a Calculation ». Energy¶. energy(name[, bypass_scf, molecule])[source]¶; Function to compute the single-point electronic energy. Returns:(float) Total electronic energy in Hartrees. SAPT returns interaction energy. Psi variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. name; calls method. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mcscf; multiconfigurational self consistent field (SCF). mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual]. mp2.5; average of MP2 and MP3 [manual]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. mp4; full MP4 [manual]. mpn; nth-order Moller–Plesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theory (ZAPT) [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation, equiv. linear. CCD [manual]. cepa(0); coupled electron pair approximation variant 0 [manual]. cepa(1); coupled electron pair approximation variant 1 [manual]. cepa(3); coupled electron pair approximation variant 3 [manual]. acpf; averaged coupled-pair functional [manual]. aqcc; averaged quadratic coupled cluster [manual]. qcisd; quadratic CI singles doubles (QCISD) [manual]. cc2; approximate coupled cluster singles and doubles (CC2) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. bccd; Brueckner coupled cluster doubles (BCCD) [manu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/energy-1.html:176,energy,energy,176,psi4manual/4.0b5/energy-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/energy-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. Evaluation of One-Electron Properties — oeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Theoretical Methods: SCF to FCI; Evaluation of One-Electron Properties — oeprop(). Evaluation of One-Electron Properties — oeprop()¶; Code author: Robert M. Parrish and Andrew C. Simmonett; Section author: Andrew C. Simmonett. psi4.oeprop(wfn, *args, **kwargs)[source]; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). PSI4 is capable of computing a number of one-electron properties; summarized in the table below. Current one-electron property capabilities of PSI4¶. Feature; Keyword; Notes. Electric dipole moment; DIPOLE. Electric quadrupole moment; QUADRUPOLE; Raw (traced) moments and traceless multipoles. All moments up order N; MULTIPOLE(N); Only raw (traced) moments. Sets global variables e.g. “DIPOLE”, “32-POLE”. Electrostatic potential, at nuclei; ESP_AT_NUCLEI; Sets global variables “ESP AT CENTER n”, n = 1 to natoms. Electrostatic potential, on grid; GRID_ESP; Generates V at each point in grid_esp.dat. See Properties evaluated on a grid. Electric field, on grid; GRID_FIELD; Generates {Ex,Ey,Ez} at each point grid_field.dat. See Properties evaluated on a grid. Molecular orbital extents; MO_EXTENTS. Mulliken atomic charges; MULLIKEN_CHARGES. Löwdin atomic charges; LOWDIN_CHARGES. Wiberg bond indices; WIBERG_LOWDIN_INDICES; Uses (Löwdin) symmetrically orthogonalized orbitals. Mayer bond indices; MAYER_INDICES. Natural orbital occupations; NO_OCCUPATIONS. Stockholder Atomic Multipoles; MBIS_CHARGES; Generates atomic cha",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/oeprop.html:785,energy,energy,785,psi4manual/master/oeprop.html,https://psicode.org,https://psicode.org/psi4manual/master/oeprop.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Evaluation of One-Electron Properties — oeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Theoretical Methods: SCF to FCI. Evaluation of One-Electron Properties — oeprop()¶; Code author: Robert M. Parrish and Andrew C. Simmonett; Section author: Andrew C. Simmonett. psi4.oeprop(wfn, *args[, title])[source]¶; Evaluate one-electron properties. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters:title (string) – label prepended to all psivars computed. Examples:. 1; 2; 3>>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). PSI4 is capable of computing a number of one-electron properties; summarized in the table below. Current one-electron property capabilities of PSI4¶. Feature; Keyword; Notes. Electric dipole moment; DIPOLE;  . Electric quadrupole moment; QUADRUPOLE; Raw (traced) moments and traceless multipoles. All moments up order N; MULTIPOLE(N); Only raw (traced) moments. Sets global variables e.g. “DIPOLE X”, “32-POLE XYYZZ”. Electrostatic potential, at nuclei; ESP_AT_NUCLEI; Sets global variables “ESP AT CENTER n”, n = 1 to natoms. Electrostatic potential, on grid; GRID_ESP; Generates V at each point in grid_esp.dat. See Properties evaluated on a grid. Electric field, on grid; GRID_FIELD; Generates {Ex,Ey,Ez} at each point grid_field.dat. See Properties evaluated on a grid. Molecular orbital extents; MO_EXTENTS;  . Mulliken atomic charges; MULLIKEN_CHARGES;  . Löwdin atomic charges; LOWDIN_CHARGES;  . Wiberg bond indices; WIBERG_LOWDIN_INDICES; Uses (Löwdin) symmetrically orthogonalized orbitals. Mayer bond indices; MAYER_INDICES;  . Natural orbital occupations; NO_OCCUPATIONS;  . There are two ways the computation of one-electron properties can be requested.; Firstly, the properties can be evaluated from the last; ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/oeprop-1.html:687,energy,energy,687,psi4manual/1.1.0/oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/oeprop-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Evaluation of One-Electron Properties — oeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Theoretical Methods: SCF to FCI. Evaluation of One-Electron Properties — oeprop()¶; Code author: Robert M. Parrish and Andrew C. Simmonett; Section author: Andrew C. Simmonett. psi4.oeprop(wfn, *args[, title])[source]¶; Evaluate one-electron properties. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters:title (string) – label prepended to all psivars computed. Examples:. 1; 2; 3>>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). PSI4 is capable of computing a number of one-electron properties; summarized in the table below. Current one-electron property capabilities of PSI4¶. Feature; Keyword; Notes. Electric dipole moment; DIPOLE;  . Electric quadrupole moment; QUADRUPOLE; Raw (traced) moments and traceless multipoles. All moments up order N; MULTIPOLE(N); Only raw (traced) moments. Sets global variables e.g. “DIPOLE X”, “32-POLE XYYZZ”. Electrostatic potential, at nuclei; ESP_AT_NUCLEI; Sets global variables “ESP AT CENTER n”, n = 1 to natoms. Electrostatic potential, on grid; GRID_ESP; Generates V at each point in grid_esp.dat. See Properties evaluated on a grid. Electric field, on grid; GRID_FIELD; Generates {Ex,Ey,Ez} at each point grid_field.dat. See Properties evaluated on a grid. Molecular orbital extents; MO_EXTENTS;  . Mulliken atomic charges; MULLIKEN_CHARGES;  . Löwdin atomic charges; LOWDIN_CHARGES;  . Wiberg bond indices; WIBERG_LOWDIN_INDICES; Uses (Löwdin) symmetrically orthogonalized orbitals. Mayer bond indices; MAYER_INDICES;  . Natural orbital occupations; NO_OCCUPATIONS;  . There are two ways the computation of one-electron properties can be requested.; Firstly, the properties can be evaluated from the last",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/oeprop-1.html:689,energy,energy,689,psi4manual/1.2.1/oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/oeprop-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Evaluation of One-Electron Properties — oeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Theoretical Methods: SCF to FCI. Evaluation of One-Electron Properties — oeprop()¶; Code author: Robert M. Parrish and Andrew C. Simmonett; Section author: Andrew C. Simmonett. psi4.oeprop(wfn, *args[, title])[source]¶; Evaluate one-electron properties. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters:title (string) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). PSI4 is capable of computing a number of one-electron properties; summarized in the table below. Current one-electron property capabilities of PSI4¶. Feature; Keyword; Notes. Electric dipole moment; DIPOLE;  . Electric quadrupole moment; QUADRUPOLE; Raw (traced) moments and traceless multipoles. All moments up order N; MULTIPOLE(N); Only raw (traced) moments. Sets global variables e.g. “DIPOLE X”, “32-POLE XYYZZ”. Electrostatic potential, at nuclei; ESP_AT_NUCLEI; Sets global variables “ESP AT CENTER n”, n = 1 to natoms. Electrostatic potential, on grid; GRID_ESP; Generates V at each point in grid_esp.dat. See Properties evaluated on a grid. Electric field, on grid; GRID_FIELD; Generates {Ex,Ey,Ez} at each point grid_field.dat. See Properties evaluated on a grid. Molecular orbital extents; MO_EXTENTS;  . Mulliken atomic charges; MULLIKEN_CHARGES;  . Löwdin atomic charges; LOWDIN_CHARGES;  . Wiberg bond indices; WIBERG_LOWDIN_INDICES; Uses (Löwdin) symmetrically orthogonalized orbitals. Mayer bond indices; MAYER_INDICES;  . Natural orbital occupations; NO_OCCUPATIONS;  . There are two ways the computation of one-electron properties can be requested.; Firstly, the properties can be evaluated from the last; compu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/oeprop-1.html:682,energy,energy,682,psi4manual/1.3.2/oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/oeprop-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Evaluation of One-Electron Properties — oeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Theoretical Methods: SCF to FCI; Evaluation of One-Electron Properties — oeprop(). Evaluation of One-Electron Properties — oeprop()¶; Code author: Robert M. Parrish and Andrew C. Simmonett; Section author: Andrew C. Simmonett. psi4.oeprop(wfn, *args, **kwargs)[source]; Evaluate one-electron properties. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters. title (str) – label prepended to all psivars computed; wfn (psi4.core.Wavefunction) – . Examples. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). PSI4 is capable of computing a number of one-electron properties; summarized in the table below. Current one-electron property capabilities of PSI4¶. Feature; Keyword; Notes. Electric dipole moment; DIPOLE. Electric quadrupole moment; QUADRUPOLE; Raw (traced) moments and traceless multipoles. All moments up order N; MULTIPOLE(N); Only raw (traced) moments. Sets global variables e.g. “DIPOLE X”, “32-POLE XYYZZ”. Electrostatic potential, at nuclei; ESP_AT_NUCLEI; Sets global variables “ESP AT CENTER n”, n = 1 to natoms. Electrostatic potential, on grid; GRID_ESP; Generates V at each point in grid_esp.dat. See Properties evaluated on a grid. Electric field, on grid; GRID_FIELD; Generates {Ex,Ey,Ez} at each point grid_field.dat. See Properties evaluated on a grid. Molecular orbital extents; MO_EXTENTS. Mulliken atomic charges; MULLIKEN_CHARGES. Löwdin atomic charges; LOWDIN_CHARGES. Wiberg bond indices; WIBERG_LOWDIN_INDICES; Uses (Löwdin) symmetrically orthogonalized orbitals. Mayer bond indices; MAYER_INDICES. Natural orbital occupations; NO_OCCUPATIONS. Stockholder Atomic Multipoles; MBIS_CHARGES; Generates atomic charges, dipoles, ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/oeprop-1.html:762,energy,energy,762,psi4manual/1.4.0/oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/oeprop-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Evaluation of One-Electron Properties — oeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Theoretical Methods: SCF to FCI; Evaluation of One-Electron Properties — oeprop(). Evaluation of One-Electron Properties — oeprop()¶; Code author: Robert M. Parrish and Andrew C. Simmonett; Section author: Andrew C. Simmonett. psi4.oeprop(wfn, *args, **kwargs)[source]; Evaluate one-electron properties. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters. title (str) – label prepended to all psivars computed; wfn (psi4.core.Wavefunction) – . Examples. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). PSI4 is capable of computing a number of one-electron properties; summarized in the table below. Current one-electron property capabilities of PSI4¶. Feature; Keyword; Notes. Electric dipole moment; DIPOLE. Electric quadrupole moment; QUADRUPOLE; Raw (traced) moments and traceless multipoles. All moments up order N; MULTIPOLE(N); Only raw (traced) moments. Sets global variables e.g. “DIPOLE X”, “32-POLE XYYZZ”. Electrostatic potential, at nuclei; ESP_AT_NUCLEI; Sets global variables “ESP AT CENTER n”, n = 1 to natoms. Electrostatic potential, on grid; GRID_ESP; Generates V at each point in grid_esp.dat. See Properties evaluated on a grid. Electric field, on grid; GRID_FIELD; Generates {Ex,Ey,Ez} at each point grid_field.dat. See Properties evaluated on a grid. Molecular orbital extents; MO_EXTENTS. Mulliken atomic charges; MULLIKEN_CHARGES. Löwdin atomic charges; LOWDIN_CHARGES. Wiberg bond indices; WIBERG_LOWDIN_INDICES; Uses (Löwdin) symmetrically orthogonalized orbitals. Mayer bond indices; MAYER_INDICES. Natural orbital occupations; NO_OCCUPATIONS. Stockholder Atomic Multipoles; MBIS_CHARGES; Generates atomic charges, dipoles, ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/oeprop-1.html:762,energy,energy,762,psi4manual/1.5.0/oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/oeprop-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Evaluation of One-Electron Properties — oeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Theoretical Methods: SCF to FCI; Evaluation of One-Electron Properties — oeprop(). Evaluation of One-Electron Properties — oeprop()¶; Code author: Robert M. Parrish and Andrew C. Simmonett; Section author: Andrew C. Simmonett. psi4.oeprop(wfn, *args, **kwargs)[source]; Evaluate one-electron properties. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters. title (str) – label prepended to all psivars computed; wfn (psi4.core.Wavefunction) – . Examples. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). PSI4 is capable of computing a number of one-electron properties; summarized in the table below. Current one-electron property capabilities of PSI4¶. Feature; Keyword; Notes. Electric dipole moment; DIPOLE. Electric quadrupole moment; QUADRUPOLE; Raw (traced) moments and traceless multipoles. All moments up order N; MULTIPOLE(N); Only raw (traced) moments. Sets global variables e.g. “DIPOLE”, “32-POLE”. Electrostatic potential, at nuclei; ESP_AT_NUCLEI; Sets global variables “ESP AT CENTER n”, n = 1 to natoms. Electrostatic potential, on grid; GRID_ESP; Generates V at each point in grid_esp.dat. See Properties evaluated on a grid. Electric field, on grid; GRID_FIELD; Generates {Ex,Ey,Ez} at each point grid_field.dat. See Properties evaluated on a grid. Molecular orbital extents; MO_EXTENTS. Mulliken atomic charges; MULLIKEN_CHARGES. Löwdin atomic charges; LOWDIN_CHARGES. Wiberg bond indices; WIBERG_LOWDIN_INDICES; Uses (Löwdin) symmetrically orthogonalized orbitals. Mayer bond indices; MAYER_INDICES. Natural orbital occupations; NO_OCCUPATIONS. Stockholder Atomic Multipoles; MBIS_CHARGES; Generates atomic charges, dipoles, etc. See",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/oeprop.html:762,energy,energy,762,psi4manual/1.6.x/oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/oeprop.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Evaluation of One-Electron Properties — oeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Theoretical Methods: SCF to FCI; Evaluation of One-Electron Properties — oeprop(). Evaluation of One-Electron Properties — oeprop()¶; Code author: Robert M. Parrish and Andrew C. Simmonett; Section author: Andrew C. Simmonett. psi4.oeprop(wfn, *args, **kwargs)[source]; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). PSI4 is capable of computing a number of one-electron properties; summarized in the table below. Current one-electron property capabilities of PSI4¶. Feature; Keyword; Notes. Electric dipole moment; DIPOLE. Electric quadrupole moment; QUADRUPOLE; Raw (traced) moments and traceless multipoles. All moments up order N; MULTIPOLE(N); Only raw (traced) moments. Sets global variables e.g. “DIPOLE”, “32-POLE”. Electrostatic potential, at nuclei; ESP_AT_NUCLEI; Sets global variables “ESP AT CENTER n”, n = 1 to natoms. Electrostatic potential, on grid; GRID_ESP; Generates V at each point in grid_esp.dat. See Properties evaluated on a grid. Electric field, on grid; GRID_FIELD; Generates {Ex,Ey,Ez} at each point grid_field.dat. See Properties evaluated on a grid. Molecular orbital extents; MO_EXTENTS. Mulliken atomic charges; MULLIKEN_CHARGES. Löwdin atomic charges; LOWDIN_CHARGES. Wiberg bond indices; WIBERG_LOWDIN_INDICES; Uses (Löwdin) symmetrically orthogonalized orbitals. Mayer bond indices; MAYER_INDICES. Natural orbital occupations; NO_OCCUPATIONS. Stockholder Atomic Multipoles; MBIS_CHARGES; Generates atomic charges, dip",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/oeprop.html:776,energy,energy,776,psi4manual/1.7.x/oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/oeprop.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Evaluation of One-Electron Properties — oeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Theoretical Methods: SCF to FCI; Evaluation of One-Electron Properties — oeprop(). Evaluation of One-Electron Properties — oeprop()¶; Code author: Robert M. Parrish and Andrew C. Simmonett; Section author: Andrew C. Simmonett. psi4.oeprop(wfn, *args, **kwargs)[source]; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). PSI4 is capable of computing a number of one-electron properties; summarized in the table below. Current one-electron property capabilities of PSI4¶. Feature; Keyword; Notes. Electric dipole moment; DIPOLE. Electric quadrupole moment; QUADRUPOLE; Raw (traced) moments and traceless multipoles. All moments up order N; MULTIPOLE(N); Only raw (traced) moments. Sets global variables e.g. “DIPOLE”, “32-POLE”. Electrostatic potential, at nuclei; ESP_AT_NUCLEI; Sets global variables “ESP AT CENTER n”, n = 1 to natoms. Electrostatic potential, on grid; GRID_ESP; Generates V at each point in grid_esp.dat. See Properties evaluated on a grid. Electric field, on grid; GRID_FIELD; Generates {Ex,Ey,Ez} at each point grid_field.dat. See Properties evaluated on a grid. Molecular orbital extents; MO_EXTENTS. Mulliken atomic charges; MULLIKEN_CHARGES. Löwdin atomic charges; LOWDIN_CHARGES. Wiberg bond indices; WIBERG_LOWDIN_INDICES; Uses (Löwdin) symmetrically orthogonalized orbitals. Mayer bond indices; MAYER_INDICES. Natural orbital occupations; NO_OCCUPATIONS. Stockholder Atomic Multipoles; MBIS_CHARGES; Generates atomic charges, d",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/oeprop.html:778,energy,energy,778,psi4manual/1.8.x/oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/oeprop.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Evaluation of One-Electron Properties — oeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Theoretical Methods: SCF to FCI; Evaluation of One-Electron Properties — oeprop(). Evaluation of One-Electron Properties — oeprop()¶; Code author: Robert M. Parrish and Andrew C. Simmonett; Section author: Andrew C. Simmonett. psi4.oeprop(wfn, *args, **kwargs)[source]; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). PSI4 is capable of computing a number of one-electron properties; summarized in the table below. Current one-electron property capabilities of PSI4¶. Feature; Keyword; Notes. Electric dipole moment; DIPOLE. Electric quadrupole moment; QUADRUPOLE; Raw (traced) moments and traceless multipoles. All moments up order N; MULTIPOLE(N); Only raw (traced) moments. Sets global variables e.g. “DIPOLE”, “32-POLE”. Electrostatic potential, at nuclei; ESP_AT_NUCLEI; Sets global variables “ESP AT CENTER n”, n = 1 to natoms. Electrostatic potential, on grid; GRID_ESP; Generates V at each point in grid_esp.dat. See Properties evaluated on a grid. Electric field, on grid; GRID_FIELD; Generates {Ex,Ey,Ez} at each point grid_field.dat. See Properties evaluated on a grid. Molecular orbital extents; MO_EXTENTS. Mulliken atomic charges; MULLIKEN_CHARGES. Löwdin atomic charges; LOWDIN_CHARGES. Wiberg bond indices; WIBERG_LOWDIN_INDICES; Uses (Löwdin) symmetrically orthogonalized orbitals. Mayer bond indices; MAYER_INDICES. Natural orbital occupations; NO_OCCUPATIONS. Stockholder Atomic Multipoles; MBIS_CHARGES; Generates atomic charges, d",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/oeprop.html:778,energy,energy,778,psi4manual/1.9.x/oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/oeprop.html,1,['energy'],['energy']
Energy Efficiency,"﻿. External API Objects. Navigation. Index. modules    .    .    .  · ; 1.10a1.dev61;  · . PSI4. External API Objects. External API Objects¶. class psi4.driver.qcdb.Molecule(molinit=None, dtype=None, geom=None, elea=None, elez=None, elem=None, mass=None, real=None, elbl=None, name=None, units='Angstrom', input_units_to_au=None, fix_com=None, fix_orientation=None, fix_symmetry=None, fragment_separators=None, fragment_charges=None, fragment_multiplicities=None, molecular_charge=None, molecular_multiplicity=None, comment=None, provenance=None, connectivity=None, enable_qm=True, enable_efp=True, missing_enabled_return_qm='none', missing_enabled_return_efp='none', missing_enabled_return='error', tooclose=0.1, zero_ghost_fragments=False, nonphysical=False, mtol=0.001, verbose=1)[source]¶; Class to store the elements, coordinates, fragmentation pattern,; charge, multiplicity of a molecule. Largely replicates psi4’s libmints; Molecule class, developed by Justin M. Turney and Andy M. Simmonett; with incremental improvements by other psi4 developers. Major; This class extends qcdb.LibmintsMolecule and occasionally; psi4.core.Molecule itself. class psi4.driver.ipi_broker.IPIBroker(LOT, options=None, serverdata=False, molecule=None)[source]¶; Interface implementation between i-PI (https://ipi-code.org/) and PSI4. psi4.driver.wrapper_autofrag.auto_fragments(molecule=None, seed_atoms=None)[source]¶; Detects fragments in unfragmented molecule using BFS algorithm.; Currently only used for the WebMO implementation of SAPT. Parameters:. molecule (molecule, optional) – The target molecule, if not the last molecule defined.; seed_atoms (Optional[List[List[int]]]) – List of lists of atoms (0-indexed) belonging to independent fragments.; Useful to prompt algorithm or to define intramolecular fragments through; border atoms. Example: [[1, 0], [2]]. Return type:; Molecule. Returns:. Molecule – fragmented molecule in; Cartesian, fixed-geom (no variable values), no dummy-atom format. Examples",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/external_apis.html:860,charge,charge,860,psi4manual/master/external_apis.html,https://psicode.org,https://psicode.org/psi4manual/master/external_apis.html,1,['charge'],['charge']
Energy Efficiency,"﻿. External API Objects. Navigation. Index. modules    .    .    .  · ; 1.4;  · . PSI4. External API Objects. External API Objects¶. class psi4.driver.qcdb.Molecule(molinit=None, dtype=None, geom=None, elea=None, elez=None, elem=None, mass=None, real=None, elbl=None, name=None, units='Angstrom', input_units_to_au=None, fix_com=None, fix_orientation=None, fix_symmetry=None, fragment_separators=None, fragment_charges=None, fragment_multiplicities=None, molecular_charge=None, molecular_multiplicity=None, comment=None, provenance=None, connectivity=None, enable_qm=True, enable_efp=True, missing_enabled_return_qm='none', missing_enabled_return_efp='none', missing_enabled_return='error', tooclose=0.1, zero_ghost_fragments=False, nonphysical=False, mtol=0.001, verbose=1)[source]¶; Class to store the elements, coordinates, fragmentation pattern,; charge, multiplicity of a molecule. Largely replicates psi4’s libmints; Molecule class, developed by Justin M. Turney and Andy M. Simmonett; with incremental improvements by other psi4 developers. Major; This class extends qcdb.LibmintsMolecule and occasionally; psi4.core.Molecule itself. class qcelemental.datum.Datum(label, units, data, *, comment=None, doi=None, glossary=None, numeric=True)[source]¶; Facilitates the storage of quantum chemical results by labeling them with basic metadata. Parameters. label (str) – ; units (str) – ; data (Any) – ; comment (str) – ; doi (Optional[str]) – ; glossary (str) – ; numeric (bool) – . Return type; None. label¶; Official label for data, often qcvar. May contain spaces. Type; str. units¶; ASCII, LaTeX-like representation of units, without square brackets. Type; str. data¶; Value for label. Type; float or decimal.Decimal or numpy.ndarray. comment¶; Additional notes. Type; str. doi¶; Literature citation or definition DOI link. Type; str. glossary¶; Extended description or definition. Type; str. numeric¶; Whether data is numeric. Pass True to disable validating data as float/Decimal/np.ndarray. ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/external_apis-1.html:851,charge,charge,851,psi4manual/1.4.0/external_apis-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/external_apis-1.html,2,['charge'],['charge']
Energy Efficiency,"﻿. External API Objects. Navigation. Index. modules    .    .    .  · ; 1.5;  · . PSI4. External API Objects. External API Objects¶. class psi4.driver.qcdb.Molecule(molinit=None, dtype=None, geom=None, elea=None, elez=None, elem=None, mass=None, real=None, elbl=None, name=None, units='Angstrom', input_units_to_au=None, fix_com=None, fix_orientation=None, fix_symmetry=None, fragment_separators=None, fragment_charges=None, fragment_multiplicities=None, molecular_charge=None, molecular_multiplicity=None, comment=None, provenance=None, connectivity=None, enable_qm=True, enable_efp=True, missing_enabled_return_qm='none', missing_enabled_return_efp='none', missing_enabled_return='error', tooclose=0.1, zero_ghost_fragments=False, nonphysical=False, mtol=0.001, verbose=1)[source]¶; Class to store the elements, coordinates, fragmentation pattern,; charge, multiplicity of a molecule. Largely replicates psi4’s libmints; Molecule class, developed by Justin M. Turney and Andy M. Simmonett; with incremental improvements by other psi4 developers. Major; This class extends qcdb.LibmintsMolecule and occasionally; psi4.core.Molecule itself. class qcelemental.datum.Datum(label, units, data, *, comment=None, doi=None, glossary=None, numeric=True)[source]¶; Facilitates the storage of quantum chemical results by labeling them with basic metadata. Parameters. label (str) – ; units (str) – ; data (Any) – ; comment (str) – ; doi (Optional[str]) – ; glossary (str) – ; numeric (bool) – . Return type; None. label¶; Official label for data, often qcvar. May contain spaces. Type; str. units¶; ASCII, LaTeX-like representation of units, without square brackets. Type; str. data¶; Value for label. Type; float or decimal.Decimal or numpy.ndarray. comment¶; Additional notes. Type; str. doi¶; Literature citation or definition DOI link. Type; str. glossary¶; Extended description or definition. Type; str. numeric¶; Whether data is numeric. Pass True to disable validating data as float/Decimal/np.ndarray. ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/external_apis-1.html:851,charge,charge,851,psi4manual/1.5.0/external_apis-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/external_apis-1.html,2,['charge'],['charge']
Energy Efficiency,"﻿. External API Objects. Navigation. Index. modules    .    .    .  · ; 1.6;  · . PSI4. External API Objects. External API Objects¶. class psi4.driver.qcdb.Molecule(molinit=None, dtype=None, geom=None, elea=None, elez=None, elem=None, mass=None, real=None, elbl=None, name=None, units='Angstrom', input_units_to_au=None, fix_com=None, fix_orientation=None, fix_symmetry=None, fragment_separators=None, fragment_charges=None, fragment_multiplicities=None, molecular_charge=None, molecular_multiplicity=None, comment=None, provenance=None, connectivity=None, enable_qm=True, enable_efp=True, missing_enabled_return_qm='none', missing_enabled_return_efp='none', missing_enabled_return='error', tooclose=0.1, zero_ghost_fragments=False, nonphysical=False, mtol=0.001, verbose=1)[source]¶; Class to store the elements, coordinates, fragmentation pattern,; charge, multiplicity of a molecule. Largely replicates psi4’s libmints; Molecule class, developed by Justin M. Turney and Andy M. Simmonett; with incremental improvements by other psi4 developers. Major; This class extends qcdb.LibmintsMolecule and occasionally; psi4.core.Molecule itself. class qcelemental.datum.Datum(label, units, data, *, comment=None, doi=None, glossary=None, numeric=True)[source]¶; Facilitates the storage of quantum chemical results by labeling them with basic metadata. Parameters. label (str) – ; units (str) – ; data (Any) – ; comment (str) – ; doi (Optional[str]) – ; glossary (str) – ; numeric (bool) – . Return type; None. label¶; Official label for data, often qcvar. May contain spaces. Type; str. units¶; ASCII, LaTeX-like representation of units, without square brackets. Type; str. data¶; Value for label. Type; float or decimal.Decimal or numpy.ndarray. comment¶; Additional notes. Type; str. doi¶; Literature citation or definition DOI link. Type; str. glossary¶; Extended description or definition. Type; str. numeric¶; Whether data is numeric. Pass True to disable validating data as float/Decimal/np.ndarray. ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/external_apis.html:851,charge,charge,851,psi4manual/1.6.x/external_apis.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/external_apis.html,1,['charge'],['charge']
Energy Efficiency,"﻿. External API Objects. Navigation. Index. modules    .    .    .  · ; 1.7;  · . PSI4. External API Objects. External API Objects¶. class psi4.driver.qcdb.Molecule(molinit=None, dtype=None, geom=None, elea=None, elez=None, elem=None, mass=None, real=None, elbl=None, name=None, units='Angstrom', input_units_to_au=None, fix_com=None, fix_orientation=None, fix_symmetry=None, fragment_separators=None, fragment_charges=None, fragment_multiplicities=None, molecular_charge=None, molecular_multiplicity=None, comment=None, provenance=None, connectivity=None, enable_qm=True, enable_efp=True, missing_enabled_return_qm='none', missing_enabled_return_efp='none', missing_enabled_return='error', tooclose=0.1, zero_ghost_fragments=False, nonphysical=False, mtol=0.001, verbose=1)[source]¶; Class to store the elements, coordinates, fragmentation pattern,; charge, multiplicity of a molecule. Largely replicates psi4’s libmints; Molecule class, developed by Justin M. Turney and Andy M. Simmonett; with incremental improvements by other psi4 developers. Major; This class extends qcdb.LibmintsMolecule and occasionally; psi4.core.Molecule itself. class psi4.driver.ipi_broker.IPIBroker(LOT, options=None, serverdata=False, molecule=None)[source]¶; Interface implementation between i-PI (https://ipi-code.org/) and PSI4. psi4.driver.wrapper_autofrag.auto_fragments(molecule=None, seed_atoms=None)[source]¶; Detects fragments in unfragmented molecule using BFS algorithm.; Currently only used for the WebMO implementation of SAPT. Parameters:. molecule (molecule, optional) – The target molecule, if not the last molecule defined.; seed_atoms (Optional[List[List[int]]]) – List of lists of atoms (0-indexed) belonging to independent fragments.; Useful to prompt algorithm or to define intramolecular fragments through; border atoms. Example: [[1, 0], [2]]. Return type:; Molecule. Returns:. Molecule – fragmented molecule in; Cartesian, fixed-geom (no variable values), no dummy-atom format. Examples; >>> # [",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/external_apis.html:851,charge,charge,851,psi4manual/1.7.x/external_apis.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/external_apis.html,1,['charge'],['charge']
Energy Efficiency,"﻿. External API Objects. Navigation. Index. modules    .    .    .  · ; 1.8.2;  · . PSI4. External API Objects. External API Objects¶. class psi4.driver.qcdb.Molecule(molinit=None, dtype=None, geom=None, elea=None, elez=None, elem=None, mass=None, real=None, elbl=None, name=None, units='Angstrom', input_units_to_au=None, fix_com=None, fix_orientation=None, fix_symmetry=None, fragment_separators=None, fragment_charges=None, fragment_multiplicities=None, molecular_charge=None, molecular_multiplicity=None, comment=None, provenance=None, connectivity=None, enable_qm=True, enable_efp=True, missing_enabled_return_qm='none', missing_enabled_return_efp='none', missing_enabled_return='error', tooclose=0.1, zero_ghost_fragments=False, nonphysical=False, mtol=0.001, verbose=1)[source]¶; Class to store the elements, coordinates, fragmentation pattern,; charge, multiplicity of a molecule. Largely replicates psi4’s libmints; Molecule class, developed by Justin M. Turney and Andy M. Simmonett; with incremental improvements by other psi4 developers. Major; This class extends qcdb.LibmintsMolecule and occasionally; psi4.core.Molecule itself. class psi4.driver.ipi_broker.IPIBroker(LOT, options=None, serverdata=False, molecule=None)[source]¶; Interface implementation between i-PI (https://ipi-code.org/) and PSI4. psi4.driver.wrapper_autofrag.auto_fragments(molecule=None, seed_atoms=None)[source]¶; Detects fragments in unfragmented molecule using BFS algorithm.; Currently only used for the WebMO implementation of SAPT. Parameters:. molecule (molecule, optional) – The target molecule, if not the last molecule defined.; seed_atoms (Optional[List[List[int]]]) – List of lists of atoms (0-indexed) belonging to independent fragments.; Useful to prompt algorithm or to define intramolecular fragments through; border atoms. Example: [[1, 0], [2]]. Return type:; Molecule. Returns:. Molecule – fragmented molecule in; Cartesian, fixed-geom (no variable values), no dummy-atom format. Examples; >>> #",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/external_apis.html:853,charge,charge,853,psi4manual/1.8.x/external_apis.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/external_apis.html,1,['charge'],['charge']
Energy Efficiency,"﻿. External API Objects. Navigation. Index. modules    .    .    .  · ; 1.9.1;  · . PSI4. External API Objects. External API Objects¶. class psi4.driver.qcdb.Molecule(molinit=None, dtype=None, geom=None, elea=None, elez=None, elem=None, mass=None, real=None, elbl=None, name=None, units='Angstrom', input_units_to_au=None, fix_com=None, fix_orientation=None, fix_symmetry=None, fragment_separators=None, fragment_charges=None, fragment_multiplicities=None, molecular_charge=None, molecular_multiplicity=None, comment=None, provenance=None, connectivity=None, enable_qm=True, enable_efp=True, missing_enabled_return_qm='none', missing_enabled_return_efp='none', missing_enabled_return='error', tooclose=0.1, zero_ghost_fragments=False, nonphysical=False, mtol=0.001, verbose=1)[source]¶; Class to store the elements, coordinates, fragmentation pattern,; charge, multiplicity of a molecule. Largely replicates psi4’s libmints; Molecule class, developed by Justin M. Turney and Andy M. Simmonett; with incremental improvements by other psi4 developers. Major; This class extends qcdb.LibmintsMolecule and occasionally; psi4.core.Molecule itself. class psi4.driver.ipi_broker.IPIBroker(LOT, options=None, serverdata=False, molecule=None)[source]¶; Interface implementation between i-PI (https://ipi-code.org/) and PSI4. psi4.driver.wrapper_autofrag.auto_fragments(molecule=None, seed_atoms=None)[source]¶; Detects fragments in unfragmented molecule using BFS algorithm.; Currently only used for the WebMO implementation of SAPT. Parameters:. molecule (molecule, optional) – The target molecule, if not the last molecule defined.; seed_atoms (Optional[List[List[int]]]) – List of lists of atoms (0-indexed) belonging to independent fragments.; Useful to prompt algorithm or to define intramolecular fragments through; border atoms. Example: [[1, 0], [2]]. Return type:; Molecule. Returns:. Molecule – fragmented molecule in; Cartesian, fixed-geom (no variable values), no dummy-atom format. Examples; >>> #",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/external_apis.html:853,charge,charge,853,psi4manual/1.9.x/external_apis.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/external_apis.html,1,['charge'],['charge']
Energy Efficiency,"﻿. ExternalPotential. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; ExternalPotential. ExternalPotential¶. class psi4.core.ExternalPotential¶; Bases: pybind11_object; Stores external potential field, computes external potential matrix; Methods Summary. addBasis(self, basis, coefs); Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self, Z, x, y, z); Add a charge Z at (x,y,z). appendCharges(self, arg0); Append a vector of charge tuples to a current ExternalPotential. clear(self); Reset the field to zero (eliminates all entries). computeExternExternInteraction(self, arg0); Compute the interaction between this potential and other external potential. computeNuclearEnergy(self, arg0); Compute the contribution to the nuclear repulsion energy for the given molecule. computePotentialMatrix(self, basis); Compute the external potential matrix in the given basis set. getCharges(self); Get the vector of charge tuples. gradient_on_charges(self); Get the gradient on the embedded charges. print_out(self); Print python print helper to the outfile. setName(self, arg0); Sets the name. Methods Documentation. addBasis(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet, coefs: psi4.core.Vector) → None¶; Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self: psi4.core.ExternalPotential, Z: float, x: float, y: float, z: float) → None¶; Add a charge Z at (x,y,z). appendCharges(self: psi4.core.ExternalPotential, arg0: list[tuple[float, float, float, float]]) → None¶; Append a vector of charge tuples to a current ExternalPotential. clear(self: psi4.core.ExternalPotential) → None¶; Reset the field to zero (eliminates all entries). computeExternExternInteraction(self: psi4.core.ExternalPotential, arg0: psi4.core.ExternalPotential) → float¶; Compute the interaction between this potential and other external potential. computeNuclearEnergy(self: psi4.core.ExternalPotential, arg0: psi4.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.ExternalPotential.html:442,charge,charge,442,psi4manual/master/api/psi4.core.ExternalPotential.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.ExternalPotential.html,8,"['charge', 'energy']","['charge', 'energy']"
Energy Efficiency,"﻿. ExternalPotential. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. ExternalPotential¶. class psi4.core.ExternalPotential¶; Bases: pybind11_builtins.pybind11_object; Stores external potential field, computes external potential matrix; Methods Summary. addBasis(self, basis, coefs); Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self, Z, x, y, z); Add a charge Z at (x,y,z). clear(self); Reset the field to zero (eliminates all entries). computePotentialMatrix(self, basis); Compute the external potential matrix in the given basis set. print_out(self); Print python print helper to the outfile. setName(self, arg0); Sets the name. Methods Documentation. addBasis(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet, coefs: psi4.core.Vector) → None¶; Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self: psi4.core.ExternalPotential, Z: float, x: float, y: float, z: float) → None¶; Add a charge Z at (x,y,z). clear(self: psi4.core.ExternalPotential) → None¶; Reset the field to zero (eliminates all entries). computePotentialMatrix(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet) → psi4.core.Matrix¶; Compute the external potential matrix in the given basis set. print_out(self: psi4.core.ExternalPotential) → None¶; Print python print helper to the outfile. setName(self: psi4.core.ExternalPotential, arg0: str) → None¶; Sets the name. addBasis(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet, coefs: psi4.core.Vector) → None; Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self: psi4.core.ExternalPotential, Z: float, x: float, y: float, z: float) → None; Add a charge Z at (x,y,z). clear(self: psi4.core.ExternalPotential) → None; Reset the field to zero (eliminates all entries). computePotentialMatrix(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet) → psi4.core.Matrix; Compute the external potential matrix in the given b",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.externalpotential.html:434,charge,charge,434,psi4manual/1.2.1/api/psi4.core.externalpotential.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.externalpotential.html,2,['charge'],['charge']
Energy Efficiency,"﻿. ExternalPotential. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. ExternalPotential¶. class psi4.core.ExternalPotential¶; Bases: pybind11_builtins.pybind11_object; Stores external potential field, computes external potential matrix; Methods Summary. addBasis(self, basis, coefs); Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self, Z, x, y, z); Add a charge Z at (x,y,z). clear(self); Reset the field to zero (eliminates all entries). computePotentialMatrix(self, basis); Compute the external potential matrix in the given basis set. print_out(self); Print python print helper to the outfile. setName(self, arg0); Sets the name. Methods Documentation. addBasis(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet, coefs: psi4.core.Vector) → None¶; Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self: psi4.core.ExternalPotential, Z: float, x: float, y: float, z: float) → None¶; Add a charge Z at (x,y,z). clear(self: psi4.core.ExternalPotential) → None¶; Reset the field to zero (eliminates all entries). computePotentialMatrix(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet) → psi4.core.Matrix¶; Compute the external potential matrix in the given basis set. print_out(self: psi4.core.ExternalPotential) → None¶; Print python print helper to the outfile. setName(self: psi4.core.ExternalPotential, arg0: str) → None¶; Sets the name. addBasis(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet, coefs: psi4.core.Vector) → None; Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self: psi4.core.ExternalPotential, Z: float, x: float, y: float, z: float) → None; Add a charge Z at (x,y,z). clear(self: psi4.core.ExternalPotential) → None; Reset the field to zero (eliminates all entries). computePotentialMatrix(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet) → psi4.core.Matrix; Compute the external potential matrix in the given b",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.externalpotential.html:434,charge,charge,434,psi4manual/1.3.2/api/psi4.core.externalpotential.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.externalpotential.html,2,['charge'],['charge']
Energy Efficiency,"﻿. ExternalPotential. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; ExternalPotential. ExternalPotential¶. class psi4.core.ExternalPotential¶; Bases: pybind11_builtins.pybind11_object; Stores external potential field, computes external potential matrix; Methods Summary. addBasis(self, basis, coefs); Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self, Z, x, y, z); Add a charge Z at (x,y,z). appendCharges(self, arg0, float, float, float]]); Append a vector of charge tuples to a current ExternalPotential. clear(self); Reset the field to zero (eliminates all entries). computeExternExternInteraction(self, arg0, arg1); Compute the interaction between this potential and other external potential. computeNuclearEnergy(self, arg0); Compute the contribution to the nuclear repulsion energy for the given molecule. computePotentialMatrix(self, basis); Compute the external potential matrix in the given basis set. getCharges(self); Get the vector of charge tuples. print_out(self); Print python print helper to the outfile. setName(self, arg0); Sets the name. Methods Documentation. addBasis(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet, coefs: psi4.core.Vector) → None¶; Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self: psi4.core.ExternalPotential, Z: float, x: float, y: float, z: float) → None¶; Add a charge Z at (x,y,z). appendCharges(self: psi4.core.ExternalPotential, arg0: List[Tuple[float, float, float, float]]) → None¶; Append a vector of charge tuples to a current ExternalPotential. clear(self: psi4.core.ExternalPotential) → None¶; Reset the field to zero (eliminates all entries). computeExternExternInteraction(self: psi4.core.ExternalPotential, arg0: psi4.core.ExternalPotential, arg1: bool) → float¶; Compute the interaction between this potential and other external potential. computeNuclearEnergy(self: psi4.core.ExternalPotential, arg0: psi4.core.Molecule) → fl",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.externalpotential.html:451,charge,charge,451,psi4manual/1.4.0/api/psi4.core.externalpotential.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.externalpotential.html,3,"['charge', 'energy']","['charge', 'energy']"
Energy Efficiency,"﻿. ExternalPotential. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; ExternalPotential. ExternalPotential¶. class psi4.core.ExternalPotential¶; Bases: pybind11_builtins.pybind11_object; Stores external potential field, computes external potential matrix; Methods Summary. addBasis(self, basis, coefs); Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self, Z, x, y, z); Add a charge Z at (x,y,z). appendCharges(self, arg0); Append a vector of charge tuples to a current ExternalPotential. clear(self); Reset the field to zero (eliminates all entries). computeExternExternInteraction(self, arg0, arg1); Compute the interaction between this potential and other external potential. computeNuclearEnergy(self, arg0); Compute the contribution to the nuclear repulsion energy for the given molecule. computePotentialMatrix(self, basis); Compute the external potential matrix in the given basis set. getCharges(self); Get the vector of charge tuples. print_out(self); Print python print helper to the outfile. setName(self, arg0); Sets the name. Methods Documentation. addBasis(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet, coefs: psi4.core.Vector) → None¶; Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self: psi4.core.ExternalPotential, Z: float, x: float, y: float, z: float) → None¶; Add a charge Z at (x,y,z). appendCharges(self: psi4.core.ExternalPotential, arg0: List[Tuple[float, float, float, float]]) → None¶; Append a vector of charge tuples to a current ExternalPotential. clear(self: psi4.core.ExternalPotential) → None¶; Reset the field to zero (eliminates all entries). computeExternExternInteraction(self: psi4.core.ExternalPotential, arg0: psi4.core.ExternalPotential, arg1: bool) → float¶; Compute the interaction between this potential and other external potential. computeNuclearEnergy(self: psi4.core.ExternalPotential, arg0: psi4.core.Molecule) → float¶; Compute the contr",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.externalpotential.html:451,charge,charge,451,psi4manual/1.5.0/api/psi4.core.externalpotential.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.externalpotential.html,8,"['charge', 'energy']","['charge', 'energy']"
Energy Efficiency,"﻿. ExternalPotential. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; ExternalPotential. ExternalPotential¶. class psi4.core.ExternalPotential¶; Bases: pybind11_builtins.pybind11_object; Stores external potential field, computes external potential matrix; Methods Summary. addBasis(self, basis, coefs); Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self, Z, x, y, z); Add a charge Z at (x,y,z). appendCharges(self, arg0); Append a vector of charge tuples to a current ExternalPotential. clear(self); Reset the field to zero (eliminates all entries). computeExternExternInteraction(self, arg0); Compute the interaction between this potential and other external potential. computeNuclearEnergy(self, arg0); Compute the contribution to the nuclear repulsion energy for the given molecule. computePotentialMatrix(self, basis); Compute the external potential matrix in the given basis set. getCharges(self); Get the vector of charge tuples. print_out(self); Print python print helper to the outfile. setName(self, arg0); Sets the name. Methods Documentation. addBasis(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet, coefs: psi4.core.Vector) → None¶; Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self: psi4.core.ExternalPotential, Z: float, x: float, y: float, z: float) → None¶; Add a charge Z at (x,y,z). appendCharges(self: psi4.core.ExternalPotential, arg0: List[Tuple[float, float, float, float]]) → None¶; Append a vector of charge tuples to a current ExternalPotential. clear(self: psi4.core.ExternalPotential) → None¶; Reset the field to zero (eliminates all entries). computeExternExternInteraction(self: psi4.core.ExternalPotential, arg0: psi4.core.ExternalPotential) → float¶; Compute the interaction between this potential and other external potential. computeNuclearEnergy(self: psi4.core.ExternalPotential, arg0: psi4.core.Molecule) → float¶; Compute the contribution to the nuc",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.ExternalPotential.html:451,charge,charge,451,psi4manual/1.6.x/api/psi4.core.ExternalPotential.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.ExternalPotential.html,8,"['charge', 'energy']","['charge', 'energy']"
Energy Efficiency,"﻿. ExternalPotential. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; ExternalPotential. ExternalPotential¶. class psi4.core.ExternalPotential¶; Bases: pybind11_object; Stores external potential field, computes external potential matrix; Methods Summary. addBasis(self, basis, coefs); Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self, Z, x, y, z); Add a charge Z at (x,y,z). appendCharges(self, arg0); Append a vector of charge tuples to a current ExternalPotential. clear(self); Reset the field to zero (eliminates all entries). computeExternExternInteraction(self, arg0); Compute the interaction between this potential and other external potential. computeNuclearEnergy(self, arg0); Compute the contribution to the nuclear repulsion energy for the given molecule. computePotentialMatrix(self, basis); Compute the external potential matrix in the given basis set. getCharges(self); Get the vector of charge tuples. print_out(self); Print python print helper to the outfile. setName(self, arg0); Sets the name. Methods Documentation. addBasis(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet, coefs: psi4.core.Vector) → None¶; Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self: psi4.core.ExternalPotential, Z: float, x: float, y: float, z: float) → None¶; Add a charge Z at (x,y,z). appendCharges(self: psi4.core.ExternalPotential, arg0: List[Tuple[float, float, float, float]]) → None¶; Append a vector of charge tuples to a current ExternalPotential. clear(self: psi4.core.ExternalPotential) → None¶; Reset the field to zero (eliminates all entries). computeExternExternInteraction(self: psi4.core.ExternalPotential, arg0: psi4.core.ExternalPotential) → float¶; Compute the interaction between this potential and other external potential. computeNuclearEnergy(self: psi4.core.ExternalPotential, arg0: psi4.core.Molecule) → float¶; Compute the contribution to the nuclear repulsion ene",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.ExternalPotential.html:433,charge,charge,433,psi4manual/1.7.x/api/psi4.core.ExternalPotential.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.ExternalPotential.html,8,"['charge', 'energy']","['charge', 'energy']"
Energy Efficiency,"﻿. ExternalPotential. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; ExternalPotential. ExternalPotential¶. class psi4.core.ExternalPotential¶; Bases: pybind11_object; Stores external potential field, computes external potential matrix; Methods Summary. addBasis(self, basis, coefs); Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self, Z, x, y, z); Add a charge Z at (x,y,z). appendCharges(self, arg0); Append a vector of charge tuples to a current ExternalPotential. clear(self); Reset the field to zero (eliminates all entries). computeExternExternInteraction(self, arg0); Compute the interaction between this potential and other external potential. computeNuclearEnergy(self, arg0); Compute the contribution to the nuclear repulsion energy for the given molecule. computePotentialMatrix(self, basis); Compute the external potential matrix in the given basis set. getCharges(self); Get the vector of charge tuples. print_out(self); Print python print helper to the outfile. setName(self, arg0); Sets the name. Methods Documentation. addBasis(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet, coefs: psi4.core.Vector) → None¶; Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self: psi4.core.ExternalPotential, Z: float, x: float, y: float, z: float) → None¶; Add a charge Z at (x,y,z). appendCharges(self: psi4.core.ExternalPotential, arg0: List[Tuple[float, float, float, float]]) → None¶; Append a vector of charge tuples to a current ExternalPotential. clear(self: psi4.core.ExternalPotential) → None¶; Reset the field to zero (eliminates all entries). computeExternExternInteraction(self: psi4.core.ExternalPotential, arg0: psi4.core.ExternalPotential) → float¶; Compute the interaction between this potential and other external potential. computeNuclearEnergy(self: psi4.core.ExternalPotential, arg0: psi4.core.Molecule) → float¶; Compute the contribution to the nuclear repulsion e",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.ExternalPotential.html:435,charge,charge,435,psi4manual/1.8.x/api/psi4.core.ExternalPotential.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.ExternalPotential.html,8,"['charge', 'energy']","['charge', 'energy']"
Energy Efficiency,"﻿. ExternalPotential. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; ExternalPotential. ExternalPotential¶. class psi4.core.ExternalPotential¶; Bases: pybind11_object; Stores external potential field, computes external potential matrix; Methods Summary. addBasis(self, basis, coefs); Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self, Z, x, y, z); Add a charge Z at (x,y,z). appendCharges(self, arg0); Append a vector of charge tuples to a current ExternalPotential. clear(self); Reset the field to zero (eliminates all entries). computeExternExternInteraction(self, arg0); Compute the interaction between this potential and other external potential. computeNuclearEnergy(self, arg0); Compute the contribution to the nuclear repulsion energy for the given molecule. computePotentialMatrix(self, basis); Compute the external potential matrix in the given basis set. getCharges(self); Get the vector of charge tuples. gradient_on_charges(self); Get the gradient on the embedded charges. print_out(self); Print python print helper to the outfile. setName(self, arg0); Sets the name. Methods Documentation. addBasis(self: psi4.core.ExternalPotential, basis: psi4.core.BasisSet, coefs: psi4.core.Vector) → None¶; Add a basis of S auxiliary functions iwth Df coefficients. addCharge(self: psi4.core.ExternalPotential, Z: float, x: float, y: float, z: float) → None¶; Add a charge Z at (x,y,z). appendCharges(self: psi4.core.ExternalPotential, arg0: List[Tuple[float, float, float, float]]) → None¶; Append a vector of charge tuples to a current ExternalPotential. clear(self: psi4.core.ExternalPotential) → None¶; Reset the field to zero (eliminates all entries). computeExternExternInteraction(self: psi4.core.ExternalPotential, arg0: psi4.core.ExternalPotential) → float¶; Compute the interaction between this potential and other external potential. computeNuclearEnergy(self: psi4.core.ExternalPotential, arg0: psi4.core.Mo",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.ExternalPotential.html:435,charge,charge,435,psi4manual/1.9.x/api/psi4.core.ExternalPotential.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.ExternalPotential.html,8,"['charge', 'energy']","['charge', 'energy']"
Energy Efficiency,"﻿. FINDIF — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. Table Of Contents. FINDIF; General; DISP_SIZE; POINTS. Previous topic; MP2_SS_SCALE; Next topic; DISP_SIZE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__findif-1.html:195,energy,energy,195,psi4manual/4.0b2/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__findif-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FINDIF — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. Table Of Contents. FINDIF; General; DISP_SIZE; POINTS. Previous topic; MP2_SS_SCALE; Next topic; DISP_SIZE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__findif-1.html:210,energy,energy,210,psi4manual/4.0b3/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__findif-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FINDIF — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. Table Of Contents. FINDIF; General; DISP_SIZE; GRADIENT_WRITE; HESSIAN_WRITE; POINTS. Previous topic; SAPT_MEM_FACTOR; Next topic; DISP_SIZE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__findif-1.html:210,energy,energy,210,psi4manual/4.0b4/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__findif-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FINDIF — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. Table Of Contents. FINDIF; General; DISP_SIZE; GRADIENT_WRITE; HESSIAN_WRITE; POINTS. Previous topic; OPDM_RELAX; Next topic; DISP_SIZE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__findif-1.html:210,energy,energy,210,psi4manual/4.0b5/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__findif-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FINDIF — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. Table Of Contents. FINDIF; General; DISP_SIZE; GRADIENT_WRITE; HESSIAN_WRITE; POINTS. Previous topic; QMEFP_POL; Next topic; DISP_SIZE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__findif-1.html:217,energy,energy,217,psi4manual/1.0.0/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__findif-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FINDIF. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FINDIF. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__findif.html:180,energy,energy,180,psi4manual/master/autodir_options_c/module__findif.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__findif.html,2,['energy'],['energy']
Energy Efficiency,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__findif-1.html:163,energy,energy,163,psi4manual/1.1.0/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__findif-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__findif-1.html:165,energy,energy,165,psi4manual/1.2.1/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__findif-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__findif-1.html:165,energy,energy,165,psi4manual/1.3.2/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__findif-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FINDIF. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FINDIF. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__findif-1.html:171,energy,energy,171,psi4manual/1.4.0/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__findif-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FINDIF. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FINDIF. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__findif-1.html:171,energy,energy,171,psi4manual/1.5.0/autodir_options_c/module__findif-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__findif-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FINDIF. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FINDIF. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__findif.html:171,energy,energy,171,psi4manual/1.6.x/autodir_options_c/module__findif.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__findif.html,2,['energy'],['energy']
Energy Efficiency,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FINDIF. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FINDIF. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__findif.html:171,energy,energy,171,psi4manual/1.7.x/autodir_options_c/module__findif.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__findif.html,2,['energy'],['energy']
Energy Efficiency,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FINDIF. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FINDIF. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__findif.html:173,energy,energy,173,psi4manual/1.8.x/autodir_options_c/module__findif.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__findif.html,2,['energy'],['energy']
Energy Efficiency,"﻿. FINDIF. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FINDIF. FINDIF¶; Performs finite difference computations of energy derivative, with respect to nuclear displacements for geometry optimizations and vibrational frequency analyses, where the required analytical derivatives are not available. General¶. DISP_SIZE¶. Displacement size in au for finite-differences. Type: double; Default: 0.005. FD_PROJECT¶. Do discount rotational degrees of freedom in a finite difference frequency calculation. Turned off at non-stationary geometries and in the presence of external perturbations. Type: boolean; Default: true. GRADIENT_WRITE¶. Do write a gradient output file? If so, the filename will end in .grad, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. HESSIAN_WRITE¶. Do write a hessian output file? If so, the filename will end in .hess, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. NORMAL_MODES_WRITE¶. Do write a file containing the normal modes in Molden format? If so, the filename will end in .molden_normal_modes, and the prefix is determined by WRITER_FILE_LABEL (if set), or else by the name of the output file plus the name of the current molecule. Type: boolean; Default: false. POINTS¶. Number of points for finite-differences (3 or 5). Type: integer; Default: 3. table of contents. FINDIF; General; DISP_SIZE; FD_PROJECT; GRADIENT_WRITE; HESSIAN_WRITE; NORMAL_MODES_WRITE; POINTS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FINDIF. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__findif.html:173,energy,energy,173,psi4manual/1.9.x/autodir_options_c/module__findif.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__findif.html,2,['energy'],['energy']
Energy Efficiency,"﻿. FISAPT — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». FISAPT¶. General¶. CUBIC_GRID_OVERAGE¶. CubicScalarGrid spatial extent in bohr [O_X, O_Y, O_Z]. Defaults to 4.0 bohr each. Type: array; Default: No Default. CUBIC_GRID_SPACING¶. CubicScalarGrid grid spacing in bohr [D_X, D_Y, D_Z]. Defaults to 0.2 bohr each. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT term. Type: conv double; Default: 1e-8. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. FISAPT_DO_FSAPT¶. Do an F-SAPT analysis?. Type: boolean; Default: true. FISAPT_DO_PLOT¶. Plot a scalar-field analysis. Type: boolean; Default: false. FISAPT_FSAPT_EXCH_SCALE¶. Do F-SAPT exchange scaling? (ratio of S^infty to S^2). Type: boolean; Default: true. FISAPT_FSAPT_FILEPATH¶. Filepath to drop F-SAPT data. Type: string; Default: fsapt/. FISAPT_FSAPT_IND_RESPONSE¶. Do F-SAPT coupled response? (not recommended). Type: boolean; Default: false. FISAPT_FSAPT_IND_SCALE¶. Do F-SAPT induction scaling? (ratio of HF induction to F-SAPT induction). Type: boolean; Default: true. FISAPT_FSSAPT_FILEPATH¶. Filepath to drop sSAPT0 exchange-scaling F-SAPT data. Type: string; Default: s-fsapt/. FISAPT_LINK_ASSIGNMENT¶. Where do sigma links go (to C or to AB)?. Type: string; Possible Values: C, AB; Default: C. FISAPT_LINK_SELECTION¶. Specification algorithm for link bonds in ISAPT. Type: string; Possible Values: AUTOMATIC, MANUAL; Default: AUTOMATIC. FISAPT_MANUAL_LINKS¶. Manual link bond specification [[Atom1, Atom2], ...]. Type: array; Default: No Default. FISAPT_PLOT_FILEPATH¶. Filepath to drop scalar data. Type: string; Default: plot/. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. For ISAPT, a variational collapse problem seems to occur for even rat",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__fisapt-1.html:634,charge,charge,634,psi4manual/1.0.0/autodir_options_c/module__fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__fisapt-1.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FISAPT. FISAPT¶. General¶. CPHF_R_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. CUBIC_GRID_OVERAGE¶. CubicScalarGrid spatial extent in bohr [O_X, O_Y, O_Z]. Defaults to 4.0 bohr each. Type: array; Default: No Default. CUBIC_GRID_SPACING¶. CubicScalarGrid grid spacing in bohr [D_X, D_Y, D_Z]. Defaults to 0.2 bohr each. Type: array; Default: No Default. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. FISAPT_CUBE_DENSMAT¶. Generate cube files for fragment density matrices?. Type: boolean; Default: false. FISAPT_CUBE_LINKIBOS¶. Generate cube files for unsplit link orbitals (IBOs)?. Type: boolean; Default: false. FISAPT_CUBE_LINKIHOS¶. Generate cube files for split link orbitals (IHOs)?. Type: boolean; Default: false. FISAPT_DO_FSAPT¶. Do an F-SAPT analysis?. Type: boolean; Default: true. FISAPT_DO_FSAPT_DISP¶. Do F-SAPT Dispersion?. Type: boolean; Default: true. FISAPT_DO_PLOT¶. Plot a scalar-field analysis. Type: boolean; Default: false. FISAPT_EXCH_PARPERP¶. Calculate separate exchange corrections for parallel and perpendicular spin coupling of link orbitals? When false, only the averaged out exchange corrections are computed. Type: boolean; Default: false. FISAPT_FSAPT_EXCH_SCALE¶. Do F-SAPT exchange scaling? (ratio of S^infty to S^2). Type: boolean; Default: true. FISAPT_FSAPT_FILEPATH¶. Filepath to drop F-SAPT data within input file directory. Type: string; Default: fsapt/. FISAPT_FSAPT_IND_RESPONSE¶. Do F-SAPT coupled response? (not recommended). Type: boolean; Default: false. FISAPT_FSAPT_IND_SCALE¶. Do F-SAPT induction scaling? (ratio of HF induction to F-SAPT induction). Type: boolean; Default: true. FISAPT_FSSAPT_FILEPATH¶. Filepath to drop sSAPT0 exchange-scaling F-S",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__fisapt.html:626,charge,charge,626,psi4manual/master/autodir_options_c/module__fisapt.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__fisapt.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; FISAPT. FISAPT¶. CURRENT ENERGY; SAPT DISP ENERGY; SAPT DISP20 ENERGY; SAPT ELST ENERGY; SAPT ELST EXTERN-EXTERN ENERGY; SAPT ELST10,R ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP20(S^INF) ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT HF(2) ENERGY A(0); SAPT HF(2) ENERGY A(HF); SAPT HF(2) ENERGY AB(HF); SAPT HF(2) ENERGY ABC(HF); SAPT HF(2) ENERGY AC(0); SAPT HF(2) ENERGY AC(HF); SAPT HF(2) ENERGY B(0); SAPT HF(2) ENERGY B(HF); SAPT HF(2) ENERGY BC(0); SAPT HF(2) ENERGY BC(HF); SAPT HF(2) ENERGY C; SAPT HF(2) ENERGY HF; SAPT IND ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT TOTAL ENERGY; SAPT0 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; FISAPT. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_psivariables/module__fisapt.html:150,ENERGY,ENERGY,150,psi4manual/master/autodir_psivariables/module__fisapt.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_psivariables/module__fisapt.html,30,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; FISAPT. FISAPT¶. class psi4.core.FISAPT¶; Bases: pybind11_object; A Fragment-SAPT Wavefunction; Methods Summary. coulomb(self); Build the J/K potentials for C, D, and E. dHF(self); SAPT0 delta HF. disp(self, arg0, arg1, arg2); Computes the MP2-based DispE20 and Exch-DispE20 energy. do_cubes(self); Prepare cube files for orbital/density pictures. elst(self); SAPT0 electrostatics. exch(self); SAPT0 exchange. fdisp(self); F-SAPT0 dispersion. felst(self); F-SAPT0 electrostatics. fexch(self); F-SAPT0 exchange. find(self); F-SAPT0 induction. flocalize(self); F-SAPT0 localize. freeze_core(self); Freeze the core orbitals. ind(self); SAPT0 induction. kinetic(self); Build the kinetic integrals T. localize(self); Localize the active occupied orbitals via IBO2. matrices(self); Return the interally computed matrices (not copied). molecule(self); Returns the FISAPT's molecule. nuclear(self); Build the nuclear potentials V and interaction energies. overlap(self); Build the overlap integrals S. partition(self); Partition the nuclei and electrons. print_header(self); Print header, bases, sizes, etc. print_trailer(self); Print SAPT results. raw_plot(self, arg0); Plot some analysis files. scalars(self); Return the interally computed scalars (not copied). scf(self); Solve the relaxed SCF equations for A0 and B0. sinf_disp(self, arg0, arg1, arg2); Computes the MP2-based DispE20 and Exch-DispE20 energy without S^2. unify(self); Produce unified matrices for A', B', and C'. unify_part2(self); Finish producing unified matrices for A', B', and C'. vectors(self); Return the interally computed vectors (not copied). Methods Documentation. coulomb(self: psi4.core.FISAPT) → None¶; Build the J/K potentials for C, D, and E. dHF(self: psi4.core.FISAPT) → None¶; SAPT0 delta HF. disp(self: psi4.core.FISAPT, arg0: dict[str, psi4.core.Matrix], arg1: dict[str, psi4.core.Vector], arg2: ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.FISAPT.html:397,energy,energy,397,psi4manual/master/api/psi4.core.FISAPT.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.FISAPT.html,2,['energy'],['energy']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. FISAPT¶. General¶. CUBIC_GRID_OVERAGE¶. CubicScalarGrid spatial extent in bohr [O_X, O_Y, O_Z]. Defaults to 4.0 bohr each. Type: array; Default: No Default. CUBIC_GRID_SPACING¶. CubicScalarGrid grid spacing in bohr [D_X, D_Y, D_Z]. Defaults to 0.2 bohr each. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. FISAPT_DO_FSAPT¶. Do an F-SAPT analysis?. Type: boolean; Default: true. FISAPT_DO_PLOT¶. Plot a scalar-field analysis. Type: boolean; Default: false. FISAPT_FSAPT_EXCH_SCALE¶. Do F-SAPT exchange scaling? (ratio of S^infty to S^2). Type: boolean; Default: true. FISAPT_FSAPT_FILEPATH¶. Filepath to drop F-SAPT data. Type: string; Default: fsapt/. FISAPT_FSAPT_IND_RESPONSE¶. Do F-SAPT coupled response? (not recommended). Type: boolean; Default: false. FISAPT_FSAPT_IND_SCALE¶. Do F-SAPT induction scaling? (ratio of HF induction to F-SAPT induction). Type: boolean; Default: true. FISAPT_FSSAPT_FILEPATH¶. Filepath to drop sSAPT0 exchange-scaling F-SAPT data. Type: string; Default: s-fsapt/. FISAPT_LINK_ASSIGNMENT¶. Where do sigma links go (to C or to AB)?. Type: string; Possible Values: C, AB; Default: C. FISAPT_LINK_SELECTION¶. Specification algorithm for link bonds in ISAPT. Type: string; Possible Values: AUTOMATIC, MANUAL; Default: AUTOMATIC. FISAPT_MANUAL_LINKS¶. Manual link bond specification [[Atom1, Atom2], ...]. Type: array; Default: No Default. FISAPT_PLOT_FILEPATH¶. Filepath to drop scalar data. Type: string; Default: plot/. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. Type: conv double; Default: 0.0. LOCAL_CONVERGENCE¶. Relative convergence in orbital localization. ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__fisapt-1.html:604,charge,charge,604,psi4manual/1.1.0/autodir_options_c/module__fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__fisapt-1.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. FISAPT¶. General¶. CUBIC_GRID_OVERAGE¶. CubicScalarGrid spatial extent in bohr [O_X, O_Y, O_Z]. Defaults to 4.0 bohr each. Type: array; Default: No Default. CUBIC_GRID_SPACING¶. CubicScalarGrid grid spacing in bohr [D_X, D_Y, D_Z]. Defaults to 0.2 bohr each. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. FISAPT_DO_FSAPT¶. Do an F-SAPT analysis?. Type: boolean; Default: true. FISAPT_DO_PLOT¶. Plot a scalar-field analysis. Type: boolean; Default: false. FISAPT_FSAPT_EXCH_SCALE¶. Do F-SAPT exchange scaling? (ratio of S^infty to S^2). Type: boolean; Default: true. FISAPT_FSAPT_FILEPATH¶. Filepath to drop F-SAPT data. Type: string; Default: fsapt/. FISAPT_FSAPT_IND_RESPONSE¶. Do F-SAPT coupled response? (not recommended). Type: boolean; Default: false. FISAPT_FSAPT_IND_SCALE¶. Do F-SAPT induction scaling? (ratio of HF induction to F-SAPT induction). Type: boolean; Default: true. FISAPT_FSSAPT_FILEPATH¶. Filepath to drop sSAPT0 exchange-scaling F-SAPT data. Type: string; Default: s-fsapt/. FISAPT_LINK_ASSIGNMENT¶. Where do sigma links go (to C or to AB)?. Type: string; Possible Values: C, AB; Default: C. FISAPT_LINK_SELECTION¶. Specification algorithm for link bonds in ISAPT. Type: string; Possible Values: AUTOMATIC, MANUAL; Default: AUTOMATIC. FISAPT_MANUAL_LINKS¶. Manual link bond specification [[Atom1, Atom2], …]. Type: array; Default: No Default. FISAPT_PLOT_FILEPATH¶. Filepath to drop scalar data. Type: string; Default: plot/. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. Type: conv double; Default: 0.0. LOCAL_CONVERGENCE¶. Relative convergence in orbital localization. ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__fisapt-1.html:606,charge,charge,606,psi4manual/1.2.1/autodir_options_c/module__fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__fisapt-1.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. FISAPT¶. class psi4.core.FISAPT¶; Bases: pybind11_builtins.pybind11_object; A Fragment-SAPT Wavefunction; Methods Summary. compute_energy(self); Computes the FSAPT energy. disp(self, arg0, psi4.core.Matrix], arg1, …); Computes the MP2-based DispE20 and Exch-DispE20 energy. scalars(self); Return the interally computed scalars. Methods Documentation. compute_energy(self: psi4.core.FISAPT) → None¶; Computes the FSAPT energy. disp(self: psi4.core.FISAPT, arg0: Dict[str, psi4.core.Matrix], arg1: Dict[str, psi4.core.Vector], arg2: bool) → None¶; Computes the MP2-based DispE20 and Exch-DispE20 energy. scalars(self: psi4.core.FISAPT) → Dict[str, float]¶; Return the interally computed scalars. compute_energy(self: psi4.core.FISAPT) → None; Computes the FSAPT energy. disp(self: psi4.core.FISAPT, arg0: Dict[str, psi4.core.Matrix], arg1: Dict[str, psi4.core.Vector], arg2: bool) → None; Computes the MP2-based DispE20 and Exch-DispE20 energy. scalars(self: psi4.core.FISAPT) → Dict[str, float]; Return the interally computed scalars. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.fisapt.html:279,energy,energy,279,psi4manual/1.2.1/api/psi4.core.fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.fisapt.html,6,['energy'],['energy']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. FISAPT¶. General¶. CUBIC_GRID_OVERAGE¶. CubicScalarGrid spatial extent in bohr [O_X, O_Y, O_Z]. Defaults to 4.0 bohr each. Type: array; Default: No Default. CUBIC_GRID_SPACING¶. CubicScalarGrid grid spacing in bohr [D_X, D_Y, D_Z]. Defaults to 0.2 bohr each. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. FISAPT_DO_FSAPT¶. Do an F-SAPT analysis?. Type: boolean; Default: true. FISAPT_DO_PLOT¶. Plot a scalar-field analysis. Type: boolean; Default: false. FISAPT_FSAPT_EXCH_SCALE¶. Do F-SAPT exchange scaling? (ratio of S^infty to S^2). Type: boolean; Default: true. FISAPT_FSAPT_FILEPATH¶. Filepath to drop F-SAPT data within input file directory. Type: string; Default: fsapt/. FISAPT_FSAPT_IND_RESPONSE¶. Do F-SAPT coupled response? (not recommended). Type: boolean; Default: false. FISAPT_FSAPT_IND_SCALE¶. Do F-SAPT induction scaling? (ratio of HF induction to F-SAPT induction). Type: boolean; Default: true. FISAPT_FSSAPT_FILEPATH¶. Filepath to drop sSAPT0 exchange-scaling F-SAPT data within input file directory. Type: string; Default: s-fsapt/. FISAPT_LINK_ASSIGNMENT¶. Where do sigma links go (to C or to AB)?. Type: string; Possible Values: C, AB; Default: C. FISAPT_LINK_SELECTION¶. Specification algorithm for link bonds in ISAPT. Type: string; Possible Values: AUTOMATIC, MANUAL; Default: AUTOMATIC. FISAPT_MANUAL_LINKS¶. Manual link bond specification [[Atom1, Atom2], …]. Type: array; Default: No Default. FISAPT_PLOT_FILEPATH¶. Filepath to drop scalar data within input file directory. Type: string; Default: plot/. INTS_TOLERANCE¶. Schwarz screening threshold. Mininum absolute value below which TEI are neg",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__fisapt-1.html:606,charge,charge,606,psi4manual/1.3.2/autodir_options_c/module__fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__fisapt-1.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. FISAPT¶. class psi4.core.FISAPT¶; Bases: pybind11_builtins.pybind11_object; A Fragment-SAPT Wavefunction; Methods Summary. coulomb(self); Build the J/K potentials for C, D, and E. dHF(self); SAPT0 delta HF. disp(self, arg0, psi4.core.Matrix], arg1, …); Computes the MP2-based DispE20 and Exch-DispE20 energy. elst(self); SAPT0 electrostatics. exch(self); SAPT0 exchange. fdisp(self); F-SAPT0 dispersion. felst(self); F-SAPT0 electrostatics. fexch(self); F-SAPT0 exchange. find(self); F-SAPT0 induction. flocalize(self); F-SAPT0 localize. freeze_core(self); Freeze the core orbitals. ind(self); SAPT0 induction. kinetic(self); Build the kinetic integrals T. localize(self); Localize the active occupied orbitals via IBO2. matrices(self); Return the interally computed matrices (not copied). molecule(self); Returns the FISAPT’s molecule. nuclear(self); Build the nuclear potentials V and interaction energies. overlap(self); Build the overlap integrals S. partition(self); Partition the nuclei and electrons. print_header(self); Print header, bases, sizes, etc. print_trailer(self); Print SAPT results. raw_plot(self, arg0); Plot some analysis files. scalars(self); Return the interally computed scalars (not copied). scf(self); Solve the relaxed SCF equations for A0 and B0. unify(self); Produce unified matrices for A’, B’, and C’. vectors(self); Return the interally computed vectors (not copied). Methods Documentation. coulomb(self: psi4.core.FISAPT) → None¶; Build the J/K potentials for C, D, and E. dHF(self: psi4.core.FISAPT) → None¶; SAPT0 delta HF. disp(self: psi4.core.FISAPT, arg0: Dict[str, psi4.core.Matrix], arg1: Dict[str, psi4.core.Vector], arg2: bool) → None¶; Computes the MP2-based DispE20 and Exch-DispE20 energy. elst(self: psi4.core.FISAPT) → None¶; SAPT0 electrostatics. exch(self: psi4.core.FISAPT) → None¶; SAPT0 exchange. fdisp(self: psi4.core.FISAPT) → None¶",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.fisapt.html:416,energy,energy,416,psi4manual/1.3.2/api/psi4.core.fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.fisapt.html,1,['energy'],['energy']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FISAPT. FISAPT¶. General¶. CUBIC_GRID_OVERAGE¶. CubicScalarGrid spatial extent in bohr [O_X, O_Y, O_Z]. Defaults to 4.0 bohr each. Type: array; Default: No Default. CUBIC_GRID_SPACING¶. CubicScalarGrid grid spacing in bohr [D_X, D_Y, D_Z]. Defaults to 0.2 bohr each. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. FISAPT_DO_FSAPT¶. Do an F-SAPT analysis?. Type: boolean; Default: true. FISAPT_DO_FSAPT_DISP¶. Do F-SAPT Dispersion?. Type: boolean; Default: true. FISAPT_DO_PLOT¶. Plot a scalar-field analysis. Type: boolean; Default: false. FISAPT_FSAPT_EXCH_SCALE¶. Do F-SAPT exchange scaling? (ratio of S^infty to S^2). Type: boolean; Default: true. FISAPT_FSAPT_FILEPATH¶. Filepath to drop F-SAPT data within input file directory. Type: string; Default: fsapt/. FISAPT_FSAPT_IND_RESPONSE¶. Do F-SAPT coupled response? (not recommended). Type: boolean; Default: false. FISAPT_FSAPT_IND_SCALE¶. Do F-SAPT induction scaling? (ratio of HF induction to F-SAPT induction). Type: boolean; Default: true. FISAPT_FSSAPT_FILEPATH¶. Filepath to drop sSAPT0 exchange-scaling F-SAPT data within input file directory. Type: string; Default: s-fsapt/. FISAPT_LINK_ASSIGNMENT¶. Where do sigma links go (to C or to AB)?. Type: string; Possible Values: C, AB; Default: C. FISAPT_LINK_SELECTION¶. Specification algorithm for link bonds in ISAPT. Type: string; Possible Values: AUTOMATIC, MANUAL; Default: AUTOMATIC. FISAPT_MANUAL_LINKS¶. Manual link bond specification [[Atom1, Atom2], …]. Type: array; Default: No Default. FISAPT_PLOT_FILEPATH¶. Filepath to drop scalar data within input file directory. Type: string; Default: plot/. INTS_TOLER",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__fisapt-1.html:612,charge,charge,612,psi4manual/1.4.0/autodir_options_c/module__fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__fisapt-1.html,4,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; FISAPT. FISAPT¶. CURRENT ENERGY; SAPT DISP ENERGY; SAPT DISP20 ENERGY; SAPT ELST ENERGY; SAPT ELST EXTERN-EXTERN ENERGY; SAPT ELST10,R ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP20(S^INF) ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT HF(2) ENERGY A(0); SAPT HF(2) ENERGY A(HF); SAPT HF(2) ENERGY AB(HF); SAPT HF(2) ENERGY ABC(HF); SAPT HF(2) ENERGY AC(0); SAPT HF(2) ENERGY AC(HF); SAPT HF(2) ENERGY B(0); SAPT HF(2) ENERGY B(HF); SAPT HF(2) ENERGY BC(0); SAPT HF(2) ENERGY BC(HF); SAPT HF(2) ENERGY C; SAPT HF(2) ENERGY HF; SAPT IND ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT TOTAL ENERGY; SAPT0 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; FISAPT. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__fisapt-1.html:141,ENERGY,ENERGY,141,psi4manual/1.4.0/autodir_psivariables/module__fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__fisapt-1.html,60,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; FISAPT. FISAPT¶. class psi4.core.FISAPT¶; Bases: pybind11_builtins.pybind11_object; A Fragment-SAPT Wavefunction; Methods Summary. compute_energy([external_potentials]); Computes the FSAPT energy. coulomb(self); Build the J/K potentials for C, D, and E. dHF(self); SAPT0 delta HF. disp(self, arg0, psi4.core.Matrix], arg1, …); Computes the MP2-based DispE20 and Exch-DispE20 energy. elst(self); SAPT0 electrostatics. exch(self); SAPT0 exchange. fdisp(self); F-SAPT0 dispersion. fdrop([external_potentials]); Drop output files from FSAPT calculation. felst(self); F-SAPT0 electrostatics. fexch(self); F-SAPT0 exchange. find(self); F-SAPT0 induction. flocalize(self); F-SAPT0 localize. freeze_core(self); Freeze the core orbitals. ind(self); SAPT0 induction. kinetic(self); Build the kinetic integrals T. localize(self); Localize the active occupied orbitals via IBO2. matrices(self); Return the interally computed matrices (not copied). molecule(self); Returns the FISAPT’s molecule. nuclear(self); Build the nuclear potentials V and interaction energies. overlap(self); Build the overlap integrals S. partition(self); Partition the nuclei and electrons. plot(); Filesystem wrapper for FISAPT::plot. print_header(self); Print header, bases, sizes, etc. print_trailer(self); Print SAPT results. raw_plot(self, arg0); Plot some analysis files. scalars(self); Return the interally computed scalars (not copied). scf(self); Solve the relaxed SCF equations for A0 and B0. sinf_disp(self, arg0, psi4.core.Matrix], …); Computes the MP2-based DispE20 and Exch-DispE20 energy without S^2. unify(self); Produce unified matrices for A’, B’, and C’. vectors(self); Return the interally computed vectors (not copied). Methods Documentation. compute_energy(external_potentials=None)¶; Computes the FSAPT energy. FISAPT::compute_energy. coulomb(self: psi4.core.FISAPT) → None¶; Build the J/K potentials f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.fisapt.html:302,energy,energy,302,psi4manual/1.4.0/api/psi4.core.fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.fisapt.html,2,['energy'],['energy']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FISAPT. FISAPT¶. General¶. CUBIC_GRID_OVERAGE¶. CubicScalarGrid spatial extent in bohr [O_X, O_Y, O_Z]. Defaults to 4.0 bohr each. Type: array; Default: No Default. CUBIC_GRID_SPACING¶. CubicScalarGrid grid spacing in bohr [D_X, D_Y, D_Z]. Defaults to 0.2 bohr each. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. FISAPT_DO_FSAPT¶. Do an F-SAPT analysis?. Type: boolean; Default: true. FISAPT_DO_FSAPT_DISP¶. Do F-SAPT Dispersion?. Type: boolean; Default: true. FISAPT_DO_PLOT¶. Plot a scalar-field analysis. Type: boolean; Default: false. FISAPT_FSAPT_EXCH_SCALE¶. Do F-SAPT exchange scaling? (ratio of S^infty to S^2). Type: boolean; Default: true. FISAPT_FSAPT_FILEPATH¶. Filepath to drop F-SAPT data within input file directory. Type: string; Default: fsapt/. FISAPT_FSAPT_IND_RESPONSE¶. Do F-SAPT coupled response? (not recommended). Type: boolean; Default: false. FISAPT_FSAPT_IND_SCALE¶. Do F-SAPT induction scaling? (ratio of HF induction to F-SAPT induction). Type: boolean; Default: true. FISAPT_FSSAPT_FILEPATH¶. Filepath to drop sSAPT0 exchange-scaling F-SAPT data within input file directory. Type: string; Default: s-fsapt/. FISAPT_LINK_ASSIGNMENT¶. Where do sigma links go (to C or to AB)?. Type: string; Possible Values: C, AB; Default: C. FISAPT_LINK_SELECTION¶. Specification algorithm for link bonds in ISAPT. Type: string; Possible Values: AUTOMATIC, MANUAL; Default: AUTOMATIC. FISAPT_MANUAL_LINKS¶. Manual link bond specification [[Atom1, Atom2], …]. Type: array; Default: No Default. FISAPT_PLOT_FILEPATH¶. Filepath to drop scalar data within input file directory. Type: string; Default: plot/. INTS_TOLER",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__fisapt-1.html:612,charge,charge,612,psi4manual/1.5.0/autodir_options_c/module__fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__fisapt-1.html,4,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; FISAPT. FISAPT¶. CURRENT ENERGY; SAPT DISP ENERGY; SAPT DISP20 ENERGY; SAPT ELST ENERGY; SAPT ELST EXTERN-EXTERN ENERGY; SAPT ELST10,R ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP20(S^INF) ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT HF(2) ENERGY A(0); SAPT HF(2) ENERGY A(HF); SAPT HF(2) ENERGY AB(HF); SAPT HF(2) ENERGY ABC(HF); SAPT HF(2) ENERGY AC(0); SAPT HF(2) ENERGY AC(HF); SAPT HF(2) ENERGY B(0); SAPT HF(2) ENERGY B(HF); SAPT HF(2) ENERGY BC(0); SAPT HF(2) ENERGY BC(HF); SAPT HF(2) ENERGY C; SAPT HF(2) ENERGY HF; SAPT IND ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT TOTAL ENERGY; SAPT0 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; FISAPT. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__fisapt-1.html:141,ENERGY,ENERGY,141,psi4manual/1.5.0/autodir_psivariables/module__fisapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__fisapt-1.html,60,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; FISAPT. FISAPT¶. class psi4.core.FISAPT¶; Bases: pybind11_builtins.pybind11_object; A Fragment-SAPT Wavefunction; Methods Summary. compute_energy([external_potentials]); Computes the FSAPT energy. coulomb(self); Build the J/K potentials for C, D, and E. dHF(self); SAPT0 delta HF. disp(self, arg0, arg1, arg2); Computes the MP2-based DispE20 and Exch-DispE20 energy. elst(self); SAPT0 electrostatics. exch(self); SAPT0 exchange. fdisp(self); F-SAPT0 dispersion. fdrop([external_potentials]); Drop output files from FSAPT calculation. felst(self); F-SAPT0 electrostatics. fexch(self); F-SAPT0 exchange. find(self); F-SAPT0 induction. flocalize(self); F-SAPT0 localize. freeze_core(self); Freeze the core orbitals. ind(self); SAPT0 induction. kinetic(self); Build the kinetic integrals T. localize(self); Localize the active occupied orbitals via IBO2. matrices(self); Return the interally computed matrices (not copied). molecule(self); Returns the FISAPT's molecule. nuclear(self); Build the nuclear potentials V and interaction energies. overlap(self); Build the overlap integrals S. partition(self); Partition the nuclei and electrons. plot(); Filesystem wrapper for FISAPT::plot. print_header(self); Print header, bases, sizes, etc. print_trailer(self); Print SAPT results. raw_plot(self, arg0); Plot some analysis files. scalars(self); Return the interally computed scalars (not copied). scf(self); Solve the relaxed SCF equations for A0 and B0. sinf_disp(self, arg0, arg1, arg2); Computes the MP2-based DispE20 and Exch-DispE20 energy without S^2. unify(self); Produce unified matrices for A', B', and C'. vectors(self); Return the interally computed vectors (not copied). Methods Documentation. compute_energy(external_potentials=None)¶; Computes the FSAPT energy. FISAPT::compute_energy. coulomb(self: psi4.core.FISAPT) → None¶; Build the J/K potentials for C, D, and E. dHF(self: ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.fisapt.html:302,energy,energy,302,psi4manual/1.5.0/api/psi4.core.fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.fisapt.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FISAPT. FISAPT¶. General¶. CUBIC_GRID_OVERAGE¶. CubicScalarGrid spatial extent in bohr [O_X, O_Y, O_Z]. Defaults to 4.0 bohr each. Type: array; Default: No Default. CUBIC_GRID_SPACING¶. CubicScalarGrid grid spacing in bohr [D_X, D_Y, D_Z]. Defaults to 0.2 bohr each. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. FISAPT_DO_FSAPT¶. Do an F-SAPT analysis?. Type: boolean; Default: true. FISAPT_DO_FSAPT_DISP¶. Do F-SAPT Dispersion?. Type: boolean; Default: true. FISAPT_DO_PLOT¶. Plot a scalar-field analysis. Type: boolean; Default: false. FISAPT_FSAPT_EXCH_SCALE¶. Do F-SAPT exchange scaling? (ratio of S^infty to S^2). Type: boolean; Default: true. FISAPT_FSAPT_FILEPATH¶. Filepath to drop F-SAPT data within input file directory. Type: string; Default: fsapt/. FISAPT_FSAPT_IND_RESPONSE¶. Do F-SAPT coupled response? (not recommended). Type: boolean; Default: false. FISAPT_FSAPT_IND_SCALE¶. Do F-SAPT induction scaling? (ratio of HF induction to F-SAPT induction). Type: boolean; Default: true. FISAPT_FSSAPT_FILEPATH¶. Filepath to drop sSAPT0 exchange-scaling F-SAPT data within input file directory. Type: string; Default: s-fsapt/. FISAPT_LINK_ASSIGNMENT¶. Where do sigma links go (to C or to AB)?. Type: string; Possible Values: C, AB; Default: C. FISAPT_LINK_SELECTION¶. Specification algorithm for link bonds in ISAPT. Type: string; Possible Values: AUTOMATIC, MANUAL; Default: AUTOMATIC. FISAPT_MANUAL_LINKS¶. Manual link bond specification [[Atom1, Atom2], …]. Type: array; Default: No Default. FISAPT_PLOT_FILEPATH¶. Filepath to drop scalar data within input file directory. Type: string; Default: plot/. INTS_TOLER",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__fisapt.html:612,charge,charge,612,psi4manual/1.6.x/autodir_options_c/module__fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__fisapt.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; FISAPT. FISAPT¶. CURRENT ENERGY; SAPT DISP ENERGY; SAPT DISP20 ENERGY; SAPT ELST ENERGY; SAPT ELST EXTERN-EXTERN ENERGY; SAPT ELST10,R ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP20(S^INF) ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT HF(2) ENERGY A(0); SAPT HF(2) ENERGY A(HF); SAPT HF(2) ENERGY AB(HF); SAPT HF(2) ENERGY ABC(HF); SAPT HF(2) ENERGY AC(0); SAPT HF(2) ENERGY AC(HF); SAPT HF(2) ENERGY B(0); SAPT HF(2) ENERGY B(HF); SAPT HF(2) ENERGY BC(0); SAPT HF(2) ENERGY BC(HF); SAPT HF(2) ENERGY C; SAPT HF(2) ENERGY HF; SAPT IND ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT TOTAL ENERGY; SAPT0 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; FISAPT. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__fisapt.html:141,ENERGY,ENERGY,141,psi4manual/1.6.x/autodir_psivariables/module__fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__fisapt.html,30,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; FISAPT. FISAPT¶. class psi4.core.FISAPT¶; Bases: pybind11_builtins.pybind11_object; A Fragment-SAPT Wavefunction; Methods Summary. compute_energy([external_potentials]); Computes the FSAPT energy. coulomb(self); Build the J/K potentials for C, D, and E. dHF(self); SAPT0 delta HF. disp(self, arg0, arg1, arg2); Computes the MP2-based DispE20 and Exch-DispE20 energy. elst(self); SAPT0 electrostatics. exch(self); SAPT0 exchange. fdisp(self); F-SAPT0 dispersion. fdrop([external_potentials]); Drop output files from FSAPT calculation. felst(self); F-SAPT0 electrostatics. fexch(self); F-SAPT0 exchange. find(self); F-SAPT0 induction. flocalize(self); F-SAPT0 localize. freeze_core(self); Freeze the core orbitals. ind(self); SAPT0 induction. kinetic(self); Build the kinetic integrals T. localize(self); Localize the active occupied orbitals via IBO2. matrices(self); Return the interally computed matrices (not copied). molecule(self); Returns the FISAPT's molecule. nuclear(self); Build the nuclear potentials V and interaction energies. overlap(self); Build the overlap integrals S. partition(self); Partition the nuclei and electrons. plot(); Filesystem wrapper for FISAPT::plot. print_header(self); Print header, bases, sizes, etc. print_trailer(self); Print SAPT results. raw_plot(self, arg0); Plot some analysis files. scalars(self); Return the interally computed scalars (not copied). scf(self); Solve the relaxed SCF equations for A0 and B0. sinf_disp(self, arg0, arg1, arg2); Computes the MP2-based DispE20 and Exch-DispE20 energy without S^2. unify(self); Produce unified matrices for A', B', and C'. vectors(self); Return the interally computed vectors (not copied). Methods Documentation. compute_energy(external_potentials=None)¶; Computes the FSAPT energy. FISAPT::compute_energy. coulomb(self: psi4.core.FISAPT) → None¶; Build the J/K potentials for C, D, and E. dHF(self: ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.FISAPT.html:302,energy,energy,302,psi4manual/1.6.x/api/psi4.core.FISAPT.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.FISAPT.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FISAPT. FISAPT¶. General¶. CUBIC_GRID_OVERAGE¶. CubicScalarGrid spatial extent in bohr [O_X, O_Y, O_Z]. Defaults to 4.0 bohr each. Type: array; Default: No Default. CUBIC_GRID_SPACING¶. CubicScalarGrid grid spacing in bohr [D_X, D_Y, D_Z]. Defaults to 0.2 bohr each. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. FISAPT_DO_FSAPT¶. Do an F-SAPT analysis?. Type: boolean; Default: true. FISAPT_DO_FSAPT_DISP¶. Do F-SAPT Dispersion?. Type: boolean; Default: true. FISAPT_DO_PLOT¶. Plot a scalar-field analysis. Type: boolean; Default: false. FISAPT_FSAPT_EXCH_SCALE¶. Do F-SAPT exchange scaling? (ratio of S^infty to S^2). Type: boolean; Default: true. FISAPT_FSAPT_FILEPATH¶. Filepath to drop F-SAPT data within input file directory. Type: string; Default: fsapt/. FISAPT_FSAPT_IND_RESPONSE¶. Do F-SAPT coupled response? (not recommended). Type: boolean; Default: false. FISAPT_FSAPT_IND_SCALE¶. Do F-SAPT induction scaling? (ratio of HF induction to F-SAPT induction). Type: boolean; Default: true. FISAPT_FSSAPT_FILEPATH¶. Filepath to drop sSAPT0 exchange-scaling F-SAPT data within input file directory. Type: string; Default: s-fsapt/. FISAPT_LINK_ASSIGNMENT¶. Where do sigma links go (to C or to AB)?. Type: string; Possible Values: C, AB; Default: C. FISAPT_LINK_SELECTION¶. Specification algorithm for link bonds in ISAPT. Type: string; Possible Values: AUTOMATIC, MANUAL; Default: AUTOMATIC. FISAPT_MANUAL_LINKS¶. Manual link bond specification [[Atom1, Atom2], …]. Type: array; Default: No Default. FISAPT_PLOT_FILEPATH¶. Filepath to drop scalar data within input file directory. Type: string; Default: plot/. INTS_TOLER",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__fisapt.html:612,charge,charge,612,psi4manual/1.7.x/autodir_options_c/module__fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__fisapt.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; FISAPT. FISAPT¶. CURRENT ENERGY; SAPT DISP ENERGY; SAPT DISP20 ENERGY; SAPT ELST ENERGY; SAPT ELST EXTERN-EXTERN ENERGY; SAPT ELST10,R ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP20(S^INF) ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT HF(2) ENERGY A(0); SAPT HF(2) ENERGY A(HF); SAPT HF(2) ENERGY AB(HF); SAPT HF(2) ENERGY ABC(HF); SAPT HF(2) ENERGY AC(0); SAPT HF(2) ENERGY AC(HF); SAPT HF(2) ENERGY B(0); SAPT HF(2) ENERGY B(HF); SAPT HF(2) ENERGY BC(0); SAPT HF(2) ENERGY BC(HF); SAPT HF(2) ENERGY C; SAPT HF(2) ENERGY HF; SAPT IND ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT TOTAL ENERGY; SAPT0 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; FISAPT. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__fisapt.html:141,ENERGY,ENERGY,141,psi4manual/1.7.x/autodir_psivariables/module__fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__fisapt.html,30,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; FISAPT. FISAPT¶. class psi4.core.FISAPT¶; Bases: pybind11_object; A Fragment-SAPT Wavefunction; Methods Summary. compute_energy([external_potentials]); Computes the FSAPT energy. coulomb(self); Build the J/K potentials for C, D, and E. dHF(self); SAPT0 delta HF. disp(self, arg0, arg1, arg2); Computes the MP2-based DispE20 and Exch-DispE20 energy. elst(self); SAPT0 electrostatics. exch(self); SAPT0 exchange. fdisp(self); F-SAPT0 dispersion. fdrop([external_potentials]); Drop output files from FSAPT calculation. felst(self); F-SAPT0 electrostatics. fexch(self); F-SAPT0 exchange. find(self); F-SAPT0 induction. flocalize(self); F-SAPT0 localize. freeze_core(self); Freeze the core orbitals. ind(self); SAPT0 induction. kinetic(self); Build the kinetic integrals T. localize(self); Localize the active occupied orbitals via IBO2. matrices(self); Return the interally computed matrices (not copied). molecule(self); Returns the FISAPT's molecule. nuclear(self); Build the nuclear potentials V and interaction energies. overlap(self); Build the overlap integrals S. partition(self); Partition the nuclei and electrons. plot(); Filesystem wrapper for FISAPT::plot. print_header(self); Print header, bases, sizes, etc. print_trailer(self); Print SAPT results. raw_plot(self, arg0); Plot some analysis files. scalars(self); Return the interally computed scalars (not copied). scf(self); Solve the relaxed SCF equations for A0 and B0. sinf_disp(self, arg0, arg1, arg2); Computes the MP2-based DispE20 and Exch-DispE20 energy without S^2. unify(self); Produce unified matrices for A', B', and C'. vectors(self); Return the interally computed vectors (not copied). Methods Documentation. compute_energy(external_potentials=None)¶; Computes the FSAPT energy. FISAPT::compute_energy. coulomb(self: psi4.core.FISAPT) → None¶; Build the J/K potentials for C, D, and E. dHF(self: psi4.core.FISAPT) ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.FISAPT.html:284,energy,energy,284,psi4manual/1.7.x/api/psi4.core.FISAPT.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.FISAPT.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FISAPT. FISAPT¶. General¶. CUBIC_GRID_OVERAGE¶. CubicScalarGrid spatial extent in bohr [O_X, O_Y, O_Z]. Defaults to 4.0 bohr each. Type: array; Default: No Default. CUBIC_GRID_SPACING¶. CubicScalarGrid grid spacing in bohr [D_X, D_Y, D_Z]. Defaults to 0.2 bohr each. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. FISAPT_CUBE_DENSMAT¶. Generate cube files for fragment density matrices?. Type: boolean; Default: false. FISAPT_CUBE_LINKIBOS¶. Generate cube files for unsplit link orbitals (IBOs)?. Type: boolean; Default: false. FISAPT_CUBE_LINKIHOS¶. Generate cube files for split link orbitals (IHOs)?. Type: boolean; Default: false. FISAPT_DO_FSAPT¶. Do an F-SAPT analysis?. Type: boolean; Default: true. FISAPT_DO_FSAPT_DISP¶. Do F-SAPT Dispersion?. Type: boolean; Default: true. FISAPT_DO_PLOT¶. Plot a scalar-field analysis. Type: boolean; Default: false. FISAPT_EXCH_PARPERP¶. Calculate separate exchange corrections for parallel and perpendicular spin coupling of link orbitals? When false, only the averaged out exchange corrections are computed. Type: boolean; Default: false. FISAPT_FSAPT_EXCH_SCALE¶. Do F-SAPT exchange scaling? (ratio of S^infty to S^2). Type: boolean; Default: true. FISAPT_FSAPT_FILEPATH¶. Filepath to drop F-SAPT data within input file directory. Type: string; Default: fsapt/. FISAPT_FSAPT_IND_RESPONSE¶. Do F-SAPT coupled response? (not recommended). Type: boolean; Default: false. FISAPT_FSAPT_IND_SCALE¶. Do F-SAPT induction scaling? (ratio of HF induction to F-SAPT induction). Type: boolean; Default: true. FISAPT_FSSAPT_FILEPATH¶. Filepath to drop sSAPT0 exchange-scaling F-SAPT data wit",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__fisapt.html:614,charge,charge,614,psi4manual/1.8.x/autodir_options_c/module__fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__fisapt.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; FISAPT. FISAPT¶. CURRENT ENERGY; SAPT DISP ENERGY; SAPT DISP20 ENERGY; SAPT ELST ENERGY; SAPT ELST EXTERN-EXTERN ENERGY; SAPT ELST10,R ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP20(S^INF) ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT HF(2) ENERGY A(0); SAPT HF(2) ENERGY A(HF); SAPT HF(2) ENERGY AB(HF); SAPT HF(2) ENERGY ABC(HF); SAPT HF(2) ENERGY AC(0); SAPT HF(2) ENERGY AC(HF); SAPT HF(2) ENERGY B(0); SAPT HF(2) ENERGY B(HF); SAPT HF(2) ENERGY BC(0); SAPT HF(2) ENERGY BC(HF); SAPT HF(2) ENERGY C; SAPT HF(2) ENERGY HF; SAPT IND ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT TOTAL ENERGY; SAPT0 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; FISAPT. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__fisapt.html:143,ENERGY,ENERGY,143,psi4manual/1.8.x/autodir_psivariables/module__fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__fisapt.html,30,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; FISAPT. FISAPT¶. class psi4.core.FISAPT¶; Bases: pybind11_object; A Fragment-SAPT Wavefunction; Methods Summary. compute_energy([external_potentials]); Computes the FSAPT energy. coulomb(self); Build the J/K potentials for C, D, and E. dHF(self); SAPT0 delta HF. disp(self, arg0, arg1, arg2); Computes the MP2-based DispE20 and Exch-DispE20 energy. do_cubes(self); Prepare cube files for orbital/density pictures. elst(self); SAPT0 electrostatics. exch(self); SAPT0 exchange. fdisp(self); F-SAPT0 dispersion. fdrop([external_potentials]); Drop output files from FSAPT calculation. felst(self); F-SAPT0 electrostatics. fexch(self); F-SAPT0 exchange. find(self); F-SAPT0 induction. flocalize(self); F-SAPT0 localize. freeze_core(self); Freeze the core orbitals. ind(self); SAPT0 induction. kinetic(self); Build the kinetic integrals T. localize(self); Localize the active occupied orbitals via IBO2. matrices(self); Return the interally computed matrices (not copied). molecule(self); Returns the FISAPT's molecule. nuclear(self); Build the nuclear potentials V and interaction energies. overlap(self); Build the overlap integrals S. partition(self); Partition the nuclei and electrons. plot(); Filesystem wrapper for FISAPT::plot. print_header(self); Print header, bases, sizes, etc. print_trailer(self); Print SAPT results. raw_plot(self, arg0); Plot some analysis files. scalars(self); Return the interally computed scalars (not copied). scf(self); Solve the relaxed SCF equations for A0 and B0. sinf_disp(self, arg0, arg1, arg2); Computes the MP2-based DispE20 and Exch-DispE20 energy without S^2. unify(self); Produce unified matrices for A', B', and C'. unify_part2(self); Finish producing unified matrices for A', B', and C'. vectors(self); Return the interally computed vectors (not copied). Methods Documentation. compute_energy(external_potentials=None)¶; Computes the FSAPT ene",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.FISAPT.html:286,energy,energy,286,psi4manual/1.8.x/api/psi4.core.FISAPT.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.FISAPT.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FISAPT. FISAPT¶. General¶. CUBIC_GRID_OVERAGE¶. CubicScalarGrid spatial extent in bohr [O_X, O_Y, O_Z]. Defaults to 4.0 bohr each. Type: array; Default: No Default. CUBIC_GRID_SPACING¶. CubicScalarGrid grid spacing in bohr [D_X, D_Y, D_Z]. Defaults to 0.2 bohr each. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. FISAPT_CUBE_DENSMAT¶. Generate cube files for fragment density matrices?. Type: boolean; Default: false. FISAPT_CUBE_LINKIBOS¶. Generate cube files for unsplit link orbitals (IBOs)?. Type: boolean; Default: false. FISAPT_CUBE_LINKIHOS¶. Generate cube files for split link orbitals (IHOs)?. Type: boolean; Default: false. FISAPT_DO_FSAPT¶. Do an F-SAPT analysis?. Type: boolean; Default: true. FISAPT_DO_FSAPT_DISP¶. Do F-SAPT Dispersion?. Type: boolean; Default: true. FISAPT_DO_PLOT¶. Plot a scalar-field analysis. Type: boolean; Default: false. FISAPT_EXCH_PARPERP¶. Calculate separate exchange corrections for parallel and perpendicular spin coupling of link orbitals? When false, only the averaged out exchange corrections are computed. Type: boolean; Default: false. FISAPT_FSAPT_EXCH_SCALE¶. Do F-SAPT exchange scaling? (ratio of S^infty to S^2). Type: boolean; Default: true. FISAPT_FSAPT_FILEPATH¶. Filepath to drop F-SAPT data within input file directory. Type: string; Default: fsapt/. FISAPT_FSAPT_IND_RESPONSE¶. Do F-SAPT coupled response? (not recommended). Type: boolean; Default: false. FISAPT_FSAPT_IND_SCALE¶. Do F-SAPT induction scaling? (ratio of HF induction to F-SAPT induction). Type: boolean; Default: true. FISAPT_FSSAPT_FILEPATH¶. Filepath to drop sSAPT0 exchange-scaling F-SAPT data wit",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__fisapt.html:614,charge,charge,614,psi4manual/1.9.x/autodir_options_c/module__fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__fisapt.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; FISAPT. FISAPT¶. CURRENT ENERGY; SAPT DISP ENERGY; SAPT DISP20 ENERGY; SAPT ELST ENERGY; SAPT ELST EXTERN-EXTERN ENERGY; SAPT ELST10,R ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP20(S^INF) ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT HF(2) ENERGY A(0); SAPT HF(2) ENERGY A(HF); SAPT HF(2) ENERGY AB(HF); SAPT HF(2) ENERGY ABC(HF); SAPT HF(2) ENERGY AC(0); SAPT HF(2) ENERGY AC(HF); SAPT HF(2) ENERGY B(0); SAPT HF(2) ENERGY B(HF); SAPT HF(2) ENERGY BC(0); SAPT HF(2) ENERGY BC(HF); SAPT HF(2) ENERGY C; SAPT HF(2) ENERGY HF; SAPT IND ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT TOTAL ENERGY; SAPT0 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; FISAPT. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__fisapt.html:143,ENERGY,ENERGY,143,psi4manual/1.9.x/autodir_psivariables/module__fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__fisapt.html,30,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. FISAPT. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; FISAPT. FISAPT¶. class psi4.core.FISAPT¶; Bases: pybind11_object; A Fragment-SAPT Wavefunction; Methods Summary. coulomb(self); Build the J/K potentials for C, D, and E. dHF(self); SAPT0 delta HF. disp(self, arg0, arg1, arg2); Computes the MP2-based DispE20 and Exch-DispE20 energy. do_cubes(self); Prepare cube files for orbital/density pictures. elst(self); SAPT0 electrostatics. exch(self); SAPT0 exchange. fdisp(self); F-SAPT0 dispersion. felst(self); F-SAPT0 electrostatics. fexch(self); F-SAPT0 exchange. find(self); F-SAPT0 induction. flocalize(self); F-SAPT0 localize. freeze_core(self); Freeze the core orbitals. ind(self); SAPT0 induction. kinetic(self); Build the kinetic integrals T. localize(self); Localize the active occupied orbitals via IBO2. matrices(self); Return the interally computed matrices (not copied). molecule(self); Returns the FISAPT's molecule. nuclear(self); Build the nuclear potentials V and interaction energies. overlap(self); Build the overlap integrals S. partition(self); Partition the nuclei and electrons. print_header(self); Print header, bases, sizes, etc. print_trailer(self); Print SAPT results. raw_plot(self, arg0); Plot some analysis files. scalars(self); Return the interally computed scalars (not copied). scf(self); Solve the relaxed SCF equations for A0 and B0. sinf_disp(self, arg0, arg1, arg2); Computes the MP2-based DispE20 and Exch-DispE20 energy without S^2. unify(self); Produce unified matrices for A', B', and C'. unify_part2(self); Finish producing unified matrices for A', B', and C'. vectors(self); Return the interally computed vectors (not copied). Methods Documentation. coulomb(self: psi4.core.FISAPT) → None¶; Build the J/K potentials for C, D, and E. dHF(self: psi4.core.FISAPT) → None¶; SAPT0 delta HF. disp(self: psi4.core.FISAPT, arg0: Dict[str, psi4.core.Matrix], arg1: Dict[str, psi4.core.Vector], arg2: bool) →",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.FISAPT.html:390,energy,energy,390,psi4manual/1.9.x/api/psi4.core.FISAPT.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.FISAPT.html,2,['energy'],['energy']
Energy Efficiency,"﻿. FISAPT_CHARGE_COMPLETENESS — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; FISAPT ». FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. Previous topic; D_CONVERGENCE; Next topic; FISAPT_DO_FSAPT. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; FISAPT ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/fisapt__fisapt_charge_completeness-1.html:243,charge,charge,243,psi4manual/1.0.0/autodir_options_c/fisapt__fisapt_charge_completeness-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/fisapt__fisapt_charge_completeness-1.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT_CHARGE_COMPLETENESS. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FISAPT; FISAPT_CHARGE_COMPLETENESS. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FISAPT; FISAPT_CHARGE_COMPLETENESS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/fisapt__fisapt_charge_completeness.html:224,charge,charge,224,psi4manual/master/autodir_options_c/fisapt__fisapt_charge_completeness.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/fisapt__fisapt_charge_completeness.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT_CHARGE_COMPLETENESS. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FISAPT; FISAPT_CHARGE_COMPLETENESS. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FISAPT; FISAPT_CHARGE_COMPLETENESS. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/fisapt__fisapt_charge_completeness-1.html:215,charge,charge,215,psi4manual/1.4.0/autodir_options_c/fisapt__fisapt_charge_completeness-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/fisapt__fisapt_charge_completeness-1.html,4,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT_CHARGE_COMPLETENESS. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FISAPT; FISAPT_CHARGE_COMPLETENESS. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FISAPT; FISAPT_CHARGE_COMPLETENESS. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/fisapt__fisapt_charge_completeness-1.html:215,charge,charge,215,psi4manual/1.5.0/autodir_options_c/fisapt__fisapt_charge_completeness-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/fisapt__fisapt_charge_completeness-1.html,4,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT_CHARGE_COMPLETENESS. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FISAPT; FISAPT_CHARGE_COMPLETENESS. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FISAPT; FISAPT_CHARGE_COMPLETENESS. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/fisapt__fisapt_charge_completeness.html:215,charge,charge,215,psi4manual/1.6.x/autodir_options_c/fisapt__fisapt_charge_completeness.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/fisapt__fisapt_charge_completeness.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT_CHARGE_COMPLETENESS. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FISAPT; FISAPT_CHARGE_COMPLETENESS. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FISAPT; FISAPT_CHARGE_COMPLETENESS. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/fisapt__fisapt_charge_completeness.html:215,charge,charge,215,psi4manual/1.7.x/autodir_options_c/fisapt__fisapt_charge_completeness.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/fisapt__fisapt_charge_completeness.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT_CHARGE_COMPLETENESS. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FISAPT; FISAPT_CHARGE_COMPLETENESS. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FISAPT; FISAPT_CHARGE_COMPLETENESS. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/fisapt__fisapt_charge_completeness.html:217,charge,charge,217,psi4manual/1.8.x/autodir_options_c/fisapt__fisapt_charge_completeness.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/fisapt__fisapt_charge_completeness.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FISAPT_CHARGE_COMPLETENESS. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FISAPT; FISAPT_CHARGE_COMPLETENESS. FISAPT_CHARGE_COMPLETENESS¶. Amount of fragment charge completeness to distinguish link bonds. Type: double; Default: 0.8. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FISAPT; FISAPT_CHARGE_COMPLETENESS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/fisapt__fisapt_charge_completeness.html:217,charge,charge,217,psi4manual/1.9.x/autodir_options_c/fisapt__fisapt_charge_completeness.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/fisapt__fisapt_charge_completeness.html,2,['charge'],['charge']
Energy Efficiency,"﻿. FNOCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». FNOCC¶. (T) CORRECTION ENERGY; ACPF CORRELATION ENERGY; ACPF OPPOSITE-SPIN CORRELATION ENERGY; ACPF SAME-SPIN CORRELATION ENERGY; ACPF TOTAL ENERGY; AQCC CORRELATION ENERGY; AQCC OPPOSITE-SPIN CORRELATION ENERGY; AQCC SAME-SPIN CORRELATION ENERGY; AQCC TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD OPPOSITE-SPIN CORRELATION ENERGY; CCSD SAME-SPIN CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CEPA(0) CORRELATION ENERGY; CEPA(0) OPPOSITE-SPIN CORRELATION ENERGY; CEPA(0) SAME-SPIN CORRELATION ENERGY; CEPA(0) TOTAL ENERGY; CEPA(1) CORRELATION ENERGY; CEPA(1) OPPOSITE-SPIN CORRELATION ENERGY; CEPA(1) SAME-SPIN CORRELATION ENERGY; CEPA(1) TOTAL ENERGY; CEPA(2) CORRELATION ENERGY; CEPA(2) OPPOSITE-SPIN CORRELATION ENERGY; CEPA(2) SAME-SPIN CORRELATION ENERGY; CEPA(2) TOTAL ENERGY; CEPA(3) CORRELATION ENERGY; CEPA(3) OPPOSITE-SPIN CORRELATION ENERGY; CEPA(3) SAME-SPIN CORRELATION ENERGY; CEPA(3) TOTAL ENERGY; CISD CORRELATION ENERGY; CISD OPPOSITE-SPIN CORRELATION ENERGY; CISD SAME-SPIN CORRELATION ENERGY; CISD TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; DFCC NAUX; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 TOTAL ENERGY; MP4 CORRELATION ENERGY; MP4 TOTAL ENERGY; MP4(SDQ) CORRELATION ENERGY; MP4(SDQ) TOTAL ENERGY; MP4(SDTQ) CORRELATION ENERGY; MP4(SDTQ) TOTAL ENERGY; MP4(T) CORRECTION ENERGY; QCISD CORRELATION ENERGY; QCISD OPPOSITE-SPIN CORRELATION ENERGY; QCISD SAME-SPIN CORRELATION ENERGY; QCISD TOTAL ENERGY; QCISD(T) CORRELATION ENERGY; QCISD(T) TOTAL ENERGY; SCF TOTAL ENERGY. Previous topic; DFTSAPT; Next topic; LMP2; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Nav",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__fnocc-1.html:185,ENERGY,ENERGY,185,psi4manual/4.0b4/autodir_psivariables/module__fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__fnocc-1.html,82,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. FNOCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». FNOCC¶. (T) CORRECTION ENERGY; ACPF CORRELATION ENERGY; ACPF OPPOSITE-SPIN CORRELATION ENERGY; ACPF SAME-SPIN CORRELATION ENERGY; ACPF TOTAL ENERGY; AQCC CORRELATION ENERGY; AQCC OPPOSITE-SPIN CORRELATION ENERGY; AQCC SAME-SPIN CORRELATION ENERGY; AQCC TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD OPPOSITE-SPIN CORRELATION ENERGY; CCSD SAME-SPIN CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CEPA(0) CORRELATION ENERGY; CEPA(0) OPPOSITE-SPIN CORRELATION ENERGY; CEPA(0) SAME-SPIN CORRELATION ENERGY; CEPA(0) TOTAL ENERGY; CEPA(1) CORRELATION ENERGY; CEPA(1) OPPOSITE-SPIN CORRELATION ENERGY; CEPA(1) SAME-SPIN CORRELATION ENERGY; CEPA(1) TOTAL ENERGY; CEPA(2) CORRELATION ENERGY; CEPA(2) OPPOSITE-SPIN CORRELATION ENERGY; CEPA(2) SAME-SPIN CORRELATION ENERGY; CEPA(2) TOTAL ENERGY; CEPA(3) CORRELATION ENERGY; CEPA(3) OPPOSITE-SPIN CORRELATION ENERGY; CEPA(3) SAME-SPIN CORRELATION ENERGY; CEPA(3) TOTAL ENERGY; CISD CORRELATION ENERGY; CISD OPPOSITE-SPIN CORRELATION ENERGY; CISD SAME-SPIN CORRELATION ENERGY; CISD TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 TOTAL ENERGY; MP4 CORRELATION ENERGY; MP4 TOTAL ENERGY; MP4(SDQ) CORRELATION ENERGY; MP4(SDQ) TOTAL ENERGY; MP4(SDTQ) CORRELATION ENERGY; MP4(SDTQ) TOTAL ENERGY; MP4(T) CORRECTION ENERGY; NAUX (CC); NAUX (SCF); QCISD CORRELATION ENERGY; QCISD OPPOSITE-SPIN CORRELATION ENERGY; QCISD SAME-SPIN CORRELATION ENERGY; QCISD TOTAL ENERGY; QCISD(T) CORRELATION ENERGY; QCISD(T) TOTAL ENERGY; SCF TOTAL ENERGY. Previous topic; DFMP2; Next topic; MCSCF; This Page. Show Source. Quick search. Enter search terms or a module, class or function n",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__fnocc-1.html:185,ENERGY,ENERGY,185,psi4manual/4.0b5/autodir_psivariables/module__fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__fnocc-1.html,82,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4 — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Theoretical Methods: SCF to FCI ». FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4¶; Code author: A. Eugene DePrince; Section author: A. Eugene DePrince; Module: Keywords, PSI Variables, FNOCC. Frozen natural orbitals (FNO)¶; The computational cost of the QCISD(T), CCSD(T), CEPA, and MP4 methods can; be reduced by constructing a compact representation of the virtual space; based on the natural orbitals of second-order perturbation theory. The; most demanding steps in the CCSD and (T) algorithms scale as; and , where ; and represent the number of oribitals that are occupied and; unoccupied (virtual) in the reference function, respectively. By reducing; the the size of the virtual space, the cost of evaluating these terms; reduces by a factor of , where ; represents the number of virtual orbitals retained after the FNO; truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; OCC_TOLERANCE, or by prepending a valid",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/fnocc-1.html:508,reduce,reduced,508,psi4manual/4.0b4/fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/fnocc-1.html,4,['reduce'],"['reduced', 'reduces']"
Energy Efficiency,"﻿. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4 — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Theoretical Methods: SCF to FCI ». FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4¶; Code author: A. Eugene DePrince; Section author: A. Eugene DePrince; Module: Keywords, PSI Variables, FNOCC. Frozen natural orbitals (FNO)¶; The computational cost of the CCSD [Purvis:1982], CCSD(T); [Raghavachari:1989], and related methods be reduced by constructing a; compact representation of the virtual space based on the natural orbitals; of second-order perturbation theory [Sosa:1989:148]. The most demanding; steps in the CCSD and (T) algorithms scale as ; and , where and represent the; number of oribitals that are occupied and unoccupied (virtual) in the; reference function, respectively. By reducing the the size of the virtual; space, the cost of evaluating these terms reduces by a factor of , where represents the number of virtual; orbitals retained after the FNO truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct semicanonical orbitals by diagonalizing the virtual-virtual block of the Fock matrix; proceed with the QCISD(T) / CCSD(T) / MP4 computation in the reduced virtual space. A second-order correction based upon the MP2 energies in the full and; truncated spaces captures much of the missing correlation effects. More; details on the implementation and numerical accuracy of FNO methods in; PSI4 can be found in Ref. [DePrince:2013:293]. FNO computations; are controlled through the keywords NAT_ORBS and; O",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/fnocc-1.html:532,reduce,reduced,532,psi4manual/4.0b5/fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/fnocc-1.html,4,['reduce'],"['reduced', 'reduces']"
Energy Efficiency,"﻿. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Theoretical Methods: SCF to FCI. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4¶; Code author: A. Eugene DePrince; Section author: A. Eugene DePrince; Module: Keywords, PSI Variables, FNOCC. Warning; There is a known bug concerning the i7-5930 series combined; with the Intel 15 compilers and MKL 11.2.3. When PSI4 is compiled; under these conditions, parallel runs of the FNOCC code have experienced; nonsensical CCSD correlation energies (often several Hartrees lower; than the starting guess). At the moment, the only confirmed solutions; are running serially, using a different BLAS implementation, or upgrading; to Intel 16.0.2 and MKL 11.3.2. Frozen natural orbitals (FNO)¶; The computational cost of the CCSD [Purvis:1982], CCSD(T); [Raghavachari:1989], and related methods be reduced by constructing a; compact representation of the virtual space based on the natural orbitals; of second-order perturbation theory [Sosa:1989:148]. The most demanding; steps in the CCSD and (T) algorithms scale as \({\cal{O}}(o^2v^4)\); and \({\cal{O}}(o^3v^4)\), where \(o\) and \(v\) represent the; number of oribitals that are occupied and unoccupied (virtual) in the; reference function, respectively. By reducing the the size of the virtual; space, the cost of evaluating these terms reduces by a factor of \((v; / v_{FNO})^4\), where \(v_{FNO}\) represents the number of virtual; orbitals retained after the FNO truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct sem",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/fnocc-1.html:945,reduce,reduced,945,psi4manual/1.1.0/fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/fnocc-1.html,2,['reduce'],['reduced']
Energy Efficiency,"﻿. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Theoretical Methods: SCF to FCI. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4¶; Code author: A. Eugene DePrince; Section author: A. Eugene DePrince; Module: Keywords, PSI Variables, FNOCC. Warning; There is a known bug concerning the i7-5930 series combined; with the Intel 15 compilers and MKL 11.2.3. When PSI4 is compiled; under these conditions, parallel runs of the FNOCC code have experienced; nonsensical CCSD correlation energies (often several Hartrees lower; than the starting guess). At the moment, the only confirmed solutions; are running serially, using a different BLAS implementation, or upgrading; to Intel 16.0.2 and MKL 11.3.2. Frozen natural orbitals (FNO)¶; The computational cost of the CCSD [Purvis:1982], CCSD(T); [Raghavachari:1989], and related methods be reduced by constructing a; compact representation of the virtual space based on the natural orbitals; of second-order perturbation theory [Sosa:1989:148]. The most demanding; steps in the CCSD and (T) algorithms scale as \({\cal{O}}(o^2v^4)\); and \({\cal{O}}(o^3v^4)\), where \(o\) and \(v\) represent the; number of oribitals that are occupied and unoccupied (virtual) in the; reference function, respectively. By reducing the the size of the virtual; space, the cost of evaluating these terms reduces by a factor of \((v; / v_{FNO})^4\), where \(v_{FNO}\) represents the number of virtual; orbitals retained after the FNO truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct s",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/fnocc-1.html:947,reduce,reduced,947,psi4manual/1.2.1/fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/fnocc-1.html,2,['reduce'],['reduced']
Energy Efficiency,"﻿. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Theoretical Methods: SCF to FCI. FNOCC: Frozen natural orbitals for CCSD(T), QCISD(T), CEPA, and MP4¶; Code author: A. Eugene DePrince; Section author: A. Eugene DePrince; Module: Keywords, PSI Variables, FNOCC. Warning; There is a known bug concerning the i7-5930 series combined; with the Intel 15 compilers and MKL 11.2.3. When PSI4 is compiled; under these conditions, parallel runs of the FNOCC code have experienced; nonsensical CCSD correlation energies (often several Hartrees lower; than the starting guess). At the moment, the only confirmed solutions; are running serially, using a different BLAS implementation, or upgrading; to Intel 16.0.2 and MKL 11.3.2. Frozen natural orbitals (FNO)¶; The computational cost of the CCSD [Purvis:1982], CCSD(T); [Raghavachari:1989], and related methods be reduced by constructing a; compact representation of the virtual space based on the natural orbitals; of second-order perturbation theory [Sosa:1989:148]. The most demanding; steps in the CCSD and (T) algorithms scale as \({\cal{O}}(o^2v^4)\); and \({\cal{O}}(o^3v^4)\), where \(o\) and \(v\) represent the; number of oribitals that are occupied and unoccupied (virtual) in the; reference function, respectively. By reducing the the size of the virtual; space, the cost of evaluating these terms reduces by a factor of \((v; / v_{FNO})^4\), where \(v_{FNO}\) represents the number of virtual; orbitals retained after the FNO truncation.; The general outline for the FNO procedure in PSI4 is:. construct the virtual-virtual block of the unrelaxed MP2 one-particle density matrix (OPDM); diagonalize this block of the OPDM to obtain a set of natural virtual orbitals; based on some occupancy threshold, determine which orbitals are unimportant and may be discarded; project the virtual-virtual block of the Fock matrix onto the truncated space; construct s",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/fnocc-1.html:947,reduce,reduced,947,psi4manual/1.3.2/fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/fnocc-1.html,2,['reduce'],['reduced']
Energy Efficiency,"﻿. FOLLOW — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; STABILITY ». FOLLOW¶. Do follow the most negative eigenvalue of the Hessian towards a lower energy HF solution? Follow a UHF UHF instability of same symmetry?. Type: boolean; Default: false. Previous topic; CACHELEVEL; Next topic; NUM_VECS_PRINT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; STABILITY ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/stability__follow-1.html:235,energy,energy,235,psi4manual/4.0b2/autodir_options_c/stability__follow-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/stability__follow-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FOLLOW — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; STABILITY ». FOLLOW¶. Do follow the most negative eigenvalue of the Hessian towards a lower energy HF solution? Follow a UHF UHF instability of same symmetry?. Type: boolean; Default: false. Previous topic; CACHELEVEL; Next topic; NUM_VECS_PRINT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; STABILITY ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/stability__follow-1.html:250,energy,energy,250,psi4manual/4.0b3/autodir_options_c/stability__follow-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/stability__follow-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FOLLOW — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; STABILITY ». FOLLOW¶. Do follow the most negative eigenvalue of the Hessian towards a lower energy HF solution? Follow a UHF UHF instability of same symmetry?. Type: boolean; Default: false. Previous topic; CACHELEVEL; Next topic; NUM_VECS_PRINT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; STABILITY ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/stability__follow-1.html:250,energy,energy,250,psi4manual/4.0b4/autodir_options_c/stability__follow-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/stability__follow-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FOLLOW — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; STABILITY ». FOLLOW¶. Do follow the most negative eigenvalue of the Hessian towards a lower energy HF solution? Follow a UHF UHF instability of same symmetry?. Type: boolean; Default: false. Previous topic; CACHELEVEL; Next topic; NUM_VECS_PRINT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; STABILITY ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/stability__follow-1.html:250,energy,energy,250,psi4manual/4.0b5/autodir_options_c/stability__follow-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/stability__follow-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FREEZE_CORE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; GLOBALS ». FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For heavier elements, there can be some ambiguity in how many core orbitals to freeze; in such cases, SMALL picks the most conservative standard setting (freezes fewer orbitals), and LARGE picks the least conservative standard setting (freezes more orbitals). More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE, SMALL, LARGE; Default: FALSE. Previous topic; DOCC; Next topic; FROZEN_DOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/globals__freeze_core-1.html:762,energy,energy,762,psi4manual/4.0b2/autodir_options_c/globals__freeze_core-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/globals__freeze_core-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FREEZE_CORE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; GLOBALS ». FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For heavier elements, there can be some ambiguity in how many core orbitals to freeze; in such cases, SMALL picks the most conservative standard setting (freezes fewer orbitals), and LARGE picks the least conservative standard setting (freezes more orbitals). More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE, SMALL, LARGE; Default: FALSE. Previous topic; DOCC; Next topic; FROZEN_DOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/globals__freeze_core-1.html:777,energy,energy,777,psi4manual/4.0b3/autodir_options_c/globals__freeze_core-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/globals__freeze_core-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FREEZE_CORE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; GLOBALS ». FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For PSI, the standard number of core orbitals is the number of orbitals in the nearest previous noble gas atom. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE; Default: FALSE. Previous topic; DOCC; Next topic; FROZEN_DOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/globals__freeze_core-1.html:629,energy,energy,629,psi4manual/4.0b4/autodir_options_c/globals__freeze_core-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/globals__freeze_core-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FREEZE_CORE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; GLOBALS ». FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For PSI, the standard number of core orbitals is the number of orbitals in the nearest previous noble gas atom. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE; Default: FALSE. Previous topic; DOCC; Next topic; FROZEN_DOCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/globals__freeze_core-1.html:629,energy,energy,629,psi4manual/4.0b5/autodir_options_c/globals__freeze_core-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/globals__freeze_core-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. FREEZE_CORE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; GLOBALS ». FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For PSI, the standard number of core orbitals is the number of orbitals in the nearest previous noble gas atom. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE; Default: FALSE. Previous topic; EXTERNAL_POTENTIAL_SYMMETRY; Next topic; FROZEN_DOCC. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/globals__freeze_core-1.html:636,energy,energy,636,psi4manual/1.0.0/autodir_options_c/globals__freeze_core-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/globals__freeze_core-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. FREEZE_CORE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FREEZE_CORE. FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE or 1 will default to freezing the previous noble gas shell on each atom. In case of positive charges on fragments, an additional shell may be unfrozen, to ensure there are valence electrons in each fragment. With FALSE or 0, no electrons are frozen (with the exception of electrons treated by an ECP). With -1, -2, and -3, the user might request strict freezing of the previous first/second/third noble gas shell on every atom. In this case, when there are no valence electrons, the code raises an exception. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation) or by the option POLICY in combination with appropriate inputs to FREEZE_CORE_POLICY At present, POLICY is an experimental option and is subject to change. Type: string; Possible Values: FALSE, TRUE, 1, 0, -1, -2, -3, POLICY; Default: FALSE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FREEZE_CORE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/globals__freeze_core.html:330,charge,charges,330,psi4manual/master/autodir_options_c/globals__freeze_core.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/globals__freeze_core.html,4,"['charge', 'energy']","['charges', 'energy']"
Energy Efficiency,"﻿. FREEZE_CORE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FREEZE_CORE. FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE or 1 will default to freezing the previous noble gas shell on each atom. In case of positive charges on fragments, an additional shell may be unfrozen, to ensure there are valence electrons in each fragment. With FALSE or 0, no electrons are frozen (with the exception of electrons treated by an ECP). With -1, -2, and -3, the user might request strict freezing of the previous first/second/third noble gas shell on every atom. In this case, when there are no valence electrons, the code raises an exception. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE, 1, 0, -1, -2, -3; Default: FALSE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FREEZE_CORE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/globals__freeze_core-1.html:321,charge,charges,321,psi4manual/1.4.0/autodir_options_c/globals__freeze_core-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/globals__freeze_core-1.html,8,"['charge', 'energy']","['charges', 'energy']"
Energy Efficiency,"﻿. FREEZE_CORE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FREEZE_CORE. FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE or 1 will default to freezing the previous noble gas shell on each atom. In case of positive charges on fragments, an additional shell may be unfrozen, to ensure there are valence electrons in each fragment. With FALSE or 0, no electrons are frozen (with the exception of electrons treated by an ECP). With -1, -2, and -3, the user might request strict freezing of the previous first/second/third noble gas shell on every atom. In this case, when there are no valence electrons, the code raises an exception. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE, 1, 0, -1, -2, -3; Default: FALSE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FREEZE_CORE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/globals__freeze_core-1.html:321,charge,charges,321,psi4manual/1.5.0/autodir_options_c/globals__freeze_core-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/globals__freeze_core-1.html,8,"['charge', 'energy']","['charges', 'energy']"
Energy Efficiency,"﻿. FREEZE_CORE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FREEZE_CORE. FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE or 1 will default to freezing the previous noble gas shell on each atom. In case of positive charges on fragments, an additional shell may be unfrozen, to ensure there are valence electrons in each fragment. With FALSE or 0, no electrons are frozen (with the exception of electrons treated by an ECP). With -1, -2, and -3, the user might request strict freezing of the previous first/second/third noble gas shell on every atom. In this case, when there are no valence electrons, the code raises an exception. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE, 1, 0, -1, -2, -3; Default: FALSE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FREEZE_CORE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/globals__freeze_core.html:321,charge,charges,321,psi4manual/1.6.x/autodir_options_c/globals__freeze_core.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/globals__freeze_core.html,4,"['charge', 'energy']","['charges', 'energy']"
Energy Efficiency,"﻿. FREEZE_CORE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FREEZE_CORE. FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE or 1 will default to freezing the previous noble gas shell on each atom. In case of positive charges on fragments, an additional shell may be unfrozen, to ensure there are valence electrons in each fragment. With FALSE or 0, no electrons are frozen (with the exception of electrons treated by an ECP). With -1, -2, and -3, the user might request strict freezing of the previous first/second/third noble gas shell on every atom. In this case, when there are no valence electrons, the code raises an exception. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation) or by the option POLICY in combination with appropriate inputs to FREEZE_CORE_POLICY At present, POLICY is an experimental option and is subject to change. Type: string; Possible Values: FALSE, TRUE, 1, 0, -1, -2, -3, POLICY; Default: FALSE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FREEZE_CORE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/globals__freeze_core.html:321,charge,charges,321,psi4manual/1.7.x/autodir_options_c/globals__freeze_core.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/globals__freeze_core.html,4,"['charge', 'energy']","['charges', 'energy']"
Energy Efficiency,"﻿. FREEZE_CORE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FREEZE_CORE. FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE or 1 will default to freezing the previous noble gas shell on each atom. In case of positive charges on fragments, an additional shell may be unfrozen, to ensure there are valence electrons in each fragment. With FALSE or 0, no electrons are frozen (with the exception of electrons treated by an ECP). With -1, -2, and -3, the user might request strict freezing of the previous first/second/third noble gas shell on every atom. In this case, when there are no valence electrons, the code raises an exception. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation) or by the option POLICY in combination with appropriate inputs to FREEZE_CORE_POLICY At present, POLICY is an experimental option and is subject to change. Type: string; Possible Values: FALSE, TRUE, 1, 0, -1, -2, -3, POLICY; Default: FALSE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FREEZE_CORE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/globals__freeze_core.html:323,charge,charges,323,psi4manual/1.8.x/autodir_options_c/globals__freeze_core.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/globals__freeze_core.html,4,"['charge', 'energy']","['charges', 'energy']"
Energy Efficiency,"﻿. FREEZE_CORE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FREEZE_CORE. FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE or 1 will default to freezing the previous noble gas shell on each atom. In case of positive charges on fragments, an additional shell may be unfrozen, to ensure there are valence electrons in each fragment. With FALSE or 0, no electrons are frozen (with the exception of electrons treated by an ECP). With -1, -2, and -3, the user might request strict freezing of the previous first/second/third noble gas shell on every atom. In this case, when there are no valence electrons, the code raises an exception. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation) or by the option POLICY in combination with appropriate inputs to FREEZE_CORE_POLICY At present, POLICY is an experimental option and is subject to change. Type: string; Possible Values: FALSE, TRUE, 1, 0, -1, -2, -3, POLICY; Default: FALSE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; GLOBALS; FREEZE_CORE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/globals__freeze_core.html:323,charge,charges,323,psi4manual/1.9.x/autodir_options_c/globals__freeze_core.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/globals__freeze_core.html,4,"['charge', 'energy']","['charges', 'energy']"
Energy Efficiency,"﻿. Frequency — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». Frequency¶. frequency(name[, func, dertype, irrep, molecule])[source]¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) – 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) – 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) – -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/freq-1.html:346,energy,energy,346,psi4manual/4.0b2/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/freq-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Frequency — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». Frequency¶. frequency(name[, func, dertype, irrep, molecule])[source]¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) – 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) – 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) – -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 19,",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/freq-1.html:361,energy,energy,361,psi4manual/4.0b3/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/freq-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Frequency — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoking a Calculation ». Frequency¶. frequency(name[, func, dertype, irrep, molecule])[source]¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Make frequency look analogous to gradient, especially in matching derivative levels. Make dertype actually a dertype type. Parameters:; name (string) – 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) – 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) – -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>> frequencies('scf', dertype=1, irrep=4). Previous topic; Optimize; Next topic; Database; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25,",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/freq-1.html:361,energy,energy,361,psi4manual/4.0b4/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/freq-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Frequency — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Psithon Functions: Invoking a Calculation ». Frequency¶. frequency(name[, func, mode, dertype, irrep, molecule])[source]¶; Function to compute harmonic vibrational frequencies. Aliases :frequencies(), freq(). Returns:(float) Total electronic energy in Hartrees. Note; Analytic hessians are not available. Frequencies will proceed through; finite differences according to availability of gradients or energies. Caution; Some features are not yet implemented. Buy a developer a coffee. Implement sow/reap mode for finite difference of gradients. Presently only for findif of energies. Parameters:; name (string) – 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. dertype (dertype) – 'hessian' || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. mode (string) – 'continuous' || 'sow' || 'reap'; For a finite difference of energies or gradients frequency, indicates; whether the calculations required to complet the frequency are to be run; in one file ('continuous') or are to be farmed out in an; embarrassingly parallel fashion ('sow'/'reap')/ For the latter,; run an initial job with 'sow' and follow instructions in its output file. irrep (int or string) – -1 || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; , requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] <example description>; >>> <example python command>. >>> # [2] Frequency calculation for b2 modes through finite difference of gradients; >>>",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/freq-1.html:367,energy,energy,367,psi4manual/4.0b5/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/freq-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». Function Intercalls¶; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions. Caller; Callee.  ; cp; db; opt; cbs; energy. Counterpoise Correct;  ; —; Y; Y; Y. Database; —;  ; Y; Y; Y. Optimize; —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Energy; —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap_all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be used in sow/reap mode. Previous topic; <no title>; Next topic; Embarrassing Parallelism; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2012, ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/intercalls-1.html:425,energy,energy,425,psi4manual/4.0b2/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/intercalls-1.html,10,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». Function Intercalls¶; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions. Caller; Callee.  ; cp; db; opt; cbs; energy. Counterpoise Correct;  ; —; Y; Y; Y. Database; —;  ; Y; Y; Y. Optimize; —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Energy; —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap_all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be used in sow/reap mode. Previous topic; Spectroscopic Constants for Diatomics; Next topic; Interfaces: Enhancing PSI4 Capabilities; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [be",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/intercalls-1.html:440,energy,energy,440,psi4manual/4.0b3/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/intercalls-1.html,10,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoking a Calculation ». Function Intercalls¶; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions. Caller; Callee.  ; cp; db; opt; cbs; energy. Counterpoise Correct;  ; —; Y; Y; Y. Database; —;  ; Y; Y; Y. Optimize; —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Energy; —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap_all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be used in sow/reap mode. Previous topic; Spectroscopic Constants for Diatomics; Next topic; Customization: Adding Simple Extensions; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [be",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/intercalls-1.html:440,energy,energy,440,psi4manual/4.0b4/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/intercalls-1.html,10,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Psithon Functions: Invoking a Calculation ». Function Intercalls¶; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions. Caller; Callee.  ; cp; db; opt; cbs; energy. Counterpoise Correct;  ; —; Y; Y; Y. Database; —;  ; Y; Y; Y. Optimize; —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Energy; —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap_all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be used in sow/reap mode. Previous topic; Spectroscopic Constants for Diatomics; Next topic; Customization: Adding Simple Extensions; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [be",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/intercalls-1.html:440,energy,energy,440,psi4manual/4.0b5/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/intercalls-1.html,10,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Psithon Functions: Invoking a Calculation ». Function Intercalls¶; For many of the Psi4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee.  ; cp; db; opt; cbs; energy. Counterpoise Correct;  ; —; Y; Y; Y. Database, database(); —;  ; Y; Y; Y. Geometry Optimization, optimize() and gradient(); —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Single-Point Energy, energy(); —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap_all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be used in sow/reap mode. Previous topic; Spectroscopic Constants for Diatomics; Next topic; Embarrassing Parallelism. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navig",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/intercalls-1.html:447,energy,energy,447,psi4manual/1.0.0/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/intercalls-1.html,10,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Function Intercalls. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee. cp; db; opt; cbs; energy. Basis Set Superposition Corrections. —; Y; Y; Y. Database — database(); —. Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —. Y; Y. Complete Basis Set; —; —; —. Y. Single-Point Energy — energy(); —; —; —; —. The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/intercalls.html:397,energy,energy,397,psi4manual/master/intercalls.html,https://psicode.org,https://psicode.org/psi4manual/master/intercalls.html,5,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee.  ; cp; db; opt; cbs; energy. Basis Set Superposition Corrections;  ; —; Y; Y; Y. Database — database(); —;  ; Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Single-Point Energy — energy(); —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be used",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/intercalls-1.html:367,energy,energy,367,psi4manual/1.1.0/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/intercalls-1.html,10,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee.  ; cp; db; opt; cbs; energy. Basis Set Superposition Corrections;  ; —; Y; Y; Y. Database — database(); —;  ; Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Single-Point Energy — energy(); —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be us",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/intercalls-1.html:369,energy,energy,369,psi4manual/1.2.1/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/intercalls-1.html,10,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee.  ; cp; db; opt; cbs; energy. Basis Set Superposition Corrections;  ; —; Y; Y; Y. Database — database(); —;  ; Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —;  ; Y; Y. Complete Basis Set; —; —; —;  ; Y. Single-Point Energy — energy(); —; —; —; —;  . The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be us",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/intercalls-1.html:369,energy,energy,369,psi4manual/1.3.2/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/intercalls-1.html,10,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Function Intercalls. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee. cp; db; opt; cbs; energy. Basis Set Superposition Corrections. —; Y; Y; Y. Database — database(); —. Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —. Y; Y. Complete Basis Set; —; —; —. Y. Single-Point Energy — energy(); —; —; —; —. The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be u",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/intercalls-1.html:388,energy,energy,388,psi4manual/1.4.0/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/intercalls-1.html,10,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Function Intercalls. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee. cp; db; opt; cbs; energy. Basis Set Superposition Corrections. —; Y; Y; Y. Database — database(); —. Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —. Y; Y. Complete Basis Set; —; —; —. Y. Single-Point Energy — energy(); —; —; —; —. The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be u",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/intercalls-1.html:388,energy,energy,388,psi4manual/1.5.0/intercalls-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/intercalls-1.html,10,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Function Intercalls. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee. cp; db; opt; cbs; energy. Basis Set Superposition Corrections. —; Y; Y; Y. Database — database(); —. Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —. Y; Y. Complete Basis Set; —; —; —. Y. Single-Point Energy — energy(); —; —; —; —. The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be u",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/intercalls.html:388,energy,energy,388,psi4manual/1.6.x/intercalls.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/intercalls.html,5,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Function Intercalls. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee. cp; db; opt; cbs; energy. Basis Set Superposition Corrections. —; Y; Y; Y. Database — database(); —. Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —. Y; Y. Complete Basis Set; —; —; —. Y. Single-Point Energy — energy(); —; —; —; —. The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be u",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/intercalls.html:388,energy,energy,388,psi4manual/1.7.x/intercalls.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/intercalls.html,5,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Function Intercalls. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee. cp; db; opt; cbs; energy. Basis Set Superposition Corrections. —; Y; Y; Y. Database — database(); —. Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —. Y; Y. Complete Basis Set; —; —; —. Y. Single-Point Energy — energy(); —; —; —; —. The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/intercalls.html:390,energy,energy,390,psi4manual/1.8.x/intercalls.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/intercalls.html,5,['energy'],['energy']
Energy Efficiency,"﻿. Function Intercalls. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Function Intercalls. Function Intercalls¶; This topic is in transition. As of 1.0, the functionality provided by; cp() and cbs() should not be accessed directly. Instead, use the; cp kwarg and/or the extended method syntax like; 'mp3/aug-cc-pv[dt]z' to energy(), opt(), etc., respectively.; For many of the PSI4 Python functions described above, it makes scientific; sense that they could be called in combination. For instance, one could; optimize all the reagents in a database or compute a; counterpoise-corrected interaction energy with an extrapolated method. The; table below outlines permitted intercalls between functions, showing that; db(opt(cbs(energy()))) is allowed, while db(cp(energy())) is not. This; table is not yet validated for calls with cp(). Permitted nesting of Psithon functions¶. Caller; Callee. cp; db; opt; cbs; energy. Basis Set Superposition Corrections. —; Y; Y; Y. Database — database(); —. Y; Y; Y. Geometry Optimization — optimize() and gradient(); —; —. Y; Y. Complete Basis Set; —; —; —. Y. Single-Point Energy — energy(); —; —; —; —. The command db(opt(cbs(energy()))) is actually expressed as db(...,; db_func=opt, opt_func=cbs). The perhaps expected final argument of; cbs_func=energy is not necessary since energy() is always the function; called by default. Also, the outermost internal function call (db_func; above can be called as just func. Several examples of intercalls; between Python functions can be found in sample input pywrap-all.; All keyword arguments are passed along to each function traversed in the; Python driver, so there should be no concern for separating them, grouping; them, or designating them for a particular function when undertaking a; nested calculation. Where the same keyword is used by multiple functions,; prefixes are added, e.g., db_mode and opt_mode.; Function intercalls should not be",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/intercalls.html:390,energy,energy,390,psi4manual/1.9.x/intercalls.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/intercalls.html,5,['energy'],['energy']
Energy Efficiency,"﻿. GLOBALS — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». GLOBALS¶. General¶. BENCH¶. Some codes (DFT) can dump benchmarking data to separate output files. Type: integer; Default: 0. DOCC¶. An array containing the number of doubly-occupied orbitals per irrep (in Cotton order). Type: array; Default: No Default. FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For heavier elements, there can be some ambiguity in how many core orbitals to freeze; in such cases, SMALL picks the most conservative standard setting (freezes fewer orbitals), and LARGE picks the least conservative standard setting (freezes more orbitals). More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE, SMALL, LARGE; Default: FALSE. FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. Type: array; Default: No Default. FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. Type: array; Default: No Default. NUM_FROZEN_DOCC¶. The number of core orbitals to freeze in later correlated computations. FROZEN_DOCC trumps this option. Type: integer; Default: 0. NUM_FROZEN_UOCC¶. The number of virtual orbitals to freeze in later correlated computations. FROZEN_UOCC trumps this option. Type: integer; Default: 0. PRINT¶. The amount of information to print to the output file. 1 prints basic information, and hi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__globals-1.html:1001,energy,energy,1001,psi4manual/4.0b2/autodir_options_c/module__globals-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__globals-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. GLOBALS — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». GLOBALS¶. General¶. BENCH¶. Some codes (DFT) can dump benchmarking data to separate output files. Type: integer; Default: 0. DOCC¶. An array containing the number of doubly-occupied orbitals per irrep (in Cotton order). Type: array; Default: No Default. FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For heavier elements, there can be some ambiguity in how many core orbitals to freeze; in such cases, SMALL picks the most conservative standard setting (freezes fewer orbitals), and LARGE picks the least conservative standard setting (freezes more orbitals). More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE, SMALL, LARGE; Default: FALSE. FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. Type: array; Default: No Default. FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. Type: array; Default: No Default. NUM_FROZEN_DOCC¶. The number of core orbitals to freeze in later correlated computations. FROZEN_DOCC trumps this option. Type: integer; Default: 0. NUM_FROZEN_UOCC¶. The number of virtual orbitals to freeze in later correlated computations. FROZEN_UOCC trumps this option. Type: integer; Default: 0. PRINT¶. The amount of information to print to the output file. 1 prints basic info",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__globals-1.html:1016,energy,energy,1016,psi4manual/4.0b3/autodir_options_c/module__globals-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__globals-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. GLOBALS — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». GLOBALS¶. General¶. BENCH¶. Some codes (DFT) can dump benchmarking data to separate output files. Type: integer; Default: 0. DOCC¶. An array containing the number of doubly-occupied orbitals per irrep (in Cotton order). Type: array; Default: No Default. FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For PSI, the standard number of core orbitals is the number of orbitals in the nearest previous noble gas atom. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE; Default: FALSE. FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. NUM_FROZEN_DOCC¶. The number of core orbitals to freeze in later correlated computations. This trumps FREEZE_CORE. Type: integer; Default: 0. NUM_FROZEN_UOCC¶. The number of virtual orbitals to freeze in later correlated computations. Type: integer; Default: 0. PRINT¶. The amount of information to print to the output file. 1 prints basic information, and higher levels print more information. A value of 5 will print very large amounts of debugging information. Type: i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__globals-1.html:868,energy,energy,868,psi4manual/4.0b4/autodir_options_c/module__globals-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__globals-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. GLOBALS — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». GLOBALS¶. General¶. BENCH¶. Some codes (DFT) can dump benchmarking data to separate output files. Type: integer; Default: 0. DOCC¶. An array containing the number of doubly-occupied orbitals per irrep (in Cotton order). Type: array; Default: No Default. FREEZE_CORE¶. Specifies how many core orbitals to freeze in correlated computations. TRUE will default to freezing the standard default number of core orbitals. For PSI, the standard number of core orbitals is the number of orbitals in the nearest previous noble gas atom. More precise control over the number of frozen orbitals can be attained by using the keywords NUM_FROZEN_DOCC (gives the total number of orbitals to freeze, program picks the lowest-energy orbitals) or FROZEN_DOCC (gives the number of orbitals to freeze per irreducible representation). Type: string; Possible Values: FALSE, TRUE; Default: FALSE. FROZEN_DOCC¶. An array containing the number of frozen doubly-occupied orbitals per irrep (these are not excited in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_DOCC and FREEZE_CORE. Type: array; Default: No Default. FROZEN_UOCC¶. An array containing the number of frozen unoccupied orbitals per irrep (these are not populated in a correlated wavefunction, nor can they be optimized in MCSCF. This trumps NUM_FROZEN_UOCC. Type: array; Default: No Default. NUM_FROZEN_DOCC¶. The number of core orbitals to freeze in later correlated computations. This trumps FREEZE_CORE. Type: integer; Default: 0. NUM_FROZEN_UOCC¶. The number of virtual orbitals to freeze in later correlated computations. Type: integer; Default: 0. PRINT¶. The amount of information to print to the output file. 1 prints basic information, and higher levels print more information. A value of 5 will print very large amounts of debugging information. Type: i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__globals-1.html:868,energy,energy,868,psi4manual/4.0b5/autodir_options_c/module__globals-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__globals-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. General layout of the core: where new C++ code should live. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Introduction to Programming in PSI4; General layout of the core: where new C++ code should live. General layout of the core: where new C++ code should live¶. New integral operators¶; Most of the heavy lifting in PSI4 is handled by libmints, which can be; found in the psi4/psi4/src/psi4/libmints directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; psi4/psi4/src/psi4/libmints/wavefunction.h is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods¶; A new method that is not a modification of existing code belongs in its own; folder in psi4/psi4/src/psi4; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to psi4/psi4/src/psi4/CMakeLists.txt. There are also a number of; variables that can be exported to be available to the user, as detailed in; PSI Variables. To set these variables, the following member of; Wavefunction should be called:; set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; psi4/doc/sphinxman/source/glossary_psivariables.rst. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies¶; The general philosophy in PSI4 is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/prog_tour.html:658,energy,energy,658,psi4manual/master/prog_tour.html,https://psicode.org,https://psicode.org/psi4manual/master/prog_tour.html,1,['energy'],['energy']
Energy Efficiency,"﻿. General layout of the core: where new C++ code should live. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Introduction to Programming in PSI4; General layout of the core: where new C++ code should live. General layout of the core: where new C++ code should live¶. New integral operators¶; Most of the heavy lifting in PSI4 is handled by libmints, which can be; found in the psi4/psi4/src/psi4/libmints directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; psi4/psi4/src/psi4/libmints/wavefunction.h is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods¶; A new method that is not a modification of existing code belongs in its own; folder in psi4/psi4/src/psi4; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to psi4/psi4/src/psi4/CMakeLists.txt. There are also a number of; variables that can be exported to be available to the user, as detailed in; PSI Variables. To set these variables, the following member of; Wavefunction should be called:; set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; psi4/doc/sphinxman/source/glossary_psivariables.rst. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies¶; The general philosophy in PSI4 is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/prog_tour-1.html:649,energy,energy,649,psi4manual/1.4.0/prog_tour-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/prog_tour-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. General layout of the core: where new C++ code should live. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Introduction to Programming in PSI4; General layout of the core: where new C++ code should live. General layout of the core: where new C++ code should live¶. New integral operators¶; Most of the heavy lifting in PSI4 is handled by libmints, which can be; found in the psi4/psi4/src/psi4/libmints directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; psi4/psi4/src/psi4/libmints/wavefunction.h is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods¶; A new method that is not a modification of existing code belongs in its own; folder in psi4/psi4/src/psi4; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to psi4/psi4/src/psi4/CMakeLists.txt. There are also a number of; variables that can be exported to be available to the user, as detailed in; PSI Variables. To set these variables, the following member of; Wavefunction should be called:; set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; psi4/doc/sphinxman/source/glossary_psivariables.rst. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies¶; The general philosophy in PSI4 is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/prog_tour-1.html:649,energy,energy,649,psi4manual/1.5.0/prog_tour-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/prog_tour-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. General layout of the core: where new C++ code should live. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Introduction to Programming in PSI4; General layout of the core: where new C++ code should live. General layout of the core: where new C++ code should live¶. New integral operators¶; Most of the heavy lifting in PSI4 is handled by libmints, which can be; found in the psi4/psi4/src/psi4/libmints directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; psi4/psi4/src/psi4/libmints/wavefunction.h is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods¶; A new method that is not a modification of existing code belongs in its own; folder in psi4/psi4/src/psi4; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to psi4/psi4/src/psi4/CMakeLists.txt. There are also a number of; variables that can be exported to be available to the user, as detailed in; PSI Variables. To set these variables, the following member of; Wavefunction should be called:; set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; psi4/doc/sphinxman/source/glossary_psivariables.rst. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies¶; The general philosophy in PSI4 is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/prog_tour.html:649,energy,energy,649,psi4manual/1.6.x/prog_tour.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/prog_tour.html,1,['energy'],['energy']
Energy Efficiency,"﻿. General layout of the core: where new C++ code should live. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Introduction to Programming in PSI4; General layout of the core: where new C++ code should live. General layout of the core: where new C++ code should live¶. New integral operators¶; Most of the heavy lifting in PSI4 is handled by libmints, which can be; found in the psi4/psi4/src/psi4/libmints directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; psi4/psi4/src/psi4/libmints/wavefunction.h is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods¶; A new method that is not a modification of existing code belongs in its own; folder in psi4/psi4/src/psi4; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to psi4/psi4/src/psi4/CMakeLists.txt. There are also a number of; variables that can be exported to be available to the user, as detailed in; PSI Variables. To set these variables, the following member of; Wavefunction should be called:; set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; psi4/doc/sphinxman/source/glossary_psivariables.rst. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies¶; The general philosophy in PSI4 is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/prog_tour.html:649,energy,energy,649,psi4manual/1.7.x/prog_tour.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/prog_tour.html,1,['energy'],['energy']
Energy Efficiency,"﻿. General layout of the core: where new C++ code should live. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Introduction to Programming in PSI4; General layout of the core: where new C++ code should live. General layout of the core: where new C++ code should live¶. New integral operators¶; Most of the heavy lifting in PSI4 is handled by libmints, which can be; found in the psi4/psi4/src/psi4/libmints directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; psi4/psi4/src/psi4/libmints/wavefunction.h is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods¶; A new method that is not a modification of existing code belongs in its own; folder in psi4/psi4/src/psi4; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to psi4/psi4/src/psi4/CMakeLists.txt. There are also a number of; variables that can be exported to be available to the user, as detailed in; PSI Variables. To set these variables, the following member of; Wavefunction should be called:; set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; psi4/doc/sphinxman/source/glossary_psivariables.rst. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies¶; The general philosophy in PSI4 is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/prog_tour.html:651,energy,energy,651,psi4manual/1.8.x/prog_tour.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/prog_tour.html,1,['energy'],['energy']
Energy Efficiency,"﻿. General layout of the core: where new C++ code should live. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Introduction to Programming in PSI4; General layout of the core: where new C++ code should live. General layout of the core: where new C++ code should live¶. New integral operators¶; Most of the heavy lifting in PSI4 is handled by libmints, which can be; found in the psi4/psi4/src/psi4/libmints directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; psi4/psi4/src/psi4/libmints/wavefunction.h is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods¶; A new method that is not a modification of existing code belongs in its own; folder in psi4/psi4/src/psi4; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to psi4/psi4/src/psi4/CMakeLists.txt. There are also a number of; variables that can be exported to be available to the user, as detailed in; PSI Variables. To set these variables, the following member of; Wavefunction should be called:; set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; psi4/doc/sphinxman/source/glossary_psivariables.rst. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies¶; The general philosophy in PSI4 is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/prog_tour.html:651,energy,energy,651,psi4manual/1.9.x/prog_tour.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/prog_tour.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Generation of Cube Files — cubeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Generation of Cube Files — cubeprop(). Generation of Cube Files — cubeprop()¶; Code author: Robert M. Parrish, Francesco A. Evangelista and Peter Kraus; Section author: Francesco A. Evangelista and Peter Kraus. psi4.cubeprop(wfn, **kwargs)[source]; Evaluate properties on a grid and generate cube files. Added in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). Introduction¶; PSI4 has the ability to export cube files that store information about; basis functions, molecular orbitals, the electron density, and; the electrostatic potential (ESP). Cube files store the value of a scalar; quantity on a regular Cartesian grid, and can be visualized with several; visualization programs, some of which are free, like VMD; (http://www.ks.uiuc.edu/Research/vmd/).; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True; set cubeprop_tasks ['orbitals']; set cubeprop_orbitals [5,6,-5,-6]. E, wfn = energy('scf', return_wfn=True); cubeprop(wfn). In this example, the cubeprop(); call after the energy('scf') command; executes the cubeprop code. The array CUBEPROP_TASKS specifies which; tasks should be executed. In this case the task 'orbitals' generates cube; files for orbitals. The CUBEPROP_ORBITALS option specifies that cube files; should be generate",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/cubeprop.html:702,energy,energy,702,psi4manual/master/cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/master/cubeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Generation of Cube Files — cubeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Generation of Cube Files — cubeprop()¶; Code author: Robert M. Parrish and Francesco A. Evangelista; Section author: Francesco A. Evangelista. psi4.cubeprop(wfn)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. 1; 2; 3>>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). 1; 2; 3; 4; 5; 6>>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). Introduction¶; PSI4 has the ability to export cube files that store information about; basis functions, molecular orbitals, the electron density, and; the electrostatic potential (ESP). Cube files store the value of a scalar; quantity on a regular Cartesian grid, and can be visualized with several; visualization programs, some of which are free, like VMD; (http://www.ks.uiuc.edu/Research/vmd/).; An example utilization of the code is:; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True; set cubeprop_tasks ['orbitals']; set cubeprop_orbitals [5,6,-5,-6]. E, wfn = energy('scf', return_wfn=True); cubeprop(wfn). In this example, the cubeprop(); call after the energy('scf') command; executes the cubeprop code. The array CUBEPROP_TASKS specifies which; tasks should be executed. In this case the task 'orbitals' generates cube; files for orbitals. The CUBEPROP_ORBITALS option specifies that cube files; should be generated only for alpha orb",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/cubeprop-1.html:617,energy,energy,617,psi4manual/1.1.0/cubeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/cubeprop-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Generation of Cube Files — cubeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Generation of Cube Files — cubeprop()¶; Code author: Robert M. Parrish and Francesco A. Evangelista; Section author: Francesco A. Evangelista. psi4.cubeprop(wfn)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. 1; 2; 3>>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). 1; 2; 3; 4; 5; 6>>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). Introduction¶; PSI4 has the ability to export cube files that store information about; basis functions, molecular orbitals, the electron density, and; the electrostatic potential (ESP). Cube files store the value of a scalar; quantity on a regular Cartesian grid, and can be visualized with several; visualization programs, some of which are free, like VMD; (http://www.ks.uiuc.edu/Research/vmd/).; An example utilization of the code is:; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True; set cubeprop_tasks ['orbitals']; set cubeprop_orbitals [5,6,-5,-6]. E, wfn = energy('scf', return_wfn=True); cubeprop(wfn). In this example, the cubeprop(); call after the energy('scf') command; executes the cubeprop code. The array CUBEPROP_TASKS specifies which; tasks should be executed. In this case the task 'orbitals' generates cube; files for orbitals. The CUBEPROP_ORBITALS option specifies that cube files; should be generated only for alpha o",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/cubeprop-1.html:619,energy,energy,619,psi4manual/1.2.1/cubeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/cubeprop-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Generation of Cube Files — cubeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. Generation of Cube Files — cubeprop()¶; Code author: Robert M. Parrish, Francesco A. Evangelista and Peter Kraus; Section author: Francesco A. Evangelista and Peter Kraus. psi4.cubeprop(wfn)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). Introduction¶; PSI4 has the ability to export cube files that store information about; basis functions, molecular orbitals, the electron density, and; the electrostatic potential (ESP). Cube files store the value of a scalar; quantity on a regular Cartesian grid, and can be visualized with several; visualization programs, some of which are free, like VMD; (http://www.ks.uiuc.edu/Research/vmd/).; An example utilization of the code is:; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True; set cubeprop_tasks ['orbitals']; set cubeprop_orbitals [5,6,-5,-6]. E, wfn = energy('scf', return_wfn=True); cubeprop(wfn). In this example, the cubeprop(); call after the energy('scf') command; executes the cubeprop code. The array CUBEPROP_TASKS specifies which; tasks should be executed. In this case the task 'orbitals' generates cube; files for orbitals. The CUBEPROP_ORBITALS option specifies that cube files; should be generated only for a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/cubeprop-1.html:641,energy,energy,641,psi4manual/1.3.2/cubeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/cubeprop-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Generation of Cube Files — cubeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Generation of Cube Files — cubeprop(). Generation of Cube Files — cubeprop()¶; Code author: Robert M. Parrish, Francesco A. Evangelista and Peter Kraus; Section author: Francesco A. Evangelista and Peter Kraus. psi4.cubeprop(wfn)[source]; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). Introduction¶; PSI4 has the ability to export cube files that store information about; basis functions, molecular orbitals, the electron density, and; the electrostatic potential (ESP). Cube files store the value of a scalar; quantity on a regular Cartesian grid, and can be visualized with several; visualization programs, some of which are free, like VMD; (http://www.ks.uiuc.edu/Research/vmd/).; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True; set cubeprop_tasks ['orbitals']; set cubeprop_orbitals [5,6,-5,-6]. E, wfn = energy('scf', return_wfn=True); cubeprop(wfn). In this example, the cubeprop(); call after the energy('scf') command; executes the cubeprop code. The array CUBEPROP_TASKS specifies which; tasks should be executed. In this case the task 'orbitals' generates cube; files for orbitals. The CUBEPROP_ORBITALS option specifies that cube files; should be generated only for alpha orbital",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/cubeprop-1.html:678,energy,energy,678,psi4manual/1.4.0/cubeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/cubeprop-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Generation of Cube Files — cubeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Generation of Cube Files — cubeprop(). Generation of Cube Files — cubeprop()¶; Code author: Robert M. Parrish, Francesco A. Evangelista and Peter Kraus; Section author: Francesco A. Evangelista and Peter Kraus. psi4.cubeprop(wfn)[source]; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). Introduction¶; PSI4 has the ability to export cube files that store information about; basis functions, molecular orbitals, the electron density, and; the electrostatic potential (ESP). Cube files store the value of a scalar; quantity on a regular Cartesian grid, and can be visualized with several; visualization programs, some of which are free, like VMD; (http://www.ks.uiuc.edu/Research/vmd/).; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True; set cubeprop_tasks ['orbitals']; set cubeprop_orbitals [5,6,-5,-6]. E, wfn = energy('scf', return_wfn=True); cubeprop(wfn). In this example, the cubeprop(); call after the energy('scf') command; executes the cubeprop code. The array CUBEPROP_TASKS specifies which; tasks should be executed. In this case the task 'orbitals' generates cube; files for orbitals. The CUBEPROP_ORBITALS option specifies that cube files; should be generated only for alpha orbital",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/cubeprop-1.html:678,energy,energy,678,psi4manual/1.5.0/cubeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/cubeprop-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Generation of Cube Files — cubeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Generation of Cube Files — cubeprop(). Generation of Cube Files — cubeprop()¶; Code author: Robert M. Parrish, Francesco A. Evangelista and Peter Kraus; Section author: Francesco A. Evangelista and Peter Kraus. psi4.cubeprop(wfn)[source]; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). Introduction¶; PSI4 has the ability to export cube files that store information about; basis functions, molecular orbitals, the electron density, and; the electrostatic potential (ESP). Cube files store the value of a scalar; quantity on a regular Cartesian grid, and can be visualized with several; visualization programs, some of which are free, like VMD; (http://www.ks.uiuc.edu/Research/vmd/).; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True; set cubeprop_tasks ['orbitals']; set cubeprop_orbitals [5,6,-5,-6]. E, wfn = energy('scf', return_wfn=True); cubeprop(wfn). In this example, the cubeprop(); call after the energy('scf') command; executes the cubeprop code. The array CUBEPROP_TASKS specifies which; tasks should be executed. In this case the task 'orbitals' generates cube; files for orbitals. The CUBEPROP_ORBITALS option specifies that cube files; should be generated only for alpha orbital",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/cubeprop.html:678,energy,energy,678,psi4manual/1.6.x/cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/cubeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Generation of Cube Files — cubeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Generation of Cube Files — cubeprop(). Generation of Cube Files — cubeprop()¶; Code author: Robert M. Parrish, Francesco A. Evangelista and Peter Kraus; Section author: Francesco A. Evangelista and Peter Kraus. psi4.cubeprop(wfn, **kwargs)[source]; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). Introduction¶; PSI4 has the ability to export cube files that store information about; basis functions, molecular orbitals, the electron density, and; the electrostatic potential (ESP). Cube files store the value of a scalar; quantity on a regular Cartesian grid, and can be visualized with several; visualization programs, some of which are free, like VMD; (http://www.ks.uiuc.edu/Research/vmd/).; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True; set cubeprop_tasks ['orbitals']; set cubeprop_orbitals [5,6,-5,-6]. E, wfn = energy('scf', return_wfn=True); cubeprop(wfn). In this example, the cubeprop(); call after the energy('scf') command; executes the cubeprop code. The array CUBEPROP_TASKS specifies which; tasks should be executed. In this case the task 'orbitals' generates cube; files for orbitals. The CUBEPROP_ORBITALS option specifies that cube files; should be generated only for ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/cubeprop.html:691,energy,energy,691,psi4manual/1.7.x/cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/cubeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Generation of Cube Files — cubeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Generation of Cube Files — cubeprop(). Generation of Cube Files — cubeprop()¶; Code author: Robert M. Parrish, Francesco A. Evangelista and Peter Kraus; Section author: Francesco A. Evangelista and Peter Kraus. psi4.cubeprop(wfn, **kwargs)[source]; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). Introduction¶; PSI4 has the ability to export cube files that store information about; basis functions, molecular orbitals, the electron density, and; the electrostatic potential (ESP). Cube files store the value of a scalar; quantity on a regular Cartesian grid, and can be visualized with several; visualization programs, some of which are free, like VMD; (http://www.ks.uiuc.edu/Research/vmd/).; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True; set cubeprop_tasks ['orbitals']; set cubeprop_orbitals [5,6,-5,-6]. E, wfn = energy('scf', return_wfn=True); cubeprop(wfn). In this example, the cubeprop(); call after the energy('scf') command; executes the cubeprop code. The array CUBEPROP_TASKS specifies which; tasks should be executed. In this case the task 'orbitals' generates cube; files for orbitals. The CUBEPROP_ORBITALS option specifies that cube files; should be generated only fo",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/cubeprop.html:693,energy,energy,693,psi4manual/1.8.x/cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/cubeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Generation of Cube Files — cubeprop(). Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Generation of Cube Files — cubeprop(). Generation of Cube Files — cubeprop()¶; Code author: Robert M. Parrish, Francesco A. Evangelista and Peter Kraus; Section author: Francesco A. Evangelista and Peter Kraus. psi4.cubeprop(wfn, **kwargs)[source]; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). Introduction¶; PSI4 has the ability to export cube files that store information about; basis functions, molecular orbitals, the electron density, and; the electrostatic potential (ESP). Cube files store the value of a scalar; quantity on a regular Cartesian grid, and can be visualized with several; visualization programs, some of which are free, like VMD; (http://www.ks.uiuc.edu/Research/vmd/).; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True; set cubeprop_tasks ['orbitals']; set cubeprop_orbitals [5,6,-5,-6]. E, wfn = energy('scf', return_wfn=True); cubeprop(wfn). In this example, the cubeprop(); call after the energy('scf') command; executes the cubeprop code. The array CUBEPROP_TASKS specifies which; tasks should be executed. In this case the task 'orbitals' generates cube; files for orbitals. The CUBEPROP_ORBITALS option specifies that cube files; should be generated only fo",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/cubeprop.html:693,energy,energy,693,psi4manual/1.9.x/cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/cubeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Geometry Optimization — optimize() and gradient(). Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the opt",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/opt.html:943,energy,energy,943,psi4manual/master/opt.html,https://psicode.org,https://psicode.org/psi4manual/master/opt.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.ConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. mo",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/opt-1.html:880,energy,energy,880,psi4manual/1.1.0/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/opt-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype access",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/opt-1.html:882,energy,energy,882,psi4manual/1.2.1/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/opt-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype access",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/opt-1.html:882,energy,energy,882,psi4manual/1.3.2/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/opt-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Geometry Optimization — optimize() and gradient(). Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, whic",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/opt-1.html:932,energy,energy,932,psi4manual/1.4.0/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/opt-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Geometry Optimization — optimize() and gradient(). Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, whic",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/opt-1.html:932,energy,energy,932,psi4manual/1.5.0/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/opt-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Geometry Optimization — optimize() and gradient(). Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, whic",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/opt.html:932,energy,energy,932,psi4manual/1.6.x/opt.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/opt.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Geometry Optimization — optimize() and gradient(). Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/opt.html:934,energy,energy,934,psi4manual/1.7.x/opt.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/opt.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Geometry Optimization — optimize() and gradient(). Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimizati",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/opt.html:936,energy,energy,936,psi4manual/1.8.x/opt.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/opt.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Geometry Optimization — optimize() and gradient(). Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Geometry Optimization — optimize() and gradient(). Geometry Optimization — optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry optimization module. psi4.optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimizati",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/opt.html:936,energy,energy,936,psi4manual/1.9.x/opt.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/opt.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Geometry Optimization, optimize() and gradient() — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Psithon Functions: Invoking a Calculation ». Geometry Optimization, optimize() and gradient()¶. Psi4 Native Gradient Methods; Psi4 Native DFT Gradient Methods (excepting double-hybrids); CFOUR Interfaced Gradient Methods. For further discussion of geometry optimization, see; Sec. Geometry Optimization.; optimize() is the only command most users will ever; need to access directly to perform geometry optimizations. Behind; the scenes, optimize() is a wrapper that repeatedly; calls gradient() that computes the gradient then adds a; call to the geometry projection module. optimize(name[, molecule, return_wfn, func, mode, dertype, hessian_with])[source]¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || 'off' ; Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. func (function) – gradient || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. mode (string) – 'continuous' || 'sow' || 'reap'; For a finite difference of energies optimization, indicates whet",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/opt-1.html:923,energy,energy,923,psi4manual/1.0.0/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/opt-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. H0_BLOCKSIZE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». H0_BLOCKSIZE¶. This parameter specifies the size of the H0 block of the Hamiltonian which is solved exactly. The n determinants with the lowest SCF energy are selected, and a submatrix of the Hamiltonian is formed using these determinants. This submatrix is used to accelerate convergence of the CI iterations in the OLSEN and MITRUSHENKOV iteration schemes, and also to find a good starting guess for the SEM method if GUESS_VECTOR is H0_BLOCK. Defaults to 400. Note that the program may change the given size for Ms=0 cases MS0 is TRUE) if it determines that the H0 block includes only one member of a pair of determinants related by time reversal symmetry. For very small block sizes, this could conceivably eliminate the entire H0 block; the program should print warnings if this occurs. Type: integer; Default: 400. Previous topic; H0_BLOCK_COUPLING_SIZE; Next topic; H0_GUESS_SIZE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__h0_blocksize-1.html:306,energy,energy,306,psi4manual/4.0b2/autodir_options_c/detci__h0_blocksize-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__h0_blocksize-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. H0_BLOCKSIZE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». H0_BLOCKSIZE¶. This parameter specifies the size of the H0 block of the Hamiltonian which is solved exactly. The n determinants with the lowest SCF energy are selected, and a submatrix of the Hamiltonian is formed using these determinants. This submatrix is used to accelerate convergence of the CI iterations in the OLSEN and MITRUSHENKOV iteration schemes, and also to find a good starting guess for the SEM method if GUESS_VECTOR is H0_BLOCK. Defaults to 400. Note that the program may change the given size for Ms=0 cases MS0 is TRUE) if it determines that the H0 block includes only one member of a pair of determinants related by time reversal symmetry. For very small block sizes, this could conceivably eliminate the entire H0 block; the program should print warnings if this occurs. Type: integer; Default: 400. Previous topic; H0_BLOCK_COUPLING_SIZE; Next topic; H0_GUESS_SIZE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__h0_blocksize-1.html:321,energy,energy,321,psi4manual/4.0b3/autodir_options_c/detci__h0_blocksize-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__h0_blocksize-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. H0_BLOCKSIZE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». H0_BLOCKSIZE¶. This parameter specifies the size of the H0 block of the Hamiltonian which is solved exactly. The n determinants with the lowest SCF energy are selected, and a submatrix of the Hamiltonian is formed using these determinants. This submatrix is used to accelerate convergence of the CI iterations in the OLSEN and MITRUSHENKOV iteration schemes, and also to find a good starting guess for the SEM method if GUESS_VECTOR is H0_BLOCK. Defaults to 400. Note that the program may change the given size for Ms=0 cases MS0 is TRUE) if it determines that the H0 block includes only one member of a pair of determinants related by time reversal symmetry. For very small block sizes, this could conceivably eliminate the entire H0 block; the program should print warnings if this occurs. Type: integer; Default: 400. Previous topic; H0_BLOCK_COUPLING_SIZE; Next topic; H0_GUESS_SIZE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__h0_blocksize-1.html:321,energy,energy,321,psi4manual/4.0b4/autodir_options_c/detci__h0_blocksize-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__h0_blocksize-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. H0_BLOCKSIZE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». H0_BLOCKSIZE¶. This parameter specifies the size of the H0 block of the Hamiltonian which is solved exactly. The n determinants with the lowest SCF energy are selected, and a submatrix of the Hamiltonian is formed using these determinants. This submatrix is used to accelerate convergence of the CI iterations in the OLSEN and MITRUSHENKOV iteration schemes, and also to find a good starting guess for the SEM method if GUESS_VECTOR is H0_BLOCK. Defaults to 400. Note that the program may change the given size for Ms=0 cases MS0 is TRUE) if it determines that the H0 block includes only one member of a pair of determinants related by time reversal symmetry. For very small block sizes, this could conceivably eliminate the entire H0 block; the program should print warnings if this occurs. Type: integer; Default: 400. Previous topic; H0_BLOCK_COUPLING_SIZE; Next topic; H0_GUESS_SIZE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__h0_blocksize-1.html:321,energy,energy,321,psi4manual/4.0b5/autodir_options_c/detci__h0_blocksize-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__h0_blocksize-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. H0_BLOCKSIZE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». H0_BLOCKSIZE¶. This parameter specifies the size of the H0 block of the Hamiltonian which is solved exactly. The n determinants with the lowest SCF energy are selected, and a submatrix of the Hamiltonian is formed using these determinants. This submatrix is used to accelerate convergence of the CI iterations in the OLSEN and MITRUSHENKOV iteration schemes, and also to find a good starting guess for the SEM method if GUESS_VECTOR is H0_BLOCK. Defaults to 1000. Note that the program may change the given size for Ms=0 cases MS0 is TRUE) if it determines that the H0 block includes only one member of a pair of determinants related by time reversal symmetry. For very small block sizes, this could conceivably eliminate the entire H0 block; the program should print warnings if this occurs. Type: integer; Default: 1000. Previous topic; H0_BLOCK_COUPLING_SIZE; Next topic; H0_GUESS_SIZE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__h0_blocksize-1.html:328,energy,energy,328,psi4manual/1.0.0/autodir_options_c/detci__h0_blocksize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__h0_blocksize-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. H0_BLOCKSIZE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; H0_BLOCKSIZE. H0_BLOCKSIZE¶. This parameter specifies the size of the H0 block of the Hamiltonian which is solved exactly. The n determinants with the lowest SCF energy are selected, and a submatrix of the Hamiltonian is formed using these determinants. This submatrix is used to accelerate convergence of the CI iterations in the OLSEN and MITRUSHENKOV iteration schemes, and also to find a good starting guess for the SEM method if GUESS_VECTOR is H0_BLOCK. Defaults to 1000. Note that the program may change the given size for Ms=0 cases MS0 is TRUE) if it determines that the H0 block includes only one member of a pair of determinants related by time reversal symmetry. For very small block sizes, this could conceivably eliminate the entire H0 block; the program should print warnings if this occurs. Type: integer; Default: 1000. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; H0_BLOCKSIZE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/detci__h0_blocksize.html:295,energy,energy,295,psi4manual/master/autodir_options_c/detci__h0_blocksize.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/detci__h0_blocksize.html,2,['energy'],['energy']
Energy Efficiency,"﻿. H0_BLOCKSIZE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; H0_BLOCKSIZE. H0_BLOCKSIZE¶. This parameter specifies the size of the H0 block of the Hamiltonian which is solved exactly. The n determinants with the lowest SCF energy are selected, and a submatrix of the Hamiltonian is formed using these determinants. This submatrix is used to accelerate convergence of the CI iterations in the OLSEN and MITRUSHENKOV iteration schemes, and also to find a good starting guess for the SEM method if GUESS_VECTOR is H0_BLOCK. Defaults to 1000. Note that the program may change the given size for Ms=0 cases MS0 is TRUE) if it determines that the H0 block includes only one member of a pair of determinants related by time reversal symmetry. For very small block sizes, this could conceivably eliminate the entire H0 block; the program should print warnings if this occurs. Type: integer; Default: 1000. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; H0_BLOCKSIZE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__h0_blocksize-1.html:286,energy,energy,286,psi4manual/1.4.0/autodir_options_c/detci__h0_blocksize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__h0_blocksize-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. H0_BLOCKSIZE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; H0_BLOCKSIZE. H0_BLOCKSIZE¶. This parameter specifies the size of the H0 block of the Hamiltonian which is solved exactly. The n determinants with the lowest SCF energy are selected, and a submatrix of the Hamiltonian is formed using these determinants. This submatrix is used to accelerate convergence of the CI iterations in the OLSEN and MITRUSHENKOV iteration schemes, and also to find a good starting guess for the SEM method if GUESS_VECTOR is H0_BLOCK. Defaults to 1000. Note that the program may change the given size for Ms=0 cases MS0 is TRUE) if it determines that the H0 block includes only one member of a pair of determinants related by time reversal symmetry. For very small block sizes, this could conceivably eliminate the entire H0 block; the program should print warnings if this occurs. Type: integer; Default: 1000. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; H0_BLOCKSIZE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__h0_blocksize-1.html:286,energy,energy,286,psi4manual/1.5.0/autodir_options_c/detci__h0_blocksize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__h0_blocksize-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. H0_BLOCKSIZE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; H0_BLOCKSIZE. H0_BLOCKSIZE¶. This parameter specifies the size of the H0 block of the Hamiltonian which is solved exactly. The n determinants with the lowest SCF energy are selected, and a submatrix of the Hamiltonian is formed using these determinants. This submatrix is used to accelerate convergence of the CI iterations in the OLSEN and MITRUSHENKOV iteration schemes, and also to find a good starting guess for the SEM method if GUESS_VECTOR is H0_BLOCK. Defaults to 1000. Note that the program may change the given size for Ms=0 cases MS0 is TRUE) if it determines that the H0 block includes only one member of a pair of determinants related by time reversal symmetry. For very small block sizes, this could conceivably eliminate the entire H0 block; the program should print warnings if this occurs. Type: integer; Default: 1000. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; H0_BLOCKSIZE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__h0_blocksize.html:286,energy,energy,286,psi4manual/1.6.x/autodir_options_c/detci__h0_blocksize.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__h0_blocksize.html,2,['energy'],['energy']
Energy Efficiency,"﻿. H0_BLOCKSIZE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; H0_BLOCKSIZE. H0_BLOCKSIZE¶. This parameter specifies the size of the H0 block of the Hamiltonian which is solved exactly. The n determinants with the lowest SCF energy are selected, and a submatrix of the Hamiltonian is formed using these determinants. This submatrix is used to accelerate convergence of the CI iterations in the OLSEN and MITRUSHENKOV iteration schemes, and also to find a good starting guess for the SEM method if GUESS_VECTOR is H0_BLOCK. Defaults to 1000. Note that the program may change the given size for Ms=0 cases MS0 is TRUE) if it determines that the H0 block includes only one member of a pair of determinants related by time reversal symmetry. For very small block sizes, this could conceivably eliminate the entire H0 block; the program should print warnings if this occurs. Type: integer; Default: 1000. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; H0_BLOCKSIZE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__h0_blocksize.html:286,energy,energy,286,psi4manual/1.7.x/autodir_options_c/detci__h0_blocksize.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__h0_blocksize.html,2,['energy'],['energy']
Energy Efficiency,"﻿. H0_BLOCKSIZE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; H0_BLOCKSIZE. H0_BLOCKSIZE¶. This parameter specifies the size of the H0 block of the Hamiltonian which is solved exactly. The n determinants with the lowest SCF energy are selected, and a submatrix of the Hamiltonian is formed using these determinants. This submatrix is used to accelerate convergence of the CI iterations in the OLSEN and MITRUSHENKOV iteration schemes, and also to find a good starting guess for the SEM method if GUESS_VECTOR is H0_BLOCK. Defaults to 1000. Note that the program may change the given size for Ms=0 cases MS0 is TRUE) if it determines that the H0 block includes only one member of a pair of determinants related by time reversal symmetry. For very small block sizes, this could conceivably eliminate the entire H0 block; the program should print warnings if this occurs. Type: integer; Default: 1000. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; H0_BLOCKSIZE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__h0_blocksize.html:288,energy,energy,288,psi4manual/1.8.x/autodir_options_c/detci__h0_blocksize.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__h0_blocksize.html,2,['energy'],['energy']
Energy Efficiency,"﻿. H0_BLOCKSIZE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; H0_BLOCKSIZE. H0_BLOCKSIZE¶. This parameter specifies the size of the H0 block of the Hamiltonian which is solved exactly. The n determinants with the lowest SCF energy are selected, and a submatrix of the Hamiltonian is formed using these determinants. This submatrix is used to accelerate convergence of the CI iterations in the OLSEN and MITRUSHENKOV iteration schemes, and also to find a good starting guess for the SEM method if GUESS_VECTOR is H0_BLOCK. Defaults to 1000. Note that the program may change the given size for Ms=0 cases MS0 is TRUE) if it determines that the H0 block includes only one member of a pair of determinants related by time reversal symmetry. For very small block sizes, this could conceivably eliminate the entire H0 block; the program should print warnings if this occurs. Type: integer; Default: 1000. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; H0_BLOCKSIZE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__h0_blocksize.html:288,energy,energy,288,psi4manual/1.9.x/autodir_options_c/detci__h0_blocksize.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__h0_blocksize.html,2,['energy'],['energy']
Energy Efficiency,"﻿. HD_AVG — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». HD_AVG¶. How to average H diag energies over spin coupling sets. HD_EXACT uses the exact diagonal energies which results in expansion vectors which break spin symmetry. HD_KAVE averages the diagonal energies over a spin-coupling set yielding spin pure expansion vectors. ORB_ENER employs the sum of orbital energy approximation giving spin pure expansion vectors but usually doubles the number of Davidson iterations. EVANGELISTI uses the sums and differences of orbital energies with the SCF reference energy to produce spin pure expansion vectors. LEININGER approximation which subtracts the one-electron contribution from the orbital energies, multiplies by 0.5, and adds the one-electron contribution back in, producing spin pure expansion vectors and developed by Matt Leininger and works as well as EVANGELISTI. Type: string; Possible Values: EVANGELISTI, HD_EXACT, HD_KAVE, ORB_ENER, LEININGER, Z_KAVE; Default: EVANGELISTI. Previous topic; H0_GUESS_SIZE; Next topic; HD_OTF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__hd_avg-1.html:459,energy,energy,459,psi4manual/4.0b2/autodir_options_c/detci__hd_avg-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__hd_avg-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. HD_AVG — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». HD_AVG¶. How to average H diag energies over spin coupling sets. HD_EXACT uses the exact diagonal energies which results in expansion vectors which break spin symmetry. HD_KAVE averages the diagonal energies over a spin-coupling set yielding spin pure expansion vectors. ORB_ENER employs the sum of orbital energy approximation giving spin pure expansion vectors but usually doubles the number of Davidson iterations. EVANGELISTI uses the sums and differences of orbital energies with the SCF reference energy to produce spin pure expansion vectors. LEININGER approximation which subtracts the one-electron contribution from the orbital energies, multiplies by 0.5, and adds the one-electron contribution back in, producing spin pure expansion vectors and developed by Matt Leininger and works as well as EVANGELISTI. Type: string; Possible Values: EVANGELISTI, HD_EXACT, HD_KAVE, ORB_ENER, LEININGER, Z_KAVE; Default: EVANGELISTI. Previous topic; H0_GUESS_SIZE; Next topic; HD_OTF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__hd_avg-1.html:474,energy,energy,474,psi4manual/4.0b3/autodir_options_c/detci__hd_avg-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__hd_avg-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. HD_AVG — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». HD_AVG¶. How to average H diag energies over spin coupling sets. HD_EXACT uses the exact diagonal energies which results in expansion vectors which break spin symmetry. HD_KAVE averages the diagonal energies over a spin-coupling set yielding spin pure expansion vectors. ORB_ENER employs the sum of orbital energy approximation giving spin pure expansion vectors but usually doubles the number of Davidson iterations. EVANGELISTI uses the sums and differences of orbital energies with the SCF reference energy to produce spin pure expansion vectors. LEININGER approximation which subtracts the one-electron contribution from the orbital energies, multiplies by 0.5, and adds the one-electron contribution back in, producing spin pure expansion vectors and developed by Matt Leininger and works as well as EVANGELISTI. Type: string; Possible Values: EVANGELISTI, HD_EXACT, HD_KAVE, ORB_ENER, LEININGER, Z_KAVE; Default: EVANGELISTI. Previous topic; H0_GUESS_SIZE; Next topic; HD_OTF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__hd_avg-1.html:474,energy,energy,474,psi4manual/4.0b4/autodir_options_c/detci__hd_avg-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__hd_avg-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. HD_AVG — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». HD_AVG¶. How to average H diag energies over spin coupling sets. HD_EXACT uses the exact diagonal energies which results in expansion vectors which break spin symmetry. HD_KAVE averages the diagonal energies over a spin-coupling set yielding spin pure expansion vectors. ORB_ENER employs the sum of orbital energy approximation giving spin pure expansion vectors but usually doubles the number of Davidson iterations. EVANGELISTI uses the sums and differences of orbital energies with the SCF reference energy to produce spin pure expansion vectors. LEININGER approximation which subtracts the one-electron contribution from the orbital energies, multiplies by 0.5, and adds the one-electron contribution back in, producing spin pure expansion vectors and developed by Matt Leininger and works as well as EVANGELISTI. Type: string; Possible Values: EVANGELISTI, HD_EXACT, HD_KAVE, ORB_ENER, LEININGER, Z_KAVE; Default: EVANGELISTI. Previous topic; H0_GUESS_SIZE; Next topic; HD_OTF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__hd_avg-1.html:474,energy,energy,474,psi4manual/4.0b5/autodir_options_c/detci__hd_avg-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__hd_avg-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. HD_AVG — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». HD_AVG¶. How to average H diag energies over spin coupling sets. HD_EXACT uses the exact diagonal energies which results in expansion vectors which break spin symmetry. HD_KAVE averages the diagonal energies over a spin-coupling set yielding spin pure expansion vectors. ORB_ENER employs the sum of orbital energy approximation giving spin pure expansion vectors but usually doubles the number of Davidson iterations. EVANGELISTI uses the sums and differences of orbital energies with the SCF reference energy to produce spin pure expansion vectors. LEININGER approximation which subtracts the one-electron contribution from the orbital energies, multiplies by 0.5, and adds the one-electron contribution back in, producing spin pure expansion vectors and developed by Matt Leininger and works as well as EVANGELISTI. Type: string; Possible Values: EVANGELISTI, HD_EXACT, HD_KAVE, ORB_ENER, LEININGER, Z_KAVE; Default: EVANGELISTI. Previous topic; H0_GUESS_SIZE; Next topic; HD_OTF. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__hd_avg-1.html:481,energy,energy,481,psi4manual/1.0.0/autodir_options_c/detci__hd_avg-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__hd_avg-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. HD_AVG. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; HD_AVG. HD_AVG¶. How to average H diag energies over spin coupling sets. HD_EXACT uses the exact diagonal energies which results in expansion vectors which break spin symmetry. HD_KAVE averages the diagonal energies over a spin-coupling set yielding spin pure expansion vectors. ORB_ENER employs the sum of orbital energy approximation giving spin pure expansion vectors but usually doubles the number of Davidson iterations. EVANGELISTI uses the sums and differences of orbital energies with the SCF reference energy to produce spin pure expansion vectors. LEININGER approximation which subtracts the one-electron contribution from the orbital energies, multiplies by 0.5, and adds the one-electron contribution back in, producing spin pure expansion vectors and developed by Matt Leininger and works as well as EVANGELISTI. Type: string; Possible Values: EVANGELISTI, HD_EXACT, HD_KAVE, ORB_ENER, LEININGER, Z_KAVE; Default: EVANGELISTI. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; HD_AVG. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/detci__hd_avg.html:442,energy,energy,442,psi4manual/master/autodir_options_c/detci__hd_avg.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/detci__hd_avg.html,4,['energy'],['energy']
Energy Efficiency,"﻿. HD_AVG. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; HD_AVG. HD_AVG¶. How to average H diag energies over spin coupling sets. HD_EXACT uses the exact diagonal energies which results in expansion vectors which break spin symmetry. HD_KAVE averages the diagonal energies over a spin-coupling set yielding spin pure expansion vectors. ORB_ENER employs the sum of orbital energy approximation giving spin pure expansion vectors but usually doubles the number of Davidson iterations. EVANGELISTI uses the sums and differences of orbital energies with the SCF reference energy to produce spin pure expansion vectors. LEININGER approximation which subtracts the one-electron contribution from the orbital energies, multiplies by 0.5, and adds the one-electron contribution back in, producing spin pure expansion vectors and developed by Matt Leininger and works as well as EVANGELISTI. Type: string; Possible Values: EVANGELISTI, HD_EXACT, HD_KAVE, ORB_ENER, LEININGER, Z_KAVE; Default: EVANGELISTI. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; HD_AVG. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__hd_avg-1.html:433,energy,energy,433,psi4manual/1.4.0/autodir_options_c/detci__hd_avg-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__hd_avg-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. HD_AVG. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; HD_AVG. HD_AVG¶. How to average H diag energies over spin coupling sets. HD_EXACT uses the exact diagonal energies which results in expansion vectors which break spin symmetry. HD_KAVE averages the diagonal energies over a spin-coupling set yielding spin pure expansion vectors. ORB_ENER employs the sum of orbital energy approximation giving spin pure expansion vectors but usually doubles the number of Davidson iterations. EVANGELISTI uses the sums and differences of orbital energies with the SCF reference energy to produce spin pure expansion vectors. LEININGER approximation which subtracts the one-electron contribution from the orbital energies, multiplies by 0.5, and adds the one-electron contribution back in, producing spin pure expansion vectors and developed by Matt Leininger and works as well as EVANGELISTI. Type: string; Possible Values: EVANGELISTI, HD_EXACT, HD_KAVE, ORB_ENER, LEININGER, Z_KAVE; Default: EVANGELISTI. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; HD_AVG. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__hd_avg-1.html:433,energy,energy,433,psi4manual/1.5.0/autodir_options_c/detci__hd_avg-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__hd_avg-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. HD_AVG. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; HD_AVG. HD_AVG¶. How to average H diag energies over spin coupling sets. HD_EXACT uses the exact diagonal energies which results in expansion vectors which break spin symmetry. HD_KAVE averages the diagonal energies over a spin-coupling set yielding spin pure expansion vectors. ORB_ENER employs the sum of orbital energy approximation giving spin pure expansion vectors but usually doubles the number of Davidson iterations. EVANGELISTI uses the sums and differences of orbital energies with the SCF reference energy to produce spin pure expansion vectors. LEININGER approximation which subtracts the one-electron contribution from the orbital energies, multiplies by 0.5, and adds the one-electron contribution back in, producing spin pure expansion vectors and developed by Matt Leininger and works as well as EVANGELISTI. Type: string; Possible Values: EVANGELISTI, HD_EXACT, HD_KAVE, ORB_ENER, LEININGER, Z_KAVE; Default: EVANGELISTI. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; HD_AVG. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__hd_avg.html:433,energy,energy,433,psi4manual/1.6.x/autodir_options_c/detci__hd_avg.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__hd_avg.html,4,['energy'],['energy']
Energy Efficiency,"﻿. HD_AVG. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; HD_AVG. HD_AVG¶. How to average H diag energies over spin coupling sets. HD_EXACT uses the exact diagonal energies which results in expansion vectors which break spin symmetry. HD_KAVE averages the diagonal energies over a spin-coupling set yielding spin pure expansion vectors. ORB_ENER employs the sum of orbital energy approximation giving spin pure expansion vectors but usually doubles the number of Davidson iterations. EVANGELISTI uses the sums and differences of orbital energies with the SCF reference energy to produce spin pure expansion vectors. LEININGER approximation which subtracts the one-electron contribution from the orbital energies, multiplies by 0.5, and adds the one-electron contribution back in, producing spin pure expansion vectors and developed by Matt Leininger and works as well as EVANGELISTI. Type: string; Possible Values: EVANGELISTI, HD_EXACT, HD_KAVE, ORB_ENER, LEININGER, Z_KAVE; Default: EVANGELISTI. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; HD_AVG. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__hd_avg.html:433,energy,energy,433,psi4manual/1.7.x/autodir_options_c/detci__hd_avg.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__hd_avg.html,4,['energy'],['energy']
Energy Efficiency,"﻿. HD_AVG. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; HD_AVG. HD_AVG¶. How to average H diag energies over spin coupling sets. HD_EXACT uses the exact diagonal energies which results in expansion vectors which break spin symmetry. HD_KAVE averages the diagonal energies over a spin-coupling set yielding spin pure expansion vectors. ORB_ENER employs the sum of orbital energy approximation giving spin pure expansion vectors but usually doubles the number of Davidson iterations. EVANGELISTI uses the sums and differences of orbital energies with the SCF reference energy to produce spin pure expansion vectors. LEININGER approximation which subtracts the one-electron contribution from the orbital energies, multiplies by 0.5, and adds the one-electron contribution back in, producing spin pure expansion vectors and developed by Matt Leininger and works as well as EVANGELISTI. Type: string; Possible Values: EVANGELISTI, HD_EXACT, HD_KAVE, ORB_ENER, LEININGER, Z_KAVE; Default: EVANGELISTI. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; HD_AVG. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__hd_avg.html:435,energy,energy,435,psi4manual/1.8.x/autodir_options_c/detci__hd_avg.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__hd_avg.html,4,['energy'],['energy']
Energy Efficiency,"﻿. HD_AVG. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; HD_AVG. HD_AVG¶. How to average H diag energies over spin coupling sets. HD_EXACT uses the exact diagonal energies which results in expansion vectors which break spin symmetry. HD_KAVE averages the diagonal energies over a spin-coupling set yielding spin pure expansion vectors. ORB_ENER employs the sum of orbital energy approximation giving spin pure expansion vectors but usually doubles the number of Davidson iterations. EVANGELISTI uses the sums and differences of orbital energies with the SCF reference energy to produce spin pure expansion vectors. LEININGER approximation which subtracts the one-electron contribution from the orbital energies, multiplies by 0.5, and adds the one-electron contribution back in, producing spin pure expansion vectors and developed by Matt Leininger and works as well as EVANGELISTI. Type: string; Possible Values: EVANGELISTI, HD_EXACT, HD_KAVE, ORB_ENER, LEININGER, Z_KAVE; Default: EVANGELISTI. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; HD_AVG. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__hd_avg.html:435,energy,energy,435,psi4manual/1.9.x/autodir_options_c/detci__hd_avg.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__hd_avg.html,4,['energy'],['energy']
Energy Efficiency,"﻿. HF. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. HF¶. class psi4.core.HF¶; Bases: psi4.core.Wavefunction; docstring; Methods Summary. V_potential(self); Returns the internal DFT V object. Va(self); Returns the Alpha Kohn-Shame Potential Matrix. Vb(self); Returns the Alpha Kohn-Shame Potential Matrix. cphf_Hx(self, arg0); CPHF Hessian-vector prodcuts (4 * J - K - K.T). cphf_converged(self); Adds occupied guess alpha orbitals. cphf_solve(self, x_vec, conv_tol, max_iter, …); Solves the CPHF equations for a given set of x vectors. finalize_E(self); Computes the final SCF energy. form_C(self); Forms the Orbital Matrices from the current Fock Matrices. form_D(self); Forms the Density Matrices from the current Orbitals Matrices. form_F(self); Forms the F matrix. form_G(self); Forms the G matrix. form_V(self); Form the Kohn-Sham Potential Matrices from the current Density Matrices. functional(self); Returns the internal DFT Superfunctional. guess_Ca(self, arg0); Sets the guess Alpha Orbital Matrix. guess_Cb(self, arg0); Sets the guess Beta Orbital Matrix. initialize(self); Initializes the Wavefunction. iterations(self); Iterates the Wavefunction until convergence criteria have been met. jk(self); Returns the internal JK object. occupation_a(self); Returns the Alpha occupation numbers. occupation_b(self); Returns the Beta occupation numbers. onel_Hx(self, arg0); One-electron Hessian-vector products. reset_occ(self, arg0); If True, the occupation will be reset after the guess to the inital occupation. semicanonicalize(self); Semicanonicalizes the orbitals for ROHF. set_jk(self, arg0); Sets the internal JK object !expert. set_sad_basissets(self, arg0); Sets the Superposition of Atomic Densities basisset. set_sad_fitting_basissets(self, arg0); Sets the Superposition of Atomic Densities density-fitted basisset. twoel_Hx(self, arg0, arg1, arg2); Two-electron Hessian-vector products. Methods Documentation. V_potential(se",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.hf.html:636,energy,energy,636,psi4manual/1.2.1/api/psi4.core.hf.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.hf.html,1,['energy'],['energy']
Energy Efficiency,"﻿. HF: Hartree–Fock Theory — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Theoretical Methods: SCF to FCI ». HF: Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). PSI4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type pk; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a PK algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. After printing all manner; of titles, geometries, sizings, and algorithm choices, the SCF finally reaches; the iterations:; Total Energy Delta E Density RMS. @UHF iter 0: -149.76856421865352 -4.69109e+01 0.00000e+00; @UHF iter 1: -149.59793338958522 1.70631e-01 5.72371e-02; @UHF iter 2: -149.62408782458331 -2.61544e-02 8.04195e-03 DIIS; @UHF iter 3: -149.62679515182390 -2.70733e-03 2.51542e-03 DIIS; @UHF iter 4: -149.62726459105770 -4.69439e-04 1.06897e-03 DIIS; @UHF iter 5: -149.62730549814114 -4.09071e-05 2.70311e-04 DIIS; @UHF iter 6: -149.62730736371790 -1.86558e-06 5.94924e-05 DIIS; @UHF iter 7: -149.62730740227752 -3.85596e-08 9.93250e-06 DIIS; @UHF iter 8: -149.62730740325136 -9.738",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/scf-1.html:752,efficient,efficient,752,psi4manual/4.0b3/scf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/scf-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. HF: Hartree–Fock Theory — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Theoretical Methods: SCF to FCI ». HF: Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). PSI4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type pk; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a PK algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. DF integrals are; automatically used to converge the DF-SCF solution before the PK algorithm is; activated. After printing all manner of titles, geometries, sizings, and; algorithm choices, the SCF finally reaches the iterations:; Total Energy Delta E RMS |[F,P]|. @UHF iter 0: -149.76816019169962 -1.49768e+02 1.36000e-01; @UHF iter 1: -149.59759112756984 1.70569e-01 2.42437e-02; @UHF iter 2: -149.62372414554761 -2.61330e-02 6.10239e-03 DIIS; @UHF iter 3: -149.62643112722810 -2.70698e-03 2.17299e-03 DIIS; @UHF iter 4: -149.62690062294968 -4.69496e-04 5.66895e-04 DIIS; @UHF iter 5: -149.62694151409750 -4.08911e-05 1.26359e-04 DIIS; @UHF iter 6: -149.62694337042228 -1.85632e-06 1.84114e-05 DI",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/scf-1.html:752,efficient,efficient,752,psi4manual/4.0b4/scf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/scf-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. HF: Hartree–Fock Theory — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Theoretical Methods: SCF to FCI ». HF: Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). PSI4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type pk; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a PK algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. DF integrals are; automatically used to converge the DF-SCF solution before the PK algorithm is; activated. After printing all manner of titles, geometries, sizings, and; algorithm choices, the SCF finally reaches the iterations:; Total Energy Delta E RMS |[F,P]|. @UHF iter 0: -149.76816019169962 -1.49768e+02 1.36000e-01; @UHF iter 1: -149.59759112756984 1.70569e-01 2.42437e-02; @UHF iter 2: -149.62372414554761 -2.61330e-02 6.10239e-03 DIIS; @UHF iter 3: -149.62643112722810 -2.70698e-03 2.17299e-03 DIIS; @UHF iter 4: -149.62690062294968 -4.69496e-04 5.66895e-04 DIIS; @UHF iter 5: -149.62694151409750 -4.08911e-05 1.26359e-04 DIIS; @UHF iter 6: -149.62694337042228 -1.85632e-06 1.84114e-05 DI",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/scf-1.html:752,efficient,efficient,752,psi4manual/4.0b5/scf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/scf-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. HF: Hartree–Fock Theory — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Theoretical Methods: SCF to FCI ». HF: Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish and Jerome F. Gonthier; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). Psi4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type direct; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a Direct algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. DF integrals are; automatically used to converge the DF-SCF solution before the Direct algorithm is; activated. After printing all manner of titles, geometries, sizings, and; algorithm choices, the SCF finally reaches the iterations:; Total Energy Delta E RMS |[F,P]|. @UHF iter 0: -149.76816019169962 -1.49768e+02 1.36000e-01; @UHF iter 1: -149.59759112756984 1.70569e-01 2.42437e-02; @UHF iter 2: -149.62372414554761 -2.61330e-02 6.10239e-03 DIIS; @UHF iter 3: -149.62643112722810 -2.70698e-03 2.17299e-03 DIIS; @UHF iter 4: -149.62690062294968 -4.69496e-04 5.66895e-04 DIIS; @UHF iter 5: -149.62694151409750 -4.08911e-05 1.26359e-04 DIIS; @UHF iter 6: -149.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/scf-1.html:782,efficient,efficient,782,psi4manual/1.0.0/scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/scf-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. HF: Hartree–Fock Theory. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Theoretical Methods: SCF to FCI; HF: Hartree–Fock Theory. HF: Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish and Jerome F. Gonthier; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). PSI4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type direct; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a Direct algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. DF integrals are; automatically used to converge the DF-SCF solution before the Direct algorithm is; activated. After printing all manner of titles, geometries, sizings, and; algorithm choices, the SCF finally reaches the iterations:; Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -149.80032977420572 -1.49800e+02 1.48808e-01; @DF-UHF iter 1: -149.59496320631871 2.05367e-01 2.58009e-02; @DF-UHF iter 2: -149.62349901753706 -2.85358e-02 6.68980e-03 DIIS; @DF-UHF iter 3: -149.62639942687878 -2.90041e-03 2.19285e-03 DIIS; @DF-UHF iter 4: -149.62689561367233 -4.96187e-04 5.99497e-04 DIIS; @DF-UHF iter 5: -149.62694151275420 -4.58991e-05 1.27338e-04 DIIS; @DF-UHF iter 6: -1",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/scf.html:764,efficient,efficient,764,psi4manual/master/scf.html,https://psicode.org,https://psicode.org/psi4manual/master/scf.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. HF: Hartree–Fock Theory. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Theoretical Methods: SCF to FCI. HF: Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish and Jerome F. Gonthier; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). PSI4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type direct; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a Direct algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. DF integrals are; automatically used to converge the DF-SCF solution before the Direct algorithm is; activated. After printing all manner of titles, geometries, sizings, and; algorithm choices, the SCF finally reaches the iterations:; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19 Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -149.80032977420572 -1.49800e+02 1.48808e-01; @DF-UHF iter 1: -149.59496320631871 2.05367e-01 2.58009e-02; @DF-UHF iter 2: -149.62349901753706 -2.85358e-02 6.68980e-03 DIIS; @DF-UHF iter 3: -149.62639942687878 -2.90041e-03 2.19285e-03 DIIS; @DF-UHF iter 4: -149.62689561367233 -4.96187e-04 5.99497e-04 DIIS; @DF-UHF ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/scf-1.html:730,efficient,efficient,730,psi4manual/1.1.0/scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/scf-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. HF: Hartree–Fock Theory. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Theoretical Methods: SCF to FCI. HF: Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish and Jerome F. Gonthier; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). PSI4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type direct; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a Direct algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. DF integrals are; automatically used to converge the DF-SCF solution before the Direct algorithm is; activated. After printing all manner of titles, geometries, sizings, and; algorithm choices, the SCF finally reaches the iterations:; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19 Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -149.80032977420572 -1.49800e+02 1.48808e-01; @DF-UHF iter 1: -149.59496320631871 2.05367e-01 2.58009e-02; @DF-UHF iter 2: -149.62349901753706 -2.85358e-02 6.68980e-03 DIIS; @DF-UHF iter 3: -149.62639942687878 -2.90041e-03 2.19285e-03 DIIS; @DF-UHF iter 4: -149.62689561367233 -4.96187e-04 5.99497e-04 DIIS; @DF-UH",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/scf-1.html:732,efficient,efficient,732,psi4manual/1.2.1/scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/scf-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. HF: Hartree–Fock Theory. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Theoretical Methods: SCF to FCI. HF: Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish and Jerome F. Gonthier; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). PSI4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type direct; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a Direct algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. DF integrals are; automatically used to converge the DF-SCF solution before the Direct algorithm is; activated. After printing all manner of titles, geometries, sizings, and; algorithm choices, the SCF finally reaches the iterations:; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19 Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -149.80032977420572 -1.49800e+02 1.48808e-01; @DF-UHF iter 1: -149.59496320631871 2.05367e-01 2.58009e-02; @DF-UHF iter 2: -149.62349901753706 -2.85358e-02 6.68980e-03 DIIS; @DF-UHF iter 3: -149.62639942687878 -2.90041e-03 2.19285e-03 DIIS; @DF-UHF iter 4: -149.62689561367233 -4.96187e-04 5.99497e-04 DIIS; @DF-UH",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/scf-1.html:732,efficient,efficient,732,psi4manual/1.3.2/scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/scf-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. HF: Hartree–Fock Theory. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Theoretical Methods: SCF to FCI; HF: Hartree–Fock Theory. HF: Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish and Jerome F. Gonthier; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). PSI4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type direct; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a Direct algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. DF integrals are; automatically used to converge the DF-SCF solution before the Direct algorithm is; activated. After printing all manner of titles, geometries, sizings, and; algorithm choices, the SCF finally reaches the iterations:; Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -149.80032977420572 -1.49800e+02 1.48808e-01; @DF-UHF iter 1: -149.59496320631871 2.05367e-01 2.58009e-02; @DF-UHF iter 2: -149.62349901753706 -2.85358e-02 6.68980e-03 DIIS; @DF-UHF iter 3: -149.62639942687878 -2.90041e-03 2.19285e-03 DIIS; @DF-UHF iter 4: -149.62689561367233 -4.96187e-04 5.99497e-04 DIIS; @DF-UHF iter 5: -149.62694151275420 -4.58991e-05 1.27338e-04 DIIS; @DF-UHF iter 6: -149.626943",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/scf-1.html:755,efficient,efficient,755,psi4manual/1.4.0/scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/scf-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. HF: Hartree–Fock Theory. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Theoretical Methods: SCF to FCI; HF: Hartree–Fock Theory. HF: Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish and Jerome F. Gonthier; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). PSI4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type direct; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a Direct algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. DF integrals are; automatically used to converge the DF-SCF solution before the Direct algorithm is; activated. After printing all manner of titles, geometries, sizings, and; algorithm choices, the SCF finally reaches the iterations:; Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -149.80032977420572 -1.49800e+02 1.48808e-01; @DF-UHF iter 1: -149.59496320631871 2.05367e-01 2.58009e-02; @DF-UHF iter 2: -149.62349901753706 -2.85358e-02 6.68980e-03 DIIS; @DF-UHF iter 3: -149.62639942687878 -2.90041e-03 2.19285e-03 DIIS; @DF-UHF iter 4: -149.62689561367233 -4.96187e-04 5.99497e-04 DIIS; @DF-UHF iter 5: -149.62694151275420 -4.58991e-05 1.27338e-04 DIIS; @DF-UHF iter 6: -149.626943",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/scf-1.html:755,efficient,efficient,755,psi4manual/1.5.0/scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/scf-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. HF: Hartree–Fock Theory. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Theoretical Methods: SCF to FCI; HF: Hartree–Fock Theory. HF: Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish and Jerome F. Gonthier; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). PSI4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type direct; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a Direct algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. DF integrals are; automatically used to converge the DF-SCF solution before the Direct algorithm is; activated. After printing all manner of titles, geometries, sizings, and; algorithm choices, the SCF finally reaches the iterations:; Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -149.80032977420572 -1.49800e+02 1.48808e-01; @DF-UHF iter 1: -149.59496320631871 2.05367e-01 2.58009e-02; @DF-UHF iter 2: -149.62349901753706 -2.85358e-02 6.68980e-03 DIIS; @DF-UHF iter 3: -149.62639942687878 -2.90041e-03 2.19285e-03 DIIS; @DF-UHF iter 4: -149.62689561367233 -4.96187e-04 5.99497e-04 DIIS; @DF-UHF iter 5: -149.62694151275420 -4.58991e-05 1.27338e-04 DIIS; @DF-UHF iter 6: -149.626943",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/scf.html:755,efficient,efficient,755,psi4manual/1.6.x/scf.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/scf.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. HF: Hartree–Fock Theory. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Theoretical Methods: SCF to FCI; HF: Hartree–Fock Theory. HF: Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish and Jerome F. Gonthier; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). PSI4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type direct; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a Direct algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. DF integrals are; automatically used to converge the DF-SCF solution before the Direct algorithm is; activated. After printing all manner of titles, geometries, sizings, and; algorithm choices, the SCF finally reaches the iterations:; Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -149.80032977420572 -1.49800e+02 1.48808e-01; @DF-UHF iter 1: -149.59496320631871 2.05367e-01 2.58009e-02; @DF-UHF iter 2: -149.62349901753706 -2.85358e-02 6.68980e-03 DIIS; @DF-UHF iter 3: -149.62639942687878 -2.90041e-03 2.19285e-03 DIIS; @DF-UHF iter 4: -149.62689561367233 -4.96187e-04 5.99497e-04 DIIS; @DF-UHF iter 5: -149.62694151275420 -4.58991e-05 1.27338e-04 DIIS; @DF-UHF iter 6: -149.626943",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/scf.html:755,efficient,efficient,755,psi4manual/1.7.x/scf.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/scf.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. HF: Hartree–Fock Theory. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Theoretical Methods: SCF to FCI; HF: Hartree–Fock Theory. HF: Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish and Jerome F. Gonthier; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). PSI4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type direct; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a Direct algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. DF integrals are; automatically used to converge the DF-SCF solution before the Direct algorithm is; activated. After printing all manner of titles, geometries, sizings, and; algorithm choices, the SCF finally reaches the iterations:; Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -149.80032977420572 -1.49800e+02 1.48808e-01; @DF-UHF iter 1: -149.59496320631871 2.05367e-01 2.58009e-02; @DF-UHF iter 2: -149.62349901753706 -2.85358e-02 6.68980e-03 DIIS; @DF-UHF iter 3: -149.62639942687878 -2.90041e-03 2.19285e-03 DIIS; @DF-UHF iter 4: -149.62689561367233 -4.96187e-04 5.99497e-04 DIIS; @DF-UHF iter 5: -149.62694151275420 -4.58991e-05 1.27338e-04 DIIS; @DF-UHF iter 6: -149.6269",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/scf.html:757,efficient,efficient,757,psi4manual/1.8.x/scf.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/scf.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. HF: Hartree–Fock Theory. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Theoretical Methods: SCF to FCI; HF: Hartree–Fock Theory. HF: Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish and Jerome F. Gonthier; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). PSI4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type direct; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a Direct algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. DF integrals are; automatically used to converge the DF-SCF solution before the Direct algorithm is; activated. After printing all manner of titles, geometries, sizings, and; algorithm choices, the SCF finally reaches the iterations:; Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -149.80032977420572 -1.49800e+02 1.48808e-01; @DF-UHF iter 1: -149.59496320631871 2.05367e-01 2.58009e-02; @DF-UHF iter 2: -149.62349901753706 -2.85358e-02 6.68980e-03 DIIS; @DF-UHF iter 3: -149.62639942687878 -2.90041e-03 2.19285e-03 DIIS; @DF-UHF iter 4: -149.62689561367233 -4.96187e-04 5.99497e-04 DIIS; @DF-UHF iter 5: -149.62694151275420 -4.58991e-05 1.27338e-04 DIIS; @DF-UHF iter 6: -149.6269",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/scf.html:757,efficient,efficient,757,psi4manual/1.9.x/scf.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/scf.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead o",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/freq.html:999,energy,energy,999,psi4manual/master/freq.html,https://psicode.org,https://psicode.org/psi4manual/master/freq.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite dif",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/freq-1.html:894,energy,energy,894,psi4manual/1.1.0/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/freq-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite d",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/freq-1.html:896,energy,energy,896,psi4manual/1.2.1/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/freq-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indica",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/freq-1.html:896,energy,energy,896,psi4manual/1.3.2/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/freq-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. derty",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/freq-1.html:988,energy,energy,988,psi4manual/1.4.0/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/freq-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. derty",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/freq-1.html:988,energy,energy,988,psi4manual/1.5.0/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/freq-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. derty",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/freq.html:988,energy,energy,988,psi4manual/1.6.x/freq.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/freq.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. d",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/freq.html:990,energy,energy,990,psi4manual/1.7.x/freq.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/freq.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/freq.html:992,energy,energy,992,psi4manual/1.8.x/freq.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/freq.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(). Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. psi4.frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/freq.html:992,energy,energy,992,psi4manual/1.9.x/freq.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/freq.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Harmonic Vibrational Analysis, frequency() and hessian() — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Psithon Functions: Invoking a Calculation ». Harmonic Vibrational Analysis, frequency() and hessian()¶. Psi4 Native Hessian Methods. For further discussion of vibrational and thermochemical analysis,; see Sec. Vibrational and Thermochemical Analysis.; frequency() is the only command most users will ever; need to access directly to perform frequency calculations. Behind; the scenes, frequency() is a light wrapper over; hessian() that computes the Hessian then adds a; thermochemical analysis. frequency(name[, molecule, return_wfn, func, mode, dertype, irrep])[source]¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || 'off' ; Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – gradient || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – 'continuous' || 'sow' || 'reap'; For a finite difference of energies or gradients frequency, indicates; whether the calculations required to complete the frequency ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/freq-1.html:871,energy,energy,871,psi4manual/1.0.0/freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/freq-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Hartree–Fock Theory — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Theoretical Methods: SCF to FCI ». Hartree–Fock Theory¶; Code author: Justin M. Turney, Robert M. Parrish, and Andrew C. Simmonett; Section author: Robert M. Parrish; Module: Keywords, PSI Variables, LIBSCF_SOLVER, LIBMINTS, LIBFOCK, LIBDIIS. Introduction¶; Self-Consistent-Field (SCF) theory forms the cornerstone of ab initio quantum; chemistry. Here SCF refers both to conventional Hartree–Fock (HF) molecular; orbital theory and also to generalized Kohn–Sham Density Functional Theory; (KS-DFT). PSI4 contains a wholly rewritten SCF code, including many of the; most popular spin specializations, several efficient numerical methods for; treating Fock Matrix construction, and a brand new KS-DFT code featuring many of; the most popular DFT functional technologies.; An illustrative example of using the SCF module is as follows:; molecule {; 0 3; O; O 1 1.21; }. set {; basis cc-pvdz; guess sad; reference uhf; scf_type pk; }. energy('scf'). This will run a UHF computation for triplet molecular oxygen (the ground state); using a PK algorithm for the Electron Repulsion Integrals (ERI) and starting; from a Superposition of Atomic Densities (SAD) guess. After printing all manner; of titles, geometries, sizings, and algorithm choices, the SCF finally reaches; the iterations:; Total Energy Delta E Density RMS. @UHF iter 0: -149.76856421865352 -4.69109e+01 0.00000e+00; @UHF iter 1: -149.59793338958522 1.70631e-01 5.72371e-02; @UHF iter 2: -149.62408782458331 -2.61544e-02 8.04195e-03 DIIS; @UHF iter 3: -149.62679515182390 -2.70733e-03 2.51542e-03 DIIS; @UHF iter 4: -149.62726459105770 -4.69439e-04 1.06897e-03 DIIS; @UHF iter 5: -149.62730549814114 -4.09071e-05 2.70311e-04 DIIS; @UHF iter 6: -149.62730736371790 -1.86558e-06 5.94924e-05 DIIS; @UHF iter 7: -149.62730740227752 -3.85596e-08 9.93250e-06 DIIS; @UHF iter 8: -149.62730740325136 -9.73841e-10 1.88088e-06 DIIS",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/scf-1.html:729,efficient,efficient,729,psi4manual/4.0b2/scf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/scf-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. Integrals in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Integrals in PSI4. Integrals in PSI4¶. Introduction¶; PSI4 has a number of backends available to compute integrals. In order to; accomodate these options, while providing a clean interface to the programmer,; an abstraction layer is implemented within Libmints. A recent upgrade to the; primary integral engine has seen some important changes to the way this; interface layer is used; this document is designed to aid new developers as; well as those familiar with the older calling conventions to ensure that the; most efficient calling conventions are applied. The older style¶; A very simple loop that does not use permutational symmetry might look; something like this in the old scheme:; auto sieve = std::make_shared<ERISieve>(basisset, cutoff);; auto factory= std::make_shared<IntegralFactory>(basisset);; int deriv_level = 0;; bool use_shell_pairs = true;; auto eri = factory->eri(deriv_level, use_shell_pairs);; const double* buffer = eri_->buffer();; for (int P = 0; P < basisset->nshell(); ++P) {; const auto& Pshell = basisset->shell(P);; for (int Q = 0; Q < basisset->nshell(); ++Q) {; const auto& Qshell = basisset->shell(Q);; for (int R = 0; R < basisset->nshell(); ++R) {; const auto& Rshell = basisset->shell(R);; for (int S = 0; S < basisset->nshell(); ++S) {; const auto& Sshell = basisset->shell(S);; if(sieve->shell_significant(P, Q, R, S) {; eri->compute_shell(P, Q, R, S);; // results are in buffer, do something with them..; }; }; }; }; }. An integral factory is used, which can then produce integral object for various; operator types and derivative levels. A sieve is also constructed; this allows; a quick determination of whether an integral shell quartet will be significant; in magnitude or not, potentially saving a lot of work. This simple scheme is; clean and easy to understand, and is still supported in the latest version of; PSI4 with only a small change to the sie",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/prog_integrals.html:619,efficient,efficient,619,psi4manual/master/prog_integrals.html,https://psicode.org,https://psicode.org/psi4manual/master/prog_integrals.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. Integrals in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Integrals in PSI4. Integrals in PSI4¶. Introduction¶; PSI4 has a number of backends available to compute integrals. In order to; accomodate these options, while providing a clean interface to the programmer,; an abstraction layer is implemented within Libmints. A recent upgrade to the; primary integral engine has seen some important changes to the way this; interface layer is used; this document is designed to aid new developers as; well as those familiar with the older calling conventions to ensure that the; most efficient calling conventions are applied. The older style¶; A very simple loop that does not use permutational symmetry might look; something like this in the old scheme:; auto sieve = std::make_shared<ERISieve>(basisset, cutoff);; auto factory= std::make_shared<IntegralFactory>(basisset);; int deriv_level = 0;; bool use_shell_pairs = true;; auto eri = factory->eri(deriv_level, use_shell_pairs);; const double* buffer = eri_->buffer();; for (int P = 0; P < basisset->nshell(); ++P) {; const auto& Pshell = basisset->shell(P);; for (int Q = 0; Q < basisset->nshell(); ++Q) {; const auto& Qshell = basisset->shell(Q);; for (int R = 0; R < basisset->nshell(); ++R) {; const auto& Rshell = basisset->shell(R);; for (int S = 0; S < basisset->nshell(); ++S) {; const auto& Sshell = basisset->shell(S);; if(sieve->shell_significant(P, Q, R, S) {; eri->compute_shell(P, Q, R, S);; // results are in buffer, do something with them..; }; }; }; }; }. An integral factory is used, which can then produce integral object for various; operator types and derivative levels. A sieve is also constructed; this allows; a quick determination of whether an integral shell quartet will be significant; in magnitude or not, potentially saving a lot of work. This simple scheme is; clean and easy to understand, and is still supported in the latest version of; PSI4 with only a small change to the sieve syntax",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/prog_integrals-1.html:610,efficient,efficient,610,psi4manual/1.4.0/prog_integrals-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/prog_integrals-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. Integrals in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Integrals in PSI4. Integrals in PSI4¶. Introduction¶; PSI4 has a number of backends available to compute integrals. In order to; accomodate these options, while providing a clean interface to the programmer,; an abstraction layer is implemented within Libmints. A recent upgrade to the; primary integral engine has seen some important changes to the way this; interface layer is used; this document is designed to aid new developers as; well as those familiar with the older calling conventions to ensure that the; most efficient calling conventions are applied. The older style¶; A very simple loop that does not use permutational symmetry might look; something like this in the old scheme:; auto sieve = std::make_shared<ERISieve>(basisset, cutoff);; auto factory= std::make_shared<IntegralFactory>(basisset);; int deriv_level = 0;; bool use_shell_pairs = true;; auto eri = factory->eri(deriv_level, use_shell_pairs);; const double* buffer = eri_->buffer();; for (int P = 0; P < basisset->nshell(); ++P) {; const auto& Pshell = basisset->shell(P);; for (int Q = 0; Q < basisset->nshell(); ++Q) {; const auto& Qshell = basisset->shell(Q);; for (int R = 0; R < basisset->nshell(); ++R) {; const auto& Rshell = basisset->shell(R);; for (int S = 0; S < basisset->nshell(); ++S) {; const auto& Sshell = basisset->shell(S);; if(sieve->shell_significant(P, Q, R, S) {; eri->compute_shell(P, Q, R, S);; // results are in buffer, do something with them..; }; }; }; }; }. An integral factory is used, which can then produce integral object for various; operator types and derivative levels. A sieve is also constructed; this allows; a quick determination of whether an integral shell quartet will be significant; in magnitude or not, potentially saving a lot of work. This simple scheme is; clean and easy to understand, and is still supported in the latest version of; PSI4 with only a small change to the sieve syntax",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/prog_integrals-1.html:610,efficient,efficient,610,psi4manual/1.5.0/prog_integrals-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/prog_integrals-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. Integrals in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Integrals in PSI4. Integrals in PSI4¶. Introduction¶; PSI4 has a number of backends available to compute integrals. In order to; accomodate these options, while providing a clean interface to the programmer,; an abstraction layer is implemented within Libmints. A recent upgrade to the; primary integral engine has seen some important changes to the way this; interface layer is used; this document is designed to aid new developers as; well as those familiar with the older calling conventions to ensure that the; most efficient calling conventions are applied. The older style¶; A very simple loop that does not use permutational symmetry might look; something like this in the old scheme:; auto sieve = std::make_shared<ERISieve>(basisset, cutoff);; auto factory= std::make_shared<IntegralFactory>(basisset);; int deriv_level = 0;; bool use_shell_pairs = true;; auto eri = factory->eri(deriv_level, use_shell_pairs);; const double* buffer = eri_->buffer();; for (int P = 0; P < basisset->nshell(); ++P) {; const auto& Pshell = basisset->shell(P);; for (int Q = 0; Q < basisset->nshell(); ++Q) {; const auto& Qshell = basisset->shell(Q);; for (int R = 0; R < basisset->nshell(); ++R) {; const auto& Rshell = basisset->shell(R);; for (int S = 0; S < basisset->nshell(); ++S) {; const auto& Sshell = basisset->shell(S);; if(sieve->shell_significant(P, Q, R, S) {; eri->compute_shell(P, Q, R, S);; // results are in buffer, do something with them..; }; }; }; }; }. An integral factory is used, which can then produce integral object for various; operator types and derivative levels. A sieve is also constructed; this allows; a quick determination of whether an integral shell quartet will be significant; in magnitude or not, potentially saving a lot of work. This simple scheme is; clean and easy to understand, and is still supported in the latest version of; PSI4 with only a small change to the sieve syntax",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/prog_integrals.html:610,efficient,efficient,610,psi4manual/1.6.x/prog_integrals.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/prog_integrals.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. Integrals in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Integrals in PSI4. Integrals in PSI4¶. Introduction¶; PSI4 has a number of backends available to compute integrals. In order to; accomodate these options, while providing a clean interface to the programmer,; an abstraction layer is implemented within Libmints. A recent upgrade to the; primary integral engine has seen some important changes to the way this; interface layer is used; this document is designed to aid new developers as; well as those familiar with the older calling conventions to ensure that the; most efficient calling conventions are applied. The older style¶; A very simple loop that does not use permutational symmetry might look; something like this in the old scheme:; auto sieve = std::make_shared<ERISieve>(basisset, cutoff);; auto factory= std::make_shared<IntegralFactory>(basisset);; int deriv_level = 0;; bool use_shell_pairs = true;; auto eri = factory->eri(deriv_level, use_shell_pairs);; const double* buffer = eri_->buffer();; for (int P = 0; P < basisset->nshell(); ++P) {; const auto& Pshell = basisset->shell(P);; for (int Q = 0; Q < basisset->nshell(); ++Q) {; const auto& Qshell = basisset->shell(Q);; for (int R = 0; R < basisset->nshell(); ++R) {; const auto& Rshell = basisset->shell(R);; for (int S = 0; S < basisset->nshell(); ++S) {; const auto& Sshell = basisset->shell(S);; if(sieve->shell_significant(P, Q, R, S) {; eri->compute_shell(P, Q, R, S);; // results are in buffer, do something with them..; }; }; }; }; }. An integral factory is used, which can then produce integral object for various; operator types and derivative levels. A sieve is also constructed; this allows; a quick determination of whether an integral shell quartet will be significant; in magnitude or not, potentially saving a lot of work. This simple scheme is; clean and easy to understand, and is still supported in the latest version of; PSI4 with only a small change to the sieve syntax",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/prog_integrals.html:610,efficient,efficient,610,psi4manual/1.7.x/prog_integrals.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/prog_integrals.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. Integrals in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Integrals in PSI4. Integrals in PSI4¶. Introduction¶; PSI4 has a number of backends available to compute integrals. In order to; accomodate these options, while providing a clean interface to the programmer,; an abstraction layer is implemented within Libmints. A recent upgrade to the; primary integral engine has seen some important changes to the way this; interface layer is used; this document is designed to aid new developers as; well as those familiar with the older calling conventions to ensure that the; most efficient calling conventions are applied. The older style¶; A very simple loop that does not use permutational symmetry might look; something like this in the old scheme:; auto sieve = std::make_shared<ERISieve>(basisset, cutoff);; auto factory= std::make_shared<IntegralFactory>(basisset);; int deriv_level = 0;; bool use_shell_pairs = true;; auto eri = factory->eri(deriv_level, use_shell_pairs);; const double* buffer = eri_->buffer();; for (int P = 0; P < basisset->nshell(); ++P) {; const auto& Pshell = basisset->shell(P);; for (int Q = 0; Q < basisset->nshell(); ++Q) {; const auto& Qshell = basisset->shell(Q);; for (int R = 0; R < basisset->nshell(); ++R) {; const auto& Rshell = basisset->shell(R);; for (int S = 0; S < basisset->nshell(); ++S) {; const auto& Sshell = basisset->shell(S);; if(sieve->shell_significant(P, Q, R, S) {; eri->compute_shell(P, Q, R, S);; // results are in buffer, do something with them..; }; }; }; }; }. An integral factory is used, which can then produce integral object for various; operator types and derivative levels. A sieve is also constructed; this allows; a quick determination of whether an integral shell quartet will be significant; in magnitude or not, potentially saving a lot of work. This simple scheme is; clean and easy to understand, and is still supported in the latest version of; PSI4 with only a small change to the sieve synt",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/prog_integrals.html:612,efficient,efficient,612,psi4manual/1.8.x/prog_integrals.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/prog_integrals.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. Integrals in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Integrals in PSI4. Integrals in PSI4¶. Introduction¶; PSI4 has a number of backends available to compute integrals. In order to; accomodate these options, while providing a clean interface to the programmer,; an abstraction layer is implemented within Libmints. A recent upgrade to the; primary integral engine has seen some important changes to the way this; interface layer is used; this document is designed to aid new developers as; well as those familiar with the older calling conventions to ensure that the; most efficient calling conventions are applied. The older style¶; A very simple loop that does not use permutational symmetry might look; something like this in the old scheme:; auto sieve = std::make_shared<ERISieve>(basisset, cutoff);; auto factory= std::make_shared<IntegralFactory>(basisset);; int deriv_level = 0;; bool use_shell_pairs = true;; auto eri = factory->eri(deriv_level, use_shell_pairs);; const double* buffer = eri_->buffer();; for (int P = 0; P < basisset->nshell(); ++P) {; const auto& Pshell = basisset->shell(P);; for (int Q = 0; Q < basisset->nshell(); ++Q) {; const auto& Qshell = basisset->shell(Q);; for (int R = 0; R < basisset->nshell(); ++R) {; const auto& Rshell = basisset->shell(R);; for (int S = 0; S < basisset->nshell(); ++S) {; const auto& Sshell = basisset->shell(S);; if(sieve->shell_significant(P, Q, R, S) {; eri->compute_shell(P, Q, R, S);; // results are in buffer, do something with them..; }; }; }; }; }. An integral factory is used, which can then produce integral object for various; operator types and derivative levels. A sieve is also constructed; this allows; a quick determination of whether an integral shell quartet will be significant; in magnitude or not, potentially saving a lot of work. This simple scheme is; clean and easy to understand, and is still supported in the latest version of; PSI4 with only a small change to the sieve synt",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/prog_integrals.html:612,efficient,efficient,612,psi4manual/1.9.x/prog_integrals.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/prog_integrals.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Interfaces: Enhancing Psi4 Capabilities ». Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess¶; Code author: Justin M. Turney; Section author: Justin M. Turney; Module: DKH. Input¶; For all electron calculations one can use the Douglas-Kroll-Hess (DKH); Hamiltonian to take into account scalar relativistic effects.; Minimal input for DKH single-point computation looks like this:; molecule {; Mg; }. set basis aug-cc-pvdz-dk; set relativistic dkh. energy('scf'). By default a 2nd-order DKH calculation is performed. To change the default; order use the DKH_ORDER option. The version of the code found in; Psi4 is capable of up to 4th-order DKH calculations. Keywords¶. RELATIVISTIC¶. Relativistic Hamiltonian type. Type: string; Possible Values: NO, X2C; Default: NO. DKH_ORDER¶. Order of Douglas-Kroll-Hess. Type: integer; Default: 2. Reference¶; When using this code please make reference to the appropriate following paper:. “The Generalized Douglas-Kroll Transformation,” A. Wolf,; M. Reiher, and B. A. Hess, J. Chem. Phys. 117, 9215 (2002).; (doi: 10.1063/1.1515314). Table Of Contents. Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess; Input; Keywords; RELATIVISTIC; DKH_ORDER. Reference. Previous topic; Interface to DFTD3 by S. Grimme; Next topic; Interface to programs through FCHK files, fchk(). This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Interfaces: Enhancing Psi4 Capabilities ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/dkh-1.html:630,energy,energy,630,psi4manual/1.0.0/dkh-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/dkh-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Interface to MRCC by M. Kállay — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Theoretical Methods: SCF to FCI ». Interface to MRCC by M. Kállay¶; Code author: Justin M. Turney and Andrew C. Simmonett; Section author: Justin M. Turney; Module: Keywords, PSI Variables, MRCC; PSI4 contains code to interface to the MRCC program of M. Kállay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mihály Kállay (http://www.mrcc.hu/). Installation¶; Follow the instructions provided with the source to build the MRCC programs.; To be used by PSI4, ensure that the program binary (dmrcc) can be; found in your PATH. If PSI4 is unable to execute the binary, an; error will be reported. Running MRCC¶; MRCC can be invoked in similar fashion as other theories provided in PSI4.; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following:; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('mrccsdt'). 'mrccsdt' in the call to energy() instructs PSI4 to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; For a CCSDT(Q) energy, simply use 'mrccsdt(q)' in the call to; energy(). MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only.; At this time, PSI4 is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you must prefix; the method name with MR. For other methods, you will be required to; use the MRCC keywords described in Appendix MRCC. Methods available in automatic interface with MRCC. CCSD; CCSD(T) [1]; CCSD(T)_L [1]. CCSDT; CCSDT(Q) [1]; CCSDT(Q)_L [1]. CCSDTQ; CCSDTQ(P) [1]; CCSDTQ(P)_L [1]. CCSDTQP; CCSDTQP(H) [1]; CCSDTQP(H)_L [1]. CCSDTQPH;  ;  . CCSDT-1a; CCSDT-1b; CCSDT-3. CCSDTQ-1a; CCSDTQ-1b; CCSDTQ-3. CCSDTQP-1a; CCSDTQP",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/mrcc-1.html:900,energy,energy,900,psi4manual/4.0b2/mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/mrcc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Interface to MRCC by M. Kállay — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Theoretical Methods: SCF to FCI ». Interface to MRCC by M. Kállay¶; Code author: Justin M. Turney and Andrew C. Simmonett; Section author: Justin M. Turney; Module: Keywords, PSI Variables, MRCC; PSI4 contains code to interface to the MRCC program of M. Kállay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mihály Kállay (http://www.mrcc.hu/). Installation¶; Follow the instructions provided with the source to build the MRCC programs.; To be used by PSI4, ensure that the program binary (dmrcc) can be; found in your PATH. If PSI4 is unable to execute the binary, an; error will be reported. Running MRCC¶; MRCC can be invoked in similar fashion as other theories provided in PSI4.; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following:; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('mrccsdt'). 'mrccsdt' in the call to energy() instructs PSI4 to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; For a CCSDT(Q) energy, simply use 'mrccsdt(q)' in the call to; energy(). MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only.; At this time, PSI4 is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you must prefix; the method name with MR. For other methods, you will be required to; use the MRCC keywords described in Appendix MRCC. Methods available in automatic interface with MRCC. CCSD; CCSD(T) [1]; CCSD(T)_L [1]. CCSDT; CCSDT(Q) [1]; CCSDT(Q)_L [1]. CCSDTQ; CCSDTQ(P) [1]; CCSDTQ(P)_L [1]. CCSDTQP; CCSDTQP(H) [1]; CCSDTQP(H)_L [1]. CCSDTQPH;  ;  . CCSDT-1a; CCSDT-1b; CCSDT-3. CCSDTQ-1a; CCSDTQ-1b; CCSDTQ-3. CCSD",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/mrcc-1.html:915,energy,energy,915,psi4manual/4.0b3/mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/mrcc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Interface to MRCC by M. Kállay — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Interfaces: Enhancing PSI4 Capabilities ». Interface to MRCC by M. Kállay¶; Code author: Justin M. Turney and Andrew C. Simmonett; Section author: Justin M. Turney; Module: Keywords, PSI Variables, MRCC; PSI4 contains code to interface to the MRCC program of M. Kállay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mihály Kállay (http://www.mrcc.hu/). Installation¶; Follow the instructions provided with the source to build the MRCC programs.; To be used by PSI4, ensure that the program binary (dmrcc) can be; found in your PATH. If PSI4 is unable to execute the binary, an; error will be reported. Running MRCC¶; MRCC can be invoked in similar fashion as other theories provided in PSI4.; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following:; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('mrccsdt'). 'mrccsdt' in the call to energy() instructs PSI4 to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; For a CCSDT(Q) energy, simply use 'mrccsdt(q)' in the call to; energy(). MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only.; At this time, PSI4 is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you must prefix; the method name with MR. For other methods, you will be required to; use the MRCC keywords described in Appendix MRCC. Methods available in automatic interface with MRCC. CCSD; CCSD(T) [1]; CCSD(T)_L [1]. CCSDT; CCSDT(Q) [1]; CCSDT(Q)_L [1]. CCSDTQ; CCSDTQ(P) [1]; CCSDTQ(P)_L [1]. CCSDTQP; CCSDTQP(H) [1]; CCSDTQP(H)_L [1]. CCSDTQPH;  ;  . CCSDT-1a; CCSDT-1b; CCSDT-3. CCSDTQ-1a; CCSDTQ-1b; CCSDTQ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/mrcc-1.html:923,energy,energy,923,psi4manual/4.0b4/mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/mrcc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Interface to MRCC by M. Kállay — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Interfaces: Enhancing PSI4 Capabilities ». Interface to MRCC by M. Kállay¶; Code author: Justin M. Turney and Andrew C. Simmonett; Section author: Justin M. Turney; Module: Keywords, PSI Variables, MRCC; PSI4 contains code to interface to the MRCC program of M. Kállay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mihály Kállay (http://www.mrcc.hu/). Installation¶; Follow the instructions provided with the source to build the MRCC programs.; To be used by PSI4, ensure that the program binary (dmrcc) can be; found in your PATH. If PSI4 is unable to execute the binary, an; error will be reported. Running MRCC¶; MRCC can be invoked in similar fashion as other theories provided in PSI4.; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following:; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('mrccsdt'). 'mrccsdt' in the call to energy() instructs PSI4 to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; For a CCSDT(Q) energy, simply use 'mrccsdt(q)' in the call to; energy(). MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only.; At this time, PSI4 is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you must prefix; the method name with MR. For other methods, you will be required to; use the MRCC keywords described in Appendix MRCC. Methods available in automatic interface with MRCC. CCSD; CCSD(T) [1]; CCSD(T)_L [1]. CCSDT; CCSDT(Q) [1]; CCSDT(Q)_L [1]. CCSDTQ; CCSDTQ(P) [1]; CCSDTQ(P)_L [1]. CCSDTQP; CCSDTQP(H) [1]; CCSDTQP(H)_L [1]. CCSDTQPH;  ;  . CCSDT-1a; CCSDT-1b; CCSDT-3. CCSDTQ-1a; CCSDTQ-1b; CCSDTQ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/mrcc-1.html:923,energy,energy,923,psi4manual/4.0b5/mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/mrcc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Interface to MRCC by M. Kállay — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Interfaces: Enhancing Psi4 Capabilities ». Interface to MRCC by M. Kállay¶; Code author: Justin M. Turney and Andrew C. Simmonett; Section author: Justin M. Turney; Module: Keywords, PSI Variables, MRCC, Samples; Psi4 contains code to interface to the MRCC program of M. Kállay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mihály Kállay (http://www.mrcc.hu/). Installation¶; Follow the instructions provided with the source to build the MRCC programs.; To be used by Psi4, ensure that the program binary (dmrcc) can be; found in your PATH. If Psi4 is unable to execute the binary, an; error will be reported. Running MRCC¶; MRCC can be invoked in similar fashion as other theories provided in Psi4.; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following:; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('mrccsdt'). 'mrccsdt' in the call to energy() instructs Psi4 to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; For a CCSDT(Q) energy, simply use 'mrccsdt(q)' in the call to; energy(). MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only.; At this time, Psi4 is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you must prefix; the method name with MR. For other methods, you will be required to; use the MRCC keywords described in Appendix MRCC.; Note that perturbative methods (ccsd(t), ccsdtqp(h)_l, etc.); are not available with REFERENCE ROHF. name; calls method in Kallay’s MRCC program [manual]. mrccsd; CC through doubles. mrccsdt; CC through triples. mrccsdtq; CC through quadruples. mrccsdtqp; CC thr",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/mrcc-1.html:939,energy,energy,939,psi4manual/1.0.0/mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/mrcc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Interface to MRCC by M. Kállay. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities. Interface to MRCC by M. Kállay¶; Code author: Justin M. Turney and Andrew C. Simmonett; Section author: Justin M. Turney; Module: Keywords, PSI Variables, MRCC, Samples; PSI4 contains code to interface to the MRCC program of M. Kállay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mihály Kállay (http://www.mrcc.hu/). Installation¶; Follow the instructions provided with the source to build the MRCC programs.; To be used by PSI4, ensure that the program binary (dmrcc) can be; found in your PATH. If PSI4 is unable to execute the binary, an; error will be reported. Running MRCC¶; MRCC can be invoked in similar fashion as other theories provided in PSI4.; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following:; 1; 2; 3; 4; 5; 6; 7; 8; 9molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('mrccsdt'). 'mrccsdt' in the call to energy() instructs PSI4 to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; For a CCSDT(Q) energy, simply use 'mrccsdt(q)' in the call to; energy(). MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only.; At this time, PSI4 is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you must prefix; the method name with MR. For other methods, you will be required to; use the MRCC keywords described in Appendix MRCC.; Perturbative methods (ccsd(t), ccsdtqp(h)_l, etc.); are available with REFERENCE ROHF in versions of MRCC published; at least after July 1, 2014.; When using ROHF-CCSDT(Q), MRCC will compute and report two variants:; CCSDT(Q)/A and CCSDT(Q)/B.[Kallay:2008:144101]_ Psi4 will save both ener",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/mrcc-1.html:887,energy,energy,887,psi4manual/1.1.0/mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/mrcc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Interface to MRCC by M. Kállay. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities. Interface to MRCC by M. Kállay¶; Code author: Justin M. Turney and Andrew C. Simmonett; Section author: Justin M. Turney; Module: Keywords, PSI Variables, MRCC, Samples; PSI4 contains code to interface to the MRCC program of M. Kállay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mihály Kállay (http://www.mrcc.hu/). Installation¶; Follow the instructions provided with the source to build the MRCC programs.; To be used by PSI4, ensure that the program binary (dmrcc) can be; found in your PATH. If PSI4 is unable to execute the binary, an; error will be reported. Running MRCC¶; MRCC can be invoked in similar fashion as other theories provided in PSI4.; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following:; 1; 2; 3; 4; 5; 6; 7; 8; 9molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('mrccsdt'). 'mrccsdt' in the call to energy() instructs PSI4 to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; For a CCSDT(Q) energy, simply use 'mrccsdt(q)' in the call to; energy(). MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only.; At this time, PSI4 is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you must prefix; the method name with MR. For other methods, you will be required to; use the MRCC keywords described in Appendix MRCC.; Perturbative methods (ccsd(t), ccsdtqp(h)_l, etc.); are available with REFERENCE ROHF in versions of MRCC published; at least after July 1, 2014.; When using ROHF-CCSDT(Q), MRCC will compute and report two variants:; CCSDT(Q)/A and CCSDT(Q)/B.[Kallay:2008:144101]_ Psi4 will save both en",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/mrcc-1.html:889,energy,energy,889,psi4manual/1.2.1/mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/mrcc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Interface to MRCC by M. Kállay. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities. Interface to MRCC by M. Kállay¶; Code author: Justin M. Turney and Andrew C. Simmonett; Section author: Justin M. Turney; Module: Keywords, PSI Variables, MRCC, Samples; PSI4 contains code to interface to the MRCC program of M. Kállay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mihály Kállay (http://www.mrcc.hu/). Installation¶; Follow the instructions provided with the source to build the MRCC programs.; To be used by PSI4, ensure that the program binary (dmrcc) can be; found in your PATH. If PSI4 is unable to execute the binary, an; error will be reported. Running MRCC¶; MRCC can be invoked in similar fashion as other theories provided in PSI4.; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following:; 1; 2; 3; 4; 5; 6; 7; 8; 9molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('mrccsdt'). 'mrccsdt' in the call to energy() instructs PSI4 to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; For a CCSDT(Q) energy, simply use 'mrccsdt(q)' in the call to; energy(). MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only.; At this time, PSI4 is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you must prefix; the method name with MR. For other methods, you will be required to; use the MRCC keywords described in Appendix MRCC.; Perturbative methods (ccsd(t), ccsdtqp(h)_l, etc.); are available with REFERENCE ROHF in versions of MRCC published; at least after July 1, 2014.; When using ROHF-CCSDT(Q), MRCC will compute and report two variants:; CCSDT(Q)/A and CCSDT(Q)/B.[Kallay:2008:144101]_ Psi4 will save both en",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/mrcc-1.html:889,energy,energy,889,psi4manual/1.3.2/mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/mrcc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Interface to MRCC by M. Kállay. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to MRCC by M. Kállay. Interface to MRCC by M. Kállay¶; Code author: Justin M. Turney and Andrew C. Simmonett; Section author: Justin M. Turney; Module: Keywords, PSI Variables, MRCC, Samples; PSI4 contains code to interface to the MRCC program of M. Kállay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mihály Kállay (https://www.mrcc.hu/). Installation¶; Follow the instructions provided with the source to build the MRCC programs.; To be used by PSI4, ensure that the program binary (dmrcc) can be; found in your PATH. If PSI4 is unable to execute the binary, an; error will be reported. Running MRCC¶; MRCC can be invoked in similar fashion as other theories provided in PSI4.; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following:; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('mrccsdt'). 'mrccsdt' in the call to energy() instructs PSI4 to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; For a CCSDT(Q) energy, simply use 'mrccsdt(q)' in the call to; energy(). MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only.; At this time, PSI4 is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you must prefix; the method name with MR. For other methods, you will be required to; use the MRCC keywords described in Appendix MRCC.; Perturbative methods (ccsd(t), ccsdtqp(h)_l, etc.); are available with REFERENCE ROHF in versions of MRCC published; at least after July 1, 2014.; When using ROHF-CCSDT(Q), MRCC will compute and report two variants:; CCSDT(Q)/A and CCSDT(Q)/B. [Kallay:2008:144101] PSI4 will save b",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/mrcc-1.html:920,energy,energy,920,psi4manual/1.4.0/mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/mrcc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Interface to MRCC by M. Kállay. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to MRCC by M. Kállay. Interface to MRCC by M. Kállay¶; Code author: Justin M. Turney and Andrew C. Simmonett; Section author: Justin M. Turney; Module: Keywords, PSI Variables, MRCC, Samples; PSI4 contains code to interface to the MRCC program of M. Kállay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mihály Kállay (https://www.mrcc.hu/). Installation¶; Follow the instructions provided with the source to build the MRCC programs.; To be used by PSI4, ensure that the program binary (dmrcc) can be; found in your PATH. If PSI4 is unable to execute the binary, an; error will be reported. Running MRCC¶; MRCC can be invoked in similar fashion as other theories provided in PSI4.; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following:; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('mrccsdt'). 'mrccsdt' in the call to energy() instructs PSI4 to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; For a CCSDT(Q) energy, simply use 'mrccsdt(q)' in the call to; energy(). MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only.; At this time, PSI4 is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you must prefix; the method name with MR. For other methods, you will be required to; use the MRCC keywords described in Appendix MRCC.; Perturbative methods (ccsd(t), ccsdtqp(h)_l, etc.); are available with REFERENCE ROHF in versions of MRCC published; at least after July 1, 2014.; When using ROHF-CCSDT(Q), MRCC will compute and report two variants:; CCSDT(Q)/A and CCSDT(Q)/B. [Kallay:2008:144101] PSI4 will save b",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/mrcc-1.html:920,energy,energy,920,psi4manual/1.5.0/mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/mrcc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Interface to MRCC by M. Kállay. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to MRCC by M. Kállay. Interface to MRCC by M. Kállay¶; Code author: Justin M. Turney and Andrew C. Simmonett; Section author: Justin M. Turney; Module: Keywords, PSI Variables, MRCC, Samples; PSI4 contains code to interface to the MRCC program of M. Kállay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mihály Kállay (https://www.mrcc.hu/). Installation¶; Follow the instructions provided with the source to build the MRCC programs.; To be used by PSI4, ensure that the program binary (dmrcc) can be; found in your PATH. If PSI4 is unable to execute the binary, an; error will be reported. Running MRCC¶; MRCC can be invoked in similar fashion as other theories provided in PSI4.; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following:; molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('mrccsdt'). 'mrccsdt' in the call to energy() instructs PSI4 to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; For a CCSDT(Q) energy, simply use 'mrccsdt(q)' in the call to; energy(). MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only.; At this time, PSI4 is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you must prefix; the method name with MR. For other methods, you will be required to; use the MRCC keywords described in Appendix MRCC.; Perturbative methods (ccsd(t), ccsdtqp(h)_l, etc.); are available with REFERENCE ROHF in versions of MRCC published; at least after July 1, 2014.; When using ROHF-CCSDT(Q), MRCC will compute and report two variants:; CCSDT(Q)/A and CCSDT(Q)/B. [Kallay:2008:144101] PSI4 will save b",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/mrcc.html:920,energy,energy,920,psi4manual/1.6.x/mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/mrcc.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to programs through FCHK files — fchk(). Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function:; energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). psi4.fchk(wfn, filename, *, debug=False, strict_label=True)[source]; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. Added in version 0.6. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file; filename (str) – destination file name for FCHK file; debug (bool) – returns a dictionary to aid with debugging; strict_label (bool) – If true set a density label compliant with what Gaussian would write. A warning will be printed ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/fchk.html:824,energy,energy,824,psi4manual/master/fchk.html,https://psicode.org,https://psicode.org/psi4manual/master/fchk.html,3,['energy'],['energy']
Energy Efficiency,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities. Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and use it to create an FCHK writer:; 1; 2; 3energy, wfn = energy('scf', return_wfn=True); fchk_writer = psi4.FCHKWriter(wfn); fchk_writer.write('output.fchk'). The file will be written to the name passed to the FCHK writer’s write(); method. Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; 1; 2; 3grad, wfn = gradient('mp2', return_wfn=True); fchk_writer = psi4.FCHKWriter(wfn); fchk_writer.write('output.fchk'). psi4.fchk(wfn, filename)[source]¶; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:None. Parameters:; filename (string) – destination file name for FCHK file; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file. Examples:. 1; 2; 3>>> # [1] FCHK file for DFT calculation; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> fchk(wfn, 'mycalc.fchk'). Navigation. Index. mo",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/fchk-1.html:764,energy,energy,764,psi4manual/1.1.0/fchk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/fchk-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities. Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and use it to create an FCHK writer:; 1; 2; 3energy, wfn = energy('scf', return_wfn=True); fchk_writer = psi4.core.FCHKWriter(wfn); fchk_writer.write('output.fchk'). The file will be written to the name passed to the FCHK writer’s write(); method. Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; 1; 2; 3grad, wfn = gradient('mp2', return_wfn=True); fchk_writer = psi4.core.FCHKWriter(wfn); fchk_writer.write('output.fchk'). psi4.fchk(wfn, filename)[source]¶; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:None. Parameters:; filename (string) – destination file name for FCHK file; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file. Examples:. 1; 2; 3>>> # [1] FCHK file for DFT calculation; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> fchk(wfn, 'mycalc.fchk'). «; hide m",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/fchk-1.html:766,energy,energy,766,psi4manual/1.2.1/fchk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/fchk-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities. Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and use it to create an FCHK writer:; 1; 2; 3energy, wfn = energy('scf', return_wfn=True); fchk_writer = psi4.core.FCHKWriter(wfn); fchk_writer.write('output.fchk'). The file will be written to the name passed to the FCHK writer’s write(); method. Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; 1; 2; 3grad, wfn = gradient('mp2', return_wfn=True); fchk_writer = psi4.core.FCHKWriter(wfn); fchk_writer.write('output.fchk'). psi4.fchk(wfn, filename)[source]¶; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:None. Parameters:; filename (string) – destination file name for FCHK file; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file. Notes. A description of the FCHK format is http://wild.life.nctu.edu.tw/~jsyu/compchem/g09/g09ur/f_formchk.htm; The allowed headers for methods a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/fchk-1.html:766,energy,energy,766,psi4manual/1.3.2/fchk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/fchk-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to programs through FCHK files — fchk(). Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function:; energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). psi4.fchk(wfn, filename, *, debug=False, strict_label=True)[source]; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns; None. Parameters. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file; filename (str) – destination file name for FCHK file; debug (bool) – returns a dictionary to aid with debugging; strict_label (bool) – If true set a density label compliant with what Gaussian would write. A warning will be printed if this is no",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/fchk-1.html:815,energy,energy,815,psi4manual/1.4.0/fchk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/fchk-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to programs through FCHK files — fchk(). Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function:; energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). psi4.fchk(wfn, filename, *, debug=False, strict_label=True)[source]; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns; None. Parameters. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file; filename (str) – destination file name for FCHK file; debug (bool) – returns a dictionary to aid with debugging; strict_label (bool) – If true set a density label compliant with what Gaussian would write. A warning will be printed if this is no",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/fchk-1.html:815,energy,energy,815,psi4manual/1.5.0/fchk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/fchk-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to programs through FCHK files — fchk(). Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function:; energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). psi4.fchk(wfn, filename, *, debug=False, strict_label=True)[source]; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns; None. Parameters. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file; filename (str) – destination file name for FCHK file; debug (bool) – returns a dictionary to aid with debugging; strict_label (bool) – If true set a density label compliant with what Gaussian would write. A warning will be printed if this is no",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/fchk.html:815,energy,energy,815,psi4manual/1.6.x/fchk.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/fchk.html,3,['energy'],['energy']
Energy Efficiency,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to programs through FCHK files — fchk(). Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function:; energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). psi4.fchk(wfn, filename, *, debug=False, strict_label=True)[source]; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file; filename (str) – destination file name for FCHK file; debug (bool) – returns a dictionary to aid with debugging; strict_label (bool) – If true set a density label compliant with what Gaussian would write. A warning will be printed if this is ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/fchk.html:815,energy,energy,815,psi4manual/1.7.x/fchk.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/fchk.html,3,['energy'],['energy']
Energy Efficiency,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to programs through FCHK files — fchk(). Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function:; energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). psi4.fchk(wfn, filename, *, debug=False, strict_label=True)[source]; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file; filename (str) – destination file name for FCHK file; debug (bool) – returns a dictionary to aid with debugging; strict_label (bool) – If true set a density label compliant with what Gaussian would write. A warning will be printed if this i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/fchk.html:817,energy,energy,817,psi4manual/1.8.x/fchk.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/fchk.html,3,['energy'],['energy']
Energy Efficiency,"﻿. Interface to programs through FCHK files — fchk(). Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Interfaces: Enhancing PSI4 Capabilities; Interface to programs through FCHK files — fchk(). Interface to programs through FCHK files — fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, PSI4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function:; energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree–Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk(wfn,'output.fchk'). psi4.fchk(wfn, filename, *, debug=False, strict_label=True)[source]; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file; filename (str) – destination file name for FCHK file; debug (bool) – returns a dictionary to aid with debugging; strict_label (bool) – If true set a density label compliant with what Gaussian would write. A warning will be printed if this i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/fchk.html:817,energy,energy,817,psi4manual/1.9.x/fchk.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/fchk.html,3,['energy'],['energy']
Energy Efficiency,"﻿. Interface to programs through FCHK files, fchk() — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Interfaces: Enhancing Psi4 Capabilities ». Interface to programs through FCHK files, fchk()¶; Code author: Andrew C. Simmonett; Section author: Andrew C. Simmonett; Many post-processing tools can read information from Gaussian’s formatted; checkpoint (FCHK) files.; To allow interoperability with such tools, Psi4 includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and use it to create an FCHK writer:; energy, wfn = energy('scf', return_wfn=True); fchk_writer = psi4.FCHKWriter(wfn); fchk_writer.write('output.fchk'). The file will be written to the name passed to the FCHK writer’s write(); method. Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree-Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that the density is updated appropriately:; grad, wfn = gradient('mp2', return_wfn=True); fchk_writer = psi4.FCHKWriter(wfn); fchk_writer.write('output.fchk'). fchk(wfn, filename)[source]¶; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:None. Parameters:; filename (string) – destination file name for FCHK file; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file. Examples:. >>> # [1] FCHK file for DFT calculation; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> fchk(wfn, 'mycalc.fchk'",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/fchk-1.html:814,energy,energy,814,psi4manual/1.0.0/fchk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/fchk-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. Introduction — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » . Introduction¶. Overview¶; PSI4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; In this section, we provide an overview of some of the features of; PSI4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of PSI4 input files, and how Python can be mixed with; quantum chemistry directives in PSI4. Section Psithon Functions; provides more detail on the Python functions provided by PSI4; and discusses some of the higher-level functions such as counterpoise; correction, complete-basis-set extrapolation, and running computations; on an entire database of molecules at a time. Later sections deal with; the different types of computations which can be done using PSI4; (e.g., Hartree–Fock, MP2, coupled-cluster) and general procedures; such as geometry optimization and vibrational frequency analysis.; The Appendix includes a complete description of all possible input; keywords for each module, as well as tables of available basis sets and; a listing of the sample input files available under psi4/samples.; The user is urged to examine this directory of sample inputs, as; most common types of computations are represented there.; For the latest PSI4 documentation, check; www.psicode.org. Citing PSI4¶; The following citation should be used in any publication utilizing the; PSI4 program package:; PSI4. “Psi4: an open-source ab initio electronic structure program,”; J. M. Turney",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/introduction-1.html:326,efficient,efficiently,326,psi4manual/4.0b2/introduction-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/introduction-1.html,2,['efficient'],['efficiently']
Energy Efficiency,"﻿. Introduction — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » . Introduction¶. Overview¶; PSI4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; In this section, we provide an overview of some of the features of; PSI4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of PSI4 input files, and how Python can be mixed with; quantum chemistry directives in PSI4. Section Psithon Functions; provides more detail on the Python functions provided by PSI4; and discusses some of the higher-level functions such as counterpoise; correction, complete-basis-set extrapolation, and running computations; on an entire database of molecules at a time. Later sections deal with; the different types of computations which can be done using PSI4; (e.g., Hartree–Fock, MP2, coupled-cluster) and general procedures; such as geometry optimization and vibrational frequency analysis.; The Appendix includes a complete description of all possible input; keywords for each module, as well as tables of available basis sets and; a listing of the sample input files available under psi4/samples.; The user is urged to examine this directory of sample inputs, as; most common types of computations are represented there.; For the latest PSI4 documentation, check; www.psicode.org. Citing PSI4¶; The following citation should be used in any publication utilizing the; PSI4 program package:; PSI4. “Psi4: an open-source ab initio electronic structure program,",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/introduction-1.html:341,efficient,efficiently,341,psi4manual/4.0b3/introduction-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/introduction-1.html,2,['efficient'],['efficiently']
Energy Efficiency,"﻿. Introduction — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » . Introduction¶. Overview¶; PSI4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; In this section, we provide an overview of some of the features of; PSI4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of PSI4 input files and how Python can be mixed with; quantum chemistry directives in PSI4. Section Psithon Functions; provides more detail on the Python functions provided by PSI4; and discusses some of the higher-level functions such as counterpoise; correction, complete-basis-set extrapolation, and running computations; on an entire database of molecules at a time. Later sections deal with; the different types of computations which can be done using PSI4; (e.g., Hartree–Fock, MP2, coupled-cluster) and general procedures; such as geometry optimization and vibrational frequency analysis.; The Appendices include a complete description of all possible input; keywords for each module, as well as tables of available basis sets and; a listing of the sample input files available under psi4/samples.; The user is urged to examine this directory of sample inputs, as; most common types of computations are represented there.; For the latest PSI4 documentation, check; www.psicode.org. Citing PSI4¶. Overall PSI4 Package¶; The following citation should be used in any publication utilizing the; PSI4 program package:. “Psi4: An open-source ab initio electronic s",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/introduction-1.html:341,efficient,efficiently,341,psi4manual/4.0b4/introduction-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/introduction-1.html,2,['efficient'],['efficiently']
Energy Efficiency,"﻿. Introduction — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » . Introduction¶. Overview¶; PSI4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; In this section, we provide an overview of some of the features of; PSI4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of PSI4 input files and how Python can be mixed with; quantum chemistry directives in PSI4. Section Psithon Functions; provides more detail on the Python functions provided by PSI4; and discusses some of the higher-level functions such as counterpoise; correction, complete-basis-set extrapolation, and running computations; on an entire database of molecules at a time. Later sections deal with; the different types of computations which can be done using PSI4; (e.g., Hartree–Fock, MP2, coupled-cluster) and general procedures; such as geometry optimization and vibrational frequency analysis.; The Appendices include a complete description of all possible input; keywords for each module, as well as tables of available basis sets and; a listing of the sample input files available under psi4/samples.; The user is urged to examine this directory of sample inputs, as; most common types of computations are represented there.; For the latest PSI4 documentation, check; www.psicode.org. Citing PSI4¶. Overall PSI4 Package¶; The following citation should be used in any publication utilizing the; PSI4 program package:. “Psi4: An open-source ab initio electronic s",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/introduction-1.html:341,efficient,efficiently,341,psi4manual/4.0b5/introduction-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/introduction-1.html,2,['efficient'],['efficiently']
Energy Efficiency,"﻿. Introduction — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » . Introduction¶. Overview¶; Psi4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; In this section, we provide an overview of some of the features of; Psi4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of Psi4 input files and how Python can be mixed with; quantum chemistry directives in Psi4. Section Psithon Functions; provides more detail on the Python functions provided by Psi4; and discusses some of the higher-level functions such as counterpoise; correction, complete-basis-set extrapolation, and running computations; on an entire database of molecules at a time. Later sections deal with; the different types of computations which can be done using Psi4; (e.g., Hartree–Fock, MP2, coupled-cluster) and general procedures; such as geometry optimization and vibrational frequency analysis.; The Appendices include a complete description of all possible input; keywords for each module, as well as tables of available basis sets and; a listing of the sample input files available under psi4/samples.; The user is urged to examine this directory of sample inputs, as; most common types of computations are represented there.; For the latest Psi4 documentation, check; www.psicode.org. Citing Psi4¶. Overall Psi4 Package¶; The following citation should be used in any publication utilizing the; Psi4 program package:. “Psi4: An open-source ab initio elect",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/introduction-1.html:348,efficient,efficiently,348,psi4manual/1.0.0/introduction-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/introduction-1.html,2,['efficient'],['efficiently']
Energy Efficiency,"﻿. Introduction. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Introduction. Introduction¶. Overview¶; PSI4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; PSI4 is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes PSI4 incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in PSI4, with many functionals available. Density fitting is ubiquitous in; PSI4, leading to some of the most efficient MP2 and CCSD(T) code available.; PSI4 also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, PSI4 gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory.; In this section, we provide an overview of some of the features of; PSI4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/introduction.html:321,efficient,efficiently,321,psi4manual/master/introduction.html,https://psicode.org,https://psicode.org/psi4manual/master/introduction.html,2,"['efficient', 'power']","['efficiently', 'powerful']"
Energy Efficiency,"﻿. Introduction. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Introduction¶. Overview¶; PSI4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; PSI4 is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes PSI4 incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in PSI4, with many functionals available. Density fitting is ubiquitous in; PSI4, leading to some of the most efficient MP2 and CCSD(T) code available.; PSI4 also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, PSI4 gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory.; In this section, we provide an overview of some of the features of; PSI4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of PSI4 input files and h",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/introduction-1.html:298,efficient,efficiently,298,psi4manual/1.1.0/introduction-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/introduction-1.html,4,"['efficient', 'power']","['efficiently', 'powerful']"
Energy Efficiency,"﻿. Introduction. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Introduction¶. Overview¶; PSI4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; PSI4 is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes PSI4 incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in PSI4, with many functionals available. Density fitting is ubiquitous in; PSI4, leading to some of the most efficient MP2 and CCSD(T) code available.; PSI4 also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, PSI4 gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory.; In this section, we provide an overview of some of the features of; PSI4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of PSI4 input files and",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/introduction-1.html:300,efficient,efficiently,300,psi4manual/1.2.1/introduction-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/introduction-1.html,4,"['efficient', 'power']","['efficiently', 'powerful']"
Energy Efficiency,"﻿. Introduction. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Introduction¶. Overview¶; PSI4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; PSI4 is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes PSI4 incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in PSI4, with many functionals available. Density fitting is ubiquitous in; PSI4, leading to some of the most efficient MP2 and CCSD(T) code available.; PSI4 also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, PSI4 gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory.; In this section, we provide an overview of some of the features of; PSI4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of PSI4 input files and",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/introduction-1.html:300,efficient,efficiently,300,psi4manual/1.3.2/introduction-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/introduction-1.html,4,"['efficient', 'power']","['efficiently', 'powerful']"
Energy Efficiency,"﻿. Introduction. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Introduction. Introduction¶. Overview¶; PSI4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; PSI4 is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes PSI4 incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in PSI4, with many functionals available. Density fitting is ubiquitous in; PSI4, leading to some of the most efficient MP2 and CCSD(T) code available.; PSI4 also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, PSI4 gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory.; In this section, we provide an overview of some of the features of; PSI4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of PSI4 inp",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/introduction-1.html:312,efficient,efficiently,312,psi4manual/1.4.0/introduction-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/introduction-1.html,4,"['efficient', 'power']","['efficiently', 'powerful']"
Energy Efficiency,"﻿. Introduction. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Introduction. Introduction¶. Overview¶; PSI4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; PSI4 is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes PSI4 incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in PSI4, with many functionals available. Density fitting is ubiquitous in; PSI4, leading to some of the most efficient MP2 and CCSD(T) code available.; PSI4 also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, PSI4 gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory.; In this section, we provide an overview of some of the features of; PSI4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of PSI4 inp",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/introduction-1.html:312,efficient,efficiently,312,psi4manual/1.5.0/introduction-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/introduction-1.html,4,"['efficient', 'power']","['efficiently', 'powerful']"
Energy Efficiency,"﻿. Introduction. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Introduction. Introduction¶. Overview¶; PSI4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; PSI4 is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes PSI4 incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in PSI4, with many functionals available. Density fitting is ubiquitous in; PSI4, leading to some of the most efficient MP2 and CCSD(T) code available.; PSI4 also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, PSI4 gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory.; In this section, we provide an overview of some of the features of; PSI4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of PSI4 inp",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/introduction.html:312,efficient,efficiently,312,psi4manual/1.6.x/introduction.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/introduction.html,2,"['efficient', 'power']","['efficiently', 'powerful']"
Energy Efficiency,"﻿. Introduction. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Introduction. Introduction¶. Overview¶; PSI4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; PSI4 is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes PSI4 incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in PSI4, with many functionals available. Density fitting is ubiquitous in; PSI4, leading to some of the most efficient MP2 and CCSD(T) code available.; PSI4 also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, PSI4 gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory.; In this section, we provide an overview of some of the features of; PSI4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of PSI4 inp",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/introduction.html:312,efficient,efficiently,312,psi4manual/1.7.x/introduction.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/introduction.html,2,"['efficient', 'power']","['efficiently', 'powerful']"
Energy Efficiency,"﻿. Introduction. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Introduction. Introduction¶. Overview¶; PSI4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; PSI4 is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes PSI4 incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in PSI4, with many functionals available. Density fitting is ubiquitous in; PSI4, leading to some of the most efficient MP2 and CCSD(T) code available.; PSI4 also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, PSI4 gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory.; In this section, we provide an overview of some of the features of; PSI4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of PSI4 i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/introduction.html:314,efficient,efficiently,314,psi4manual/1.8.x/introduction.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/introduction.html,2,"['efficient', 'power']","['efficiently', 'powerful']"
Energy Efficiency,"﻿. Introduction. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Introduction. Introduction¶. Overview¶; PSI4 provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. Threading).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease.; PSI4 is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes PSI4 incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in PSI4, with many functionals available. Density fitting is ubiquitous in; PSI4, leading to some of the most efficient MP2 and CCSD(T) code available.; PSI4 also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, PSI4 gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory.; In this section, we provide an overview of some of the features of; PSI4 along with the prerequisite steps for running calculations.; Sec. Tutorial provides a brief tutorial to help new users; get started. Section Psithon offers further details into the; structure of PSI4 i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/introduction.html:314,efficient,efficiently,314,psi4manual/1.9.x/introduction.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/introduction.html,2,"['efficient', 'power']","['efficiently', 'powerful']"
Energy Efficiency,"﻿. JSON. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs; JSON. JSON¶. Input File; Description. json/schema-1-energy; test QCSchema for energy. json/schema-1-gradient; test QCSchema for gradient. json/schema-1-orient; test QCSchema mol orientation. json/schema-1-response; test QCSchema for response properties. json/schema-1-ghost; test QCSchema with ghost atoms. json/schema-1-throws; test QCSchema noncontiguous mol. json/schema-1-properties; test QCSchema for properties. json/schema-1-tamps; test QCSchema for CCSD amplitudes saving. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs; JSON. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodoc_testsuite_json.html:180,energy,energy,180,psi4manual/master/autodoc_testsuite_json.html,https://psicode.org,https://psicode.org/psi4manual/master/autodoc_testsuite_json.html,2,['energy'],['energy']
Energy Efficiency,"﻿. JSON. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. JSON¶. Input File; Description. json/v11-energy; test c. v1.1 Schema. json/schema-1-properties; test QC_JSON Schema for properties. json/v11-gradient; test c. v1.1 Schema for gradient. json/schema-1-throws; test QC_JSON Schema noncontiguous mol. json/schema-1-ghost; test QC_JSON Schema with ghost atoms. json/schema-1-gradient; test QC_JSON Schema for gradient. json/schema-1-orient; test QC_JSON Schema mol orientation. json/schema-1-energy; test QC_JSON Schema for energy. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_json-1.html:162,energy,energy,162,psi4manual/1.2.1/autodoc_testsuite_json-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_json-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. JSON. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. JSON¶. Input File; Description. json/schema-1-properties; test QC_JSON Schema for properties. json/schema-1-throws; test QC_JSON Schema noncontiguous mol. json/schema-1-ghost; test QC_JSON Schema with ghost atoms. json/schema-1-gradient; test QC_JSON Schema for gradient. json/schema-1-orient; test QC_JSON Schema mol orientation. json/schema-1-energy; test QC_JSON Schema for energy. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_json-1.html:466,energy,energy,466,psi4manual/1.3.2/autodoc_testsuite_json-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_json-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. JSON. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; JSON. JSON¶. Input File; Description. json/schema-1-energy; test QC_JSON Schema for energy. json/schema-1-orient; test QC_JSON Schema mol orientation. json/schema-1-properties; test QC_JSON Schema for properties. json/schema-1-throws; test QC_JSON Schema noncontiguous mol. json/schema-1-ghost; test QC_JSON Schema with ghost atoms. json/schema-1-gradient; test QC_JSON Schema for gradient. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; JSON. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_json-1.html:171,energy,energy,171,psi4manual/1.4.0/autodoc_testsuite_json-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_json-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. JSON. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; JSON. JSON¶. Input File; Description. json/schema-1-energy; test QC_JSON Schema for energy. json/schema-1-orient; test QC_JSON Schema mol orientation. json/schema-1-properties; test QC_JSON Schema for properties. json/schema-1-throws; test QC_JSON Schema noncontiguous mol. json/schema-1-response; test QC_JSON Schema for response properties. json/schema-1-ghost; test QC_JSON Schema with ghost atoms. json/schema-1-gradient; test QC_JSON Schema for gradient. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; JSON. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_json-1.html:171,energy,energy,171,psi4manual/1.5.0/autodoc_testsuite_json-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_json-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. JSON. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; JSON. JSON¶. Input File; Description. json/schema-1-energy; test QCSchema for energy. json/schema-1-ghost; test QCSchema with ghost atoms. json/schema-1-orient; test QCSchema mol orientation. json/schema-1-throws; test QCSchema noncontiguous mol. json/schema-1-properties; test QCSchema for properties. json/schema-1-tamps; test QCSchema for CCSD amplitudes saving. json/schema-1-gradient; test QCSchema for gradient. json/schema-1-response; test QCSchema for response properties. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; JSON. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_json.html:171,energy,energy,171,psi4manual/1.6.x/autodoc_testsuite_json.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_json.html,2,['energy'],['energy']
Energy Efficiency,"﻿. JSON. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; JSON. JSON¶. Input File; Description. json/schema-1-properties; test QCSchema for properties. json/schema-1-response; test QCSchema for response properties. json/schema-1-tamps; test QCSchema for CCSD amplitudes saving. json/schema-1-energy; test QCSchema for energy. json/schema-1-orient; test QCSchema mol orientation. json/schema-1-throws; test QCSchema noncontiguous mol. json/schema-1-gradient; test QCSchema for gradient. json/schema-1-ghost; test QCSchema with ghost atoms. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; JSON. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_json.html:353,energy,energy,353,psi4manual/1.7.x/autodoc_testsuite_json.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_json.html,2,['energy'],['energy']
Energy Efficiency,"﻿. JSON. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; JSON. JSON¶. Input File; Description. json/schema-1-orient; test QCSchema mol orientation. json/schema-1-tamps; test QCSchema for CCSD amplitudes saving. json/schema-1-ghost; test QCSchema with ghost atoms. json/schema-1-throws; test QCSchema noncontiguous mol. json/schema-1-response; test QCSchema for response properties. json/schema-1-properties; test QCSchema for properties. json/schema-1-energy; test QCSchema for energy. json/schema-1-gradient; test QCSchema for gradient. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; JSON. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_json.html:516,energy,energy,516,psi4manual/1.8.x/autodoc_testsuite_json.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_json.html,2,['energy'],['energy']
Energy Efficiency,"﻿. JSON. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; JSON. JSON¶. Input File; Description. json/schema-1-ghost; test QCSchema with ghost atoms. json/schema-1-tamps; test QCSchema for CCSD amplitudes saving. json/schema-1-orient; test QCSchema mol orientation. json/schema-1-energy; test QCSchema for energy. json/schema-1-gradient; test QCSchema for gradient. json/schema-1-throws; test QCSchema noncontiguous mol. json/schema-1-properties; test QCSchema for properties. json/schema-1-response; test QCSchema for response properties. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; JSON. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_json.html:342,energy,energy,342,psi4manual/1.9.x/autodoc_testsuite_json.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_json.html,2,['energy'],['energy']
Energy Efficiency,﻿. LMP2 — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». LMP2¶; Performs local MP2 computations for RHF reference functions. General¶. DF_BASIS_MP2¶. Auxiliary basis set for MP2 density fitting calculations. Type: string; Possible Values: basis string; Default: No Default. DF_LMP2¶. Do use density fitting? Turned on with specification of fitting basis. Type: boolean; Default: true. DIIS¶. Do use DIIS extrapolation to accelerate convergence?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 5. DIIS_START_ITER¶. Iteration at which to start DIIS extrapolation. Type: integer; Default: 3. DISTANT_PAIR_CUTOFF¶. Distant pair cutoff. Type: double; Default: 8.0. DOMAIN_PRINT_EXIT¶. Do exit after printing the domains?. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy (change). Type: conv double; Default: 1e-7. FOCK_TOLERANCE¶. Minimum absolute value below which parts of the Fock matrix are skipped. Type: conv double; Default: 1e-2. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. Type: conv double; Default: 1e-7. LOCAL_CUTOFF¶. Localization cutoff. Type: double; Default: 0.02. MAXITER¶. Maximum number of iterations. Type: integer; Default: 50. MEMORY¶. Type: integer; Default: 2000. MP2_OS_SCALE¶. Type: double; Default: 6.0/5.0. MP2_SS_SCALE¶. Type: double; Default: 1.0/3.0. NEGLECT_DISTANT_PAIR¶. Do neglect distant pairs?. Type: boolean; Default: true. REFERENCE¶. Reference wavefunction type. Type: string; Possible Values: RHF; Default: RHF. R_CONVERGENCE¶. Convergence criterion for T2 amplitudes (RMS change). Type: conv double; Default: 1e-5. SCREEN_INTS¶. Do screen integrals?. Type: boolean; Default: false. SCS¶. Do ?. Type: boolean; Default: false. SCS_N¶. Do ?. Type: boolean; Default: false. Expert¶. WFN¶. Wavefunction type. Type: string; Default: LM,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__lmp2-1.html:960,energy,energy,960,psi4manual/4.0b2/autodir_options_c/module__lmp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__lmp2-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LMP2 — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». LMP2¶; Performs local MP2 computations for RHF reference functions. CURRENT ENERGY; LMP2 ENERGY. Previous topic; DFMP2; Next topic; MCSCF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__lmp2-1.html:222,ENERGY,ENERGY,222,psi4manual/4.0b2/autodir_psivariables/module__lmp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__lmp2-1.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,﻿. LMP2 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». LMP2¶; Performs local MP2 computations for RHF reference functions. General¶. DF_BASIS_MP2¶. Auxiliary basis set for MP2 density fitting calculations. Type: string; Possible Values: basis string; Default: No Default. DF_LMP2¶. Do use density fitting? Turned on with specification of fitting basis. Type: boolean; Default: true. DIIS¶. Do use DIIS extrapolation to accelerate convergence?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 5. DIIS_START_ITER¶. Iteration at which to start DIIS extrapolation. Type: integer; Default: 3. DISTANT_PAIR_CUTOFF¶. Distant pair cutoff. Type: double; Default: 8.0. DOMAIN_PRINT_EXIT¶. Do exit after printing the domains?. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy (change). Type: conv double; Default: 1e-7. FOCK_TOLERANCE¶. Minimum absolute value below which parts of the Fock matrix are skipped. Type: conv double; Default: 1e-2. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. Type: conv double; Default: 1e-7. LOCAL_CUTOFF¶. Localization cutoff. Type: double; Default: 0.02. MAXITER¶. Maximum number of iterations. Type: integer; Default: 50. MEMORY¶. The amount of memory available (in Mb). Type: integer; Default: 2000. MP2_OS_SCALE¶. The scale factor used for opposite-spin pairs in SCS computations. Type: double; Default: 6.0/5.0. MP2_SS_SCALE¶. The scale factor used for same-spin pairs in SCS computations. Type: double; Default: 1.0/3.0. NEGLECT_DISTANT_PAIR¶. Do neglect distant pairs?. Type: boolean; Default: true. REFERENCE¶. Reference wavefunction type. Type: string; Possible Values: RHF; Default: RHF. R_CONVERGENCE¶. Convergence criterion for T2 amplitudes (RMS change). Type: conv double; Default: 1e-5. SCREEN_INTS¶. Do screen integ,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__lmp2-1.html:975,energy,energy,975,psi4manual/4.0b3/autodir_options_c/module__lmp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__lmp2-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LMP2 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». LMP2¶; Performs local MP2 computations for RHF reference functions. CURRENT ENERGY; LMP2 ENERGY. Previous topic; DFMP2; Next topic; MCSCF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 21, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__lmp2-1.html:237,ENERGY,ENERGY,237,psi4manual/4.0b3/autodir_psivariables/module__lmp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__lmp2-1.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,﻿. LMP2 — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». LMP2¶; Performs local MP2 computations for RHF reference functions. General¶. DF_BASIS_MP2¶. Auxiliary basis set for MP2 density fitting calculations. Type: string; Possible Values: basis string; Default: No Default. DF_LMP2¶. Do use density fitting? Turned on with specification of fitting basis. Type: boolean; Default: true. DIIS¶. Do use DIIS extrapolation to accelerate convergence?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 5. DIIS_START_ITER¶. Iteration at which to start DIIS extrapolation. Type: integer; Default: 3. DISTANT_PAIR_CUTOFF¶. Distant pair cutoff. Type: double; Default: 8.0. DOMAIN_PRINT_EXIT¶. Do exit after printing the domains?. Type: boolean; Default: false. E_CONVERGENCE¶. Convergence criterion for energy (change). See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-8. FOCK_TOLERANCE¶. Minimum absolute value below which parts of the Fock matrix are skipped. Type: conv double; Default: 1e-2. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. Type: conv double; Default: 1e-7. LOCAL_CUTOFF¶. Localization cutoff. Type: double; Default: 0.02. MAXITER¶. Maximum number of iterations. Type: integer; Default: 50. MEMORY¶. The amount of memory available (in Mb). Type: integer; Default: 2000. MP2_OS_SCALE¶. The scale factor used for opposite-spin pairs in SCS computations. Type: double; Default: 6.0/5.0. MP2_SS_SCALE¶. The scale factor used for same-spin pairs in SCS computations. Type: double; Default: 1.0/3.0. NEGLECT_DISTANT_PAIR¶. Do neglect distant pairs?. Type: boolean; Default: true. REFERENCE¶. Reference wavefunction type. Type: string; Possible Values: RHF; Default: RHF. R_CONVERGENCE¶. Convergence criterio,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__lmp2-1.html:975,energy,energy,975,psi4manual/4.0b4/autodir_options_c/module__lmp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__lmp2-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LMP2 — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». LMP2¶; Performs local MP2 computations for RHF reference functions. CURRENT ENERGY; LMP2 ENERGY. Previous topic; FNOCC; Next topic; MCSCF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 29, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__lmp2-1.html:237,ENERGY,ENERGY,237,psi4manual/4.0b4/autodir_psivariables/module__lmp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__lmp2-1.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. LOCAL_IBO_POWER — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; FISAPT ». LOCAL_IBO_POWER¶. IBO localization metric power. Type: integer; Default: 4. Previous topic; LOCAL_IBO_CONDITION; Next topic; LOCAL_IBO_STARS. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; FISAPT ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/fisapt__local_ibo_power-1.html:226,power,power,226,psi4manual/1.0.0/autodir_options_c/fisapt__local_ibo_power-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/fisapt__local_ibo_power-1.html,2,['power'],['power']
Energy Efficiency,"﻿. LOCAL_IBO_POWER. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_POWER. LOCAL_IBO_POWER¶. IBO localization metric power. Type: integer; Default: 4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_POWER. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/fisapt__local_ibo_power.html:196,power,power,196,psi4manual/master/autodir_options_c/fisapt__local_ibo_power.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/fisapt__local_ibo_power.html,2,['power'],['power']
Energy Efficiency,"﻿. LOCAL_IBO_POWER. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_POWER. LOCAL_IBO_POWER¶. IBO localization metric power. Type: integer; Default: 4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_POWER. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/fisapt__local_ibo_power-1.html:187,power,power,187,psi4manual/1.4.0/autodir_options_c/fisapt__local_ibo_power-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/fisapt__local_ibo_power-1.html,4,['power'],['power']
Energy Efficiency,"﻿. LOCAL_IBO_POWER. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_POWER. LOCAL_IBO_POWER¶. IBO localization metric power. Type: integer; Default: 4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_POWER. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/fisapt__local_ibo_power-1.html:187,power,power,187,psi4manual/1.5.0/autodir_options_c/fisapt__local_ibo_power-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/fisapt__local_ibo_power-1.html,4,['power'],['power']
Energy Efficiency,"﻿. LOCAL_IBO_POWER. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_POWER. LOCAL_IBO_POWER¶. IBO localization metric power. Type: integer; Default: 4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_POWER. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/fisapt__local_ibo_power.html:187,power,power,187,psi4manual/1.6.x/autodir_options_c/fisapt__local_ibo_power.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/fisapt__local_ibo_power.html,2,['power'],['power']
Energy Efficiency,"﻿. LOCAL_IBO_POWER. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_POWER. LOCAL_IBO_POWER¶. IBO localization metric power. Type: integer; Default: 4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_POWER. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/fisapt__local_ibo_power.html:187,power,power,187,psi4manual/1.7.x/autodir_options_c/fisapt__local_ibo_power.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/fisapt__local_ibo_power.html,2,['power'],['power']
Energy Efficiency,"﻿. LOCAL_IBO_POWER. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_POWER. LOCAL_IBO_POWER¶. IBO localization metric power. Type: integer; Default: 4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_POWER. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/fisapt__local_ibo_power.html:189,power,power,189,psi4manual/1.8.x/autodir_options_c/fisapt__local_ibo_power.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/fisapt__local_ibo_power.html,2,['power'],['power']
Energy Efficiency,"﻿. LOCAL_IBO_POWER. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_POWER. LOCAL_IBO_POWER¶. IBO localization metric power. Type: integer; Default: 4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_POWER. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/fisapt__local_ibo_power.html:189,power,power,189,psi4manual/1.9.x/autodir_options_c/fisapt__local_ibo_power.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/fisapt__local_ibo_power.html,2,['power'],['power']
Energy Efficiency,"﻿. LOCAL_IBO_STARS_COMPLETENESS. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_STARS_COMPLETENESS. LOCAL_IBO_STARS_COMPLETENESS¶. IBO Charge metric for classification as Pi. Type: double; Default: 0.90. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_STARS_COMPLETENESS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/fisapt__local_ibo_stars_completeness.html:215,Charge,Charge,215,psi4manual/master/autodir_options_c/fisapt__local_ibo_stars_completeness.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/fisapt__local_ibo_stars_completeness.html,1,['Charge'],['Charge']
Energy Efficiency,"﻿. LOCAL_IBO_STARS_COMPLETENESS. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_STARS_COMPLETENESS. LOCAL_IBO_STARS_COMPLETENESS¶. IBO Charge metric for classification as Pi. Type: double; Default: 0.90. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_STARS_COMPLETENESS. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/fisapt__local_ibo_stars_completeness-1.html:206,Charge,Charge,206,psi4manual/1.4.0/autodir_options_c/fisapt__local_ibo_stars_completeness-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/fisapt__local_ibo_stars_completeness-1.html,2,['Charge'],['Charge']
Energy Efficiency,"﻿. LOCAL_IBO_STARS_COMPLETENESS. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_STARS_COMPLETENESS. LOCAL_IBO_STARS_COMPLETENESS¶. IBO Charge metric for classification as Pi. Type: double; Default: 0.90. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_STARS_COMPLETENESS. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/fisapt__local_ibo_stars_completeness-1.html:206,Charge,Charge,206,psi4manual/1.5.0/autodir_options_c/fisapt__local_ibo_stars_completeness-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/fisapt__local_ibo_stars_completeness-1.html,2,['Charge'],['Charge']
Energy Efficiency,"﻿. LOCAL_IBO_STARS_COMPLETENESS. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_STARS_COMPLETENESS. LOCAL_IBO_STARS_COMPLETENESS¶. IBO Charge metric for classification as Pi. Type: double; Default: 0.90. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_STARS_COMPLETENESS. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/fisapt__local_ibo_stars_completeness.html:206,Charge,Charge,206,psi4manual/1.6.x/autodir_options_c/fisapt__local_ibo_stars_completeness.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/fisapt__local_ibo_stars_completeness.html,1,['Charge'],['Charge']
Energy Efficiency,"﻿. LOCAL_IBO_STARS_COMPLETENESS. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_STARS_COMPLETENESS. LOCAL_IBO_STARS_COMPLETENESS¶. IBO Charge metric for classification as Pi. Type: double; Default: 0.90. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_STARS_COMPLETENESS. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/fisapt__local_ibo_stars_completeness.html:206,Charge,Charge,206,psi4manual/1.7.x/autodir_options_c/fisapt__local_ibo_stars_completeness.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/fisapt__local_ibo_stars_completeness.html,1,['Charge'],['Charge']
Energy Efficiency,"﻿. LOCAL_IBO_STARS_COMPLETENESS. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_STARS_COMPLETENESS. LOCAL_IBO_STARS_COMPLETENESS¶. IBO Charge metric for classification as Pi. Type: double; Default: 0.90. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_STARS_COMPLETENESS. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/fisapt__local_ibo_stars_completeness.html:208,Charge,Charge,208,psi4manual/1.8.x/autodir_options_c/fisapt__local_ibo_stars_completeness.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/fisapt__local_ibo_stars_completeness.html,1,['Charge'],['Charge']
Energy Efficiency,"﻿. LOCAL_IBO_STARS_COMPLETENESS. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_STARS_COMPLETENESS. LOCAL_IBO_STARS_COMPLETENESS¶. IBO Charge metric for classification as Pi. Type: double; Default: 0.90. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FISAPT; LOCAL_IBO_STARS_COMPLETENESS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/fisapt__local_ibo_stars_completeness.html:208,Charge,Charge,208,psi4manual/1.9.x/autodir_options_c/fisapt__local_ibo_stars_completeness.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/fisapt__local_ibo_stars_completeness.html,1,['Charge'],['Charge']
Energy Efficiency,"﻿. LOCAL_WEAKP — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; CCENERGY ». LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, NEGLECT, MP2; Default: NONE. Previous topic; LOCAL_PAIRDEF; Next topic; MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/ccenergy__local_weakp-1.html:431,energy,energy,431,psi4manual/4.0b2/autodir_options_c/ccenergy__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/ccenergy__local_weakp-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCENERGY ». LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, NEGLECT, MP2; Default: NONE. Previous topic; LOCAL_PAIRDEF; Next topic; MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/ccenergy__local_weakp-1.html:446,energy,energy,446,psi4manual/4.0b3/autodir_options_c/ccenergy__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/ccenergy__local_weakp-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCEOM ». LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, MP2, NEGLECT; Default: NONE. Previous topic; LOCAL_PRECONDITIONER; Next topic; MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCEOM ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/cceom__local_weakp-1.html:443,energy,energy,443,psi4manual/4.0b3/autodir_options_c/cceom__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/cceom__local_weakp-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CIS ». LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CIS method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CIS energy computed with weak pairs ignored. Type: string; Possible Values: MP2, NEGLECT, NONE; Default: MP2. Previous topic; LOCAL_METHOD; Next topic; MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CIS ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/cis__local_weakp-1.html:439,energy,energy,439,psi4manual/4.0b3/autodir_options_c/cis__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/cis__local_weakp-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCENERGY ». LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, NEGLECT, MP2; Default: NONE. Previous topic; LOCAL_PAIRDEF; Next topic; MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/ccenergy__local_weakp-1.html:446,energy,energy,446,psi4manual/4.0b4/autodir_options_c/ccenergy__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/ccenergy__local_weakp-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCEOM ». LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, MP2, NEGLECT; Default: NONE. Previous topic; LOCAL_PRECONDITIONER; Next topic; MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCEOM ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/cceom__local_weakp-1.html:443,energy,energy,443,psi4manual/4.0b4/autodir_options_c/cceom__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/cceom__local_weakp-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CIS ». LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CIS method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CIS energy computed with weak pairs ignored. Type: string; Possible Values: MP2, NEGLECT, NONE; Default: MP2. Previous topic; LOCAL_METHOD; Next topic; MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CIS ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/cis__local_weakp-1.html:439,energy,energy,439,psi4manual/4.0b4/autodir_options_c/cis__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/cis__local_weakp-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCENERGY ». LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CIS method. A value of// NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in// the same manner as strong pairs. A value of MP2 uses second-order perturbation// theory to correct the local-CIS energy computed with weak pairs ignored. Type: string; Possible Values: MP2, NEGLECT, NONE; Default: MP2. Previous topic; LOCAL_PAIRDEF; Next topic; MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/ccenergy__local_weakp-1.html:450,energy,energy,450,psi4manual/4.0b5/autodir_options_c/ccenergy__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/ccenergy__local_weakp-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCEOM ». LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, MP2, NEGLECT; Default: NONE. Previous topic; LOCAL_PRECONDITIONER; Next topic; MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCEOM ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/cceom__local_weakp-1.html:443,energy,energy,443,psi4manual/4.0b5/autodir_options_c/cceom__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/cceom__local_weakp-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCENERGY ». LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, NEGLECT, MP2; Default: NONE. Previous topic; LOCAL_PAIRDEF; Next topic; MAXITER. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/ccenergy__local_weakp-1.html:453,energy,energy,453,psi4manual/1.0.0/autodir_options_c/ccenergy__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/ccenergy__local_weakp-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCEOM ». LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, MP2, NEGLECT; Default: NONE. Previous topic; LOCAL_PRECONDITIONER; Next topic; MAXITER. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCEOM ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cceom__local_weakp-1.html:450,energy,energy,450,psi4manual/1.0.0/autodir_options_c/cceom__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cceom__local_weakp-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCENERGY; LOCAL_WEAKP. LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, NEGLECT, MP2; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCENERGY; LOCAL_WEAKP. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/ccenergy__local_weakp.html:419,energy,energy,419,psi4manual/master/autodir_options_c/ccenergy__local_weakp.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/ccenergy__local_weakp.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCEOM; LOCAL_WEAKP. LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, MP2, NEGLECT; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCEOM; LOCAL_WEAKP. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cceom__local_weakp.html:416,energy,energy,416,psi4manual/master/autodir_options_c/cceom__local_weakp.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cceom__local_weakp.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCENERGY; LOCAL_WEAKP. LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, NEGLECT, MP2; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCENERGY; LOCAL_WEAKP. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/ccenergy__local_weakp-1.html:410,energy,energy,410,psi4manual/1.4.0/autodir_options_c/ccenergy__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/ccenergy__local_weakp-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCEOM; LOCAL_WEAKP. LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, MP2, NEGLECT; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCEOM; LOCAL_WEAKP. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cceom__local_weakp-1.html:407,energy,energy,407,psi4manual/1.4.0/autodir_options_c/cceom__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cceom__local_weakp-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCENERGY; LOCAL_WEAKP. LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, NEGLECT, MP2; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCENERGY; LOCAL_WEAKP. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/ccenergy__local_weakp-1.html:410,energy,energy,410,psi4manual/1.5.0/autodir_options_c/ccenergy__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/ccenergy__local_weakp-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCEOM; LOCAL_WEAKP. LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, MP2, NEGLECT; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCEOM; LOCAL_WEAKP. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cceom__local_weakp-1.html:407,energy,energy,407,psi4manual/1.5.0/autodir_options_c/cceom__local_weakp-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cceom__local_weakp-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCENERGY; LOCAL_WEAKP. LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, NEGLECT, MP2; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCENERGY; LOCAL_WEAKP. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/ccenergy__local_weakp.html:410,energy,energy,410,psi4manual/1.6.x/autodir_options_c/ccenergy__local_weakp.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/ccenergy__local_weakp.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCEOM; LOCAL_WEAKP. LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, MP2, NEGLECT; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCEOM; LOCAL_WEAKP. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cceom__local_weakp.html:407,energy,energy,407,psi4manual/1.6.x/autodir_options_c/cceom__local_weakp.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cceom__local_weakp.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCENERGY; LOCAL_WEAKP. LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, NEGLECT, MP2; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCENERGY; LOCAL_WEAKP. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/ccenergy__local_weakp.html:410,energy,energy,410,psi4manual/1.7.x/autodir_options_c/ccenergy__local_weakp.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/ccenergy__local_weakp.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCEOM; LOCAL_WEAKP. LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, MP2, NEGLECT; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCEOM; LOCAL_WEAKP. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cceom__local_weakp.html:407,energy,energy,407,psi4manual/1.7.x/autodir_options_c/cceom__local_weakp.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cceom__local_weakp.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCENERGY; LOCAL_WEAKP. LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, NEGLECT, MP2; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCENERGY; LOCAL_WEAKP. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/ccenergy__local_weakp.html:412,energy,energy,412,psi4manual/1.8.x/autodir_options_c/ccenergy__local_weakp.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/ccenergy__local_weakp.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCEOM; LOCAL_WEAKP. LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, MP2, NEGLECT; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCEOM; LOCAL_WEAKP. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cceom__local_weakp.html:409,energy,energy,409,psi4manual/1.8.x/autodir_options_c/cceom__local_weakp.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cceom__local_weakp.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCENERGY; LOCAL_WEAKP. LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, NEGLECT, MP2; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCENERGY; LOCAL_WEAKP. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/ccenergy__local_weakp.html:412,energy,energy,412,psi4manual/1.9.x/autodir_options_c/ccenergy__local_weakp.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/ccenergy__local_weakp.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LOCAL_WEAKP. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCEOM; LOCAL_WEAKP. LOCAL_WEAKP¶. Desired treatment of “weak pairs” in the local-CCSD method. A value of NEGLECT ignores weak pairs entirely. A value of NONE treats weak pairs in the same manner as strong pairs. A value of MP2 uses second-order perturbation theory to correct the local-CCSD energy computed with weak pairs ignored. Type: string; Possible Values: NONE, MP2, NEGLECT; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCEOM; LOCAL_WEAKP. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cceom__local_weakp.html:409,energy,energy,409,psi4manual/1.9.x/autodir_options_c/cceom__local_weakp.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cceom__local_weakp.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LSE_TOLERANCE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. Previous topic; LSE_COLLAPSE; Next topic; MAX_NUM_VECS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__lse_tolerance-1.html:193,energy,energy,193,psi4manual/4.0b2/autodir_options_c/detci__lse_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__lse_tolerance-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LSE_TOLERANCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. Previous topic; LSE_COLLAPSE; Next topic; MAX_NUM_VECS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__lse_tolerance-1.html:208,energy,energy,208,psi4manual/4.0b3/autodir_options_c/detci__lse_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__lse_tolerance-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LSE_TOLERANCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. Previous topic; LSE_COLLAPSE; Next topic; MAX_NUM_VECS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__lse_tolerance-1.html:208,energy,energy,208,psi4manual/4.0b4/autodir_options_c/detci__lse_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__lse_tolerance-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LSE_TOLERANCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. Previous topic; LSE_COLLAPSE; Next topic; MAX_NUM_VECS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__lse_tolerance-1.html:208,energy,energy,208,psi4manual/4.0b5/autodir_options_c/detci__lse_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__lse_tolerance-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LSE_TOLERANCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. Previous topic; LSE_COLLAPSE; Next topic; MAX_NUM_VECS. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__lse_tolerance-1.html:215,energy,energy,215,psi4manual/1.0.0/autodir_options_c/detci__lse_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__lse_tolerance-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LSE_TOLERANCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/detci__lse_tolerance.html:183,energy,energy,183,psi4manual/master/autodir_options_c/detci__lse_tolerance.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/detci__lse_tolerance.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LSE_TOLERANCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__lse_tolerance-1.html:174,energy,energy,174,psi4manual/1.4.0/autodir_options_c/detci__lse_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__lse_tolerance-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LSE_TOLERANCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__lse_tolerance-1.html:174,energy,energy,174,psi4manual/1.5.0/autodir_options_c/detci__lse_tolerance-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__lse_tolerance-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. LSE_TOLERANCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__lse_tolerance.html:174,energy,energy,174,psi4manual/1.6.x/autodir_options_c/detci__lse_tolerance.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__lse_tolerance.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LSE_TOLERANCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__lse_tolerance.html:174,energy,energy,174,psi4manual/1.7.x/autodir_options_c/detci__lse_tolerance.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__lse_tolerance.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LSE_TOLERANCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__lse_tolerance.html:176,energy,energy,176,psi4manual/1.8.x/autodir_options_c/detci__lse_tolerance.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__lse_tolerance.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LSE_TOLERANCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. LSE_TOLERANCE¶. Minimum converged energy for least-squares extrapolation to be performed. Type: conv double; Default: 3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; LSE_TOLERANCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__lse_tolerance.html:176,energy,energy,176,psi4manual/1.9.x/autodir_options_c/detci__lse_tolerance.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__lse_tolerance.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LaplaceDenominator. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; LaplaceDenominator. LaplaceDenominator¶. class psi4.core.LaplaceDenominator¶; Bases: pybind11_object; Computer class for a Laplace factorization of the four-index energy denominator in MP2 and coupled-cluster; Methods Summary. denominator_occ(self); Returns the occupied orbital Laplace weights of the factorized doubles denominator (nweights * nocc). denominator_vir(self); Returns the virtual orbital Laplace weights of the factorized doubles denominator (nweights * nvirt). Methods Documentation. denominator_occ(self: psi4.core.LaplaceDenominator) → psi4.core.Matrix¶; Returns the occupied orbital Laplace weights of the factorized doubles denominator (nweights * nocc). denominator_vir(self: psi4.core.LaplaceDenominator) → psi4.core.Matrix¶; Returns the virtual orbital Laplace weights of the factorized doubles denominator (nweights * nvirt). table of contents. LaplaceDenominator; LaplaceDenominator; LaplaceDenominator.denominator_occ(); LaplaceDenominator.denominator_vir(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; LaplaceDenominator. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.LaplaceDenominator.html:297,energy,energy,297,psi4manual/master/api/psi4.core.LaplaceDenominator.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.LaplaceDenominator.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LaplaceDenominator. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; LaplaceDenominator. LaplaceDenominator¶. class psi4.core.LaplaceDenominator¶; Bases: pybind11_object; Computer class for a Laplace factorization of the four-index energy denominator in MP2 and coupled-cluster; Methods Summary. denominator_occ(self); Returns the occupied orbital Laplace weights of the factorized doubles denominator (nweights * nocc). denominator_vir(self); Returns the virtual orbital Laplace weights of the factorized doubles denominator (nweights * nvirt). Methods Documentation. denominator_occ(self: psi4.core.LaplaceDenominator) → psi4.core.Matrix¶; Returns the occupied orbital Laplace weights of the factorized doubles denominator (nweights * nocc). denominator_vir(self: psi4.core.LaplaceDenominator) → psi4.core.Matrix¶; Returns the virtual orbital Laplace weights of the factorized doubles denominator (nweights * nvirt). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; LaplaceDenominator. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.LaplaceDenominator.html:288,energy,energy,288,psi4manual/1.7.x/api/psi4.core.LaplaceDenominator.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.LaplaceDenominator.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LaplaceDenominator. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; LaplaceDenominator. LaplaceDenominator¶. class psi4.core.LaplaceDenominator¶; Bases: pybind11_object; Computer class for a Laplace factorization of the four-index energy denominator in MP2 and coupled-cluster; Methods Summary. denominator_occ(self); Returns the occupied orbital Laplace weights of the factorized doubles denominator (nweights * nocc). denominator_vir(self); Returns the virtual orbital Laplace weights of the factorized doubles denominator (nweights * nvirt). Methods Documentation. denominator_occ(self: psi4.core.LaplaceDenominator) → psi4.core.Matrix¶; Returns the occupied orbital Laplace weights of the factorized doubles denominator (nweights * nocc). denominator_vir(self: psi4.core.LaplaceDenominator) → psi4.core.Matrix¶; Returns the virtual orbital Laplace weights of the factorized doubles denominator (nweights * nvirt). table of contents. LaplaceDenominator; LaplaceDenominator; LaplaceDenominator.denominator_occ(); LaplaceDenominator.denominator_vir(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; LaplaceDenominator. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.LaplaceDenominator.html:290,energy,energy,290,psi4manual/1.8.x/api/psi4.core.LaplaceDenominator.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.LaplaceDenominator.html,2,['energy'],['energy']
Energy Efficiency,"﻿. LaplaceDenominator. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; LaplaceDenominator. LaplaceDenominator¶. class psi4.core.LaplaceDenominator¶; Bases: pybind11_object; Computer class for a Laplace factorization of the four-index energy denominator in MP2 and coupled-cluster; Methods Summary. denominator_occ(self); Returns the occupied orbital Laplace weights of the factorized doubles denominator (nweights * nocc). denominator_vir(self); Returns the virtual orbital Laplace weights of the factorized doubles denominator (nweights * nvirt). Methods Documentation. denominator_occ(self: psi4.core.LaplaceDenominator) → psi4.core.Matrix¶; Returns the occupied orbital Laplace weights of the factorized doubles denominator (nweights * nocc). denominator_vir(self: psi4.core.LaplaceDenominator) → psi4.core.Matrix¶; Returns the virtual orbital Laplace weights of the factorized doubles denominator (nweights * nvirt). table of contents. LaplaceDenominator; LaplaceDenominator; LaplaceDenominator.denominator_occ(); LaplaceDenominator.denominator_vir(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; LaplaceDenominator. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.LaplaceDenominator.html:290,energy,energy,290,psi4manual/1.9.x/api/psi4.core.LaplaceDenominator.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.LaplaceDenominator.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Programming with the Core Libraries; Linear Algebra in PSI4. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers.; All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for e",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/prog_blas.html:344,efficient,efficient,344,psi4manual/master/prog_blas.html,https://psicode.org,https://psicode.org/psi4manual/master/prog_blas.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Programming: Using the Core Libraries. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers. All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example), and are passed by; pr",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/prog_blas-1.html:315,efficient,efficient,315,psi4manual/1.2.1/prog_blas-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/prog_blas-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Programming with the Core Libraries. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers. All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example), and are passed by; prov",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/prog_blas-1.html:313,efficient,efficient,313,psi4manual/1.3.2/prog_blas-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/prog_blas-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Programming with the Core Libraries; Linear Algebra in PSI4. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers.; All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example), ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/prog_blas-1.html:335,efficient,efficient,335,psi4manual/1.4.0/prog_blas-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/prog_blas-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Programming with the Core Libraries; Linear Algebra in PSI4. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers.; All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example), ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/prog_blas-1.html:335,efficient,efficient,335,psi4manual/1.5.0/prog_blas-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/prog_blas-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Programming with the Core Libraries; Linear Algebra in PSI4. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers.; All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example), ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/prog_blas.html:335,efficient,efficient,335,psi4manual/1.6.x/prog_blas.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/prog_blas.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Programming with the Core Libraries; Linear Algebra in PSI4. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers.; All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example), ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/prog_blas.html:335,efficient,efficient,335,psi4manual/1.7.x/prog_blas.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/prog_blas.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Programming with the Core Libraries; Linear Algebra in PSI4. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers.; All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example)",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/prog_blas.html:337,efficient,efficient,337,psi4manual/1.8.x/prog_blas.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/prog_blas.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. Linear Algebra in PSI4. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Programming with the Core Libraries; Linear Algebra in PSI4. Linear Algebra in PSI4¶. How to call BLAS & LAPACK in PSI4¶; Computational chemistry is essentially linear algebra on molecular; systems, so using stable, portable, scalable, and efficient numerical; linear algebra methods in PSI4 is critical. To that end, we use BLAS1; (vector-vector operations, like dot products), BLAS2 (matrix-vector; operations, like rank-1 update), BLAS3 (matrix-matrix operations, like; matrix multiplication), and LAPACK (advanced matrix decompositions and; solutions). The methods provided by BLAS and LAPACK are standard, but the; performance of actual implementations differ greatly from one version to; another. Moreover, the standard interfaces to the libraries are Fortran,; so PSI4 provides a common set of wrappers in psi4/psi4/src/psi4/libqt/qt.h . Warning; Although block_matrix, init_array, and print_mat are still; around, their use is discouraged in favor of operations on; psi4.core.Matrix itself. The advice in these docs will catch up; shortly. BLAS Wrappers¶; BLAS wrappers are currently fully supported at double precision.; BLAS commands involving matrices are wrapped so as to be conventional; C-style “row-major” indexing, meaning that the column is the fast index; like normal. The calls to BLAS1 routines are wrapped so as to allow for operations on; vectors with more than 2^{31} elements (~16 GB, getting to be a problem).; So passing a signed or unsigned long works, though the stride arguments; must be integers.; All routines are declared in qt.h. Each routine is prefixed with a; C_, followed by the standard Fortran name of the routine, in capital; letters. Input parameters of single primitives (int, double,; unsigned long int, char, …) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous; memory (as provided by block_matrix, for example)",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/prog_blas.html:337,efficient,efficient,337,psi4manual/1.9.x/prog_blas.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/prog_blas.html,1,['efficient'],['efficient']
Energy Efficiency,"﻿. MAXITER — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DCFT ». MAXITER¶. Maximum number of macro-iterations for both energy and the solution of the response equations. Type: integer; Default: 40. Previous topic; LOCK_OCC; Next topic; MO_RELAX; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/dcft__maxiter-1.html:206,energy,energy,206,psi4manual/4.0b2/autodir_options_c/dcft__maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/dcft__maxiter-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MAXITER — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DCFT ». MAXITER¶. Maximum number of macro-iterations for both energy and the solution of the response equations. Type: integer; Default: 40. Previous topic; LOCK_OCC; Next topic; MO_RELAX; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/dcft__maxiter-1.html:221,energy,energy,221,psi4manual/4.0b3/autodir_options_c/dcft__maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/dcft__maxiter-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MAXITER — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DCFT ». MAXITER¶. Maximum number of the macro-iterations for both the energy and the solution of the response equations. Type: integer; Default: 40. Previous topic; LOCK_OCC; Next topic; MO_RELAX; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/dcft__maxiter-1.html:229,energy,energy,229,psi4manual/4.0b4/autodir_options_c/dcft__maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/dcft__maxiter-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MAXITER — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DCFT ». MAXITER¶. Maximum number of the macro-iterations for both the energy and the solution of the response equations. Type: integer; Default: 40. Previous topic; LOCK_OCC; Next topic; MO_RELAX; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/dcft__maxiter-1.html:229,energy,energy,229,psi4manual/4.0b5/autodir_options_c/dcft__maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/dcft__maxiter-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MAXITER — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». MAXITER¶. Maximum number of macro- or micro-iterations for both energy and response equations. Type: integer; Default: 40. Previous topic; INTS_TOLERANCE; Next topic; MO_RELAX. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__maxiter-1.html:238,energy,energy,238,psi4manual/1.0.0/autodir_options_c/dcft__maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__maxiter-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MAXITER. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DCT; MAXITER. MAXITER¶. Maximum number of macro- or micro-iterations for both energy and response equations. Type: integer; Default: 40. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DCT; MAXITER. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dct__maxiter.html:199,energy,energy,199,psi4manual/master/autodir_options_c/dct__maxiter.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dct__maxiter.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MAXITER. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DCT; MAXITER. MAXITER¶. Maximum number of macro- or micro-iterations for both energy and response equations. Type: integer; Default: 40. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DCT; MAXITER. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dct__maxiter-1.html:190,energy,energy,190,psi4manual/1.4.0/autodir_options_c/dct__maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dct__maxiter-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MAXITER. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DCT; MAXITER. MAXITER¶. Maximum number of macro- or micro-iterations for both energy and response equations. Type: integer; Default: 40. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DCT; MAXITER. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dct__maxiter-1.html:190,energy,energy,190,psi4manual/1.5.0/autodir_options_c/dct__maxiter-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dct__maxiter-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MAXITER. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DCT; MAXITER. MAXITER¶. Maximum number of macro- or micro-iterations for both energy and response equations. Type: integer; Default: 40. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DCT; MAXITER. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dct__maxiter.html:190,energy,energy,190,psi4manual/1.6.x/autodir_options_c/dct__maxiter.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dct__maxiter.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MAXITER. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DCT; MAXITER. MAXITER¶. Maximum number of macro- or micro-iterations for both energy and response equations. Type: integer; Default: 40. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DCT; MAXITER. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dct__maxiter.html:190,energy,energy,190,psi4manual/1.7.x/autodir_options_c/dct__maxiter.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dct__maxiter.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MAXITER. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DCT; MAXITER. MAXITER¶. Maximum number of macro- or micro-iterations for both energy and response equations. Type: integer; Default: 40. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DCT; MAXITER. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dct__maxiter.html:192,energy,energy,192,psi4manual/1.8.x/autodir_options_c/dct__maxiter.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dct__maxiter.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MAXITER. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DCT; MAXITER. MAXITER¶. Maximum number of macro- or micro-iterations for both energy and response equations. Type: integer; Default: 40. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DCT; MAXITER. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dct__maxiter.html:192,energy,energy,192,psi4manual/1.9.x/autodir_options_c/dct__maxiter.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dct__maxiter.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MAX_ENERGY_G_CONVERGENCE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». MAX_ENERGY_G_CONVERGENCE¶. Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. Previous topic; MAX_DISP_G_CONVERGENCE; Next topic; MAX_FORCE_G_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__max_energy_g_convergence-1.html:255,energy,energy,255,psi4manual/4.0b2/autodir_options_c/optking__max_energy_g_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/optking__max_energy_g_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MAX_ENERGY_G_CONVERGENCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». MAX_ENERGY_G_CONVERGENCE¶. Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. Previous topic; MAX_DISP_G_CONVERGENCE; Next topic; MAX_FORCE_G_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__max_energy_g_convergence-1.html:270,energy,energy,270,psi4manual/4.0b3/autodir_options_c/optking__max_energy_g_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/optking__max_energy_g_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MAX_ENERGY_G_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». MAX_ENERGY_G_CONVERGENCE¶. Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. Previous topic; MAX_DISP_G_CONVERGENCE; Next topic; MAX_FORCE_G_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__max_energy_g_convergence-1.html:270,energy,energy,270,psi4manual/4.0b4/autodir_options_c/optking__max_energy_g_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/optking__max_energy_g_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MAX_ENERGY_G_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OPTKING ». MAX_ENERGY_G_CONVERGENCE¶. Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. Previous topic; MAX_DISP_G_CONVERGENCE; Next topic; MAX_FORCE_G_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/optking__max_energy_g_convergence-1.html:270,energy,energy,270,psi4manual/4.0b5/autodir_options_c/optking__max_energy_g_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/optking__max_energy_g_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MAX_ENERGY_G_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». MAX_ENERGY_G_CONVERGENCE¶. Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. Previous topic; MAX_DISP_G_CONVERGENCE; Next topic; MAX_FORCE_G_CONVERGENCE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; OPTKING ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__max_energy_g_convergence-1.html:277,energy,energy,277,psi4manual/1.0.0/autodir_options_c/optking__max_energy_g_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/optking__max_energy_g_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MAX_ENERGY_G_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; MAX_ENERGY_G_CONVERGENCE. MAX_ENERGY_G_CONVERGENCE¶. Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING; MAX_ENERGY_G_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/optking__max_energy_g_convergence.html:256,energy,energy,256,psi4manual/master/autodir_options_c/optking__max_energy_g_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/optking__max_energy_g_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MAX_ENERGY_G_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; MAX_ENERGY_G_CONVERGENCE. MAX_ENERGY_G_CONVERGENCE¶. Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING; MAX_ENERGY_G_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__max_energy_g_convergence-1.html:247,energy,energy,247,psi4manual/1.4.0/autodir_options_c/optking__max_energy_g_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/optking__max_energy_g_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MAX_ENERGY_G_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; MAX_ENERGY_G_CONVERGENCE. MAX_ENERGY_G_CONVERGENCE¶. Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING; MAX_ENERGY_G_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__max_energy_g_convergence-1.html:247,energy,energy,247,psi4manual/1.5.0/autodir_options_c/optking__max_energy_g_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/optking__max_energy_g_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MAX_ENERGY_G_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; MAX_ENERGY_G_CONVERGENCE. MAX_ENERGY_G_CONVERGENCE¶. Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING; MAX_ENERGY_G_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__max_energy_g_convergence.html:247,energy,energy,247,psi4manual/1.6.x/autodir_options_c/optking__max_energy_g_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/optking__max_energy_g_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MAX_ENERGY_G_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; MAX_ENERGY_G_CONVERGENCE. MAX_ENERGY_G_CONVERGENCE¶. Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING; MAX_ENERGY_G_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__max_energy_g_convergence.html:247,energy,energy,247,psi4manual/1.7.x/autodir_options_c/optking__max_energy_g_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/optking__max_energy_g_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MAX_ENERGY_G_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; MAX_ENERGY_G_CONVERGENCE. MAX_ENERGY_G_CONVERGENCE¶. Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING; MAX_ENERGY_G_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__max_energy_g_convergence.html:249,energy,energy,249,psi4manual/1.8.x/autodir_options_c/optking__max_energy_g_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/optking__max_energy_g_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MAX_ENERGY_G_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; MAX_ENERGY_G_CONVERGENCE. MAX_ENERGY_G_CONVERGENCE¶. Convergence criterion for geometry optmization: maximum energy change. Type: conv double; Default: 1.0e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING; MAX_ENERGY_G_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__max_energy_g_convergence.html:249,energy,energy,249,psi4manual/1.9.x/autodir_options_c/optking__max_energy_g_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/optking__max_energy_g_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-8. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configruation solution by starting with CI coefficents of ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do ?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a previous computation?. Type: boolean; Default: true. REFERENCE¶. Reference wa",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__mcscf-1.html:798,energy,energy,798,psi4manual/4.0b2/autodir_options_c/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__mcscf-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. CURRENT ENERGY; CURRENT REFERENCE ENERGY; MCSCF TOTAL ENERGY; SCF TOTAL ENERGY. Previous topic; LMP2; Next topic; MP2; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__mcscf-1.html:306,ENERGY,ENERGY,306,psi4manual/4.0b2/autodir_psivariables/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__mcscf-1.html,8,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MCSCF — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-8. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configruation solution by starting with CI coefficents of ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do consider internal rotations?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a previous computation?. Type: boolea",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__mcscf-1.html:813,energy,energy,813,psi4manual/4.0b3/autodir_options_c/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__mcscf-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. CURRENT ENERGY; CURRENT REFERENCE ENERGY; MCSCF TOTAL ENERGY; SCF TOTAL ENERGY. Previous topic; LMP2; Next topic; MP2; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 21, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__mcscf-1.html:321,ENERGY,ENERGY,321,psi4manual/4.0b3/autodir_psivariables/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__mcscf-1.html,8,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MCSCF — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-8. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configruation solution by starting with CI coefficents of ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do consider internal rotations?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a previous computation?. Type: boolea",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__mcscf-1.html:813,energy,energy,813,psi4manual/4.0b4/autodir_options_c/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__mcscf-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. CURRENT ENERGY; CURRENT REFERENCE ENERGY; MCSCF TOTAL ENERGY; SCF TOTAL ENERGY. Previous topic; LMP2; Next topic; MRCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 29, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__mcscf-1.html:321,ENERGY,ENERGY,321,psi4manual/4.0b4/autodir_psivariables/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__mcscf-1.html,8,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MCSCF — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configruation solution by starting with CI coefficents of ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do consider internal rotations?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a previous computation?. Type: boolea",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__mcscf-1.html:813,energy,energy,813,psi4manual/4.0b5/autodir_options_c/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__mcscf-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. CURRENT ENERGY; CURRENT REFERENCE ENERGY; MCSCF TOTAL ENERGY; SCF TOTAL ENERGY. Previous topic; FNOCC; Next topic; MRCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__mcscf-1.html:321,ENERGY,ENERGY,321,psi4manual/4.0b5/autodir_psivariables/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__mcscf-1.html,8,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MCSCF — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configruation solution by starting with CI coefficents of ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do consider internal rotations?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a previous computation?. Type:",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__mcscf-1.html:820,energy,energy,820,psi4manual/1.0.0/autodir_options_c/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__mcscf-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; MCSCF. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density, as measured by the orbital gradient. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configuration solution by starting with CI coefficents of \(\pm \sqrt{\frac{1}{2}}\) ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do consider internal rotations?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a pr",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__mcscf.html:782,energy,energy,782,psi4manual/master/autodir_options_c/module__mcscf.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__mcscf.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; MCSCF. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. CURRENT ENERGY; CURRENT REFERENCE ENERGY; MCSCF TOTAL ENERGY; SCF ITERATIONS; SCF TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; MCSCF. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_psivariables/module__mcscf.html:290,ENERGY,ENERGY,290,psi4manual/master/autodir_psivariables/module__mcscf.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_psivariables/module__mcscf.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configruation solution by starting with CI coefficents of \(\pm \sqrt{\frac{1}{2}}\) ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do consider internal rotations?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a previous computation?. Type: boolean; Default: true. RE",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__mcscf-1.html:766,energy,energy,766,psi4manual/1.1.0/autodir_options_c/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__mcscf-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configruation solution by starting with CI coefficents of \(\pm \sqrt{\frac{1}{2}}\) ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do consider internal rotations?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a previous computation?. Type: boolean; Default: true. ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__mcscf-1.html:768,energy,energy,768,psi4manual/1.2.1/autodir_options_c/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__mcscf-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density, as measured by the orbital gradient. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configuration solution by starting with CI coefficents of \(\pm \sqrt{\frac{1}{2}}\) ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do consider internal rotations?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a previous computa",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__mcscf-1.html:768,energy,energy,768,psi4manual/1.3.2/autodir_options_c/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__mcscf-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; MCSCF. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density, as measured by the orbital gradient. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configuration solution by starting with CI coefficents of \(\pm \sqrt{\frac{1}{2}}\) ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do consider internal rotations?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a previous co",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__mcscf-1.html:773,energy,energy,773,psi4manual/1.4.0/autodir_options_c/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__mcscf-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; MCSCF. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. CURRENT ENERGY; CURRENT REFERENCE ENERGY; MCSCF TOTAL ENERGY; SCF ITERATIONS; SCF TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; MCSCF. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__mcscf-1.html:281,ENERGY,ENERGY,281,psi4manual/1.4.0/autodir_psivariables/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__mcscf-1.html,8,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; MCSCF. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density, as measured by the orbital gradient. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configuration solution by starting with CI coefficents of \(\pm \sqrt{\frac{1}{2}}\) ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do consider internal rotations?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a previous co",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__mcscf-1.html:773,energy,energy,773,psi4manual/1.5.0/autodir_options_c/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__mcscf-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; MCSCF. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. CURRENT ENERGY; CURRENT REFERENCE ENERGY; MCSCF TOTAL ENERGY; SCF ITERATIONS; SCF TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; MCSCF. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__mcscf-1.html:281,ENERGY,ENERGY,281,psi4manual/1.5.0/autodir_psivariables/module__mcscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__mcscf-1.html,8,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; MCSCF. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density, as measured by the orbital gradient. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configuration solution by starting with CI coefficents of \(\pm \sqrt{\frac{1}{2}}\) ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do consider internal rotations?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a previous co",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__mcscf.html:773,energy,energy,773,psi4manual/1.6.x/autodir_options_c/module__mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__mcscf.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; MCSCF. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. CURRENT ENERGY; CURRENT REFERENCE ENERGY; MCSCF TOTAL ENERGY; SCF ITERATIONS; SCF TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; MCSCF. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__mcscf.html:281,ENERGY,ENERGY,281,psi4manual/1.6.x/autodir_psivariables/module__mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__mcscf.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; MCSCF. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density, as measured by the orbital gradient. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configuration solution by starting with CI coefficents of \(\pm \sqrt{\frac{1}{2}}\) ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do consider internal rotations?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a previous co",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__mcscf.html:773,energy,energy,773,psi4manual/1.7.x/autodir_options_c/module__mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__mcscf.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; MCSCF. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. CURRENT ENERGY; CURRENT REFERENCE ENERGY; MCSCF TOTAL ENERGY; SCF ITERATIONS; SCF TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; MCSCF. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__mcscf.html:281,ENERGY,ENERGY,281,psi4manual/1.7.x/autodir_psivariables/module__mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__mcscf.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; MCSCF. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density, as measured by the orbital gradient. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configuration solution by starting with CI coefficents of \(\pm \sqrt{\frac{1}{2}}\) ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do consider internal rotations?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a previous ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__mcscf.html:775,energy,energy,775,psi4manual/1.8.x/autodir_options_c/module__mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__mcscf.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; MCSCF. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. CURRENT ENERGY; CURRENT REFERENCE ENERGY; MCSCF TOTAL ENERGY; SCF ITERATIONS; SCF TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; MCSCF. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__mcscf.html:283,ENERGY,ENERGY,283,psi4manual/1.8.x/autodir_psivariables/module__mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__mcscf.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; MCSCF. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. General¶. CANONICALIZE_ACTIVE_FAVG¶. Do canonicalize the active orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CANONICALIZE_INACTIVE_FAVG¶. Do canonicalize the inactive (DOCC and Virtual) orbitals such that the average Fock matrix is diagonal?. Type: boolean; Default: false. CI_DIIS¶. Do use DIIS extrapolation to accelerate convergence of the CI coefficients?. Type: boolean; Default: false. DIIS¶. Do use DIIS extrapolation to accelerate convergence of the SCF energy (MO coefficients only)?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DOCC¶. The number of doubly occupied orbitals, per irrep. Type: array; Default: No Default. D_CONVERGENCE¶. Convergence criterion for density, as measured by the orbital gradient. Type: conv double; Default: 1e-6. E_CONVERGENCE¶. Convergence criterion for energy. Type: conv double; Default: 1e-6. FAVG¶. Do use the average Fock matrix during the SCF optimization?. Type: boolean; Default: false. FAVG_START¶. Iteration at which to begin using the averaged Fock matrix. Type: integer; Default: 5. FOLLOW_ROOT¶. Which solution of the SCF equations to find, where 1 is the SCF ground state. Type: integer; Default: 1. FORCE_TWOCON¶. Do attempt to force a two configuration solution by starting with CI coefficents of \(\pm \sqrt{\frac{1}{2}}\) ?. Type: boolean; Default: false. INTERNAL_ROTATIONS¶. Do consider internal rotations?. Type: boolean; Default: true. LEVEL_SHIFT¶. Level shift to aid convergence. Type: double; Default: 0.0. MAXITER¶. Maximum number of iterations. Type: integer; Default: 100. MO_READ¶. Do read in from file the MOs from a previous ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__mcscf.html:775,energy,energy,775,psi4manual/1.9.x/autodir_options_c/module__mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__mcscf.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; MCSCF. MCSCF¶; Performs RHF/UHF/ROHF/TCSCF and more general MCSCF computations. Called as the starting point for multireference coupled cluster computations. CURRENT ENERGY; CURRENT REFERENCE ENERGY; MCSCF TOTAL ENERGY; SCF ITERATIONS; SCF TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; MCSCF. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__mcscf.html:283,ENERGY,ENERGY,283,psi4manual/1.9.x/autodir_psivariables/module__mcscf.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__mcscf.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MCSCF_E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». MCSCF_E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-7. Previous topic; MCSCF_DIIS_START; Next topic; MCSCF_MAX_ROT. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__mcscf_e_convergence-1.html:235,energy,energy,235,psi4manual/1.0.0/autodir_options_c/detci__mcscf_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__mcscf_e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_E_CONVERGENCE. MCSCF_E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-7. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/detci__mcscf_e_convergence.html:209,energy,energy,209,psi4manual/master/autodir_options_c/detci__mcscf_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/detci__mcscf_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_E_CONVERGENCE. MCSCF_E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-7. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__mcscf_e_convergence-1.html:200,energy,energy,200,psi4manual/1.4.0/autodir_options_c/detci__mcscf_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__mcscf_e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_E_CONVERGENCE. MCSCF_E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-7. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__mcscf_e_convergence-1.html:200,energy,energy,200,psi4manual/1.5.0/autodir_options_c/detci__mcscf_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__mcscf_e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_E_CONVERGENCE. MCSCF_E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-7. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__mcscf_e_convergence.html:200,energy,energy,200,psi4manual/1.6.x/autodir_options_c/detci__mcscf_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__mcscf_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_E_CONVERGENCE. MCSCF_E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-7. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__mcscf_e_convergence.html:200,energy,energy,200,psi4manual/1.7.x/autodir_options_c/detci__mcscf_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__mcscf_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_E_CONVERGENCE. MCSCF_E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-7. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__mcscf_e_convergence.html:202,energy,energy,202,psi4manual/1.8.x/autodir_options_c/detci__mcscf_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__mcscf_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_E_CONVERGENCE. MCSCF_E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. Type: conv double; Default: 1e-7. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__mcscf_e_convergence.html:202,energy,energy,202,psi4manual/1.9.x/autodir_options_c/detci__mcscf_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__mcscf_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_SO_START_E — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». MCSCF_SO_START_E¶. Start second-order orbital-orbital MCSCF based on energy convergence. Type: double; Default: 1e-3. Previous topic; MCSCF_SO; Next topic; MCSCF_SO_START_GRAD. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__mcscf_so_start_e-1.html:253,energy,energy,253,psi4manual/1.0.0/autodir_options_c/detci__mcscf_so_start_e-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__mcscf_so_start_e-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_SO_START_E. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_SO_START_E. MCSCF_SO_START_E¶. Start second-order (AH or OS) orbital-orbital MCSCF based on energy convergence. Type: double; Default: 1e-4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_SO_START_E. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/detci__mcscf_so_start_e.html:235,energy,energy,235,psi4manual/master/autodir_options_c/detci__mcscf_so_start_e.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/detci__mcscf_so_start_e.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_SO_START_E. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_SO_START_E. MCSCF_SO_START_E¶. Start second-order (AH or OS) orbital-orbital MCSCF based on energy convergence. Type: double; Default: 1e-4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_SO_START_E. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__mcscf_so_start_e-1.html:226,energy,energy,226,psi4manual/1.4.0/autodir_options_c/detci__mcscf_so_start_e-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__mcscf_so_start_e-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_SO_START_E. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_SO_START_E. MCSCF_SO_START_E¶. Start second-order (AH or OS) orbital-orbital MCSCF based on energy convergence. Type: double; Default: 1e-4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_SO_START_E. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__mcscf_so_start_e-1.html:226,energy,energy,226,psi4manual/1.5.0/autodir_options_c/detci__mcscf_so_start_e-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__mcscf_so_start_e-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_SO_START_E. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_SO_START_E. MCSCF_SO_START_E¶. Start second-order (AH or OS) orbital-orbital MCSCF based on energy convergence. Type: double; Default: 1e-4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_SO_START_E. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__mcscf_so_start_e.html:226,energy,energy,226,psi4manual/1.6.x/autodir_options_c/detci__mcscf_so_start_e.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__mcscf_so_start_e.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_SO_START_E. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_SO_START_E. MCSCF_SO_START_E¶. Start second-order (AH or OS) orbital-orbital MCSCF based on energy convergence. Type: double; Default: 1e-4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_SO_START_E. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__mcscf_so_start_e.html:226,energy,energy,226,psi4manual/1.7.x/autodir_options_c/detci__mcscf_so_start_e.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__mcscf_so_start_e.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_SO_START_E. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_SO_START_E. MCSCF_SO_START_E¶. Start second-order (AH or OS) orbital-orbital MCSCF based on energy convergence. Type: double; Default: 1e-4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_SO_START_E. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__mcscf_so_start_e.html:228,energy,energy,228,psi4manual/1.8.x/autodir_options_c/detci__mcscf_so_start_e.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__mcscf_so_start_e.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MCSCF_SO_START_E. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_SO_START_E. MCSCF_SO_START_E¶. Start second-order (AH or OS) orbital-orbital MCSCF based on energy convergence. Type: double; Default: 1e-4. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; MCSCF_SO_START_E. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__mcscf_so_start_e.html:228,energy,energy,228,psi4manual/1.9.x/autodir_options_c/detci__mcscf_so_start_e.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__mcscf_so_start_e.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MO_RELAX — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DCFT ». MO_RELAX¶. Controls whether to relax the orbitals during the energy computation or not (for debug puproses only). For practical applications only the default must be used. Type: boolean; Default: true. Previous topic; MAXITER; Next topic; R_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/dcft__mo_relax-1.html:214,energy,energy,214,psi4manual/4.0b2/autodir_options_c/dcft__mo_relax-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/dcft__mo_relax-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MO_RELAX — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DCFT ». MO_RELAX¶. Controls whether to relax the orbitals during the energy computation or not (for debug puproses only). For practical applications only the default must be used. Type: boolean; Default: true. Previous topic; MAXITER; Next topic; QC_COUPLING; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/dcft__mo_relax-1.html:229,energy,energy,229,psi4manual/4.0b3/autodir_options_c/dcft__mo_relax-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/dcft__mo_relax-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MO_RELAX — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DCFT ». MO_RELAX¶. Controls whether to relax the orbitals during the energy computation or not (for debug puproses only). For practical applications only the default must be used. Type: boolean; Default: true. Previous topic; MAXITER; Next topic; QC_COUPLING; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/dcft__mo_relax-1.html:229,energy,energy,229,psi4manual/4.0b4/autodir_options_c/dcft__mo_relax-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/dcft__mo_relax-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MO_RELAX — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DCFT ». MO_RELAX¶. Controls whether to relax the orbitals during the energy computation or not (for debug puproses only). For practical applications only the default must be used. Type: boolean; Default: true. Previous topic; MAXITER; Next topic; QC_COUPLING; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/dcft__mo_relax-1.html:229,energy,energy,229,psi4manual/4.0b5/autodir_options_c/dcft__mo_relax-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/dcft__mo_relax-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MO_RELAX — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». MO_RELAX¶. Controls whether to relax the orbitals during the energy computation or not (for debug puproses only). For practical applications only the default must be used. Type: boolean; Default: true. Previous topic; MAXITER; Next topic; MOLDEN_WRITE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__mo_relax-1.html:236,energy,energy,236,psi4manual/1.0.0/autodir_options_c/dcft__mo_relax-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__mo_relax-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MP2 — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». MP2¶; Performs second order Moller-Plesset perturbation theory (MP2) computations. This code can compute RHF/ROHF/UHF energies, and RHF gradient/property computations. However, given the small errors introduced, we recommend using the new density fitted MP2 codes instead, which are much more efficient. General¶. CACHELEVEL¶. The amount of cacheing of data to perform. Type: integer; Default: 2. CACHETYPE¶. The criterion used to retain/release cached data. Type: string; Possible Values: LRU, LOW; Default: LRU. MP2_OS_SCALE¶. The scale factor used for opposite-spin pairs in SCS computations. Type: double; Default: 6.0/5.0. MP2_SS_SCALE¶. The scale factor used for same-spin pairs in SCS computations. Type: double; Default: 1.0/3.0. OPDM¶. Do compute the one particle density matrix, for properties?. Type: boolean; Default: false. OPDM_RELAX¶. Do add relaxation terms to the one particle density matrix, for properties?. Type: boolean; Default: false. REFERENCE¶. Reference wavefunction type. Type: string; Possible Values: RHF, UHF, ROHF; Default: RHF. SCS¶. Do perform a spin component scaled MP2 computation?. Type: boolean; Default: false. SCS_N¶. Do perform a spin component scaled (N) MP2 computation?. Type: boolean; Default: false. Expert¶. JOBTYPE¶. Type of job being performed. Type: string; Default: SP. WFN¶. Wavefunction type. Type: string; Possible Values: MP2; Default: MP2. Table Of Contents. MP2; General; CACHELEVEL; CACHETYPE; MP2_OS_SCALE; MP2_SS_SCALE; OPDM; OPDM_RELAX; REFERENCE; SCS; SCS_N. Expert; JOBTYPE; WFN. Previous topic; BASIS; Next topic; CACHELEVEL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__mp2-1.html:433,efficient,efficient,433,psi4manual/4.0b2/autodir_options_c/module__mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__mp2-1.html,4,['efficient'],['efficient']
Energy Efficiency,"﻿. MP2 — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». MP2¶; Performs second order Moller-Plesset perturbation theory (MP2) computations. This code can compute RHF/ROHF/UHF energies, and RHF gradient/property computations. However, given the small errors introduced, we recommend using the new density fitted MP2 codes instead, which are much more efficient. CURRENT CORRELATION ENERGY; CURRENT ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 OPPOSITE-SPIN CORRELATION ENERGY; SCS-MP2 SAME-SPIN CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY. Previous topic; MCSCF; Next topic; OMP2; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__mp2-1.html:438,efficient,efficient,438,psi4manual/4.0b2/autodir_psivariables/module__mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__mp2-1.html,24,"['ENERGY', 'efficient']","['ENERGY', 'efficient']"
Energy Efficiency,"﻿. MP2 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». MP2¶; Performs second order Moller-Plesset perturbation theory (MP2) computations. This code can compute RHF/ROHF/UHF energies, and RHF gradient/property computations. However, given the small errors introduced, we recommend using the new density fitted MP2 codes instead, which are much more efficient. General¶. CACHELEVEL¶. The amount of cacheing of data to perform. Type: integer; Default: 2. CACHETYPE¶. The criterion used to retain/release cached data. Type: string; Possible Values: LRU, LOW; Default: LRU. MP2_OS_SCALE¶. The scale factor used for opposite-spin pairs in SCS computations. Type: double; Default: 6.0/5.0. MP2_SS_SCALE¶. The scale factor used for same-spin pairs in SCS computations. Type: double; Default: 1.0/3.0. MP2_TYPE¶. What algorithm to use for the MP2 computation. Type: string; Possible Values: DF, CONV; Default: DF. OPDM¶. Do compute the one particle density matrix, for properties?. Type: boolean; Default: false. OPDM_RELAX¶. Do add relaxation terms to the one particle density matrix, for properties?. Type: boolean; Default: false. REFERENCE¶. Reference wavefunction type. Type: string; Possible Values: RHF, UHF, ROHF; Default: RHF. SCS¶. Do perform a spin component scaled MP2 computation?. Type: boolean; Default: false. SCS_N¶. Do perform a spin component scaled (N) MP2 computation?. Type: boolean; Default: false. Expert¶. JOBTYPE¶. Type of job being performed. Type: string; Default: SP. WFN¶. Wavefunction type. Type: string; Possible Values: MP2; Default: MP2. Table Of Contents. MP2; General; CACHELEVEL; CACHETYPE; MP2_OS_SCALE; MP2_SS_SCALE; MP2_TYPE; OPDM; OPDM_RELAX; REFERENCE; SCS; SCS_N. Expert; JOBTYPE; WFN. Previous topic; OMEGA_ERF; Next topic; CACHELEVEL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . t",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__mp2-1.html:448,efficient,efficient,448,psi4manual/4.0b3/autodir_options_c/module__mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__mp2-1.html,4,['efficient'],['efficient']
Energy Efficiency,"﻿. MP2 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». MP2¶; Performs second order Moller-Plesset perturbation theory (MP2) computations. This code can compute RHF/ROHF/UHF energies, and RHF gradient/property computations. However, given the small errors introduced, we recommend using the new density fitted MP2 codes instead, which are much more efficient. CURRENT CORRELATION ENERGY; CURRENT ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 OPPOSITE-SPIN CORRELATION ENERGY; SCS-MP2 SAME-SPIN CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY. Previous topic; MCSCF; Next topic; MRCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 21, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__mp2-1.html:453,efficient,efficient,453,psi4manual/4.0b3/autodir_psivariables/module__mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__mp2-1.html,24,"['ENERGY', 'efficient']","['ENERGY', 'efficient']"
Energy Efficiency,"﻿. MP3L_ENERGY — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». MP3L_ENERGY¶. Do compute mp3l energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE COMPUTE” option. Type: boolean; Default: false. Previous topic; MP2_SS_SCALE; Next topic; NAT_ORBS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; OMP3 ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__mp3l_energy-1.html:201,energy,energy,201,psi4manual/4.0b3/autodir_options_c/omp3__mp3l_energy-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/omp3__mp3l_energy-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MPN_ORDER_SAVE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». MPN_ORDER_SAVE¶. If 0, save the MPn energy; if 1, save the MP(2n-1) energy (if available from MPN_WIGNER = true); if 2, save the MP(2n-2) energy (if available from MPN_WIGNER = true). Type: integer; Default: 0. Previous topic; MPN; Next topic; MPN_SCHMIDT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__mpn_order_save-1.html:196,energy,energy,196,psi4manual/4.0b2/autodir_options_c/detci__mpn_order_save-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__mpn_order_save-1.html,12,['energy'],['energy']
Energy Efficiency,"﻿. MPN_ORDER_SAVE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». MPN_ORDER_SAVE¶. If 0, save the MPn energy; if 1, save the MP(2n-1) energy (if available from MPN_WIGNER = true); if 2, save the MP(2n-2) energy (if available from MPN_WIGNER = true). Type: integer; Default: 0. Previous topic; MPN; Next topic; MPN_SCHMIDT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__mpn_order_save-1.html:211,energy,energy,211,psi4manual/4.0b3/autodir_options_c/detci__mpn_order_save-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__mpn_order_save-1.html,12,['energy'],['energy']
Energy Efficiency,"﻿. MPN_ORDER_SAVE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». MPN_ORDER_SAVE¶. If 0, save the MPn energy; if 1, save the MP(2n-1) energy (if available from MPN_WIGNER = true); if 2, save the MP(2n-2) energy (if available from MPN_WIGNER = true). Type: integer; Default: 0. Previous topic; MPN; Next topic; MPN_SCHMIDT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__mpn_order_save-1.html:211,energy,energy,211,psi4manual/4.0b4/autodir_options_c/detci__mpn_order_save-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__mpn_order_save-1.html,12,['energy'],['energy']
Energy Efficiency,"﻿. MPN_ORDER_SAVE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». MPN_ORDER_SAVE¶. If 0, save the MPn energy; if 1, save the MP(2n-1) energy (if available from MPN_WIGNER = true); if 2, save the MP(2n-2) energy (if available from MPN_WIGNER = true). Type: integer; Default: 0. Previous topic; MPN; Next topic; MPN_SCHMIDT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__mpn_order_save-1.html:211,energy,energy,211,psi4manual/4.0b5/autodir_options_c/detci__mpn_order_save-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__mpn_order_save-1.html,12,['energy'],['energy']
Energy Efficiency,"﻿. MPN_ORDER_SAVE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». MPN_ORDER_SAVE¶. If 0, save the MPn energy; if 1, save the MP(2n-1) energy (if available from MPN_WIGNER = true); if 2, save the MP(2n-2) energy (if available from MPN_WIGNER = true). Type: integer; Default: 0. Previous topic; MPN; Next topic; MPN_SCHMIDT. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__mpn_order_save-1.html:218,energy,energy,218,psi4manual/1.0.0/autodir_options_c/detci__mpn_order_save-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__mpn_order_save-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. MPN_ORDER_SAVE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; MPN_ORDER_SAVE. MPN_ORDER_SAVE¶. If 0, save the MPn energy; if 1, save the MP(2n-1) energy (if available from MPN_WIGNER = true); if 2, save the MP(2n-2) energy (if available from MPN_WIGNER = true). Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; MPN_ORDER_SAVE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/detci__mpn_order_save.html:187,energy,energy,187,psi4manual/master/autodir_options_c/detci__mpn_order_save.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/detci__mpn_order_save.html,6,['energy'],['energy']
Energy Efficiency,"﻿. MPN_ORDER_SAVE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; MPN_ORDER_SAVE. MPN_ORDER_SAVE¶. If 0, save the MPn energy; if 1, save the MP(2n-1) energy (if available from MPN_WIGNER = true); if 2, save the MP(2n-2) energy (if available from MPN_WIGNER = true). Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; MPN_ORDER_SAVE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__mpn_order_save-1.html:178,energy,energy,178,psi4manual/1.4.0/autodir_options_c/detci__mpn_order_save-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__mpn_order_save-1.html,12,['energy'],['energy']
Energy Efficiency,"﻿. MPN_ORDER_SAVE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; MPN_ORDER_SAVE. MPN_ORDER_SAVE¶. If 0, save the MPn energy; if 1, save the MP(2n-1) energy (if available from MPN_WIGNER = true); if 2, save the MP(2n-2) energy (if available from MPN_WIGNER = true). Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; MPN_ORDER_SAVE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__mpn_order_save-1.html:178,energy,energy,178,psi4manual/1.5.0/autodir_options_c/detci__mpn_order_save-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__mpn_order_save-1.html,12,['energy'],['energy']
Energy Efficiency,"﻿. MPN_ORDER_SAVE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; MPN_ORDER_SAVE. MPN_ORDER_SAVE¶. If 0, save the MPn energy; if 1, save the MP(2n-1) energy (if available from MPN_WIGNER = true); if 2, save the MP(2n-2) energy (if available from MPN_WIGNER = true). Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; MPN_ORDER_SAVE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__mpn_order_save.html:178,energy,energy,178,psi4manual/1.6.x/autodir_options_c/detci__mpn_order_save.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__mpn_order_save.html,6,['energy'],['energy']
Energy Efficiency,"﻿. MPN_ORDER_SAVE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; MPN_ORDER_SAVE. MPN_ORDER_SAVE¶. If 0, save the MPn energy; if 1, save the MP(2n-1) energy (if available from MPN_WIGNER = true); if 2, save the MP(2n-2) energy (if available from MPN_WIGNER = true). Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; MPN_ORDER_SAVE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__mpn_order_save.html:178,energy,energy,178,psi4manual/1.7.x/autodir_options_c/detci__mpn_order_save.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__mpn_order_save.html,6,['energy'],['energy']
Energy Efficiency,"﻿. MPN_ORDER_SAVE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; MPN_ORDER_SAVE. MPN_ORDER_SAVE¶. If 0, save the MPn energy; if 1, save the MP(2n-1) energy (if available from MPN_WIGNER = true); if 2, save the MP(2n-2) energy (if available from MPN_WIGNER = true). Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; MPN_ORDER_SAVE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__mpn_order_save.html:180,energy,energy,180,psi4manual/1.8.x/autodir_options_c/detci__mpn_order_save.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__mpn_order_save.html,6,['energy'],['energy']
Energy Efficiency,"﻿. MPN_ORDER_SAVE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; MPN_ORDER_SAVE. MPN_ORDER_SAVE¶. If 0, save the MPn energy; if 1, save the MP(2n-1) energy (if available from MPN_WIGNER = true); if 2, save the MP(2n-2) energy (if available from MPN_WIGNER = true). Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; MPN_ORDER_SAVE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__mpn_order_save.html:180,energy,energy,180,psi4manual/1.9.x/autodir_options_c/detci__mpn_order_save.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__mpn_order_save.html,6,['energy'],['energy']
Energy Efficiency,"﻿. MRCC — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». MRCC¶; Interface to MRCC program written by Mihály Kállay. CC(n-1)(n) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC2 CORRELATION ENERGY; CC2 TOTAL ENERGY; CC3 CORRELATION ENERGY; CC3 TOTAL ENERGY; CC4 CORRELATION ENERGY; CC4 TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSD(T)_L TOTAL ENERGY; CCSDT CORRELATION ENERGY; CCSDT TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDT-1a TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDT-1b TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDT-3 TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCn CORRELATION ENERGY; CCn TOTAL ENERGY; CCn-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCnn CORRELATION ENERGY; CCnn TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 TOTAL ENERGY. Previous topic; MP2; Next topic; OMP2; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 21, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__mrcc-1.html:243,ENERGY,ENERGY,243,psi4manual/4.0b3/autodir_psivariables/module__mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__mrcc-1.html,96,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MRCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». MRCC¶; Interface to MRCC program written by Mihály Kállay. General¶. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-8. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. Type: conv double; Default: 1.0e-12. MRCC_LEVEL¶. Maximum excitation level. This is used ONLY if it is explicity set by the user. Single-reference case: all excitations up to this level are included, e.g., 2 for CCSD, 3 for CCSDT, 4 for CCSDTQ, etc. This becomes ex.lev (option #1) in fort.56. Type: integer; Default: 2. MRCC_NUM_SINGLET_ROOTS¶. Number of singlet roots. (Strictly speaking number of of roots with M_s=0 and S is even.) Use this option only with closed shell reference determinant, it must be zero otherwise. This becomes nsing (option #2) in fort.56. Type: integer; Default: 1. MRCC_NUM_TRIPLET_ROOTS¶. Number of triplet roots. (Strictly speaking number of of roots with and S is odd.) See notes at option MRCC_NUM_SINGLET_ROOTS This becomes ntrip (option #3) in fort.56. Type: integer; Default: 0. Expert¶. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56 .. table:: MRCC methods +——-+————–+————————————————————-+ + Value + Method + Description + +=======+==============+=============================================================+ + 1 + CC + + +——-+————–+————————————————————-+ + 2 + CC(n-1)[n] + + +——-+————–+————————————————————-+ + 3 + CC(n-1)(n) + (CC(n-1)[n] energy is also calculated) + +——-+————–+————————————————————-+ + 4 + CC(",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__mrcc-1.html:267,energy,energy,267,psi4manual/4.0b4/autodir_options_c/module__mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__mrcc-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». MRCC¶; Interface to MRCC program written by Mihály Kállay. CC(n-1)(n) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC2 CORRELATION ENERGY; CC2 TOTAL ENERGY; CC3 CORRELATION ENERGY; CC3 TOTAL ENERGY; CC4 CORRELATION ENERGY; CC4 TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSD(T)_L TOTAL ENERGY; CCSDT CORRELATION ENERGY; CCSDT TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDT-1a TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDT-1b TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDT-3 TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCn CORRELATION ENERGY; CCn TOTAL ENERGY; CCn-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCnn CORRELATION ENERGY; CCnn TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 TOTAL ENERGY. Previous topic; MCSCF; Next topic; OCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 29, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__mrcc-1.html:243,ENERGY,ENERGY,243,psi4manual/4.0b4/autodir_psivariables/module__mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__mrcc-1.html,96,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MRCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». MRCC¶; Interface to MRCC program written by Mihály Kállay. General¶. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. Type: conv double; Default: 1.0e-12. MRCC_LEVEL¶. Maximum excitation level. This is used ONLY if it is explicity set by the user. Single-reference case: all excitations up to this level are included, e.g., 2 for CCSD, 3 for CCSDT, 4 for CCSDTQ, etc. This becomes ex.lev (option #1) in fort.56. Type: integer; Default: 2. MRCC_NUM_DOUBLET_ROOTS¶. Number of root in case of open shell system. This becomes ndoub (option #13) int fort.56. Type: integer; Default: 0. MRCC_NUM_SINGLET_ROOTS¶. Number of singlet roots. (Strictly speaking number of of roots with M_s=0 and S is even.) Use this option only with closed shell reference determinant, it must be zero otherwise. This becomes nsing (option #2) in fort.56. Type: integer; Default: 1. MRCC_NUM_TRIPLET_ROOTS¶. Number of triplet roots. (Strictly speaking number of of roots with and S is odd.) See notes at option MRCC_NUM_SINGLET_ROOTS This becomes ntrip (option #3) in fort.56. Type: integer; Default: 0. Expert¶. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56 .. table:: MRCC methods +——-+————–+————————————————————-+ + Value + Method + Description + +=======+==============+=============================================================+ + 1 + CC + + +——-+————–+————————————————————-+ + 2 + CC(n-1)[n]",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__mrcc-1.html:267,energy,energy,267,psi4manual/4.0b5/autodir_options_c/module__mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__mrcc-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». MRCC¶; Interface to MRCC program written by Mihály Kállay. CC(n-1)(n) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC2 CORRELATION ENERGY; CC2 TOTAL ENERGY; CC3 CORRELATION ENERGY; CC3 TOTAL ENERGY; CC4 CORRELATION ENERGY; CC4 TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSD(T)_L TOTAL ENERGY; CCSDT CORRELATION ENERGY; CCSDT TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDT-1a TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDT-1b TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDT-3 TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCn CORRELATION ENERGY; CCn TOTAL ENERGY; CCn-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCnn CORRELATION ENERGY; CCnn TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 TOTAL ENERGY. Previous topic; MCSCF; Next topic; OCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__mrcc-1.html:243,ENERGY,ENERGY,243,psi4manual/4.0b5/autodir_psivariables/module__mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__mrcc-1.html,96,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MRCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». MRCC¶; Interface to MRCC program written by Mihály Kállay. General¶. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. Type: conv double; Default: 1.0e-12. MRCC_LEVEL¶. Maximum excitation level. This is used ONLY if it is explicity set by the user. Single-reference case: all excitations up to this level are included, e.g., 2 for CCSD, 3 for CCSDT, 4 for CCSDTQ, etc. This becomes ex.lev (option #1) in fort.56. Type: integer; Default: 2. MRCC_NUM_DOUBLET_ROOTS¶. Number of root in case of open shell system. This becomes ndoub (option #13) int fort.56. Type: integer; Default: 0. MRCC_NUM_SINGLET_ROOTS¶. Number of singlet roots. (Strictly speaking number of of roots with M_s=0 and S is even.) Use this option only with closed shell reference determinant, it must be zero otherwise. This becomes nsing (option #2) in fort.56. Type: integer; Default: 1. MRCC_NUM_TRIPLET_ROOTS¶. Number of triplet roots. (Strictly speaking number of of roots with and S is odd.) See notes at option MRCC_NUM_SINGLET_ROOTS This becomes ntrip (option #3) in fort.56. Type: integer; Default: 0. Expert¶. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. MRCC_OMP_NUM_THREADS¶. Sets the OMP_NUM_THREADS environment variable before calling MRCC. If the environment variable OMP_NUM_THREADS is set prior to calling Psi4 then tha",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__mrcc-1.html:274,energy,energy,274,psi4manual/1.0.0/autodir_options_c/module__mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__mrcc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Test Suite and Sample Inputs ». MRCC¶. Input File; Description. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. Previous topic; DFTD3; Next topic; CFOUR. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Test Suite and Sample Inputs ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodoc_testsuite_mrcc-1.html:316,energy,energy,316,psi4manual/1.0.0/autodoc_testsuite_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodoc_testsuite_mrcc-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; MRCC. MRCC¶; Interface to MRCC program written by Mihály Kállay. General¶. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. INTS_TOLERANCE¶. Schwarz screening threshold. Mininum absolute value below which TEI are neglected. Type: conv double; Default: 1.0e-12. MRCC_LEVEL¶. Maximum excitation level. This is used ONLY if it is explicitly set by the user. Single-reference case: all excitations up to this level are included, e.g., 2 for CCSD, 3 for CCSDT, 4 for CCSDTQ, etc. This becomes ex.lev (option #1) in fort.56. Type: integer; Default: 2. MRCC_NUM_DOUBLET_ROOTS¶. Number of root in case of open shell system. This becomes ndoub (option #13) int fort.56. Type: integer; Default: 0. MRCC_NUM_SINGLET_ROOTS¶. Number of singlet roots. (Strictly speaking number of of roots with M_s=0 and S is even.) Use this option only with closed shell reference determinant, it must be zero otherwise. This becomes nsing (option #2) in fort.56. Type: integer; Default: 1. MRCC_NUM_TRIPLET_ROOTS¶. Number of triplet roots. (Strictly speaking number of of roots with \(M_s=0\) and S is odd.) See notes at option MRCC_NUM_SINGLET_ROOTS This becomes ntrip (option #3) in fort.56. Type: integer; Default: 0. Expert¶. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. MRCC_OMP_NUM_THREADS¶. Sets the OMP_NUM_THREADS environment variable before calling MRCC. If the environment variable OMP_NUM_THREADS is set prior to calling Psi4 then that val",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__mrcc.html:235,energy,energy,235,psi4manual/master/autodir_options_c/module__mrcc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__mrcc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; MRCC. MRCC¶; Interface to MRCC program written by Mihály Kállay. CC(n-1)(n) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC2 CORRELATION ENERGY; CC2 TOTAL ENERGY; CC3 CORRELATION ENERGY; CC3 TOTAL ENERGY; CC4 CORRELATION ENERGY; CC4 TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSD(T)_L TOTAL ENERGY; CCSDT CORRELATION ENERGY; CCSDT TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q)/A CORRELATION ENERGY; CCSDT(Q)/A TOTAL ENERGY; CCSDT(Q)/B CORRELATION ENERGY; CCSDT(Q)/B TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDT-1a TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDT-1b TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDT-3 TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCn CORRELATION ENERGY; CCn TOTAL ENERGY; CCn-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCnn CORRELATION ENERGY; CCnn TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; MRCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_psivariables/module__mrcc.html:211,ENERGY,ENERGY,211,psi4manual/master/autodir_psivariables/module__mrcc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_psivariables/module__mrcc.html,52,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. MRCC¶. Input File; Description. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodoc_testsuite_mrcc.html:373,energy,energy,373,psi4manual/master/autodoc_testsuite_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodoc_testsuite_mrcc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. MRCC¶; Interface to MRCC program written by Mihály Kállay. General¶. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. Type: conv double; Default: 1.0e-12. MRCC_LEVEL¶. Maximum excitation level. This is used ONLY if it is explicitly set by the user. Single-reference case: all excitations up to this level are included, e.g., 2 for CCSD, 3 for CCSDT, 4 for CCSDTQ, etc. This becomes ex.lev (option #1) in fort.56. Type: integer; Default: 2. MRCC_NUM_DOUBLET_ROOTS¶. Number of root in case of open shell system. This becomes ndoub (option #13) int fort.56. Type: integer; Default: 0. MRCC_NUM_SINGLET_ROOTS¶. Number of singlet roots. (Strictly speaking number of of roots with M_s=0 and S is even.) Use this option only with closed shell reference determinant, it must be zero otherwise. This becomes nsing (option #2) in fort.56. Type: integer; Default: 1. MRCC_NUM_TRIPLET_ROOTS¶. Number of triplet roots. (Strictly speaking number of of roots with \(M_s=0\) and S is odd.) See notes at option MRCC_NUM_SINGLET_ROOTS This becomes ntrip (option #3) in fort.56. Type: integer; Default: 0. Expert¶. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. MRCC_OMP_NUM_THREADS¶. Sets the OMP_NUM_THREADS environment variable before calling MRCC. If the environment variable OMP_NUM_THREADS is set prior to calling Psi4 then that value is used. When set, this option over",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__mrcc-1.html:220,energy,energy,220,psi4manual/1.1.0/autodir_options_c/module__mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__mrcc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. MRCC¶. Input File; Description. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodoc_testsuite_mrcc-1.html:273,energy,energy,273,psi4manual/1.1.0/autodoc_testsuite_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodoc_testsuite_mrcc-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. MRCC¶; Interface to MRCC program written by Mihály Kállay. General¶. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. INTS_TOLERANCE¶. Minimum absolute value below which integrals are neglected. Type: conv double; Default: 1.0e-12. MRCC_LEVEL¶. Maximum excitation level. This is used ONLY if it is explicitly set by the user. Single-reference case: all excitations up to this level are included, e.g., 2 for CCSD, 3 for CCSDT, 4 for CCSDTQ, etc. This becomes ex.lev (option #1) in fort.56. Type: integer; Default: 2. MRCC_NUM_DOUBLET_ROOTS¶. Number of root in case of open shell system. This becomes ndoub (option #13) int fort.56. Type: integer; Default: 0. MRCC_NUM_SINGLET_ROOTS¶. Number of singlet roots. (Strictly speaking number of of roots with M_s=0 and S is even.) Use this option only with closed shell reference determinant, it must be zero otherwise. This becomes nsing (option #2) in fort.56. Type: integer; Default: 1. MRCC_NUM_TRIPLET_ROOTS¶. Number of triplet roots. (Strictly speaking number of of roots with \(M_s=0\) and S is odd.) See notes at option MRCC_NUM_SINGLET_ROOTS This becomes ntrip (option #3) in fort.56. Type: integer; Default: 0. Expert¶. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. MRCC_OMP_NUM_THREADS¶. Sets the OMP_NUM_THREADS environment variable before calling MRCC. If the environment variable OMP_NUM_THREADS is set prior to calling Psi4 then that value is used. When set, this option ov",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__mrcc-1.html:222,energy,energy,222,psi4manual/1.2.1/autodir_options_c/module__mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__mrcc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. MRCC¶. Input File; Description. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_mrcc-1.html:275,energy,energy,275,psi4manual/1.2.1/autodoc_testsuite_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_mrcc-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. MRCC¶; Interface to MRCC program written by Mihály Kállay. General¶. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. INTS_TOLERANCE¶. Schwarz screening threshold. Mininum absolute value below which TEI are neglected. Type: conv double; Default: 1.0e-12. MRCC_LEVEL¶. Maximum excitation level. This is used ONLY if it is explicitly set by the user. Single-reference case: all excitations up to this level are included, e.g., 2 for CCSD, 3 for CCSDT, 4 for CCSDTQ, etc. This becomes ex.lev (option #1) in fort.56. Type: integer; Default: 2. MRCC_NUM_DOUBLET_ROOTS¶. Number of root in case of open shell system. This becomes ndoub (option #13) int fort.56. Type: integer; Default: 0. MRCC_NUM_SINGLET_ROOTS¶. Number of singlet roots. (Strictly speaking number of of roots with M_s=0 and S is even.) Use this option only with closed shell reference determinant, it must be zero otherwise. This becomes nsing (option #2) in fort.56. Type: integer; Default: 1. MRCC_NUM_TRIPLET_ROOTS¶. Number of triplet roots. (Strictly speaking number of of roots with \(M_s=0\) and S is odd.) See notes at option MRCC_NUM_SINGLET_ROOTS This becomes ntrip (option #3) in fort.56. Type: integer; Default: 0. Expert¶. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. MRCC_OMP_NUM_THREADS¶. Sets the OMP_NUM_THREADS environment variable before calling MRCC. If the environment variable OMP_NUM_THREADS is set prior to calling Psi4 then that value is used. W",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__mrcc-1.html:222,energy,energy,222,psi4manual/1.3.2/autodir_options_c/module__mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__mrcc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. MRCC¶. Input File; Description. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_mrcc-1.html:275,energy,energy,275,psi4manual/1.3.2/autodoc_testsuite_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_mrcc-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; MRCC. MRCC¶; Interface to MRCC program written by Mihály Kállay. General¶. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. INTS_TOLERANCE¶. Schwarz screening threshold. Mininum absolute value below which TEI are neglected. Type: conv double; Default: 1.0e-12. MRCC_LEVEL¶. Maximum excitation level. This is used ONLY if it is explicitly set by the user. Single-reference case: all excitations up to this level are included, e.g., 2 for CCSD, 3 for CCSDT, 4 for CCSDTQ, etc. This becomes ex.lev (option #1) in fort.56. Type: integer; Default: 2. MRCC_NUM_DOUBLET_ROOTS¶. Number of root in case of open shell system. This becomes ndoub (option #13) int fort.56. Type: integer; Default: 0. MRCC_NUM_SINGLET_ROOTS¶. Number of singlet roots. (Strictly speaking number of of roots with M_s=0 and S is even.) Use this option only with closed shell reference determinant, it must be zero otherwise. This becomes nsing (option #2) in fort.56. Type: integer; Default: 1. MRCC_NUM_TRIPLET_ROOTS¶. Number of triplet roots. (Strictly speaking number of of roots with \(M_s=0\) and S is odd.) See notes at option MRCC_NUM_SINGLET_ROOTS This becomes ntrip (option #3) in fort.56. Type: integer; Default: 0. Expert¶. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. MRCC_OMP_NUM_THREADS¶. Sets the OMP_NUM_THREADS environment variable before calling MRCC. If the environment variable OMP_NUM_THREADS is set prior to calling Psi4 then that value is use",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__mrcc-1.html:226,energy,energy,226,psi4manual/1.4.0/autodir_options_c/module__mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__mrcc-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; MRCC. MRCC¶; Interface to MRCC program written by Mihály Kállay. CC(n-1)(n) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC2 CORRELATION ENERGY; CC2 TOTAL ENERGY; CC3 CORRELATION ENERGY; CC3 TOTAL ENERGY; CC4 CORRELATION ENERGY; CC4 TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSD(T)_L TOTAL ENERGY; CCSDT CORRELATION ENERGY; CCSDT TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q)/A CORRELATION ENERGY; CCSDT(Q)/A TOTAL ENERGY; CCSDT(Q)/B CORRELATION ENERGY; CCSDT(Q)/B TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDT-1a TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDT-1b TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDT-3 TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCn CORRELATION ENERGY; CCn TOTAL ENERGY; CCn-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCnn CORRELATION ENERGY; CCnn TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; MRCC. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__mrcc-1.html:202,ENERGY,ENERGY,202,psi4manual/1.4.0/autodir_psivariables/module__mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__mrcc-1.html,104,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. MRCC¶. Input File; Description. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_mrcc-1.html:189,energy,energy,189,psi4manual/1.4.0/autodoc_testsuite_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_mrcc-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; MRCC. MRCC¶; Interface to MRCC program written by Mihály Kállay. General¶. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. INTS_TOLERANCE¶. Schwarz screening threshold. Mininum absolute value below which TEI are neglected. Type: conv double; Default: 1.0e-12. MRCC_LEVEL¶. Maximum excitation level. This is used ONLY if it is explicitly set by the user. Single-reference case: all excitations up to this level are included, e.g., 2 for CCSD, 3 for CCSDT, 4 for CCSDTQ, etc. This becomes ex.lev (option #1) in fort.56. Type: integer; Default: 2. MRCC_NUM_DOUBLET_ROOTS¶. Number of root in case of open shell system. This becomes ndoub (option #13) int fort.56. Type: integer; Default: 0. MRCC_NUM_SINGLET_ROOTS¶. Number of singlet roots. (Strictly speaking number of of roots with M_s=0 and S is even.) Use this option only with closed shell reference determinant, it must be zero otherwise. This becomes nsing (option #2) in fort.56. Type: integer; Default: 1. MRCC_NUM_TRIPLET_ROOTS¶. Number of triplet roots. (Strictly speaking number of of roots with \(M_s=0\) and S is odd.) See notes at option MRCC_NUM_SINGLET_ROOTS This becomes ntrip (option #3) in fort.56. Type: integer; Default: 0. Expert¶. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. MRCC_OMP_NUM_THREADS¶. Sets the OMP_NUM_THREADS environment variable before calling MRCC. If the environment variable OMP_NUM_THREADS is set prior to calling Psi4 then that value is use",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__mrcc-1.html:226,energy,energy,226,psi4manual/1.5.0/autodir_options_c/module__mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__mrcc-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; MRCC. MRCC¶; Interface to MRCC program written by Mihály Kállay. CC(n-1)(n) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC2 CORRELATION ENERGY; CC2 TOTAL ENERGY; CC3 CORRELATION ENERGY; CC3 TOTAL ENERGY; CC4 CORRELATION ENERGY; CC4 TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSD(T)_L TOTAL ENERGY; CCSDT CORRELATION ENERGY; CCSDT TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q)/A CORRELATION ENERGY; CCSDT(Q)/A TOTAL ENERGY; CCSDT(Q)/B CORRELATION ENERGY; CCSDT(Q)/B TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDT-1a TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDT-1b TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDT-3 TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCn CORRELATION ENERGY; CCn TOTAL ENERGY; CCn-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCnn CORRELATION ENERGY; CCnn TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; MRCC. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__mrcc-1.html:202,ENERGY,ENERGY,202,psi4manual/1.5.0/autodir_psivariables/module__mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__mrcc-1.html,104,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. MRCC¶. Input File; Description. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_mrcc-1.html:183,energy,energy,183,psi4manual/1.5.0/autodoc_testsuite_mrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_mrcc-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; MRCC. MRCC¶; Interface to MRCC program written by Mihály Kállay. General¶. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. INTS_TOLERANCE¶. Schwarz screening threshold. Mininum absolute value below which TEI are neglected. Type: conv double; Default: 1.0e-12. MRCC_LEVEL¶. Maximum excitation level. This is used ONLY if it is explicitly set by the user. Single-reference case: all excitations up to this level are included, e.g., 2 for CCSD, 3 for CCSDT, 4 for CCSDTQ, etc. This becomes ex.lev (option #1) in fort.56. Type: integer; Default: 2. MRCC_NUM_DOUBLET_ROOTS¶. Number of root in case of open shell system. This becomes ndoub (option #13) int fort.56. Type: integer; Default: 0. MRCC_NUM_SINGLET_ROOTS¶. Number of singlet roots. (Strictly speaking number of of roots with M_s=0 and S is even.) Use this option only with closed shell reference determinant, it must be zero otherwise. This becomes nsing (option #2) in fort.56. Type: integer; Default: 1. MRCC_NUM_TRIPLET_ROOTS¶. Number of triplet roots. (Strictly speaking number of of roots with \(M_s=0\) and S is odd.) See notes at option MRCC_NUM_SINGLET_ROOTS This becomes ntrip (option #3) in fort.56. Type: integer; Default: 0. Expert¶. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. MRCC_OMP_NUM_THREADS¶. Sets the OMP_NUM_THREADS environment variable before calling MRCC. If the environment variable OMP_NUM_THREADS is set prior to calling Psi4 then that value is use",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__mrcc.html:226,energy,energy,226,psi4manual/1.6.x/autodir_options_c/module__mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__mrcc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; MRCC. MRCC¶; Interface to MRCC program written by Mihály Kállay. CC(n-1)(n) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC2 CORRELATION ENERGY; CC2 TOTAL ENERGY; CC3 CORRELATION ENERGY; CC3 TOTAL ENERGY; CC4 CORRELATION ENERGY; CC4 TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSD(T)_L TOTAL ENERGY; CCSDT CORRELATION ENERGY; CCSDT TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q)/A CORRELATION ENERGY; CCSDT(Q)/A TOTAL ENERGY; CCSDT(Q)/B CORRELATION ENERGY; CCSDT(Q)/B TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDT-1a TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDT-1b TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDT-3 TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCn CORRELATION ENERGY; CCn TOTAL ENERGY; CCn-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCnn CORRELATION ENERGY; CCnn TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; MRCC. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__mrcc.html:202,ENERGY,ENERGY,202,psi4manual/1.6.x/autodir_psivariables/module__mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__mrcc.html,52,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. MRCC¶. Input File; Description. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_mrcc.html:183,energy,energy,183,psi4manual/1.6.x/autodoc_testsuite_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_mrcc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; MRCC. MRCC¶; Interface to MRCC program written by Mihály Kállay. General¶. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. INTS_TOLERANCE¶. Schwarz screening threshold. Mininum absolute value below which TEI are neglected. Type: conv double; Default: 1.0e-12. MRCC_LEVEL¶. Maximum excitation level. This is used ONLY if it is explicitly set by the user. Single-reference case: all excitations up to this level are included, e.g., 2 for CCSD, 3 for CCSDT, 4 for CCSDTQ, etc. This becomes ex.lev (option #1) in fort.56. Type: integer; Default: 2. MRCC_NUM_DOUBLET_ROOTS¶. Number of root in case of open shell system. This becomes ndoub (option #13) int fort.56. Type: integer; Default: 0. MRCC_NUM_SINGLET_ROOTS¶. Number of singlet roots. (Strictly speaking number of of roots with M_s=0 and S is even.) Use this option only with closed shell reference determinant, it must be zero otherwise. This becomes nsing (option #2) in fort.56. Type: integer; Default: 1. MRCC_NUM_TRIPLET_ROOTS¶. Number of triplet roots. (Strictly speaking number of of roots with \(M_s=0\) and S is odd.) See notes at option MRCC_NUM_SINGLET_ROOTS This becomes ntrip (option #3) in fort.56. Type: integer; Default: 0. Expert¶. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. MRCC_OMP_NUM_THREADS¶. Sets the OMP_NUM_THREADS environment variable before calling MRCC. If the environment variable OMP_NUM_THREADS is set prior to calling Psi4 then that value is use",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__mrcc.html:226,energy,energy,226,psi4manual/1.7.x/autodir_options_c/module__mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__mrcc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; MRCC. MRCC¶; Interface to MRCC program written by Mihály Kállay. CC(n-1)(n) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC2 CORRELATION ENERGY; CC2 TOTAL ENERGY; CC3 CORRELATION ENERGY; CC3 TOTAL ENERGY; CC4 CORRELATION ENERGY; CC4 TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSD(T)_L TOTAL ENERGY; CCSDT CORRELATION ENERGY; CCSDT TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q)/A CORRELATION ENERGY; CCSDT(Q)/A TOTAL ENERGY; CCSDT(Q)/B CORRELATION ENERGY; CCSDT(Q)/B TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDT-1a TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDT-1b TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDT-3 TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCn CORRELATION ENERGY; CCn TOTAL ENERGY; CCn-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCnn CORRELATION ENERGY; CCnn TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; MRCC. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__mrcc.html:202,ENERGY,ENERGY,202,psi4manual/1.7.x/autodir_psivariables/module__mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__mrcc.html,52,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. MRCC¶. Input File; Description. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_mrcc.html:183,energy,energy,183,psi4manual/1.7.x/autodoc_testsuite_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_mrcc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; MRCC. MRCC¶; Interface to MRCC program written by Mihály Kállay. General¶. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. INTS_TOLERANCE¶. Schwarz screening threshold. Mininum absolute value below which TEI are neglected. Type: conv double; Default: 1.0e-12. MRCC_LEVEL¶. Maximum excitation level. This is used ONLY if it is explicitly set by the user. Single-reference case: all excitations up to this level are included, e.g., 2 for CCSD, 3 for CCSDT, 4 for CCSDTQ, etc. This becomes ex.lev (option #1) in fort.56. Type: integer; Default: 2. MRCC_NUM_DOUBLET_ROOTS¶. Number of root in case of open shell system. This becomes ndoub (option #13) int fort.56. Type: integer; Default: 0. MRCC_NUM_SINGLET_ROOTS¶. Number of singlet roots. (Strictly speaking number of of roots with M_s=0 and S is even.) Use this option only with closed shell reference determinant, it must be zero otherwise. This becomes nsing (option #2) in fort.56. Type: integer; Default: 1. MRCC_NUM_TRIPLET_ROOTS¶. Number of triplet roots. (Strictly speaking number of of roots with \(M_s=0\) and S is odd.) See notes at option MRCC_NUM_SINGLET_ROOTS This becomes ntrip (option #3) in fort.56. Type: integer; Default: 0. Expert¶. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. MRCC_OMP_NUM_THREADS¶. Sets the OMP_NUM_THREADS environment variable before calling MRCC. If the environment variable OMP_NUM_THREADS is set prior to calling Psi4 then that value is u",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__mrcc.html:228,energy,energy,228,psi4manual/1.8.x/autodir_options_c/module__mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__mrcc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; MRCC. MRCC¶; Interface to MRCC program written by Mihály Kállay. CC(n-1)(n) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC2 CORRELATION ENERGY; CC2 TOTAL ENERGY; CC3 CORRELATION ENERGY; CC3 TOTAL ENERGY; CC4 CORRELATION ENERGY; CC4 TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSD(T)_L TOTAL ENERGY; CCSDT CORRELATION ENERGY; CCSDT TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q)/A CORRELATION ENERGY; CCSDT(Q)/A TOTAL ENERGY; CCSDT(Q)/B CORRELATION ENERGY; CCSDT(Q)/B TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDT-1a TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDT-1b TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDT-3 TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCn CORRELATION ENERGY; CCn TOTAL ENERGY; CCn-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCnn CORRELATION ENERGY; CCnn TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; MRCC. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__mrcc.html:204,ENERGY,ENERGY,204,psi4manual/1.8.x/autodir_psivariables/module__mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__mrcc.html,52,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. MRCC¶. Input File; Description. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_mrcc.html:322,energy,energy,322,psi4manual/1.8.x/autodoc_testsuite_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_mrcc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; MRCC. MRCC¶; Interface to MRCC program written by Mihály Kállay. General¶. E_CONVERGENCE¶. Convergence criterion for energy. See Table Post-SCF Convergence for default convergence criteria for different calculation types. This becomes tol (option #16) in fort.56. Type: conv double; Default: 1e-6. INTS_TOLERANCE¶. Schwarz screening threshold. Mininum absolute value below which TEI are neglected. Type: conv double; Default: 1.0e-12. MRCC_LEVEL¶. Maximum excitation level. This is used ONLY if it is explicitly set by the user. Single-reference case: all excitations up to this level are included, e.g., 2 for CCSD, 3 for CCSDT, 4 for CCSDTQ, etc. This becomes ex.lev (option #1) in fort.56. Type: integer; Default: 2. MRCC_NUM_DOUBLET_ROOTS¶. Number of root in case of open shell system. This becomes ndoub (option #13) int fort.56. Type: integer; Default: 0. MRCC_NUM_SINGLET_ROOTS¶. Number of singlet roots. (Strictly speaking number of of roots with M_s=0 and S is even.) Use this option only with closed shell reference determinant, it must be zero otherwise. This becomes nsing (option #2) in fort.56. Type: integer; Default: 1. MRCC_NUM_TRIPLET_ROOTS¶. Number of triplet roots. (Strictly speaking number of of roots with \(M_s=0\) and S is odd.) See notes at option MRCC_NUM_SINGLET_ROOTS This becomes ntrip (option #3) in fort.56. Type: integer; Default: 0. Expert¶. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. MRCC_OMP_NUM_THREADS¶. Sets the OMP_NUM_THREADS environment variable before calling MRCC. If the environment variable OMP_NUM_THREADS is set prior to calling Psi4 then that value is u",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__mrcc.html:228,energy,energy,228,psi4manual/1.9.x/autodir_options_c/module__mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__mrcc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; MRCC. MRCC¶; Interface to MRCC program written by Mihály Kállay. CC(n-1)(n) CORRELATION ENERGY; CC(n-1)(n) TOTAL ENERGY; CC(n-1)(n)_L CORRELATION ENERGY; CC(n-1)(n)_L TOTAL ENERGY; CC2 CORRELATION ENERGY; CC2 TOTAL ENERGY; CC3 CORRELATION ENERGY; CC3 TOTAL ENERGY; CC4 CORRELATION ENERGY; CC4 TOTAL ENERGY; CCSD CORRELATION ENERGY; CCSD TOTAL ENERGY; CCSD(T) CORRELATION ENERGY; CCSD(T) TOTAL ENERGY; CCSD(T)_L CORRELATION ENERGY; CCSD(T)_L TOTAL ENERGY; CCSDT CORRELATION ENERGY; CCSDT TOTAL ENERGY; CCSDT(Q) CORRELATION ENERGY; CCSDT(Q) TOTAL ENERGY; CCSDT(Q)/A CORRELATION ENERGY; CCSDT(Q)/A TOTAL ENERGY; CCSDT(Q)/B CORRELATION ENERGY; CCSDT(Q)/B TOTAL ENERGY; CCSDT(Q)_L CORRELATION ENERGY; CCSDT(Q)_L TOTAL ENERGY; CCSDT-1a CORRELATION ENERGY; CCSDT-1a TOTAL ENERGY; CCSDT-1b CORRELATION ENERGY; CCSDT-1b TOTAL ENERGY; CCSDT-3 CORRELATION ENERGY; CCSDT-3 TOTAL ENERGY; CCSDTQ CORRELATION ENERGY; CCSDTQ TOTAL ENERGY; CCSDTQ-1a CORRELATION ENERGY; CCSDTQ-1a TOTAL ENERGY; CCSDTQ-1b CORRELATION ENERGY; CCSDTQ-1b TOTAL ENERGY; CCSDTQ-3 CORRELATION ENERGY; CCSDTQ-3 TOTAL ENERGY; CCn CORRELATION ENERGY; CCn TOTAL ENERGY; CCn-1a CORRELATION ENERGY; CCn-1a TOTAL ENERGY; CCn-1b CORRELATION ENERGY; CCn-1b TOTAL ENERGY; CCn-3 CORRELATION ENERGY; CCn-3 TOTAL ENERGY; CCnn CORRELATION ENERGY; CCnn TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; MRCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__mrcc.html:204,ENERGY,ENERGY,204,psi4manual/1.9.x/autodir_psivariables/module__mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__mrcc.html,52,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. MRCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. MRCC¶. Input File; Description. mrcc/ccsd_t_; CCSD(T) cc-pVDZ geometry optimization for the H2O molecule using MRCC. mrcc/optfreq; CCSDT cc-pVDZ optimization and frequencies for the H2O molecule using MRCC. mrcc/ccsdt_q_; CCSDT(Q) cc-pVDZ energy for the H2O molecule using MRCC. This example builds up from CCSD. First CCSD, then CCSDT, finally CCSDT(Q). mrcc/rohf_ccsdt_q_; rohf ccsdt(q) using mrcc. mrcc/ccsdt; CCSDT cc-pVDZ energy for the H2O molecule using MRCC. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; MRCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_mrcc.html:366,energy,energy,366,psi4manual/1.9.x/autodoc_testsuite_mrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_mrcc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_METHOD — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56 | begin{tabular}{ccc} | Value & Method & Description \ | hline | 1 & CC & \ | 2 & CC(n-1)[n] & \ | 3 & CC(n-1)(n) & (CC(n-1)[n] energy is also calculated) \ | 4 & CC(n-1)(n)_L & (CC(n-1)[n] and CC(n-1)(n) energies are also calculated) \ | 5 & CC(n)-1a & \ | 6 & CC(n)-1b & \ | 7 & CCn & \ | 8 & CC(n)-3 & \ | end{tabular}. Type: integer; Default: 1. Previous topic; MRCC_LEVEL; Next topic; MRCC_NUM_SINGLET_ROOTS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mrcc__mrcc_method-1.html:372,energy,energy,372,psi4manual/4.0b2/autodir_options_c/mrcc__mrcc_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mrcc__mrcc_method-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_METHOD — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56 | begin{tabular}{ccc} | Value & Method & Description \ | hline | 1 & CC & \ | 2 & CC(n-1)[n] & \ | 3 & CC(n-1)(n) & (CC(n-1)[n] energy is also calculated) \ | 4 & CC(n-1)(n)_L & (CC(n-1)[n] and CC(n-1)(n) energies are also calculated) \ | 5 & CC(n)-1a & \ | 6 & CC(n)-1b & \ | 7 & CCn & \ | 8 & CC(n)-3 & \ | end{tabular}. Type: integer; Default: 1. Previous topic; MRCC_LEVEL; Next topic; MRCC_NUM_SINGLET_ROOTS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mrcc__mrcc_method-1.html:387,energy,energy,387,psi4manual/4.0b3/autodir_options_c/mrcc__mrcc_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mrcc__mrcc_method-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_METHOD — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56 .. table:: MRCC methods +——-+————–+————————————————————-+ + Value + Method + Description + +=======+==============+=============================================================+ + 1 + CC + + +——-+————–+————————————————————-+ + 2 + CC(n-1)[n] + + +——-+————–+————————————————————-+ + 3 + CC(n-1)(n) + (CC(n-1)[n] energy is also calculated) + +——-+————–+————————————————————-+ + 4 + CC(n-1)(n)_L + (CC(n-1)[n] and CC(n-1)(n) energies are also calculated) + +——-+————–+————————————————————-+ + 5 + CC(n)-1a + + +——-+————–+————————————————————-+ + 6 + CC(n)-1b + + +——-+————–+————————————————————-+ + 7 + CCn + + +——-+————–+————————————————————-+ + 8 + CC(n)-3 + + +——-+————–+————————————————————-+. Type: integer; Default: 1. Previous topic; MRCC_LEVEL; Next topic; MRCC_NUM_SINGLET_ROOTS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/mrcc__mrcc_method-1.html:387,energy,energy,387,psi4manual/4.0b4/autodir_options_c/mrcc__mrcc_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/mrcc__mrcc_method-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_METHOD — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56 .. table:: MRCC methods +——-+————–+————————————————————-+ + Value + Method + Description + +=======+==============+=============================================================+ + 1 + CC + + +——-+————–+————————————————————-+ + 2 + CC(n-1)[n] + + +——-+————–+————————————————————-+ + 3 + CC(n-1)(n) + (CC(n-1)[n] energy is also calculated) + +——-+————–+————————————————————-+ + 4 + CC(n-1)(n)_L + (CC(n-1)[n] and CC(n-1)(n) energies are also calculated) + +——-+————–+————————————————————-+ + 5 + CC(n)-1a + + +——-+————–+————————————————————-+ + 6 + CC(n)-1b + + +——-+————–+————————————————————-+ + 7 + CCn + + +——-+————–+————————————————————-+ + 8 + CC(n)-3 + + +——-+————–+————————————————————-+. Type: integer; Default: 1. Previous topic; MRCC_LEVEL; Next topic; MRCC_NUM_DOUBLET_ROOTS; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/mrcc__mrcc_method-1.html:387,energy,energy,387,psi4manual/4.0b5/autodir_options_c/mrcc__mrcc_method-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/mrcc__mrcc_method-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_METHOD — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. Previous topic; MRCC_LEVEL; Next topic; MRCC_NUM_DOUBLET_ROOTS. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/mrcc__mrcc_method-1.html:394,energy,energy,394,psi4manual/1.0.0/autodir_options_c/mrcc__mrcc_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/mrcc__mrcc_method-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/mrcc__mrcc_method.html:360,energy,energy,360,psi4manual/master/autodir_options_c/mrcc__mrcc_method.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/mrcc__mrcc_method.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/mrcc__mrcc_method-1.html:351,energy,energy,351,psi4manual/1.4.0/autodir_options_c/mrcc__mrcc_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/mrcc__mrcc_method-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/mrcc__mrcc_method-1.html:351,energy,energy,351,psi4manual/1.5.0/autodir_options_c/mrcc__mrcc_method-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/mrcc__mrcc_method-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/mrcc__mrcc_method.html:351,energy,energy,351,psi4manual/1.6.x/autodir_options_c/mrcc__mrcc_method.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/mrcc__mrcc_method.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/mrcc__mrcc_method.html:351,energy,energy,351,psi4manual/1.7.x/autodir_options_c/mrcc__mrcc_method.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/mrcc__mrcc_method.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/mrcc__mrcc_method.html:353,energy,energy,353,psi4manual/1.8.x/autodir_options_c/mrcc__mrcc_method.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/mrcc__mrcc_method.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_METHOD. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. MRCC_METHOD¶. If more than one root is requested and calc=1, LR-CC (EOM-CC) calculation is performed automatically for the excited states. This overrides all automatic determination of method and will only work with energy(). This becomes CC/CI (option #5) in fort.56. See Table MRCC_METHOD for details. Type: integer; Default: 1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_METHOD. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/mrcc__mrcc_method.html:353,energy,energy,353,psi4manual/1.9.x/autodir_options_c/mrcc__mrcc_method.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/mrcc__mrcc_method.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_RESTART — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_RESTART¶. The program restarts from the previously calculated parameters if it is 1. In case it is 2, the program executes automatically the lower-level calculations of the same type consecutively (e.g., CCSD, CCSDT, and CCSDTQ if CCSDTQ is requested) and restarts each calculation from the previous one (rest=2 is available only for energy calculations). Currently, only a value of 0 and 2 are supported. This becomes rest (option #4) in fort.56. Type: integer; Default: 0. Previous topic; MRCC_OMP_NUM_THREADS; Next topic; OMP2; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mrcc__mrcc_restart-1.html:496,energy,energy,496,psi4manual/4.0b2/autodir_options_c/mrcc__mrcc_restart-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/mrcc__mrcc_restart-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_RESTART — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_RESTART¶. The program restarts from the previously calculated parameters if it is 1. In case it is 2, the program executes automatically the lower-level calculations of the same type consecutively (e.g., CCSD, CCSDT, and CCSDTQ if CCSDTQ is requested) and restarts each calculation from the previous one (rest=2 is available only for energy calculations). Currently, only a value of 0 and 2 are supported. This becomes rest (option #4) in fort.56. Type: integer; Default: 0. Previous topic; MRCC_OMP_NUM_THREADS; Next topic; OMP2; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mrcc__mrcc_restart-1.html:511,energy,energy,511,psi4manual/4.0b3/autodir_options_c/mrcc__mrcc_restart-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/mrcc__mrcc_restart-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_RESTART — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_RESTART¶. The program restarts from the previously calculated parameters if it is 1. In case it is 2, the program executes automatically the lower-level calculations of the same type consecutively (e.g., CCSD, CCSDT, and CCSDTQ if CCSDTQ is requested) and restarts each calculation from the previous one (rest=2 is available only for energy calculations). Currently, only a value of 0 and 2 are supported. This becomes rest (option #4) in fort.56. Type: integer; Default: 0. Previous topic; MRCC_OMP_NUM_THREADS; Next topic; OCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/mrcc__mrcc_restart-1.html:511,energy,energy,511,psi4manual/4.0b4/autodir_options_c/mrcc__mrcc_restart-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/mrcc__mrcc_restart-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_RESTART — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_RESTART¶. The program restarts from the previously calculated parameters if it is 1. In case it is 2, the program executes automatically the lower-level calculations of the same type consecutively (e.g., CCSD, CCSDT, and CCSDTQ if CCSDTQ is requested) and restarts each calculation from the previous one (rest=2 is available only for energy calculations). Currently, only a value of 0 and 2 are supported. This becomes rest (option #4) in fort.56. Type: integer; Default: 0. Previous topic; MRCC_OMP_NUM_THREADS; Next topic; OCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/mrcc__mrcc_restart-1.html:511,energy,energy,511,psi4manual/4.0b5/autodir_options_c/mrcc__mrcc_restart-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/mrcc__mrcc_restart-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_RESTART — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; MRCC ». MRCC_RESTART¶. The program restarts from the previously calculated parameters if it is 1. In case it is 2, the program executes automatically the lower-level calculations of the same type consecutively (e.g., CCSD, CCSDT, and CCSDTQ if CCSDTQ is requested) and restarts each calculation from the previous one (rest=2 is available only for energy calculations). Currently, only a value of 0 and 2 are supported. This becomes rest (option #4) in fort.56. Type: integer; Default: 0. Previous topic; MRCC_OMP_NUM_THREADS; Next topic; OCC. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; MRCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/mrcc__mrcc_restart-1.html:518,energy,energy,518,psi4manual/1.0.0/autodir_options_c/mrcc__mrcc_restart-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/mrcc__mrcc_restart-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_RESTART. MRCC_RESTART¶. The program restarts from the previously calculated parameters if it is 1. In case it is 2, the program executes automatically the lower-level calculations of the same type consecutively (e.g., CCSD, CCSDT, and CCSDTQ if CCSDTQ is requested) and restarts each calculation from the previous one (rest=2 is available only for energy calculations). Currently, only a value of 0 and 2 are supported. This becomes rest (option #4) in fort.56. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_RESTART. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/mrcc__mrcc_restart.html:485,energy,energy,485,psi4manual/master/autodir_options_c/mrcc__mrcc_restart.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/mrcc__mrcc_restart.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_RESTART. MRCC_RESTART¶. The program restarts from the previously calculated parameters if it is 1. In case it is 2, the program executes automatically the lower-level calculations of the same type consecutively (e.g., CCSD, CCSDT, and CCSDTQ if CCSDTQ is requested) and restarts each calculation from the previous one (rest=2 is available only for energy calculations). Currently, only a value of 0 and 2 are supported. This becomes rest (option #4) in fort.56. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_RESTART. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/mrcc__mrcc_restart-1.html:476,energy,energy,476,psi4manual/1.4.0/autodir_options_c/mrcc__mrcc_restart-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/mrcc__mrcc_restart-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_RESTART. MRCC_RESTART¶. The program restarts from the previously calculated parameters if it is 1. In case it is 2, the program executes automatically the lower-level calculations of the same type consecutively (e.g., CCSD, CCSDT, and CCSDTQ if CCSDTQ is requested) and restarts each calculation from the previous one (rest=2 is available only for energy calculations). Currently, only a value of 0 and 2 are supported. This becomes rest (option #4) in fort.56. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_RESTART. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/mrcc__mrcc_restart-1.html:476,energy,energy,476,psi4manual/1.5.0/autodir_options_c/mrcc__mrcc_restart-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/mrcc__mrcc_restart-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_RESTART. MRCC_RESTART¶. The program restarts from the previously calculated parameters if it is 1. In case it is 2, the program executes automatically the lower-level calculations of the same type consecutively (e.g., CCSD, CCSDT, and CCSDTQ if CCSDTQ is requested) and restarts each calculation from the previous one (rest=2 is available only for energy calculations). Currently, only a value of 0 and 2 are supported. This becomes rest (option #4) in fort.56. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_RESTART. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/mrcc__mrcc_restart.html:476,energy,energy,476,psi4manual/1.6.x/autodir_options_c/mrcc__mrcc_restart.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/mrcc__mrcc_restart.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_RESTART. MRCC_RESTART¶. The program restarts from the previously calculated parameters if it is 1. In case it is 2, the program executes automatically the lower-level calculations of the same type consecutively (e.g., CCSD, CCSDT, and CCSDTQ if CCSDTQ is requested) and restarts each calculation from the previous one (rest=2 is available only for energy calculations). Currently, only a value of 0 and 2 are supported. This becomes rest (option #4) in fort.56. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_RESTART. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/mrcc__mrcc_restart.html:476,energy,energy,476,psi4manual/1.7.x/autodir_options_c/mrcc__mrcc_restart.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/mrcc__mrcc_restart.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_RESTART. MRCC_RESTART¶. The program restarts from the previously calculated parameters if it is 1. In case it is 2, the program executes automatically the lower-level calculations of the same type consecutively (e.g., CCSD, CCSDT, and CCSDTQ if CCSDTQ is requested) and restarts each calculation from the previous one (rest=2 is available only for energy calculations). Currently, only a value of 0 and 2 are supported. This becomes rest (option #4) in fort.56. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_RESTART. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/mrcc__mrcc_restart.html:478,energy,energy,478,psi4manual/1.8.x/autodir_options_c/mrcc__mrcc_restart.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/mrcc__mrcc_restart.html,2,['energy'],['energy']
Energy Efficiency,"﻿. MRCC_RESTART. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_RESTART. MRCC_RESTART¶. The program restarts from the previously calculated parameters if it is 1. In case it is 2, the program executes automatically the lower-level calculations of the same type consecutively (e.g., CCSD, CCSDT, and CCSDTQ if CCSDTQ is requested) and restarts each calculation from the previous one (rest=2 is available only for energy calculations). Currently, only a value of 0 and 2 are supported. This becomes rest (option #4) in fort.56. Type: integer; Default: 0. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; MRCC; MRCC_RESTART. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/mrcc__mrcc_restart.html:478,energy,energy,478,psi4manual/1.9.x/autodir_options_c/mrcc__mrcc_restart.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/mrcc__mrcc_restart.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ManagedMethodError. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; ManagedMethodError. ManagedMethodError¶. exception psi4.driver.ManagedMethodError(circs)[source]¶; Error called when a requested level of theory and derivative level are; nominally available but not for the particular conditions (e.g., reference,; algorithm, active orbitals, QC module, etc.) requested. Parameters:; circs (List[str]) – List providing calling function name, level of theory, algorithm,; reference, QC module, and frozen-core/all-electron requested conditions. message¶; Human readable string describing the exception. stats¶; Dictionary of conditions for which method request was made.; Keys are:. driver : {“energy”, “gradient”, “hessian”, “properties”}; derivative_int : {0, 1, 2, “prop”}, integer representation of driver; method : str, model/method/level-of-theory; link : str, link address to table in docs; method_type : (str, str), raw value and str repr of governing variable and algorithm; reference : (str, str), raw value and str repr of reference type; qc_module : (str, str), raw value and str repr of targeted implementation; fcae : (str, str), raw value and str repr of all-electron/frozen-core status. table of contents. ManagedMethodError; ManagedMethodError; ManagedMethodError.message; ManagedMethodError.stats. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; ManagedMethodError. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.ManagedMethodError.html:760,energy,energy,760,psi4manual/master/api/psi4.driver.ManagedMethodError.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.ManagedMethodError.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ManagedMethodError. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; ManagedMethodError. ManagedMethodError¶. exception psi4.driver.ManagedMethodError(circs)[source]¶; Error called when a requested level of theory and derivative level are; nominally available but not for the particular conditions (e.g., reference,; algorithm, active orbitals, QC module, etc.) requested. Parameters:; circs (List[str]) – List providing calling function name, level of theory, algorithm,; reference, QC module, and frozen-core/all-electron requested conditions. message¶; Human readable string describing the exception. Type:; str. stats¶; Dictionary of conditions for which method request was made.; Keys are:. driver : {“energy”, “gradient”, “hessian”, “properties”}; derivative_int : {0, 1, 2, “prop”}, integer representation of driver; method : str, model/method/level-of-theory; link : str, link address to table in docs; method_type : (str, str), raw value and str repr of governing variable and algorithm; reference : (str, str), raw value and str repr of reference type; qc_module : (str, str), raw value and str repr of targeted implementation; fcae : (str, str), raw value and str repr of all-electron/frozen-core status. Type:; Dict[str, Any]. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; ManagedMethodError. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.ManagedMethodError.html:763,energy,energy,763,psi4manual/1.7.x/api/psi4.driver.ManagedMethodError.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.ManagedMethodError.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ManagedMethodError. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; ManagedMethodError. ManagedMethodError¶. exception psi4.driver.ManagedMethodError(circs)[source]¶; Error called when a requested level of theory and derivative level are; nominally available but not for the particular conditions (e.g., reference,; algorithm, active orbitals, QC module, etc.) requested. Parameters:; circs (List[str]) – List providing calling function name, level of theory, algorithm,; reference, QC module, and frozen-core/all-electron requested conditions. message¶; Human readable string describing the exception. stats¶; Dictionary of conditions for which method request was made.; Keys are:. driver : {“energy”, “gradient”, “hessian”, “properties”}; derivative_int : {0, 1, 2, “prop”}, integer representation of driver; method : str, model/method/level-of-theory; link : str, link address to table in docs; method_type : (str, str), raw value and str repr of governing variable and algorithm; reference : (str, str), raw value and str repr of reference type; qc_module : (str, str), raw value and str repr of targeted implementation; fcae : (str, str), raw value and str repr of all-electron/frozen-core status. table of contents. ManagedMethodError; ManagedMethodError; ManagedMethodError.message; ManagedMethodError.stats. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; ManagedMethodError. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.ManagedMethodError.html:753,energy,energy,753,psi4manual/1.8.x/api/psi4.driver.ManagedMethodError.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.ManagedMethodError.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ManagedMethodError. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; ManagedMethodError. ManagedMethodError¶. exception psi4.driver.ManagedMethodError(circs)[source]¶; Error called when a requested level of theory and derivative level are; nominally available but not for the particular conditions (e.g., reference,; algorithm, active orbitals, QC module, etc.) requested. Parameters:; circs (List[str]) – List providing calling function name, level of theory, algorithm,; reference, QC module, and frozen-core/all-electron requested conditions. message¶; Human readable string describing the exception. stats¶; Dictionary of conditions for which method request was made.; Keys are:. driver : {“energy”, “gradient”, “hessian”, “properties”}; derivative_int : {0, 1, 2, “prop”}, integer representation of driver; method : str, model/method/level-of-theory; link : str, link address to table in docs; method_type : (str, str), raw value and str repr of governing variable and algorithm; reference : (str, str), raw value and str repr of reference type; qc_module : (str, str), raw value and str repr of targeted implementation; fcae : (str, str), raw value and str repr of all-electron/frozen-core status. table of contents. ManagedMethodError; ManagedMethodError; ManagedMethodError.message; ManagedMethodError.stats. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; ManagedMethodError. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.ManagedMethodError.html:753,energy,energy,753,psi4manual/1.9.x/api/psi4.driver.ManagedMethodError.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.ManagedMethodError.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Molecule. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; Molecule. Molecule¶. class psi4.core.Molecule¶; Bases: pybind11_object; Class to store the elements, coordinates, fragmentation pattern, basis sets, charge, multiplicity, etc. of a molecule.; Methods Summary. B787(ref_mol[, do_plot, verbose, atoms_map, ...]); Finds shift, rotation, and atom reordering of concern_mol that best aligns with ref_mol. BFS([seed_atoms, bond_threshold, ...]); Detect fragments among real atoms through a breadth-first search (BFS) algorithm. Z(self, arg0); Nuclear charge of atom arg0 (0-indexed without dummies). activate_all_fragments(self); Sets all fragments in the molecule to be active. add_atom(self, Z, x, y, z, symbol, mass, ...); Adds to self Molecule an atom with atomic number Z, Cartesian coordinates in Bohr (x, y, z), atomic symbol, mass, and charge, extended atomic label, and mass number A. atom_at_position(*args, **kwargs); Overloaded function. basis_on_atom(self, arg0); Gets the label of the orbital basis set on a given atom arg0. center_of_mass(self); Computes center of mass of molecule (does not translate molecule). charge(self, atom); Gets charge of atom (0-indexed without dummies). clone(self); Returns a new Molecule identical to arg1. com_fixed(self); Gets whether or not center of mass is fixed. comment(self); Gets molecule comment. connectivity(self); Gets molecule connectivity. create_psi4_string_from_molecule(self); Gets a string re-expressing in input format the current state of the molecule.Contains Cartesian geometry info, fragmentation, charges and multiplicities, and any frame restriction. deactivate_all_fragments(self); Sets all fragments in the molecule to be inactive. distance_matrix(self); Returns Matrix of interatom distances. extract_subsets(*args, **kwargs); Overloaded function. fZ(self, arg0); Nuclear charge of atom arg1 (0-indexed including dummies). fcharge(self, atom); Gets charge of a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.Molecule.html:273,charge,charge,273,psi4manual/master/api/psi4.core.Molecule.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.Molecule.html,6,['charge'],['charge']
Energy Efficiency,"﻿. Molecule. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. Molecule¶. class psi4.core.Molecule¶; Bases: pybind11_builtins.pybind11_object; Class to store the elements, coordinates, fragmentation pattern, basis sets, charge, multiplicity, etc. of a molecule.; Methods Summary. B787(ref_mol[, do_plot, verbose, atoms_map, …]); Finds shift, rotation, and atom reordering of concern_mol that best aligns with ref_mol. BFS([seed_atoms, bond_threshold, …]); Detect fragments among real atoms through a breadth-first search (BFS) algorithm. Z(self, arg0); Nuclear charge of atom. activate_all_fragments(self); Sets all fragments in the molecule to be active. add_atom(self, arg0, arg1, arg2, arg3, arg4, …); Adds to Molecule arg1 an atom with atomic number arg2, Cartesian coordinates in Bohr (arg3, arg4, arg5), atomic symbol arg6, mass arg7, charge arg8 (optional), and lineno arg9 (optional). atom_at_position(self, arg0, arg1); Tests to see if an atom is at the position arg2 with a given tolerance arg3. basis_on_atom(self, arg0); Gets the label of the orbital basis set on a given atom. center_of_mass(self); Computes center of mass of molecule (does not translate molecule). charge(self, arg0); Gets charge of atom. clone(self); Returns a new Molecule identical to arg1. com_fixed(self); Get whether or not COM is fixed. create_molecule_from_string(arg0); Returns a new Molecule with member data from the geometry string arg1 in psi4 format. create_psi4_string_from_molecule(self); Gets a string reexpressing in input format the current states of the molecule. deactivate_all_fragments(self); Sets all fragments in the molecule to be inactive. distance_matrix(self); Returns Matrix of interatom distances. extract_subsets(*args, **kwargs); Overloaded function. fZ(self, arg0); Nuclear charge of atom arg1 (0-indexed including dummies). find_point_group(self, arg0); Finds computational molecular point group, user can override this with the sy",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.molecule.html:274,charge,charge,274,psi4manual/1.2.1/api/psi4.core.molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.molecule.html,3,['charge'],['charge']
Energy Efficiency,"﻿. Molecule. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. Molecule¶. class psi4.core.Molecule¶; Bases: pybind11_builtins.pybind11_object; Class to store the elements, coordinates, fragmentation pattern, basis sets, charge, multiplicity, etc. of a molecule.; Methods Summary. B787(ref_mol[, do_plot, verbose, atoms_map, …]); Finds shift, rotation, and atom reordering of concern_mol that best aligns with ref_mol. BFS([seed_atoms, bond_threshold, …]); Detect fragments among real atoms through a breadth-first search (BFS) algorithm. Z(self, arg0); Nuclear charge of atom arg0 (0-indexed without dummies). activate_all_fragments(self); Sets all fragments in the molecule to be active. add_atom(self, Z, x, y, z, symbol, mass, …); Adds to self Molecule an atom with atomic number Z, Cartesian coordinates in Bohr (x, y, z), atomic symbol, mass, and charge, extended atomic label, and mass number A. atom_at_position(*args, **kwargs); Overloaded function. basis_on_atom(self, arg0); Gets the label of the orbital basis set on a given atom arg0. center_of_mass(self); Computes center of mass of molecule (does not translate molecule). charge(self, atom); Gets charge of atom (0-indexed without dummies). clone(self); Returns a new Molecule identical to arg1. com_fixed(self); Gets whether or not center of mass is fixed. comment(self); Gets molecule comment. connectivity(self); Gets molecule connectivity. create_psi4_string_from_molecule(self); Gets a string re-expressing in input format the current state of the molecule.Contains Cartesian geometry info, fragmentation, charges and multiplicities, and any frame restriction. deactivate_all_fragments(self); Sets all fragments in the molecule to be inactive. distance_matrix(self); Returns Matrix of interatom distances. extract_subsets(*args, **kwargs); Overloaded function. fZ(self, arg0); Nuclear charge of atom arg1 (0-indexed including dummies). fcharge(self, atom); Gets charge of atom (",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.molecule.html:274,charge,charge,274,psi4manual/1.3.2/api/psi4.core.molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.molecule.html,3,['charge'],['charge']
Energy Efficiency,"﻿. Molecule. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; Molecule. Molecule¶. class psi4.core.Molecule¶; Bases: pybind11_builtins.pybind11_object; Class to store the elements, coordinates, fragmentation pattern, basis sets, charge, multiplicity, etc. of a molecule.; Methods Summary. B787(ref_mol[, do_plot, verbose, atoms_map, …]); Finds shift, rotation, and atom reordering of concern_mol that best aligns with ref_mol. BFS([seed_atoms, bond_threshold, …]); Detect fragments among real atoms through a breadth-first search (BFS) algorithm. Z(self, arg0); Nuclear charge of atom arg0 (0-indexed without dummies). activate_all_fragments(self); Sets all fragments in the molecule to be active. add_atom(self, Z, x, y, z, symbol, mass, …); Adds to self Molecule an atom with atomic number Z, Cartesian coordinates in Bohr (x, y, z), atomic symbol, mass, and charge, extended atomic label, and mass number A. atom_at_position(*args, **kwargs); Overloaded function. basis_on_atom(self, arg0); Gets the label of the orbital basis set on a given atom arg0. center_of_mass(self); Computes center of mass of molecule (does not translate molecule). charge(self, atom); Gets charge of atom (0-indexed without dummies). clone(self); Returns a new Molecule identical to arg1. com_fixed(self); Gets whether or not center of mass is fixed. comment(self); Gets molecule comment. connectivity(self); Gets molecule connectivity. create_psi4_string_from_molecule(self); Gets a string re-expressing in input format the current state of the molecule.Contains Cartesian geometry info, fragmentation, charges and multiplicities, and any frame restriction. deactivate_all_fragments(self); Sets all fragments in the molecule to be inactive. distance_matrix(self); Returns Matrix of interatom distances. extract_subsets(*args, **kwargs); Overloaded function. fZ(self, arg0); Nuclear charge of atom arg1 (0-indexed including dummies). fcharge(self, atom); Gets charge o",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.molecule.html:282,charge,charge,282,psi4manual/1.4.0/api/psi4.core.molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.molecule.html,6,['charge'],['charge']
Energy Efficiency,"﻿. Molecule. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; Molecule. Molecule¶. class psi4.core.Molecule¶; Bases: pybind11_builtins.pybind11_object; Class to store the elements, coordinates, fragmentation pattern, basis sets, charge, multiplicity, etc. of a molecule.; Methods Summary. B787(ref_mol[, do_plot, verbose, atoms_map, ...]); Finds shift, rotation, and atom reordering of concern_mol that best aligns with ref_mol. BFS([seed_atoms, bond_threshold, ...]); Detect fragments among real atoms through a breadth-first search (BFS) algorithm. Z(self, arg0); Nuclear charge of atom arg0 (0-indexed without dummies). activate_all_fragments(self); Sets all fragments in the molecule to be active. add_atom(self, Z, x, y, z, symbol, mass, ...); Adds to self Molecule an atom with atomic number Z, Cartesian coordinates in Bohr (x, y, z), atomic symbol, mass, and charge, extended atomic label, and mass number A. atom_at_position(*args, **kwargs); Overloaded function. basis_on_atom(self, arg0); Gets the label of the orbital basis set on a given atom arg0. center_of_mass(self); Computes center of mass of molecule (does not translate molecule). charge(self, atom); Gets charge of atom (0-indexed without dummies). clone(self); Returns a new Molecule identical to arg1. com_fixed(self); Gets whether or not center of mass is fixed. comment(self); Gets molecule comment. connectivity(self); Gets molecule connectivity. create_psi4_string_from_molecule(self); Gets a string re-expressing in input format the current state of the molecule.Contains Cartesian geometry info, fragmentation, charges and multiplicities, and any frame restriction. deactivate_all_fragments(self); Sets all fragments in the molecule to be inactive. distance_matrix(self); Returns Matrix of interatom distances. extract_subsets(*args, **kwargs); Overloaded function. fZ(self, arg0); Nuclear charge of atom arg1 (0-indexed including dummies). fcharge(self, atom); Gets ch",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.molecule.html:282,charge,charge,282,psi4manual/1.5.0/api/psi4.core.molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.molecule.html,6,['charge'],['charge']
Energy Efficiency,"﻿. Molecule. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; Molecule. Molecule¶. class psi4.core.Molecule¶; Bases: pybind11_builtins.pybind11_object; Class to store the elements, coordinates, fragmentation pattern, basis sets, charge, multiplicity, etc. of a molecule.; Methods Summary. B787(ref_mol[, do_plot, verbose, atoms_map, ...]); Finds shift, rotation, and atom reordering of concern_mol that best aligns with ref_mol. BFS([seed_atoms, bond_threshold, ...]); Detect fragments among real atoms through a breadth-first search (BFS) algorithm. Z(self, arg0); Nuclear charge of atom arg0 (0-indexed without dummies). activate_all_fragments(self); Sets all fragments in the molecule to be active. add_atom(self, Z, x, y, z, symbol, mass, ...); Adds to self Molecule an atom with atomic number Z, Cartesian coordinates in Bohr (x, y, z), atomic symbol, mass, and charge, extended atomic label, and mass number A. atom_at_position(*args, **kwargs); Overloaded function. basis_on_atom(self, arg0); Gets the label of the orbital basis set on a given atom arg0. center_of_mass(self); Computes center of mass of molecule (does not translate molecule). charge(self, atom); Gets charge of atom (0-indexed without dummies). clone(self); Returns a new Molecule identical to arg1. com_fixed(self); Gets whether or not center of mass is fixed. comment(self); Gets molecule comment. connectivity(self); Gets molecule connectivity. create_psi4_string_from_molecule(self); Gets a string re-expressing in input format the current state of the molecule.Contains Cartesian geometry info, fragmentation, charges and multiplicities, and any frame restriction. deactivate_all_fragments(self); Sets all fragments in the molecule to be inactive. distance_matrix(self); Returns Matrix of interatom distances. extract_subsets(*args, **kwargs); Overloaded function. fZ(self, arg0); Nuclear charge of atom arg1 (0-indexed including dummies). fcharge(self, atom); Gets ch",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.Molecule.html:282,charge,charge,282,psi4manual/1.6.x/api/psi4.core.Molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.Molecule.html,6,['charge'],['charge']
Energy Efficiency,"﻿. Molecule. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; Molecule. Molecule¶. class psi4.core.Molecule¶; Bases: pybind11_object; Class to store the elements, coordinates, fragmentation pattern, basis sets, charge, multiplicity, etc. of a molecule.; Methods Summary. B787(ref_mol[, do_plot, verbose, atoms_map, ...]); Finds shift, rotation, and atom reordering of concern_mol that best aligns with ref_mol. BFS([seed_atoms, bond_threshold, ...]); Detect fragments among real atoms through a breadth-first search (BFS) algorithm. Z(self, arg0); Nuclear charge of atom arg0 (0-indexed without dummies). activate_all_fragments(self); Sets all fragments in the molecule to be active. add_atom(self, Z, x, y, z, symbol, mass, ...); Adds to self Molecule an atom with atomic number Z, Cartesian coordinates in Bohr (x, y, z), atomic symbol, mass, and charge, extended atomic label, and mass number A. atom_at_position(*args, **kwargs); Overloaded function. basis_on_atom(self, arg0); Gets the label of the orbital basis set on a given atom arg0. center_of_mass(self); Computes center of mass of molecule (does not translate molecule). charge(self, atom); Gets charge of atom (0-indexed without dummies). clone(self); Returns a new Molecule identical to arg1. com_fixed(self); Gets whether or not center of mass is fixed. comment(self); Gets molecule comment. connectivity(self); Gets molecule connectivity. create_psi4_string_from_molecule(self); Gets a string re-expressing in input format the current state of the molecule.Contains Cartesian geometry info, fragmentation, charges and multiplicities, and any frame restriction. deactivate_all_fragments(self); Sets all fragments in the molecule to be inactive. distance_matrix(self); Returns Matrix of interatom distances. extract_subsets(*args, **kwargs); Overloaded function. fZ(self, arg0); Nuclear charge of atom arg1 (0-indexed including dummies). fcharge(self, atom); Gets charge of atom (0-in",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.Molecule.html:264,charge,charge,264,psi4manual/1.7.x/api/psi4.core.Molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.Molecule.html,6,['charge'],['charge']
Energy Efficiency,"﻿. Molecule. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; Molecule. Molecule¶. class psi4.core.Molecule¶; Bases: pybind11_object; Class to store the elements, coordinates, fragmentation pattern, basis sets, charge, multiplicity, etc. of a molecule.; Methods Summary. B787(ref_mol[, do_plot, verbose, atoms_map, ...]); Finds shift, rotation, and atom reordering of concern_mol that best aligns with ref_mol. BFS([seed_atoms, bond_threshold, ...]); Detect fragments among real atoms through a breadth-first search (BFS) algorithm. Z(self, arg0); Nuclear charge of atom arg0 (0-indexed without dummies). activate_all_fragments(self); Sets all fragments in the molecule to be active. add_atom(self, Z, x, y, z, symbol, mass, ...); Adds to self Molecule an atom with atomic number Z, Cartesian coordinates in Bohr (x, y, z), atomic symbol, mass, and charge, extended atomic label, and mass number A. atom_at_position(*args, **kwargs); Overloaded function. basis_on_atom(self, arg0); Gets the label of the orbital basis set on a given atom arg0. center_of_mass(self); Computes center of mass of molecule (does not translate molecule). charge(self, atom); Gets charge of atom (0-indexed without dummies). clone(self); Returns a new Molecule identical to arg1. com_fixed(self); Gets whether or not center of mass is fixed. comment(self); Gets molecule comment. connectivity(self); Gets molecule connectivity. create_psi4_string_from_molecule(self); Gets a string re-expressing in input format the current state of the molecule.Contains Cartesian geometry info, fragmentation, charges and multiplicities, and any frame restriction. deactivate_all_fragments(self); Sets all fragments in the molecule to be inactive. distance_matrix(self); Returns Matrix of interatom distances. extract_subsets(*args, **kwargs); Overloaded function. fZ(self, arg0); Nuclear charge of atom arg1 (0-indexed including dummies). fcharge(self, atom); Gets charge of atom (0-",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.Molecule.html:266,charge,charge,266,psi4manual/1.8.x/api/psi4.core.Molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.Molecule.html,6,['charge'],['charge']
Energy Efficiency,"﻿. Molecule. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; Molecule. Molecule¶. class psi4.core.Molecule¶; Bases: pybind11_object; Class to store the elements, coordinates, fragmentation pattern, basis sets, charge, multiplicity, etc. of a molecule.; Methods Summary. B787(ref_mol[, do_plot, verbose, atoms_map, ...]); Finds shift, rotation, and atom reordering of concern_mol that best aligns with ref_mol. BFS([seed_atoms, bond_threshold, ...]); Detect fragments among real atoms through a breadth-first search (BFS) algorithm. Z(self, arg0); Nuclear charge of atom arg0 (0-indexed without dummies). activate_all_fragments(self); Sets all fragments in the molecule to be active. add_atom(self, Z, x, y, z, symbol, mass, ...); Adds to self Molecule an atom with atomic number Z, Cartesian coordinates in Bohr (x, y, z), atomic symbol, mass, and charge, extended atomic label, and mass number A. atom_at_position(*args, **kwargs); Overloaded function. basis_on_atom(self, arg0); Gets the label of the orbital basis set on a given atom arg0. center_of_mass(self); Computes center of mass of molecule (does not translate molecule). charge(self, atom); Gets charge of atom (0-indexed without dummies). clone(self); Returns a new Molecule identical to arg1. com_fixed(self); Gets whether or not center of mass is fixed. comment(self); Gets molecule comment. connectivity(self); Gets molecule connectivity. create_psi4_string_from_molecule(self); Gets a string re-expressing in input format the current state of the molecule.Contains Cartesian geometry info, fragmentation, charges and multiplicities, and any frame restriction. deactivate_all_fragments(self); Sets all fragments in the molecule to be inactive. distance_matrix(self); Returns Matrix of interatom distances. extract_subsets(*args, **kwargs); Overloaded function. fZ(self, arg0); Nuclear charge of atom arg1 (0-indexed including dummies). fcharge(self, atom); Gets charge of atom (0-",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.Molecule.html:266,charge,charge,266,psi4manual/1.9.x/api/psi4.core.Molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.Molecule.html,6,['charge'],['charge']
Energy Efficiency,"﻿. NO_RESPONSE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; SAPT ». NO_RESPONSE¶. Don’t solve the CPHF equations? Evaluate and instead of their response-including coupterparts. Only turn on this option if the induction energy is not going to be used. Type: boolean; Default: false. Previous topic; NAT_ORBS_T2; Next topic; OCC_TOLERANCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/sapt__no_response-1.html:307,energy,energy,307,psi4manual/4.0b2/autodir_options_c/sapt__no_response-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/sapt__no_response-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. NO_RESPONSE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SAPT ». NO_RESPONSE¶. Don’t solve the CPHF equations? Evaluate and instead of their response-including coupterparts. Only turn on this option if the induction energy is not going to be used. Type: boolean; Default: false. Previous topic; NAT_ORBS_T2; Next topic; OCC_TOLERANCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/sapt__no_response-1.html:322,energy,energy,322,psi4manual/4.0b3/autodir_options_c/sapt__no_response-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/sapt__no_response-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. NO_RESPONSE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SAPT ». NO_RESPONSE¶. Don’t solve the CPHF equations? Evaluate and instead of their response-including coupterparts. Only turn on this option if the induction energy is not going to be used. Type: boolean; Default: false. Previous topic; NAT_ORBS_T2; Next topic; OCC_TOLERANCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/sapt__no_response-1.html:322,energy,energy,322,psi4manual/4.0b4/autodir_options_c/sapt__no_response-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/sapt__no_response-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. NO_RESPONSE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SAPT ». NO_RESPONSE¶. Don’t solve the CPHF equations? Evaluate and instead of their response-including coupterparts. Only turn on this option if the induction energy is not going to be used. Type: boolean; Default: false. Previous topic; NAT_ORBS_V4; Next topic; OCC_TOLERANCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/sapt__no_response-1.html:322,energy,energy,322,psi4manual/4.0b5/autodir_options_c/sapt__no_response-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/sapt__no_response-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. NO_RESPONSE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SAPT ». NO_RESPONSE¶. Don’t solve the CPHF equations? Evaluate and instead of their response-including coupterparts. Only turn on this option if the induction energy is not going to be used. Type: boolean; Default: false. Previous topic; NAT_ORBS_V4; Next topic; OCC_TOLERANCE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SAPT ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/sapt__no_response-1.html:329,energy,energy,329,psi4manual/1.0.0/autodir_options_c/sapt__no_response-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/sapt__no_response-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; nearest preceeding molecule declared in a molecule name {...} block. Note; that the value of this keyword (name in the example) is a Python object and; so is not wrapped in quotes like a string. Previous topic; Psithon Functions: Invoking a Calculation; Next topic; Energy; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/notes_py-1.html:334,energy,energy,334,psi4manual/4.0b2/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/notes_py-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Theoretical Methods: SCF to FCI ». Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control, not as arguments to a Python function; (like energy()). Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number of an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to , the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Previous topic; Theoretical Methods: SCF to FCI; Next topic; Hartree–Fock Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Theoretical Methods: SCF to FCI ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/notes_c-1.html:389,energy,energy,389,psi4manual/4.0b2/notes_c-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/notes_c-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; nearest preceeding molecule declared in a molecule name {...} block. Note; that the value of this keyword (name in the example) is a Python object and; so is not wrapped in quotes like a string. Previous topic; Psithon Functions: Invoking a Calculation; Next topic; Energy; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 01, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/notes_py-1.html:349,energy,energy,349,psi4manual/4.0b3/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/notes_py-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Theoretical Methods: SCF to FCI ». Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control, not as arguments to a Python function; (like energy()). Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number of an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to , the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Previous topic; Theoretical Methods: SCF to FCI; Next topic; HF: Hartree–Fock Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Theoretical Methods: SCF to FCI ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 01, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/notes_c-1.html:404,energy,energy,404,psi4manual/4.0b3/notes_c-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/notes_c-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoking a Calculation ». Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; nearest preceeding molecule declared in a molecule name {...} block. Note; that the value of this keyword (name in the example) is a Python object and; so is not wrapped in quotes like a string. Previous topic; Psithon Functions: Invoking a Calculation; Next topic; Energy; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoki",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/notes_py-1.html:349,energy,energy,349,psi4manual/4.0b4/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/notes_py-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Theoretical Methods: SCF to FCI ». Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control, not as arguments to a Python function; (like energy()). Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number of an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to , the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Previous topic; Theoretical Methods: SCF to FCI; Next topic; HF: Hartree–Fock Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Theoretical Methods: SCF to FCI ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 05, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/notes_c-1.html:404,energy,energy,404,psi4manual/4.0b4/notes_c-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/notes_c-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Psithon Functions: Invoking a Calculation ». Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; nearest preceeding molecule declared in a molecule name {...} block. Note; that the value of this keyword (name in the example) is a Python object and; so is not wrapped in quotes like a string. Previous topic; Psithon Functions: Invoking a Calculation; Next topic; Energy; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Psithon Functions: Invoki",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/notes_py-1.html:349,energy,energy,349,psi4manual/4.0b5/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/notes_py-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Theoretical Methods: SCF to FCI ». Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control, not as arguments to a Python function; (like energy()). Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number or an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to , the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Previous topic; Theoretical Methods: SCF to FCI; Next topic; HF: Hartree–Fock Theory; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Theoretical Methods: SCF to FCI ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/notes_c-1.html:404,energy,energy,404,psi4manual/4.0b5/notes_c-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/notes_c-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Psithon Functions: Invoking a Calculation ». Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All Psi4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. Previous topic; Psithon Functions: Invoking a Calculation; Next topic; Single-Point Energy, energy(). This Page. Show Source. Quick search. Enter search terms or a m",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/notes_py-1.html:356,energy,energy,356,psi4manual/1.0.0/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/notes_py-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Theoretical Methods: SCF to FCI ». Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control Keywords, not as arguments to a Python function; (like energy()). Note; All Psi4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number or an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to , the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Alternate Implementations¶; Depending on the reference (RHF, UHF, ROHF) and the integral treatment; (conventional CONV, density-fitted DF, and Cholesky-decomposed CD),; computational methods are sometimes implemented by multiple coders or even; multiple times. Psi4 transparently selects the most efficient; implementation, so one generally needn’t consult this table. However, to; understand the details of what combinations are accessible or what; alternate implementations are available, read on.; Below, “Y” means method available in module, “D” means module is default; for that method, and “” means method not available. HF, DFT, and MP2; default to density-fitted integrals, while all higher methods default to; conventional integrals. Therefore, for a closed-shell molecule:. runs MP2 with default DF with default im",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/notes_c-1.html:420,energy,energy,420,psi4manual/1.0.0/notes_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/notes_c-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. © Copyright 2007-2",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/notes_py.html:331,energy,energy,331,psi4manual/master/notes_py.html,https://psicode.org,https://psicode.org/psi4manual/master/notes_py.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Theoretical Methods: SCF to FCI; Notes on Options. Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control Keywords, not as arguments to a Python function; (like energy()). Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number or an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to \(10^{-6} E_h\), the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Notes on PSI Variables¶. Note; Starting in 1.6, there are three standard ways to access an excited state; property. We give examples below, but the method name and property name may change. method ROOT 0 -> ROOT m property to get root m.; method ROOT 0 -> ROOT m property - h TRANSITION to get root m and; independently specify that the total transition symmetry is h, e.g., A2.; method ROOT 0 (h) -> ROOT m (i) property to get the transition; between two roots, specifying the symmetry of both states and the index of the target; roots among states of their own symmetry. For example, to target the second excited-state, which is also the lowest energy state; of its irrep, the first two calls will take m = 2, while the last takes m = 0.; Methods that use this interface are: TD-fctl.; Note that numberings are associated with the c",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/notes_c.html:395,energy,energy,395,psi4manual/master/notes_c.html,https://psicode.org,https://psicode.org/psi4manual/master/notes_c.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/notes_py-1.html:304,energy,energy,304,psi4manual/1.1.0/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/notes_py-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Theoretical Methods: SCF to FCI. Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control Keywords, not as arguments to a Python function; (like energy()). Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number or an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to \(10^{-6} E_h\), the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Alternate Implementations¶; Depending on the reference (RHF, UHF, ROHF) and the integral treatment; (conventional CONV, density-fitted DF, and Cholesky-decomposed CD),; computational methods are sometimes implemented by multiple coders or even; multiple times. PSI4 transparently selects the most efficient; implementation, so one generally needn’t consult this table. However, to; understand the details of what combinations are accessible or what; alternate implementations are available, read on.; Below, “Y” means method available in module, “D” means module is default; for that method, and “” means method not available. HF, DFT, and MP2; default to density-fitted integrals, while all higher methods default to; conventional integrals. Therefore, for a closed-shell molecule:. runs MP2 with default DF with default implementation DFMP2; 1energy('mp2'). r",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/notes_c-1.html:368,energy,energy,368,psi4manual/1.1.0/notes_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/notes_c-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 J",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/notes_py-1.html:306,energy,energy,306,psi4manual/1.2.1/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/notes_py-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Theoretical Methods: SCF to FCI. Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control Keywords, not as arguments to a Python function; (like energy()). Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number or an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to \(10^{-6} E_h\), the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Alternate Implementations¶; Depending on the reference (RHF, UHF, ROHF) and the integral treatment; (conventional CONV, density-fitted DF, and Cholesky-decomposed CD),; computational methods are sometimes implemented by multiple coders or even; multiple times. PSI4 transparently selects the most efficient; implementation, so one generally needn’t consult this table. However, to; understand the details of what combinations are accessible or what; alternate implementations are available, read on.; Below, “Y” means method available in module, “D” means module is default; for that method, and “” means method not available. HF, DFT, and MP2; default to density-fitted integrals, while all higher methods default to; conventional integrals. Therefore, for a closed-shell molecule:. runs MP2 with default DF with default implementation DFMP2; 1energy('mp2').",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/notes_c-1.html:370,energy,energy,370,psi4manual/1.2.1/notes_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/notes_c-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 M",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/notes_py-1.html:306,energy,energy,306,psi4manual/1.3.2/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/notes_py-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Theoretical Methods: SCF to FCI. Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control Keywords, not as arguments to a Python function; (like energy()). Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number or an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to \(10^{-6} E_h\), the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Alternate Implementations¶; Depending on the reference (RHF, UHF, ROHF) and the integral treatment; (conventional CONV, density-fitted DF, and Cholesky-decomposed CD),; computational methods are sometimes implemented by multiple coders or even; multiple times. PSI4 transparently selects the most efficient; implementation, so one generally needn’t consult this table. However, to; understand the details of what combinations are accessible or what; alternate implementations are available, read on.; Below, “Y” means method available in module, “D” means module is default; for that method, and “” means method not available. HF, DFT, and MP2; default to density-fitted integrals, while all higher methods default to; conventional integrals. Therefore, for a closed-shell molecule:. runs MP2 with default DF with default implementation DFMP2; 1energy('mp2').",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/notes_c-1.html:370,energy,energy,370,psi4manual/1.3.2/notes_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/notes_c-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. © Copyright 2021, The Psi4 Project.;",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/notes_py-1.html:322,energy,energy,322,psi4manual/1.4.0/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/notes_py-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Theoretical Methods: SCF to FCI; Notes on Options. Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control Keywords, not as arguments to a Python function; (like energy()). Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number or an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to \(10^{-6} E_h\), the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Alternate Implementations¶; Depending on the reference (RHF, UHF, ROHF) and the integral treatment; (conventional CONV, density-fitted DF, and Cholesky-decomposed CD),; computational methods are sometimes implemented by multiple coders or even; multiple times. PSI4 transparently selects the most efficient; implementation, so one generally needn’t consult this table. However, to; understand the details of what combinations are accessible or what; alternate implementations are available, read on.; Below, “Y” means method available in module, “D” means module is default; for that method, and “” means method not available. HF, DFT, and MP2; default to density-fitted integrals, while all higher methods default to; conventional integrals. Therefore, for a closed-shell molecule:. runs MP2 with default DF with default implementation DFMP2;",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/notes_c-1.html:386,energy,energy,386,psi4manual/1.4.0/notes_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/notes_c-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. © Copyright 2021, The Psi4 Project.;",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/notes_py-1.html:322,energy,energy,322,psi4manual/1.5.0/notes_py-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/notes_py-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Theoretical Methods: SCF to FCI; Notes on Options. Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control Keywords, not as arguments to a Python function; (like energy()). Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number or an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to \(10^{-6} E_h\), the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Alternate Implementations¶; Depending on the reference (RHF, UHF, ROHF) and the integral treatment; (conventional CONV, density-fitted DF, and Cholesky-decomposed CD),; computational methods are sometimes implemented by multiple coders or even; multiple times. PSI4 transparently selects the most efficient; implementation, so one generally needn’t consult this table. However, to; understand the details of what combinations are accessible or what; alternate implementations are available, read on.; Below, “Y” means method available in module, “D” means module is default; for that method, and “” means method not available. HF, DFT, and MP2; default to density-fitted integrals, while all higher methods default to; conventional integrals. Therefore, for a closed-shell molecule:. runs MP2 with default DF with default implementation DFMP2;",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/notes_c-1.html:386,energy,energy,386,psi4manual/1.5.0/notes_c-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/notes_c-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. © Copyright 2022, The Psi4 Project.;",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/notes_py.html:322,energy,energy,322,psi4manual/1.6.x/notes_py.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/notes_py.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Theoretical Methods: SCF to FCI; Notes on Options. Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control Keywords, not as arguments to a Python function; (like energy()). Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number or an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to \(10^{-6} E_h\), the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Notes on Psivars¶. Note; Starting in 1.6, there are three standard ways to access an excited state; property. We give examples below, but the method name and property name may change.; * method ROOT 0 -> ROOT m property to get root m. method ROOT 0 -> ROOT m property - h TRANSITION to get root m andindependently specify that the total transition symmetry is h, e.g., A2. method ROOT 0 (h) -> ROOT m (i) property to get the transition; between two roots, specifying the symmetry of both states and the index of the target; roots among states of their own symmetry. For example, to target the second excited-state, which is also the lowest energy state; of its irrep, the first two calls will take m = 2, while the last takes m = 0.; Methods that use this interface are: TD-fctl.; Note that numberings are associated with the calculation much ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/notes_c.html:386,energy,energy,386,psi4manual/1.6.x/notes_c.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/notes_c.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. © Copyright 2007-2022, The Psi4 Proj",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/notes_py.html:322,energy,energy,322,psi4manual/1.7.x/notes_py.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/notes_py.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Theoretical Methods: SCF to FCI; Notes on Options. Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control Keywords, not as arguments to a Python function; (like energy()). Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number or an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to \(10^{-6} E_h\), the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Notes on PSI Variables¶. Note; Starting in 1.6, there are three standard ways to access an excited state; property. We give examples below, but the method name and property name may change. method ROOT 0 -> ROOT m property to get root m.; method ROOT 0 -> ROOT m property - h TRANSITION to get root m and; independently specify that the total transition symmetry is h, e.g., A2.; method ROOT 0 (h) -> ROOT m (i) property to get the transition; between two roots, specifying the symmetry of both states and the index of the target; roots among states of their own symmetry. For example, to target the second excited-state, which is also the lowest energy state; of its irrep, the first two calls will take m = 2, while the last takes m = 0.; Methods that use this interface are: TD-fctl.; Note that numberings are associated with the calculatio",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/notes_c.html:386,energy,energy,386,psi4manual/1.7.x/notes_c.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/notes_c.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. © Copyright 2007-2023, The Psi4 ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/notes_py.html:324,energy,energy,324,psi4manual/1.8.x/notes_py.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/notes_py.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Theoretical Methods: SCF to FCI; Notes on Options. Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control Keywords, not as arguments to a Python function; (like energy()). Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number or an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to \(10^{-6} E_h\), the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Notes on PSI Variables¶. Note; Starting in 1.6, there are three standard ways to access an excited state; property. We give examples below, but the method name and property name may change. method ROOT 0 -> ROOT m property to get root m.; method ROOT 0 -> ROOT m property - h TRANSITION to get root m and; independently specify that the total transition symmetry is h, e.g., A2.; method ROOT 0 (h) -> ROOT m (i) property to get the transition; between two roots, specifying the symmetry of both states and the index of the target; roots among states of their own symmetry. For example, to target the second excited-state, which is also the lowest energy state; of its irrep, the first two calls will take m = 2, while the last takes m = 0.; Methods that use this interface are: TD-fctl.; Note that numberings are associated with the calculat",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/notes_c.html:388,energy,energy,388,psi4manual/1.8.x/notes_c.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/notes_c.html,1,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. Notes on Options¶. Note; The Python options referred to in the Psithon Functions: Invoking a Calculation section below; are placed as arguments to a Python; function (like energy()), not in set blocks or commands. Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The one exception is documented for the subset option in the database(); function, where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; The derivative level type for optimize() and frequency() functions can be specified by energy, none, or 0 for 0th derivative, gradient, first, or 1 for 1st derivative, and hessian, second, or 2 for 2nd derivative. For finite difference, as opposed to analytic, derivatives, the POINTS option can be increased to 5 for greater accuracy at increased cost. Note; Function option for the Psithon function called by the current function;; the default is usually energy(). See Sec. Function Intercalls; for a fuller description. Note that the value of the keyword is a Python object; and so is not wrapped in quotes like a string. Note; The molecule to be acted upon by the current function; the default is the; “active” molecule, which is the nearest preceeding molecule declared in a; molecule mymol {...} block or in an activate(mymol) statement. Note; that the value of this keyword (mymol in the example) is a Python object; and so is not wrapped in quotes like a string. Technically, this is a; Molecule object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Notes on Options. © Copyright 2007-2024, The Psi4 ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/notes_py.html:324,energy,energy,324,psi4manual/1.9.x/notes_py.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/notes_py.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Notes on Options. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Theoretical Methods: SCF to FCI; Notes on Options. Notes on Options¶. Note; The options referred to in the Theoretical Methods: SCF to FCI section below; and indexed in Keywords by Module are placed in set blocks as; described in Job Control Keywords, not as arguments to a Python function; (like energy()). Note; All PSI4 keyword names and values are insensitive to case, both; those that are placed in set blocks and as Python function arguments.; The few exceptions are documented for the database() function,; where case structure must match the database file. Note; Boolean options can be specified by yes, on, true, or 1; for affirmative and no, off, false, or 0 for negative,; all insensitive to case. Note; Certain convergence and tolerance keywords, of type double (real numbers),; may be specified using either a real number or an integer; and integer X is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to \(10^{-6} E_h\), the user may set the e_convergence; keyword to 0.000001, 1.0e-6, or 6. Notes on PSI Variables¶. Note; Starting in 1.6, there are three standard ways to access an excited state; property. We give examples below, but the method name and property name may change. method ROOT 0 -> ROOT m property to get root m.; method ROOT 0 -> ROOT m property - h TRANSITION to get root m and; independently specify that the total transition symmetry is h, e.g., A2.; method ROOT 0 (h) -> ROOT m (i) property to get the transition; between two roots, specifying the symmetry of both states and the index of the target; roots among states of their own symmetry. For example, to target the second excited-state, which is also the lowest energy state; of its irrep, the first two calls will take m = 2, while the last takes m = 0.; Methods that use this interface are: TD-fctl.; Note that numberings are associated with the calculat",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/notes_c.html:388,energy,energy,388,psi4manual/1.9.x/notes_c.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/notes_c.html,1,['energy'],['energy']
Energy Efficiency,"﻿. OCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Cacheing level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantites with up to two virtual-orbital indices (e.g., integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. CEPA Spin-opposite scaling (SOS) value. Type: double; Default: 1.3. CEPA_SS_SCALE¶. CEPA same-spin scaling value from SCS-CCSD. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__occ-1.html:792,energy,energy,792,psi4manual/4.0b4/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__occ-1.html,4,['energy'],['energy']
Energy Efficiency,﻿. OCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CEPA(0) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN ENERGY; MP2 SAME-SPIN ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 TOTAL ENERGY; OCEPA(0) CORRELATION ENERGY; OCEPA(0) TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY; SCS-MP3 TOTAL ENERGY; SCS-MP3-VDW CORRELATION ENERGY; SCS-MP3-VDW TOTAL ENERGY; SCS-OCEPA(0) CORRELATION ENERGY; SCS-OCEPA(0) TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP2-VDW CORRELATION ENERGY; SCS-OMP2-VDW TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY; SCS-OMP3 TOTAL ENERGY; SCS-OMP3-VDW CORRELATION ENERGY; SCS-OMP3-VDW TOTAL ENERGY; SCSN-MP2 CORRELATION ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-MP3 CORRELATION ENERGY; SCSN-MP3 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SCSN-OMP3 CORRELATION ENERGY; SCSN-OMP3 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-MP3 CORRELATION ENERGY; SOS-MP3 TOTAL ENERGY; SOS-OCEPA(0) CORRELATION ENERGY; SOS-OCEPA(0) TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY; SOS-OMP3 TOTAL ENERGY; SOS-PI-MP2 CORRELATION ENERGY; SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP3 CORRELATION ENERGY; SOS-PI-MP3 TOTAL ENERGY; SOS-PI-OMP2 CORRELATION ENERGY; SOS-PI-OMP2 TOTAL ENERGY; SOS-PI-OMP3 CORRELATION ENERGY; SOS-PI-OMP3 TOTAL ENERGY. Previous topic; MRCC; Next topic; OPTKING; This Page. Show Source. Quick search. Enter ,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__occ-1.html:266,ENERGY,ENERGY,266,psi4manual/4.0b4/autodir_psivariables/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__occ-1.html,34,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Cacheing level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantites with up to two virtual-orbital indices (e.g., integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. CEPA Spin-opposite scaling (SOS) value. Type: double; Default: 1.3. CEPA_SS_SCALE¶. CEPA same-spin scaling value from SCS-CCSD. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__occ-1.html:792,energy,energy,792,psi4manual/4.0b5/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__occ-1.html,4,['energy'],['energy']
Energy Efficiency,﻿. OCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CEPA(0) TOTAL ENERGY; CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; MP2 CORRELATION ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 TOTAL ENERGY; OCEPA(0) CORRELATION ENERGY; OCEPA(0) TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY; SCS-MP3 TOTAL ENERGY; SCS-MP3-VDW CORRELATION ENERGY; SCS-MP3-VDW TOTAL ENERGY; SCS-OCEPA(0) CORRELATION ENERGY; SCS-OCEPA(0) TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP2-VDW CORRELATION ENERGY; SCS-OMP2-VDW TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY; SCS-OMP3 TOTAL ENERGY; SCS-OMP3-VDW CORRELATION ENERGY; SCS-OMP3-VDW TOTAL ENERGY; SCSN-MP2 CORRELATION ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-MP3 CORRELATION ENERGY; SCSN-MP3 TOTAL ENERGY; SCSN-OMP2 CORRELATION ENERGY; SCSN-OMP2 TOTAL ENERGY; SCSN-OMP3 CORRELATION ENERGY; SCSN-OMP3 TOTAL ENERGY; SOS-MP2 CORRELATION ENERGY; SOS-MP2 TOTAL ENERGY; SOS-MP3 CORRELATION ENERGY; SOS-MP3 TOTAL ENERGY; SOS-OCEPA(0) CORRELATION ENERGY; SOS-OCEPA(0) TOTAL ENERGY; SOS-OMP2 CORRELATION ENERGY; SOS-OMP2 TOTAL ENERGY; SOS-OMP3 CORRELATION ENERGY; SOS-OMP3 TOTAL ENERGY; SOS-PI-MP2 CORRELATION ENERGY; SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP3 CORRELATION ENERGY; SOS-PI-MP3 TOTAL ENERGY; SOS-PI-OMP2 CORRELATION ENERGY; SOS-PI-OMP2 TOTAL ENERGY; SOS-PI-OMP3 CORRELATION ENERGY; SOS-PI-OMP3 TOTAL ENERGY. Previous topic; MRCC; Next topic; OPTKING; This Page. Show Sour,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__occ-1.html:266,ENERGY,ENERGY,266,psi4manual/4.0b5/autodir_psivariables/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__occ-1.html,34,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Cacheing level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantites with up to two virtual-orbital indices (e.g., integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. CEPA Spin-opposite scaling (SOS) value. Type: double; Default: 1.3. CEPA_SS_SCALE¶. CEPA same-spin scaling value from SCS-CCSD. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimiza",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__occ-1.html:799,energy,energy,799,psi4manual/1.0.0/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__occ-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.3. CEPA_SS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 2. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Removed in 1.4. Will raise an error in 1.5. Type: boolean; Default: true. DO_SCS¶. Removed in 1.4. Will raise an error in 1.5. Pass the method name, like scs-mp2, to energy instead. Type: boolean; Default: false. DO_",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__occ.html:787,energy,energy,787,psi4manual/master/autodir_options_c/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__occ.html,2,['energy'],['energy']
Energy Efficiency,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY; CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; CUSTOM SCS-OREMP2 CORRELATION ENERGY; CUSTOM SCS-OREMP2 TOTAL ENERGY; CUSTOM SCS-REMP2 CORRELATION ENERGY; CUSTOM SCS-REMP2 TOTAL ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2 REFERENCE CORRECTION ENERGY; OMP2 SAME-SPIN CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 REFERENCE CORRECTION ENERGY; OMP2.5 SAME-SPIN CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CO,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_psivariables/module__occ.html:239,ENERGY,ENERGY,239,psi4manual/master/autodir_psivariables/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_psivariables/module__occ.html,33,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. CEPA Spin-opposite scaling (SOS) value. Type: double; Default: 1.3. CEPA_SS_SCALE¶. CEPA same-spin scaling value from SCS-CCSD. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency comput",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__occ-1.html:773,energy,energy,773,psi4manual/1.1.0/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__occ-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. CEPA Spin-opposite scaling (SOS) value. Type: double; Default: 1.3. CEPA_SS_SCALE¶. CEPA same-spin scaling value from SCS-CCSD. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency comp",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__occ-1.html:775,energy,energy,775,psi4manual/1.2.1/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__occ-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” * option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Maximum number of vectors used in amplitude DIIS. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Minimum number of vectors used in amplitude DIIS. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. CEPA opposite-spin scaling value from SCS-CCSD. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. CEPA Spin-opposite scaling (SOS) value. Type: double; Default: 1.3. CEPA_SS_SCALE¶. CEPA same-spin scaling value from SCS-CCSD. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Do apply level shifting?. Type: boolean; Default: true. DO_SCS¶. Do perform spin-component-scaled OMP2 (SCS-OMP2)? In all computation, SCS-OMP2 energy is computed automatically. However, in order to perform geometry optimizations and frequency co",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__occ-1.html:775,energy,energy,775,psi4manual/1.3.2/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__occ-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Removed in 1.4. Will raise an error in 1.5. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Removed in 1.4. Will raise an error in 1.5. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.3. CEPA_SS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 2. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Removed in 1.4. Will raise an error in 1.5. T",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__occ-1.html:778,energy,energy,778,psi4manual/1.4.0/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__occ-1.html,4,['energy'],['energy']
Energy Efficiency,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY; CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY; SCS(N)-MP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY; SCS-MP3 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY; SCS-OMP3 TOTAL ENERGY; SOS-MP2 CORREL,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__occ-1.html:230,ENERGY,ENERGY,230,psi4manual/1.4.0/autodir_psivariables/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__occ-1.html,58,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_DIIS_MAX_VECS¶. Removed in 1.4. Will raise an error in 1.5. Type: integer; Default: 6. CC_DIIS_MIN_VECS¶. Removed in 1.4. Will raise an error in 1.5. Type: integer; Default: 2. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.3. CEPA_SS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 2. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Removed in 1.4. Will raise an error in 1.5. T",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__occ-1.html:778,energy,energy,778,psi4manual/1.5.0/autodir_options_c/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__occ-1.html,4,['energy'],['energy']
Energy Efficiency,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY; CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY; SCS(N)-MP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY; SCS-MP3 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY; SCS-OMP3 TOTAL ENERGY; SOS-MP2 CORREL,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__occ-1.html:230,ENERGY,ENERGY,230,psi4manual/1.5.0/autodir_psivariables/module__occ-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__occ-1.html,58,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.3. CEPA_SS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 2. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Removed in 1.4. Will raise an error in 1.5. Type: boolean; Default: true. DO_SCS¶. Removed in 1.4. Will raise an error in 1.5. Pass the method name, like scs-mp2, to energy instead. Type: boolean; Default: false. DO_SOS¶. Rem",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__occ.html:778,energy,energy,778,psi4manual/1.6.x/autodir_options_c/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__occ.html,2,['energy'],['energy']
Energy Efficiency,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY; CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION ENERGY; OMP3 TOTAL ENERGY; SCS(N)-MP2 CORRELATION ENERGY; SCS(N)-MP2 TOTAL ENERGY; SCS-MP2 CORRELATION ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW CORRELATION ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 CORRELATION ENERGY; SCS-MP3 TOTAL ENERGY; SCS-OMP2 CORRELATION ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP3 CORRELATION ENERGY; SCS-OMP3 TOTAL ENERGY; SOS-MP2 CORREL,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__occ.html:230,ENERGY,ENERGY,230,psi4manual/1.6.x/autodir_psivariables/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__occ.html,29,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.3. CEPA_SS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 2. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Removed in 1.4. Will raise an error in 1.5. Type: boolean; Default: true. DO_SCS¶. Removed in 1.4. Will raise an error in 1.5. Pass the method name, like scs-mp2, to energy instead. Type: boolean; Default: false. DO_SOS¶. Rem",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__occ.html:778,energy,energy,778,psi4manual/1.7.x/autodir_options_c/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__occ.html,2,['energy'],['energy']
Energy Efficiency,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY; CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; CUSTOM SCS-OREMP2 CORRELATION ENERGY; CUSTOM SCS-OREMP2 TOTAL ENERGY; CUSTOM SCS-REMP2 CORRELATION ENERGY; CUSTOM SCS-REMP2 TOTAL ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2 REFERENCE CORRECTION ENERGY; OMP2 SAME-SPIN CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 REFERENCE CORRECTION ENERGY; OMP2.5 SAME-SPIN CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATION,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__occ.html:230,ENERGY,ENERGY,230,psi4manual/1.7.x/autodir_psivariables/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__occ.html,33,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.3. CEPA_SS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 2. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Removed in 1.4. Will raise an error in 1.5. Type: boolean; Default: true. DO_SCS¶. Removed in 1.4. Will raise an error in 1.5. Pass the method name, like scs-mp2, to energy instead. Type: boolean; Default: false. DO_SOS¶. R",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__occ.html:780,energy,energy,780,psi4manual/1.8.x/autodir_options_c/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__occ.html,2,['energy'],['energy']
Energy Efficiency,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY; CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; CUSTOM SCS-OREMP2 CORRELATION ENERGY; CUSTOM SCS-OREMP2 TOTAL ENERGY; CUSTOM SCS-REMP2 CORRELATION ENERGY; CUSTOM SCS-REMP2 TOTAL ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2 REFERENCE CORRECTION ENERGY; OMP2 SAME-SPIN CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 REFERENCE CORRECTION ENERGY; OMP2.5 SAME-SPIN CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATI,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__occ.html:232,ENERGY,ENERGY,232,psi4manual/1.8.x/autodir_psivariables/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__occ.html,33,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. General¶. CACHELEVEL¶. Caching level for libdpd governing the storage of amplitudes, integrals, and intermediates in the CC procedure. A value of 0 retains no quantities in cache, while a level of 6 attempts to store all quantities in cache. For particularly large calculations, a value of 0 may help with certain types of memory problems. The default is 2, which means that all four-index quantities with up to two virtual-orbital indices (e.g., \(\langle ij | ab \rangle\) integrals) may be held in the cache. Type: integer; Default: 2. CCL_ENERGY¶. Do compute CC Lambda energy? In order to this option to be valid one should use “TPDM_ABCD_TYPE = COMPUTE” option. Type: boolean; Default: false. CC_MAXITER¶. Maximum number of iterations to determine the amplitudes. Type: integer; Default: 50. CEPA_OS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.27. CEPA_SOS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.3. CEPA_SS_SCALE¶. Removed in 1.4. Will raise an error in 1.5. Type: double; Default: 1.13. CEPA_TYPE¶. CEPA type such as CEPA0, CEPA1 etc. currently we have only CEPA0. Type: string; Possible Values: CEPA0; Default: CEPA0. CUTOFF¶. Cutoff value for numerical procedures. Type: integer; Default: 14. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 6. DIIS_MIN_VECS¶. Minimum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 2. DO_DIIS¶. Do apply DIIS extrapolation?. Type: boolean; Default: true. DO_LEVEL_SHIFT¶. Removed in 1.4. Will raise an error in 1.5. Type: boolean; Default: true. DO_SCS¶. Removed in 1.4. Will raise an error in 1.5. Pass the method name, like scs-mp2, to energy instead. Type: boolean; Default: false. DO_SOS¶. R",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__occ.html:780,energy,energy,780,psi4manual/1.9.x/autodir_options_c/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__occ.html,2,['energy'],['energy']
Energy Efficiency,﻿. OCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; OCC. OCC¶; Performs orbital-optimized MPn and CC computations and conventional MPn computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-MP2 CORRELATION ENERGY; CUSTOM SCS-MP2 TOTAL ENERGY; CUSTOM SCS-MP2.5 CORRELATION ENERGY; CUSTOM SCS-MP2.5 TOTAL ENERGY; CUSTOM SCS-MP3 CORRELATION ENERGY; CUSTOM SCS-MP3 TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; CUSTOM SCS-OREMP2 CORRELATION ENERGY; CUSTOM SCS-OREMP2 TOTAL ENERGY; CUSTOM SCS-REMP2 CORRELATION ENERGY; CUSTOM SCS-REMP2 TOTAL ENERGY; LCCD CORRELATION ENERGY; LCCD DOUBLES ENERGY; LCCD OPPOSITE-SPIN CORRELATION ENERGY; LCCD SAME-SPIN CORRELATION ENERGY; LCCD SINGLES ENERGY; LCCD TOTAL ENERGY; MP2 CORRELATION ENERGY; MP2 DOUBLES ENERGY; MP2 OPPOSITE-SPIN CORRELATION ENERGY; MP2 SAME-SPIN CORRELATION ENERGY; MP2 SINGLES ENERGY; MP2 TOTAL ENERGY; MP2.5 CORRELATION ENERGY; MP2.5 DOUBLES ENERGY; MP2.5 OPPOSITE-SPIN CORRELATION ENERGY; MP2.5 SAME-SPIN CORRELATION ENERGY; MP2.5 SINGLES ENERGY; MP2.5 TOTAL ENERGY; MP3 CORRELATION ENERGY; MP3 DOUBLES ENERGY; MP3 OPPOSITE-SPIN CORRELATION ENERGY; MP3 SAME-SPIN CORRELATION ENERGY; MP3 SINGLES ENERGY; MP3 TOTAL ENERGY; OLCCD CORRELATION ENERGY; OLCCD OPPOSITE-SPIN CORRELATION ENERGY; OLCCD REFERENCE CORRECTION ENERGY; OLCCD SAME-SPIN CORRELATION ENERGY; OLCCD TOTAL ENERGY; OMP2 CORRELATION ENERGY; OMP2 OPPOSITE-SPIN CORRELATION ENERGY; OMP2 REFERENCE CORRECTION ENERGY; OMP2 SAME-SPIN CORRELATION ENERGY; OMP2 TOTAL ENERGY; OMP2.5 CORRELATION ENERGY; OMP2.5 OPPOSITE-SPIN CORRELATION ENERGY; OMP2.5 REFERENCE CORRECTION ENERGY; OMP2.5 SAME-SPIN CORRELATION ENERGY; OMP2.5 TOTAL ENERGY; OMP3 CORRELATI,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__occ.html:232,ENERGY,ENERGY,232,psi4manual/1.9.x/autodir_psivariables/module__occ.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__occ.html,33,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OEPROP. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; OEPROP. OEPROP¶. CURRENT ENERGY; CURRENT GRADIENT (array); CURRENT HESSIAN (array); ESP AT CENTER n; LOWDIN CHARGES (array); MAYER INDICES (array); MBIS CHARGES (array); MBIS DIPOLES (array); MBIS FREE ATOM n VOLUME; MBIS OCTUPOLES (array); MBIS QUADRUPOLES (array); MBIS VALENCE CHARGES (array); MBIS VALENCE WIDTHS (array); MBIS VOLUME RATIOS (array); MULLIKEN CHARGES (array); WIBERG LOWDIN INDICES (array); mtd 128-POLE; mtd 32-POLE; mtd 64-POLE; mtd DIPOLE; mtd HEXADECAPOLE; mtd OCTUPOLE; mtd QUADRUPOLE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; OEPROP. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_psivariables/module__oeprop.html:150,ENERGY,ENERGY,150,psi4manual/master/autodir_psivariables/module__oeprop.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_psivariables/module__oeprop.html,5,"['CHARGE', 'ENERGY']","['CHARGES', 'ENERGY']"
Energy Efficiency,"﻿. OEPROP. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; OEPROP. OEPROP¶. CURRENT ENERGY; CURRENT GRADIENT (array); CURRENT HESSIAN (array); ESP AT CENTER n; LOWDIN CHARGES (array); MAYER INDICES (array); MBIS CHARGES (array); MBIS DIPOLES (array); MBIS FREE ATOM n VOLUME; MBIS OCTUPOLES (array); MBIS QUADRUPOLES (array); MBIS VALENCE WIDTHS (array); MBIS VOLUME RATIOS (array); MULLIKEN CHARGES (array); WIBERG LOWDIN INDICES (array); mtd 128-POLE; mtd 128-POLE XXXXXXX; mtd 32-POLE; mtd 32-POLE XXXXX; mtd 32-POLE XXXXY; mtd 64-POLE; mtd 64-POLE XXXXXX; mtd DIPOLE; mtd DIPOLE X; mtd DIPOLE Y; mtd DIPOLE Z; mtd HEXADECAPOLE; mtd HEXADECAPOLE XXXX; mtd OCTUPOLE; mtd OCTUPOLE XXX; mtd QUADRUPOLE; mtd QUADRUPOLE XX. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; OEPROP. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__oeprop-1.html:141,ENERGY,ENERGY,141,psi4manual/1.4.0/autodir_psivariables/module__oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__oeprop-1.html,8,"['CHARGE', 'ENERGY']","['CHARGES', 'ENERGY']"
Energy Efficiency,"﻿. OEPROP. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; OEPROP. OEPROP¶. CURRENT ENERGY; CURRENT GRADIENT (array); CURRENT HESSIAN (array); ESP AT CENTER n; LOWDIN CHARGES (array); MAYER INDICES (array); MBIS CHARGES (array); MBIS DIPOLES (array); MBIS FREE ATOM n VOLUME; MBIS OCTUPOLES (array); MBIS QUADRUPOLES (array); MBIS VALENCE WIDTHS (array); MBIS VOLUME RATIOS (array); MULLIKEN CHARGES (array); WIBERG LOWDIN INDICES (array); mtd 128-POLE; mtd 128-POLE XXXXXXX; mtd 32-POLE; mtd 32-POLE XXXXX; mtd 32-POLE XXXXY; mtd 64-POLE; mtd 64-POLE XXXXXX; mtd DIPOLE; mtd DIPOLE X; mtd DIPOLE Y; mtd DIPOLE Z; mtd HEXADECAPOLE; mtd HEXADECAPOLE XXXX; mtd OCTUPOLE; mtd OCTUPOLE XXX; mtd QUADRUPOLE; mtd QUADRUPOLE XX. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; OEPROP. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__oeprop-1.html:141,ENERGY,ENERGY,141,psi4manual/1.5.0/autodir_psivariables/module__oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__oeprop-1.html,8,"['CHARGE', 'ENERGY']","['CHARGES', 'ENERGY']"
Energy Efficiency,"﻿. OEPROP. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; OEPROP. OEPROP¶. CURRENT ENERGY; CURRENT GRADIENT (array); CURRENT HESSIAN (array); ESP AT CENTER n; LOWDIN CHARGES (array); MAYER INDICES (array); MBIS CHARGES (array); MBIS DIPOLES (array); MBIS FREE ATOM n VOLUME; MBIS OCTUPOLES (array); MBIS QUADRUPOLES (array); MBIS VALENCE WIDTHS (array); MBIS VOLUME RATIOS (array); MULLIKEN CHARGES (array); WIBERG LOWDIN INDICES (array); mtd 128-POLE; mtd 32-POLE; mtd 64-POLE; mtd DIPOLE; mtd HEXADECAPOLE; mtd OCTUPOLE; mtd QUADRUPOLE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; OEPROP. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__oeprop.html:141,ENERGY,ENERGY,141,psi4manual/1.6.x/autodir_psivariables/module__oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__oeprop.html,4,"['CHARGE', 'ENERGY']","['CHARGES', 'ENERGY']"
Energy Efficiency,"﻿. OEPROP. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; OEPROP. OEPROP¶. CURRENT ENERGY; CURRENT GRADIENT (array); CURRENT HESSIAN (array); ESP AT CENTER n; LOWDIN CHARGES (array); MAYER INDICES (array); MBIS CHARGES (array); MBIS DIPOLES (array); MBIS FREE ATOM n VOLUME; MBIS OCTUPOLES (array); MBIS QUADRUPOLES (array); MBIS VALENCE WIDTHS (array); MBIS VOLUME RATIOS (array); MULLIKEN CHARGES (array); WIBERG LOWDIN INDICES (array); mtd 128-POLE; mtd 32-POLE; mtd 64-POLE; mtd DIPOLE; mtd HEXADECAPOLE; mtd OCTUPOLE; mtd QUADRUPOLE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; OEPROP. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__oeprop.html:141,ENERGY,ENERGY,141,psi4manual/1.7.x/autodir_psivariables/module__oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__oeprop.html,4,"['CHARGE', 'ENERGY']","['CHARGES', 'ENERGY']"
Energy Efficiency,"﻿. OEPROP. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; OEPROP. OEPROP¶. CURRENT ENERGY; CURRENT GRADIENT (array); CURRENT HESSIAN (array); ESP AT CENTER n; LOWDIN CHARGES (array); MAYER INDICES (array); MBIS CHARGES (array); MBIS DIPOLES (array); MBIS FREE ATOM n VOLUME; MBIS OCTUPOLES (array); MBIS QUADRUPOLES (array); MBIS VALENCE WIDTHS (array); MBIS VOLUME RATIOS (array); MULLIKEN CHARGES (array); WIBERG LOWDIN INDICES (array); mtd 128-POLE; mtd 32-POLE; mtd 64-POLE; mtd DIPOLE; mtd HEXADECAPOLE; mtd OCTUPOLE; mtd QUADRUPOLE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; OEPROP. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__oeprop.html:143,ENERGY,ENERGY,143,psi4manual/1.8.x/autodir_psivariables/module__oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__oeprop.html,4,"['CHARGE', 'ENERGY']","['CHARGES', 'ENERGY']"
Energy Efficiency,"﻿. OEPROP. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; OEPROP. OEPROP¶. CURRENT ENERGY; CURRENT GRADIENT (array); CURRENT HESSIAN (array); ESP AT CENTER n; LOWDIN CHARGES (array); MAYER INDICES (array); MBIS CHARGES (array); MBIS DIPOLES (array); MBIS FREE ATOM n VOLUME; MBIS OCTUPOLES (array); MBIS QUADRUPOLES (array); MBIS VALENCE WIDTHS (array); MBIS VOLUME RATIOS (array); MULLIKEN CHARGES (array); WIBERG LOWDIN INDICES (array); mtd 128-POLE; mtd 32-POLE; mtd 64-POLE; mtd DIPOLE; mtd HEXADECAPOLE; mtd OCTUPOLE; mtd QUADRUPOLE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; OEPROP. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__oeprop.html:143,ENERGY,ENERGY,143,psi4manual/1.9.x/autodir_psivariables/module__oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__oeprop.html,4,"['CHARGE', 'ENERGY']","['CHARGES', 'ENERGY']"
Energy Efficiency,"﻿. OMEGA — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; CCSORT ». OMEGA¶. Energy of applied field [au] for dynamic properties. Type: array; Default: No Default. Previous topic; LOCAL_WEAKP; Next topic; PROPERTY; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; CCSORT ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/ccsort__omega-1.html:160,Energy,Energy,160,psi4manual/4.0b2/autodir_options_c/ccsort__omega-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/ccsort__omega-1.html,2,['Energy'],['Energy']
Energy Efficiency,"﻿. OMEGA — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCSORT ». OMEGA¶. Energy of applied field [au] for dynamic properties. Type: array; Default: No Default. Previous topic; LOCAL_WEAKP; Next topic; PROPERTY; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCSORT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/ccsort__omega-1.html:175,Energy,Energy,175,psi4manual/4.0b3/autodir_options_c/ccsort__omega-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/ccsort__omega-1.html,2,['Energy'],['Energy']
Energy Efficiency,"﻿. OMEGA — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCSORT ». OMEGA¶. Energy of applied field [au] for dynamic properties. Type: array; Default: No Default. Previous topic; LOCAL_WEAKP; Next topic; PROPERTY; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCSORT ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/ccsort__omega-1.html:175,Energy,Energy,175,psi4manual/4.0b4/autodir_options_c/ccsort__omega-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/ccsort__omega-1.html,2,['Energy'],['Energy']
Energy Efficiency,"﻿. OMEGA — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCSORT ». OMEGA¶. Energy of applied field [au] for dynamic properties. Type: array; Default: No Default. Previous topic; LOCAL_WEAKP; Next topic; PROPERTY; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCSORT ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/ccsort__omega-1.html:175,Energy,Energy,175,psi4manual/4.0b5/autodir_options_c/ccsort__omega-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/ccsort__omega-1.html,2,['Energy'],['Energy']
Energy Efficiency,"﻿. OMP2 — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». OMP2¶; Performs quadratically convergence orbital-optimized MP2 computations. OMP2 TOTAL ENERGY; SCS-OMP2 TOTAL ENERGY; SOS-OMP2 TOTAL ENERGY. Previous topic; MP2; Next topic; OPTKING; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__omp2-1.html:235,ENERGY,ENERGY,235,psi4manual/4.0b2/autodir_psivariables/module__omp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__omp2-1.html,6,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OMP2 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». OMP2¶; Performs orbital-optimized MP2 computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; MP2 TOTAL ENERGY; OMP2 TOTAL ENERGY; SCS-MI-MP2 TOTAL ENERGY; SCS-MI-OMP2 TOTAL ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-OMP2 TOTAL ENERGY; SCS-OMP2-VDW TOTAL ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-OMP2 TOTAL ENERGY; SOS-MP2 TOTAL ENERGY; SOS-OMP2 TOTAL ENERGY; SOS-PI-MP2 TOTAL ENERGY; SOS-PI-OMP2 TOTAL ENERGY. Previous topic; MRCC; Next topic; OMP3; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 21, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__omp2-1.html:233,ENERGY,ENERGY,233,psi4manual/4.0b3/autodir_psivariables/module__omp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__omp2-1.html,34,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OMP3 — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». OMP3¶; Performs orbital-optimized MP3 computations. CURRENT CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; MP2 TOTAL ENERGY; MP3 TOTAL ENERGY; OMP3 TOTAL ENERGY; SCS-MI-MP2 TOTAL ENERGY; SCS-MI-MP3 TOTAL ENERGY; SCS-MI-OMP3 TOTAL ENERGY; SCS-MP2 TOTAL ENERGY; SCS-MP2-VDW TOTAL ENERGY; SCS-MP3 TOTAL ENERGY; SCS-MP3-VDW TOTAL ENERGY; SCS-OMP3 TOTAL ENERGY; SCS-OMP3-VDW TOTAL ENERGY; SCSN-MP2 TOTAL ENERGY; SCSN-MP3 TOTAL ENERGY; SCSN-OMP3 TOTAL ENERGY; SOS-MP2 TOTAL ENERGY; SOS-MP3 TOTAL ENERGY; SOS-OMP3 TOTAL ENERGY; SOS-PI-MP2 TOTAL ENERGY; SOS-PI-MP3 TOTAL ENERGY; SOS-PI-OMP3 TOTAL ENERGY. Previous topic; OMP2; Next topic; OPTKING; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 21, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__omp3-1.html:233,ENERGY,ENERGY,233,psi4manual/4.0b3/autodir_psivariables/module__omp3-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__omp3-1.html,48,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OPDM_KE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». OPDM_KE¶. Do compute the kinetic energy contribution from the correlated part of the one-particle density matrix?. Type: boolean; Default: false. Previous topic; OPDM_AVG; Next topic; OPDM_PRINT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__opdm_ke-1.html:186,energy,energy,186,psi4manual/4.0b2/autodir_options_c/detci__opdm_ke-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__opdm_ke-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. OPDM_KE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». OPDM_KE¶. Do compute the kinetic energy contribution from the correlated part of the one-particle density matrix?. Type: boolean; Default: false. Previous topic; OPDM_AVG; Next topic; OPDM_PRINT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__opdm_ke-1.html:201,energy,energy,201,psi4manual/4.0b3/autodir_options_c/detci__opdm_ke-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__opdm_ke-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. OPDM_KE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». OPDM_KE¶. Do compute the kinetic energy contribution from the correlated part of the one-particle density matrix?. Type: boolean; Default: false. Previous topic; OPDM_AVG; Next topic; OPDM_PRINT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__opdm_ke-1.html:201,energy,energy,201,psi4manual/4.0b4/autodir_options_c/detci__opdm_ke-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__opdm_ke-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. OPDM_KE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». OPDM_KE¶. Do compute the kinetic energy contribution from the correlated part of the one-particle density matrix?. Type: boolean; Default: false. Previous topic; OPDM_AVG; Next topic; OPDM_PRINT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__opdm_ke-1.html:201,energy,energy,201,psi4manual/4.0b5/autodir_options_c/detci__opdm_ke-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__opdm_ke-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. OPTKING — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. Previous topic; OMP2; Next topic; PSIMRCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__optking-1.html:235,ENERGY,ENERGY,235,psi4manual/4.0b2/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__optking-1.html,2,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OPTKING — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. Previous topic; OMP3; Next topic; PSIMRCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 21, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__optking-1.html:250,ENERGY,ENERGY,250,psi4manual/4.0b3/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__optking-1.html,2,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OPTKING — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. Previous topic; OCC; Next topic; PSIMRCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 29, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__optking-1.html:250,ENERGY,ENERGY,250,psi4manual/4.0b4/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__optking-1.html,2,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OPTKING — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. Previous topic; OCC; Next topic; PSIMRCC; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__optking-1.html:250,ENERGY,ENERGY,250,psi4manual/4.0b5/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__optking-1.html,2,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CARTESIAN_SYM_TOLERANCE¶. Tolerance for symmetrizing cartesian geometry between steps. Type: conv double; Default: 1e-7. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. CUSTOM_COORDS¶. A string formatted as a dicitonary containing a set of coordinates. Coordinates can be appended to Optking’s coordinate set or used on their own - expected optking 0.3.1. Type: string; Default: No Default. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. EXT_FORCE_BEND¶. Specify formula for external forces for angles between atoms. Type: string; Default: No Default. EXT_FORCE_CARTESIAN¶. Symmetry formula for external forces for cartesian coordinates on atoms . Type: string; Default: No Default. EXT_FORCE_DIHEDRAL¶. Specify formula for external forces for dihedral angles between atoms. Type: string; Default: No Default. EXT_FORCE_DISTANCE¶. Specify formula for external forces for the distance between atoms. Type: string; Default: No Default. EXT_FORCE_OOFP¶. Specify formula for external forces for out-of-plane angles between atoms. Type: string; Default: No Default. FREEZE_ALL_DIHEDRALS¶. Freeze ALL dihedral angles. Type: boolean; Default: false. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: strin",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__optking.html:843,Reduce,Reduce,843,psi4manual/master/autodir_options_c/module__optking.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__optking.html,1,['Reduce'],['Reduce']
Energy Efficiency,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. FIXED_BEND¶. Specify angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DIHEDRAL¶. Specify dihedral angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DISTANCE¶. Specify distances between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. H_UPDATE_DEN_TOL¶. Denominator check for hessian update. Type: conv double; Default: 1e-7. INTERFRAG_STEP_LIMIT¶. Maximum step size in bohr or radian along an interfragment coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT¶. Initial maximum step size in bohr or radian along an internal coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT_MAX¶. Upper bound for dynamic trust radius [au]. Type: double; Default: 1.0. INTRAFRAG_STEP_LIMIT_MIN¶. Lower bound f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__optking-1.html:491,Reduce,Reduce,491,psi4manual/1.4.0/autodir_options_c/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__optking-1.html,2,['Reduce'],['Reduce']
Energy Efficiency,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; OPTKING. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__optking-1.html:212,ENERGY,ENERGY,212,psi4manual/1.4.0/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__optking-1.html,2,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. FIXED_BEND¶. Specify angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DIHEDRAL¶. Specify dihedral angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DISTANCE¶. Specify distances between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. H_UPDATE_DEN_TOL¶. Denominator check for hessian update. Type: conv double; Default: 1e-7. INTERFRAG_STEP_LIMIT¶. Maximum step size in bohr or radian along an interfragment coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT¶. Initial maximum step size in bohr or radian along an internal coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT_MAX¶. Upper bound for dynamic trust radius [au]. Type: double; Default: 1.0. INTRAFRAG_STEP_LIMIT_MIN¶. Lower bound f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__optking-1.html:491,Reduce,Reduce,491,psi4manual/1.5.0/autodir_options_c/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__optking-1.html,2,['Reduce'],['Reduce']
Energy Efficiency,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; OPTKING. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__optking-1.html:212,ENERGY,ENERGY,212,psi4manual/1.5.0/autodir_psivariables/module__optking-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__optking-1.html,2,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. FIXED_BEND¶. Specify angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DIHEDRAL¶. Specify dihedral angles between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FIXED_DISTANCE¶. Specify distances between atoms to be fixed (eq. value specified). Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization steps. Type: integer; Default: 50. H_UPDATE_DEN_TOL¶. Denominator check for hessian update. Type: conv double; Default: 1e-7. INTERFRAG_STEP_LIMIT¶. Maximum step size in bohr or radian along an interfragment coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT¶. Initial maximum step size in bohr or radian along an internal coordinate. Type: double; Default: 0.5. INTRAFRAG_STEP_LIMIT_MAX¶. Upper bound for dynamic trust radius [au]. Type: double; Default: 1.0. INTRAFRAG_STEP_LIMIT_MIN¶. Lower bound f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__optking.html:491,Reduce,Reduce,491,psi4manual/1.6.x/autodir_options_c/module__optking.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__optking.html,1,['Reduce'],['Reduce']
Energy Efficiency,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. CURRENT ENERGY; OPTIMIZATION ITERATIONS. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; OPTKING. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__optking.html:212,ENERGY,ENERGY,212,psi4manual/1.6.x/autodir_psivariables/module__optking.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__optking.html,1,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CARTESIAN_SYM_TOLERANCE¶. Tolerance for symmetrizing cartesian geometry between steps. Type: conv double; Default: 1e-7. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. EXT_FORCE_BEND¶. Specify formula for external forces for angles between atoms. Type: string; Default: No Default. EXT_FORCE_CARTESIAN¶. Symmetry formula for external forces for cartesian coordinates on atoms . Type: string; Default: No Default. EXT_FORCE_DIHEDRAL¶. Specify formula for external forces for dihedral angles between atoms. Type: string; Default: No Default. EXT_FORCE_DISTANCE¶. Specify formula for external forces for the distance between atoms. Type: string; Default: No Default. EXT_FORCE_OOFP¶. Specify formula for external forces for out-of-plane angles between atoms. Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_OOFP¶. Specify out-of-plane angles between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization steps.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__optking.html:612,Reduce,Reduce,612,psi4manual/1.7.x/autodir_options_c/module__optking.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__optking.html,1,['Reduce'],['Reduce']
Energy Efficiency,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CARTESIAN_SYM_TOLERANCE¶. Tolerance for symmetrizing cartesian geometry between steps. Type: conv double; Default: 1e-7. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. EXT_FORCE_BEND¶. Specify formula for external forces for angles between atoms. Type: string; Default: No Default. EXT_FORCE_CARTESIAN¶. Symmetry formula for external forces for cartesian coordinates on atoms . Type: string; Default: No Default. EXT_FORCE_DIHEDRAL¶. Specify formula for external forces for dihedral angles between atoms. Type: string; Default: No Default. EXT_FORCE_DISTANCE¶. Specify formula for external forces for the distance between atoms. Type: string; Default: No Default. EXT_FORCE_OOFP¶. Specify formula for external forces for out-of-plane angles between atoms. Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_OOFP¶. Specify out-of-plane angles between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization step",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__optking.html:614,Reduce,Reduce,614,psi4manual/1.8.x/autodir_options_c/module__optking.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__optking.html,1,['Reduce'],['Reduce']
Energy Efficiency,"﻿. OPTKING. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OPTKING. OPTKING¶; Performs geometry optimizations and vibrational frequency analyses. Optimization Algorithm¶. CARTESIAN_SYM_TOLERANCE¶. Tolerance for symmetrizing cartesian geometry between steps. Type: conv double; Default: 1e-7. CONSECUTIVE_BACKSTEPS¶. Set number of consecutive backward steps allowed in optimization. Type: integer; Default: 0. DYNAMIC_LEVEL¶. Starting level for dynamic optimization (0=nondynamic, higher=>more conservative). Type: integer; Default: 0. ENSURE_BT_CONVERGENCE¶. Reduce step size as necessary to ensure back-transformation of internal coordinate step to cartesian coordinates. Type: boolean; Default: false. EXT_FORCE_BEND¶. Specify formula for external forces for angles between atoms. Type: string; Default: No Default. EXT_FORCE_CARTESIAN¶. Symmetry formula for external forces for cartesian coordinates on atoms . Type: string; Default: No Default. EXT_FORCE_DIHEDRAL¶. Specify formula for external forces for dihedral angles between atoms. Type: string; Default: No Default. EXT_FORCE_DISTANCE¶. Specify formula for external forces for the distance between atoms. Type: string; Default: No Default. EXT_FORCE_OOFP¶. Specify formula for external forces for out-of-plane angles between atoms. Type: string; Default: No Default. FROZEN_BEND¶. Specify angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_CARTESIAN¶. Specify atom and X, XY, XYZ, … to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DIHEDRAL¶. Specify dihedral angles between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_DISTANCE¶. Specify distances between atoms to be frozen (unchanged). Type: string; Default: No Default. FROZEN_OOFP¶. Specify out-of-plane angles between atoms to be frozen (unchanged). Type: string; Default: No Default. GEOM_MAXITER¶. Maximum number of geometry optimization step",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__optking.html:614,Reduce,Reduce,614,psi4manual/1.9.x/autodir_options_c/module__optking.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__optking.html,1,['Reduce'],['Reduce']
Energy Efficiency,"﻿. Optimize — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». Optimize¶. optimize(name[, func, mode, dertype, molecule])[source]¶; Function to perform a geometry optimization. Aliases :opt(). Returns:(float) Total electronic energy of optimized structure in Hartrees. Psi variables:. CURRENT ENERGY. Note; Analytic gradients area available for all methods in the table; below. Optimizations with other methods in the energy table proceed; by finite differences. name; calls method. scf; Hartree–Fock (HF) or density functional theory (DFT). dcft; density cumulant functional theory. mp2; 2nd-order Moller-Plesset perturbation theory (MP2). ccsd; coupled cluster singles and doubles (CCSD). ccsd(t); CCSD with perturbative triples. eom-ccsd; equation of motion (EOM) CCSD. Parameters:; name (string) – 'scf' || 'df-mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; driver.energy(). func (function) – gradient || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses``’gradient’`` or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. mode (string) – 'continuous' || 'sow' || 'reap'; For a finite difference of energies optimization, indicates whether; the calculations required to complete the; optimization are to be run in one file ('continuous') or are to be; farmed out in an embarrassingly parallel fashion; ('sow'/'reap'). For the latter, run an initial job with; 'sow' and follow instructions in its output file. dertype (dertype) – 'gradient' || 'energy'; Indicates whether analytic (if available) or finite difference; optimization is to be performed. molecule (molecule) – h2o || etc.; The targ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/opt-1.html:317,energy,energy,317,psi4manual/4.0b2/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/opt-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Optimize — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». Optimize¶. optimize(name[, func, mode, dertype, molecule])[source]¶; Function to perform a geometry optimization. Aliases :opt(). Returns:(float) Total electronic energy of optimized structure in Hartrees. Psi variables:. CURRENT ENERGY. Note; Analytic gradients area available for all methods in the table; below. Optimizations with other methods in the energy table proceed; by finite differences. name; calls method. scf; Hartree–Fock (HF) or density functional theory (DFT). dcft; density cumulant functional theory. omp2; orbital-optimized second order Moller–Plesset perturbation theory. mp2; 2nd-order Moller-Plesset perturbation theory (MP2). df-mp2; MP2 with density fitting. conv-mp2; conventional MP2 (non-density-fitting). ccsd; coupled cluster singles and doubles (CCSD). ccsd(t); CCSD with perturbative triples. eom-ccsd; equation of motion (EOM) CCSD. name; calls method. b3lyp; B3LYP Hybrid-GGA Exchange-Correlation Functional. b3lyp-chg; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Chai and Head-Gordon Dispersion Correction. b3lyp-d; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D2 Dispersion Correction. b3lyp-d1; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D1 Dispersion Correction. b3lyp-d3; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D3 (zero-damping) Dispersion Correction. b3lyp-d3bj; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D3 (BJ-damping) Dispersion Correction. b3_x; Becke88 GGA Exchange (B3LYP weighting). b88_x; Becke88 GGA Exchange. b97-0; B97-0 Hybrid-GGA Exchange-Correlation Functional. b97-1; B97-1 Hybrid-GGA Exchange-Correlation Functional. b97-2; B97-2 Hybrid-GGA Exchange-Correlation Functional. b97-d; B97-D Pure-GGA Exchange-Correlation Functional w/ Grimme’s -D2 Dispersion Correction. b97-d3; B97-D Pure-GG",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/opt-1.html:332,energy,energy,332,psi4manual/4.0b3/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/opt-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Optimize — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoking a Calculation ». Optimize¶. optimize(name[, func, mode, dertype, molecule])[source]¶; Function to perform a geometry optimization. Aliases :opt(). Returns:(float) Total electronic energy of optimized structure in Hartrees. Psi variables:. CURRENT ENERGY. Note; Analytic gradients area available for all methods in the table; below. Optimizations with other methods in the energy table proceed; by finite differences. name; calls method. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp2.5; MP2.5 [manual]. mp3; third-order MP perturbation theory [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation(0) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. eom-ccsd; equation of motion (EOM) CCSD [manual]. name; calls method DFT [manual]. b3lyp; B3LYP Hybrid-GGA Exchange-Correlation Functional. b3lyp-chg; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Chai and Head-Gordon Dispersion Correction. b3lyp-d; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D2 Dispersion Correction. b3lyp-d1; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D1 Dispersion Correction. b3lyp-d3; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D3 (zero-damping) Dispersion Correction. b3lyp-d3bj; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/opt-1.html:332,energy,energy,332,psi4manual/4.0b4/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/opt-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Optimize — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Psithon Functions: Invoking a Calculation ». Optimize¶. optimize(name[, func, mode, dertype, molecule])[source]¶; Function to perform a geometry optimization. Aliases :opt(). Returns:(float) Total electronic energy of optimized structure in Hartrees. Psi variables:. CURRENT ENERGY. Note; Analytic gradients area available for all methods in the table; below. Optimizations with other methods in the energy table proceed; by finite differences. name; calls method. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. dcft; density cumulant functional theory [manual]. mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual]. df-mp2; MP2 with density fitting [manual]. conv-mp2; conventional MP2 (non-density-fitting) [manual]. mp2.5; MP2.5 [manual]. mp3; third-order MP perturbation theory [manual]. omp2; orbital-optimized second-order MP perturbation theory [manual]. omp2.5; orbital-optimized MP2.5 [manual]. omp3; orbital-optimized third-order MP perturbation theory [manual]. ocepa; orbital-optimized coupled electron pair approximation [manual]. cepa0; coupled electron pair approximation(0) [manual]. ccsd; coupled cluster singles and doubles (CCSD) [manual]. ccsd(t); CCSD with perturbative triples (CCSD(T)) [manual]. eom-ccsd; equation of motion (EOM) CCSD [manual]. name; calls method DFT [manual]. b3lyp; B3LYP Hybrid-GGA Exchange-Correlation Functional. b3lyp-chg; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Chai and Head-Gordon Dispersion Correction. b3lyp-d; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D2 Dispersion Correction. b3lyp-d1; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D1 Dispersion Correction. b3lyp-d3; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme’s -D3 (zero-damping) Dispersion Correction. b3lyp-d3bj; B3LYP Hybrid-GGA Exchange-Correlation Functional w/ Grimme",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/opt-1.html:332,energy,energy,332,psi4manual/4.0b5/opt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/opt-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PCM. PCM¶; Performs polarizable continuum model (PCM) computations. General¶. PCM_CC_TYPE¶. PCM-CCSD algorithm type. Type: string; Possible Values: PTE; Default: PTE. Expert¶. PCMSOLVER_PARSED_FNAME¶. Name of the PCMSolver input file as parsed by pcmsolver.py. Type: string; Default: No Default. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. table of contents. PCM; General; PCM_CC_TYPE. Expert; PCMSOLVER_PARSED_FNAME; PCM_SCF_TYPE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PCM. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__pcm.html:465,charge,charges,465,psi4manual/master/autodir_options_c/module__pcm.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__pcm.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; PCM. PCM¶; Performs polarizable continuum model (PCM) computations. PCM POLARIZATION ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; PCM. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_psivariables/module__pcm.html:207,ENERGY,ENERGY,207,psi4manual/master/autodir_psivariables/module__pcm.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_psivariables/module__pcm.html,1,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. PCM¶; Performs polarizable continuum model (PCM) computations. General¶. PCM_CC_TYPE¶. PCM-CCSD algorithm type. Type: string; Possible Values: PTE; Default: PTE. Expert¶. PCMSOLVER_PARSED_FNAME¶. Name of the PCMSolver input file as parsed by pcmsolver.py. Type: string; Default: No Default. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. table of contents. PCM; General; PCM_CC_TYPE. Expert; PCMSOLVER_PARSED_FNAME; PCM_SCF_TYPE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__pcm-1.html:453,charge,charges,453,psi4manual/1.3.2/autodir_options_c/module__pcm-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__pcm-1.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PCM. PCM¶; Performs polarizable continuum model (PCM) computations. General¶. PCM_CC_TYPE¶. PCM-CCSD algorithm type. Type: string; Possible Values: PTE; Default: PTE. Expert¶. PCMSOLVER_PARSED_FNAME¶. Name of the PCMSolver input file as parsed by pcmsolver.py. Type: string; Default: No Default. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. table of contents. PCM; General; PCM_CC_TYPE. Expert; PCMSOLVER_PARSED_FNAME; PCM_SCF_TYPE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PCM. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__pcm-1.html:456,charge,charges,456,psi4manual/1.4.0/autodir_options_c/module__pcm-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__pcm-1.html,4,['charge'],['charges']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; PCM. PCM¶; Performs polarizable continuum model (PCM) computations. PCM POLARIZATION ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; PCM. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__pcm-1.html:198,ENERGY,ENERGY,198,psi4manual/1.4.0/autodir_psivariables/module__pcm-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__pcm-1.html,2,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PCM. PCM¶; Performs polarizable continuum model (PCM) computations. General¶. PCM_CC_TYPE¶. PCM-CCSD algorithm type. Type: string; Possible Values: PTE; Default: PTE. Expert¶. PCMSOLVER_PARSED_FNAME¶. Name of the PCMSolver input file as parsed by pcmsolver.py. Type: string; Default: No Default. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. table of contents. PCM; General; PCM_CC_TYPE. Expert; PCMSOLVER_PARSED_FNAME; PCM_SCF_TYPE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PCM. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__pcm-1.html:456,charge,charges,456,psi4manual/1.5.0/autodir_options_c/module__pcm-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__pcm-1.html,4,['charge'],['charges']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; PCM. PCM¶; Performs polarizable continuum model (PCM) computations. PCM POLARIZATION ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; PCM. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__pcm-1.html:198,ENERGY,ENERGY,198,psi4manual/1.5.0/autodir_psivariables/module__pcm-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__pcm-1.html,2,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PCM. PCM¶; Performs polarizable continuum model (PCM) computations. General¶. PCM_CC_TYPE¶. PCM-CCSD algorithm type. Type: string; Possible Values: PTE; Default: PTE. Expert¶. PCMSOLVER_PARSED_FNAME¶. Name of the PCMSolver input file as parsed by pcmsolver.py. Type: string; Default: No Default. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. table of contents. PCM; General; PCM_CC_TYPE. Expert; PCMSOLVER_PARSED_FNAME; PCM_SCF_TYPE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PCM. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__pcm.html:456,charge,charges,456,psi4manual/1.6.x/autodir_options_c/module__pcm.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__pcm.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; PCM. PCM¶; Performs polarizable continuum model (PCM) computations. PCM POLARIZATION ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; PCM. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__pcm.html:198,ENERGY,ENERGY,198,psi4manual/1.6.x/autodir_psivariables/module__pcm.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__pcm.html,1,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PCM. PCM¶; Performs polarizable continuum model (PCM) computations. General¶. PCM_CC_TYPE¶. PCM-CCSD algorithm type. Type: string; Possible Values: PTE; Default: PTE. Expert¶. PCMSOLVER_PARSED_FNAME¶. Name of the PCMSolver input file as parsed by pcmsolver.py. Type: string; Default: No Default. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. table of contents. PCM; General; PCM_CC_TYPE. Expert; PCMSOLVER_PARSED_FNAME; PCM_SCF_TYPE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PCM. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__pcm.html:456,charge,charges,456,psi4manual/1.7.x/autodir_options_c/module__pcm.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__pcm.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; PCM. PCM¶; Performs polarizable continuum model (PCM) computations. PCM POLARIZATION ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; PCM. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__pcm.html:198,ENERGY,ENERGY,198,psi4manual/1.7.x/autodir_psivariables/module__pcm.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__pcm.html,1,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PCM. PCM¶; Performs polarizable continuum model (PCM) computations. General¶. PCM_CC_TYPE¶. PCM-CCSD algorithm type. Type: string; Possible Values: PTE; Default: PTE. Expert¶. PCMSOLVER_PARSED_FNAME¶. Name of the PCMSolver input file as parsed by pcmsolver.py. Type: string; Default: No Default. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. table of contents. PCM; General; PCM_CC_TYPE. Expert; PCMSOLVER_PARSED_FNAME; PCM_SCF_TYPE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PCM. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__pcm.html:458,charge,charges,458,psi4manual/1.8.x/autodir_options_c/module__pcm.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__pcm.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; PCM. PCM¶; Performs polarizable continuum model (PCM) computations. PCM POLARIZATION ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; PCM. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__pcm.html:200,ENERGY,ENERGY,200,psi4manual/1.8.x/autodir_psivariables/module__pcm.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__pcm.html,1,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PCM. PCM¶; Performs polarizable continuum model (PCM) computations. General¶. PCM_CC_TYPE¶. PCM-CCSD algorithm type. Type: string; Possible Values: PTE; Default: PTE. Expert¶. PCMSOLVER_PARSED_FNAME¶. Name of the PCMSolver input file as parsed by pcmsolver.py. Type: string; Default: No Default. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. table of contents. PCM; General; PCM_CC_TYPE. Expert; PCMSOLVER_PARSED_FNAME; PCM_SCF_TYPE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PCM. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__pcm.html:458,charge,charges,458,psi4manual/1.9.x/autodir_options_c/module__pcm.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__pcm.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PCM. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; PCM. PCM¶; Performs polarizable continuum model (PCM) computations. PCM POLARIZATION ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; PCM. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__pcm.html:200,ENERGY,ENERGY,200,psi4manual/1.9.x/autodir_psivariables/module__pcm.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__pcm.html,1,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PCM_SCF_TYPE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; GLOBALS ». PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. Previous topic; PCM; Next topic; PRINT. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; GLOBALS ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/globals__pcm_scf_type-1.html:234,charge,charges,234,psi4manual/1.0.0/autodir_options_c/globals__pcm_scf_type-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/globals__pcm_scf_type-1.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PCM_SCF_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PCM; PCM_SCF_TYPE. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PCM; PCM_SCF_TYPE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/pcm__pcm_scf_type.html:197,charge,charges,197,psi4manual/master/autodir_options_c/pcm__pcm_scf_type.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/pcm__pcm_scf_type.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PCM_SCF_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PCM; PCM_SCF_TYPE. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PCM; PCM_SCF_TYPE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/pcm__pcm_scf_type-1.html:188,charge,charges,188,psi4manual/1.4.0/autodir_options_c/pcm__pcm_scf_type-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/pcm__pcm_scf_type-1.html,4,['charge'],['charges']
Energy Efficiency,"﻿. PCM_SCF_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PCM; PCM_SCF_TYPE. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PCM; PCM_SCF_TYPE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/pcm__pcm_scf_type-1.html:188,charge,charges,188,psi4manual/1.5.0/autodir_options_c/pcm__pcm_scf_type-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/pcm__pcm_scf_type-1.html,4,['charge'],['charges']
Energy Efficiency,"﻿. PCM_SCF_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PCM; PCM_SCF_TYPE. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PCM; PCM_SCF_TYPE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/pcm__pcm_scf_type.html:188,charge,charges,188,psi4manual/1.6.x/autodir_options_c/pcm__pcm_scf_type.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/pcm__pcm_scf_type.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PCM_SCF_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PCM; PCM_SCF_TYPE. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PCM; PCM_SCF_TYPE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/pcm__pcm_scf_type.html:188,charge,charges,188,psi4manual/1.7.x/autodir_options_c/pcm__pcm_scf_type.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/pcm__pcm_scf_type.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PCM_SCF_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PCM; PCM_SCF_TYPE. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PCM; PCM_SCF_TYPE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/pcm__pcm_scf_type.html:190,charge,charges,190,psi4manual/1.8.x/autodir_options_c/pcm__pcm_scf_type.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/pcm__pcm_scf_type.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PCM_SCF_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PCM; PCM_SCF_TYPE. PCM_SCF_TYPE¶. Use total or separate potentials and charges in the PCM-SCF step. Type: string; Possible Values: TOTAL, SEPARATE; Default: TOTAL. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PCM; PCM_SCF_TYPE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/pcm__pcm_scf_type.html:190,charge,charges,190,psi4manual/1.9.x/autodir_options_c/pcm__pcm_scf_type.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/pcm__pcm_scf_type.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PE. PE¶; Performs polarizable embedding model (PE) computations. General¶. BORDER¶. Activate border options for sites in proximity to the QM/MM border. Type: boolean; Default: false. BORDER_N_REDIST¶. number of neighbor sites to redistribute to. The default (-1) redistributes to all sites which are not in the border region. Type: integer; Default: -1. BORDER_REDIST_ORDER¶. order from which moments are removed, e.g., if set to 1 (default), only charges are redistributed and all higher order moments are removed. Type: integer; Default: 1. BORDER_REDIST_POL¶. redistribute polarizabilities? If false, polarizabilities are removed (default). Type: boolean; Default: false. BORDER_RMIN¶. minimum radius from QM atoms to MM sites to be taken into account for removal/redistribution. Type: double; Default: 2.2. BORDER_RMIN_UNIT¶. unit of BORDER_RMIN, default is atomic units (AU). Type: string; Possible Values: AU, AA; Default: AU. BORDER_TYPE¶. border type, either remove or redistribute moments/polarizabilities. Type: string; Possible Values: REMOVE, REDIST; Default: REMOVE. DAMPING_FACTOR_INDUCED¶. Thole damping factor for induced moments. Type: double; Default: 2.1304. DAMPING_FACTOR_MULTIPOLE¶. Thole damping factor for multipole fields. Type: double; Default: 2.1304. DAMP_INDUCED¶. Enable Thole damping for induced moments. Type: boolean; Default: false. DAMP_MULTIPOLE¶. Enable Thole damping for multipole fields. Type: boolean; Default: false. INDUCED_CONVERGENCE¶. Threshold for induced moments convergence. Type: conv double; Default: 1e-8. ISOTROPIC_POL¶. Make polarizabilities isotropic. Type: boolean; Default: false. MAXITER¶. Maximum number of iterations for induced moments. Type: integer; Default: 50. PE_ECP¶. use PE(ECP) repulsive potentials. Type: boolean; Default: false. POTFILE¶. Name of the potential file OR contents of potential file to be written anony",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__pe.html:564,charge,charges,564,psi4manual/master/autodir_options_c/module__pe.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__pe.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; PE. PE¶; Performs polarizable embedding model (PE) computations. PE ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; PE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_psivariables/module__pe.html:189,ENERGY,ENERGY,189,psi4manual/master/autodir_psivariables/module__pe.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_psivariables/module__pe.html,1,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PE. PE¶; Performs polarizable embedding model (PE) computations. General¶. BORDER¶. Activate border options for sites in proximity to the QM/MM border. Type: boolean; Default: false. BORDER_N_REDIST¶. number of neighbor sites to redistribute to. The default (-1) redistributes to all sites which are not in the border region. Type: integer; Default: -1. BORDER_REDIST_ORDER¶. order from which moments are removed, e.g., if set to 1 (default), only charges are redistributed and all higher order moments are removed. Type: integer; Default: 1. BORDER_REDIST_POL¶. redistribute polarizabilities? If false, polarizabilities are removed (default). Type: boolean; Default: false. BORDER_RMIN¶. minimum radius from QM atoms to MM sites to be taken into account for removal/redistribution. Type: double; Default: 2.2. BORDER_RMIN_UNIT¶. unit of BORDER_RMIN, default is atomic units (AU). Type: string; Possible Values: AU, AA; Default: AU. BORDER_TYPE¶. border type, either remove or redistribute moments/polarizabilities. Type: string; Possible Values: REMOVE, REDIST; Default: REMOVE. DAMPING_FACTOR_INDUCED¶. Thole damping factor for induced moments. Type: double; Default: 2.1304. DAMPING_FACTOR_MULTIPOLE¶. Thole damping factor for multipole fields. Type: double; Default: 2.1304. DAMP_INDUCED¶. Enable Thole damping for induced moments. Type: boolean; Default: false. DAMP_MULTIPOLE¶. Enable Thole damping for multipole fields. Type: boolean; Default: false. INDUCED_CONVERGENCE¶. Threshold for induced moments convergence. Type: conv double; Default: 1e-8. ISOTROPIC_POL¶. Make polarizabilities isotropic. Type: boolean; Default: false. MAXITER¶. Maximum number of iterations for induced moments. Type: integer; Default: 50. PE_ECP¶. use PE(ECP) repulsive potentials. Type: boolean; Default: false. POTFILE¶. Name of the potential file OR contents of potential file to be written anonymously on",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__pe-1.html:555,charge,charges,555,psi4manual/1.4.0/autodir_options_c/module__pe-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__pe-1.html,4,['charge'],['charges']
Energy Efficiency,"﻿. PE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; PE. PE¶; Performs polarizable embedding model (PE) computations. PE ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; PE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__pe-1.html:180,ENERGY,ENERGY,180,psi4manual/1.4.0/autodir_psivariables/module__pe-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__pe-1.html,2,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PE. PE¶; Performs polarizable embedding model (PE) computations. General¶. BORDER¶. Activate border options for sites in proximity to the QM/MM border. Type: boolean; Default: false. BORDER_N_REDIST¶. number of neighbor sites to redistribute to. The default (-1) redistributes to all sites which are not in the border region. Type: integer; Default: -1. BORDER_REDIST_ORDER¶. order from which moments are removed, e.g., if set to 1 (default), only charges are redistributed and all higher order moments are removed. Type: integer; Default: 1. BORDER_REDIST_POL¶. redistribute polarizabilities? If false, polarizabilities are removed (default). Type: boolean; Default: false. BORDER_RMIN¶. minimum radius from QM atoms to MM sites to be taken into account for removal/redistribution. Type: double; Default: 2.2. BORDER_RMIN_UNIT¶. unit of BORDER_RMIN, default is atomic units (AU). Type: string; Possible Values: AU, AA; Default: AU. BORDER_TYPE¶. border type, either remove or redistribute moments/polarizabilities. Type: string; Possible Values: REMOVE, REDIST; Default: REMOVE. DAMPING_FACTOR_INDUCED¶. Thole damping factor for induced moments. Type: double; Default: 2.1304. DAMPING_FACTOR_MULTIPOLE¶. Thole damping factor for multipole fields. Type: double; Default: 2.1304. DAMP_INDUCED¶. Enable Thole damping for induced moments. Type: boolean; Default: false. DAMP_MULTIPOLE¶. Enable Thole damping for multipole fields. Type: boolean; Default: false. INDUCED_CONVERGENCE¶. Threshold for induced moments convergence. Type: conv double; Default: 1e-8. ISOTROPIC_POL¶. Make polarizabilities isotropic. Type: boolean; Default: false. MAXITER¶. Maximum number of iterations for induced moments. Type: integer; Default: 50. PE_ECP¶. use PE(ECP) repulsive potentials. Type: boolean; Default: false. POTFILE¶. Name of the potential file OR contents of potential file to be written anonymously on",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__pe-1.html:555,charge,charges,555,psi4manual/1.5.0/autodir_options_c/module__pe-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__pe-1.html,4,['charge'],['charges']
Energy Efficiency,"﻿. PE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; PE. PE¶; Performs polarizable embedding model (PE) computations. PE ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; PE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__pe-1.html:180,ENERGY,ENERGY,180,psi4manual/1.5.0/autodir_psivariables/module__pe-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__pe-1.html,2,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PE. PE¶; Performs polarizable embedding model (PE) computations. General¶. BORDER¶. Activate border options for sites in proximity to the QM/MM border. Type: boolean; Default: false. BORDER_N_REDIST¶. number of neighbor sites to redistribute to. The default (-1) redistributes to all sites which are not in the border region. Type: integer; Default: -1. BORDER_REDIST_ORDER¶. order from which moments are removed, e.g., if set to 1 (default), only charges are redistributed and all higher order moments are removed. Type: integer; Default: 1. BORDER_REDIST_POL¶. redistribute polarizabilities? If false, polarizabilities are removed (default). Type: boolean; Default: false. BORDER_RMIN¶. minimum radius from QM atoms to MM sites to be taken into account for removal/redistribution. Type: double; Default: 2.2. BORDER_RMIN_UNIT¶. unit of BORDER_RMIN, default is atomic units (AU). Type: string; Possible Values: AU, AA; Default: AU. BORDER_TYPE¶. border type, either remove or redistribute moments/polarizabilities. Type: string; Possible Values: REMOVE, REDIST; Default: REMOVE. DAMPING_FACTOR_INDUCED¶. Thole damping factor for induced moments. Type: double; Default: 2.1304. DAMPING_FACTOR_MULTIPOLE¶. Thole damping factor for multipole fields. Type: double; Default: 2.1304. DAMP_INDUCED¶. Enable Thole damping for induced moments. Type: boolean; Default: false. DAMP_MULTIPOLE¶. Enable Thole damping for multipole fields. Type: boolean; Default: false. INDUCED_CONVERGENCE¶. Threshold for induced moments convergence. Type: conv double; Default: 1e-8. ISOTROPIC_POL¶. Make polarizabilities isotropic. Type: boolean; Default: false. MAXITER¶. Maximum number of iterations for induced moments. Type: integer; Default: 50. PE_ECP¶. use PE(ECP) repulsive potentials. Type: boolean; Default: false. POTFILE¶. Name of the potential file OR contents of potential file to be written anonymously on",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__pe.html:555,charge,charges,555,psi4manual/1.6.x/autodir_options_c/module__pe.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__pe.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; PE. PE¶; Performs polarizable embedding model (PE) computations. PE ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; PE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__pe.html:180,ENERGY,ENERGY,180,psi4manual/1.6.x/autodir_psivariables/module__pe.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__pe.html,1,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PE. PE¶; Performs polarizable embedding model (PE) computations. General¶. BORDER¶. Activate border options for sites in proximity to the QM/MM border. Type: boolean; Default: false. BORDER_N_REDIST¶. number of neighbor sites to redistribute to. The default (-1) redistributes to all sites which are not in the border region. Type: integer; Default: -1. BORDER_REDIST_ORDER¶. order from which moments are removed, e.g., if set to 1 (default), only charges are redistributed and all higher order moments are removed. Type: integer; Default: 1. BORDER_REDIST_POL¶. redistribute polarizabilities? If false, polarizabilities are removed (default). Type: boolean; Default: false. BORDER_RMIN¶. minimum radius from QM atoms to MM sites to be taken into account for removal/redistribution. Type: double; Default: 2.2. BORDER_RMIN_UNIT¶. unit of BORDER_RMIN, default is atomic units (AU). Type: string; Possible Values: AU, AA; Default: AU. BORDER_TYPE¶. border type, either remove or redistribute moments/polarizabilities. Type: string; Possible Values: REMOVE, REDIST; Default: REMOVE. DAMPING_FACTOR_INDUCED¶. Thole damping factor for induced moments. Type: double; Default: 2.1304. DAMPING_FACTOR_MULTIPOLE¶. Thole damping factor for multipole fields. Type: double; Default: 2.1304. DAMP_INDUCED¶. Enable Thole damping for induced moments. Type: boolean; Default: false. DAMP_MULTIPOLE¶. Enable Thole damping for multipole fields. Type: boolean; Default: false. INDUCED_CONVERGENCE¶. Threshold for induced moments convergence. Type: conv double; Default: 1e-8. ISOTROPIC_POL¶. Make polarizabilities isotropic. Type: boolean; Default: false. MAXITER¶. Maximum number of iterations for induced moments. Type: integer; Default: 50. PE_ECP¶. use PE(ECP) repulsive potentials. Type: boolean; Default: false. POTFILE¶. Name of the potential file OR contents of potential file to be written anonymously on",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__pe.html:555,charge,charges,555,psi4manual/1.7.x/autodir_options_c/module__pe.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__pe.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; PE. PE¶; Performs polarizable embedding model (PE) computations. PE ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; PE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__pe.html:180,ENERGY,ENERGY,180,psi4manual/1.7.x/autodir_psivariables/module__pe.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__pe.html,1,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PE. PE¶; Performs polarizable embedding model (PE) computations. General¶. BORDER¶. Activate border options for sites in proximity to the QM/MM border. Type: boolean; Default: false. BORDER_N_REDIST¶. number of neighbor sites to redistribute to. The default (-1) redistributes to all sites which are not in the border region. Type: integer; Default: -1. BORDER_REDIST_ORDER¶. order from which moments are removed, e.g., if set to 1 (default), only charges are redistributed and all higher order moments are removed. Type: integer; Default: 1. BORDER_REDIST_POL¶. redistribute polarizabilities? If false, polarizabilities are removed (default). Type: boolean; Default: false. BORDER_RMIN¶. minimum radius from QM atoms to MM sites to be taken into account for removal/redistribution. Type: double; Default: 2.2. BORDER_RMIN_UNIT¶. unit of BORDER_RMIN, default is atomic units (AU). Type: string; Possible Values: AU, AA; Default: AU. BORDER_TYPE¶. border type, either remove or redistribute moments/polarizabilities. Type: string; Possible Values: REMOVE, REDIST; Default: REMOVE. DAMPING_FACTOR_INDUCED¶. Thole damping factor for induced moments. Type: double; Default: 2.1304. DAMPING_FACTOR_MULTIPOLE¶. Thole damping factor for multipole fields. Type: double; Default: 2.1304. DAMP_INDUCED¶. Enable Thole damping for induced moments. Type: boolean; Default: false. DAMP_MULTIPOLE¶. Enable Thole damping for multipole fields. Type: boolean; Default: false. INDUCED_CONVERGENCE¶. Threshold for induced moments convergence. Type: conv double; Default: 1e-8. ISOTROPIC_POL¶. Make polarizabilities isotropic. Type: boolean; Default: false. MAXITER¶. Maximum number of iterations for induced moments. Type: integer; Default: 50. PE_ECP¶. use PE(ECP) repulsive potentials. Type: boolean; Default: false. POTFILE¶. Name of the potential file OR contents of potential file to be written anonymously ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__pe.html:557,charge,charges,557,psi4manual/1.8.x/autodir_options_c/module__pe.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__pe.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; PE. PE¶; Performs polarizable embedding model (PE) computations. PE ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; PE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__pe.html:182,ENERGY,ENERGY,182,psi4manual/1.8.x/autodir_psivariables/module__pe.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__pe.html,1,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PE. PE¶; Performs polarizable embedding model (PE) computations. General¶. BORDER¶. Activate border options for sites in proximity to the QM/MM border. Type: boolean; Default: false. BORDER_N_REDIST¶. number of neighbor sites to redistribute to. The default (-1) redistributes to all sites which are not in the border region. Type: integer; Default: -1. BORDER_REDIST_ORDER¶. order from which moments are removed, e.g., if set to 1 (default), only charges are redistributed and all higher order moments are removed. Type: integer; Default: 1. BORDER_REDIST_POL¶. redistribute polarizabilities? If false, polarizabilities are removed (default). Type: boolean; Default: false. BORDER_RMIN¶. minimum radius from QM atoms to MM sites to be taken into account for removal/redistribution. Type: double; Default: 2.2. BORDER_RMIN_UNIT¶. unit of BORDER_RMIN, default is atomic units (AU). Type: string; Possible Values: AU, AA; Default: AU. BORDER_TYPE¶. border type, either remove or redistribute moments/polarizabilities. Type: string; Possible Values: REMOVE, REDIST; Default: REMOVE. DAMPING_FACTOR_INDUCED¶. Thole damping factor for induced moments. Type: double; Default: 2.1304. DAMPING_FACTOR_MULTIPOLE¶. Thole damping factor for multipole fields. Type: double; Default: 2.1304. DAMP_INDUCED¶. Enable Thole damping for induced moments. Type: boolean; Default: false. DAMP_MULTIPOLE¶. Enable Thole damping for multipole fields. Type: boolean; Default: false. INDUCED_CONVERGENCE¶. Threshold for induced moments convergence. Type: conv double; Default: 1e-8. ISOTROPIC_POL¶. Make polarizabilities isotropic. Type: boolean; Default: false. MAXITER¶. Maximum number of iterations for induced moments. Type: integer; Default: 50. PE_ECP¶. use PE(ECP) repulsive potentials. Type: boolean; Default: false. POTFILE¶. Name of the potential file OR contents of potential file to be written anonymously ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__pe.html:557,charge,charges,557,psi4manual/1.9.x/autodir_options_c/module__pe.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__pe.html,2,['charge'],['charges']
Energy Efficiency,"﻿. PE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; PE. PE¶; Performs polarizable embedding model (PE) computations. PE ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; PE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__pe.html:182,ENERGY,ENERGY,182,psi4manual/1.9.x/autodir_psivariables/module__pe.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__pe.html,1,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PSI Variables by Alpha — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices ». PSI Variables by Alpha¶. Note; Lowercase letters in PSI variable names represent portions of; the variable name that vary by root number, calculation order, etc.; See text for fuller description. (T) CORRECTION ENERGY¶; The coupled-cluster perturbative triples correction [H]. AAA (T) CORRECTION ENERGY¶. AAB (T) CORRECTION ENERGY¶. ABB (T) CORRECTION ENERGY¶. BBB (T) CORRECTION ENERGY¶; Components of the coupled-cluster perturbative triples correction [H]. BRUECKNER CONVERGED¶; Value 1 (0) when the Brueckner orbitals have (have not) converged. CBS TOTAL ENERGY¶. CBS CORRELATION ENERGY¶. CBS REFERENCE ENERGY¶; The total electronic energy [H] and its breakdown into reference total; energy [H] and correlation correction components [H] for the compound; method requested through cbs(). CC ROOT n TOTAL ENERGY¶; The total electronic energy [H]; for the requested coupled cluster level of theory and root; n (numbering starts at GS = 0). CC TOTAL ENERGY¶. CC CORRELATION ENERGY¶. CC2 TOTAL ENERGY¶. CC2 CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the CC2 level of theory. CC3 TOTAL ENERGY¶. CC3 CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the CC3 level of theory. CCSD TOTAL ENERGY¶. CCSD CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the CCSD level of theory. CCSD(T) TOTAL ENERGY¶. CCSD(T) CORRELATION ENERGY¶; The total electronic energy [H] and correlation energy component [H]; for the CCSD(T) level of theory. CI DIPOLE X¶. CI DIPOLE Y¶. CI DIPOLE Z¶; The three components of the dipole [Debye] for the requested; configuration interaction level of theory and root. CI QUADRUPOLE XX¶. CI QUADRUPOLE XY¶. CI QUADRUPOLE XZ¶. CI QUADRUPOLE YY¶. CI QUADRUPOLE YZ¶. CI QUADRUPOLE ZZ¶; The six components of th",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/glossary_psivariables-1.html:774,energy,energy,774,psi4manual/4.0b2/glossary_psivariables-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/glossary_psivariables-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Theoretical Methods: SCF to FCI ». PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly accurate energies and properties of electronic states that require a multiconfigurational zeroth-order wavefunction. The PSIMRCC module contained in PSI4 implements the state-specific multireference coupled-cluster approach of Mukherjee and co-workers (Mk-MRCC). This method is implemented and shown to be a powerful tool in [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the wavefunction, . where are the reference determinants, are reference-specific excitation operators, and are expansion coefficients obtained through diagonalization of the Mk-MRCC effective Hamiltonian matrix that allows the various reference determinants to interact. As an example of how this works the Mk-MRCCSD excitation operators for each reference is contracted two-body terms. where. and. The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian, . where. PSI4 currently implements Mk-MRCC with singles and doubles; [Mk-MRCCSD] and Mk-MRCCSD with perturbative triples [Mk-MRCCSD(T)]; as formulated in [Evangelista:2010:074107]. A companion perturbation; method (Mk-MRPT2) has been developed based on the Mukherjee formalisim; as shown in [Evangelista:2009:4728].; The current version of the code is limited to reference active spaces; in which all determinants are connected to each other by no more than; two excitations. In practice, this usually means that the active space; can have at most two particles, or at most two holes. Examples would; include CAS(2,2), CAS(2,8), CAS(4,3), e",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/psimrcc-1.html:739,power,powerful,739,psi4manual/4.0b2/psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/psimrcc-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Theoretical Methods: SCF to FCI ». PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly; accurate energies and properties of electronic states that require; a multiconfigurational zeroth-order wavefunction. The PSIMRCC; module contained in PSI4 implements the state-specific; multireference coupled-cluster approach of Mukherjee and co-workers; (Mk-MRCC). This method is implemented and shown to be a powerful tool in; [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is; based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the; wavefunction, . where are the reference determinants,; are reference-specific excitation operators, and; are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. where. and. The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,. where. PSI4 currently implements Mk-MRCC with singles and doubles; [Mk-MRCCSD] and Mk-MRCCSD with perturbative triples [Mk-MRCCSD(T)]; as formulated in [Evangelista:2010:074107]. A companion perturbation; method (Mk-MRPT2) has been developed based on the Mukherjee formalisim; as shown in [Evangelista:2009:4728].; The current version of the code is limited to reference active spaces; in which all determinants are connected to each other by no more than two; excitations. In practice, this usually means that the active space can have; at most two particles, or at most two holes. Examples would include; CAS",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/psimrcc-1.html:759,power,powerful,759,psi4manual/4.0b3/psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/psimrcc-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Theoretical Methods: SCF to FCI ». PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly; accurate energies and properties of electronic states that require; a multiconfigurational zeroth-order wavefunction. The PSIMRCC; module contained in PSI4 implements the state-specific; multireference coupled-cluster approach of Mukherjee and co-workers; (Mk-MRCC). This method is implemented and shown to be a powerful tool in; [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is; based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the; wavefunction, . where are the reference determinants,; are reference-specific excitation operators, and; are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. where. and. The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,. where. PSI4 currently implements Mk-MRCC with singles and doubles; [Mk-MRCCSD] and Mk-MRCCSD with perturbative triples [Mk-MRCCSD(T)]; as formulated in [Evangelista:2010:074107]. A companion perturbation; method (Mk-MRPT2) has been developed based on the Mukherjee formalisim; as shown in [Evangelista:2009:4728].; The current version of the code is limited to reference active spaces; in which all determinants are connected to each other by no more than two; excitations. In practice, this usually means that the active space can have; at most two particles, or at most two holes. Examples would include; CAS",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/psimrcc-1.html:759,power,powerful,759,psi4manual/4.0b4/psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/psimrcc-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Theoretical Methods: SCF to FCI ». PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly; accurate energies and properties of electronic states that require; a multiconfigurational zeroth-order wavefunction. The PSIMRCC; module contained in PSI4 implements the state-specific; multireference coupled-cluster approach of Mukherjee and co-workers; (Mk-MRCC). This method is implemented and shown to be a powerful tool in; [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is; based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the; wavefunction, . where are the reference determinants,; are reference-specific excitation operators, and; are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. where. and. The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,. where. PSI4 currently implements Mk-MRCC with singles and doubles; [Mk-MRCCSD] and Mk-MRCCSD with perturbative triples [Mk-MRCCSD(T)]; as formulated in [Evangelista:2010:074107]. A companion perturbation; method (Mk-MRPT2) has been developed based on the Mukherjee formalisim; as shown in [Evangelista:2009:4728].; The current version of the code is limited to reference active spaces; in which all determinants are connected to each other by no more than two; excitations. In practice, this usually means that the active space can have; at most two particles, or at most two holes. Examples would include; CAS",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/psimrcc-1.html:759,power,powerful,759,psi4manual/4.0b5/psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/psimrcc-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Theoretical Methods: SCF to FCI ». PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly; accurate energies and properties of electronic states that require; a multiconfigurational zeroth-order wavefunction. The PSIMRCC; module contained in Psi4 implements the state-specific; multireference coupled-cluster approach of Mukherjee and co-workers; (Mk-MRCC). This method is implemented and shown to be a powerful tool in; [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is; based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the; wavefunction, . where are the reference determinants,; are reference-specific excitation operators, and; are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. where. and. The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,. where. Psi4 currently implements Mk-MRCC with singles and doubles; [Mk-MRCCSD] and Mk-MRCCSD with perturbative triples [Mk-MRCCSD(T)]; as formulated in [Evangelista:2010:074107]. A companion perturbation; method (Mk-MRPT2) has been developed based on the Mukherjee formalisim; as shown in [Evangelista:2009:4728].; The current version of the code is limited to reference active spaces; in which all determinants are connected to each other by no more than two; excitations. In practice, this usually means that the active space can have; at most two particles, or at most two holes. Examples would inclu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/psimrcc-1.html:766,power,powerful,766,psi4manual/1.0.0/psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/psimrcc-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Theoretical Methods: SCF to FCI; PSIMRCC Implementation of Mk-MRCC Theory. PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly; accurate energies and properties of electronic states that require; a multiconfigurational zeroth-order wavefunction. The PSIMRCC; module contained in PSI4 implements the state-specific; multireference coupled-cluster approach of Mukherjee and co-workers; (Mk-MRCC). This method is implemented and shown to be a powerful tool in; [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is; based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the; wavefunction, \(\Psi\). \[\left| \Psi \right \rangle = \sum_\mu^d e^{\hat{T}^\mu} \left| \Phi_\mu \right\rangle c_\mu \, \text{,}\]; where \(\Phi_\mu\) are the reference determinants,; \(\hat{T}^\mu\) are reference-specific excitation operators, and; \(c_\mu\) are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. \[\hat{T}^\mu = \hat{T}^\mu_1 + \hat{T}^\mu_2\]; where. \[\hat{T}^\mu_1 = \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_i^a (\mu) \hat{a}^\dagger_a \hat{a}_i\]; and. \[\hat{T}^\mu_2 =\frac{1}{4} \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_{ij}^{ab} (\mu) \hat{a}^\dagger_b \hat{a}_j \hat{a}^\dagger_a \hat{a}_i\]; The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,; \(\textrm{H}^{eff}_{\mu \nu}\). \[\sum_\nu \textrm{H}^{eff}_{\mu \nu} c_\nu =E c_\nu\]; where. \[\textrm{H}^{eff}_{\mu \nu} ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/psimrcc.html:765,power,powerful,765,psi4manual/master/psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/master/psimrcc.html,1,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Theoretical Methods: SCF to FCI. PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly; accurate energies and properties of electronic states that require; a multiconfigurational zeroth-order wavefunction. The PSIMRCC; module contained in PSI4 implements the state-specific; multireference coupled-cluster approach of Mukherjee and co-workers; (Mk-MRCC). This method is implemented and shown to be a powerful tool in; [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is; based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the; wavefunction, \(\Psi\). \[\left| \Psi \right \rangle = \sum_\mu^d e^{\hat{T}^\mu} \left| \Phi_\mu \right\rangle c_\mu \, \text{,}\]; where \(\Phi_\mu\) are the reference determinants,; \(\hat{T}^\mu\) are reference-specific excitation operators, and; \(c_\mu\) are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. \[\hat{T}^\mu = \hat{T}^\mu_1 + \hat{T}^\mu_2\]; where. \[\hat{T}^\mu_1 = \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_i^a (\mu) \hat{a}^\dagger_a \hat{a}_i\]; and. \[\hat{T}^\mu_2 =\frac{1}{4} \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_{ij}^{ab} (\mu) \hat{a}^\dagger_b \hat{a}_j \hat{a}^\dagger_a \hat{a}_i\]; The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,; \(\textrm{H}^{eff}_{\mu \nu}\). \[\sum_\nu \textrm{H}^{eff}_{\mu \nu} c_\nu =E c_\nu\]; where. \[\textrm{H}^{eff}_{\mu \nu} = \left \langle \Phi_\mu \right | \hat{H}e^{\hat{T}",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/psimrcc-1.html:714,power,powerful,714,psi4manual/1.1.0/psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/psimrcc-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Theoretical Methods: SCF to FCI. PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly; accurate energies and properties of electronic states that require; a multiconfigurational zeroth-order wavefunction. The PSIMRCC; module contained in PSI4 implements the state-specific; multireference coupled-cluster approach of Mukherjee and co-workers; (Mk-MRCC). This method is implemented and shown to be a powerful tool in; [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is; based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the; wavefunction, \(\Psi\). \[\left| \Psi \right \rangle = \sum_\mu^d e^{\hat{T}^\mu} \left| \Phi_\mu \right\rangle c_\mu \, \text{,}\]; where \(\Phi_\mu\) are the reference determinants,; \(\hat{T}^\mu\) are reference-specific excitation operators, and; \(c_\mu\) are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. \[\hat{T}^\mu = \hat{T}^\mu_1 + \hat{T}^\mu_2\]; where. \[\hat{T}^\mu_1 = \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_i^a (\mu) \hat{a}^\dagger_a \hat{a}_i\]; and. \[\hat{T}^\mu_2 =\frac{1}{4} \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_{ij}^{ab} (\mu) \hat{a}^\dagger_b \hat{a}_j \hat{a}^\dagger_a \hat{a}_i\]; The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,; \(\textrm{H}^{eff}_{\mu \nu}\). \[\sum_\nu \textrm{H}^{eff}_{\mu \nu} c_\nu =E c_\nu\]; where. \[\textrm{H}^{eff}_{\mu \nu} = \left \langle \Phi_\mu \right | \hat{H}e^{\hat{",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/psimrcc-1.html:716,power,powerful,716,psi4manual/1.2.1/psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/psimrcc-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Theoretical Methods: SCF to FCI. PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly; accurate energies and properties of electronic states that require; a multiconfigurational zeroth-order wavefunction. The PSIMRCC; module contained in PSI4 implements the state-specific; multireference coupled-cluster approach of Mukherjee and co-workers; (Mk-MRCC). This method is implemented and shown to be a powerful tool in; [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is; based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the; wavefunction, \(\Psi\). \[\left| \Psi \right \rangle = \sum_\mu^d e^{\hat{T}^\mu} \left| \Phi_\mu \right\rangle c_\mu \, \text{,}\]; where \(\Phi_\mu\) are the reference determinants,; \(\hat{T}^\mu\) are reference-specific excitation operators, and; \(c_\mu\) are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. \[\hat{T}^\mu = \hat{T}^\mu_1 + \hat{T}^\mu_2\]; where. \[\hat{T}^\mu_1 = \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_i^a (\mu) \hat{a}^\dagger_a \hat{a}_i\]; and. \[\hat{T}^\mu_2 =\frac{1}{4} \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_{ij}^{ab} (\mu) \hat{a}^\dagger_b \hat{a}_j \hat{a}^\dagger_a \hat{a}_i\]; The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,; \(\textrm{H}^{eff}_{\mu \nu}\). \[\sum_\nu \textrm{H}^{eff}_{\mu \nu} c_\nu =E c_\nu\]; where. \[\textrm{H}^{eff}_{\mu \nu} = \left \langle \Phi_\mu \right | \hat{H}e^{\hat{",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/psimrcc-1.html:716,power,powerful,716,psi4manual/1.3.2/psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/psimrcc-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Theoretical Methods: SCF to FCI; PSIMRCC Implementation of Mk-MRCC Theory. PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly; accurate energies and properties of electronic states that require; a multiconfigurational zeroth-order wavefunction. The PSIMRCC; module contained in PSI4 implements the state-specific; multireference coupled-cluster approach of Mukherjee and co-workers; (Mk-MRCC). This method is implemented and shown to be a powerful tool in; [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is; based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the; wavefunction, \(\Psi\). \[\left| \Psi \right \rangle = \sum_\mu^d e^{\hat{T}^\mu} \left| \Phi_\mu \right\rangle c_\mu \, \text{,}\]; where \(\Phi_\mu\) are the reference determinants,; \(\hat{T}^\mu\) are reference-specific excitation operators, and; \(c_\mu\) are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. \[\hat{T}^\mu = \hat{T}^\mu_1 + \hat{T}^\mu_2\]; where. \[\hat{T}^\mu_1 = \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_i^a (\mu) \hat{a}^\dagger_a \hat{a}_i\]; and. \[\hat{T}^\mu_2 =\frac{1}{4} \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_{ij}^{ab} (\mu) \hat{a}^\dagger_b \hat{a}_j \hat{a}^\dagger_a \hat{a}_i\]; The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,; \(\textrm{H}^{eff}_{\mu \nu}\). \[\sum_\nu \textrm{H}^{eff}_{\mu \nu} c_\nu =E c_\nu\]; where. \[\textrm{H}^{eff}_{\mu \nu} = \left \",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/psimrcc-1.html:756,power,powerful,756,psi4manual/1.4.0/psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/psimrcc-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Theoretical Methods: SCF to FCI; PSIMRCC Implementation of Mk-MRCC Theory. PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly; accurate energies and properties of electronic states that require; a multiconfigurational zeroth-order wavefunction. The PSIMRCC; module contained in PSI4 implements the state-specific; multireference coupled-cluster approach of Mukherjee and co-workers; (Mk-MRCC). This method is implemented and shown to be a powerful tool in; [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is; based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the; wavefunction, \(\Psi\). \[\left| \Psi \right \rangle = \sum_\mu^d e^{\hat{T}^\mu} \left| \Phi_\mu \right\rangle c_\mu \, \text{,}\]; where \(\Phi_\mu\) are the reference determinants,; \(\hat{T}^\mu\) are reference-specific excitation operators, and; \(c_\mu\) are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. \[\hat{T}^\mu = \hat{T}^\mu_1 + \hat{T}^\mu_2\]; where. \[\hat{T}^\mu_1 = \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_i^a (\mu) \hat{a}^\dagger_a \hat{a}_i\]; and. \[\hat{T}^\mu_2 =\frac{1}{4} \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_{ij}^{ab} (\mu) \hat{a}^\dagger_b \hat{a}_j \hat{a}^\dagger_a \hat{a}_i\]; The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,; \(\textrm{H}^{eff}_{\mu \nu}\). \[\sum_\nu \textrm{H}^{eff}_{\mu \nu} c_\nu =E c_\nu\]; where. \[\textrm{H}^{eff}_{\mu \nu} = \left \",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/psimrcc-1.html:756,power,powerful,756,psi4manual/1.5.0/psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/psimrcc-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Theoretical Methods: SCF to FCI; PSIMRCC Implementation of Mk-MRCC Theory. PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly; accurate energies and properties of electronic states that require; a multiconfigurational zeroth-order wavefunction. The PSIMRCC; module contained in PSI4 implements the state-specific; multireference coupled-cluster approach of Mukherjee and co-workers; (Mk-MRCC). This method is implemented and shown to be a powerful tool in; [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is; based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the; wavefunction, \(\Psi\). \[\left| \Psi \right \rangle = \sum_\mu^d e^{\hat{T}^\mu} \left| \Phi_\mu \right\rangle c_\mu \, \text{,}\]; where \(\Phi_\mu\) are the reference determinants,; \(\hat{T}^\mu\) are reference-specific excitation operators, and; \(c_\mu\) are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. \[\hat{T}^\mu = \hat{T}^\mu_1 + \hat{T}^\mu_2\]; where. \[\hat{T}^\mu_1 = \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_i^a (\mu) \hat{a}^\dagger_a \hat{a}_i\]; and. \[\hat{T}^\mu_2 =\frac{1}{4} \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_{ij}^{ab} (\mu) \hat{a}^\dagger_b \hat{a}_j \hat{a}^\dagger_a \hat{a}_i\]; The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,; \(\textrm{H}^{eff}_{\mu \nu}\). \[\sum_\nu \textrm{H}^{eff}_{\mu \nu} c_\nu =E c_\nu\]; where. \[\textrm{H}^{eff}_{\mu \nu} = \left \",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/psimrcc.html:756,power,powerful,756,psi4manual/1.6.x/psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/psimrcc.html,1,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Theoretical Methods: SCF to FCI; PSIMRCC Implementation of Mk-MRCC Theory. PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly; accurate energies and properties of electronic states that require; a multiconfigurational zeroth-order wavefunction. The PSIMRCC; module contained in PSI4 implements the state-specific; multireference coupled-cluster approach of Mukherjee and co-workers; (Mk-MRCC). This method is implemented and shown to be a powerful tool in; [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is; based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the; wavefunction, \(\Psi\). \[\left| \Psi \right \rangle = \sum_\mu^d e^{\hat{T}^\mu} \left| \Phi_\mu \right\rangle c_\mu \, \text{,}\]; where \(\Phi_\mu\) are the reference determinants,; \(\hat{T}^\mu\) are reference-specific excitation operators, and; \(c_\mu\) are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. \[\hat{T}^\mu = \hat{T}^\mu_1 + \hat{T}^\mu_2\]; where. \[\hat{T}^\mu_1 = \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_i^a (\mu) \hat{a}^\dagger_a \hat{a}_i\]; and. \[\hat{T}^\mu_2 =\frac{1}{4} \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_{ij}^{ab} (\mu) \hat{a}^\dagger_b \hat{a}_j \hat{a}^\dagger_a \hat{a}_i\]; The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,; \(\textrm{H}^{eff}_{\mu \nu}\). \[\sum_\nu \textrm{H}^{eff}_{\mu \nu} c_\nu =E c_\nu\]; where. \[\textrm{H}^{eff}_{\mu \nu} = \left \",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/psimrcc.html:756,power,powerful,756,psi4manual/1.7.x/psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/psimrcc.html,1,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Theoretical Methods: SCF to FCI; PSIMRCC Implementation of Mk-MRCC Theory. PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly; accurate energies and properties of electronic states that require; a multiconfigurational zeroth-order wavefunction. The PSIMRCC; module contained in PSI4 implements the state-specific; multireference coupled-cluster approach of Mukherjee and co-workers; (Mk-MRCC). This method is implemented and shown to be a powerful tool in; [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is; based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the; wavefunction, \(\Psi\). \[\left| \Psi \right \rangle = \sum_\mu^d e^{\hat{T}^\mu} \left| \Phi_\mu \right\rangle c_\mu \, \text{,}\]; where \(\Phi_\mu\) are the reference determinants,; \(\hat{T}^\mu\) are reference-specific excitation operators, and; \(c_\mu\) are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. \[\hat{T}^\mu = \hat{T}^\mu_1 + \hat{T}^\mu_2\]; where. \[\hat{T}^\mu_1 = \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_i^a (\mu) \hat{a}^\dagger_a \hat{a}_i\]; and. \[\hat{T}^\mu_2 =\frac{1}{4} \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_{ij}^{ab} (\mu) \hat{a}^\dagger_b \hat{a}_j \hat{a}^\dagger_a \hat{a}_i\]; The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,; \(\textrm{H}^{eff}_{\mu \nu}\). \[\sum_\nu \textrm{H}^{eff}_{\mu \nu} c_\nu =E c_\nu\]; where. \[\textrm{H}^{eff}_{\mu \nu} = \left",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/psimrcc.html:758,power,powerful,758,psi4manual/1.8.x/psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/psimrcc.html,1,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC Implementation of Mk-MRCC Theory. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Theoretical Methods: SCF to FCI; PSIMRCC Implementation of Mk-MRCC Theory. PSIMRCC Implementation of Mk-MRCC Theory¶; Code author: Francesco A. Evangelista and Andrew C. Simmonett; Section author: Alexander E. Vaughn; Module: Keywords, PSI Variables, PSIMRCC; State-specific Multireference coupled cluster theories provide highly; accurate energies and properties of electronic states that require; a multiconfigurational zeroth-order wavefunction. The PSIMRCC; module contained in PSI4 implements the state-specific; multireference coupled-cluster approach of Mukherjee and co-workers; (Mk-MRCC). This method is implemented and shown to be a powerful tool in; [Evangelista:2006:154113] and [Evangelista:2008:124104]. Mk-MRCC is; based on the Jeziorski-Monkhorst ansatz [Jeziorski:1981:1668] for the; wavefunction, \(\Psi\). \[\left| \Psi \right \rangle = \sum_\mu^d e^{\hat{T}^\mu} \left| \Phi_\mu \right\rangle c_\mu \, \text{,}\]; where \(\Phi_\mu\) are the reference determinants,; \(\hat{T}^\mu\) are reference-specific excitation operators, and; \(c_\mu\) are expansion coefficients obtained through diagonalization; of the Mk-MRCC effective Hamiltonian matrix that allows the various; reference determinants to interact. As an example of how this works; the Mk-MRCCSD excitation operators for each reference is contracted; two-body terms. \[\hat{T}^\mu = \hat{T}^\mu_1 + \hat{T}^\mu_2\]; where. \[\hat{T}^\mu_1 = \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_i^a (\mu) \hat{a}^\dagger_a \hat{a}_i\]; and. \[\hat{T}^\mu_2 =\frac{1}{4} \sum_i^{\textrm{occ}(\mu)} \sum_a^{\textrm{vir}(\mu)} t_{ij}^{ab} (\mu) \hat{a}^\dagger_b \hat{a}_j \hat{a}^\dagger_a \hat{a}_i\]; The Mk-MRCC energy is a chosen eigenvalue of the effective Hamiltonian,; \(\textrm{H}^{eff}_{\mu \nu}\). \[\sum_\nu \textrm{H}^{eff}_{\mu \nu} c_\nu =E c_\nu\]; where. \[\textrm{H}^{eff}_{\mu \nu} = \left",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/psimrcc.html:758,power,powerful,758,psi4manual/1.9.x/psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/psimrcc.html,1,['power'],['powerful']
Energy Efficiency,"﻿. PSIMRCC — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. ACTIVE¶. The number of active orbitals per irrep. Type: array; Default: No Default. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, , of the target state. Must be specified if different from the reference . Type: integer; Default: 1. CORR_REFERENCE¶. Reference wavefunction type used in MRCC computations. Type: string; Possible Values: RHF, ROHF, TCSCF, MCSCF, GENERAL; Default: GENERAL. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal correction",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__psimrcc-1.html:747,charge,charge,747,psi4manual/4.0b2/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__psimrcc-1.html,4,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. CURRENT ENERGY; MRCC TOTAL ENERGY; MRPT TOTAL ENERGY. Previous topic; OPTKING; Next topic; SAPT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__psimrcc-1.html:331,ENERGY,ENERGY,331,psi4manual/4.0b2/autodir_psivariables/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__psimrcc-1.html,6,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PSIMRCC — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. ACTIVE¶. The number of active orbitals per irrep. Type: array; Default: No Default. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, , of the target state. Must be specified if different from the reference . Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__psimrcc-1.html:762,charge,charge,762,psi4manual/4.0b3/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__psimrcc-1.html,4,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. CURRENT ENERGY; MRCC TOTAL ENERGY; MRPT TOTAL ENERGY. Previous topic; OPTKING; Next topic; SAPT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 21, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__psimrcc-1.html:346,ENERGY,ENERGY,346,psi4manual/4.0b3/autodir_psivariables/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__psimrcc-1.html,6,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PSIMRCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. ACTIVE¶. The number of active orbitals per irrep. Type: array; Default: No Default. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, , of the target state. Must be specified if different from the reference . Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__psimrcc-1.html:762,charge,charge,762,psi4manual/4.0b4/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__psimrcc-1.html,4,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. CURRENT ENERGY; MRCC TOTAL ENERGY; MRPT TOTAL ENERGY. Previous topic; OPTKING; Next topic; SAPT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 29, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__psimrcc-1.html:346,ENERGY,ENERGY,346,psi4manual/4.0b4/autodir_psivariables/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__psimrcc-1.html,6,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PSIMRCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. ACTIVE¶. The number of active orbitals per irrep. Type: array; Default: No Default. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, , of the target state. Must be specified if different from the reference . Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__psimrcc-1.html:762,charge,charge,762,psi4manual/4.0b5/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__psimrcc-1.html,4,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. CURRENT ENERGY; MRCC TOTAL ENERGY; MRPT TOTAL ENERGY. Previous topic; OPTKING; Next topic; SAPT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__psimrcc-1.html:346,ENERGY,ENERGY,346,psi4manual/4.0b5/autodir_psivariables/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__psimrcc-1.html,6,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PSIMRCC — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, , of the target state. Must be specified if different from the reference . Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before ext",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__psimrcc-1.html:685,charge,charge,685,psi4manual/1.0.0/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__psimrcc-1.html,2,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is p",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__psimrcc.html:649,charge,charge,649,psi4manual/master/autodir_options_c/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__psimrcc.html,2,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. CURRENT ENERGY; MP2-CCSD TOTAL ENERGY; MRCC TOTAL ENERGY; MRPT TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; PSIMRCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_psivariables/module__psimrcc.html:317,ENERGY,ENERGY,317,psi4manual/master/autodir_psivariables/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_psivariables/module__psimrcc.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: in",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__psimrcc-1.html:631,charge,charge,631,psi4manual/1.1.0/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__psimrcc-1.html,2,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__psimrcc-1.html:633,charge,charge,633,psi4manual/1.2.1/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__psimrcc-1.html,2,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed. Type: ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__psimrcc-1.html:633,charge,charge,633,psi4manual/1.3.2/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__psimrcc-1.html,2,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__psimrcc-1.html:640,charge,charge,640,psi4manual/1.4.0/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__psimrcc-1.html,4,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. CURRENT ENERGY; MP2-CCSD TOTAL ENERGY; MRCC TOTAL ENERGY; MRPT TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; PSIMRCC. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__psimrcc-1.html:308,ENERGY,ENERGY,308,psi4manual/1.4.0/autodir_psivariables/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__psimrcc-1.html,8,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__psimrcc-1.html:640,charge,charge,640,psi4manual/1.5.0/autodir_options_c/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__psimrcc-1.html,4,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. CURRENT ENERGY; MP2-CCSD TOTAL ENERGY; MRCC TOTAL ENERGY; MRPT TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; PSIMRCC. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__psimrcc-1.html:308,ENERGY,ENERGY,308,psi4manual/1.5.0/autodir_psivariables/module__psimrcc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__psimrcc-1.html,8,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__psimrcc.html:640,charge,charge,640,psi4manual/1.6.x/autodir_options_c/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__psimrcc.html,2,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. CURRENT ENERGY; MP2-CCSD TOTAL ENERGY; MRCC TOTAL ENERGY; MRPT TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; PSIMRCC. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__psimrcc.html:308,ENERGY,ENERGY,308,psi4manual/1.6.x/autodir_psivariables/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__psimrcc.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performed.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__psimrcc.html:640,charge,charge,640,psi4manual/1.7.x/autodir_options_c/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__psimrcc.html,2,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. CURRENT ENERGY; MP2-CCSD TOTAL ENERGY; MRCC TOTAL ENERGY; MRPT TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; PSIMRCC. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__psimrcc.html:308,ENERGY,ENERGY,308,psi4manual/1.7.x/autodir_psivariables/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__psimrcc.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performe",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__psimrcc.html:642,charge,charge,642,psi4manual/1.8.x/autodir_options_c/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__psimrcc.html,2,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. CURRENT ENERGY; MP2-CCSD TOTAL ENERGY; MRCC TOTAL ENERGY; MRPT TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; PSIMRCC. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__psimrcc.html:310,ENERGY,ENERGY,310,psi4manual/1.8.x/autodir_psivariables/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__psimrcc.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. General¶. CC_NUM_THREADS¶. Number of threads. Type: integer; Default: 1. CORR_ANSATZ¶. The ansatz to use for MRCC computations. Type: string; Possible Values: SR, MK, BW, APBW; Default: MK. CORR_CCSD_T¶. The type of CCSD(T) computation to perform. Type: string; Possible Values: STANDARD, PITTNER; Default: STANDARD. CORR_CHARGE¶. The molecular charge of the target state. Type: integer; Default: 0. CORR_MULTP¶. The multiplicity, \(M_S(M_S+1)\), of the target state. Must be specified if different from the reference \(M_s\). Type: integer; Default: 1. CORR_WFN¶. The type of correlated wavefunction. Type: string; Possible Values: PT2, CCSD, MP2-CCSD, CCSD_T; Default: CCSD. COUPLING¶. The order of coupling terms to include in MRCCSDT computations. Type: string; Possible Values: NONE, LINEAR, QUADRATIC, CUBIC; Default: CUBIC. COUPLING_TERMS¶. Do include the terms that couple the reference determinants?. Type: boolean; Default: true. DAMPING_PERCENTAGE¶. The amount (percentage) of damping to apply to the amplitude updates. 0 will result in a full update, 100 will completely stall the update. A value around 20 (which corresponds to 20% of the amplitudes from the previous iteration being mixed into the current iteration) can help in cases where oscillatory convergence is observed. Type: double; Default: 0.0. DIAGONALIZE_HEFF¶. Do diagonalize the effective Hamiltonian?. Type: boolean; Default: false. DIAGONAL_CCSD_T¶. Do include the diagonal corrections in (T) computations?. Type: boolean; Default: true. DIIS_MAX_VECS¶. Maximum number of error vectors stored for DIIS extrapolation. Type: integer; Default: 7. DIIS_START¶. The number of DIIS vectors needed before extrapolation is performe",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__psimrcc.html:642,charge,charge,642,psi4manual/1.9.x/autodir_options_c/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__psimrcc.html,2,['charge'],['charge']
Energy Efficiency,"﻿. PSIMRCC. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; PSIMRCC. PSIMRCC¶; Performs multireference coupled cluster computations. This theory should be used only by advanced users with a good working knowledge of multireference techniques. CURRENT ENERGY; MP2-CCSD TOTAL ENERGY; MRCC TOTAL ENERGY; MRPT TOTAL ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; PSIMRCC. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__psimrcc.html:310,ENERGY,ENERGY,310,psi4manual/1.9.x/autodir_psivariables/module__psimrcc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__psimrcc.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. PYTHON. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs; PYTHON. PYTHON¶. Input File; Description. python/mints2; A test of the basis specification. A benzene atom is defined using a ZMatrix containing dummy atoms and various basis sets are assigned to different atoms. The symmetry of the molecule is automatically lowered to account for the different basis sets. python/cc54; CCSD dipole with user-specified basis set. python/cc-amps; API access to CCSD amplitudes. python/mints13; test fragment decomposition + to/from_dict. python/mints9; A test of the basis specification. Various basis sets are specified outright and in blocks, both orbital and auxiliary. Constructs libmints BasisSet objects through the constructor that calls qcdb.BasisSet infrastructure. Checks that the resulting bases are of the right size and checks that symmetry of the Molecule observes the basis assignment to atoms. python/curve; PsiAPI scanning a potential energy curve. python/3-index-transforms; examine JK packing forms. python/databases; PsiAPI energy example. python/mints14; Check for correctness of ESP values. The ESP values are calculated using one or four threads The one thread values are checked against the four thread values. The one thread values are also checked against the reference values (1 thread values computed, when generating this test). Caution: The reference values are not obtained using an actual physical reference, but rather generated by Psi4 at one point in time. python/pubchem; PsiAPI pubchem access. python/energy; PsiAPI energy example. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs; PYTHON. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodoc_testsuite_python.html:1015,energy,energy,1015,psi4manual/master/autodoc_testsuite_python.html,https://psicode.org,https://psicode.org/psi4manual/master/autodoc_testsuite_python.html,4,['energy'],['energy']
Energy Efficiency,"﻿. PYTHON. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. PYTHON¶. Input File; Description. python/memdfjk; compare MemJK and DiskJK. python/3-index-transforms; examine JK packing forms. python/mints9; A test of the basis specification. Various basis sets are specified outright and in blocks, both orbital and auxiliary. Constructs libmints BasisSet objects through the constructor that calls qcdb.BasisSet infrastructure. Checks that the resulting bases are of the right size and checks that symmetry of the Molecule observes the basis assignment to atoms. python/mints13; test fragment decomposition + to/from_dict. python/curve; PsiAPI scanning a potential energy curve. python/pubchem; PsiAPI pubchem access. python/energy; PsiAPI energy example. python/cc54; CCSD dipole with user-specified basis set. python/mints2; A test of the basis specification. A benzene atom is defined using a ZMatrix containing dummy atoms and various basis sets are assigned to different atoms. The symmetry of the molecule is automatically lowered to account for the different basis sets. python/vibanalysis; compare analytic, findif by G, findif by E vibrational analyses for several mols. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_python-1.html:726,energy,energy,726,psi4manual/1.2.1/autodoc_testsuite_python-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_python-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. PYTHON. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. PYTHON¶. Input File; Description. python/3-index-transforms; examine JK packing forms. python/mints9; A test of the basis specification. Various basis sets are specified outright and in blocks, both orbital and auxiliary. Constructs libmints BasisSet objects through the constructor that calls qcdb.BasisSet infrastructure. Checks that the resulting bases are of the right size and checks that symmetry of the Molecule observes the basis assignment to atoms. python/mints13; test fragment decomposition + to/from_dict. python/curve; PsiAPI scanning a potential energy curve. python/pubchem; PsiAPI pubchem access. python/energy; PsiAPI energy example. python/cc54; CCSD dipole with user-specified basis set. python/mints2; A test of the basis specification. A benzene atom is defined using a ZMatrix containing dummy atoms and various basis sets are assigned to different atoms. The symmetry of the molecule is automatically lowered to account for the different basis sets. python/cc_amps; API access to CCSD amplitudes. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_python-1.html:684,energy,energy,684,psi4manual/1.3.2/autodoc_testsuite_python-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_python-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. PYTHON. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; PYTHON. PYTHON¶. Input File; Description. python/pubchem; PsiAPI pubchem access. python/mints14; Check for correctness of ESP values. The ESP values are calculated using one or four threads The one thread values are checked against the four thread values. The one thread values are also checked against the reference values (1 thread values computed, when generating this test). Caution: The reference values are not obtained using an actual physical reference, but rather generated by Psi4 at one point in time. python/energy; PsiAPI energy example. python/cc54; CCSD dipole with user-specified basis set. python/cc-amps; API access to CCSD amplitudes. python/mints2; A test of the basis specification. A benzene atom is defined using a ZMatrix containing dummy atoms and various basis sets are assigned to different atoms. The symmetry of the molecule is automatically lowered to account for the different basis sets. python/3-index-transforms; examine JK packing forms. python/mints13; test fragment decomposition + to/from_dict. python/mints9; A test of the basis specification. Various basis sets are specified outright and in blocks, both orbital and auxiliary. Constructs libmints BasisSet objects through the constructor that calls qcdb.BasisSet infrastructure. Checks that the resulting bases are of the right size and checks that symmetry of the Molecule observes the basis assignment to atoms. python/databases; PsiAPI energy example. python/curve; PsiAPI scanning a potential energy curve. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; PYTHON. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_python-1.html:641,energy,energy,641,psi4manual/1.4.0/autodoc_testsuite_python-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_python-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. PYTHON. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; PYTHON. PYTHON¶. Input File; Description. python/energy; PsiAPI energy example. python/databases; PsiAPI energy example. python/cc54; CCSD dipole with user-specified basis set. python/cc-amps; API access to CCSD amplitudes. python/mints13; test fragment decomposition + to/from_dict. python/mints2; A test of the basis specification. A benzene atom is defined using a ZMatrix containing dummy atoms and various basis sets are assigned to different atoms. The symmetry of the molecule is automatically lowered to account for the different basis sets. python/pubchem; PsiAPI pubchem access. python/curve; PsiAPI scanning a potential energy curve. python/mints9; A test of the basis specification. Various basis sets are specified outright and in blocks, both orbital and auxiliary. Constructs libmints BasisSet objects through the constructor that calls qcdb.BasisSet infrastructure. Checks that the resulting bases are of the right size and checks that symmetry of the Molecule observes the basis assignment to atoms. python/3-index-transforms; examine JK packing forms. python/mints14; Check for correctness of ESP values. The ESP values are calculated using one or four threads The one thread values are checked against the four thread values. The one thread values are also checked against the reference values (1 thread values computed, when generating this test). Caution: The reference values are not obtained using an actual physical reference, but rather generated by Psi4 at one point in time. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; PYTHON. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_python-1.html:170,energy,energy,170,psi4manual/1.5.0/autodoc_testsuite_python-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_python-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. PYTHON. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; PYTHON. PYTHON¶. Input File; Description. python/cc54; CCSD dipole with user-specified basis set. python/mints13; test fragment decomposition + to/from_dict. python/curve; PsiAPI scanning a potential energy curve. python/databases; PsiAPI energy example. python/mints9; A test of the basis specification. Various basis sets are specified outright and in blocks, both orbital and auxiliary. Constructs libmints BasisSet objects through the constructor that calls qcdb.BasisSet infrastructure. Checks that the resulting bases are of the right size and checks that symmetry of the Molecule observes the basis assignment to atoms. python/pubchem; PsiAPI pubchem access. python/energy; PsiAPI energy example. python/3-index-transforms; examine JK packing forms. python/mints14; Check for correctness of ESP values. The ESP values are calculated using one or four threads The one thread values are checked against the four thread values. The one thread values are also checked against the reference values (1 thread values computed, when generating this test). Caution: The reference values are not obtained using an actual physical reference, but rather generated by Psi4 at one point in time. python/cc-amps; API access to CCSD amplitudes. python/mints2; A test of the basis specification. A benzene atom is defined using a ZMatrix containing dummy atoms and various basis sets are assigned to different atoms. The symmetry of the molecule is automatically lowered to account for the different basis sets. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; PYTHON. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_python.html:321,energy,energy,321,psi4manual/1.6.x/autodoc_testsuite_python.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_python.html,4,['energy'],['energy']
Energy Efficiency,"﻿. PYTHON. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; PYTHON. PYTHON¶. Input File; Description. python/mints14; Check for correctness of ESP values. The ESP values are calculated using one or four threads The one thread values are checked against the four thread values. The one thread values are also checked against the reference values (1 thread values computed, when generating this test). Caution: The reference values are not obtained using an actual physical reference, but rather generated by Psi4 at one point in time. python/mints13; test fragment decomposition + to/from_dict. python/pubchem; PsiAPI pubchem access. python/mints2; A test of the basis specification. A benzene atom is defined using a ZMatrix containing dummy atoms and various basis sets are assigned to different atoms. The symmetry of the molecule is automatically lowered to account for the different basis sets. python/mints9; A test of the basis specification. Various basis sets are specified outright and in blocks, both orbital and auxiliary. Constructs libmints BasisSet objects through the constructor that calls qcdb.BasisSet infrastructure. Checks that the resulting bases are of the right size and checks that symmetry of the Molecule observes the basis assignment to atoms. python/cc54; CCSD dipole with user-specified basis set. python/cc-amps; API access to CCSD amplitudes. python/databases; PsiAPI energy example. python/energy; PsiAPI energy example. python/3-index-transforms; examine JK packing forms. python/curve; PsiAPI scanning a potential energy curve. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; PYTHON. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_python.html:1460,energy,energy,1460,psi4manual/1.7.x/autodoc_testsuite_python.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_python.html,4,['energy'],['energy']
Energy Efficiency,"﻿. PYTHON. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; PYTHON. PYTHON¶. Input File; Description. python/mints9; A test of the basis specification. Various basis sets are specified outright and in blocks, both orbital and auxiliary. Constructs libmints BasisSet objects through the constructor that calls qcdb.BasisSet infrastructure. Checks that the resulting bases are of the right size and checks that symmetry of the Molecule observes the basis assignment to atoms. python/energy; PsiAPI energy example. python/3-index-transforms; examine JK packing forms. python/mints13; test fragment decomposition + to/from_dict. python/mints14; Check for correctness of ESP values. The ESP values are calculated using one or four threads The one thread values are checked against the four thread values. The one thread values are also checked against the reference values (1 thread values computed, when generating this test). Caution: The reference values are not obtained using an actual physical reference, but rather generated by Psi4 at one point in time. python/cc54; CCSD dipole with user-specified basis set. python/databases; PsiAPI energy example. python/curve; PsiAPI scanning a potential energy curve. python/cc-amps; API access to CCSD amplitudes. python/mints2; A test of the basis specification. A benzene atom is defined using a ZMatrix containing dummy atoms and various basis sets are assigned to different atoms. The symmetry of the molecule is automatically lowered to account for the different basis sets. python/pubchem; PsiAPI pubchem access. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; PYTHON. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_python.html:544,energy,energy,544,psi4manual/1.8.x/autodoc_testsuite_python.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_python.html,4,['energy'],['energy']
Energy Efficiency,"﻿. PYTHON. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; PYTHON. PYTHON¶. Input File; Description. python/pubchem; PsiAPI pubchem access. python/energy; PsiAPI energy example. python/mints13; test fragment decomposition + to/from_dict. python/cc54; CCSD dipole with user-specified basis set. python/3-index-transforms; examine JK packing forms. python/cc-amps; API access to CCSD amplitudes. python/mints2; A test of the basis specification. A benzene atom is defined using a ZMatrix containing dummy atoms and various basis sets are assigned to different atoms. The symmetry of the molecule is automatically lowered to account for the different basis sets. python/mints9; A test of the basis specification. Various basis sets are specified outright and in blocks, both orbital and auxiliary. Constructs libmints BasisSet objects through the constructor that calls qcdb.BasisSet infrastructure. Checks that the resulting bases are of the right size and checks that symmetry of the Molecule observes the basis assignment to atoms. python/curve; PsiAPI scanning a potential energy curve. python/mints14; Check for correctness of ESP values. The ESP values are calculated using one or four threads The one thread values are checked against the four thread values. The one thread values are also checked against the reference values (1 thread values computed, when generating this test). Caution: The reference values are not obtained using an actual physical reference, but rather generated by Psi4 at one point in time. python/databases; PsiAPI energy example. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; PYTHON. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_python.html:211,energy,energy,211,psi4manual/1.9.x/autodoc_testsuite_python.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_python.html,4,['energy'],['energy']
Energy Efficiency,﻿. Physical Constants — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices ». Physical Constants¶. Physical constants in Psi4¶. Label; Value; Description. psi_h; 6.62606896E-34; The Planck constant (Js). psi_c; 2.99792458E8; Speed of light (ms$^{-1}$). psi_kb; 1.3806504E-23; The Boltzmann constant (JK$^{-1}$). psi_R; 8.314472; Universal gas constant (JK$^{-1}$mol$^{-1}$). psi_bohr2angstroms; 0.52917720859; Bohr to Angstroms conversion factor. psi_bohr2m; 0.52917720859E-10; Bohr to meters conversion factor. psi_bohr2cm; 0.52917720859E-8; Bohr to centimeters conversion factor. psi_amu2g; 1.660538782E-24; Atomic mass units to grams conversion factor. psi_amu2kg; 1.660538782E-27; Atomic mass units to kg conversion factor. psi_au2amu; 5.485799097E-4; Atomic units (m$@@e$) to atomic mass units conversion factor. psi_hartree2J; 4.359744E-18; Hartree to joule conversion factor. psi_hartree2aJ; 4.359744; Hartree to attojoule (10$^{-18}$J) conversion factor. psi_cal2J; 4.184; Calorie to joule conversion factor. psi_dipmom_au2si; 8.47835281E-30; Atomic units to SI units (Cm) conversion factor for dipoles. psi_dipmom_au2debye; 2.54174623; Atomic units to Debye conversion factor for dipoles. psi_dipmom_debye2si; 3.335640952E-30; Debye to SI units (Cm) conversion factor for dipoles. psi_c_au; 137.035999679; Speed of light in atomic units. psi_hartree2ev; 27.21138; Hartree to eV conversion factor. psi_hartree2wavenumbers; 219474.6; Hartree to cm$^{-1}$ conversion factor. psi_hartree2kcalmol; 627.5095; Hartree to kcal mol$^{-1}$ conversion factor. psi_hartree2kJmol; 2625.500; Hartree to kilojoule mol$^{-1}$ conversion factor. psi_hartree2MHz; 6.579684E9; Hartree to MHz conversion factor. psi_kcalmol2wavenumbers; 349.7551; kcal mol$^{-1}$ to cm$^{-1}$ conversion factor. psi_e0; 8.854187817E-12; Vacuum permittivity (Fm$^{-1}$). psi_na; 6.02214179E23; Avagadro’s number. psi_me; 9.10938215E-31; Electron rest ma,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodoc_physconst-1.html:563,meter,meters,563,psi4manual/1.0.0/autodoc_physconst-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodoc_physconst-1.html,4,"['joule', 'meter']","['joule', 'meters']"
Energy Efficiency,﻿. Physical Constants. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Physical Constants. Physical Constants¶. Physical constants in PSI4¶. Label; Value; Description. _220_lattice_spacing_of_silicon; 1.920155714E-10; {220} lattice spacing of silicon [m] uncertainty=0.000 0032 e-12. alpha_particle_electron_mass_ratio; 7294.29954136; alpha particle-electron mass ratio [] uncertainty=0.000 000 24. alpha_particle_mass; 6.644657230E-27; alpha particle mass [kg] uncertainty=0.000 000 082 e-27. alpha_particle_mass_energy_equivalent; 5.971920097E-10; alpha particle mass energy equivalent [J] uncertainty=0.000 000 073 e-10. alpha_particle_mass_energy_equivalent_in_MeV; 3727.379378; alpha particle mass energy equivalent in MeV [MeV] uncertainty=0.000 023. alpha_particle_mass_in_u; 4.001506179127; alpha particle mass in u [u] uncertainty=0.000 000 000 063. alpha_particle_molar_mass; 0.004001506179127; alpha particle molar mass [kg mol^{-1}] uncertainty=0.000 000 000 063 e-3. alpha_particle_proton_mass_ratio; 3.97259968907; alpha particle-proton mass ratio [] uncertainty=0.000 000 000 36. Angstrom_star; 1.00001495E-10; Angstrom star [m] uncertainty=0.000 000 90 e-10. atomic_mass_constant; 1.660539040E-27; atomic mass constant [kg] uncertainty=0.000 000 020 e-27. atomic_mass_constant_energy_equivalent; 1.492418062E-10; atomic mass constant energy equivalent [J] uncertainty=0.000 000 018 e-10. atomic_mass_constant_energy_equivalent_in_MeV; 931.4940954; atomic mass constant energy equivalent in MeV [MeV] uncertainty=0.000 0057. atomic_mass_unit_electron_volt_relationship; 931494095.4; atomic mass unit-electron volt relationship [eV] uncertainty=0.000 0057 e6. atomic_mass_unit_hartree_relationship; 34231776.902; atomic mass unit-hartree relationship [E_h] uncertainty=0.000 000 0016 e7. atomic_mass_unit_hertz_relationship; 2.2523427206E+23; atomic mass unit-hertz relationship [Hz] uncertainty=0.000 000 0010 e23. atomic_mass_unit_inverse_meter,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodoc_physconst.html:611,energy,energy,611,psi4manual/master/autodoc_physconst.html,https://psicode.org,https://psicode.org/psi4manual/master/autodoc_physconst.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Physical Constants. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices. Physical Constants¶. Physical constants in PSI4¶. Label; Value; Description. h; 6.62606896E-34; The Planck constant (Js). c; 2.99792458E8; Speed of light (ms$^{-1}$). kb; 1.3806504E-23; The Boltzmann constant (JK$^{-1}$). R; 8.314472; Universal gas constant (JK$^{-1}$mol$^{-1}$). bohr2angstroms; 0.52917720859; Bohr to Angstroms conversion factor. bohr2m; 0.52917720859E-10; Bohr to meters conversion factor. bohr2cm; 0.52917720859E-8; Bohr to centimeters conversion factor. amu2g; 1.660538782E-24; Atomic mass units to grams conversion factor. amu2kg; 1.660538782E-27; Atomic mass units to kg conversion factor. au2amu; 5.485799097E-4; Atomic units (m$@@e$) to atomic mass units conversion factor. hartree2J; 4.359744E-18; Hartree to joule conversion factor. hartree2aJ; 4.359744; Hartree to attojoule (10$^{-18}$J) conversion factor. cal2J; 4.184; Calorie to joule conversion factor. dipmom_au2si; 8.47835281E-30; Atomic units to SI units (Cm) conversion factor for dipoles. dipmom_au2debye; 2.54174623; Atomic units to Debye conversion factor for dipoles. dipmom_debye2si; 3.335640952E-30; Debye to SI units (Cm) conversion factor for dipoles. c_au; 137.035999679; Speed of light in atomic units. hartree2ev; 27.21138; Hartree to eV conversion factor. hartree2wavenumbers; 219474.6; Hartree to cm$^{-1}$ conversion factor. hartree2kcalmol; 627.5095; Hartree to kcal mol$^{-1}$ conversion factor. hartree2kJmol; 2625.500; Hartree to kilojoule mol$^{-1}$ conversion factor. hartree2MHz; 6.579684E9; Hartree to MHz conversion factor. kcalmol2wavenumbers; 349.7551; kcal mol$^{-1}$ to cm$^{-1}$ conversion factor. e0; 8.854187817E-12; Vacuum permittivity (Fm$^{-1}$). na; 6.02214179E23; Avagadro’s number. me; 9.10938215E-31; Electron rest mass (in kg). Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodoc_physconst-1.html:487,meter,meters,487,psi4manual/1.1.0/autodoc_physconst-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodoc_physconst-1.html,6,"['joule', 'meter']","['joule', 'meters']"
Energy Efficiency,"﻿. Physical Constants. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices. Physical Constants¶. Physical constants in PSI4¶. Label; Value; Description. h; 6.62606896E-34; The Planck constant (Js). c; 2.99792458E8; Speed of light (ms$^{-1}$). kb; 1.3806504E-23; The Boltzmann constant (JK$^{-1}$). R; 8.314472; Universal gas constant (JK$^{-1}$mol$^{-1}$). bohr2angstroms; 0.52917720859; Bohr to Angstroms conversion factor. bohr2m; 0.52917720859E-10; Bohr to meters conversion factor. bohr2cm; 0.52917720859E-8; Bohr to centimeters conversion factor. amu2g; 1.660538782E-24; Atomic mass units to grams conversion factor. amu2kg; 1.660538782E-27; Atomic mass units to kg conversion factor. au2amu; 5.485799097E-4; Atomic units (m$@@e$) to atomic mass units conversion factor. hartree2J; 4.359744E-18; Hartree to joule conversion factor. hartree2aJ; 4.359744; Hartree to attojoule (10$^{-18}$J) conversion factor. cal2J; 4.184; Calorie to joule conversion factor. dipmom_au2si; 8.47835281E-30; Atomic units to SI units (Cm) conversion factor for dipoles. dipmom_au2debye; 2.54174623; Atomic units to Debye conversion factor for dipoles. dipmom_debye2si; 3.335640952E-30; Debye to SI units (Cm) conversion factor for dipoles. c_au; 137.035999679; Speed of light in atomic units. hartree2ev; 27.21138; Hartree to eV conversion factor. hartree2wavenumbers; 219474.6; Hartree to cm$^{-1}$ conversion factor. hartree2kcalmol; 627.5095; Hartree to kcal mol$^{-1}$ conversion factor. hartree2kJmol; 2625.500; Hartree to kilojoule mol$^{-1}$ conversion factor. hartree2MHz; 6.579684E9; Hartree to MHz conversion factor. kcalmol2wavenumbers; 349.7551; kcal mol$^{-1}$ to cm$^{-1}$ conversion factor. e0; 8.854187817E-12; Vacuum permittivity (Fm$^{-1}$). na; 6.02214179E23; Avagadro’s number. me; 9.10938215E-31; Electron rest mass (in kg). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices. © Copyright 2018, The Psi4",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodoc_physconst-1.html:489,meter,meters,489,psi4manual/1.2.1/autodoc_physconst-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodoc_physconst-1.html,6,"['joule', 'meter']","['joule', 'meters']"
Energy Efficiency,﻿. Physical Constants. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices. Physical Constants¶. Physical constants in PSI4¶. Label; Value; Description. _220_lattice_spacing_of_silicon; 1.920155714E-10; {220} lattice spacing of silicon [m] uncertainty=0.000 0032 e-12. alpha_particle_electron_mass_ratio; 7294.29954136; alpha particle-electron mass ratio [] uncertainty=0.000 000 24. alpha_particle_mass; 6.644657230E-27; alpha particle mass [kg] uncertainty=0.000 000 082 e-27. alpha_particle_mass_energy_equivalent; 5.971920097E-10; alpha particle mass energy equivalent [J] uncertainty=0.000 000 073 e-10. alpha_particle_mass_energy_equivalent_in_MeV; 3727.379378; alpha particle mass energy equivalent in MeV [MeV] uncertainty=0.000 023. alpha_particle_mass_in_u; 4.001506179127; alpha particle mass in u [u] uncertainty=0.000 000 000 063. alpha_particle_molar_mass; 0.004001506179127; alpha particle molar mass [kg mol^{-1}] uncertainty=0.000 000 000 063 e-3. alpha_particle_proton_mass_ratio; 3.97259968907; alpha particle-proton mass ratio [] uncertainty=0.000 000 000 36. Angstrom_star; 1.00001495E-10; Angstrom star [m] uncertainty=0.000 000 90 e-10. atomic_mass_constant; 1.660539040E-27; atomic mass constant [kg] uncertainty=0.000 000 020 e-27. atomic_mass_constant_energy_equivalent; 1.492418062E-10; atomic mass constant energy equivalent [J] uncertainty=0.000 000 018 e-10. atomic_mass_constant_energy_equivalent_in_MeV; 931.4940954; atomic mass constant energy equivalent in MeV [MeV] uncertainty=0.000 0057. atomic_mass_unit_electron_volt_relationship; 931494095.4; atomic mass unit-electron volt relationship [eV] uncertainty=0.000 0057 e6. atomic_mass_unit_hartree_relationship; 34231776.902; atomic mass unit-hartree relationship [E_h] uncertainty=0.000 000 0016 e7. atomic_mass_unit_hertz_relationship; 2.2523427206E+23; atomic mass unit-hertz relationship [Hz] uncertainty=0.000 000 0010 e23. atomic_mass_unit_inverse_meter_relationship; 7.5130066166,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodoc_physconst-1.html:584,energy,energy,584,psi4manual/1.3.2/autodoc_physconst-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodoc_physconst-1.html,4,['energy'],['energy']
Energy Efficiency,﻿. Physical Constants. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Physical Constants. Physical Constants¶. Physical constants in PSI4¶. Label; Value; Description. _220_lattice_spacing_of_silicon; 1.920155714E-10; {220} lattice spacing of silicon [m] uncertainty=0.000 0032 e-12. alpha_particle_electron_mass_ratio; 7294.29954136; alpha particle-electron mass ratio [] uncertainty=0.000 000 24. alpha_particle_mass; 6.644657230E-27; alpha particle mass [kg] uncertainty=0.000 000 082 e-27. alpha_particle_mass_energy_equivalent; 5.971920097E-10; alpha particle mass energy equivalent [J] uncertainty=0.000 000 073 e-10. alpha_particle_mass_energy_equivalent_in_MeV; 3727.379378; alpha particle mass energy equivalent in MeV [MeV] uncertainty=0.000 023. alpha_particle_mass_in_u; 4.001506179127; alpha particle mass in u [u] uncertainty=0.000 000 000 063. alpha_particle_molar_mass; 0.004001506179127; alpha particle molar mass [kg mol^{-1}] uncertainty=0.000 000 000 063 e-3. alpha_particle_proton_mass_ratio; 3.97259968907; alpha particle-proton mass ratio [] uncertainty=0.000 000 000 36. Angstrom_star; 1.00001495E-10; Angstrom star [m] uncertainty=0.000 000 90 e-10. atomic_mass_constant; 1.660539040E-27; atomic mass constant [kg] uncertainty=0.000 000 020 e-27. atomic_mass_constant_energy_equivalent; 1.492418062E-10; atomic mass constant energy equivalent [J] uncertainty=0.000 000 018 e-10. atomic_mass_constant_energy_equivalent_in_MeV; 931.4940954; atomic mass constant energy equivalent in MeV [MeV] uncertainty=0.000 0057. atomic_mass_unit_electron_volt_relationship; 931494095.4; atomic mass unit-electron volt relationship [eV] uncertainty=0.000 0057 e6. atomic_mass_unit_hartree_relationship; 34231776.902; atomic mass unit-hartree relationship [E_h] uncertainty=0.000 000 0016 e7. atomic_mass_unit_hertz_relationship; 2.2523427206E+23; atomic mass unit-hertz relationship [Hz] uncertainty=0.000 000 0010 e23. atomic_mass_unit_inverse_meter_relation,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodoc_physconst-1.html:602,energy,energy,602,psi4manual/1.4.0/autodoc_physconst-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodoc_physconst-1.html,4,['energy'],['energy']
Energy Efficiency,﻿. Physical Constants. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Physical Constants. Physical Constants¶. Physical constants in PSI4¶. Label; Value; Description. _220_lattice_spacing_of_silicon; 1.920155714E-10; {220} lattice spacing of silicon [m] uncertainty=0.000 0032 e-12. alpha_particle_electron_mass_ratio; 7294.29954136; alpha particle-electron mass ratio [] uncertainty=0.000 000 24. alpha_particle_mass; 6.644657230E-27; alpha particle mass [kg] uncertainty=0.000 000 082 e-27. alpha_particle_mass_energy_equivalent; 5.971920097E-10; alpha particle mass energy equivalent [J] uncertainty=0.000 000 073 e-10. alpha_particle_mass_energy_equivalent_in_MeV; 3727.379378; alpha particle mass energy equivalent in MeV [MeV] uncertainty=0.000 023. alpha_particle_mass_in_u; 4.001506179127; alpha particle mass in u [u] uncertainty=0.000 000 000 063. alpha_particle_molar_mass; 0.004001506179127; alpha particle molar mass [kg mol^{-1}] uncertainty=0.000 000 000 063 e-3. alpha_particle_proton_mass_ratio; 3.97259968907; alpha particle-proton mass ratio [] uncertainty=0.000 000 000 36. Angstrom_star; 1.00001495E-10; Angstrom star [m] uncertainty=0.000 000 90 e-10. atomic_mass_constant; 1.660539040E-27; atomic mass constant [kg] uncertainty=0.000 000 020 e-27. atomic_mass_constant_energy_equivalent; 1.492418062E-10; atomic mass constant energy equivalent [J] uncertainty=0.000 000 018 e-10. atomic_mass_constant_energy_equivalent_in_MeV; 931.4940954; atomic mass constant energy equivalent in MeV [MeV] uncertainty=0.000 0057. atomic_mass_unit_electron_volt_relationship; 931494095.4; atomic mass unit-electron volt relationship [eV] uncertainty=0.000 0057 e6. atomic_mass_unit_hartree_relationship; 34231776.902; atomic mass unit-hartree relationship [E_h] uncertainty=0.000 000 0016 e7. atomic_mass_unit_hertz_relationship; 2.2523427206E+23; atomic mass unit-hertz relationship [Hz] uncertainty=0.000 000 0010 e23. atomic_mass_unit_inverse_meter_relation,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodoc_physconst-1.html:602,energy,energy,602,psi4manual/1.5.0/autodoc_physconst-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodoc_physconst-1.html,4,['energy'],['energy']
Energy Efficiency,﻿. Physical Constants. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Physical Constants. Physical Constants¶. Physical constants in PSI4¶. Label; Value; Description. _220_lattice_spacing_of_silicon; 1.920155714E-10; {220} lattice spacing of silicon [m] uncertainty=0.000 0032 e-12. alpha_particle_electron_mass_ratio; 7294.29954136; alpha particle-electron mass ratio [] uncertainty=0.000 000 24. alpha_particle_mass; 6.644657230E-27; alpha particle mass [kg] uncertainty=0.000 000 082 e-27. alpha_particle_mass_energy_equivalent; 5.971920097E-10; alpha particle mass energy equivalent [J] uncertainty=0.000 000 073 e-10. alpha_particle_mass_energy_equivalent_in_MeV; 3727.379378; alpha particle mass energy equivalent in MeV [MeV] uncertainty=0.000 023. alpha_particle_mass_in_u; 4.001506179127; alpha particle mass in u [u] uncertainty=0.000 000 000 063. alpha_particle_molar_mass; 0.004001506179127; alpha particle molar mass [kg mol^{-1}] uncertainty=0.000 000 000 063 e-3. alpha_particle_proton_mass_ratio; 3.97259968907; alpha particle-proton mass ratio [] uncertainty=0.000 000 000 36. Angstrom_star; 1.00001495E-10; Angstrom star [m] uncertainty=0.000 000 90 e-10. atomic_mass_constant; 1.660539040E-27; atomic mass constant [kg] uncertainty=0.000 000 020 e-27. atomic_mass_constant_energy_equivalent; 1.492418062E-10; atomic mass constant energy equivalent [J] uncertainty=0.000 000 018 e-10. atomic_mass_constant_energy_equivalent_in_MeV; 931.4940954; atomic mass constant energy equivalent in MeV [MeV] uncertainty=0.000 0057. atomic_mass_unit_electron_volt_relationship; 931494095.4; atomic mass unit-electron volt relationship [eV] uncertainty=0.000 0057 e6. atomic_mass_unit_hartree_relationship; 34231776.902; atomic mass unit-hartree relationship [E_h] uncertainty=0.000 000 0016 e7. atomic_mass_unit_hertz_relationship; 2.2523427206E+23; atomic mass unit-hertz relationship [Hz] uncertainty=0.000 000 0010 e23. atomic_mass_unit_inverse_meter_relation,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodoc_physconst.html:602,energy,energy,602,psi4manual/1.6.x/autodoc_physconst.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodoc_physconst.html,2,['energy'],['energy']
Energy Efficiency,﻿. Physical Constants. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Physical Constants. Physical Constants¶. Physical constants in PSI4¶. Label; Value; Description. _220_lattice_spacing_of_silicon; 1.920155714E-10; {220} lattice spacing of silicon [m] uncertainty=0.000 0032 e-12. alpha_particle_electron_mass_ratio; 7294.29954136; alpha particle-electron mass ratio [] uncertainty=0.000 000 24. alpha_particle_mass; 6.644657230E-27; alpha particle mass [kg] uncertainty=0.000 000 082 e-27. alpha_particle_mass_energy_equivalent; 5.971920097E-10; alpha particle mass energy equivalent [J] uncertainty=0.000 000 073 e-10. alpha_particle_mass_energy_equivalent_in_MeV; 3727.379378; alpha particle mass energy equivalent in MeV [MeV] uncertainty=0.000 023. alpha_particle_mass_in_u; 4.001506179127; alpha particle mass in u [u] uncertainty=0.000 000 000 063. alpha_particle_molar_mass; 0.004001506179127; alpha particle molar mass [kg mol^{-1}] uncertainty=0.000 000 000 063 e-3. alpha_particle_proton_mass_ratio; 3.97259968907; alpha particle-proton mass ratio [] uncertainty=0.000 000 000 36. Angstrom_star; 1.00001495E-10; Angstrom star [m] uncertainty=0.000 000 90 e-10. atomic_mass_constant; 1.660539040E-27; atomic mass constant [kg] uncertainty=0.000 000 020 e-27. atomic_mass_constant_energy_equivalent; 1.492418062E-10; atomic mass constant energy equivalent [J] uncertainty=0.000 000 018 e-10. atomic_mass_constant_energy_equivalent_in_MeV; 931.4940954; atomic mass constant energy equivalent in MeV [MeV] uncertainty=0.000 0057. atomic_mass_unit_electron_volt_relationship; 931494095.4; atomic mass unit-electron volt relationship [eV] uncertainty=0.000 0057 e6. atomic_mass_unit_hartree_relationship; 34231776.902; atomic mass unit-hartree relationship [E_h] uncertainty=0.000 000 0016 e7. atomic_mass_unit_hertz_relationship; 2.2523427206E+23; atomic mass unit-hertz relationship [Hz] uncertainty=0.000 000 0010 e23. atomic_mass_unit_inverse_meter_relation,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodoc_physconst.html:602,energy,energy,602,psi4manual/1.7.x/autodoc_physconst.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodoc_physconst.html,2,['energy'],['energy']
Energy Efficiency,﻿. Physical Constants. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Physical Constants. Physical Constants¶. Physical constants in PSI4¶. Label; Value; Description. _220_lattice_spacing_of_silicon; 1.920155714E-10; {220} lattice spacing of silicon [m] uncertainty=0.000 0032 e-12. alpha_particle_electron_mass_ratio; 7294.29954136; alpha particle-electron mass ratio [] uncertainty=0.000 000 24. alpha_particle_mass; 6.644657230E-27; alpha particle mass [kg] uncertainty=0.000 000 082 e-27. alpha_particle_mass_energy_equivalent; 5.971920097E-10; alpha particle mass energy equivalent [J] uncertainty=0.000 000 073 e-10. alpha_particle_mass_energy_equivalent_in_MeV; 3727.379378; alpha particle mass energy equivalent in MeV [MeV] uncertainty=0.000 023. alpha_particle_mass_in_u; 4.001506179127; alpha particle mass in u [u] uncertainty=0.000 000 000 063. alpha_particle_molar_mass; 0.004001506179127; alpha particle molar mass [kg mol^{-1}] uncertainty=0.000 000 000 063 e-3. alpha_particle_proton_mass_ratio; 3.97259968907; alpha particle-proton mass ratio [] uncertainty=0.000 000 000 36. Angstrom_star; 1.00001495E-10; Angstrom star [m] uncertainty=0.000 000 90 e-10. atomic_mass_constant; 1.660539040E-27; atomic mass constant [kg] uncertainty=0.000 000 020 e-27. atomic_mass_constant_energy_equivalent; 1.492418062E-10; atomic mass constant energy equivalent [J] uncertainty=0.000 000 018 e-10. atomic_mass_constant_energy_equivalent_in_MeV; 931.4940954; atomic mass constant energy equivalent in MeV [MeV] uncertainty=0.000 0057. atomic_mass_unit_electron_volt_relationship; 931494095.4; atomic mass unit-electron volt relationship [eV] uncertainty=0.000 0057 e6. atomic_mass_unit_hartree_relationship; 34231776.902; atomic mass unit-hartree relationship [E_h] uncertainty=0.000 000 0016 e7. atomic_mass_unit_hertz_relationship; 2.2523427206E+23; atomic mass unit-hertz relationship [Hz] uncertainty=0.000 000 0010 e23. atomic_mass_unit_inverse_meter_relati,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodoc_physconst.html:604,energy,energy,604,psi4manual/1.8.x/autodoc_physconst.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodoc_physconst.html,2,['energy'],['energy']
Energy Efficiency,﻿. Physical Constants. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Physical Constants. Physical Constants¶. Physical constants in PSI4¶. Label; Value; Description. _220_lattice_spacing_of_silicon; 1.920155714E-10; {220} lattice spacing of silicon [m] uncertainty=0.000 0032 e-12. alpha_particle_electron_mass_ratio; 7294.29954136; alpha particle-electron mass ratio [] uncertainty=0.000 000 24. alpha_particle_mass; 6.644657230E-27; alpha particle mass [kg] uncertainty=0.000 000 082 e-27. alpha_particle_mass_energy_equivalent; 5.971920097E-10; alpha particle mass energy equivalent [J] uncertainty=0.000 000 073 e-10. alpha_particle_mass_energy_equivalent_in_MeV; 3727.379378; alpha particle mass energy equivalent in MeV [MeV] uncertainty=0.000 023. alpha_particle_mass_in_u; 4.001506179127; alpha particle mass in u [u] uncertainty=0.000 000 000 063. alpha_particle_molar_mass; 0.004001506179127; alpha particle molar mass [kg mol^{-1}] uncertainty=0.000 000 000 063 e-3. alpha_particle_proton_mass_ratio; 3.97259968907; alpha particle-proton mass ratio [] uncertainty=0.000 000 000 36. Angstrom_star; 1.00001495E-10; Angstrom star [m] uncertainty=0.000 000 90 e-10. atomic_mass_constant; 1.660539040E-27; atomic mass constant [kg] uncertainty=0.000 000 020 e-27. atomic_mass_constant_energy_equivalent; 1.492418062E-10; atomic mass constant energy equivalent [J] uncertainty=0.000 000 018 e-10. atomic_mass_constant_energy_equivalent_in_MeV; 931.4940954; atomic mass constant energy equivalent in MeV [MeV] uncertainty=0.000 0057. atomic_mass_unit_electron_volt_relationship; 931494095.4; atomic mass unit-electron volt relationship [eV] uncertainty=0.000 0057 e6. atomic_mass_unit_hartree_relationship; 34231776.902; atomic mass unit-hartree relationship [E_h] uncertainty=0.000 000 0016 e7. atomic_mass_unit_hertz_relationship; 2.2523427206E+23; atomic mass unit-hertz relationship [Hz] uncertainty=0.000 000 0010 e23. atomic_mass_unit_inverse_meter_relati,MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodoc_physconst.html:604,energy,energy,604,psi4manual/1.9.x/autodoc_physconst.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodoc_physconst.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Property — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». Property¶. property(name[, properties, molecule])[source]¶; Function to compute various properties. Aliases :prop(). Returns:(float) Total electronic energy in Hartrees. Caution; Some features are not yet implemented. Buy a developer a coffee. This function at present handles property functions only for CC methods.; Consult the keywords sections for other modules for further property capabilities.; Check that energy is actually being returned.; Check if some PSI variables ought to be set. name; calls method. scf; Self-consistent field method(s). cc2; 2nd-order approximate CCSD. ccsd; coupled cluster singles and doubles (CCSD). eom-cc2; 2nd-order approximate EOM-CCSD. eom-ccsd; equation-of-motion coupled cluster singles and doubles (EOM-CCSD). Parameters:; name (string) – 'ccsd' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. properties (array of strings) – [] || ['rotation', 'polarizability', 'oscillator_strength', 'roa'] || etc.; Indicates which properties should be computed. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. Examples :. >>> # [1] Optical rotation calculation; >>> property('cc2', properties=['rotation']). Previous topic; Energy; Next topic; Counterpoise Correct; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/prop-1.html:304,energy,energy,304,psi4manual/4.0b2/prop-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/prop-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. PsiAPI Tutorial: Using Psi4 as a Python Module. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. A PSI4 Tutorial; PsiAPI Tutorial: Using Psi4 as a Python Module. PsiAPI Tutorial: Using Psi4 as a Python Module¶; transcribed by D. A. Sirianni. Note: Psithon and PsiAPI refer to two modes of interacting with Psi4. In Psithon mode, you write an input file in our domain-specific language (not quite Python) where commands don’t have psi4. in front, then submit it to the executable psi4 which processes the Psithon into pure Python and runs it internally. In PsiAPI mode, you write a pure Python script with import psi4 at the top, and commands are behind the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the PsiAPI mode. Note: PsiAPI mode has been available since late 2016 and the v1.1 release. While we aim to provide deprecation warnings and upgrade helpers, the API should not be considered completely stable. Most importantly, as we someday deprecate the last of the global variables, options will be added to the method calls (e.g., energy('scf', molecule=mol, options=opt)); Note: Consult How to run Psi4 as Python module after compilation or How to run Psi4 as a Python module from conda installation for assistance in setting up Psi4. Here, we will explore the basics of using Psi4 in the interactive PsiAPI style where it is loaded directly as a Python module by reproducing the section A Psi4 Tutorial from the Psi4 manual in an interactive Jupyter Notebook.; Note: If the newest version of Psi4 (v.1.1a2dev42 or newer) is in your path, feel free to execute each cell as you read along by pressing Shift+Enter when the cell is selected. I. Basic Input Structure¶; Psi4 is now a Python module; so, we need to import it into our Python environment:. [1]:. # Ignore this block -- it's for the documentation build; try:; import os, sys; sys.path.insert(1, os.path.abspath('/home/runner/work/psi4/",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/psiapi.html:771,power,powerful,771,psi4manual/master/psiapi.html,https://psicode.org,https://psicode.org/psi4manual/master/psiapi.html,1,['power'],['powerful']
Energy Efficiency,"﻿. PsiAPI Tutorial: Using Psi4 as a Python Module. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. A PSI4 Tutorial. PsiAPI Tutorial: Using Psi4 as a Python Module¶; transcribed by D. A. Sirianni. Note: Psithon and PsiAPI refer to two modes of interacting with; Psi4. In Psithon mode, you write an input file in our domain-specific; language (not quite Python) where commands don’t have psi4. in; front, then submit it to the executable psi4 which processes the; Psithon into pure Python and runs it internally. In PsiAPI mode, you; write a pure Python script with import psi4 at the top and commands; are behind the psi4. namespace, then submit it to the python; interpreter. Both modes are equally powerful. This tutorial covers the; PsiAPI mode. Warning: Although the developers have been using PsiAPI mode stably; for months before the 1.1 release and while we believe we’ve gotten; everything nicely arranged within the psi4. namespace, the API; should not be considered completely stable. Most importantly, as we; someday deprecate the last of the global variables, options will be; added to the method calls (e.g.,; energy('scf', molecule=mol, options=opt)); Unlike in the past, where Psi4 was executable software which could only; be called via input files like input.dat, it is now interactive,; able to be loaded directly as a Python module. Here, we will explore the; basics of using Psi4 in this new style by reproducing the section A; Psi4 Tutorial; from the Psi4 manual in an interactive Jupyter Notebook.; Note: If the newest version of Psi4 (v.1.1a2dev42 or newer) is in your; path, feel free to execute each cell as you read along by pressing; Shift+Enter when the cell is selected. I. Basic Input Structure¶; Psi4 is now a Python module; so, we need to import it into our Python; environment:. In [1]:. try:; import os, sys; sys.path.insert(1, os.path.abspath('/scratch/psilocaluser/conda-builds/psi4_1495011512596/work/build/stage//scratch/psilocaluser/conda-buil",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/psiapi-1.html:719,power,powerful,719,psi4manual/1.1.0/psiapi-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/psiapi-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PsiAPI Tutorial: Using Psi4 as a Python Module. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. A PSI4 Tutorial. PsiAPI Tutorial: Using Psi4 as a Python Module¶; transcribed by D. A. Sirianni. Note: Psithon and PsiAPI refer to two modes of interacting with; Psi4. In Psithon mode, you write an input file in our domain-specific; language (not quite Python) where commands don’t have psi4. in; front, then submit it to the executable psi4 which processes the; Psithon into pure Python and runs it internally. In PsiAPI mode, you; write a pure Python script with import psi4 at the top and commands; are behind the psi4. namespace, then submit it to the python; interpreter. Both modes are equally powerful. This tutorial covers the; PsiAPI mode. Warning: Although the developers have been using PsiAPI mode stably; for months before the 1.1 release and while we believe we’ve gotten; everything nicely arranged within the psi4. namespace, the API; should not be considered completely stable. Most importantly, as we; someday deprecate the last of the global variables, options will be; added to the method calls (e.g.,; energy('scf', molecule=mol, options=opt)); Note: Consult How to run Psi4 as Python module after; compilation; or How to run Psi4 as a Python module from conda; installation; for assistance in setting up Psi4. Unlike in the past, where Psi4 was executable software which could only; be called via input files like input.dat, it is now interactive,; able to be loaded directly as a Python module. Here, we will explore the; basics of using Psi4 in this new style by reproducing the section A; Psi4 Tutorial; from the Psi4 manual in an interactive Jupyter Notebook.; Note: If the newest version of Psi4 (v.1.1a2dev42 or newer) is in your; path, feel free to execute each cell as you read along by pressing; Shift+Enter when the cell is selected. I. Basic Input Structure¶; Psi4 is now a Python module; so, we need to import it into our Python; environment:. In",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/psiapi-1.html:721,power,powerful,721,psi4manual/1.2.1/psiapi-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/psiapi-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PsiAPI Tutorial: Using Psi4 as a Python Module. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. A PSI4 Tutorial. PsiAPI Tutorial: Using Psi4 as a Python Module¶; transcribed by D. A. Sirianni. Note: Psithon and PsiAPI refer to two modes of interacting with Psi4. In Psithon mode, you write an input file in our domain-specific language (not quite Python) where commands don’t have psi4. in front, then submit it to the executable psi4 which processes the Psithon into pure Python and runs it internally. In PsiAPI mode, you write a pure Python script with import psi4 at the top and commands are behind the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the PsiAPI mode. Warning: Although the developers have been using PsiAPI mode stably for months before the 1.1 release and while we believe we’ve gotten everything nicely arranged within the psi4. namespace, the API should not be considered completely stable. Most importantly, as we someday deprecate the last of the global variables, options will be added to the method calls (e.g., energy('scf', molecule=mol, options=opt)); Note: Consult How to run Psi4 as Python module after compilation or How to run Psi4 as a Python module from conda installation for assistance in setting up Psi4. Unlike in the past, where Psi4 was executable software which could only be called via input files like input.dat, it is now interactive, able to be loaded directly as a Python module. Here, we will explore the basics of using Psi4 in this new style by reproducing the section A Psi4 Tutorial from the Psi4 manual in an interactive Jupyter Notebook.; Note: If the newest version of Psi4 (v.1.1a2dev42 or newer) is in your path, feel free to execute each cell as you read along by pressing Shift+Enter when the cell is selected. I. Basic Input Structure¶; Psi4 is now a Python module; so, we need to import it into our Python environment:. [1]:. try:; import os, sys;",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/psiapi-1.html:715,power,powerful,715,psi4manual/1.3.2/psiapi-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/psiapi-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PsiAPI Tutorial: Using Psi4 as a Python Module. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. A PSI4 Tutorial; PsiAPI Tutorial: Using Psi4 as a Python Module. PsiAPI Tutorial: Using Psi4 as a Python Module¶; transcribed by D. A. Sirianni. Note: Psithon and PsiAPI refer to two modes of interacting with Psi4. In Psithon mode, you write an input file in our domain-specific language (not quite Python) where commands don’t have psi4. in front, then submit it to the executable psi4 which processes the Psithon into pure Python and runs it internally. In PsiAPI mode, you write a pure Python script with import psi4 at the top, and commands are behind the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the PsiAPI mode. Note: PsiAPI mode has been available since late 2016 and the v1.1 release. While we aim to provide deprecation warnings and upgrade helpers, the API should not be considered completely stable. Most importantly, as we someday deprecate the last of the global variables, options will be added to the method calls (e.g., energy('scf', molecule=mol, options=opt)); Note: Consult How to run Psi4 as Python module after compilation or How to run Psi4 as a Python module from conda installation for assistance in setting up Psi4. Here, we will explore the basics of using Psi4 in the interactive PsiAPI style where it is loaded directly as a Python module by reproducing the section A Psi4 Tutorial from the Psi4 manual in an interactive Jupyter Notebook.; Note: If the newest version of Psi4 (v.1.1a2dev42 or newer) is in your path, feel free to execute each cell as you read along by pressing Shift+Enter when the cell is selected. I. Basic Input Structure¶; Psi4 is now a Python module; so, we need to import it into our Python environment:. [1]:. # Ignore this block -- it's for the documentation build; try:; import os, sys; sys.path.insert(1, os.path.abspath('/home/runner/work/psi4/psi4/code",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/psiapi-1.html:762,power,powerful,762,psi4manual/1.4.0/psiapi-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/psiapi-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PsiAPI Tutorial: Using Psi4 as a Python Module. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. A PSI4 Tutorial; PsiAPI Tutorial: Using Psi4 as a Python Module. PsiAPI Tutorial: Using Psi4 as a Python Module¶; transcribed by D. A. Sirianni. Note: Psithon and PsiAPI refer to two modes of interacting with Psi4. In Psithon mode, you write an input file in our domain-specific language (not quite Python) where commands don’t have psi4. in front, then submit it to the executable psi4 which processes the Psithon into pure Python and runs it internally. In PsiAPI mode, you write a pure Python script with import psi4 at the top, and commands are behind the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the PsiAPI mode. Note: PsiAPI mode has been available since late 2016 and the v1.1 release. While we aim to provide deprecation warnings and upgrade helpers, the API should not be considered completely stable. Most importantly, as we someday deprecate the last of the global variables, options will be added to the method calls (e.g., energy('scf', molecule=mol, options=opt)); Note: Consult How to run Psi4 as Python module after compilation or How to run Psi4 as a Python module from conda installation for assistance in setting up Psi4. Here, we will explore the basics of using Psi4 in the interactive PsiAPI style where it is loaded directly as a Python module by reproducing the section A Psi4 Tutorial from the Psi4 manual in an interactive Jupyter Notebook.; Note: If the newest version of Psi4 (v.1.1a2dev42 or newer) is in your path, feel free to execute each cell as you read along by pressing Shift+Enter when the cell is selected. I. Basic Input Structure¶; Psi4 is now a Python module; so, we need to import it into our Python environment:. [1]:. # Ignore this block -- it's for the documentation build; try:; import os, sys; sys.path.insert(1, os.path.abspath('/home/runner/work/psi4/psi4/code",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/psiapi-1.html:762,power,powerful,762,psi4manual/1.5.0/psiapi-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/psiapi-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. PsiAPI Tutorial: Using Psi4 as a Python Module. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. A PSI4 Tutorial; PsiAPI Tutorial: Using Psi4 as a Python Module. PsiAPI Tutorial: Using Psi4 as a Python Module¶; transcribed by D. A. Sirianni. Note: Psithon and PsiAPI refer to two modes of interacting with Psi4. In Psithon mode, you write an input file in our domain-specific language (not quite Python) where commands don’t have psi4. in front, then submit it to the executable psi4 which processes the Psithon into pure Python and runs it internally. In PsiAPI mode, you write a pure Python script with import psi4 at the top, and commands are behind the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the PsiAPI mode. Note: PsiAPI mode has been available since late 2016 and the v1.1 release. While we aim to provide deprecation warnings and upgrade helpers, the API should not be considered completely stable. Most importantly, as we someday deprecate the last of the global variables, options will be added to the method calls (e.g., energy('scf', molecule=mol, options=opt)); Note: Consult How to run Psi4 as Python module after compilation or How to run Psi4 as a Python module from conda installation for assistance in setting up Psi4. Here, we will explore the basics of using Psi4 in the interactive PsiAPI style where it is loaded directly as a Python module by reproducing the section A Psi4 Tutorial from the Psi4 manual in an interactive Jupyter Notebook.; Note: If the newest version of Psi4 (v.1.1a2dev42 or newer) is in your path, feel free to execute each cell as you read along by pressing Shift+Enter when the cell is selected. I. Basic Input Structure¶; Psi4 is now a Python module; so, we need to import it into our Python environment:. [1]:. # Ignore this block -- it's for the documentation build; try:; import os, sys; sys.path.insert(1, os.path.abspath('/home/runner/work/psi4/psi4/code",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/psiapi.html:762,power,powerful,762,psi4manual/1.6.x/psiapi.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/psiapi.html,1,['power'],['powerful']
Energy Efficiency,"﻿. PsiAPI Tutorial: Using Psi4 as a Python Module. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. A PSI4 Tutorial; PsiAPI Tutorial: Using Psi4 as a Python Module. PsiAPI Tutorial: Using Psi4 as a Python Module¶; transcribed by D. A. Sirianni. Note: Psithon and PsiAPI refer to two modes of interacting with Psi4. In Psithon mode, you write an input file in our domain-specific language (not quite Python) where commands don’t have psi4. in front, then submit it to the executable psi4 which processes the Psithon into pure Python and runs it internally. In PsiAPI mode, you write a pure Python script with import psi4 at the top, and commands are behind the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the PsiAPI mode. Note: PsiAPI mode has been available since late 2016 and the v1.1 release. While we aim to provide deprecation warnings and upgrade helpers, the API should not be considered completely stable. Most importantly, as we someday deprecate the last of the global variables, options will be added to the method calls (e.g., energy('scf', molecule=mol, options=opt)); Note: Consult How to run Psi4 as Python module after compilation or How to run Psi4 as a Python module from conda installation for assistance in setting up Psi4. Here, we will explore the basics of using Psi4 in the interactive PsiAPI style where it is loaded directly as a Python module by reproducing the section A Psi4 Tutorial from the Psi4 manual in an interactive Jupyter Notebook.; Note: If the newest version of Psi4 (v.1.1a2dev42 or newer) is in your path, feel free to execute each cell as you read along by pressing Shift+Enter when the cell is selected. I. Basic Input Structure¶; Psi4 is now a Python module; so, we need to import it into our Python environment:. [1]:. # Ignore this block -- it's for the documentation build; try:; import os, sys; sys.path.insert(1, os.path.abspath('/home/runner/work/psi4/psi4/code",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/psiapi.html:762,power,powerful,762,psi4manual/1.7.x/psiapi.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/psiapi.html,1,['power'],['powerful']
Energy Efficiency,"﻿. PsiAPI Tutorial: Using Psi4 as a Python Module. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. A PSI4 Tutorial; PsiAPI Tutorial: Using Psi4 as a Python Module. PsiAPI Tutorial: Using Psi4 as a Python Module¶; transcribed by D. A. Sirianni. Note: Psithon and PsiAPI refer to two modes of interacting with Psi4. In Psithon mode, you write an input file in our domain-specific language (not quite Python) where commands don’t have psi4. in front, then submit it to the executable psi4 which processes the Psithon into pure Python and runs it internally. In PsiAPI mode, you write a pure Python script with import psi4 at the top, and commands are behind the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the PsiAPI mode. Note: PsiAPI mode has been available since late 2016 and the v1.1 release. While we aim to provide deprecation warnings and upgrade helpers, the API should not be considered completely stable. Most importantly, as we someday deprecate the last of the global variables, options will be added to the method calls (e.g., energy('scf', molecule=mol, options=opt)); Note: Consult How to run Psi4 as Python module after compilation or How to run Psi4 as a Python module from conda installation for assistance in setting up Psi4. Here, we will explore the basics of using Psi4 in the interactive PsiAPI style where it is loaded directly as a Python module by reproducing the section A Psi4 Tutorial from the Psi4 manual in an interactive Jupyter Notebook.; Note: If the newest version of Psi4 (v.1.1a2dev42 or newer) is in your path, feel free to execute each cell as you read along by pressing Shift+Enter when the cell is selected. I. Basic Input Structure¶; Psi4 is now a Python module; so, we need to import it into our Python environment:. [1]:. # Ignore this block -- it's for the documentation build; try:; import os, sys; sys.path.insert(1, os.path.abspath('/psi/gits/hrw-demo/objdir_docs",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/psiapi.html:764,power,powerful,764,psi4manual/1.8.x/psiapi.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/psiapi.html,1,['power'],['powerful']
Energy Efficiency,"﻿. PsiAPI Tutorial: Using Psi4 as a Python Module. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. A PSI4 Tutorial; PsiAPI Tutorial: Using Psi4 as a Python Module. PsiAPI Tutorial: Using Psi4 as a Python Module¶; transcribed by D. A. Sirianni. Note: Psithon and PsiAPI refer to two modes of interacting with Psi4. In Psithon mode, you write an input file in our domain-specific language (not quite Python) where commands don’t have psi4. in front, then submit it to the executable psi4 which processes the Psithon into pure Python and runs it internally. In PsiAPI mode, you write a pure Python script with import psi4 at the top, and commands are behind the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the PsiAPI mode. Note: PsiAPI mode has been available since late 2016 and the v1.1 release. While we aim to provide deprecation warnings and upgrade helpers, the API should not be considered completely stable. Most importantly, as we someday deprecate the last of the global variables, options will be added to the method calls (e.g., energy('scf', molecule=mol, options=opt)); Note: Consult How to run Psi4 as Python module after compilation or How to run Psi4 as a Python module from conda installation for assistance in setting up Psi4. Here, we will explore the basics of using Psi4 in the interactive PsiAPI style where it is loaded directly as a Python module by reproducing the section A Psi4 Tutorial from the Psi4 manual in an interactive Jupyter Notebook.; Note: If the newest version of Psi4 (v.1.1a2dev42 or newer) is in your path, feel free to execute each cell as you read along by pressing Shift+Enter when the cell is selected. I. Basic Input Structure¶; Psi4 is now a Python module; so, we need to import it into our Python environment:. [1]:. # Ignore this block -- it's for the documentation build; try:; import os, sys; sys.path.insert(1, os.path.abspath('/home/runner/work/psi4/psi4/co",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/psiapi.html:764,power,powerful,764,psi4manual/1.9.x/psiapi.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/psiapi.html,1,['power'],['powerful']
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » . Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4’s functionality. Notes on Options; Energy; Property; Counterpoise Correct; Optimize; Frequency; Database; Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes. Function Intercalls; Embarrassing Parallelism. Previous topic; Geometry Optimization; Next topic; Notes on Options; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » . © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/psithonfunc-1.html:566,efficient,efficient,566,psi4manual/4.0b2/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/psithonfunc-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » . Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4’s functionality. Notes on Options; Energy; Property; Counterpoise Correct; Optimize; Frequency; Database; Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes. Spectroscopic Constants for Diatomics; Function Intercalls. Previous topic; Evaluation of One-Electron Properties; Next topic; Notes on Options; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » . © Copyright 2012, The Psi4 Project.; Last updated on Nov 02, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/psithonfunc-1.html:581,efficient,efficient,581,psi4manual/4.0b3/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/psithonfunc-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » . Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4’s functionality. Notes on Options; Energy; Property; Counterpoise Correct; Optimize; Frequency; Database; Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes. Spectroscopic Constants for Diatomics; Function Intercalls. Previous topic; Interface to Molden; Next topic; Notes on Options; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » . © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/psithonfunc-1.html:581,efficient,efficient,581,psi4manual/4.0b4/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/psithonfunc-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » . Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4’s functionality. Notes on Options; Energy; Property; Counterpoise Correct; Optimize; Frequency; Database; Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls. Previous topic; Interface to Molden; Next topic; Notes on Options; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » . © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/psithonfunc-1.html:581,efficient,efficient,581,psi4manual/4.0b5/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/psithonfunc-1.html,2,['efficient'],['efficient']
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » . Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, Psi4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the Psi4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent Psi4‘s functionality. Notes on Options; Single-Point Energy, energy(); Property; Counterpoise Correct; Geometry Optimization, optimize() and gradient(); Harmonic Vibrational Analysis, frequency() and hessian(); Database, database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; cubeprop() Generation of cube files; Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. Previous topic; Interface to MRCC by M. Kállay; Next topic; Notes on Options. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » . © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/psithonfunc-1.html:588,efficient,efficient,588,psi4manual/1.0.0/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/psithonfunc-1.html,4,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; nbody(); API. Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes; psi4.driver.qcdb.vib Module; API. Database — database(); database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases; API. Spectroscopic Constants for Diatomics; anharmonicity(). Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/psithonfunc.html:590,efficient,efficient,590,psi4manual/master/psithonfunc.html,https://psicode.org,https://psicode.org/psi4manual/master/psithonfunc.html,2,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes. Database — database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/psithonfunc-1.html:538,efficient,efficient,538,psi4manual/1.1.0/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/psithonfunc-1.html,4,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4’s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes. Database — database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/psithonfunc-1.html:540,efficient,efficient,540,psi4manual/1.2.1/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/psithonfunc-1.html,4,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4’s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes. Database — database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/psithonfunc-1.html:540,efficient,efficient,540,psi4manual/1.3.2/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/psithonfunc-1.html,4,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes; psi4.driver.qcdb.vib Module. Database — database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/psithonfunc-1.html:581,efficient,efficient,581,psi4manual/1.4.0/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/psithonfunc-1.html,4,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes; psi4.driver.qcdb.vib Module. Database — database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/psithonfunc-1.html:581,efficient,efficient,581,psi4manual/1.5.0/psithonfunc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/psithonfunc-1.html,4,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes; psi4.driver.qcdb.vib Module. Database — database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/psithonfunc.html:581,efficient,efficient,581,psi4manual/1.6.x/psithonfunc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/psithonfunc.html,2,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; API. Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes; psi4.driver.qcdb.vib Module; API. Database — database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases; API. Spectroscopic Constants for Diatomics; Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/psithonfunc.html:581,efficient,efficient,581,psi4manual/1.7.x/psithonfunc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/psithonfunc.html,2,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; nbody(); API. Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes; psi4.driver.qcdb.vib Module; API. Database — database(); database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases; API. Spectroscopic Constants for Diatomics; anharmonicity(). Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/psithonfunc.html:583,efficient,efficient,583,psi4manual/1.8.x/psithonfunc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/psithonfunc.html,2,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"﻿. Psithon Functions: Invoking a Calculation. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Psithon Functions: Invoking a Calculation¶; To allow arbitrarily complex computations to be performed, PSI4 is built; upon the Python interpreter, with modifications termed Psithon. Sec.; Psithon: Structuring an Input File describes the non-standard Python associated with; clean molecule, basis, and option specification in the PSI4 input file.; This documentation addresses the pure Python side- what functions allow; the efficient compiled code to be run, what functions post-process and; interact with that output, and how the ordinary (or ambitious) user can; extent PSI4‘s functionality. Notes on Options; Single-Point Energy — energy(); Property; Basis Set Superposition Corrections; nbody(); API. Geometry Optimization — optimize() and gradient(); Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); Visualization of Normal Modes; psi4.driver.qcdb.vib Module; API. Database — database(); database(); Output; Available Databases. Complete Basis Set; Output; Extrapolation Schemes; Aliases; API. Spectroscopic Constants for Diatomics; anharmonicity(). Function Intercalls; Embarrassing Parallelism; Generation of Cube Files — cubeprop(); Introduction; Cubeprop Tasks; Keywords. Orbital Visualization with VMD; Script Prerequisites; Running the Script; Script Options. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/psithonfunc.html:583,efficient,efficient,583,psi4manual/1.9.x/psithonfunc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/psithonfunc.html,2,"['efficient', 'energy']","['efficient', 'energy']"
Energy Efficiency,"﻿. Psithon Tutorial: Using PSI4 as an Executable. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. A PSI4 Tutorial; Psithon Tutorial: Using PSI4 as an Executable. Psithon Tutorial: Using PSI4 as an Executable¶. Note; Psithon and PsiAPI refer to two modes of interacting with PSI4. In; Psithon mode, you write an input file in our domain-specific language; (not quite Python) where commands don’t have psi4. in front, then; submit it to the executable psi4 which processes the Psithon into; pure Python and runs it internally. In PsiAPI mode, you write a pure; Python script with import psi4 at the top and commands are behind; the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the Psithon; mode. Note; Some PSI4 functions and keywords have aliases. For example,; frequency(), frequencies(), and freq() all work to; obtain vibrational frequencies. Basic Input File Structure¶; PSI4 reads input from a text file, which can be prepared in any standard; text editor. The default input file name is input.dat and the; default output file name is output.dat. So that you can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:; >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any “.in” or “.dat” extension by “.out”). Sample Input Files¶; Below, we will provide a few simple input files as examples. A large; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the psi4/samples directory. Running a Basic Hartree–Fock Calculation¶; In our first example, we will consider a Hartree–Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; g",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/tutorial.html:742,power,powerful,742,psi4manual/master/tutorial.html,https://psicode.org,https://psicode.org/psi4manual/master/tutorial.html,1,['power'],['powerful']
Energy Efficiency,"﻿. Psithon Tutorial: Using PSI4 as an Executable. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. A PSI4 Tutorial. Psithon Tutorial: Using PSI4 as an Executable¶. Note; Psithon and PsiAPI refer to two modes of interacting with PSI4. In; Psithon mode, you write an input file in our domain-specific language; (not quite Python) where commands don’t have psi4. in front, then; submit it to the executable psi4 which processes the Psithon into; pure Python and runs it internally. In PsiAPI mode, you write a pure; Python script with import psi4 at the top and commands are behind; the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the Psithon; mode. Note; Some PSI4 functions and keywords have aliases. For example,; frequency(), frequencies(), and freq() all work to; obtain vibrational frequencies. Basic Input File Structure¶; PSI4 reads input from a text file, which can be prepared in any standard; text editor. The default input file name is input.dat and the; default output file name is output.dat. So that you can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:; 1>>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any ”.in” or ”.dat” extension by ”.out”). Sample Input Files¶; Below, we will provide a few simple input files as examples. A large; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the psi4/samples directory. Running a Basic Hartree–Fock Calculation¶; In our first example, we will consider a Hartree–Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/tutorial-1.html:686,power,powerful,686,psi4manual/1.1.0/tutorial-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/tutorial-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. Psithon Tutorial: Using PSI4 as an Executable. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. A PSI4 Tutorial. Psithon Tutorial: Using PSI4 as an Executable¶. Note; Psithon and PsiAPI refer to two modes of interacting with PSI4. In; Psithon mode, you write an input file in our domain-specific language; (not quite Python) where commands don’t have psi4. in front, then; submit it to the executable psi4 which processes the Psithon into; pure Python and runs it internally. In PsiAPI mode, you write a pure; Python script with import psi4 at the top and commands are behind; the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the Psithon; mode. Note; Some PSI4 functions and keywords have aliases. For example,; frequency(), frequencies(), and freq() all work to; obtain vibrational frequencies. Basic Input File Structure¶; PSI4 reads input from a text file, which can be prepared in any standard; text editor. The default input file name is input.dat and the; default output file name is output.dat. So that you can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:; 1>>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any “.in” or “.dat” extension by “.out”). Sample Input Files¶; Below, we will provide a few simple input files as examples. A large; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the psi4/samples directory. Running a Basic Hartree–Fock Calculation¶; In our first example, we will consider a Hartree–Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matr",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/tutorial-1.html:688,power,powerful,688,psi4manual/1.2.1/tutorial-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/tutorial-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. Psithon Tutorial: Using PSI4 as an Executable. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. A PSI4 Tutorial. Psithon Tutorial: Using PSI4 as an Executable¶. Note; Psithon and PsiAPI refer to two modes of interacting with PSI4. In; Psithon mode, you write an input file in our domain-specific language; (not quite Python) where commands don’t have psi4. in front, then; submit it to the executable psi4 which processes the Psithon into; pure Python and runs it internally. In PsiAPI mode, you write a pure; Python script with import psi4 at the top and commands are behind; the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the Psithon; mode. Note; Some PSI4 functions and keywords have aliases. For example,; frequency(), frequencies(), and freq() all work to; obtain vibrational frequencies. Basic Input File Structure¶; PSI4 reads input from a text file, which can be prepared in any standard; text editor. The default input file name is input.dat and the; default output file name is output.dat. So that you can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:; >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any “.in” or “.dat” extension by “.out”). Sample Input Files¶; Below, we will provide a few simple input files as examples. A large; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the psi4/samples directory. Running a Basic Hartree–Fock Calculation¶; In our first example, we will consider a Hartree–Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matri",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/tutorial-1.html:688,power,powerful,688,psi4manual/1.3.2/tutorial-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/tutorial-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. Psithon Tutorial: Using PSI4 as an Executable. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. A PSI4 Tutorial; Psithon Tutorial: Using PSI4 as an Executable. Psithon Tutorial: Using PSI4 as an Executable¶. Note; Psithon and PsiAPI refer to two modes of interacting with PSI4. In; Psithon mode, you write an input file in our domain-specific language; (not quite Python) where commands don’t have psi4. in front, then; submit it to the executable psi4 which processes the Psithon into; pure Python and runs it internally. In PsiAPI mode, you write a pure; Python script with import psi4 at the top and commands are behind; the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the Psithon; mode. Note; Some PSI4 functions and keywords have aliases. For example,; frequency(), frequencies(), and freq() all work to; obtain vibrational frequencies. Basic Input File Structure¶; PSI4 reads input from a text file, which can be prepared in any standard; text editor. The default input file name is input.dat and the; default output file name is output.dat. So that you can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:; >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any “.in” or “.dat” extension by “.out”). Sample Input Files¶; Below, we will provide a few simple input files as examples. A large; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the psi4/samples directory. Running a Basic Hartree–Fock Calculation¶; In our first example, we will consider a Hartree–Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry o",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/tutorial-1.html:733,power,powerful,733,psi4manual/1.4.0/tutorial-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/tutorial-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. Psithon Tutorial: Using PSI4 as an Executable. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. A PSI4 Tutorial; Psithon Tutorial: Using PSI4 as an Executable. Psithon Tutorial: Using PSI4 as an Executable¶. Note; Psithon and PsiAPI refer to two modes of interacting with PSI4. In; Psithon mode, you write an input file in our domain-specific language; (not quite Python) where commands don’t have psi4. in front, then; submit it to the executable psi4 which processes the Psithon into; pure Python and runs it internally. In PsiAPI mode, you write a pure; Python script with import psi4 at the top and commands are behind; the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the Psithon; mode. Note; Some PSI4 functions and keywords have aliases. For example,; frequency(), frequencies(), and freq() all work to; obtain vibrational frequencies. Basic Input File Structure¶; PSI4 reads input from a text file, which can be prepared in any standard; text editor. The default input file name is input.dat and the; default output file name is output.dat. So that you can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:; >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any “.in” or “.dat” extension by “.out”). Sample Input Files¶; Below, we will provide a few simple input files as examples. A large; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the psi4/samples directory. Running a Basic Hartree–Fock Calculation¶; In our first example, we will consider a Hartree–Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry o",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/tutorial-1.html:733,power,powerful,733,psi4manual/1.5.0/tutorial-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/tutorial-1.html,2,['power'],['powerful']
Energy Efficiency,"﻿. Psithon Tutorial: Using PSI4 as an Executable. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. A PSI4 Tutorial; Psithon Tutorial: Using PSI4 as an Executable. Psithon Tutorial: Using PSI4 as an Executable¶. Note; Psithon and PsiAPI refer to two modes of interacting with PSI4. In; Psithon mode, you write an input file in our domain-specific language; (not quite Python) where commands don’t have psi4. in front, then; submit it to the executable psi4 which processes the Psithon into; pure Python and runs it internally. In PsiAPI mode, you write a pure; Python script with import psi4 at the top and commands are behind; the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the Psithon; mode. Note; Some PSI4 functions and keywords have aliases. For example,; frequency(), frequencies(), and freq() all work to; obtain vibrational frequencies. Basic Input File Structure¶; PSI4 reads input from a text file, which can be prepared in any standard; text editor. The default input file name is input.dat and the; default output file name is output.dat. So that you can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:; >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any “.in” or “.dat” extension by “.out”). Sample Input Files¶; Below, we will provide a few simple input files as examples. A large; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the psi4/samples directory. Running a Basic Hartree–Fock Calculation¶; In our first example, we will consider a Hartree–Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry o",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/tutorial.html:733,power,powerful,733,psi4manual/1.6.x/tutorial.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/tutorial.html,1,['power'],['powerful']
Energy Efficiency,"﻿. Psithon Tutorial: Using PSI4 as an Executable. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. A PSI4 Tutorial; Psithon Tutorial: Using PSI4 as an Executable. Psithon Tutorial: Using PSI4 as an Executable¶. Note; Psithon and PsiAPI refer to two modes of interacting with PSI4. In; Psithon mode, you write an input file in our domain-specific language; (not quite Python) where commands don’t have psi4. in front, then; submit it to the executable psi4 which processes the Psithon into; pure Python and runs it internally. In PsiAPI mode, you write a pure; Python script with import psi4 at the top and commands are behind; the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the Psithon; mode. Note; Some PSI4 functions and keywords have aliases. For example,; frequency(), frequencies(), and freq() all work to; obtain vibrational frequencies. Basic Input File Structure¶; PSI4 reads input from a text file, which can be prepared in any standard; text editor. The default input file name is input.dat and the; default output file name is output.dat. So that you can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:; >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any “.in” or “.dat” extension by “.out”). Sample Input Files¶; Below, we will provide a few simple input files as examples. A large; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the psi4/samples directory. Running a Basic Hartree–Fock Calculation¶; In our first example, we will consider a Hartree–Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry o",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/tutorial.html:733,power,powerful,733,psi4manual/1.7.x/tutorial.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/tutorial.html,1,['power'],['powerful']
Energy Efficiency,"﻿. Psithon Tutorial: Using PSI4 as an Executable. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. A PSI4 Tutorial; Psithon Tutorial: Using PSI4 as an Executable. Psithon Tutorial: Using PSI4 as an Executable¶. Note; Psithon and PsiAPI refer to two modes of interacting with PSI4. In; Psithon mode, you write an input file in our domain-specific language; (not quite Python) where commands don’t have psi4. in front, then; submit it to the executable psi4 which processes the Psithon into; pure Python and runs it internally. In PsiAPI mode, you write a pure; Python script with import psi4 at the top and commands are behind; the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the Psithon; mode. Note; Some PSI4 functions and keywords have aliases. For example,; frequency(), frequencies(), and freq() all work to; obtain vibrational frequencies. Basic Input File Structure¶; PSI4 reads input from a text file, which can be prepared in any standard; text editor. The default input file name is input.dat and the; default output file name is output.dat. So that you can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:; >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any “.in” or “.dat” extension by “.out”). Sample Input Files¶; Below, we will provide a few simple input files as examples. A large; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the psi4/samples directory. Running a Basic Hartree–Fock Calculation¶; In our first example, we will consider a Hartree–Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/tutorial.html:735,power,powerful,735,psi4manual/1.8.x/tutorial.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/tutorial.html,1,['power'],['powerful']
Energy Efficiency,"﻿. Psithon Tutorial: Using PSI4 as an Executable. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. A PSI4 Tutorial; Psithon Tutorial: Using PSI4 as an Executable. Psithon Tutorial: Using PSI4 as an Executable¶. Note; Psithon and PsiAPI refer to two modes of interacting with PSI4. In; Psithon mode, you write an input file in our domain-specific language; (not quite Python) where commands don’t have psi4. in front, then; submit it to the executable psi4 which processes the Psithon into; pure Python and runs it internally. In PsiAPI mode, you write a pure; Python script with import psi4 at the top and commands are behind; the psi4. namespace, then submit it to the python interpreter.; Both modes are equally powerful. This tutorial covers the Psithon; mode. Note; Some PSI4 functions and keywords have aliases. For example,; frequency(), frequencies(), and freq() all work to; obtain vibrational frequencies. Basic Input File Structure¶; PSI4 reads input from a text file, which can be prepared in any standard; text editor. The default input file name is input.dat and the; default output file name is output.dat. So that you can give your; files meaningful names, these defaults can be changed by specifying; the input file name and output file name on the the command line.; The syntax is:; >>> psi4 input-name output-name. If you give an input name but no output name, then the output name will; be the same as the input name (replacing any “.in” or “.dat” extension by “.out”). Sample Input Files¶; Below, we will provide a few simple input files as examples. A large; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the psi4/samples directory. Running a Basic Hartree–Fock Calculation¶; In our first example, we will consider a Hartree–Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/tutorial.html:735,power,powerful,735,psi4manual/1.9.x/tutorial.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/tutorial.html,1,['power'],['powerful']
Energy Efficiency,"﻿. Python Driver — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » . Python Driver¶. wrapper_database¶; Module with functions that call the four main driver; functions: driver.energy, driver.optimize,; driver.response, and driver.frequency. diatomic¶. pcm_placeholder¶; This is a placeholder for the real pcmsolver.py script.; The location of the real pcmsolver.py is configured by CMake; to point to the proper install prefix.; In this way we avoid to transform inputparser.py into a file; that has to be configured by CMake; With conda, this starts to get complicated. Bottom option; works for build-in-place and build-psi-w-prebuilt-pcmsolver.; Upper option necessary when psi4metapackage is conda build; dependency. At least I think that’s what’s going on. dependency_check¶; Attempts to catch Python based import errors and provides possible solutions. gaussian_n¶. run_gaussian_2(name, **kwargs)[source]¶. frac¶. frac_nuke(molecule, **kwargs)[source]¶. frac_traverse(molecule, **kwargs)[source]¶. ip_fitting(molecule, omega_l, omega_r, **kwargs)[source]¶. molutil¶; Module with utility functions that act on molecule objects. BFS(self)[source]¶; Perform a breadth-first search (BFS) on the real atoms; in molecule, returning an array of atom indices of fragments.; Relies upon van der Waals radii and so faulty for close; (esp. hydrogen-bonded) fragments. Original code from; Michael S. Marshall. activate(mol)[source]¶; Function to set molecule object mol as the current active molecule.; Permitted for user use but deprecated in driver in favor of explicit; molecule-passing. dynamic_variable_bind(cls)[source]¶; Function to dynamically add extra members to; the psi4.Molecule class. extract_cluster_indexing(mol, cluster_size=0)[source]¶; Function to returns a LIST of all subclusters of the molecule mol of; real size cluster_size. If cluster_size = 0, returns all possible; combinations of cluster size. extract_clusters(mo",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodoc_driver-1.html:243,energy,energy,243,psi4manual/1.0.0/autodoc_driver-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodoc_driver-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. QMEFP_ELST — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; EFP ». QMEFP_ELST¶. Do include electrostatics energy term in QM/EFP computation?. Type: boolean; Default: true. Previous topic; QMEFP; Next topic; QMEFP_POL. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; EFP ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/efp__qmefp_elst-1.html:215,energy,energy,215,psi4manual/1.0.0/autodir_options_c/efp__qmefp_elst-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/efp__qmefp_elst-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. QMEFP_POL — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; EFP ». QMEFP_POL¶. Do include polarization energy term in EFP computation?. Type: boolean; Default: true. Previous topic; QMEFP_ELST; Next topic; FINDIF. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; EFP ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/efp__qmefp_pol-1.html:211,energy,energy,211,psi4manual/1.0.0/autodir_options_c/efp__qmefp_pol-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/efp__qmefp_pol-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. QMMM. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; QMMM. QMMM¶. class psi4.driver.QMMM[source]¶; Bases: object; Hold charges and psi4.core.ExternalPotential. Use psi4.driver.QMMMbohr instead. table of contents. QMMM; QMMM. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; QMMM. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.QMMM.html:186,charge,charges,186,psi4manual/master/api/psi4.driver.QMMM.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.QMMM.html,2,['charge'],['charges']
Energy Efficiency,"﻿. QMMM. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. QMMM¶. class psi4.driver.QMMM[source]¶; Bases: object; Methods Summary. addChargeAngstrom(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Bohr. addDiffuse(diffuse); Function to add a diffuse charge field diffuse. populateExtern(); Function to define a charge field external to the molecule through point and diffuse charges. Methods Documentation. addChargeAngstrom(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]¶; Function to add a diffuse charge field diffuse. populateExtern()[source]¶; Function to define a charge field external to the; molecule through point and diffuse charges. addChargeAngstrom(Q, x, y, z)[source]; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]; Function to add a diffuse charge field diffuse. populateExtern()[source]; Function to define a charge field external to the; molecule through point and diffuse charges. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.qmmm.html:240,charge,charge,240,psi4manual/1.2.1/api/psi4.driver.qmmm.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.qmmm.html,15,['charge'],"['charge', 'charges']"
Energy Efficiency,"﻿. QMMM. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. QMMM¶. class psi4.driver.QMMM[source]¶; Bases: object; Methods Summary. addChargeAngstrom(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Bohr. addDiffuse(diffuse); Function to add a diffuse charge field diffuse. populateExtern(); Function to define a charge field external to the molecule through point and diffuse charges. Methods Documentation. addChargeAngstrom(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]¶; Function to add a diffuse charge field diffuse. populateExtern()[source]¶; Function to define a charge field external to the; molecule through point and diffuse charges. addChargeAngstrom(Q, x, y, z)[source]; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]; Function to add a diffuse charge field diffuse. populateExtern()[source]; Function to define a charge field external to the; molecule through point and diffuse charges. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.qmmm.html:240,charge,charge,240,psi4manual/1.3.2/api/psi4.driver.qmmm.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.qmmm.html,15,['charge'],"['charge', 'charges']"
Energy Efficiency,"﻿. QMMM. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; QMMM. QMMM¶. class psi4.driver.QMMM[source]¶; Bases: object; Methods Summary. addChargeAngstrom(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Bohr. addDiffuse(diffuse); Function to add a diffuse charge field diffuse. populateExtern(); Function to define a charge field external to the molecule through point and diffuse charges. Methods Documentation. addChargeAngstrom(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]¶; Function to add a diffuse charge field diffuse. populateExtern()[source]¶; Function to define a charge field external to the; molecule through point and diffuse charges. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; QMMM. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.qmmm.html:244,charge,charge,244,psi4manual/1.4.0/api/psi4.driver.qmmm.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.qmmm.html,20,['charge'],"['charge', 'charges']"
Energy Efficiency,"﻿. QMMM. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; QMMM. QMMM¶. class psi4.driver.QMMM[source]¶; Bases: object; Methods Summary. addChargeAngstrom(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Bohr. addDiffuse(diffuse); Function to add a diffuse charge field diffuse. populateExtern(); Function to define a charge field external to the molecule through point and diffuse charges. Methods Documentation. addChargeAngstrom(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]¶; Function to add a diffuse charge field diffuse. populateExtern()[source]¶; Function to define a charge field external to the; molecule through point and diffuse charges. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; QMMM. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.qmmm.html:244,charge,charge,244,psi4manual/1.5.0/api/psi4.driver.qmmm.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.qmmm.html,20,['charge'],"['charge', 'charges']"
Energy Efficiency,"﻿. QMMM. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; QMMM. QMMM¶. class psi4.driver.QMMM[source]¶; Bases: object; Hold charges and psi4.core.ExternalPotential. Use psi4.driver.QMMMbohr instead. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; QMMM. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.QMMM.html:177,charge,charges,177,psi4manual/1.6.x/api/psi4.driver.QMMM.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.QMMM.html,2,['charge'],['charges']
Energy Efficiency,"﻿. QMMM. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; QMMM. QMMM¶. class psi4.driver.QMMM[source]¶; Bases: object; Hold charges and psi4.core.ExternalPotential. Use psi4.driver.QMMMbohr instead. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; QMMM. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.QMMM.html:177,charge,charges,177,psi4manual/1.7.x/api/psi4.driver.QMMM.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.QMMM.html,2,['charge'],['charges']
Energy Efficiency,"﻿. QMMM. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; QMMM. QMMM¶. class psi4.driver.QMMM[source]¶; Bases: object; Hold charges and psi4.core.ExternalPotential. Use psi4.driver.QMMMbohr instead. table of contents. QMMM; QMMM. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; QMMM. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.QMMM.html:179,charge,charges,179,psi4manual/1.8.x/api/psi4.driver.QMMM.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.QMMM.html,2,['charge'],['charges']
Energy Efficiency,"﻿. QMMM. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; QMMM. QMMM¶. class psi4.driver.QMMM[source]¶; Bases: object; Hold charges and psi4.core.ExternalPotential. Use psi4.driver.QMMMbohr instead. table of contents. QMMM; QMMM. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; QMMM. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.QMMM.html:179,charge,charges,179,psi4manual/1.9.x/api/psi4.driver.QMMM.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.QMMM.html,2,['charge'],['charges']
Energy Efficiency,"﻿. QMMMbohr. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; QMMMbohr. QMMMbohr¶. class psi4.driver.QMMMbohr[source]¶; Bases: object; Hold charges and psi4.core.ExternalPotential. To add external charges to a calculation, prefer; passing the array of charges with kwarg external_potentials, as in extern2 example.; Methods Summary. addChargeAngstrom(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Bohr. addDiffuse(diffuse); Function to add a diffuse charge field diffuse. populateExtern(); Function to define a charge field external to the molecule through point and diffuse charges. Methods Documentation. addChargeAngstrom(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]¶; Function to add a diffuse charge field diffuse. populateExtern()[source]¶; Function to define a charge field external to the; molecule through point and diffuse charges. table of contents. QMMMbohr; QMMMbohr; QMMMbohr.addChargeAngstrom(); QMMMbohr.addChargeBohr(); QMMMbohr.addDiffuse(); QMMMbohr.populateExtern(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; QMMMbohr. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.QMMMbohr.html:202,charge,charges,202,psi4manual/master/api/psi4.driver.QMMMbohr.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.QMMMbohr.html,26,['charge'],"['charge', 'charges']"
Energy Efficiency,"﻿. QMMMbohr. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; QMMMbohr. QMMMbohr¶. class psi4.driver.QMMMbohr[source]¶; Bases: object; Hold charges and psi4.core.ExternalPotential. To add external charges to a calculation, prefer; passing the array of charges with kwarg external_potentials, as in extern2 example.; Methods Summary. addChargeAngstrom(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Bohr. addDiffuse(diffuse); Function to add a diffuse charge field diffuse. populateExtern(); Function to define a charge field external to the molecule through point and diffuse charges. Methods Documentation. addChargeAngstrom(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]¶; Function to add a diffuse charge field diffuse. populateExtern()[source]¶; Function to define a charge field external to the; molecule through point and diffuse charges. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; QMMMbohr. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.QMMMbohr.html:193,charge,charges,193,psi4manual/1.6.x/api/psi4.driver.QMMMbohr.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.QMMMbohr.html,26,['charge'],"['charge', 'charges']"
Energy Efficiency,"﻿. QMMMbohr. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; QMMMbohr. QMMMbohr¶. class psi4.driver.QMMMbohr[source]¶; Bases: object; Hold charges and psi4.core.ExternalPotential. To add external charges to a calculation, prefer; passing the array of charges with kwarg external_potentials, as in extern2 example.; Methods Summary. addChargeAngstrom(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Bohr. addDiffuse(diffuse); Function to add a diffuse charge field diffuse. populateExtern(); Function to define a charge field external to the molecule through point and diffuse charges. Methods Documentation. addChargeAngstrom(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]¶; Function to add a diffuse charge field diffuse. populateExtern()[source]¶; Function to define a charge field external to the; molecule through point and diffuse charges. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; QMMMbohr. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.QMMMbohr.html:193,charge,charges,193,psi4manual/1.7.x/api/psi4.driver.QMMMbohr.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.QMMMbohr.html,26,['charge'],"['charge', 'charges']"
Energy Efficiency,"﻿. QMMMbohr. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; QMMMbohr. QMMMbohr¶. class psi4.driver.QMMMbohr[source]¶; Bases: object; Hold charges and psi4.core.ExternalPotential. To add external charges to a calculation, prefer; passing the array of charges with kwarg external_potentials, as in extern2 example.; Methods Summary. addChargeAngstrom(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Bohr. addDiffuse(diffuse); Function to add a diffuse charge field diffuse. populateExtern(); Function to define a charge field external to the molecule through point and diffuse charges. Methods Documentation. addChargeAngstrom(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]¶; Function to add a diffuse charge field diffuse. populateExtern()[source]¶; Function to define a charge field external to the; molecule through point and diffuse charges. table of contents. QMMMbohr; QMMMbohr; QMMMbohr.addChargeAngstrom(); QMMMbohr.addChargeBohr(); QMMMbohr.addDiffuse(); QMMMbohr.populateExtern(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; QMMMbohr. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.QMMMbohr.html:195,charge,charges,195,psi4manual/1.8.x/api/psi4.driver.QMMMbohr.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.QMMMbohr.html,26,['charge'],"['charge', 'charges']"
Energy Efficiency,"﻿. QMMMbohr. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; QMMMbohr. QMMMbohr¶. class psi4.driver.QMMMbohr[source]¶; Bases: object; Hold charges and psi4.core.ExternalPotential. To add external charges to a calculation, prefer; passing the array of charges with kwarg external_potentials, as in extern2 example.; Methods Summary. addChargeAngstrom(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Bohr. addDiffuse(diffuse); Function to add a diffuse charge field diffuse. populateExtern(); Function to define a charge field external to the molecule through point and diffuse charges. Methods Documentation. addChargeAngstrom(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]¶; Function to add a diffuse charge field diffuse. populateExtern()[source]¶; Function to define a charge field external to the; molecule through point and diffuse charges. table of contents. QMMMbohr; QMMMbohr; QMMMbohr.addChargeAngstrom(); QMMMbohr.addChargeBohr(); QMMMbohr.addDiffuse(); QMMMbohr.populateExtern(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; QMMMbohr. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.QMMMbohr.html:195,charge,charges,195,psi4manual/1.9.x/api/psi4.driver.QMMMbohr.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.QMMMbohr.html,26,['charge'],"['charge', 'charges']"
Energy Efficiency,"﻿. R4S — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». R4S¶. Do restrict strings with in RAS IV? Useful to reduce the number of strings required if MIXED4=true, as in a split-virutal CISD[TQ] computation. If more than one electron is in RAS IV, then the holes in RAS I cannot exceed the number of particles in RAS III + RAS IV (i.e., EX_LEVEL , or else the string is discarded. Type: boolean; Default: false. Previous topic; PRECONDITIONER; Next topic; R_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__r4s-1.html:201,reduce,reduce,201,psi4manual/4.0b2/autodir_options_c/detci__r4s-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/detci__r4s-1.html,4,['reduce'],['reduce']
Energy Efficiency,"﻿. R4S — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». R4S¶. Do restrict strings with in RAS IV? Useful to reduce the number of strings required if MIXED4=true, as in a split-virutal CISD[TQ] computation. If more than one electron is in RAS IV, then the holes in RAS I cannot exceed the number of particles in RAS III + RAS IV (i.e., EX_LEVEL , or else the string is discarded. Type: boolean; Default: false. Previous topic; PRECONDITIONER; Next topic; R_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__r4s-1.html:216,reduce,reduce,216,psi4manual/4.0b3/autodir_options_c/detci__r4s-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/detci__r4s-1.html,4,['reduce'],['reduce']
Energy Efficiency,"﻿. R4S — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». R4S¶. Do restrict strings with in RAS IV? Useful to reduce the number of strings required if MIXED4=true, as in a split-virutal CISD[TQ] computation. If more than one electron is in RAS IV, then the holes in RAS I cannot exceed the number of particles in RAS III + RAS IV (i.e., EX_LEVEL , or else the string is discarded. Type: boolean; Default: false. Previous topic; PRECONDITIONER; Next topic; R_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__r4s-1.html:216,reduce,reduce,216,psi4manual/4.0b4/autodir_options_c/detci__r4s-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/detci__r4s-1.html,4,['reduce'],['reduce']
Energy Efficiency,"﻿. R4S — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». R4S¶. Do restrict strings with in RAS IV? Useful to reduce the number of strings required if MIXED4=true, as in a split-virutal CISD[TQ] computation. If more than one electron is in RAS IV, then the holes in RAS I cannot exceed the number of particles in RAS III + RAS IV (i.e., EX_LEVEL , or else the string is discarded. Type: boolean; Default: false. Previous topic; PRECONDITIONER; Next topic; R_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__r4s-1.html:216,reduce,reduce,216,psi4manual/4.0b5/autodir_options_c/detci__r4s-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/detci__r4s-1.html,4,['reduce'],['reduce']
Energy Efficiency,"﻿. R4S — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». R4S¶. Do restrict strings with in RAS IV? Useful to reduce the number of strings required if MIXED4=true, as in a split-virutal CISD[TQ] computation. If more than one electron is in RAS IV, then the holes in RAS I cannot exceed the number of particles in RAS III + RAS IV (i.e., EX_LEVEL , or else the string is discarded. Type: boolean; Default: false. Previous topic; PRECONDITIONER; Next topic; R_CONVERGENCE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DETCI ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__r4s-1.html:223,reduce,reduce,223,psi4manual/1.0.0/autodir_options_c/detci__r4s-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/detci__r4s-1.html,2,['reduce'],['reduce']
Energy Efficiency,"﻿. R4S. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; R4S. R4S¶. Do restrict strings with \(e-\) in RAS IV? Useful to reduce the number of strings required if MIXED4=true, as in a split-virutal CISD[TQ] computation. If more than one electron is in RAS IV, then the holes in RAS I cannot exceed the number of particles in RAS III + RAS IV (i.e., EX_LEVEL , or else the string is discarded. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DETCI; R4S. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/detci__r4s.html:188,reduce,reduce,188,psi4manual/master/autodir_options_c/detci__r4s.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/detci__r4s.html,2,['reduce'],['reduce']
Energy Efficiency,"﻿. R4S. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; R4S. R4S¶. Do restrict strings with \(e-\) in RAS IV? Useful to reduce the number of strings required if MIXED4=true, as in a split-virutal CISD[TQ] computation. If more than one electron is in RAS IV, then the holes in RAS I cannot exceed the number of particles in RAS III + RAS IV (i.e., EX_LEVEL , or else the string is discarded. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DETCI; R4S. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__r4s-1.html:179,reduce,reduce,179,psi4manual/1.4.0/autodir_options_c/detci__r4s-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/detci__r4s-1.html,4,['reduce'],['reduce']
Energy Efficiency,"﻿. R4S. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; R4S. R4S¶. Do restrict strings with \(e-\) in RAS IV? Useful to reduce the number of strings required if MIXED4=true, as in a split-virutal CISD[TQ] computation. If more than one electron is in RAS IV, then the holes in RAS I cannot exceed the number of particles in RAS III + RAS IV (i.e., EX_LEVEL , or else the string is discarded. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DETCI; R4S. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__r4s-1.html:179,reduce,reduce,179,psi4manual/1.5.0/autodir_options_c/detci__r4s-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/detci__r4s-1.html,4,['reduce'],['reduce']
Energy Efficiency,"﻿. R4S. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; R4S. R4S¶. Do restrict strings with \(e-\) in RAS IV? Useful to reduce the number of strings required if MIXED4=true, as in a split-virutal CISD[TQ] computation. If more than one electron is in RAS IV, then the holes in RAS I cannot exceed the number of particles in RAS III + RAS IV (i.e., EX_LEVEL , or else the string is discarded. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DETCI; R4S. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__r4s.html:179,reduce,reduce,179,psi4manual/1.6.x/autodir_options_c/detci__r4s.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/detci__r4s.html,2,['reduce'],['reduce']
Energy Efficiency,"﻿. R4S. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; R4S. R4S¶. Do restrict strings with \(e-\) in RAS IV? Useful to reduce the number of strings required if MIXED4=true, as in a split-virutal CISD[TQ] computation. If more than one electron is in RAS IV, then the holes in RAS I cannot exceed the number of particles in RAS III + RAS IV (i.e., EX_LEVEL , or else the string is discarded. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DETCI; R4S. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__r4s.html:179,reduce,reduce,179,psi4manual/1.7.x/autodir_options_c/detci__r4s.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/detci__r4s.html,2,['reduce'],['reduce']
Energy Efficiency,"﻿. R4S. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; R4S. R4S¶. Do restrict strings with \(e-\) in RAS IV? Useful to reduce the number of strings required if MIXED4=true, as in a split-virutal CISD[TQ] computation. If more than one electron is in RAS IV, then the holes in RAS I cannot exceed the number of particles in RAS III + RAS IV (i.e., EX_LEVEL , or else the string is discarded. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DETCI; R4S. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__r4s.html:181,reduce,reduce,181,psi4manual/1.8.x/autodir_options_c/detci__r4s.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/detci__r4s.html,2,['reduce'],['reduce']
Energy Efficiency,"﻿. R4S. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; R4S. R4S¶. Do restrict strings with \(e-\) in RAS IV? Useful to reduce the number of strings required if MIXED4=true, as in a split-virutal CISD[TQ] computation. If more than one electron is in RAS IV, then the holes in RAS I cannot exceed the number of particles in RAS III + RAS IV (i.e., EX_LEVEL , or else the string is discarded. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DETCI; R4S. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__r4s.html:181,reduce,reduce,181,psi4manual/1.9.x/autodir_options_c/detci__r4s.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/detci__r4s.html,2,['reduce'],['reduce']
Energy Efficiency,"﻿. RESPONSE_ALGORITHM — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DCFT ». RESPONSE_ALGORITHM¶. The algorithm to use for the solution of the response equations for the analytic gradients and properties. Two-step algorithm is generally more efficient than simultaneous and is used by default. Type: string; Possible Values: TWOSTEP, SIMULTANEOUS; Default: TWOSTEP. Previous topic; R_CONVERGENCE; Next topic; SCF_MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/dcft__response_algorithm-1.html:328,efficient,efficient,328,psi4manual/4.0b2/autodir_options_c/dcft__response_algorithm-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/dcft__response_algorithm-1.html,4,['efficient'],['efficient']
Energy Efficiency,"﻿. RESPONSE_ALGORITHM — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DCFT ». RESPONSE_ALGORITHM¶. The algorithm to use for the solution of the response equations for the analytic gradients and properties. Two-step algorithm is generally more efficient than simultaneous and is used by default. Type: string; Possible Values: TWOSTEP, SIMULTANEOUS; Default: TWOSTEP. Previous topic; RELAX_TAU; Next topic; SCF_MAXITER; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/dcft__response_algorithm-1.html:343,efficient,efficient,343,psi4manual/4.0b3/autodir_options_c/dcft__response_algorithm-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/dcft__response_algorithm-1.html,4,['efficient'],['efficient']
Energy Efficiency,"﻿. RUN_MP2 — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; FNOCC ». RUN_MP2¶. do only evaluate mp2 energy?. Type: boolean; Default: false. Previous topic; RUN_CEPA; Next topic; RUN_MP3; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; FNOCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/fnocc__run_mp2-1.html:199,energy,energy,199,psi4manual/4.0b4/autodir_options_c/fnocc__run_mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/fnocc__run_mp2-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP2 — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; FNOCC ». RUN_MP2¶. do only evaluate mp2 energy?. Type: boolean; Default: false. Previous topic; RUN_CEPA; Next topic; RUN_MP3; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; FNOCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/fnocc__run_mp2-1.html:199,energy,energy,199,psi4manual/4.0b5/autodir_options_c/fnocc__run_mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/fnocc__run_mp2-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP2 — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; FNOCC ». RUN_MP2¶. do only evaluate mp2 energy?. Type: boolean; Default: false. Previous topic; RUN_CEPA; Next topic; RUN_MP3. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; FNOCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/fnocc__run_mp2-1.html:206,energy,energy,206,psi4manual/1.0.0/autodir_options_c/fnocc__run_mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/fnocc__run_mp2-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP2. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP2. RUN_MP2¶. do only evaluate mp2 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP2. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/fnocc__run_mp2.html:168,energy,energy,168,psi4manual/master/autodir_options_c/fnocc__run_mp2.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/fnocc__run_mp2.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP2. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP2. RUN_MP2¶. do only evaluate mp2 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP2. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/fnocc__run_mp2-1.html:159,energy,energy,159,psi4manual/1.4.0/autodir_options_c/fnocc__run_mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/fnocc__run_mp2-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP2. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP2. RUN_MP2¶. do only evaluate mp2 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP2. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/fnocc__run_mp2-1.html:159,energy,energy,159,psi4manual/1.5.0/autodir_options_c/fnocc__run_mp2-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/fnocc__run_mp2-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP2. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP2. RUN_MP2¶. do only evaluate mp2 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP2. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/fnocc__run_mp2.html:159,energy,energy,159,psi4manual/1.6.x/autodir_options_c/fnocc__run_mp2.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/fnocc__run_mp2.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP2. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP2. RUN_MP2¶. do only evaluate mp2 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP2. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/fnocc__run_mp2.html:159,energy,energy,159,psi4manual/1.7.x/autodir_options_c/fnocc__run_mp2.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/fnocc__run_mp2.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP2. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP2. RUN_MP2¶. do only evaluate mp2 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP2. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/fnocc__run_mp2.html:161,energy,energy,161,psi4manual/1.8.x/autodir_options_c/fnocc__run_mp2.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/fnocc__run_mp2.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP2. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP2. RUN_MP2¶. do only evaluate mp2 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP2. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/fnocc__run_mp2.html:161,energy,energy,161,psi4manual/1.9.x/autodir_options_c/fnocc__run_mp2.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/fnocc__run_mp2.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP3 — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; FNOCC ». RUN_MP3¶. do only evaluate mp3 energy?. Type: boolean; Default: false. Previous topic; RUN_MP2; Next topic; RUN_MP4; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; FNOCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/fnocc__run_mp3-1.html:199,energy,energy,199,psi4manual/4.0b4/autodir_options_c/fnocc__run_mp3-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/fnocc__run_mp3-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP3 — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; FNOCC ». RUN_MP3¶. do only evaluate mp3 energy?. Type: boolean; Default: false. Previous topic; RUN_MP2; Next topic; RUN_MP4; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; FNOCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/fnocc__run_mp3-1.html:199,energy,energy,199,psi4manual/4.0b5/autodir_options_c/fnocc__run_mp3-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/fnocc__run_mp3-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP3 — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; FNOCC ». RUN_MP3¶. do only evaluate mp3 energy?. Type: boolean; Default: false. Previous topic; RUN_MP2; Next topic; RUN_MP4. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; FNOCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/fnocc__run_mp3-1.html:206,energy,energy,206,psi4manual/1.0.0/autodir_options_c/fnocc__run_mp3-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/fnocc__run_mp3-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP3. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP3. RUN_MP3¶. do only evaluate mp3 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP3. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/fnocc__run_mp3.html:168,energy,energy,168,psi4manual/master/autodir_options_c/fnocc__run_mp3.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/fnocc__run_mp3.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP3. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP3. RUN_MP3¶. do only evaluate mp3 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP3. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/fnocc__run_mp3-1.html:159,energy,energy,159,psi4manual/1.4.0/autodir_options_c/fnocc__run_mp3-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/fnocc__run_mp3-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP3. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP3. RUN_MP3¶. do only evaluate mp3 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP3. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/fnocc__run_mp3-1.html:159,energy,energy,159,psi4manual/1.5.0/autodir_options_c/fnocc__run_mp3-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/fnocc__run_mp3-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP3. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP3. RUN_MP3¶. do only evaluate mp3 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP3. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/fnocc__run_mp3.html:159,energy,energy,159,psi4manual/1.6.x/autodir_options_c/fnocc__run_mp3.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/fnocc__run_mp3.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP3. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP3. RUN_MP3¶. do only evaluate mp3 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP3. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/fnocc__run_mp3.html:159,energy,energy,159,psi4manual/1.7.x/autodir_options_c/fnocc__run_mp3.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/fnocc__run_mp3.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP3. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP3. RUN_MP3¶. do only evaluate mp3 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP3. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/fnocc__run_mp3.html:161,energy,energy,161,psi4manual/1.8.x/autodir_options_c/fnocc__run_mp3.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/fnocc__run_mp3.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP3. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP3. RUN_MP3¶. do only evaluate mp3 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP3. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/fnocc__run_mp3.html:161,energy,energy,161,psi4manual/1.9.x/autodir_options_c/fnocc__run_mp3.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/fnocc__run_mp3.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP4 — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; FNOCC ». RUN_MP4¶. do only evaluate mp4 energy?. Type: boolean; Default: false. Previous topic; RUN_MP3; Next topic; SCS_CCSD; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; FNOCC ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/fnocc__run_mp4-1.html:199,energy,energy,199,psi4manual/4.0b4/autodir_options_c/fnocc__run_mp4-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/fnocc__run_mp4-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP4 — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; FNOCC ». RUN_MP4¶. do only evaluate mp4 energy?. Type: boolean; Default: false. Previous topic; RUN_MP3; Next topic; SCS_CCSD; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; FNOCC ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/fnocc__run_mp4-1.html:199,energy,energy,199,psi4manual/4.0b5/autodir_options_c/fnocc__run_mp4-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/fnocc__run_mp4-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP4 — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; FNOCC ». RUN_MP4¶. do only evaluate mp4 energy?. Type: boolean; Default: false. Previous topic; RUN_MP3; Next topic; SCS_CCSD. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; FNOCC ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/fnocc__run_mp4-1.html:206,energy,energy,206,psi4manual/1.0.0/autodir_options_c/fnocc__run_mp4-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/fnocc__run_mp4-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP4. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP4. RUN_MP4¶. do only evaluate mp4 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP4. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/fnocc__run_mp4.html:168,energy,energy,168,psi4manual/master/autodir_options_c/fnocc__run_mp4.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/fnocc__run_mp4.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP4. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP4. RUN_MP4¶. do only evaluate mp4 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP4. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/fnocc__run_mp4-1.html:159,energy,energy,159,psi4manual/1.4.0/autodir_options_c/fnocc__run_mp4-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/fnocc__run_mp4-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP4. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP4. RUN_MP4¶. do only evaluate mp4 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP4. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/fnocc__run_mp4-1.html:159,energy,energy,159,psi4manual/1.5.0/autodir_options_c/fnocc__run_mp4-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/fnocc__run_mp4-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP4. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP4. RUN_MP4¶. do only evaluate mp4 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP4. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/fnocc__run_mp4.html:159,energy,energy,159,psi4manual/1.6.x/autodir_options_c/fnocc__run_mp4.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/fnocc__run_mp4.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP4. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP4. RUN_MP4¶. do only evaluate mp4 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP4. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/fnocc__run_mp4.html:159,energy,energy,159,psi4manual/1.7.x/autodir_options_c/fnocc__run_mp4.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/fnocc__run_mp4.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP4. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP4. RUN_MP4¶. do only evaluate mp4 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP4. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/fnocc__run_mp4.html:161,energy,energy,161,psi4manual/1.8.x/autodir_options_c/fnocc__run_mp4.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/fnocc__run_mp4.html,2,['energy'],['energy']
Energy Efficiency,"﻿. RUN_MP4. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP4. RUN_MP4¶. do only evaluate mp4 energy?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; FNOCC; RUN_MP4. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/fnocc__run_mp4.html:161,energy,energy,161,psi4manual/1.9.x/autodir_options_c/fnocc__run_mp4.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/fnocc__run_mp4.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SAD_E_CONVERGENCE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; SCF ». SAD_E_CONVERGENCE¶. Convergence criterion for SCF energy in SAD Guess. Type: conv double; Default: 1e-5. Previous topic; SAD_D_CONVERGENCE; Next topic; SAD_F_MIX_START; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/scf__sad_e_convergence-1.html:211,energy,energy,211,psi4manual/4.0b2/autodir_options_c/scf__sad_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/scf__sad_e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SAD_E_CONVERGENCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SCF ». SAD_E_CONVERGENCE¶. Convergence criterion for SCF energy in SAD Guess. Type: conv double; Default: 1e-5. Previous topic; SAD_D_CONVERGENCE; Next topic; SAD_F_MIX_START; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/scf__sad_e_convergence-1.html:226,energy,energy,226,psi4manual/4.0b3/autodir_options_c/scf__sad_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/scf__sad_e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SAD_E_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SCF ». SAD_E_CONVERGENCE¶. Convergence criterion for SCF energy in SAD Guess. Type: conv double; Default: 1e-5. Previous topic; SAD_D_CONVERGENCE; Next topic; SAD_F_MIX_START; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/scf__sad_e_convergence-1.html:226,energy,energy,226,psi4manual/4.0b4/autodir_options_c/scf__sad_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/scf__sad_e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SAD_E_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SCF ». SAD_E_CONVERGENCE¶. Convergence criterion for SCF energy in SAD Guess. Type: conv double; Default: 1e-5. Previous topic; SAD_D_CONVERGENCE; Next topic; SAD_F_MIX_START; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/scf__sad_e_convergence-1.html:226,energy,energy,226,psi4manual/4.0b5/autodir_options_c/scf__sad_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/scf__sad_e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SAD_E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». SAD_E_CONVERGENCE¶. Convergence criterion for SCF energy in SAD Guess. Type: conv double; Default: 1e-5. Previous topic; SAD_D_CONVERGENCE; Next topic; SAD_FRAC_OCC. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; SCF ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__sad_e_convergence-1.html:233,energy,energy,233,psi4manual/1.0.0/autodir_options_c/scf__sad_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/scf__sad_e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SAD_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; SAD_E_CONVERGENCE. SAD_E_CONVERGENCE¶. Convergence criterion for SCF energy in the SAD guess, analogous to E_CONVERGENCE. Type: conv double; Default: 1e-5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; SAD_E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/scf__sad_e_convergence.html:205,energy,energy,205,psi4manual/master/autodir_options_c/scf__sad_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/scf__sad_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SAD_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; SAD_E_CONVERGENCE. SAD_E_CONVERGENCE¶. Convergence criterion for SCF energy in the SAD guess, analogous to E_CONVERGENCE. Type: conv double; Default: 1e-5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; SAD_E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__sad_e_convergence-1.html:196,energy,energy,196,psi4manual/1.4.0/autodir_options_c/scf__sad_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__sad_e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SAD_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; SAD_E_CONVERGENCE. SAD_E_CONVERGENCE¶. Convergence criterion for SCF energy in the SAD guess, analogous to E_CONVERGENCE. Type: conv double; Default: 1e-5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; SAD_E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__sad_e_convergence-1.html:196,energy,energy,196,psi4manual/1.5.0/autodir_options_c/scf__sad_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__sad_e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SAD_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; SAD_E_CONVERGENCE. SAD_E_CONVERGENCE¶. Convergence criterion for SCF energy in the SAD guess, analogous to E_CONVERGENCE. Type: conv double; Default: 1e-5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; SAD_E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__sad_e_convergence.html:196,energy,energy,196,psi4manual/1.6.x/autodir_options_c/scf__sad_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__sad_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SAD_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; SAD_E_CONVERGENCE. SAD_E_CONVERGENCE¶. Convergence criterion for SCF energy in the SAD guess, analogous to E_CONVERGENCE. Type: conv double; Default: 1e-5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; SAD_E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__sad_e_convergence.html:196,energy,energy,196,psi4manual/1.7.x/autodir_options_c/scf__sad_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__sad_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SAD_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; SAD_E_CONVERGENCE. SAD_E_CONVERGENCE¶. Convergence criterion for SCF energy in the SAD guess, analogous to E_CONVERGENCE. Type: conv double; Default: 1e-5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; SAD_E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__sad_e_convergence.html:198,energy,energy,198,psi4manual/1.8.x/autodir_options_c/scf__sad_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__sad_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SAD_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; SAD_E_CONVERGENCE. SAD_E_CONVERGENCE¶. Convergence criterion for SCF energy in the SAD guess, analogous to E_CONVERGENCE. Type: conv double; Default: 1e-5. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; SAD_E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__sad_e_convergence.html:198,energy,energy,198,psi4manual/1.9.x/autodir_options_c/scf__sad_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__sad_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SAPT — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze noncovalent interactions. General¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the and evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to BASIS-RI. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SAPT¶. Auxiliary basis set for SAPT density fitting computations. Defaults to BASIS-RI. Type: string; Possible Values: basis string; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT term. Type: conv double; Default: 1e-8. E_CONVERGENCE¶. Convergence criterion for energy (change) in the SAPT term during solution of the CPHF equations. Type: conv double; Default: 1e-10. FREEZE_CORE¶. The scope of core orbitals to freeze in evaluation of SAPT and terms. Recommended true for all SAPT computations. Type: string; Possible Valu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__sapt-1.html:166,adapt,adapted,166,psi4manual/4.0b2/autodir_options_c/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__sapt-1.html,8,"['adapt', 'efficient']","['adapted', 'efficient']"
Energy Efficiency,"﻿. SAPT — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze noncovalent interactions. CURRENT ENERGY; MP2C DELTA MP2C ENERGY; MP2C DIMER MP2 ENERGY; MP2C MONOMER A MP2 ENERGY; MP2C MONOMER B MP2 ENERGY; MP2C MP2 ENERGY; MP2C MP2C ENERGY; MP2C TDDFT ENERGY; MP2C UCHF ENERGY; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT ELST ENERGY; SAPT ENERGY; SAPT EXCH ENERGY; SAPT IND ENERGY; SAPT SAPT0 ENERGY; SAPT SAPT2 ENERGY; SAPT SAPT2+ ENERGY; SAPT SAPT2+(3) ENERGY; SAPT SAPT2+3 ENERGY; SAPT SCS-DISP ENERGY; SAPT SCS-SAPT0 ENERGY. Previous topic; PSIMRCC; Next topic; SCF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__sapt-1.html:171,adapt,adapted,171,psi4manual/4.0b2/autodir_psivariables/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__sapt-1.html,48,"['ENERGY', 'adapt']","['ENERGY', 'adapted']"
Energy Efficiency,"﻿. SAPT — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze noncovalent interactions. General¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the and evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to DF_BASIS_SAPT. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SAPT¶. Auxiliary basis set for SAPT density fitting computations. Defaults to a RI basis. Type: string; Possible Values: basis string; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT term. Type: conv double; Default: 1e-8. E_CONVERGENCE¶. Convergence criterion for energy (change) in the SAPT term during solution of the CPHF equations. Type: conv double; Default: 1e-10. FREEZE_CORE¶. The scope of core orbitals to freeze in evaluation of SAPT and terms. Recommended true for all SAPT computations. Type:",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__sapt-1.html:181,adapt,adapted,181,psi4manual/4.0b3/autodir_options_c/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__sapt-1.html,8,"['adapt', 'efficient']","['adapted', 'efficient']"
Energy Efficiency,"﻿. SAPT — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze noncovalent interactions. CURRENT ENERGY; MP2C DELTA MP2C ENERGY; MP2C DIMER MP2 ENERGY; MP2C MONOMER A MP2 ENERGY; MP2C MONOMER B MP2 ENERGY; MP2C MP2 ENERGY; MP2C MP2C ENERGY; MP2C TDDFT ENERGY; MP2C UCHF ENERGY; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT ELST ENERGY; SAPT ENERGY; SAPT EXCH ENERGY; SAPT IND ENERGY; SAPT SAPT0 ENERGY; SAPT SAPT2 ENERGY; SAPT SAPT2+ ENERGY; SAPT SAPT2+(3) ENERGY; SAPT SAPT2+3 ENERGY; SAPT SCS-DISP ENERGY; SAPT SCS-SAPT0 ENERGY. Previous topic; PSIMRCC; Next topic; SCF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 21, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__sapt-1.html:186,adapt,adapted,186,psi4manual/4.0b3/autodir_psivariables/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__sapt-1.html,48,"['ENERGY', 'adapt']","['ENERGY', 'adapted']"
Energy Efficiency,"﻿. SAPT — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze noncovalent interactions. General¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. CCD_E_CONVERGENCE¶. E converge value for CCD. Type: conv double; Default: 1e-8. CCD_MAXITER¶. Max CCD iterations. Type: integer; Default: 50. CCD_T_CONVERGENCE¶. Convergence tolerance for CCD amplitudes. Type: conv double; Default: 1e-8. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the and evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to DF_BASIS_SAPT. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SAPT¶. Auxiliary basis set for SAPT density fitting computations. Defaults to a RI basis. Type: string; Possible Values: basis string; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT term. Type: conv double; Default: 1e-8. E_CONVERGENCE¶. Convergence criterion for en",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__sapt-1.html:181,adapt,adapted,181,psi4manual/4.0b4/autodir_options_c/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__sapt-1.html,4,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze noncovalent interactions. CURRENT ENERGY; MP2C DELTA MP2C ENERGY; MP2C DIMER MP2 ENERGY; MP2C MONOMER A MP2 ENERGY; MP2C MONOMER B MP2 ENERGY; MP2C MP2 ENERGY; MP2C MP2C ENERGY; MP2C TDDFT ENERGY; MP2C UCHF ENERGY; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT ELST ENERGY; SAPT ENERGY; SAPT EXCH ENERGY; SAPT IND ENERGY; SAPT SAPT0 ENERGY; SAPT SAPT2 ENERGY; SAPT SAPT2+ ENERGY; SAPT SAPT2+(3) ENERGY; SAPT SAPT2+(3)(CCD) ENERGY; SAPT SAPT2+(CCD) ENERGY; SAPT SAPT2+3 ENERGY; SAPT SAPT2+3(CCD) ENERGY; SAPT SCS-DISP ENERGY; SAPT SCS-SAPT0 ENERGY. Previous topic; PSIMRCC; Next topic; SCF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 29, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__sapt-1.html:186,adapt,adapted,186,psi4manual/4.0b4/autodir_psivariables/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__sapt-1.html,54,"['ENERGY', 'adapt']","['ENERGY', 'adapted']"
Energy Efficiency,"﻿. SAPT — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze noncovalent interactions. General¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. CCD_E_CONVERGENCE¶. E converge value for CCD. Type: conv double; Default: 1e-8. CCD_MAXITER¶. Max CCD iterations. Type: integer; Default: 50. CCD_T_CONVERGENCE¶. Convergence tolerance for CCD amplitudes. Type: conv double; Default: 1e-8. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the and evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to DF_BASIS_SAPT. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SAPT¶. Auxiliary basis set for SAPT density fitting computations. Defaults to a RI basis. Type: string; Possible Values: basis string; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT term. Type: conv double; Default: 1e-8. E_CONVERGENCE¶. Convergence criterion for en",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__sapt-1.html:181,adapt,adapted,181,psi4manual/4.0b5/autodir_options_c/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__sapt-1.html,4,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze noncovalent interactions. CURRENT ENERGY; MP2C DELTA MP2C ENERGY; MP2C DIMER MP2 ENERGY; MP2C MONOMER A MP2 ENERGY; MP2C MONOMER B MP2 ENERGY; MP2C MP2 ENERGY; MP2C MP2C ENERGY; MP2C TDDFT ENERGY; MP2C UCHF ENERGY; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT ELST ENERGY; SAPT ENERGY; SAPT EXCH ENERGY; SAPT IND ENERGY; SAPT SAPT0 ENERGY; SAPT SAPT2 ENERGY; SAPT SAPT2+ ENERGY; SAPT SAPT2+(3) ENERGY; SAPT SAPT2+(3)(CCD) ENERGY; SAPT SAPT2+(CCD) ENERGY; SAPT SAPT2+3 ENERGY; SAPT SAPT2+3(CCD) ENERGY; SAPT SCS-DISP ENERGY; SAPT SCS-SAPT0 ENERGY. Previous topic; PSIMRCC; Next topic; SCF; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__sapt-1.html:186,adapt,adapted,186,psi4manual/4.0b5/autodir_psivariables/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__sapt-1.html,54,"['ENERGY', 'adapt']","['ENERGY', 'adapted']"
Energy Efficiency,"﻿. SAPT — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module ». SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze noncovalent interactions. General¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. CCD_E_CONVERGENCE¶. E converge value for CCD. Type: conv double; Default: 1e-8. CCD_MAXITER¶. Max CCD iterations. Type: integer; Default: 50. CCD_T_CONVERGENCE¶. Convergence tolerance for CCD amplitudes. Type: conv double; Default: 1e-8. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the and evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to DF_BASIS_SAPT. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SAPT¶. Auxiliary basis set for SAPT density fitting computations. Defaults to a RI basis. Type: string; Possible Values: basis string; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT term. Type: conv double; Default: 1e-8. EXCH_SCALE_ALPHA¶. Whether or not to ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__sapt-1.html:188,adapt,adapted,188,psi4manual/1.0.0/autodir_options_c/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/module__sapt-1.html,2,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; PSI Variables by Module ». SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze noncovalent interactions. SAPT ALPHA; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT DISP2(CCD) ENERGY; SAPT DISP20 ENERGY; SAPT DISP21 ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT DISP30 ENERGY; SAPT ELST ENERGY; SAPT ELST10,R ENERGY; SAPT ELST12,R ENERGY; SAPT ELST13,R ENERGY; SAPT EST.DISP22(T) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND22 ENERGY; SAPT EXCH-IND30,R ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY; SAPT HF TOTAL ENERGY; SAPT IND ENERGY; SAPT IND-DISP30 ENERGY; SAPT IND20,R ENERGY; SAPT IND22 ENERGY; SAPT IND30,R ENERGY; SAPT MP2 CORRELATION ENERGY; SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY; SAPT TOTAL ENERGY; SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SAPT0 TOTAL ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+(3)(CCD)DMP2 DISP ENERGY; SAPT2+(3)(CCD)DMP2 ELST ENERGY; SAPT2+(3)(CCD)DMP2 EXCH ENERGY; SAPT2+(3)(CCD)DMP2 IND ENERGY; SAPT2+(3)(CCD)DMP2 TOTAL ENERGY; SAPT2+(3)DMP2 DISP ENERGY; SAPT2+(3)DMP2 ELST ENERGY; SAPT2+(3)DMP2 EXCH ENERGY; SAPT2+(3)DMP2 IND ENERGY; SAPT2+(3)DMP2 TOTA",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_psivariables/module__sapt-1.html:193,adapt,adapted,193,psi4manual/1.0.0/autodir_psivariables/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_psivariables/module__sapt-1.html,2,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SAPT. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. SAPT(HF)¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. CCD_E_CONVERGENCE¶. E converge value for CCD. Type: conv double; Default: 1e-8. CCD_MAXITER¶. Max CCD iterations. Type: integer; Default: 50. CCD_T_CONVERGENCE¶. Convergence tolerance for CCD amplitudes. Type: conv double; Default: 1e-8. CPHF_R_CONVERGENCE¶. Convergence criterion for residual of the CPHF/CPKS coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. This applies to wavefunction-based SAPT or SAPT(DFT). See CPHF_R_CONVERGENCE for fragment-partitioned or intramolecular SAPT. Type: conv double; Default: 1e-8. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to a JKFIT basis. Previous to v1.6, defaulted to DF_BASIS_SAPT See fitting notes . Type: string; Possible Values: basi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/module__sapt.html:149,adapt,adapted,149,psi4manual/master/autodir_options_c/module__sapt.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/module__sapt.html,2,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; SAPT. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. CURRENT ENERGY; SAPT ALPHA; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT DISP2(CCD) ENERGY; SAPT DISP20 ENERGY; SAPT DISP21 ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT DISP30 ENERGY; SAPT ELST ENERGY; SAPT ELST10,R ENERGY; SAPT ELST12,R ENERGY; SAPT ELST13,R ENERGY; SAPT ENERGY; SAPT EST.DISP22(T) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH-IND22 ENERGY; SAPT EXCH-IND30(S^INF) ENERGY; SAPT EXCH-IND30,R ENERGY; SAPT EXCH-IND30,R(S^INF) ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY; SAPT HF TOTAL ENERGY; SAPT IND ENERGY; SAPT IND-DISP30 ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT IND22 ENERGY; SAPT IND30,R ENERGY; SAPT MP2 CORRELATION ENERGY; SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY; SAPT TOTAL ENERGY; SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SAPT0 TOTAL ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+(3)(CCD)DMP2 DISP ENERGY; SAPT2+(3)(CCD)DMP2 ELST ENERGY; SAPT2+(3)(CCD)DMP2 EXCH ENERGY; SAPT2+(3)(CCD)DMP2 IND ENERGY; SAPT2+(3)(CCD)DMP2 TOTAL ENERGY; SAPT2+(3)DMP2 DISP ENER",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_psivariables/module__sapt.html:154,adapt,adapted,154,psi4manual/master/autodir_psivariables/module__sapt.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_psivariables/module__sapt.html,19,"['ENERGY', 'adapt']","['ENERGY', 'adapted']"
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; Keywords by Module. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. General¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. CCD_E_CONVERGENCE¶. E converge value for CCD. Type: conv double; Default: 1e-8. CCD_MAXITER¶. Max CCD iterations. Type: integer; Default: 50. CCD_T_CONVERGENCE¶. Convergence tolerance for CCD amplitudes. Type: conv double; Default: 1e-8. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to DF_BASIS_SAPT. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SAPT¶. Auxiliary basis set for SAPT density fitting computations. Defaults to a RI basis. Type: string; Possible Values: basis string; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. EXCH_SCALE_ALPHA¶. Wh",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__sapt-1.html:134,adapt,adapted,134,psi4manual/1.1.0/autodir_options_c/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_options_c/module__sapt-1.html,2,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Appendices; PSI Variables by Module. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. CURRENT ENERGY; SAPT ALPHA; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT DISP2(CCD) ENERGY; SAPT DISP20 ENERGY; SAPT DISP21 ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT DISP30 ENERGY; SAPT ELST ENERGY; SAPT ELST10,R ENERGY; SAPT ELST12,R ENERGY; SAPT ELST13,R ENERGY; SAPT ENERGY; SAPT EST.DISP22(T) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH-IND22 ENERGY; SAPT EXCH-IND30,R ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY; SAPT HF TOTAL ENERGY; SAPT IND ENERGY; SAPT IND-DISP30 ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT IND22 ENERGY; SAPT IND30,R ENERGY; SAPT MP2 CORRELATION ENERGY; SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY; SAPT TOTAL ENERGY; SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SAPT0 TOTAL ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+(3)(CCD)DMP2 DISP ENERGY; SAPT2+(3)(CCD)DMP2 ELST ENERGY; SAPT2+(3)(CCD)DMP2 EXCH ENERGY; SAPT2+(3)(CCD)DMP2 IND ENERGY; SAPT2+(3)(CCD)DMP2 TOTAL ENERGY; SAPT2+(3)DMP2 DISP ENERGY; SAPT2+(3)DMP2 ELST ENERGY; SAPT2+(3)DMP2 EXCH ENERGY; SAPT2+(3)DMP2 IND ENE",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/autodir_psivariables/module__sapt-1.html:139,adapt,adapted,139,psi4manual/1.1.0/autodir_psivariables/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/autodir_psivariables/module__sapt-1.html,2,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Keywords by Module. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. SAPT(HF)¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. CCD_E_CONVERGENCE¶. E converge value for CCD. Type: conv double; Default: 1e-8. CCD_MAXITER¶. Max CCD iterations. Type: integer; Default: 50. CCD_T_CONVERGENCE¶. Convergence tolerance for CCD amplitudes. Type: conv double; Default: 1e-8. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to DF_BASIS_SAPT. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SAPT¶. Auxiliary basis set for SAPT density fitting computations. Defaults to a RI basis. Type: string; Possible Values: basis string; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. EXCH_SCALE_ALPHA¶.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__sapt-1.html:136,adapt,adapted,136,psi4manual/1.2.1/autodir_options_c/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_options_c/module__sapt-1.html,2,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; PSI Variables by Module. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. CURRENT ENERGY; SAPT ALPHA; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT DISP2(CCD) ENERGY; SAPT DISP20 ENERGY; SAPT DISP21 ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT DISP30 ENERGY; SAPT ELST ENERGY; SAPT ELST10,R ENERGY; SAPT ELST12,R ENERGY; SAPT ELST13,R ENERGY; SAPT ENERGY; SAPT EST.DISP22(T) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH-IND22 ENERGY; SAPT EXCH-IND30,R ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY; SAPT HF TOTAL ENERGY; SAPT IND ENERGY; SAPT IND-DISP30 ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT IND22 ENERGY; SAPT IND30,R ENERGY; SAPT MP2 CORRELATION ENERGY; SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY; SAPT TOTAL ENERGY; SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SAPT0 TOTAL ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+(3)(CCD)DMP2 DISP ENERGY; SAPT2+(3)(CCD)DMP2 ELST ENERGY; SAPT2+(3)(CCD)DMP2 EXCH ENERGY; SAPT2+(3)(CCD)DMP2 IND ENERGY; SAPT2+(3)(CCD)DMP2 TOTAL ENERGY; SAPT2+(3)DMP2 DISP ENERGY; SAPT2+(3)DMP2 ELST ENERGY; SAPT2+(3)DMP2 EXCH ENERGY; SAPT2+(3)DMP2 IND E",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodir_psivariables/module__sapt-1.html:141,adapt,adapted,141,psi4manual/1.2.1/autodir_psivariables/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodir_psivariables/module__sapt-1.html,2,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Keywords by Module. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. SAPT(HF)¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. CCD_E_CONVERGENCE¶. E converge value for CCD. Type: conv double; Default: 1e-8. CCD_MAXITER¶. Max CCD iterations. Type: integer; Default: 50. CCD_T_CONVERGENCE¶. Convergence tolerance for CCD amplitudes. Type: conv double; Default: 1e-8. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to DF_BASIS_SAPT. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SAPT¶. Auxiliary basis set for SAPT density fitting computations. Defaults to a RI basis. Type: string; Possible Values: basis string; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. EXCH_SCALE_ALPHA¶.",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__sapt-1.html:136,adapt,adapted,136,psi4manual/1.3.2/autodir_options_c/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_options_c/module__sapt-1.html,2,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; PSI Variables by Module. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. CURRENT ENERGY; SAPT ALPHA; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT DISP2(CCD) ENERGY; SAPT DISP20 ENERGY; SAPT DISP21 ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT DISP30 ENERGY; SAPT ELST ENERGY; SAPT ELST10,R ENERGY; SAPT ELST12,R ENERGY; SAPT ELST13,R ENERGY; SAPT ENERGY; SAPT EST.DISP22(T) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH-IND22 ENERGY; SAPT EXCH-IND30,R ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY; SAPT HF TOTAL ENERGY; SAPT IND ENERGY; SAPT IND-DISP30 ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT IND22 ENERGY; SAPT IND30,R ENERGY; SAPT MP2 CORRELATION ENERGY; SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY; SAPT TOTAL ENERGY; SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SAPT0 TOTAL ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+(3)(CCD)DMP2 DISP ENERGY; SAPT2+(3)(CCD)DMP2 ELST ENERGY; SAPT2+(3)(CCD)DMP2 EXCH ENERGY; SAPT2+(3)(CCD)DMP2 IND ENERGY; SAPT2+(3)(CCD)DMP2 TOTAL ENERGY; SAPT2+(3)DMP2 DISP ENERGY; SAPT2+(3)DMP2 ELST ENERGY; SAPT2+(3)DMP2 EXCH ENERGY; SAPT2+(3)DMP2 IND E",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodir_psivariables/module__sapt-1.html:141,adapt,adapted,141,psi4manual/1.3.2/autodir_psivariables/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodir_psivariables/module__sapt-1.html,2,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SAPT. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. SAPT(HF)¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. CCD_E_CONVERGENCE¶. E converge value for CCD. Type: conv double; Default: 1e-8. CCD_MAXITER¶. Max CCD iterations. Type: integer; Default: 50. CCD_T_CONVERGENCE¶. Convergence tolerance for CCD amplitudes. Type: conv double; Default: 1e-8. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to DF_BASIS_SAPT. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SAPT¶. Auxiliary basis set for SAPT density fitting computations. Defaults to a RI basis. Type: string; Possible Values: basis string; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. EXCH_SCALE_ALP",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__sapt-1.html:140,adapt,adapted,140,psi4manual/1.4.0/autodir_options_c/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/module__sapt-1.html,4,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; SAPT. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. CURRENT ENERGY; SAPT ALPHA; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT DISP2(CCD) ENERGY; SAPT DISP20 ENERGY; SAPT DISP21 ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT DISP30 ENERGY; SAPT ELST ENERGY; SAPT ELST10,R ENERGY; SAPT ELST12,R ENERGY; SAPT ELST13,R ENERGY; SAPT ENERGY; SAPT EST.DISP22(T) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH-IND22 ENERGY; SAPT EXCH-IND30,R ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY; SAPT HF TOTAL ENERGY; SAPT IND ENERGY; SAPT IND-DISP30 ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT IND22 ENERGY; SAPT IND30,R ENERGY; SAPT MP2 CORRELATION ENERGY; SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY; SAPT TOTAL ENERGY; SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SAPT0 TOTAL ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+(3)(CCD)DMP2 DISP ENERGY; SAPT2+(3)(CCD)DMP2 ELST ENERGY; SAPT2+(3)(CCD)DMP2 EXCH ENERGY; SAPT2+(3)(CCD)DMP2 IND ENERGY; SAPT2+(3)(CCD)DMP2 TOTAL ENERGY; SAPT2+(3)DMP2 DISP ENERGY; SAPT2+(3)DMP2 ELST ENERGY; SAPT2+(3)DMP2 EXCH ENERGY; SAPT2+(3)DMP2 I",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__sapt-1.html:145,adapt,adapted,145,psi4manual/1.4.0/autodir_psivariables/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__sapt-1.html,38,"['ENERGY', 'adapt']","['ENERGY', 'adapted']"
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SAPT. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. SAPT(HF)¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. CCD_E_CONVERGENCE¶. E converge value for CCD. Type: conv double; Default: 1e-8. CCD_MAXITER¶. Max CCD iterations. Type: integer; Default: 50. CCD_T_CONVERGENCE¶. Convergence tolerance for CCD amplitudes. Type: conv double; Default: 1e-8. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to DF_BASIS_SAPT. Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SAPT¶. Auxiliary basis set for SAPT density fitting computations. Defaults to a RI basis. Type: string; Possible Values: basis string; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp}^{(20)}\) term. Type: conv double; Default: 1e-8. EXCH_SCALE_ALP",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__sapt-1.html:140,adapt,adapted,140,psi4manual/1.5.0/autodir_options_c/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/module__sapt-1.html,4,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; SAPT. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. CURRENT ENERGY; SAPT ALPHA; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT DISP2(CCD) ENERGY; SAPT DISP20 ENERGY; SAPT DISP21 ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT DISP30 ENERGY; SAPT ELST ENERGY; SAPT ELST10,R ENERGY; SAPT ELST12,R ENERGY; SAPT ELST13,R ENERGY; SAPT ENERGY; SAPT EST.DISP22(T) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH-IND22 ENERGY; SAPT EXCH-IND30,R ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY; SAPT HF TOTAL ENERGY; SAPT IND ENERGY; SAPT IND-DISP30 ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT IND22 ENERGY; SAPT IND30,R ENERGY; SAPT MP2 CORRELATION ENERGY; SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY; SAPT TOTAL ENERGY; SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SAPT0 TOTAL ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+(3)(CCD)DMP2 DISP ENERGY; SAPT2+(3)(CCD)DMP2 ELST ENERGY; SAPT2+(3)(CCD)DMP2 EXCH ENERGY; SAPT2+(3)(CCD)DMP2 IND ENERGY; SAPT2+(3)(CCD)DMP2 TOTAL ENERGY; SAPT2+(3)DMP2 DISP ENERGY; SAPT2+(3)DMP2 ELST ENERGY; SAPT2+(3)DMP2 EXCH ENERGY; SAPT2+(3)DMP2 I",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__sapt-1.html:145,adapt,adapted,145,psi4manual/1.5.0/autodir_psivariables/module__sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__sapt-1.html,38,"['ENERGY', 'adapt']","['ENERGY', 'adapted']"
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SAPT. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. SAPT(HF)¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. CCD_E_CONVERGENCE¶. E converge value for CCD. Type: conv double; Default: 1e-8. CCD_MAXITER¶. Max CCD iterations. Type: integer; Default: 50. CCD_T_CONVERGENCE¶. Convergence tolerance for CCD amplitudes. Type: conv double; Default: 1e-8. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to a JKFIT basis. Previous to v1.6, defaulted to DF_BASIS_SAPT See fitting notes . Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SAPT¶. Auxiliary basis set for SAPT density fitting computations. Defaults to a RI basis. Type: string; Possible Values: basis string; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__sapt.html:140,adapt,adapted,140,psi4manual/1.6.x/autodir_options_c/module__sapt.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/module__sapt.html,2,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; SAPT. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. CURRENT ENERGY; SAPT ALPHA; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT DISP2(CCD) ENERGY; SAPT DISP20 ENERGY; SAPT DISP21 ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT DISP30 ENERGY; SAPT ELST ENERGY; SAPT ELST10,R ENERGY; SAPT ELST12,R ENERGY; SAPT ELST13,R ENERGY; SAPT ENERGY; SAPT EST.DISP22(T) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH-IND22 ENERGY; SAPT EXCH-IND30(S^INF) ENERGY; SAPT EXCH-IND30,R ENERGY; SAPT EXCH-IND30,R(S^INF) ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY; SAPT HF TOTAL ENERGY; SAPT IND ENERGY; SAPT IND-DISP30 ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT IND22 ENERGY; SAPT IND30,R ENERGY; SAPT MP2 CORRELATION ENERGY; SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY; SAPT TOTAL ENERGY; SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SAPT0 TOTAL ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+(3)(CCD)DMP2 DISP ENERGY; SAPT2+(3)(CCD)DMP2 ELST ENERGY; SAPT2+(3)(CCD)DMP2 EXCH ENERGY; SAPT2+(3)(CCD)DMP2 IND ENERGY; SAPT2+(3)(CCD)DMP2 TOTAL ENERGY; SAPT2+(3)DMP2 DISP ENERGY; SAPT2",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__sapt.html:145,adapt,adapted,145,psi4manual/1.6.x/autodir_psivariables/module__sapt.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__sapt.html,19,"['ENERGY', 'adapt']","['ENERGY', 'adapted']"
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SAPT. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. SAPT(HF)¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. CCD_E_CONVERGENCE¶. E converge value for CCD. Type: conv double; Default: 1e-8. CCD_MAXITER¶. Max CCD iterations. Type: integer; Default: 50. CCD_T_CONVERGENCE¶. Convergence tolerance for CCD amplitudes. Type: conv double; Default: 1e-8. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to a JKFIT basis. Previous to v1.6, defaulted to DF_BASIS_SAPT See fitting notes . Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SAPT¶. Auxiliary basis set for SAPT density fitting computations. Defaults to a RI basis. Type: string; Possible Values: basis string; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,resp",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__sapt.html:140,adapt,adapted,140,psi4manual/1.7.x/autodir_options_c/module__sapt.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/module__sapt.html,2,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; SAPT. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. CURRENT ENERGY; SAPT ALPHA; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT DISP2(CCD) ENERGY; SAPT DISP20 ENERGY; SAPT DISP21 ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT DISP30 ENERGY; SAPT ELST ENERGY; SAPT ELST10,R ENERGY; SAPT ELST12,R ENERGY; SAPT ELST13,R ENERGY; SAPT ENERGY; SAPT EST.DISP22(T) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH-IND22 ENERGY; SAPT EXCH-IND30(S^INF) ENERGY; SAPT EXCH-IND30,R ENERGY; SAPT EXCH-IND30,R(S^INF) ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY; SAPT HF TOTAL ENERGY; SAPT IND ENERGY; SAPT IND-DISP30 ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT IND22 ENERGY; SAPT IND30,R ENERGY; SAPT MP2 CORRELATION ENERGY; SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY; SAPT TOTAL ENERGY; SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SAPT0 TOTAL ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+(3)(CCD)DMP2 DISP ENERGY; SAPT2+(3)(CCD)DMP2 ELST ENERGY; SAPT2+(3)(CCD)DMP2 EXCH ENERGY; SAPT2+(3)(CCD)DMP2 IND ENERGY; SAPT2+(3)(CCD)DMP2 TOTAL ENERGY; SAPT2+(3)DMP2 DISP ENERGY; SAPT2",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__sapt.html:145,adapt,adapted,145,psi4manual/1.7.x/autodir_psivariables/module__sapt.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__sapt.html,19,"['ENERGY', 'adapt']","['ENERGY', 'adapted']"
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SAPT. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. SAPT(HF)¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. CCD_E_CONVERGENCE¶. E converge value for CCD. Type: conv double; Default: 1e-8. CCD_MAXITER¶. Max CCD iterations. Type: integer; Default: 50. CCD_T_CONVERGENCE¶. Convergence tolerance for CCD amplitudes. Type: conv double; Default: 1e-8. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to a JKFIT basis. Previous to v1.6, defaulted to DF_BASIS_SAPT See fitting notes . Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SAPT¶. Auxiliary basis set for SAPT density fitting computations. Defaults to a RI basis. Type: string; Possible Values: basis string; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,re",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__sapt.html:142,adapt,adapted,142,psi4manual/1.8.x/autodir_options_c/module__sapt.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/module__sapt.html,2,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; SAPT. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. CURRENT ENERGY; SAPT ALPHA; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT DISP2(CCD) ENERGY; SAPT DISP20 ENERGY; SAPT DISP21 ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT DISP30 ENERGY; SAPT ELST ENERGY; SAPT ELST10,R ENERGY; SAPT ELST12,R ENERGY; SAPT ELST13,R ENERGY; SAPT ENERGY; SAPT EST.DISP22(T) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH-IND22 ENERGY; SAPT EXCH-IND30(S^INF) ENERGY; SAPT EXCH-IND30,R ENERGY; SAPT EXCH-IND30,R(S^INF) ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY; SAPT HF TOTAL ENERGY; SAPT IND ENERGY; SAPT IND-DISP30 ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT IND22 ENERGY; SAPT IND30,R ENERGY; SAPT MP2 CORRELATION ENERGY; SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY; SAPT TOTAL ENERGY; SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SAPT0 TOTAL ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+(3)(CCD)DMP2 DISP ENERGY; SAPT2+(3)(CCD)DMP2 ELST ENERGY; SAPT2+(3)(CCD)DMP2 EXCH ENERGY; SAPT2+(3)(CCD)DMP2 IND ENERGY; SAPT2+(3)(CCD)DMP2 TOTAL ENERGY; SAPT2+(3)DMP2 DISP ENERGY; SAP",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__sapt.html:147,adapt,adapted,147,psi4manual/1.8.x/autodir_psivariables/module__sapt.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__sapt.html,19,"['ENERGY', 'adapt']","['ENERGY', 'adapted']"
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SAPT. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. SAPT(HF)¶. AIO_CPHF¶. Do use asynchronous disk I/O in the solution of the CPHF equations? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. AIO_DF_INTS¶. Do use asynchronous disk I/O in the formation of the DF integrals? Use may speed up the computation slightly at the cost of spawning an additional thread. Type: boolean; Default: false. BASIS¶. Primary basis set, describes the monomer molecular orbitals. Type: string; Possible Values: basis string; Default: No Default. CCD_E_CONVERGENCE¶. E converge value for CCD. Type: conv double; Default: 1e-8. CCD_MAXITER¶. Max CCD iterations. Type: integer; Default: 50. CCD_T_CONVERGENCE¶. Convergence tolerance for CCD amplitudes. Type: conv double; Default: 1e-8. DENOMINATOR_ALGORITHM¶. Denominator algorithm for PT methods. Laplace transformations are slightly more efficient. Type: string; Possible Values: LAPLACE, CHOLESKY; Default: LAPLACE. DENOMINATOR_DELTA¶. Maximum error allowed (Max error norm in Delta tensor) in the approximate energy denominators employed for most of the \(E_{disp}^{(20)}\) and \(E_{exch-disp}^{(20)}\) evaluation. Type: double; Default: 1.0e-6. DF_BASIS_ELST¶. Auxiliary basis set for SAPT Elst10 and Exch10 density fitting computations, may be important if heavier elements are involved. Defaults to a JKFIT basis. Previous to v1.6, defaulted to DF_BASIS_SAPT See fitting notes . Type: string; Possible Values: basis string; Default: No Default. DF_BASIS_SAPT¶. Auxiliary basis set for SAPT density fitting computations. Defaults to a RI basis. Type: string; Possible Values: basis string; Default: No Default. D_CONVERGENCE¶. Convergence criterion for residual of the CPHF coefficients in the SAPT \(E_{ind,re",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__sapt.html:142,adapt,adapted,142,psi4manual/1.9.x/autodir_options_c/module__sapt.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/module__sapt.html,2,['adapt'],['adapted']
Energy Efficiency,"﻿. SAPT. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; SAPT. SAPT¶; Performs symmetry adapted perturbation theory (SAPT) analysis to quantitatively analyze non-covalent interactions. CURRENT ENERGY; SAPT ALPHA; SAPT CT ENERGY; SAPT DISP ENERGY; SAPT DISP2(CCD) ENERGY; SAPT DISP20 ENERGY; SAPT DISP21 ENERGY; SAPT DISP22(S)(CCD) ENERGY; SAPT DISP22(SDQ) ENERGY; SAPT DISP22(T) ENERGY; SAPT DISP22(T)(CCD) ENERGY; SAPT DISP30 ENERGY; SAPT ELST ENERGY; SAPT ELST10,R ENERGY; SAPT ELST12,R ENERGY; SAPT ELST13,R ENERGY; SAPT ENERGY; SAPT EST.DISP22(T) ENERGY; SAPT EST.DISP22(T)(CCD) ENERGY; SAPT EXCH ENERGY; SAPT EXCH-DISP20 ENERGY; SAPT EXCH-DISP30 ENERGY; SAPT EXCH-IND-DISP30 ENERGY; SAPT EXCH-IND20,R ENERGY; SAPT EXCH-IND20,U ENERGY; SAPT EXCH-IND22 ENERGY; SAPT EXCH-IND30(S^INF) ENERGY; SAPT EXCH-IND30,R ENERGY; SAPT EXCH-IND30,R(S^INF) ENERGY; SAPT EXCH10 ENERGY; SAPT EXCH10(S^2) ENERGY; SAPT EXCH11(S^2) ENERGY; SAPT EXCH12(S^2) ENERGY; SAPT HF TOTAL ENERGY; SAPT IND ENERGY; SAPT IND-DISP30 ENERGY; SAPT IND20,R ENERGY; SAPT IND20,U ENERGY; SAPT IND22 ENERGY; SAPT IND30,R ENERGY; SAPT MP2 CORRELATION ENERGY; SAPT SAME-SPIN DISP20 ENERGY; SAPT SAME-SPIN EXCH-DISP20 ENERGY; SAPT TOTAL ENERGY; SAPT0 DISP ENERGY; SAPT0 ELST ENERGY; SAPT0 EXCH ENERGY; SAPT0 IND ENERGY; SAPT0 TOTAL ENERGY; SAPT2 DISP ENERGY; SAPT2 ELST ENERGY; SAPT2 EXCH ENERGY; SAPT2 IND ENERGY; SAPT2 TOTAL ENERGY; SAPT2+ DISP ENERGY; SAPT2+ ELST ENERGY; SAPT2+ EXCH ENERGY; SAPT2+ IND ENERGY; SAPT2+ TOTAL ENERGY; SAPT2+(3) DISP ENERGY; SAPT2+(3) ELST ENERGY; SAPT2+(3) EXCH ENERGY; SAPT2+(3) IND ENERGY; SAPT2+(3) TOTAL ENERGY; SAPT2+(3)(CCD) DISP ENERGY; SAPT2+(3)(CCD) ELST ENERGY; SAPT2+(3)(CCD) EXCH ENERGY; SAPT2+(3)(CCD) IND ENERGY; SAPT2+(3)(CCD) TOTAL ENERGY; SAPT2+(3)(CCD)DMP2 DISP ENERGY; SAPT2+(3)(CCD)DMP2 ELST ENERGY; SAPT2+(3)(CCD)DMP2 EXCH ENERGY; SAPT2+(3)(CCD)DMP2 IND ENERGY; SAPT2+(3)(CCD)DMP2 TOTAL ENERGY; SAPT2+(3)DMP2 DISP ENERGY; SAP",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__sapt.html:147,adapt,adapted,147,psi4manual/1.9.x/autodir_psivariables/module__sapt.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__sapt.html,19,"['ENERGY', 'adapt']","['ENERGY', 'adapted']"
Energy Efficiency,"﻿. SAPT: Symmetry-Adapted Perturbation Theory — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Theoretical Methods: SCF to FCI ». SAPT: Symmetry-Adapted Perturbation Theory¶; Code author: Edward G. Hohenstein; Section author: Edward G. Hohenstein; Module: Keywords, PSI Variables, LIBSAPT_SOLVER; Symmetry-adapted perturbation theory (SAPT) provides a means of directly; computing the noncovalent interaction between two molecules, that is, the; interaction energy is determined without computing the total energy of the; monomers or dimer. In addition, SAPT provides a decomposition of the; interaction energy into physically meaningful components: i.e.,; electrostatic, exchange, induction, and dispersion terms. In SAPT, the; Hamiltonian of the dimer is partitioned into contributions from each; monomer and the interaction. Here, the Hamiltonian is written as a sum of the usual monomer Fock; operators, , the fluctuation potential of each monomer, , and the; interaction potential, . The monomer Fock operators, , are; treated as the zeroth-order Hamiltonian and the interaction energy is; evaluated through a perturbative expansion of , , and .; Through first-order in , electrostatic and exchange interactions are; included; induction and dispersion first appear at second-order in . For; a complete description of SAPT, the reader is referred to the excellent; review by Jeziorski, Moszynski, and Szalewicz [Jeziorski:1994:1887].; Several truncations of the SAPT expansion are available in the SAPT; module of PSI4. The simplest truncation of SAPT is denoted SAPT0; and defined in Eq. (1). (1); In this notation, defines the order in and in ; the; subscript, , indicates that orbital relaxation effects are included. (2). (3). (4). (5); A thorough analysis of the performance of these truncations of SAPT can be; found in a review by Hohenstein and Sherrill [Hohenstein:2012:WIREs].; The SAPT module relies entirely on the density",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/sapt-1.html:369,adapt,adapted,369,psi4manual/4.0b3/sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/sapt-1.html,8,"['adapt', 'energy']","['adapted', 'energy']"
Energy Efficiency,"﻿. SAPT: Symmetry-Adapted Perturbation Theory — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Theoretical Methods: SCF to FCI ». SAPT: Symmetry-Adapted Perturbation Theory¶; Code author: Edward G. Hohenstein; Section author: Edward G. Hohenstein; Module: Keywords, PSI Variables, LIBSAPT_SOLVER; Symmetry-adapted perturbation theory (SAPT) provides a means of directly; computing the noncovalent interaction between two molecules, that is, the; interaction energy is determined without computing the total energy of the; monomers or dimer. In addition, SAPT provides a decomposition of the; interaction energy into physically meaningful components: i.e.,; electrostatic, exchange, induction, and dispersion terms. In SAPT, the; Hamiltonian of the dimer is partitioned into contributions from each; monomer and the interaction. Here, the Hamiltonian is written as a sum of the usual monomer Fock; operators, , the fluctuation potential of each monomer, , and the; interaction potential, . The monomer Fock operators, , are; treated as the zeroth-order Hamiltonian and the interaction energy is; evaluated through a perturbative expansion of , , and .; Through first-order in , electrostatic and exchange interactions are; included; induction and dispersion first appear at second-order in . For; a complete description of SAPT, the reader is referred to the excellent; review by Jeziorski, Moszynski, and Szalewicz [Jeziorski:1994:1887].; Several truncations of the SAPT expansion are available in the SAPT; module of PSI4. The simplest truncation of SAPT is denoted SAPT0; and defined in Eq. (1). (1); In this notation, defines the order in and in ; the; subscript, , indicates that orbital relaxation effects are included. (2). (3). (4). (5); A thorough analysis of the performance of these truncations of SAPT can be; found in a review by Hohenstein and Sherrill [Hohenstein:2012:WIREs].; The SAPT module relies entirely on the density",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/sapt-1.html:369,adapt,adapted,369,psi4manual/4.0b4/sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/sapt-1.html,8,"['adapt', 'energy']","['adapted', 'energy']"
Energy Efficiency,"﻿. SAPT: Symmetry-Adapted Perturbation Theory — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Theoretical Methods: SCF to FCI ». SAPT: Symmetry-Adapted Perturbation Theory¶; Code author: Edward G. Hohenstein; Section author: Edward G. Hohenstein; Module: Keywords, PSI Variables, LIBSAPT_SOLVER. Warning; In rare cases with systems having a high degree of symmetry,; PSI4 gives (very obviously) wrong answers for SAPT computations; when the specification is in Z-matrix format. Use a Cartesian representation; to avoid this problem. Symmetry-adapted perturbation theory (SAPT) provides a means of directly; computing the noncovalent interaction between two molecules, that is, the; interaction energy is determined without computing the total energy of the; monomers or dimer. In addition, SAPT provides a decomposition of the; interaction energy into physically meaningful components: i.e.,; electrostatic, exchange, induction, and dispersion terms. In SAPT, the; Hamiltonian of the dimer is partitioned into contributions from each; monomer and the interaction. Here, the Hamiltonian is written as a sum of the usual monomer Fock; operators, , the fluctuation potential of each monomer, , and the; interaction potential, . The monomer Fock operators, , are; treated as the zeroth-order Hamiltonian and the interaction energy is; evaluated through a perturbative expansion of , , and .; Through first-order in , electrostatic and exchange interactions are; included; induction and dispersion first appear at second-order in . For; a complete description of SAPT, the reader is referred to the excellent; review by Jeziorski, Moszynski, and Szalewicz [Jeziorski:1994:1887].; Several truncations of the SAPT expansion are available in the SAPT; module of PSI4. The simplest truncation of SAPT is denoted SAPT0; and defined in Eq. (1). (1); In this notation, defines the order in and in ; the; subscript, , indicates that orbital relaxatio",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/sapt-1.html:606,adapt,adapted,606,psi4manual/4.0b5/sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/sapt-1.html,8,"['adapt', 'energy']","['adapted', 'energy']"
Energy Efficiency,"﻿. SCF — PSI4 [beta2] documentation. Navigation. index. modules |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. CURRENT ENERGY; CURRENT REFERENCE ENERGY; DFT FUNCTIONAL ENERGY; DFT FUNCTIONAL TOTAL ENERGY; DFT TOTAL ENERGY; DISPERSION CORRECTION ENERGY; NUCLEAR REPULSION ENERGY; ONE-ELECTRON ENERGY; SCF ITERATION ENERGY; SCF TOTAL ENERGY; TWO-ELECTRON ENERGY. Previous topic; SAPT; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. previous |; PSI4 [beta2] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__scf-1.html:332,ENERGY,ENERGY,332,psi4manual/4.0b2/autodir_psivariables/module__scf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_psivariables/module__scf-1.html,22,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. SCF — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. CURRENT ENERGY; CURRENT REFERENCE ENERGY; DFT FUNCTIONAL TOTAL ENERGY; DFT TOTAL ENERGY; DFT XC ENERGY; DISPERSION CORRECTION ENERGY; DOUBLE-HYBRID CORRECTION ENERGY; HF TOTAL ENERGY; NUCLEAR REPULSION ENERGY; ONE-ELECTRON ENERGY; SCF DIPOLE X; SCF DIPOLE Y; SCF DIPOLE Z; SCF ITERATION ENERGY; SCF QUADRUPOLE XX; SCF QUADRUPOLE XY; SCF QUADRUPOLE XZ; SCF QUADRUPOLE YY; SCF QUADRUPOLE YZ; SCF QUADRUPOLE ZZ; SCF TOTAL ENERGY; TWO-ELECTRON ENERGY. Previous topic; SAPT; Next topic; THERMO; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 21, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__scf-1.html:355,ENERGY,ENERGY,355,psi4manual/4.0b3/autodir_psivariables/module__scf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__scf-1.html,26,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. SCF — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. CURRENT ENERGY; CURRENT REFERENCE ENERGY; DFT FUNCTIONAL TOTAL ENERGY; DFT TOTAL ENERGY; DFT XC ENERGY; DISPERSION CORRECTION ENERGY; DOUBLE-HYBRID CORRECTION ENERGY; HF TOTAL ENERGY; NUCLEAR REPULSION ENERGY; ONE-ELECTRON ENERGY; SCF DIPOLE X; SCF DIPOLE Y; SCF DIPOLE Z; SCF ITERATION ENERGY; SCF QUADRUPOLE XX; SCF QUADRUPOLE XY; SCF QUADRUPOLE XZ; SCF QUADRUPOLE YY; SCF QUADRUPOLE YZ; SCF QUADRUPOLE ZZ; SCF TOTAL ENERGY; TWO-ELECTRON ENERGY. Previous topic; SAPT; Next topic; THERMO; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 29, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__scf-1.html:355,ENERGY,ENERGY,355,psi4manual/4.0b4/autodir_psivariables/module__scf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__scf-1.html,26,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. SCF — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. CURRENT ENERGY; CURRENT REFERENCE ENERGY; DFT FUNCTIONAL TOTAL ENERGY; DFT TOTAL ENERGY; DFT XC ENERGY; DISPERSION CORRECTION ENERGY; DOUBLE-HYBRID CORRECTION ENERGY; HF TOTAL ENERGY; NUCLEAR REPULSION ENERGY; ONE-ELECTRON ENERGY; SCF DIPOLE X; SCF DIPOLE Y; SCF DIPOLE Z; SCF ITERATION ENERGY; SCF QUADRUPOLE XX; SCF QUADRUPOLE XY; SCF QUADRUPOLE XZ; SCF QUADRUPOLE YY; SCF QUADRUPOLE YZ; SCF QUADRUPOLE ZZ; SCF TOTAL ENERGY; TWO-ELECTRON ENERGY. Previous topic; SAPT; Next topic; THERMO; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__scf-1.html:355,ENERGY,ENERGY,355,psi4manual/4.0b5/autodir_psivariables/module__scf-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__scf-1.html,26,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. SCF. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; SCF. SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. DFT FUNCTIONAL TOTAL ENERGY; DFT TOTAL ENERGY; DFT TOTAL GRADIENT; DFT VV10 ENERGY; DFT XC ENERGY; DISPERSION CORRECTION ENERGY; DOUBLE-HYBRID CORRECTION ENERGY; GRID ELECTRONS ALPHA; GRID ELECTRONS BETA; GRID ELECTRONS TOTAL; HF TOTAL ENERGY; HF TOTAL GRADIENT; HF TOTAL HESSIAN; NUCLEAR REPULSION ENERGY; ONE-ELECTRON ENERGY; SCF ITERATIONS; SCF STABILITY EIGENVALUES (array); SCF TOTAL ENERGY; SCF TOTAL GRADIENT; TD-fctl ROOT 0 -> ROOT m EXCITATION ENERGY - h SYMMETRY; TD-fctl ROOT 0 -> ROOT m OSCILLATOR STRENGTH (LEN) - h SYMMETRY; TD-fctl ROOT 0 -> ROOT m OSCILLATOR STRENGTH (VEL) - h SYMMETRY; TD-fctl ROOT 0 -> ROOT m ROTATORY STRENGTH (LEN) - h SYMMETRY; TD-fctl ROOT 0 -> ROOT m ROTATORY STRENGTH (VEL) - h SYMMETRY; TD-fctl ROOT n TOTAL ENERGY - h SYMMETRY; TWO-ELECTRON ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; SCF. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__scf-1.html:326,ENERGY,ENERGY,326,psi4manual/1.4.0/autodir_psivariables/module__scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__scf-1.html,26,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. SCF. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; SCF. SCF¶; Performs self consistent field (Hartree-Fock and Density Functional Theory) computations. These are the starting points for most computations, so this code is called in most cases. DFT FUNCTIONAL TOTAL ENERGY; DFT TOTAL ENERGY; DFT TOTAL GRADIENT; DFT VV10 ENERGY; DFT XC ENERGY; DISPERSION CORRECTION ENERGY; DOUBLE-HYBRID CORRECTION ENERGY; GRID ELECTRONS ALPHA; GRID ELECTRONS BETA; GRID ELECTRONS TOTAL; HF TOTAL ENERGY; HF TOTAL GRADIENT; HF TOTAL HESSIAN; NUCLEAR REPULSION ENERGY; ONE-ELECTRON ENERGY; SCF ITERATIONS; SCF STABILITY EIGENVALUES (array); SCF TOTAL ENERGY; SCF TOTAL GRADIENT; SCF TOTAL HESSIAN; TD-fctl ROOT 0 -> ROOT m EXCITATION ENERGY - h SYMMETRY; TD-fctl ROOT 0 -> ROOT m OSCILLATOR STRENGTH (LEN) - h SYMMETRY; TD-fctl ROOT 0 -> ROOT m OSCILLATOR STRENGTH (VEL) - h SYMMETRY; TD-fctl ROOT 0 -> ROOT m ROTATORY STRENGTH (LEN) - h SYMMETRY; TD-fctl ROOT 0 -> ROOT m ROTATORY STRENGTH (VEL) - h SYMMETRY; TD-fctl ROOT n TOTAL ENERGY - h SYMMETRY; TWO-ELECTRON ENERGY. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; SCF. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__scf-1.html:326,ENERGY,ENERGY,326,psi4manual/1.5.0/autodir_psivariables/module__scf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__scf-1.html,26,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. SCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; SCFConvergenceError. SCFConvergenceError¶. exception psi4.driver.SCFConvergenceError(eqn_description, iteration, wfn, e_conv, d_conv)[source]¶; Error called for problems with SCF iterations. Parameters:. eqn_description (str) – Type of QC routine that has failed (e.g., SCF preiterations).; iteration (int) – Iteration number on which routine failed.; wfn (Wavefunction) – Wavefunction at time of exception.; e_conv (float) – Change in energy for last iteration.; d_conv (float) – RMS change in density for last iteration. message¶; Human readable string describing the exception. iteration¶; Iteration number on which routine failed. wfn¶; Wavefunction at time of exception. e_conv¶; Change in energy for last iteration. d_conv¶; RMS change in density for last iteration. table of contents. SCFConvergenceError; SCFConvergenceError; SCFConvergenceError.message; SCFConvergenceError.iteration; SCFConvergenceError.wfn; SCFConvergenceError.e_conv; SCFConvergenceError.d_conv. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; SCFConvergenceError. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.SCFConvergenceError.html:571,energy,energy,571,psi4manual/master/api/psi4.driver.SCFConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.SCFConvergenceError.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. SCFConvergenceError¶. exception psi4.driver.SCFConvergenceError(eqn_description, iteration, wfn, e_conv, d_conv)[source]¶; Bases: psi4.driver.p4util.exceptions.ConvergenceError; Error called for problems with SCF iterations. Parameters:; wfn (psi4.core.Wavefunction) – Wavefunction at time of exception; e_conv (float) – Change in energy for last iteration; d_conv (float) – RMS change in density for last iteration. args¶. with_traceback()¶; Exception.with_traceback(tb) –; set self.__traceback__ to tb and return self. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.scfconvergenceerror.html:459,energy,energy,459,psi4manual/1.3.2/api/psi4.driver.scfconvergenceerror.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.scfconvergenceerror.html,1,['energy'],['energy']
Energy Efficiency,"﻿. SCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; SCFConvergenceError. SCFConvergenceError¶. exception psi4.driver.SCFConvergenceError(eqn_description, iteration, wfn, e_conv, d_conv)[source]¶; Error called for problems with SCF iterations. Parameters. wfn (psi4.core.Wavefunction) – Wavefunction at time of exception; e_conv (float) – Change in energy for last iteration; d_conv (float) – RMS change in density for last iteration. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; SCFConvergenceError. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.scfconvergenceerror.html:422,energy,energy,422,psi4manual/1.4.0/api/psi4.driver.scfconvergenceerror.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.scfconvergenceerror.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; SCFConvergenceError. SCFConvergenceError¶. exception psi4.driver.SCFConvergenceError(eqn_description, iteration, wfn, e_conv, d_conv)[source]¶; Error called for problems with SCF iterations. Parameters. wfn (psi4.core.Wavefunction) – Wavefunction at time of exception; e_conv (float) – Change in energy for last iteration; d_conv (float) – RMS change in density for last iteration. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; SCFConvergenceError. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.scfconvergenceerror.html:422,energy,energy,422,psi4manual/1.5.0/api/psi4.driver.scfconvergenceerror.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.scfconvergenceerror.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; SCFConvergenceError. SCFConvergenceError¶. exception psi4.driver.SCFConvergenceError(eqn_description, iteration, wfn, e_conv, d_conv)[source]¶; Error called for problems with SCF iterations. Parameters. wfn (psi4.core.Wavefunction) – Wavefunction at time of exception; e_conv (float) – Change in energy for last iteration; d_conv (float) – RMS change in density for last iteration. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; SCFConvergenceError. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.SCFConvergenceError.html:422,energy,energy,422,psi4manual/1.6.x/api/psi4.driver.SCFConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.SCFConvergenceError.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; SCFConvergenceError. SCFConvergenceError¶. exception psi4.driver.SCFConvergenceError(eqn_description, iteration, wfn, e_conv, d_conv)[source]¶; Error called for problems with SCF iterations. Parameters:. eqn_description (str) – Type of QC routine that has failed (e.g., SCF preiterations).; iteration (int) – Iteration number on which routine failed.; wfn (psi4.core.Wavefunction) – Wavefunction at time of exception.; e_conv (float) – Change in energy for last iteration.; d_conv (float) – RMS change in density for last iteration. message¶; Human readable string describing the exception. Type:; str. iteration¶; Iteration number on which routine failed. Type:; int. wfn¶; Wavefunction at time of exception. Type:; psi4.core.Wavefunction. e_conv¶; Change in energy for last iteration. Type:; float. d_conv¶; RMS change in density for last iteration. Type:; float. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; SCFConvergenceError. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.SCFConvergenceError.html:572,energy,energy,572,psi4manual/1.7.x/api/psi4.driver.SCFConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.SCFConvergenceError.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; SCFConvergenceError. SCFConvergenceError¶. exception psi4.driver.SCFConvergenceError(eqn_description, iteration, wfn, e_conv, d_conv)[source]¶; Error called for problems with SCF iterations. Parameters:. eqn_description (str) – Type of QC routine that has failed (e.g., SCF preiterations).; iteration (int) – Iteration number on which routine failed.; wfn (Wavefunction) – Wavefunction at time of exception.; e_conv (float) – Change in energy for last iteration.; d_conv (float) – RMS change in density for last iteration. message¶; Human readable string describing the exception. iteration¶; Iteration number on which routine failed. wfn¶; Wavefunction at time of exception. e_conv¶; Change in energy for last iteration. d_conv¶; RMS change in density for last iteration. table of contents. SCFConvergenceError; SCFConvergenceError; SCFConvergenceError.message; SCFConvergenceError.iteration; SCFConvergenceError.wfn; SCFConvergenceError.e_conv; SCFConvergenceError.d_conv. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; SCFConvergenceError. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.SCFConvergenceError.html:564,energy,energy,564,psi4manual/1.8.x/api/psi4.driver.SCFConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.SCFConvergenceError.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SCFConvergenceError. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; SCFConvergenceError. SCFConvergenceError¶. exception psi4.driver.SCFConvergenceError(eqn_description, iteration, wfn, e_conv, d_conv)[source]¶; Error called for problems with SCF iterations. Parameters:. eqn_description (str) – Type of QC routine that has failed (e.g., SCF preiterations).; iteration (int) – Iteration number on which routine failed.; wfn (Wavefunction) – Wavefunction at time of exception.; e_conv (float) – Change in energy for last iteration.; d_conv (float) – RMS change in density for last iteration. message¶; Human readable string describing the exception. iteration¶; Iteration number on which routine failed. wfn¶; Wavefunction at time of exception. e_conv¶; Change in energy for last iteration. d_conv¶; RMS change in density for last iteration. table of contents. SCFConvergenceError; SCFConvergenceError; SCFConvergenceError.message; SCFConvergenceError.iteration; SCFConvergenceError.wfn; SCFConvergenceError.e_conv; SCFConvergenceError.d_conv. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; SCFConvergenceError. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.SCFConvergenceError.html:564,energy,energy,564,psi4manual/1.9.x/api/psi4.driver.SCFConvergenceError.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.SCFConvergenceError.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SCF_PROPERTIES. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; SCF_PROPERTIES. SCF_PROPERTIES¶. SCF Properties to calculate after an energy evaluation. Note, this keyword is not used for property evaluations. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; SCF_PROPERTIES. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/scf__scf_properties.html:203,energy,energy,203,psi4manual/master/autodir_options_c/scf__scf_properties.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/scf__scf_properties.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SCF_PROPERTIES. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; SCF_PROPERTIES. SCF_PROPERTIES¶. SCF Properties to calculate after an energy evaluation. Note, this keyword is not used for property evaluations. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; SCF_PROPERTIES. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__scf_properties-1.html:194,energy,energy,194,psi4manual/1.4.0/autodir_options_c/scf__scf_properties-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__scf_properties-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SCF_PROPERTIES. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; SCF_PROPERTIES. SCF_PROPERTIES¶. SCF Properties to calculate after an energy evaluation. Note, this keyword is not used for property evaluations. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; SCF_PROPERTIES. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__scf_properties-1.html:194,energy,energy,194,psi4manual/1.5.0/autodir_options_c/scf__scf_properties-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__scf_properties-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SCF_PROPERTIES. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; SCF_PROPERTIES. SCF_PROPERTIES¶. SCF Properties to calculate after an energy evaluation. Note, this keyword is not used for property evaluations. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; SCF_PROPERTIES. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__scf_properties.html:194,energy,energy,194,psi4manual/1.6.x/autodir_options_c/scf__scf_properties.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__scf_properties.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SCF_PROPERTIES. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; SCF_PROPERTIES. SCF_PROPERTIES¶. SCF Properties to calculate after an energy evaluation. Note, this keyword is not used for property evaluations. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; SCF_PROPERTIES. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__scf_properties.html:194,energy,energy,194,psi4manual/1.7.x/autodir_options_c/scf__scf_properties.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__scf_properties.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SCF_PROPERTIES. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; SCF_PROPERTIES. SCF_PROPERTIES¶. SCF Properties to calculate after an energy evaluation. Note, this keyword is not used for property evaluations. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; SCF_PROPERTIES. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__scf_properties.html:196,energy,energy,196,psi4manual/1.8.x/autodir_options_c/scf__scf_properties.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__scf_properties.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SCF_PROPERTIES. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; SCF_PROPERTIES. SCF_PROPERTIES¶. SCF Properties to calculate after an energy evaluation. Note, this keyword is not used for property evaluations. Type: array; Default: No Default. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; SCF_PROPERTIES. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__scf_properties.html:196,energy,energy,196,psi4manual/1.9.x/autodir_options_c/scf__scf_properties.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__scf_properties.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SIMINT. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs; SIMINT. SIMINT¶. Input File; Description. simint/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using SIMINT integrals. simint/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using SIMINT integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Test Suite and Sample Inputs; SIMINT. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodoc_testsuite_simint.html:204,energy,energy,204,psi4manual/master/autodoc_testsuite_simint.html,https://psicode.org,https://psicode.org/psi4manual/master/autodoc_testsuite_simint.html,1,['energy'],['energy']
Energy Efficiency,"﻿. SIMINT. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. SIMINT¶. Input File; Description. simint/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using SIMINT integrals. simint/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using SIMINT integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_simint-1.html:347,energy,energy,347,psi4manual/1.2.1/autodoc_testsuite_simint-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/autodoc_testsuite_simint-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SIMINT. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. SIMINT¶. Input File; Description. simint/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using SIMINT integrals. simint/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using SIMINT integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Appendices; Test Suite and Sample Inputs. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_simint-1.html:347,energy,energy,347,psi4manual/1.3.2/autodoc_testsuite_simint-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/autodoc_testsuite_simint-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SIMINT. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; SIMINT. SIMINT¶. Input File; Description. simint/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using SIMINT integrals. simint/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using SIMINT integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Test Suite and Sample Inputs; SIMINT. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_simint-1.html:195,energy,energy,195,psi4manual/1.4.0/autodoc_testsuite_simint-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodoc_testsuite_simint-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SIMINT. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; SIMINT. SIMINT¶. Input File; Description. simint/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using SIMINT integrals. simint/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using SIMINT integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Test Suite and Sample Inputs; SIMINT. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_simint-1.html:353,energy,energy,353,psi4manual/1.5.0/autodoc_testsuite_simint-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodoc_testsuite_simint-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SIMINT. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; SIMINT. SIMINT¶. Input File; Description. simint/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using SIMINT integrals. simint/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using SIMINT integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Test Suite and Sample Inputs; SIMINT. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_simint.html:195,energy,energy,195,psi4manual/1.6.x/autodoc_testsuite_simint.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodoc_testsuite_simint.html,1,['energy'],['energy']
Energy Efficiency,"﻿. SIMINT. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; SIMINT. SIMINT¶. Input File; Description. simint/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using SIMINT integrals. simint/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using SIMINT integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Test Suite and Sample Inputs; SIMINT. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_simint.html:353,energy,energy,353,psi4manual/1.7.x/autodoc_testsuite_simint.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodoc_testsuite_simint.html,1,['energy'],['energy']
Energy Efficiency,"﻿. SIMINT. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; SIMINT. SIMINT¶. Input File; Description. simint/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using SIMINT integrals. simint/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using SIMINT integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Test Suite and Sample Inputs; SIMINT. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_simint.html:355,energy,energy,355,psi4manual/1.8.x/autodoc_testsuite_simint.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodoc_testsuite_simint.html,1,['energy'],['energy']
Energy Efficiency,"﻿. SIMINT. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; SIMINT. SIMINT¶. Input File; Description. simint/mp2-module; OMP2 cc-pVDZ energy for the H2O molecule and using SIMINT integrals. simint/scf5; Test of all different algorithms and reference types for SCF, on singlet and triplet O2, using the cc-pVTZ basis set and using SIMINT integrals. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Test Suite and Sample Inputs; SIMINT. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_simint.html:197,energy,energy,197,psi4manual/1.9.x/autodoc_testsuite_simint.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodoc_testsuite_simint.html,1,['energy'],['energy']
Energy Efficiency,"﻿. SNLINK_GPU_MEM. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; SNLINK_GPU_MEM. SNLINK_GPU_MEM¶. Proportion (in %) of available GPU memory to allocate to snLinK. Type: boolean; Default: 90. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; SNLINK_GPU_MEM. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/scf__snlink_gpu_mem.html:211,allocate,allocate,211,psi4manual/master/autodir_options_c/scf__snlink_gpu_mem.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/scf__snlink_gpu_mem.html,2,['allocate'],['allocate']
Energy Efficiency,"﻿. SO_T_FILE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; TRANSQT ». SO_T_FILE¶. SO basis kinetic energy matrix file. Type: integer; Default: PSIF_OEI. Previous topic; SO_S_FILE; Next topic; SO_TEI_FILE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; TRANSQT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/transqt__so_t_file-1.html:201,energy,energy,201,psi4manual/4.0b3/autodir_options_c/transqt__so_t_file-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/transqt__so_t_file-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SO_T_FILE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; TRANSQT ». SO_T_FILE¶. SO basis kinetic energy matrix file. Type: integer; Default: PSIF_OEI. Previous topic; SO_S_FILE; Next topic; SO_TEI_FILE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; TRANSQT ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/transqt__so_t_file-1.html:201,energy,energy,201,psi4manual/4.0b4/autodir_options_c/transqt__so_t_file-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/transqt__so_t_file-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SO_T_FILE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; TRANSQT ». SO_T_FILE¶. SO basis kinetic energy matrix file. Type: integer; Default: PSIF_OEI. Previous topic; SO_S_FILE; Next topic; SO_TEI_FILE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; TRANSQT ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/transqt__so_t_file-1.html:201,energy,energy,201,psi4manual/4.0b5/autodir_options_c/transqt__so_t_file-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/transqt__so_t_file-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SO_V_FILE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; TRANSQT ». SO_V_FILE¶. SO basis potential energy matrix file. Type: integer; Default: PSIF_OEI. Previous topic; SO_TEI_FILE; Next topic; SORTED_TEI_FILE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; TRANSQT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/transqt__so_v_file-1.html:203,energy,energy,203,psi4manual/4.0b3/autodir_options_c/transqt__so_v_file-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/transqt__so_v_file-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SO_V_FILE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; TRANSQT ». SO_V_FILE¶. SO basis potential energy matrix file. Type: integer; Default: PSIF_OEI. Previous topic; SO_TEI_FILE; Next topic; SORTED_TEI_FILE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; TRANSQT ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/transqt__so_v_file-1.html:203,energy,energy,203,psi4manual/4.0b4/autodir_options_c/transqt__so_v_file-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/transqt__so_v_file-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SO_V_FILE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; TRANSQT ». SO_V_FILE¶. SO basis potential energy matrix file. Type: integer; Default: PSIF_OEI. Previous topic; SO_TEI_FILE; Next topic; SORTED_TEI_FILE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; TRANSQT ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/transqt__so_v_file-1.html:203,energy,energy,203,psi4manual/4.0b5/autodir_options_c/transqt__so_v_file-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/transqt__so_v_file-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SPINADAPT_ENERGIES — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; CCENERGY ». SPINADAPT_ENERGIES¶. Do print spin-adapted pair energies?. Type: boolean; Default: false. Previous topic; SEMICANONICAL; Next topic; T2_COUPLED; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/ccenergy__spinadapt_energies-1.html:202,adapt,adapted,202,psi4manual/4.0b2/autodir_options_c/ccenergy__spinadapt_energies-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/ccenergy__spinadapt_energies-1.html,4,['adapt'],['adapted']
Energy Efficiency,"﻿. SPINADAPT_ENERGIES — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCENERGY ». SPINADAPT_ENERGIES¶. Do print spin-adapted pair energies?. Type: boolean; Default: false. Previous topic; SEMICANONICAL; Next topic; T2_COUPLED; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/ccenergy__spinadapt_energies-1.html:217,adapt,adapted,217,psi4manual/4.0b3/autodir_options_c/ccenergy__spinadapt_energies-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/ccenergy__spinadapt_energies-1.html,4,['adapt'],['adapted']
Energy Efficiency,"﻿. SPINADAPT_ENERGIES — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCENERGY ». SPINADAPT_ENERGIES¶. Do print spin-adapted pair energies?. Type: boolean; Default: false. Previous topic; SEMICANONICAL; Next topic; T2_COUPLED; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/ccenergy__spinadapt_energies-1.html:217,adapt,adapted,217,psi4manual/4.0b4/autodir_options_c/ccenergy__spinadapt_energies-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/ccenergy__spinadapt_energies-1.html,4,['adapt'],['adapted']
Energy Efficiency,"﻿. SPINADAPT_ENERGIES — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCENERGY ». SPINADAPT_ENERGIES¶. Do print spin-adapted pair energies?. Type: boolean; Default: false. Previous topic; SEMICANONICAL; Next topic; T2_COUPLED; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/ccenergy__spinadapt_energies-1.html:217,adapt,adapted,217,psi4manual/4.0b5/autodir_options_c/ccenergy__spinadapt_energies-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/ccenergy__spinadapt_energies-1.html,4,['adapt'],['adapted']
Energy Efficiency,"﻿. SPINADAPT_ENERGIES — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCENERGY ». SPINADAPT_ENERGIES¶. Do print spin-adapted pair energies?. Type: boolean; Default: false. Previous topic; SEMICANONICAL; Next topic; T2_COUPLED. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCENERGY ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/ccenergy__spinadapt_energies-1.html:224,adapt,adapted,224,psi4manual/1.0.0/autodir_options_c/ccenergy__spinadapt_energies-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/ccenergy__spinadapt_energies-1.html,2,['adapt'],['adapted']
Energy Efficiency,"﻿. SPINADAPT_ENERGIES. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SPINADAPT_ENERGIES. SPINADAPT_ENERGIES¶. Do print spin-adapted pair energies?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SPINADAPT_ENERGIES. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/ccenergy__spinadapt_energies-1.html:188,adapt,adapted,188,psi4manual/1.4.0/autodir_options_c/ccenergy__spinadapt_energies-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/ccenergy__spinadapt_energies-1.html,4,['adapt'],['adapted']
Energy Efficiency,"﻿. SPINADAPT_ENERGIES. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SPINADAPT_ENERGIES. SPINADAPT_ENERGIES¶. Do print spin-adapted pair energies?. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCENERGY; SPINADAPT_ENERGIES. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/ccenergy__spinadapt_energies-1.html:188,adapt,adapted,188,psi4manual/1.5.0/autodir_options_c/ccenergy__spinadapt_energies-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/ccenergy__spinadapt_energies-1.html,4,['adapt'],['adapted']
Energy Efficiency,"﻿. SPIN_SCALE_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OCC; SPIN_SCALE_TYPE. SPIN_SCALE_TYPE¶. Controls the spin scaling set to current energy. This is set by Psi internally. Type: string; Possible Values: NONE, CUSTOM, SCS, SCSN, SCSVDW, SOS, SOSPI; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; OCC; SPIN_SCALE_TYPE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/occ__spin_scale_type.html:210,energy,energy,210,psi4manual/master/autodir_options_c/occ__spin_scale_type.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/occ__spin_scale_type.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SPIN_SCALE_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OCC; SPIN_SCALE_TYPE. SPIN_SCALE_TYPE¶. Controls the spin scaling set to current energy. This is set by Psi internally. Type: string; Possible Values: NONE, CUSTOM, SCS, SCSN, SCSVDW, SOS, SOSPI; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; OCC; SPIN_SCALE_TYPE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/occ__spin_scale_type-1.html:201,energy,energy,201,psi4manual/1.4.0/autodir_options_c/occ__spin_scale_type-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/occ__spin_scale_type-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SPIN_SCALE_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OCC; SPIN_SCALE_TYPE. SPIN_SCALE_TYPE¶. Controls the spin scaling set to current energy. This is set by Psi internally. Type: string; Possible Values: NONE, CUSTOM, SCS, SCSN, SCSVDW, SOS, SOSPI; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; OCC; SPIN_SCALE_TYPE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/occ__spin_scale_type-1.html:201,energy,energy,201,psi4manual/1.5.0/autodir_options_c/occ__spin_scale_type-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/occ__spin_scale_type-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SPIN_SCALE_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OCC; SPIN_SCALE_TYPE. SPIN_SCALE_TYPE¶. Controls the spin scaling set to current energy. This is set by Psi internally. Type: string; Possible Values: NONE, CUSTOM, SCS, SCSN, SCSVDW, SOS, SOSPI; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; OCC; SPIN_SCALE_TYPE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/occ__spin_scale_type.html:201,energy,energy,201,psi4manual/1.6.x/autodir_options_c/occ__spin_scale_type.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/occ__spin_scale_type.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SPIN_SCALE_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OCC; SPIN_SCALE_TYPE. SPIN_SCALE_TYPE¶. Controls the spin scaling set to current energy. This is set by Psi internally. Type: string; Possible Values: NONE, CUSTOM, SCS, SCSN, SCSVDW, SOS, SOSPI; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; OCC; SPIN_SCALE_TYPE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/occ__spin_scale_type.html:201,energy,energy,201,psi4manual/1.7.x/autodir_options_c/occ__spin_scale_type.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/occ__spin_scale_type.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SPIN_SCALE_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OCC; SPIN_SCALE_TYPE. SPIN_SCALE_TYPE¶. Controls the spin scaling set to current energy. This is set by Psi internally. Type: string; Possible Values: NONE, CUSTOM, SCS, SCSN, SCSVDW, SOS, SOSPI; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; OCC; SPIN_SCALE_TYPE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/occ__spin_scale_type.html:203,energy,energy,203,psi4manual/1.8.x/autodir_options_c/occ__spin_scale_type.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/occ__spin_scale_type.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SPIN_SCALE_TYPE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OCC; SPIN_SCALE_TYPE. SPIN_SCALE_TYPE¶. Controls the spin scaling set to current energy. This is set by Psi internally. Type: string; Possible Values: NONE, CUSTOM, SCS, SCSN, SCSVDW, SOS, SOSPI; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; OCC; SPIN_SCALE_TYPE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/occ__spin_scale_type.html:203,energy,energy,203,psi4manual/1.9.x/autodir_options_c/occ__spin_scale_type.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/occ__spin_scale_type.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SS_E_CONVERGENCE — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; CCEOM ». SS_E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for the CIS guess to CC-EOM. Type: conv double; Default: 1e-6. Previous topic; SINGLES_PRINT; Next topic; SS_R_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; CCEOM ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/cceom__ss_e_convergence-1.html:218,energy,energy,218,psi4manual/4.0b2/autodir_options_c/cceom__ss_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/cceom__ss_e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SS_E_CONVERGENCE — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCEOM ». SS_E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for the CIS guess to CC-EOM. Type: conv double; Default: 1e-6. Previous topic; SINGLES_PRINT; Next topic; SS_R_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; CCEOM ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/cceom__ss_e_convergence-1.html:233,energy,energy,233,psi4manual/4.0b3/autodir_options_c/cceom__ss_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/cceom__ss_e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SS_E_CONVERGENCE — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCEOM ». SS_E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for the CIS guess to CC-EOM. Type: conv double; Default: 1e-6. Previous topic; SINGLES_PRINT; Next topic; SS_R_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; CCEOM ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/cceom__ss_e_convergence-1.html:233,energy,energy,233,psi4manual/4.0b4/autodir_options_c/cceom__ss_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/cceom__ss_e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SS_E_CONVERGENCE — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCEOM ». SS_E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for the CIS guess to CC-EOM. Type: conv double; Default: 1e-6. Previous topic; SINGLES_PRINT; Next topic; SS_R_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; CCEOM ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/cceom__ss_e_convergence-1.html:233,energy,energy,233,psi4manual/4.0b5/autodir_options_c/cceom__ss_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/cceom__ss_e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SS_E_CONVERGENCE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCEOM ». SS_E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for the CIS guess to CC-EOM. Type: conv double; Default: 1e-6. Previous topic; SINGLES_PRINT; Next topic; SS_R_CONVERGENCE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; CCEOM ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cceom__ss_e_convergence-1.html:240,energy,energy,240,psi4manual/1.0.0/autodir_options_c/cceom__ss_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/cceom__ss_e_convergence-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SS_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCEOM; SS_E_CONVERGENCE. SS_E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for the CIS guess to CC-EOM. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; CCEOM; SS_E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/cceom__ss_e_convergence.html:211,energy,energy,211,psi4manual/master/autodir_options_c/cceom__ss_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/cceom__ss_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SS_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCEOM; SS_E_CONVERGENCE. SS_E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for the CIS guess to CC-EOM. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; CCEOM; SS_E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cceom__ss_e_convergence-1.html:202,energy,energy,202,psi4manual/1.4.0/autodir_options_c/cceom__ss_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/cceom__ss_e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SS_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCEOM; SS_E_CONVERGENCE. SS_E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for the CIS guess to CC-EOM. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; CCEOM; SS_E_CONVERGENCE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cceom__ss_e_convergence-1.html:202,energy,energy,202,psi4manual/1.5.0/autodir_options_c/cceom__ss_e_convergence-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/cceom__ss_e_convergence-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. SS_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCEOM; SS_E_CONVERGENCE. SS_E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for the CIS guess to CC-EOM. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; CCEOM; SS_E_CONVERGENCE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cceom__ss_e_convergence.html:202,energy,energy,202,psi4manual/1.6.x/autodir_options_c/cceom__ss_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/cceom__ss_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SS_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCEOM; SS_E_CONVERGENCE. SS_E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for the CIS guess to CC-EOM. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; CCEOM; SS_E_CONVERGENCE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cceom__ss_e_convergence.html:202,energy,energy,202,psi4manual/1.7.x/autodir_options_c/cceom__ss_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/cceom__ss_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SS_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCEOM; SS_E_CONVERGENCE. SS_E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for the CIS guess to CC-EOM. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; CCEOM; SS_E_CONVERGENCE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cceom__ss_e_convergence.html:204,energy,energy,204,psi4manual/1.8.x/autodir_options_c/cceom__ss_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/cceom__ss_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SS_E_CONVERGENCE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCEOM; SS_E_CONVERGENCE. SS_E_CONVERGENCE¶. Convergence criterion for excitation energy (change) in the Davidson algorithm for the CIS guess to CC-EOM. Type: conv double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; CCEOM; SS_E_CONVERGENCE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cceom__ss_e_convergence.html:204,energy,energy,204,psi4manual/1.9.x/autodir_options_c/cceom__ss_e_convergence.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/cceom__ss_e_convergence.html,2,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». STABILITY¶; Performs wavefunction stability analysis. Called when specifically requested by the user. General¶. CACHELEVEL¶. Type: integer; Default: 2. FOLLOW¶. Do follow the most negative eigenvalue of the Hessian towards a lower energy HF solution? Follow a UHF UHF instability of same symmetry?. Type: boolean; Default: false. NUM_VECS_PRINT¶. Number of lowest MO Hessian eigenvalues to print. Type: integer; Default: 0. REFERENCE¶. Reference wavefunction type. Type: string; Possible Values: RHF, UHF, ROHF; Default: RHF. ROTATION_SCHEME¶. Method for following eigenvectors, either 0 by angles or 1 by antisymmetric matrix. Type: integer; Default: 0. SCALE¶. Scale factor (between 0 and 1) for orbital rotation step. Type: double; Default: 0.5. Table Of Contents. STABILITY; General; CACHELEVEL; FOLLOW; NUM_VECS_PRINT; REFERENCE; ROTATION_SCHEME; SCALE. Previous topic; WFN; Next topic; CACHELEVEL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__stability-1.html:377,energy,energy,377,psi4manual/4.0b2/autodir_options_c/module__stability-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/module__stability-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». STABILITY¶; Performs wavefunction stability analysis. Called when specifically requested by the user. General¶. CACHELEVEL¶. Type: integer; Default: 2. FOLLOW¶. Do follow the most negative eigenvalue of the Hessian towards a lower energy HF solution? Follow a UHF UHF instability of same symmetry?. Type: boolean; Default: false. NUM_VECS_PRINT¶. Number of lowest MO Hessian eigenvalues to print. Type: integer; Default: 0. REFERENCE¶. Reference wavefunction type. Type: string; Possible Values: RHF, UHF, ROHF; Default: RHF. ROTATION_SCHEME¶. Method for following eigenvectors, either 0 by angles or 1 by antisymmetric matrix. Type: integer; Default: 0. SCALE¶. Scale factor (between 0 and 1) for orbital rotation step. Type: double; Default: 0.5. Table Of Contents. STABILITY; General; CACHELEVEL; FOLLOW; NUM_VECS_PRINT; REFERENCE; ROTATION_SCHEME; SCALE. Previous topic; WFN; Next topic; CACHELEVEL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__stability-1.html:392,energy,energy,392,psi4manual/4.0b3/autodir_options_c/module__stability-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/module__stability-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». STABILITY¶; Performs wavefunction stability analysis. Called when specifically requested by the user. General¶. CACHELEVEL¶. Type: integer; Default: 2. FOLLOW¶. Do follow the most negative eigenvalue of the Hessian towards a lower energy HF solution? Follow a UHF UHF instability of same symmetry?. Type: boolean; Default: false. NUM_VECS_PRINT¶. Number of lowest MO Hessian eigenvalues to print. Type: integer; Default: 0. REFERENCE¶. Reference wavefunction type. Type: string; Possible Values: RHF, UHF, ROHF; Default: RHF. ROTATION_SCHEME¶. Method for following eigenvectors, either 0 by angles or 1 by antisymmetric matrix. Type: integer; Default: 0. SCALE¶. Scale factor (between 0 and 1) for orbital rotation step. Type: double; Default: 0.5. Table Of Contents. STABILITY; General; CACHELEVEL; FOLLOW; NUM_VECS_PRINT; REFERENCE; ROTATION_SCHEME; SCALE. Previous topic; WFN; Next topic; CACHELEVEL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__stability-1.html:392,energy,energy,392,psi4manual/4.0b4/autodir_options_c/module__stability-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/module__stability-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». STABILITY¶; Performs wavefunction stability analysis. Called when specifically requested by the user. General¶. CACHELEVEL¶. Type: integer; Default: 2. FOLLOW¶. Do follow the most negative eigenvalue of the Hessian towards a lower energy HF solution? Follow a UHF UHF instability of same symmetry?. Type: boolean; Default: false. NUM_VECS_PRINT¶. Number of lowest MO Hessian eigenvalues to print. Type: integer; Default: 0. REFERENCE¶. Reference wavefunction type. Type: string; Possible Values: RHF, UHF, ROHF; Default: RHF. ROTATION_SCHEME¶. Method for following eigenvectors, either 0 by angles or 1 by antisymmetric matrix. Type: integer; Default: 0. SCALE¶. Scale factor (between 0 and 1) for orbital rotation step. Type: double; Default: 0.5. Table Of Contents. STABILITY; General; CACHELEVEL; FOLLOW; NUM_VECS_PRINT; REFERENCE; ROTATION_SCHEME; SCALE. Previous topic; WFN; Next topic; CACHELEVEL; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__stability-1.html:392,energy,energy,392,psi4manual/4.0b5/autodir_options_c/module__stability-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/module__stability-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY_CHECK — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DCFT ». STABILITY_CHECK¶. Performs stability analysis of the DCFT energy. Type: boolean; Default: false. Previous topic; STABILITY_AUGMENT_SPACE_TOL; Next topic; STABILITY_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/dcft__stability_check-1.html:233,energy,energy,233,psi4manual/4.0b3/autodir_options_c/dcft__stability_check-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/dcft__stability_check-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY_CHECK — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DCFT ». STABILITY_CHECK¶. Performs stability analysis of the DCFT energy. Type: boolean; Default: false. Previous topic; STABILITY_AUGMENT_SPACE_TOL; Next topic; STABILITY_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/dcft__stability_check-1.html:233,energy,energy,233,psi4manual/4.0b4/autodir_options_c/dcft__stability_check-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/dcft__stability_check-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY_CHECK — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DCFT ». STABILITY_CHECK¶. Performs stability analysis of the DCFT energy. Type: boolean; Default: false. Previous topic; STABILITY_AUGMENT_SPACE_TOL; Next topic; STABILITY_CONVERGENCE; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/dcft__stability_check-1.html:233,energy,energy,233,psi4manual/4.0b5/autodir_options_c/dcft__stability_check-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/dcft__stability_check-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY_CHECK — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». STABILITY_CHECK¶. Performs stability analysis of the DCFT energy. Type: boolean; Default: false. Previous topic; STABILITY_AUGMENT_SPACE_TOL; Next topic; STABILITY_CONVERGENCE. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__stability_check-1.html:240,energy,energy,240,psi4manual/1.0.0/autodir_options_c/dcft__stability_check-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__stability_check-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY_CHECK. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DCT; STABILITY_CHECK. STABILITY_CHECK¶. Performs stability analysis of the DCT energy. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DCT; STABILITY_CHECK. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dct__stability_check.html:208,energy,energy,208,psi4manual/master/autodir_options_c/dct__stability_check.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dct__stability_check.html,2,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY_CHECK. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DCT; STABILITY_CHECK. STABILITY_CHECK¶. Performs stability analysis of the DCT energy. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DCT; STABILITY_CHECK. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dct__stability_check-1.html:199,energy,energy,199,psi4manual/1.4.0/autodir_options_c/dct__stability_check-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dct__stability_check-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY_CHECK. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DCT; STABILITY_CHECK. STABILITY_CHECK¶. Performs stability analysis of the DCT energy. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DCT; STABILITY_CHECK. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dct__stability_check-1.html:199,energy,energy,199,psi4manual/1.5.0/autodir_options_c/dct__stability_check-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dct__stability_check-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY_CHECK. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DCT; STABILITY_CHECK. STABILITY_CHECK¶. Performs stability analysis of the DCT energy. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DCT; STABILITY_CHECK. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dct__stability_check.html:199,energy,energy,199,psi4manual/1.6.x/autodir_options_c/dct__stability_check.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dct__stability_check.html,2,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY_CHECK. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DCT; STABILITY_CHECK. STABILITY_CHECK¶. Performs stability analysis of the DCT energy. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DCT; STABILITY_CHECK. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dct__stability_check.html:199,energy,energy,199,psi4manual/1.7.x/autodir_options_c/dct__stability_check.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dct__stability_check.html,2,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY_CHECK. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DCT; STABILITY_CHECK. STABILITY_CHECK¶. Performs stability analysis of the DCT energy. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DCT; STABILITY_CHECK. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dct__stability_check.html:201,energy,energy,201,psi4manual/1.8.x/autodir_options_c/dct__stability_check.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dct__stability_check.html,2,['energy'],['energy']
Energy Efficiency,"﻿. STABILITY_CHECK. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DCT; STABILITY_CHECK. STABILITY_CHECK¶. Performs stability analysis of the DCT energy. Type: boolean; Default: false. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DCT; STABILITY_CHECK. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dct__stability_check.html:201,energy,energy,201,psi4manual/1.9.x/autodir_options_c/dct__stability_check.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dct__stability_check.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Scalar relativistic Hamiltonians — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Theoretical Methods: SCF to FCI ». Scalar relativistic Hamiltonians¶; Code author: Prakash Verma and Francesco A. Evangelista; Section author: Prakash Verma, Wallace D. Derricotte, and Francesco A. Evangelista; The exact-two-component (X2C) approch is a convenient way to introduce scalar; relativistic effects in DFT and wave function-based methods.; Psi4 implements the spin-free one-electron version of X2C, which produces; a modified one-electron Hamiltonian :. that is a sum of a kinetic energy () and potential energy; () operator.; Our implementation is equivalent to the one reported by Cheng and Gauss [Cheng:084114].; X2C calculations require the use of special (alternatively fully uncontracted) basis sets designed for relativistic; calculations. Common choices include the Dunning Douglass–Kroll basis sets; (cc-pVXZ-DK, cc-pCVXZ-DK, cc-pwCVXZ-DK) and Roos’ ANO basis sets. Note; See also Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess for another relativistic Hamiltonian. A First Example¶; The following is a simple input that will perform a Hartree–Fock calculation; using the X2C Hamiltonian.; molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz-decontract; relativistic x2c; }. energy('hf'). This computation yields the following result:; @RHF Final Energy: -100.10545426415609. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.7826788086396448; Two-Electron Energy = 45.5004909821901009; Total Energy = -100.1054542641560516. while a non-relativistic calculation yields the following energy:; @RHF Final Energy: -100.01041683847258. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.6714586298456027; Two-Electron Energy = 45.4843082290795309; Total Energy = -100.0104168384725796. Basis sets options¶; The X2C module in Psi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/relativistic-1.html:648,energy,energy,648,psi4manual/1.0.0/relativistic-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/relativistic-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Scalar relativistic Hamiltonians. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Theoretical Methods: SCF to FCI; Scalar relativistic Hamiltonians. Scalar relativistic Hamiltonians¶; Code author: Prakash Verma and Francesco A. Evangelista; Section author: Prakash Verma, Wallace D. Derricotte, and Francesco A. Evangelista; The exact-two-component (X2C) approach is a convenient way to introduce scalar; relativistic effects in DFT and wave function-based methods.; PSI4 implements the spin-free one-electron version of X2C, which produces; a modified one-electron Hamiltonian \(H_{\rm X2C}\):. \[H_{\rm X2C} = T_{\rm X2C} + V_{\rm X2C}\]; that is a sum of a kinetic energy (\(T_{\rm X2C}\)) and potential energy; (\(V_{\rm X2C}\)) operator.; Our implementation is equivalent to the one reported by Cheng and Gauss [Cheng:084114].; X2C calculations require the use of special (alternatively fully uncontracted) basis sets designed for relativistic; calculations. Common choices include the Dunning Douglass–Kroll basis sets; (cc-pVXZ-DK, cc-pCVXZ-DK, cc-pwCVXZ-DK) and Roos’ ANO basis sets. Note; See also Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess for another relativistic Hamiltonian. A First Example¶; The following is a simple input that will perform a Hartree–Fock calculation; using the X2C Hamiltonian.; molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz; relativistic x2c; }. energy('hf'). This computation yields the following result:; @RHF Final Energy: -100.10007984692388. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.7611816259664579; Two-Electron Energy = 45.4843682167491039; Total Energy = -100.1000798469238902. while a non-relativistic calculation yields the following energy:; @RHF Final Energy: -100.01928891411315. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.6645256529074572; Two-Electron Energy = 45.4685031765008461; Total Ene",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/relativistic.html:700,energy,energy,700,psi4manual/master/relativistic.html,https://psicode.org,https://psicode.org/psi4manual/master/relativistic.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Scalar relativistic Hamiltonians. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Theoretical Methods: SCF to FCI. Scalar relativistic Hamiltonians¶; Code author: Prakash Verma and Francesco A. Evangelista; Section author: Prakash Verma, Wallace D. Derricotte, and Francesco A. Evangelista; The exact-two-component (X2C) approach is a convenient way to introduce scalar; relativistic effects in DFT and wave function-based methods.; PSI4 implements the spin-free one-electron version of X2C, which produces; a modified one-electron Hamiltonian \(H_{\rm X2C}\):. \[H_{\rm X2C} = T_{\rm X2C} + V_{\rm X2C}\]; that is a sum of a kinetic energy (\(T_{\rm X2C}\)) and potential energy; (\(V_{\rm X2C}\)) operator.; Our implementation is equivalent to the one reported by Cheng and Gauss [Cheng:084114].; X2C calculations require the use of special (alternatively fully uncontracted) basis sets designed for relativistic; calculations. Common choices include the Dunning Douglass–Kroll basis sets; (cc-pVXZ-DK, cc-pCVXZ-DK, cc-pwCVXZ-DK) and Roos’ ANO basis sets. Note; See also Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess for another relativistic Hamiltonian. A First Example¶; The following is a simple input that will perform a Hartree–Fock calculation; using the X2C Hamiltonian.; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz; relativistic x2c; }. energy('hf'). This computation yields the following result:; 1; 2; 3; 4; 5; 6; 7; 8@RHF Final Energy: -100.10007984692388. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.7611816259664579; Two-Electron Energy = 45.4843682167491039; Total Energy = -100.1000798469238902. while a non-relativistic calculation yields the following energy:; 1; 2; 3; 4; 5; 6; 7; 8@RHF Final Energy: -100.01928891411315. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.6645256529074572; Two-Electron E",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/relativistic-1.html:657,energy,energy,657,psi4manual/1.1.0/relativistic-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/relativistic-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Scalar relativistic Hamiltonians. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Theoretical Methods: SCF to FCI. Scalar relativistic Hamiltonians¶; Code author: Prakash Verma and Francesco A. Evangelista; Section author: Prakash Verma, Wallace D. Derricotte, and Francesco A. Evangelista; The exact-two-component (X2C) approach is a convenient way to introduce scalar; relativistic effects in DFT and wave function-based methods.; PSI4 implements the spin-free one-electron version of X2C, which produces; a modified one-electron Hamiltonian \(H_{\rm X2C}\):. \[H_{\rm X2C} = T_{\rm X2C} + V_{\rm X2C}\]; that is a sum of a kinetic energy (\(T_{\rm X2C}\)) and potential energy; (\(V_{\rm X2C}\)) operator.; Our implementation is equivalent to the one reported by Cheng and Gauss [Cheng:084114].; X2C calculations require the use of special (alternatively fully uncontracted) basis sets designed for relativistic; calculations. Common choices include the Dunning Douglass–Kroll basis sets; (cc-pVXZ-DK, cc-pCVXZ-DK, cc-pwCVXZ-DK) and Roos’ ANO basis sets. Note; See also Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess for another relativistic Hamiltonian. A First Example¶; The following is a simple input that will perform a Hartree–Fock calculation; using the X2C Hamiltonian.; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz; relativistic x2c; }. energy('hf'). This computation yields the following result:; 1; 2; 3; 4; 5; 6; 7; 8@RHF Final Energy: -100.10007984692388. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.7611816259664579; Two-Electron Energy = 45.4843682167491039; Total Energy = -100.1000798469238902. while a non-relativistic calculation yields the following energy:; 1; 2; 3; 4; 5; 6; 7; 8@RHF Final Energy: -100.01928891411315. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.6645256529074572; Two-Electron",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/relativistic-1.html:659,energy,energy,659,psi4manual/1.2.1/relativistic-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/relativistic-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Scalar relativistic Hamiltonians. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Theoretical Methods: SCF to FCI. Scalar relativistic Hamiltonians¶; Code author: Prakash Verma and Francesco A. Evangelista; Section author: Prakash Verma, Wallace D. Derricotte, and Francesco A. Evangelista; The exact-two-component (X2C) approach is a convenient way to introduce scalar; relativistic effects in DFT and wave function-based methods.; PSI4 implements the spin-free one-electron version of X2C, which produces; a modified one-electron Hamiltonian \(H_{\rm X2C}\):. \[H_{\rm X2C} = T_{\rm X2C} + V_{\rm X2C}\]; that is a sum of a kinetic energy (\(T_{\rm X2C}\)) and potential energy; (\(V_{\rm X2C}\)) operator.; Our implementation is equivalent to the one reported by Cheng and Gauss [Cheng:084114].; X2C calculations require the use of special (alternatively fully uncontracted) basis sets designed for relativistic; calculations. Common choices include the Dunning Douglass–Kroll basis sets; (cc-pVXZ-DK, cc-pCVXZ-DK, cc-pwCVXZ-DK) and Roos’ ANO basis sets. Note; See also Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess for another relativistic Hamiltonian. A First Example¶; The following is a simple input that will perform a Hartree–Fock calculation; using the X2C Hamiltonian.; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz; relativistic x2c; }. energy('hf'). This computation yields the following result:; 1; 2; 3; 4; 5; 6; 7; 8@RHF Final Energy: -100.10007984692388. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.7611816259664579; Two-Electron Energy = 45.4843682167491039; Total Energy = -100.1000798469238902. while a non-relativistic calculation yields the following energy:; 1; 2; 3; 4; 5; 6; 7; 8@RHF Final Energy: -100.01928891411315. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.6645256529074572; Two-Electron",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/relativistic-1.html:659,energy,energy,659,psi4manual/1.3.2/relativistic-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/relativistic-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Scalar relativistic Hamiltonians. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Theoretical Methods: SCF to FCI; Scalar relativistic Hamiltonians. Scalar relativistic Hamiltonians¶; Code author: Prakash Verma and Francesco A. Evangelista; Section author: Prakash Verma, Wallace D. Derricotte, and Francesco A. Evangelista; The exact-two-component (X2C) approach is a convenient way to introduce scalar; relativistic effects in DFT and wave function-based methods.; PSI4 implements the spin-free one-electron version of X2C, which produces; a modified one-electron Hamiltonian \(H_{\rm X2C}\):. \[H_{\rm X2C} = T_{\rm X2C} + V_{\rm X2C}\]; that is a sum of a kinetic energy (\(T_{\rm X2C}\)) and potential energy; (\(V_{\rm X2C}\)) operator.; Our implementation is equivalent to the one reported by Cheng and Gauss [Cheng:084114].; X2C calculations require the use of special (alternatively fully uncontracted) basis sets designed for relativistic; calculations. Common choices include the Dunning Douglass–Kroll basis sets; (cc-pVXZ-DK, cc-pCVXZ-DK, cc-pwCVXZ-DK) and Roos’ ANO basis sets. Note; See also Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess for another relativistic Hamiltonian. A First Example¶; The following is a simple input that will perform a Hartree–Fock calculation; using the X2C Hamiltonian.; molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz; relativistic x2c; }. energy('hf'). This computation yields the following result:; @RHF Final Energy: -100.10007984692388. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.7611816259664579; Two-Electron Energy = 45.4843682167491039; Total Energy = -100.1000798469238902. while a non-relativistic calculation yields the following energy:; @RHF Final Energy: -100.01928891411315. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.6645256529074572; Two-Electron Energy = 45.4685031765008461; Total Energy = -10",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/relativistic-1.html:691,energy,energy,691,psi4manual/1.4.0/relativistic-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/relativistic-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Scalar relativistic Hamiltonians. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Theoretical Methods: SCF to FCI; Scalar relativistic Hamiltonians. Scalar relativistic Hamiltonians¶; Code author: Prakash Verma and Francesco A. Evangelista; Section author: Prakash Verma, Wallace D. Derricotte, and Francesco A. Evangelista; The exact-two-component (X2C) approach is a convenient way to introduce scalar; relativistic effects in DFT and wave function-based methods.; PSI4 implements the spin-free one-electron version of X2C, which produces; a modified one-electron Hamiltonian \(H_{\rm X2C}\):. \[H_{\rm X2C} = T_{\rm X2C} + V_{\rm X2C}\]; that is a sum of a kinetic energy (\(T_{\rm X2C}\)) and potential energy; (\(V_{\rm X2C}\)) operator.; Our implementation is equivalent to the one reported by Cheng and Gauss [Cheng:084114].; X2C calculations require the use of special (alternatively fully uncontracted) basis sets designed for relativistic; calculations. Common choices include the Dunning Douglass–Kroll basis sets; (cc-pVXZ-DK, cc-pCVXZ-DK, cc-pwCVXZ-DK) and Roos’ ANO basis sets. Note; See also Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess for another relativistic Hamiltonian. A First Example¶; The following is a simple input that will perform a Hartree–Fock calculation; using the X2C Hamiltonian.; molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz; relativistic x2c; }. energy('hf'). This computation yields the following result:; @RHF Final Energy: -100.10007984692388. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.7611816259664579; Two-Electron Energy = 45.4843682167491039; Total Energy = -100.1000798469238902. while a non-relativistic calculation yields the following energy:; @RHF Final Energy: -100.01928891411315. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.6645256529074572; Two-Electron Energy = 45.4685031765008461; Total Energy = -10",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/relativistic-1.html:691,energy,energy,691,psi4manual/1.5.0/relativistic-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/relativistic-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Scalar relativistic Hamiltonians. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Theoretical Methods: SCF to FCI; Scalar relativistic Hamiltonians. Scalar relativistic Hamiltonians¶; Code author: Prakash Verma and Francesco A. Evangelista; Section author: Prakash Verma, Wallace D. Derricotte, and Francesco A. Evangelista; The exact-two-component (X2C) approach is a convenient way to introduce scalar; relativistic effects in DFT and wave function-based methods.; PSI4 implements the spin-free one-electron version of X2C, which produces; a modified one-electron Hamiltonian \(H_{\rm X2C}\):. \[H_{\rm X2C} = T_{\rm X2C} + V_{\rm X2C}\]; that is a sum of a kinetic energy (\(T_{\rm X2C}\)) and potential energy; (\(V_{\rm X2C}\)) operator.; Our implementation is equivalent to the one reported by Cheng and Gauss [Cheng:084114].; X2C calculations require the use of special (alternatively fully uncontracted) basis sets designed for relativistic; calculations. Common choices include the Dunning Douglass–Kroll basis sets; (cc-pVXZ-DK, cc-pCVXZ-DK, cc-pwCVXZ-DK) and Roos’ ANO basis sets. Note; See also Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess for another relativistic Hamiltonian. A First Example¶; The following is a simple input that will perform a Hartree–Fock calculation; using the X2C Hamiltonian.; molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz; relativistic x2c; }. energy('hf'). This computation yields the following result:; @RHF Final Energy: -100.10007984692388. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.7611816259664579; Two-Electron Energy = 45.4843682167491039; Total Energy = -100.1000798469238902. while a non-relativistic calculation yields the following energy:; @RHF Final Energy: -100.01928891411315. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.6645256529074572; Two-Electron Energy = 45.4685031765008461; Total Energy = -10",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/relativistic.html:691,energy,energy,691,psi4manual/1.6.x/relativistic.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/relativistic.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Scalar relativistic Hamiltonians. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Theoretical Methods: SCF to FCI; Scalar relativistic Hamiltonians. Scalar relativistic Hamiltonians¶; Code author: Prakash Verma and Francesco A. Evangelista; Section author: Prakash Verma, Wallace D. Derricotte, and Francesco A. Evangelista; The exact-two-component (X2C) approach is a convenient way to introduce scalar; relativistic effects in DFT and wave function-based methods.; PSI4 implements the spin-free one-electron version of X2C, which produces; a modified one-electron Hamiltonian \(H_{\rm X2C}\):. \[H_{\rm X2C} = T_{\rm X2C} + V_{\rm X2C}\]; that is a sum of a kinetic energy (\(T_{\rm X2C}\)) and potential energy; (\(V_{\rm X2C}\)) operator.; Our implementation is equivalent to the one reported by Cheng and Gauss [Cheng:084114].; X2C calculations require the use of special (alternatively fully uncontracted) basis sets designed for relativistic; calculations. Common choices include the Dunning Douglass–Kroll basis sets; (cc-pVXZ-DK, cc-pCVXZ-DK, cc-pwCVXZ-DK) and Roos’ ANO basis sets. Note; See also Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess for another relativistic Hamiltonian. A First Example¶; The following is a simple input that will perform a Hartree–Fock calculation; using the X2C Hamiltonian.; molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz; relativistic x2c; }. energy('hf'). This computation yields the following result:; @RHF Final Energy: -100.10007984692388. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.7611816259664579; Two-Electron Energy = 45.4843682167491039; Total Energy = -100.1000798469238902. while a non-relativistic calculation yields the following energy:; @RHF Final Energy: -100.01928891411315. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.6645256529074572; Two-Electron Energy = 45.4685031765008461; Total Energy = -10",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/relativistic.html:691,energy,energy,691,psi4manual/1.7.x/relativistic.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/relativistic.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Scalar relativistic Hamiltonians. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Theoretical Methods: SCF to FCI; Scalar relativistic Hamiltonians. Scalar relativistic Hamiltonians¶; Code author: Prakash Verma and Francesco A. Evangelista; Section author: Prakash Verma, Wallace D. Derricotte, and Francesco A. Evangelista; The exact-two-component (X2C) approach is a convenient way to introduce scalar; relativistic effects in DFT and wave function-based methods.; PSI4 implements the spin-free one-electron version of X2C, which produces; a modified one-electron Hamiltonian \(H_{\rm X2C}\):. \[H_{\rm X2C} = T_{\rm X2C} + V_{\rm X2C}\]; that is a sum of a kinetic energy (\(T_{\rm X2C}\)) and potential energy; (\(V_{\rm X2C}\)) operator.; Our implementation is equivalent to the one reported by Cheng and Gauss [Cheng:084114].; X2C calculations require the use of special (alternatively fully uncontracted) basis sets designed for relativistic; calculations. Common choices include the Dunning Douglass–Kroll basis sets; (cc-pVXZ-DK, cc-pCVXZ-DK, cc-pwCVXZ-DK) and Roos’ ANO basis sets. Note; See also Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess for another relativistic Hamiltonian. A First Example¶; The following is a simple input that will perform a Hartree–Fock calculation; using the X2C Hamiltonian.; molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz; relativistic x2c; }. energy('hf'). This computation yields the following result:; @RHF Final Energy: -100.10007984692388. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.7611816259664579; Two-Electron Energy = 45.4843682167491039; Total Energy = -100.1000798469238902. while a non-relativistic calculation yields the following energy:; @RHF Final Energy: -100.01928891411315. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.6645256529074572; Two-Electron Energy = 45.4685031765008461; Total Energy = -",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/relativistic.html:693,energy,energy,693,psi4manual/1.8.x/relativistic.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/relativistic.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Scalar relativistic Hamiltonians. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Theoretical Methods: SCF to FCI; Scalar relativistic Hamiltonians. Scalar relativistic Hamiltonians¶; Code author: Prakash Verma and Francesco A. Evangelista; Section author: Prakash Verma, Wallace D. Derricotte, and Francesco A. Evangelista; The exact-two-component (X2C) approach is a convenient way to introduce scalar; relativistic effects in DFT and wave function-based methods.; PSI4 implements the spin-free one-electron version of X2C, which produces; a modified one-electron Hamiltonian \(H_{\rm X2C}\):. \[H_{\rm X2C} = T_{\rm X2C} + V_{\rm X2C}\]; that is a sum of a kinetic energy (\(T_{\rm X2C}\)) and potential energy; (\(V_{\rm X2C}\)) operator.; Our implementation is equivalent to the one reported by Cheng and Gauss [Cheng:084114].; X2C calculations require the use of special (alternatively fully uncontracted) basis sets designed for relativistic; calculations. Common choices include the Dunning Douglass–Kroll basis sets; (cc-pVXZ-DK, cc-pCVXZ-DK, cc-pwCVXZ-DK) and Roos’ ANO basis sets. Note; See also Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess for another relativistic Hamiltonian. A First Example¶; The following is a simple input that will perform a Hartree–Fock calculation; using the X2C Hamiltonian.; molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz; relativistic x2c; }. energy('hf'). This computation yields the following result:; @RHF Final Energy: -100.10007984692388. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.7611816259664579; Two-Electron Energy = 45.4843682167491039; Total Energy = -100.1000798469238902. while a non-relativistic calculation yields the following energy:; @RHF Final Energy: -100.01928891411315. => Energetics <=. Nuclear Repulsion Energy = 5.1767335622934780; One-Electron Energy = -150.6645256529074572; Two-Electron Energy = 45.4685031765008461; Total Energy = -",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/relativistic.html:693,energy,energy,693,psi4manual/1.9.x/relativistic.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/relativistic.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Single-Point Energy — energy(). Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Single-Point Energy — energy(). Single-Point Energy — energy()¶. Psi4 Native Energy Methods; Psi4 Native DFT Energy Methods; MRCC Interfaced Energy Methods; CFOUR Interfaced Energy Methods. psi4.energy(name[, molecule, return_wfn, restart_file])[source]; Function to compute the single-point electronic energy. Returns:; float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. write_orbitals (str, boolean) – filename || \(\Rightarrow\) 'on' \(\Leftarrow\) || 'off'; (str) Save wfn containing current orbitals to the given file name after each SCF iteration; and retain after PSI4 finishes.; (boolean) Turns writing the orbitals after the converged SCF on/off.; Orbital file will be deleted unless PSI4 is called with -m flag. restart_file (str) – ['file.1, file.32] || ./file || etc.; Existing files to be renamed and copied for calculation restart, e.g. a serialized wfn or module-specific binary data. name; calls method. efp; (with LibEFP) effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual] [details]. hf; HF self consistent field (SCF) [manual] [details]. qchf; quadratically-convergent HF. hf3c; HF with dispersion, BSSE, SRB, and basis se",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/energy.html:25,energy,energy,25,psi4manual/master/energy.html,https://psicode.org,https://psicode.org/psi4manual/master/energy.html,8,['energy'],['energy']
Energy Efficiency,"﻿. Single-Point Energy — energy(). Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Single-Point Energy — energy()¶. Psi4 Native Energy Methods; Psi4 Native DFT Energy Methods; MRCC Interfaced Energy Methods; CFOUR Interfaced Energy Methods. psi4.energy(name[, molecule, return_wfn, restart_file])[source]¶; Function to compute the single-point electronic energy. Returns:float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. restart_file (string) – ['file.1, file.32] || ./file || etc.; Binary data files to be renamed for calculation restart. name; calls method. efp; effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. hf; HF self consistent field (SCF) [manual]. hf3c; HF with dispersion, BSSE, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [manual]. dcft; density cumulant functional theory [manual]. mp2; 2nd-order Møller–Plesset perturbation theory (MP2) [manual] [details]. mp3; 3rd-order Møller–Plesset perturbation theory (MP3) [manual] [details]. fno-mp3; MP3 with frozen natural orbitals [manual]. mp2.5; average of MP2 and MP3 [manual] [details]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. fno-mp4(sdq); MP4 (less triples) with frozen natura",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/energy.html:25,energy,energy,25,psi4manual/1.1.0/energy.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/energy.html,14,['energy'],['energy']
Energy Efficiency,"﻿. Single-Point Energy — energy(). Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Single-Point Energy — energy()¶. Psi4 Native Energy Methods; Psi4 Native DFT Energy Methods; MRCC Interfaced Energy Methods; CFOUR Interfaced Energy Methods. psi4.energy(name[, molecule, return_wfn, restart_file])[source]¶; Function to compute the single-point electronic energy. Returns:float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. restart_file (string) – ['file.1, file.32] || ./file || etc.; Binary data files to be renamed for calculation restart. name; calls method. efp; effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. hf; HF self consistent field (SCF) [manual]. hf3c; HF with dispersion, BSSE, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [manual]. dcft; density cumulant functional theory [manual]. mp2; 2nd-order Møller–Plesset perturbation theory (MP2) [manual] [details]. mp3; 3rd-order Møller–Plesset perturbation theory (MP3) [manual] [details]. fno-mp3; MP3 with frozen natural orbitals [manual]. mp2.5; average of MP2 and MP3 [manual] [details]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. fno-mp4(sdq); MP4 (less triples) with frozen natu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/energy-1.html:25,energy,energy,25,psi4manual/1.2.1/energy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/energy-1.html,14,['energy'],['energy']
Energy Efficiency,"﻿. Single-Point Energy — energy(). Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. Single-Point Energy — energy()¶. Psi4 Native Energy Methods; Psi4 Native DFT Energy Methods; MRCC Interfaced Energy Methods; CFOUR Interfaced Energy Methods. psi4.energy(name[, molecule, return_wfn, restart_file])[source]¶; Function to compute the single-point electronic energy. Returns:float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. restart_file (string) – ['file.1, file.32] || ./file || etc.; Binary data files to be renamed for calculation restart. name; calls method. efp; effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. hf; HF self consistent field (SCF) [manual]. hf3c; HF with dispersion, BSSE, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [manual]. dcft; density cumulant functional theory [manual]. mp2; 2nd-order Møller–Plesset perturbation theory (MP2) [manual] [details]. mp3; 3rd-order Møller–Plesset perturbation theory (MP3) [manual] [details]. fno-mp3; MP3 with frozen natural orbitals [manual]. mp2.5; average of MP2 and MP3 [manual] [details]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. fno-mp4(sdq); MP4 (less triples) with frozen natu",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/energy-1.html:25,energy,energy,25,psi4manual/1.3.2/energy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/energy-1.html,14,['energy'],['energy']
Energy Efficiency,"﻿. Single-Point Energy — energy(). Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Single-Point Energy — energy(). Single-Point Energy — energy()¶. Psi4 Native Energy Methods; Psi4 Native DFT Energy Methods; MRCC Interfaced Energy Methods; CFOUR Interfaced Energy Methods. psi4.energy(name[, molecule, return_wfn, restart_file])[source]; Function to compute the single-point electronic energy. Returns; float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. write_orbitals (str, boolean) – filename || \(\Rightarrow\) 'on' \(\Leftarrow\) || 'off'; (str) Save wfn containing current orbitals to the given file name after each SCF iteration; and retain after PSI4 finishes.; (boolean) Turns writing the orbitals after the converged SCF on/off.; Orbital file will be deleted unless PSI4 is called with -m flag. restart_file (str) – ['file.1, file.32] || ./file || etc.; Existing files to be renamed and copied for calculation restart, e.g. a serialized wfn or module-specific binary data. name; calls method. efp; effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. hf; HF self consistent field (SCF) [manual]. hf3c; HF with dispersion, BSSE, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/energy-1.html:25,energy,energy,25,psi4manual/1.4.0/energy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/energy-1.html,16,['energy'],['energy']
Energy Efficiency,"﻿. Single-Point Energy — energy(). Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Single-Point Energy — energy(). Single-Point Energy — energy()¶. Psi4 Native Energy Methods; Psi4 Native DFT Energy Methods; MRCC Interfaced Energy Methods; CFOUR Interfaced Energy Methods. psi4.energy(name[, molecule, return_wfn, restart_file])[source]; Function to compute the single-point electronic energy. Returns; float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. write_orbitals (str, boolean) – filename || \(\Rightarrow\) 'on' \(\Leftarrow\) || 'off'; (str) Save wfn containing current orbitals to the given file name after each SCF iteration; and retain after PSI4 finishes.; (boolean) Turns writing the orbitals after the converged SCF on/off.; Orbital file will be deleted unless PSI4 is called with -m flag. restart_file (str) – ['file.1, file.32] || ./file || etc.; Existing files to be renamed and copied for calculation restart, e.g. a serialized wfn or module-specific binary data. name; calls method. efp; effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. hf; HF self consistent field (SCF) [manual]. hf3c; HF with dispersion, BSSE, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/energy-1.html:25,energy,energy,25,psi4manual/1.5.0/energy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/energy-1.html,16,['energy'],['energy']
Energy Efficiency,"﻿. Single-Point Energy — energy(). Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Single-Point Energy — energy(). Single-Point Energy — energy()¶. Psi4 Native Energy Methods; Psi4 Native DFT Energy Methods; MRCC Interfaced Energy Methods; CFOUR Interfaced Energy Methods. psi4.energy(name[, molecule, return_wfn, restart_file])[source]; Function to compute the single-point electronic energy. Returns; float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. write_orbitals (str, boolean) – filename || \(\Rightarrow\) 'on' \(\Leftarrow\) || 'off'; (str) Save wfn containing current orbitals to the given file name after each SCF iteration; and retain after PSI4 finishes.; (boolean) Turns writing the orbitals after the converged SCF on/off.; Orbital file will be deleted unless PSI4 is called with -m flag. restart_file (str) – ['file.1, file.32] || ./file || etc.; Existing files to be renamed and copied for calculation restart, e.g. a serialized wfn or module-specific binary data. name; calls method. efp; effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. hf; HF self consistent field (SCF) [manual]. hf3c; HF with dispersion, BSSE, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/energy.html:25,energy,energy,25,psi4manual/1.6.x/energy.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/energy.html,8,['energy'],['energy']
Energy Efficiency,"﻿. Single-Point Energy — energy(). Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Single-Point Energy — energy(). Single-Point Energy — energy()¶. Psi4 Native Energy Methods; Psi4 Native DFT Energy Methods; MRCC Interfaced Energy Methods; CFOUR Interfaced Energy Methods. psi4.energy(name[, molecule, return_wfn, restart_file])[source]; Function to compute the single-point electronic energy. Returns:; float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. write_orbitals (str, boolean) – filename || \(\Rightarrow\) 'on' \(\Leftarrow\) || 'off'; (str) Save wfn containing current orbitals to the given file name after each SCF iteration; and retain after PSI4 finishes.; (boolean) Turns writing the orbitals after the converged SCF on/off.; Orbital file will be deleted unless PSI4 is called with -m flag. restart_file (str) – ['file.1, file.32] || ./file || etc.; Existing files to be renamed and copied for calculation restart, e.g. a serialized wfn or module-specific binary data. name; calls method. efp; (with LibEFP) effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual] [details]. hf; HF self consistent field (SCF) [manual] [details]. qchf; quadratically-convergent HF. hf3c; HF with dispersion, BSSE, and basis set corrections ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/energy.html:25,energy,energy,25,psi4manual/1.7.x/energy.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/energy.html,8,['energy'],['energy']
Energy Efficiency,"﻿. Single-Point Energy — energy(). Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Single-Point Energy — energy(). Single-Point Energy — energy()¶. Psi4 Native Energy Methods; Psi4 Native DFT Energy Methods; MRCC Interfaced Energy Methods; CFOUR Interfaced Energy Methods. psi4.energy(name[, molecule, return_wfn, restart_file])[source]; Function to compute the single-point electronic energy. Returns:; float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. write_orbitals (str, boolean) – filename || \(\Rightarrow\) 'on' \(\Leftarrow\) || 'off'; (str) Save wfn containing current orbitals to the given file name after each SCF iteration; and retain after PSI4 finishes.; (boolean) Turns writing the orbitals after the converged SCF on/off.; Orbital file will be deleted unless PSI4 is called with -m flag. restart_file (str) – ['file.1, file.32] || ./file || etc.; Existing files to be renamed and copied for calculation restart, e.g. a serialized wfn or module-specific binary data. name; calls method. efp; (with LibEFP) effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual] [details]. hf; HF self consistent field (SCF) [manual] [details]. qchf; quadratically-convergent HF. hf3c; HF with dispersion, BSSE, and basis set correction",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/energy.html:25,energy,energy,25,psi4manual/1.8.x/energy.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/energy.html,8,['energy'],['energy']
Energy Efficiency,"﻿. Single-Point Energy — energy(). Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Single-Point Energy — energy(). Single-Point Energy — energy()¶. Psi4 Native Energy Methods; Psi4 Native DFT Energy Methods; MRCC Interfaced Energy Methods; CFOUR Interfaced Energy Methods. psi4.energy(name[, molecule, return_wfn, restart_file])[source]; Function to compute the single-point electronic energy. Returns:; float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. write_orbitals (str, boolean) – filename || \(\Rightarrow\) 'on' \(\Leftarrow\) || 'off'; (str) Save wfn containing current orbitals to the given file name after each SCF iteration; and retain after PSI4 finishes.; (boolean) Turns writing the orbitals after the converged SCF on/off.; Orbital file will be deleted unless PSI4 is called with -m flag. restart_file (str) – ['file.1, file.32] || ./file || etc.; Existing files to be renamed and copied for calculation restart, e.g. a serialized wfn or module-specific binary data. name; calls method. efp; (with LibEFP) effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual] [details]. hf; HF self consistent field (SCF) [manual] [details]. qchf; quadratically-convergent HF. hf3c; HF with dispersion, BSSE, SRB, and basis set corre",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/energy.html:25,energy,energy,25,psi4manual/1.9.x/energy.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/energy.html,8,['energy'],['energy']
Energy Efficiency,"﻿. Single-Point Energy, energy() — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Psithon Functions: Invoking a Calculation ». Single-Point Energy, energy()¶. Psi4 Native Energy Methods; Psi4 Native DFT Energy Methods; MRCC Interfaced Energy Methods; CFOUR Interfaced Energy Methods. energy(name[, molecule, return_wfn, restart_file])[source]¶; Function to compute the single-point electronic energy. Returns:float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || 'off' ; Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. restart_file (string) – ['file.1, file.32] || ./file || etc.; Binary data files to be renamed for calculation restart. name; calls method. efp; effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. hf; HF self consistent field (SCF) [manual]. dcft; density cumulant functional theory [manual]. mp2; 2nd-order Moller-Plesset perturbation theory (MP2) [manual] [details]. mp3; 3rd-order Moller-Plesset perturbation theory (MP3) [manual] [details]. fno-mp3; MP3 with frozen natural orbitals [manual]. mp2.5; average of MP2 and MP3 [manual] [details]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. fno-mp4(sdq); MP4 (less triples) with frozen natural orbitals [manual]. mp4; full MP4 [manual] [details]. fno-mp4; full MP4 with frozen natural orbitals [manual]. mpn; nth-orde",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/energy-1.html:24,energy,energy,24,psi4manual/1.0.0/energy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/energy-1.html,14,['energy'],['energy']
Energy Efficiency,"﻿. Spectroscopic Constants for Diatomics — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». Spectroscopic Constants for Diatomics¶; Code author: Andrew C. Simmonett. diatomic_anharmonicity(rvals, energies)[source]¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic ; constants. The r values provided must bracket the minimum energy point, or an error will result.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) – The bond lengths (in Angstrom) for which energies are ; provided of length either 5 or 9 but must be the same length as ; the energies array; energies (list) – The energies (Eh) computed at the bond lengths in the rvals list. Returns:(dict) Keys: “re”, “r0”, “we”, “wexe”, “nu”, “ZPVE(harmonic)”, “ZPVE(anharmonic)”, “Be”, “B0”, “ae”, “De”; corresponding to the spectroscopic constants in cm-1. Previous topic; <no title>; Next topic; Function Intercalls; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/diatomic-1.html:409,energy,energy,409,psi4manual/4.0b3/diatomic-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/diatomic-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. Spectroscopic Constants for Diatomics — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoking a Calculation ». Spectroscopic Constants for Diatomics¶; Code author: Andrew C. Simmonett. diatomic_anharmonicity(rvals, energies)[source]¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic ; constants. The r values provided must bracket the minimum energy point, or an error will result.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) – The bond lengths (in Angstrom) for which energies are ; provided of length either 5 or 9 but must be the same length as ; the energies array; energies (list) – The energies (Eh) computed at the bond lengths in the rvals list. Returns:(dict) Keys: “re”, “r0”, “we”, “wexe”, “nu”, “ZPVE(harmonic)”, “ZPVE(anharmonic)”, “Be”, “B0”, “ae”, “De”; corresponding to the spectroscopic constants in cm-1. Previous topic; <no title>; Next topic; Function Intercalls; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/diatomic-1.html:409,energy,energy,409,psi4manual/4.0b4/diatomic-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/diatomic-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. Spectroscopic Constants for Diatomics — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Psithon Functions: Invoking a Calculation ». Spectroscopic Constants for Diatomics¶; Code author: Andrew C. Simmonett. anharmonicity(rvals, energies)[source]¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic; constants. The r values provided must bracket the minimum energy point, or an error will result.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) – The bond lengths (in Angstrom) for which energies are; provided of length either 5 or 9 but must be the same length as; the energies array; energies (list) – The energies (Eh) computed at the bond lengths in the rvals list. Returns:(dict) Keys: “re”, “r0”, “we”, “wexe”, “nu”, “ZPVE(harmonic)”, “ZPVE(anharmonic)”, “Be”, “B0”, “ae”, “De”; corresponding to the spectroscopic constants in cm-1. Previous topic; <no title>; Next topic; Function Intercalls; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/diatomic-1.html:400,energy,energy,400,psi4manual/4.0b5/diatomic-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/diatomic-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. Spectroscopic Constants for Diatomics — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Psithon Functions: Invoking a Calculation ». Spectroscopic Constants for Diatomics¶; Code author: Andrew C. Simmonett. anharmonicity(rvals, energies)[source]¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic; constants. The r values provided must bracket the minimum energy point, or an error will result.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) – The bond lengths (in Angstrom) for which energies are; provided of length either 5 or 9 but must be the same length as; the energies array; energies (list) – The energies (Eh) computed at the bond lengths in the rvals list. Returns:(dict) Keys: “re”, “r0”, “we”, “wexe”, “nu”, “ZPVE(harmonic)”, “ZPVE(anharmonic)”, “Be”, “B0”, “ae”, “De”; corresponding to the spectroscopic constants in cm-1. Previous topic; <no title>; Next topic; Function Intercalls. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Psithon Functions: Invoking a Calculation ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/diatomic-1.html:407,energy,energy,407,psi4manual/1.0.0/diatomic-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/diatomic-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. Spectroscopic Constants for Diatomics. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Spectroscopic Constants for Diatomics. Spectroscopic Constants for Diatomics¶; Code author: Andrew C. Simmonett. psi4.driver.diatomic.anharmonicity(rvals, energies, plot_fit='', mol=None)[source]¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using a weighted least squares approach; (c.f. https://doi.org/10.1063/1.4862157, particularly eqn. 7), locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic; constants. Any number of points greater than 4 may be provided, and they should bracket the minimum.; The data need not be evenly spaced, and can be provided in any order. The data are weighted such that; those closest to the minimum have highest impact.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:. rvals (List[float]) – The bond lengths (in Angstrom) for which energies are; provided, of length at least 5 and equal to the length of the energies array; energies (List[float]) – The energies (Eh) computed at the bond lengths in the rvals list; plot_fit (str) – A string describing where to save a plot of the harmonic and anharmonic fits, the; inputted data points, re, r0 and the first few energy levels, if matplotlib; is available. Set to ‘screen’ to generate an interactive plot on the screen instead. If a filename is; provided, the image type is determined by the extension; see matplotlib for supported file types. Return type:; Dict[str, Any]. Returns:; (dict) Keys: “re”, “r0”, “we”, “wexe”, “nu”, “ZPVE(harmonic)”, “ZPVE(anharmonic)”, “Be”, “B0”, “ae”, “De”; corresponding to the spectroscopic constants in cm-1. table of contents. Spectroscopic Constants for Diatomics; anharmonicity(). «; hide menu. menu; sidebar; »; . Navigation. Ind",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/diatomic.html:447,energy,energy,447,psi4manual/master/diatomic.html,https://psicode.org,https://psicode.org/psi4manual/master/diatomic.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Spectroscopic Constants for Diatomics. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Spectroscopic Constants for Diatomics¶; Code author: Andrew C. Simmonett. psi4.driver.diatomic.anharmonicity(rvals, energies, plot_fit)[source]¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using a weighted least squares approach; (c.f. http://dx.doi.org/10.1063/1.4862157, particularly eqn. 7), locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic; constants. Any number of points greater than 4 may be provided, and they should bracket the minimum.; The data need not be evenly spaced, and can be provided in any order. The data are weighted such that; those closest to the minimum have highest impact.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) – The bond lengths (in Angstrom) for which energies are; provided, of length at least 5 and equal to the length of the energies array; energies (list) – The energies (Eh) computed at the bond lengths in the rvals list; plot_fit (string) – A string describing where to save a plot of the harmonic and anharmonic fits, the; inputted data points, re, r0 and the first few energy levels, if matplotlib; is available. Set to ‘screen’ to generate an interactive plot on the screen instead. If a filename is; provided, the image type is determined by the extension; see matplotlib for supported file types. Returns:(dict) Keys: “re”, “r0”, “we”, “wexe”, “nu”, “ZPVE(harmonic)”, “ZPVE(anharmonic)”, “Be”, “B0”, “ae”, “De”; corresponding to the spectroscopic constants in cm-1. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/diatomic-1.html:386,energy,energy,386,psi4manual/1.1.0/diatomic-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/diatomic-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Spectroscopic Constants for Diatomics. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. Spectroscopic Constants for Diatomics¶; Code author: Andrew C. Simmonett. psi4.driver.diatomic.anharmonicity(rvals, energies, plot_fit)[source]¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using a weighted least squares approach; (c.f. http://dx.doi.org/10.1063/1.4862157, particularly eqn. 7), locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic; constants. Any number of points greater than 4 may be provided, and they should bracket the minimum.; The data need not be evenly spaced, and can be provided in any order. The data are weighted such that; those closest to the minimum have highest impact.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) – The bond lengths (in Angstrom) for which energies are; provided, of length at least 5 and equal to the length of the energies array; energies (list) – The energies (Eh) computed at the bond lengths in the rvals list; plot_fit (string) – A string describing where to save a plot of the harmonic and anharmonic fits, the; inputted data points, re, r0 and the first few energy levels, if matplotlib; is available. Set to ‘screen’ to generate an interactive plot on the screen instead. If a filename is; provided, the image type is determined by the extension; see matplotlib for supported file types. Returns:(dict) Keys: “re”, “r0”, “we”, “wexe”, “nu”, “ZPVE(harmonic)”, “ZPVE(anharmonic)”, “Be”, “B0”, “ae”, “De”; corresponding to the spectroscopic constants in cm-1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/diatomic-1.html:388,energy,energy,388,psi4manual/1.2.1/diatomic-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/diatomic-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Spectroscopic Constants for Diatomics. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. Spectroscopic Constants for Diatomics¶; Code author: Andrew C. Simmonett. psi4.driver.diatomic.anharmonicity(rvals, energies, plot_fit)[source]¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using a weighted least squares approach; (c.f. http://dx.doi.org/10.1063/1.4862157, particularly eqn. 7), locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic; constants. Any number of points greater than 4 may be provided, and they should bracket the minimum.; The data need not be evenly spaced, and can be provided in any order. The data are weighted such that; those closest to the minimum have highest impact.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:; rvals (list) – The bond lengths (in Angstrom) for which energies are; provided, of length at least 5 and equal to the length of the energies array; energies (list) – The energies (Eh) computed at the bond lengths in the rvals list; plot_fit (string) – A string describing where to save a plot of the harmonic and anharmonic fits, the; inputted data points, re, r0 and the first few energy levels, if matplotlib; is available. Set to ‘screen’ to generate an interactive plot on the screen instead. If a filename is; provided, the image type is determined by the extension; see matplotlib for supported file types. Returns:(dict) Keys: “re”, “r0”, “we”, “wexe”, “nu”, “ZPVE(harmonic)”, “ZPVE(anharmonic)”, “Be”, “B0”, “ae”, “De”; corresponding to the spectroscopic constants in cm-1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. Psithon Functions: Invoking a Calculation. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 0",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/diatomic-1.html:388,energy,energy,388,psi4manual/1.3.2/diatomic-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/diatomic-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Spectroscopic Constants for Diatomics. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Spectroscopic Constants for Diatomics. Spectroscopic Constants for Diatomics¶; Code author: Andrew C. Simmonett. psi4.driver.diatomic.anharmonicity(rvals, energies, plot_fit='', mol=None)[source]¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using a weighted least squares approach; (c.f. https://doi.org/10.1063/1.4862157, particularly eqn. 7), locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic; constants. Any number of points greater than 4 may be provided, and they should bracket the minimum.; The data need not be evenly spaced, and can be provided in any order. The data are weighted such that; those closest to the minimum have highest impact.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters. rvals (List) – The bond lengths (in Angstrom) for which energies are; provided, of length at least 5 and equal to the length of the energies array; energies (List) – The energies (Eh) computed at the bond lengths in the rvals list; plot_fit (str) – A string describing where to save a plot of the harmonic and anharmonic fits, the; inputted data points, re, r0 and the first few energy levels, if matplotlib; is available. Set to ‘screen’ to generate an interactive plot on the screen instead. If a filename is; provided, the image type is determined by the extension; see matplotlib for supported file types. Return type; Dict. Returns; (dict) Keys: “re”, “r0”, “we”, “wexe”, “nu”, “ZPVE(harmonic)”, “ZPVE(anharmonic)”, “Be”, “B0”, “ae”, “De”; corresponding to the spectroscopic constants in cm-1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Spectroscopic C",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/diatomic-1.html:438,energy,energy,438,psi4manual/1.4.0/diatomic-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/diatomic-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Spectroscopic Constants for Diatomics. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Spectroscopic Constants for Diatomics. Spectroscopic Constants for Diatomics¶; Code author: Andrew C. Simmonett. psi4.driver.diatomic.anharmonicity(rvals, energies, plot_fit='', mol=None)[source]¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using a weighted least squares approach; (c.f. https://doi.org/10.1063/1.4862157, particularly eqn. 7), locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic; constants. Any number of points greater than 4 may be provided, and they should bracket the minimum.; The data need not be evenly spaced, and can be provided in any order. The data are weighted such that; those closest to the minimum have highest impact.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters. rvals (List) – The bond lengths (in Angstrom) for which energies are; provided, of length at least 5 and equal to the length of the energies array; energies (List) – The energies (Eh) computed at the bond lengths in the rvals list; plot_fit (str) – A string describing where to save a plot of the harmonic and anharmonic fits, the; inputted data points, re, r0 and the first few energy levels, if matplotlib; is available. Set to ‘screen’ to generate an interactive plot on the screen instead. If a filename is; provided, the image type is determined by the extension; see matplotlib for supported file types. Return type; Dict. Returns; (dict) Keys: “re”, “r0”, “we”, “wexe”, “nu”, “ZPVE(harmonic)”, “ZPVE(anharmonic)”, “Be”, “B0”, “ae”, “De”; corresponding to the spectroscopic constants in cm-1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Spectroscopic C",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/diatomic-1.html:438,energy,energy,438,psi4manual/1.5.0/diatomic-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/diatomic-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. Spectroscopic Constants for Diatomics. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Spectroscopic Constants for Diatomics. Spectroscopic Constants for Diatomics¶; Code author: Andrew C. Simmonett. psi4.driver.diatomic.anharmonicity(rvals, energies, plot_fit='', mol=None)[source]¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using a weighted least squares approach; (c.f. https://doi.org/10.1063/1.4862157, particularly eqn. 7), locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic; constants. Any number of points greater than 4 may be provided, and they should bracket the minimum.; The data need not be evenly spaced, and can be provided in any order. The data are weighted such that; those closest to the minimum have highest impact.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters. rvals (List) – The bond lengths (in Angstrom) for which energies are; provided, of length at least 5 and equal to the length of the energies array; energies (List) – The energies (Eh) computed at the bond lengths in the rvals list; plot_fit (str) – A string describing where to save a plot of the harmonic and anharmonic fits, the; inputted data points, re, r0 and the first few energy levels, if matplotlib; is available. Set to ‘screen’ to generate an interactive plot on the screen instead. If a filename is; provided, the image type is determined by the extension; see matplotlib for supported file types. Return type; Dict. Returns; (dict) Keys: “re”, “r0”, “we”, “wexe”, “nu”, “ZPVE(harmonic)”, “ZPVE(anharmonic)”, “Be”, “B0”, “ae”, “De”; corresponding to the spectroscopic constants in cm-1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Spectroscopic C",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/diatomic.html:438,energy,energy,438,psi4manual/1.6.x/diatomic.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/diatomic.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Spectroscopic Constants for Diatomics. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Spectroscopic Constants for Diatomics. Spectroscopic Constants for Diatomics¶; Code author: Andrew C. Simmonett. psi4.driver.diatomic.anharmonicity(rvals, energies, plot_fit='', mol=None)[source]¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using a weighted least squares approach; (c.f. https://doi.org/10.1063/1.4862157, particularly eqn. 7), locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic; constants. Any number of points greater than 4 may be provided, and they should bracket the minimum.; The data need not be evenly spaced, and can be provided in any order. The data are weighted such that; those closest to the minimum have highest impact.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:. rvals (List[float]) – The bond lengths (in Angstrom) for which energies are; provided, of length at least 5 and equal to the length of the energies array; energies (List[float]) – The energies (Eh) computed at the bond lengths in the rvals list; plot_fit (str) – A string describing where to save a plot of the harmonic and anharmonic fits, the; inputted data points, re, r0 and the first few energy levels, if matplotlib; is available. Set to ‘screen’ to generate an interactive plot on the screen instead. If a filename is; provided, the image type is determined by the extension; see matplotlib for supported file types. Return type:; Dict[str, Any]. Returns:; (dict) Keys: “re”, “r0”, “we”, “wexe”, “nu”, “ZPVE(harmonic)”, “ZPVE(anharmonic)”, “Be”, “B0”, “ae”, “De”; corresponding to the spectroscopic constants in cm-1. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a C",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/diatomic.html:438,energy,energy,438,psi4manual/1.7.x/diatomic.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/diatomic.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Spectroscopic Constants for Diatomics. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Spectroscopic Constants for Diatomics. Spectroscopic Constants for Diatomics¶; Code author: Andrew C. Simmonett. psi4.driver.diatomic.anharmonicity(rvals, energies, plot_fit='', mol=None)[source]¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using a weighted least squares approach; (c.f. https://doi.org/10.1063/1.4862157, particularly eqn. 7), locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic; constants. Any number of points greater than 4 may be provided, and they should bracket the minimum.; The data need not be evenly spaced, and can be provided in any order. The data are weighted such that; those closest to the minimum have highest impact.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:. rvals (List[float]) – The bond lengths (in Angstrom) for which energies are; provided, of length at least 5 and equal to the length of the energies array; energies (List[float]) – The energies (Eh) computed at the bond lengths in the rvals list; plot_fit (str) – A string describing where to save a plot of the harmonic and anharmonic fits, the; inputted data points, re, r0 and the first few energy levels, if matplotlib; is available. Set to ‘screen’ to generate an interactive plot on the screen instead. If a filename is; provided, the image type is determined by the extension; see matplotlib for supported file types. Return type:; Dict[str, Any]. Returns:; (dict) Keys: “re”, “r0”, “we”, “wexe”, “nu”, “ZPVE(harmonic)”, “ZPVE(anharmonic)”, “Be”, “B0”, “ae”, “De”; corresponding to the spectroscopic constants in cm-1. table of contents. Spectroscopic Constants for Diatomics; anharmonicity(). «; hide menu. menu; sidebar; »; . Navigation. Index. mod",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/diatomic.html:440,energy,energy,440,psi4manual/1.8.x/diatomic.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/diatomic.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Spectroscopic Constants for Diatomics. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Spectroscopic Constants for Diatomics. Spectroscopic Constants for Diatomics¶; Code author: Andrew C. Simmonett. psi4.driver.diatomic.anharmonicity(rvals, energies, plot_fit='', mol=None)[source]¶; Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using a weighted least squares approach; (c.f. https://doi.org/10.1063/1.4862157, particularly eqn. 7), locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic; constants. Any number of points greater than 4 may be provided, and they should bracket the minimum.; The data need not be evenly spaced, and can be provided in any order. The data are weighted such that; those closest to the minimum have highest impact.; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. Parameters:. rvals (List[float]) – The bond lengths (in Angstrom) for which energies are; provided, of length at least 5 and equal to the length of the energies array; energies (List[float]) – The energies (Eh) computed at the bond lengths in the rvals list; plot_fit (str) – A string describing where to save a plot of the harmonic and anharmonic fits, the; inputted data points, re, r0 and the first few energy levels, if matplotlib; is available. Set to ‘screen’ to generate an interactive plot on the screen instead. If a filename is; provided, the image type is determined by the extension; see matplotlib for supported file types. Return type:; Dict[str, Any]. Returns:; (dict) Keys: “re”, “r0”, “we”, “wexe”, “nu”, “ZPVE(harmonic)”, “ZPVE(anharmonic)”, “Be”, “B0”, “ae”, “De”; corresponding to the spectroscopic constants in cm-1. table of contents. Spectroscopic Constants for Diatomics; anharmonicity(). «; hide menu. menu; sidebar; »; . Navigation. Index. mod",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/diatomic.html:440,energy,energy,440,psi4manual/1.9.x/diatomic.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/diatomic.html,2,['energy'],['energy']
Energy Efficiency,"﻿. SuperFunctional. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; SuperFunctional. SuperFunctional¶. class psi4.core.SuperFunctional¶; Bases: pybind11_object; docstring; Methods Summary. XC_build(name, unpolarized[, tweak]); Builds a SuperFunctional from a XC string. add_c_functional(self, arg0); Add a correlation Functional. add_x_functional(self, arg0); Add a exchange Functional. allocate(self); Allocates the vectors, should be called after ansatz or npoint changes. ansatz(self); SuperFunctional rung. blank(); Initialize a blank SuperFunctional. c_alpha(self); Amount of MP2 correlation. c_functional(self, arg0); Returns the desired C Functional. c_functionals(self); Returns all C Functionals. c_omega(self); Range-seperated correlation parameter. c_os_alpha(self); Amount of SS MP2 correlation. c_ss_alpha(self); Amount of OS MP2 correlation. citation(self); SuperFunctional citation. compute_functional(self, vals[, npoints, ...]); Computes the SuperFunctional. density_tolerance(self); Density threshold for LibXC. deriv(self); Maximum derivative to compute. description(self); The description of the SuperFunctional. grac_alpha(self); GRAC Alpha. grac_beta(self); GRAC Beta. grac_shift(self); Shift of the bulk potenital. is_c_hybrid(self); Requires MP2 correlation?. is_c_lrc(self); Contains range-seperated correlation?. is_c_scs_hybrid(self); Requires SCS-MP2 correlation?. is_gga(self); Is this a GGA?. is_libxc_func(self); A full SuperFunctional definition from LibXC. is_meta(self); Is this a MGGA?. is_x_hybrid(self); Requires exact exchange?. is_x_lrc(self); Contains range-seperated exchange?. max_points(self); Maximum number of grid points per block. name(self); The name of the SuperFunctional. needs_grac(self); Does this functional need GRAC. needs_vv10(self); Does this functional need VV10 dispersion. needs_xc(self); Does this functional need XC quantities. print_density_threshold(self); Queries the LibX",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.SuperFunctional.html:450,allocate,allocate,450,psi4manual/master/api/psi4.core.SuperFunctional.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.SuperFunctional.html,3,"['Allocate', 'allocate']","['Allocates', 'allocate']"
Energy Efficiency,"﻿. SuperFunctional. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. SuperFunctional¶. class psi4.core.SuperFunctional¶; Bases: pybind11_builtins.pybind11_object; docstring; Methods Summary. XC_build(arg0, arg1); Builds a SuperFunctional from a XC string. add_c_functional(self, arg0); Add a correlation Functional. add_x_functional(self, arg0); Add a exchange Functional. allocate(self); Allocates the vectors, should be called after ansatz or npoint changes. ansatz(self); SuperFunctional rung. blank(); Initialize a blank SuperFunctional. c_alpha(self); Amount of MP2 correlation. c_functional(self, arg0); Returns the desired C Functional. c_functionals(self); Returns all C Functionals. c_omega(self); Range-seperated correlation parameter. c_os_alpha(self); Amount of SS MP2 correlation. c_ss_alpha(self); Amount of OS MP2 correlation. citation(self); SuperFunctional citation. compute_functional(self, arg0, …); Computes the SuperFunctional. deriv(self); Maximum derivative to compute. description(self); The description of the SuperFunctional. grac_alpha(self); GRAC Alpha. grac_beta(self); GRAC Beta. grac_shift(self); Shift of the bulk potenital. is_c_hybrid(self); Requires MP2 correlation?. is_c_lrc(self); Contains range-seperated correlation?. is_c_scs_hybrid(self); Requires SCS-MP2 correlation?. is_gga(self); Is this a GGA?. is_libxc_func(self); A full SuperFunctional definition from LibXC. is_meta(self); Is this a MGGA?. is_x_hybrid(self); Requires exact exchange?. is_x_lrc(self); Contains range-seperated exchange?. max_points(self); Maximum number of grid points per block. name(self); The name of the SuperFunctional. needs_grac(self); Does this functional need GRAC. needs_vv10(self); Does this functional need VV10 dispersion. needs_xc(self); Does this functional need XC quantities. print_detail(self, arg0); Prints all SuperFunctional information. print_out(self); Prints out functional details. set_c_alpha(self, arg0",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.superfunctional.html:428,allocate,allocate,428,psi4manual/1.2.1/api/psi4.core.superfunctional.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.superfunctional.html,1,['allocate'],['allocate']
Energy Efficiency,"﻿. SuperFunctional. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. SuperFunctional¶. class psi4.core.SuperFunctional¶; Bases: pybind11_builtins.pybind11_object; docstring; Methods Summary. XC_build(arg0, arg1); Builds a SuperFunctional from a XC string. add_c_functional(self, arg0); Add a correlation Functional. add_x_functional(self, arg0); Add a exchange Functional. allocate(self); Allocates the vectors, should be called after ansatz or npoint changes. ansatz(self); SuperFunctional rung. blank(); Initialize a blank SuperFunctional. c_alpha(self); Amount of MP2 correlation. c_functional(self, arg0); Returns the desired C Functional. c_functionals(self); Returns all C Functionals. c_omega(self); Range-seperated correlation parameter. c_os_alpha(self); Amount of SS MP2 correlation. c_ss_alpha(self); Amount of OS MP2 correlation. citation(self); SuperFunctional citation. compute_functional(self, arg0, …); Computes the SuperFunctional. deriv(self); Maximum derivative to compute. description(self); The description of the SuperFunctional. grac_alpha(self); GRAC Alpha. grac_beta(self); GRAC Beta. grac_shift(self); Shift of the bulk potenital. is_c_hybrid(self); Requires MP2 correlation?. is_c_lrc(self); Contains range-seperated correlation?. is_c_scs_hybrid(self); Requires SCS-MP2 correlation?. is_gga(self); Is this a GGA?. is_libxc_func(self); A full SuperFunctional definition from LibXC. is_meta(self); Is this a MGGA?. is_x_hybrid(self); Requires exact exchange?. is_x_lrc(self); Contains range-seperated exchange?. max_points(self); Maximum number of grid points per block. name(self); The name of the SuperFunctional. needs_grac(self); Does this functional need GRAC. needs_vv10(self); Does this functional need VV10 dispersion. needs_xc(self); Does this functional need XC quantities. print_detail(self, arg0); Prints all SuperFunctional information. print_out(self); Prints out functional details. set_c_alpha(self, arg0",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.superfunctional.html:428,allocate,allocate,428,psi4manual/1.3.2/api/psi4.core.superfunctional.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.superfunctional.html,1,['allocate'],['allocate']
Energy Efficiency,"﻿. SuperFunctional. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; SuperFunctional. SuperFunctional¶. class psi4.core.SuperFunctional¶; Bases: pybind11_builtins.pybind11_object; docstring; Methods Summary. XC_build(arg0, arg1); Builds a SuperFunctional from a XC string. add_c_functional(self, arg0); Add a correlation Functional. add_x_functional(self, arg0); Add a exchange Functional. allocate(self); Allocates the vectors, should be called after ansatz or npoint changes. ansatz(self); SuperFunctional rung. blank(); Initialize a blank SuperFunctional. c_alpha(self); Amount of MP2 correlation. c_functional(self, arg0); Returns the desired C Functional. c_functionals(self); Returns all C Functionals. c_omega(self); Range-seperated correlation parameter. c_os_alpha(self); Amount of SS MP2 correlation. c_ss_alpha(self); Amount of OS MP2 correlation. citation(self); SuperFunctional citation. compute_functional(self, arg0, …); Computes the SuperFunctional. density_tolerance(self); Density threshold for LibXC. deriv(self); Maximum derivative to compute. description(self); The description of the SuperFunctional. grac_alpha(self); GRAC Alpha. grac_beta(self); GRAC Beta. grac_shift(self); Shift of the bulk potenital. is_c_hybrid(self); Requires MP2 correlation?. is_c_lrc(self); Contains range-seperated correlation?. is_c_scs_hybrid(self); Requires SCS-MP2 correlation?. is_gga(self); Is this a GGA?. is_libxc_func(self); A full SuperFunctional definition from LibXC. is_meta(self); Is this a MGGA?. is_x_hybrid(self); Requires exact exchange?. is_x_lrc(self); Contains range-seperated exchange?. max_points(self); Maximum number of grid points per block. name(self); The name of the SuperFunctional. needs_grac(self); Does this functional need GRAC. needs_vv10(self); Does this functional need VV10 dispersion. needs_xc(self); Does this functional need XC quantities. print_density_threshold(self); Queries the LibXCFunctionals for the",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.superfunctional.html:443,allocate,allocate,443,psi4manual/1.4.0/api/psi4.core.superfunctional.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.superfunctional.html,3,"['Allocate', 'allocate']","['Allocates', 'allocate']"
Energy Efficiency,"﻿. SuperFunctional. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; SuperFunctional. SuperFunctional¶. class psi4.core.SuperFunctional¶; Bases: pybind11_builtins.pybind11_object; docstring; Methods Summary. XC_build(arg0, arg1); Builds a SuperFunctional from a XC string. add_c_functional(self, arg0); Add a correlation Functional. add_x_functional(self, arg0); Add a exchange Functional. allocate(self); Allocates the vectors, should be called after ansatz or npoint changes. ansatz(self); SuperFunctional rung. blank(); Initialize a blank SuperFunctional. c_alpha(self); Amount of MP2 correlation. c_functional(self, arg0); Returns the desired C Functional. c_functionals(self); Returns all C Functionals. c_omega(self); Range-seperated correlation parameter. c_os_alpha(self); Amount of SS MP2 correlation. c_ss_alpha(self); Amount of OS MP2 correlation. citation(self); SuperFunctional citation. compute_functional(self, arg0, arg1); Computes the SuperFunctional. density_tolerance(self); Density threshold for LibXC. deriv(self); Maximum derivative to compute. description(self); The description of the SuperFunctional. grac_alpha(self); GRAC Alpha. grac_beta(self); GRAC Beta. grac_shift(self); Shift of the bulk potenital. is_c_hybrid(self); Requires MP2 correlation?. is_c_lrc(self); Contains range-seperated correlation?. is_c_scs_hybrid(self); Requires SCS-MP2 correlation?. is_gga(self); Is this a GGA?. is_libxc_func(self); A full SuperFunctional definition from LibXC. is_meta(self); Is this a MGGA?. is_x_hybrid(self); Requires exact exchange?. is_x_lrc(self); Contains range-seperated exchange?. max_points(self); Maximum number of grid points per block. name(self); The name of the SuperFunctional. needs_grac(self); Does this functional need GRAC. needs_vv10(self); Does this functional need VV10 dispersion. needs_xc(self); Does this functional need XC quantities. print_density_threshold(self); Queries the LibXCFunctionals for ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.superfunctional.html:443,allocate,allocate,443,psi4manual/1.5.0/api/psi4.core.superfunctional.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.superfunctional.html,3,"['Allocate', 'allocate']","['Allocates', 'allocate']"
Energy Efficiency,"﻿. SuperFunctional. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; SuperFunctional. SuperFunctional¶. class psi4.core.SuperFunctional¶; Bases: pybind11_builtins.pybind11_object; docstring; Methods Summary. XC_build(arg0, arg1); Builds a SuperFunctional from a XC string. add_c_functional(self, arg0); Add a correlation Functional. add_x_functional(self, arg0); Add a exchange Functional. allocate(self); Allocates the vectors, should be called after ansatz or npoint changes. ansatz(self); SuperFunctional rung. blank(); Initialize a blank SuperFunctional. c_alpha(self); Amount of MP2 correlation. c_functional(self, arg0); Returns the desired C Functional. c_functionals(self); Returns all C Functionals. c_omega(self); Range-seperated correlation parameter. c_os_alpha(self); Amount of SS MP2 correlation. c_ss_alpha(self); Amount of OS MP2 correlation. citation(self); SuperFunctional citation. compute_functional(self, arg0, arg1); Computes the SuperFunctional. density_tolerance(self); Density threshold for LibXC. deriv(self); Maximum derivative to compute. description(self); The description of the SuperFunctional. grac_alpha(self); GRAC Alpha. grac_beta(self); GRAC Beta. grac_shift(self); Shift of the bulk potenital. is_c_hybrid(self); Requires MP2 correlation?. is_c_lrc(self); Contains range-seperated correlation?. is_c_scs_hybrid(self); Requires SCS-MP2 correlation?. is_gga(self); Is this a GGA?. is_libxc_func(self); A full SuperFunctional definition from LibXC. is_meta(self); Is this a MGGA?. is_x_hybrid(self); Requires exact exchange?. is_x_lrc(self); Contains range-seperated exchange?. max_points(self); Maximum number of grid points per block. name(self); The name of the SuperFunctional. needs_grac(self); Does this functional need GRAC. needs_vv10(self); Does this functional need VV10 dispersion. needs_xc(self); Does this functional need XC quantities. print_density_threshold(self); Queries the LibXCFunctionals for ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.SuperFunctional.html:443,allocate,allocate,443,psi4manual/1.6.x/api/psi4.core.SuperFunctional.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.SuperFunctional.html,3,"['Allocate', 'allocate']","['Allocates', 'allocate']"
Energy Efficiency,"﻿. SuperFunctional. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; SuperFunctional. SuperFunctional¶. class psi4.core.SuperFunctional¶; Bases: pybind11_object; docstring; Methods Summary. XC_build(arg0, arg1); Builds a SuperFunctional from a XC string. add_c_functional(self, arg0); Add a correlation Functional. add_x_functional(self, arg0); Add a exchange Functional. allocate(self); Allocates the vectors, should be called after ansatz or npoint changes. ansatz(self); SuperFunctional rung. blank(); Initialize a blank SuperFunctional. c_alpha(self); Amount of MP2 correlation. c_functional(self, arg0); Returns the desired C Functional. c_functionals(self); Returns all C Functionals. c_omega(self); Range-seperated correlation parameter. c_os_alpha(self); Amount of SS MP2 correlation. c_ss_alpha(self); Amount of OS MP2 correlation. citation(self); SuperFunctional citation. compute_functional(self, arg0, arg1); Computes the SuperFunctional. density_tolerance(self); Density threshold for LibXC. deriv(self); Maximum derivative to compute. description(self); The description of the SuperFunctional. grac_alpha(self); GRAC Alpha. grac_beta(self); GRAC Beta. grac_shift(self); Shift of the bulk potenital. is_c_hybrid(self); Requires MP2 correlation?. is_c_lrc(self); Contains range-seperated correlation?. is_c_scs_hybrid(self); Requires SCS-MP2 correlation?. is_gga(self); Is this a GGA?. is_libxc_func(self); A full SuperFunctional definition from LibXC. is_meta(self); Is this a MGGA?. is_x_hybrid(self); Requires exact exchange?. is_x_lrc(self); Contains range-seperated exchange?. max_points(self); Maximum number of grid points per block. name(self); The name of the SuperFunctional. needs_grac(self); Does this functional need GRAC. needs_vv10(self); Does this functional need VV10 dispersion. needs_xc(self); Does this functional need XC quantities. print_density_threshold(self); Queries the LibXCFunctionals for their density thre",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.SuperFunctional.html:425,allocate,allocate,425,psi4manual/1.7.x/api/psi4.core.SuperFunctional.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.SuperFunctional.html,3,"['Allocate', 'allocate']","['Allocates', 'allocate']"
Energy Efficiency,"﻿. SuperFunctional. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; SuperFunctional. SuperFunctional¶. class psi4.core.SuperFunctional¶; Bases: pybind11_object; docstring; Methods Summary. XC_build(arg0, arg1); Builds a SuperFunctional from a XC string. add_c_functional(self, arg0); Add a correlation Functional. add_x_functional(self, arg0); Add a exchange Functional. allocate(self); Allocates the vectors, should be called after ansatz or npoint changes. ansatz(self); SuperFunctional rung. blank(); Initialize a blank SuperFunctional. c_alpha(self); Amount of MP2 correlation. c_functional(self, arg0); Returns the desired C Functional. c_functionals(self); Returns all C Functionals. c_omega(self); Range-seperated correlation parameter. c_os_alpha(self); Amount of SS MP2 correlation. c_ss_alpha(self); Amount of OS MP2 correlation. citation(self); SuperFunctional citation. compute_functional(self, vals[, npoints, ...]); Computes the SuperFunctional. density_tolerance(self); Density threshold for LibXC. deriv(self); Maximum derivative to compute. description(self); The description of the SuperFunctional. grac_alpha(self); GRAC Alpha. grac_beta(self); GRAC Beta. grac_shift(self); Shift of the bulk potenital. is_c_hybrid(self); Requires MP2 correlation?. is_c_lrc(self); Contains range-seperated correlation?. is_c_scs_hybrid(self); Requires SCS-MP2 correlation?. is_gga(self); Is this a GGA?. is_libxc_func(self); A full SuperFunctional definition from LibXC. is_meta(self); Is this a MGGA?. is_x_hybrid(self); Requires exact exchange?. is_x_lrc(self); Contains range-seperated exchange?. max_points(self); Maximum number of grid points per block. name(self); The name of the SuperFunctional. needs_grac(self); Does this functional need GRAC. needs_vv10(self); Does this functional need VV10 dispersion. needs_xc(self); Does this functional need XC quantities. print_density_threshold(self); Queries the LibXCFunctionals for their ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.SuperFunctional.html:427,allocate,allocate,427,psi4manual/1.8.x/api/psi4.core.SuperFunctional.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.SuperFunctional.html,3,"['Allocate', 'allocate']","['Allocates', 'allocate']"
Energy Efficiency,"﻿. SuperFunctional. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; SuperFunctional. SuperFunctional¶. class psi4.core.SuperFunctional¶; Bases: pybind11_object; docstring; Methods Summary. XC_build(name, unpolarized[, tweak]); Builds a SuperFunctional from a XC string. add_c_functional(self, arg0); Add a correlation Functional. add_x_functional(self, arg0); Add a exchange Functional. allocate(self); Allocates the vectors, should be called after ansatz or npoint changes. ansatz(self); SuperFunctional rung. blank(); Initialize a blank SuperFunctional. c_alpha(self); Amount of MP2 correlation. c_functional(self, arg0); Returns the desired C Functional. c_functionals(self); Returns all C Functionals. c_omega(self); Range-seperated correlation parameter. c_os_alpha(self); Amount of SS MP2 correlation. c_ss_alpha(self); Amount of OS MP2 correlation. citation(self); SuperFunctional citation. compute_functional(self, vals[, npoints, ...]); Computes the SuperFunctional. density_tolerance(self); Density threshold for LibXC. deriv(self); Maximum derivative to compute. description(self); The description of the SuperFunctional. grac_alpha(self); GRAC Alpha. grac_beta(self); GRAC Beta. grac_shift(self); Shift of the bulk potenital. is_c_hybrid(self); Requires MP2 correlation?. is_c_lrc(self); Contains range-seperated correlation?. is_c_scs_hybrid(self); Requires SCS-MP2 correlation?. is_gga(self); Is this a GGA?. is_libxc_func(self); A full SuperFunctional definition from LibXC. is_meta(self); Is this a MGGA?. is_x_hybrid(self); Requires exact exchange?. is_x_lrc(self); Contains range-seperated exchange?. max_points(self); Maximum number of grid points per block. name(self); The name of the SuperFunctional. needs_grac(self); Does this functional need GRAC. needs_vv10(self); Does this functional need VV10 dispersion. needs_xc(self); Does this functional need XC quantities. print_density_threshold(self); Queries the LibXCFuncti",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.SuperFunctional.html:443,allocate,allocate,443,psi4manual/1.9.x/api/psi4.core.SuperFunctional.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.SuperFunctional.html,3,"['Allocate', 'allocate']","['Allocates', 'allocate']"
Energy Efficiency,"﻿. Symmetry-Adapted Perturbation Theory — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Theoretical Methods: SCF to FCI ». Symmetry-Adapted Perturbation Theory¶; Code author: Edward G. Hohenstein; Section author: Edward G. Hohenstein; Module: Keywords, PSI Variables, LIBSAPT_SOLVER; Symmetry-adapted perturbation theory (SAPT) provides a means of directly; computing the noncovalent interaction between two molecules, that is, the; interaction energy is determined without computing the total energy of the; monomers or dimer. In addition, SAPT provides a decomposition of the; interaction energy into physically meaningful components: i.e.,; electrostatic, exchange, induction, and dispersion terms. In SAPT, the; Hamiltonian of the dimer is partitioned into contributions from each; monomer and the interaction. Here, the Hamiltonian is written as a sum of the usual monomer Fock; operators, , the fluctuation potential of each monomer, , and the; interaction potential, . The monomer Fock operators, , are; treated as the zeroth-order Hamiltonian and the interaction energy is; evaluated through a perturbative expansion of , , and .; Through first-order in , electrostatic and exchange interactions are; included; induction and dispersion first appear at second-order in . For; a complete description of SAPT, the reader is referred to the excellent; review by Jeziorski, Moszynski, and Szalewicz [Jeziorski:1994:1887].; Several truncations of the SAPT expansion are available in the SAPT; module of PSI4. The simplest truncation of SAPT is denoted SAPT0; and defined in Eq. (1). (1); In this notation, defines the order in and in ; the; subscript, , indicates that orbital relaxation effects are included. (2). (3). (4). (5); A thorough analysis of the performance of these truncations of SAPT can be; found in a review by Hohenstein and Sherrill [Hohenstein:2012:WIREs].; The SAPT module relies entirely on the density-fitting approximation; of ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/sapt-1.html:342,adapt,adapted,342,psi4manual/4.0b2/sapt-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/sapt-1.html,8,"['adapt', 'energy']","['adapted', 'energy']"
Energy Efficiency,"﻿. TAU_SQUARED — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DCFT ». TAU_SQUARED¶. Controls whether to compute the DCFT energy with the Tau^2 correction to Tau. Type: boolean; Default: false. Previous topic; SCF_MAXITER; Next topic; TIKHONOW_OMEGA; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/dcft__tau_squared-1.html:207,energy,energy,207,psi4manual/4.0b2/autodir_options_c/dcft__tau_squared-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/dcft__tau_squared-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. TAU_SQUARED — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DCFT ». TAU_SQUARED¶. Controls whether to compute the DCFT energy with the Tau^2 correction to Tau. Type: boolean; Default: false. Previous topic; TAU; Next topic; TIKHONOW_OMEGA; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/dcft__tau_squared-1.html:222,energy,energy,222,psi4manual/4.0b3/autodir_options_c/dcft__tau_squared-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/dcft__tau_squared-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. TDSCF: Time-dependent Hartree–Fock and density-functional theory. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Theoretical Methods: SCF to FCI; TDSCF: Time-dependent Hartree–Fock and density-functional theory. TDSCF: Time-dependent Hartree–Fock and density-functional theory¶; Code author: Andrew M. James, Daniel G. A. Smith, Ruhee Dcuhna, Roberto Di Remigio and Jeff Schriber; Section author: Roberto Di Remigio; Module: Keywords, PSI Variables, LIBSCF_SOLVER. Introduction¶; PSI4 provides the capability to calculate excitation energies and ground to; excited state transition properties for SCF reference wavefunctions in a linear; response formalism [Dreuw2005-wp].; An illustrative example of using the TDSCF functionality is as follows:; molecule {; 0 1; O 0.000000 0.695000 -0.092486; O -0.000000 -0.695000 -0.092486; H -0.388142 0.895249 0.739888; H 0.388142 -0.895249 0.739888; symmetry c1; }. set {; tdscf_states 10; }. energy('td-scf/cc-pvdz'). This will seek to converge 10 singlet roots from a restricted Hartree–Fock reference. The roots are obtained with an iterative eigensolver and the following is the printout from the calculation:; ---------------------------------------------------------; TDSCF excitation energies; by Andrew M. James and Daniel G. A. Smith; ---------------------------------------------------------. ==> Options <==. Residual threshold : 1.0000e-04; Initial guess : denominators; Reference : RHF; Solver type : RPA (Hamiltonian). ==> Requested Excitations <==. 10 singlet states with A symmetry. ==> Seeking the lowest 10 singlet states with A symmetry. Generalized Hamiltonian Solver; By Andrew M. James. ==> Options <==. Max number of iterations = 60; Eigenvector tolerance = 1.0000e-04; Max number of expansion vectors = 2000. => Iterations <=; Max[D[value]] Max[|R|] # vectors; HamiltonianSolver iter 1: 5.64572e-01 3.65441e-01 40; HamiltonianSolver iter 2: 1.70649e-02 4.40807e-02 60; HamiltonianSolver iter 3: 2.42552e-",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/tdscf.html:966,energy,energy,966,psi4manual/master/tdscf.html,https://psicode.org,https://psicode.org/psi4manual/master/tdscf.html,1,['energy'],['energy']
Energy Efficiency,"﻿. TDSCF: Time-dependent Hartree–Fock and density-functional theory. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Theoretical Methods: SCF to FCI; TDSCF: Time-dependent Hartree–Fock and density-functional theory. TDSCF: Time-dependent Hartree–Fock and density-functional theory¶; Code author: Andrew M. James, Daniel G. A. Smith, Ruhee Dcuhna, Roberto Di Remigio and Jeff Schriber; Section author: Roberto Di Remigio; Module: Keywords, PSI Variables, LIBSCF_SOLVER. Introduction¶; PSI4 provides the capability to calculate excitation energies and ground to; excited state transition properties for SCF reference wavefunctions in a linear; response formalism [Dreuw2005-wp].; An illustrative example of using the TDSCF functionality is as follows:; molecule {; 0 1; O 0.000000 0.695000 -0.092486; O -0.000000 -0.695000 -0.092486; H -0.388142 0.895249 0.739888; H 0.388142 -0.895249 0.739888; symmetry c1; }. set {; tdscf_states 10; }. energy('td-scf/cc-pvdz'). This will seek to converge 10 singlet roots from a restricted Hartree–Fock reference. The roots are obtained with an iterative eigensolver and the following is the printout from the calculation:; ---------------------------------------------------------; TDSCF excitation energies; by Andrew M. James and Daniel G. A. Smith; ---------------------------------------------------------. ==> Options <==. Residual threshold : 1.0000e-04; Initial guess : denominators; Reference : RHF; Solver type : RPA (Hamiltonian). ==> Requested Excitations <==. 10 singlet states with A symmetry. ==> Seeking the lowest 10 singlet states with A symmetry. Generalized Hamiltonian Solver; By Andrew M. James. ==> Options <==. Max number of iterations = 60; Eigenvector tolerance = 1.0000e-04; Max number of expansion vectors = 2000. => Iterations <=; Max[D[value]] Max[|R|] # vectors; HamiltonianSolver iter 1: 5.64572e-01 3.65441e-01 40; HamiltonianSolver iter 2: 1.70649e-02 4.40807e-02 60; HamiltonianSolver iter 3: 2.42552e-04 6.9538",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/tdscf-1.html:957,energy,energy,957,psi4manual/1.4.0/tdscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/tdscf-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. TDSCF: Time-dependent Hartree–Fock and density-functional theory. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Theoretical Methods: SCF to FCI; TDSCF: Time-dependent Hartree–Fock and density-functional theory. TDSCF: Time-dependent Hartree–Fock and density-functional theory¶; Code author: Andrew M. James, Daniel G. A. Smith, Ruhee Dcuhna, Roberto Di Remigio and Jeff Schriber; Section author: Roberto Di Remigio; Module: Keywords, PSI Variables, LIBSCF_SOLVER. Introduction¶; PSI4 provides the capability to calculate excitation energies and ground to; excited state transition properties for SCF reference wavefunctions in a linear; response formalism [Dreuw2005-wp].; An illustrative example of using the TDSCF functionality is as follows:; molecule {; 0 1; O 0.000000 0.695000 -0.092486; O -0.000000 -0.695000 -0.092486; H -0.388142 0.895249 0.739888; H 0.388142 -0.895249 0.739888; symmetry c1; }. set {; tdscf_states 10; }. energy('td-scf/cc-pvdz'). This will seek to converge 10 singlet roots from a restricted Hartree–Fock reference. The roots are obtained with an iterative eigensolver and the following is the printout from the calculation:; ---------------------------------------------------------; TDSCF excitation energies; by Andrew M. James and Daniel G. A. Smith; ---------------------------------------------------------. ==> Options <==. Residual threshold : 1.0000e-04; Initial guess : denominators; Reference : RHF; Solver type : RPA (Hamiltonian). ==> Requested Excitations <==. 10 singlet states with A symmetry. ==> Seeking the lowest 10 singlet states with A symmetry. Generalized Hamiltonian Solver; By Andrew M. James. ==> Options <==. Max number of iterations = 60; Eigenvector tolerance = 1.0000e-04; Max number of expansion vectors = 2000. => Iterations <=; Max[D[value]] Max[|R|] # vectors; HamiltonianSolver iter 1: 5.64572e-01 3.65441e-01 40; HamiltonianSolver iter 2: 1.70649e-02 4.40807e-02 60; HamiltonianSolver iter 3: 2.42552e-04 6.9538",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/tdscf-1.html:957,energy,energy,957,psi4manual/1.5.0/tdscf-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/tdscf-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. TDSCF: Time-dependent Hartree–Fock and density-functional theory. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Theoretical Methods: SCF to FCI; TDSCF: Time-dependent Hartree–Fock and density-functional theory. TDSCF: Time-dependent Hartree–Fock and density-functional theory¶; Code author: Andrew M. James, Daniel G. A. Smith, Ruhee Dcuhna, Roberto Di Remigio and Jeff Schriber; Section author: Roberto Di Remigio; Module: Keywords, PSI Variables, LIBSCF_SOLVER. Introduction¶; PSI4 provides the capability to calculate excitation energies and ground to; excited state transition properties for SCF reference wavefunctions in a linear; response formalism [Dreuw2005-wp].; An illustrative example of using the TDSCF functionality is as follows:; molecule {; 0 1; O 0.000000 0.695000 -0.092486; O -0.000000 -0.695000 -0.092486; H -0.388142 0.895249 0.739888; H 0.388142 -0.895249 0.739888; symmetry c1; }. set {; tdscf_states 10; }. energy('td-scf/cc-pvdz'). This will seek to converge 10 singlet roots from a restricted Hartree–Fock reference. The roots are obtained with an iterative eigensolver and the following is the printout from the calculation:; ---------------------------------------------------------; TDSCF excitation energies; by Andrew M. James and Daniel G. A. Smith; ---------------------------------------------------------. ==> Options <==. Residual threshold : 1.0000e-04; Initial guess : denominators; Reference : RHF; Solver type : RPA (Hamiltonian). ==> Requested Excitations <==. 10 singlet states with A symmetry. ==> Seeking the lowest 10 singlet states with A symmetry. Generalized Hamiltonian Solver; By Andrew M. James. ==> Options <==. Max number of iterations = 60; Eigenvector tolerance = 1.0000e-04; Max number of expansion vectors = 2000. => Iterations <=; Max[D[value]] Max[|R|] # vectors; HamiltonianSolver iter 1: 5.64572e-01 3.65441e-01 40; HamiltonianSolver iter 2: 1.70649e-02 4.40807e-02 60; HamiltonianSolver iter 3: 2.42552e-04 6.9538",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/tdscf.html:957,energy,energy,957,psi4manual/1.6.x/tdscf.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/tdscf.html,1,['energy'],['energy']
Energy Efficiency,"﻿. TDSCF: Time-dependent Hartree–Fock and density-functional theory. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Theoretical Methods: SCF to FCI; TDSCF: Time-dependent Hartree–Fock and density-functional theory. TDSCF: Time-dependent Hartree–Fock and density-functional theory¶; Code author: Andrew M. James, Daniel G. A. Smith, Ruhee Dcuhna, Roberto Di Remigio and Jeff Schriber; Section author: Roberto Di Remigio; Module: Keywords, PSI Variables, LIBSCF_SOLVER. Introduction¶; PSI4 provides the capability to calculate excitation energies and ground to; excited state transition properties for SCF reference wavefunctions in a linear; response formalism [Dreuw2005-wp].; An illustrative example of using the TDSCF functionality is as follows:; molecule {; 0 1; O 0.000000 0.695000 -0.092486; O -0.000000 -0.695000 -0.092486; H -0.388142 0.895249 0.739888; H 0.388142 -0.895249 0.739888; symmetry c1; }. set {; tdscf_states 10; }. energy('td-scf/cc-pvdz'). This will seek to converge 10 singlet roots from a restricted Hartree–Fock reference. The roots are obtained with an iterative eigensolver and the following is the printout from the calculation:; ---------------------------------------------------------; TDSCF excitation energies; by Andrew M. James and Daniel G. A. Smith; ---------------------------------------------------------. ==> Options <==. Residual threshold : 1.0000e-04; Initial guess : denominators; Reference : RHF; Solver type : RPA (Hamiltonian). ==> Requested Excitations <==. 10 singlet states with A symmetry. ==> Seeking the lowest 10 singlet states with A symmetry. Generalized Hamiltonian Solver; By Andrew M. James. ==> Options <==. Max number of iterations = 60; Eigenvector tolerance = 1.0000e-04; Max number of expansion vectors = 2000. => Iterations <=; Max[D[value]] Max[|R|] # vectors; HamiltonianSolver iter 1: 5.64572e-01 3.65441e-01 40; HamiltonianSolver iter 2: 1.70649e-02 4.40807e-02 60; HamiltonianSolver iter 3: 2.42552e-04 6.9538",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/tdscf.html:957,energy,energy,957,psi4manual/1.7.x/tdscf.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/tdscf.html,1,['energy'],['energy']
Energy Efficiency,"﻿. TDSCF: Time-dependent Hartree–Fock and density-functional theory. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Theoretical Methods: SCF to FCI; TDSCF: Time-dependent Hartree–Fock and density-functional theory. TDSCF: Time-dependent Hartree–Fock and density-functional theory¶; Code author: Andrew M. James, Daniel G. A. Smith, Ruhee Dcuhna, Roberto Di Remigio and Jeff Schriber; Section author: Roberto Di Remigio; Module: Keywords, PSI Variables, LIBSCF_SOLVER. Introduction¶; PSI4 provides the capability to calculate excitation energies and ground to; excited state transition properties for SCF reference wavefunctions in a linear; response formalism [Dreuw2005-wp].; An illustrative example of using the TDSCF functionality is as follows:; molecule {; 0 1; O 0.000000 0.695000 -0.092486; O -0.000000 -0.695000 -0.092486; H -0.388142 0.895249 0.739888; H 0.388142 -0.895249 0.739888; symmetry c1; }. set {; tdscf_states 10; }. energy('td-scf/cc-pvdz'). This will seek to converge 10 singlet roots from a restricted Hartree–Fock reference. The roots are obtained with an iterative eigensolver and the following is the printout from the calculation:; ---------------------------------------------------------; TDSCF excitation energies; by Andrew M. James and Daniel G. A. Smith; ---------------------------------------------------------. ==> Options <==. Residual threshold : 1.0000e-04; Initial guess : denominators; Reference : RHF; Solver type : RPA (Hamiltonian). ==> Requested Excitations <==. 10 singlet states with A symmetry. ==> Seeking the lowest 10 singlet states with A symmetry. Generalized Hamiltonian Solver; By Andrew M. James. ==> Options <==. Max number of iterations = 60; Eigenvector tolerance = 1.0000e-04; Max number of expansion vectors = 2000. => Iterations <=; Max[D[value]] Max[|R|] # vectors; HamiltonianSolver iter 1: 5.64572e-01 3.65441e-01 40; HamiltonianSolver iter 2: 1.70649e-02 4.40807e-02 60; HamiltonianSolver iter 3: 2.42552e-04 6.95",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/tdscf.html:959,energy,energy,959,psi4manual/1.8.x/tdscf.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/tdscf.html,1,['energy'],['energy']
Energy Efficiency,"﻿. TDSCF: Time-dependent Hartree–Fock and density-functional theory. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Theoretical Methods: SCF to FCI; TDSCF: Time-dependent Hartree–Fock and density-functional theory. TDSCF: Time-dependent Hartree–Fock and density-functional theory¶; Code author: Andrew M. James, Daniel G. A. Smith, Ruhee Dcuhna, Roberto Di Remigio and Jeff Schriber; Section author: Roberto Di Remigio; Module: Keywords, PSI Variables, LIBSCF_SOLVER. Introduction¶; PSI4 provides the capability to calculate excitation energies and ground to; excited state transition properties for SCF reference wavefunctions in a linear; response formalism [Dreuw2005-wp].; An illustrative example of using the TDSCF functionality is as follows:; molecule {; 0 1; O 0.000000 0.695000 -0.092486; O -0.000000 -0.695000 -0.092486; H -0.388142 0.895249 0.739888; H 0.388142 -0.895249 0.739888; symmetry c1; }. set {; tdscf_states 10; }. energy('td-scf/cc-pvdz'). This will seek to converge 10 singlet roots from a restricted Hartree–Fock reference. The roots are obtained with an iterative eigensolver and the following is the printout from the calculation:; ---------------------------------------------------------; TDSCF excitation energies; by Andrew M. James and Daniel G. A. Smith; ---------------------------------------------------------. ==> Options <==. Residual threshold : 1.0000e-04; Initial guess : denominators; Reference : RHF; Solver type : RPA (Hamiltonian). ==> Requested Excitations <==. 10 singlet states with A symmetry. ==> Seeking the lowest 10 singlet states with A symmetry. Generalized Hamiltonian Solver; By Andrew M. James. ==> Options <==. Max number of iterations = 60; Eigenvector tolerance = 1.0000e-04; Max number of expansion vectors = 2000. => Iterations <=; Max[D[value]] Max[|R|] # vectors; HamiltonianSolver iter 1: 5.64572e-01 3.65441e-01 40; HamiltonianSolver iter 2: 1.70649e-02 4.40807e-02 60; HamiltonianSolver iter 3: 2.42552e-04 6.95",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/tdscf.html:959,energy,energy,959,psi4manual/1.9.x/tdscf.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/tdscf.html,1,['energy'],['energy']
Energy Efficiency,"﻿. TDSCF_TRIPLETS. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; TDSCF_TRIPLETS. TDSCF_TRIPLETS¶. Controls inclusion of triplet states, which is only valid for restricted references. Valid options: - none : No triplets computed (default) - also : lowest-energy triplets and singlets included, in 50-50 ratio. Note that singlets are privileged, i.e. if seeking to converge 5 states in total, 3 will be singlets and 2 will be triplets. - only : Only triplet states computed. Type: string; Possible Values: NONE, ALSO, ONLY; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; SCF; TDSCF_TRIPLETS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/scf__tdscf_triplets.html:322,energy,energy,322,psi4manual/master/autodir_options_c/scf__tdscf_triplets.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/scf__tdscf_triplets.html,2,['energy'],['energy']
Energy Efficiency,"﻿. TDSCF_TRIPLETS. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; TDSCF_TRIPLETS. TDSCF_TRIPLETS¶. Controls inclusion of triplet states, which is only valid for restricted references. Valid options: - none : No triplets computed (default) - also : lowest-energy triplets and singlets included, in 50-50 ratio. Note that singlets are privileged, i.e. if seeking to converge 5 states in total, 3 will be singlets and 2 will be triplets. - only : Only triplet states computed. Type: string; Possible Values: NONE, ALSO, ONLY; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; SCF; TDSCF_TRIPLETS. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__tdscf_triplets-1.html:313,energy,energy,313,psi4manual/1.4.0/autodir_options_c/scf__tdscf_triplets-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/scf__tdscf_triplets-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. TDSCF_TRIPLETS. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; TDSCF_TRIPLETS. TDSCF_TRIPLETS¶. Controls inclusion of triplet states, which is only valid for restricted references. Valid options: - none : No triplets computed (default) - also : lowest-energy triplets and singlets included, in 50-50 ratio. Note that singlets are privileged, i.e. if seeking to converge 5 states in total, 3 will be singlets and 2 will be triplets. - only : Only triplet states computed. Type: string; Possible Values: NONE, ALSO, ONLY; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; SCF; TDSCF_TRIPLETS. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__tdscf_triplets-1.html:313,energy,energy,313,psi4manual/1.5.0/autodir_options_c/scf__tdscf_triplets-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/scf__tdscf_triplets-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. TDSCF_TRIPLETS. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; TDSCF_TRIPLETS. TDSCF_TRIPLETS¶. Controls inclusion of triplet states, which is only valid for restricted references. Valid options: - none : No triplets computed (default) - also : lowest-energy triplets and singlets included, in 50-50 ratio. Note that singlets are privileged, i.e. if seeking to converge 5 states in total, 3 will be singlets and 2 will be triplets. - only : Only triplet states computed. Type: string; Possible Values: NONE, ALSO, ONLY; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; SCF; TDSCF_TRIPLETS. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__tdscf_triplets.html:313,energy,energy,313,psi4manual/1.6.x/autodir_options_c/scf__tdscf_triplets.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/scf__tdscf_triplets.html,2,['energy'],['energy']
Energy Efficiency,"﻿. TDSCF_TRIPLETS. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; TDSCF_TRIPLETS. TDSCF_TRIPLETS¶. Controls inclusion of triplet states, which is only valid for restricted references. Valid options: - none : No triplets computed (default) - also : lowest-energy triplets and singlets included, in 50-50 ratio. Note that singlets are privileged, i.e. if seeking to converge 5 states in total, 3 will be singlets and 2 will be triplets. - only : Only triplet states computed. Type: string; Possible Values: NONE, ALSO, ONLY; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; SCF; TDSCF_TRIPLETS. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__tdscf_triplets.html:313,energy,energy,313,psi4manual/1.7.x/autodir_options_c/scf__tdscf_triplets.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/scf__tdscf_triplets.html,2,['energy'],['energy']
Energy Efficiency,"﻿. TDSCF_TRIPLETS. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; TDSCF_TRIPLETS. TDSCF_TRIPLETS¶. Controls inclusion of triplet states, which is only valid for restricted references. Valid options: - none : No triplets computed (default) - also : lowest-energy triplets and singlets included, in 50-50 ratio. Note that singlets are privileged, i.e. if seeking to converge 5 states in total, 3 will be singlets and 2 will be triplets. - only : Only triplet states computed. Type: string; Possible Values: NONE, ALSO, ONLY; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; SCF; TDSCF_TRIPLETS. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__tdscf_triplets.html:315,energy,energy,315,psi4manual/1.8.x/autodir_options_c/scf__tdscf_triplets.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/scf__tdscf_triplets.html,2,['energy'],['energy']
Energy Efficiency,"﻿. TDSCF_TRIPLETS. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; TDSCF_TRIPLETS. TDSCF_TRIPLETS¶. Controls inclusion of triplet states, which is only valid for restricted references. Valid options: - none : No triplets computed (default) - also : lowest-energy triplets and singlets included, in 50-50 ratio. Note that singlets are privileged, i.e. if seeking to converge 5 states in total, 3 will be singlets and 2 will be triplets. - only : Only triplet states computed. Type: string; Possible Values: NONE, ALSO, ONLY; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; SCF; TDSCF_TRIPLETS. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__tdscf_triplets.html:315,energy,energy,315,psi4manual/1.9.x/autodir_options_c/scf__tdscf_triplets.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/scf__tdscf_triplets.html,2,['energy'],['energy']
Energy Efficiency,"﻿. THERMO — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». THERMO¶. CURRENT ENERGY; GIBBS FREE ENERGY. Previous topic; SCF; Next topic; OEPROP; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; PSI Variables by Module ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 21, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__thermo-1.html:180,ENERGY,ENERGY,180,psi4manual/4.0b3/autodir_psivariables/module__thermo-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_psivariables/module__thermo-1.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. THERMO — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». THERMO¶. CURRENT ENERGY; ENTHALPY; ENTHALPY CORRECTION; GIBBS FREE ENERGY; GIBBS FREE ENERGY CORRECTION; INTERNAL ENERGY; INTERNAL ENERGY CORRECTION; ZERO K ENTHALPHY; ZPVE. Previous topic; SCF; Next topic; OEPROP; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 29, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__thermo-1.html:180,ENERGY,ENERGY,180,psi4manual/4.0b4/autodir_psivariables/module__thermo-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_psivariables/module__thermo-1.html,10,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. THERMO — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». THERMO¶. CURRENT ENERGY; ENTHALPY; ENTHALPY CORRECTION; GIBBS FREE ENERGY; GIBBS FREE ENERGY CORRECTION; INTERNAL ENERGY; INTERNAL ENERGY CORRECTION; ZERO K ENTHALPHY; ZPVE. Previous topic; SCF; Next topic; OEPROP; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; PSI Variables by Module ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__thermo-1.html:180,ENERGY,ENERGY,180,psi4manual/4.0b5/autodir_psivariables/module__thermo-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_psivariables/module__thermo-1.html,10,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. THERMO. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; THERMO. THERMO¶. ENTHALPY; ENTHALPY CORRECTION; GIBBS FREE ENERGY; GIBBS FREE ENERGY CORRECTION; THERMAL ENERGY; THERMAL ENERGY CORRECTION; ZERO K ENTHALPY; ZPVE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; PSI Variables by Module; THERMO. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_psivariables/module__thermo.html:184,ENERGY,ENERGY,184,psi4manual/master/autodir_psivariables/module__thermo.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_psivariables/module__thermo.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. THERMO. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; THERMO. THERMO¶. ENTHALPY; ENTHALPY CORRECTION; GIBBS FREE ENERGY; GIBBS FREE ENERGY CORRECTION; THERMAL ENERGY; THERMAL ENERGY CORRECTION; ZERO K ENTHALPY; ZPVE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; PSI Variables by Module; THERMO. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__thermo-1.html:175,ENERGY,ENERGY,175,psi4manual/1.4.0/autodir_psivariables/module__thermo-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_psivariables/module__thermo-1.html,8,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. THERMO. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; THERMO. THERMO¶. ENTHALPY; ENTHALPY CORRECTION; GIBBS FREE ENERGY; GIBBS FREE ENERGY CORRECTION; THERMAL ENERGY; THERMAL ENERGY CORRECTION; ZERO K ENTHALPY; ZPVE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; PSI Variables by Module; THERMO. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__thermo-1.html:175,ENERGY,ENERGY,175,psi4manual/1.5.0/autodir_psivariables/module__thermo-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_psivariables/module__thermo-1.html,8,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. THERMO. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; THERMO. THERMO¶. ENTHALPY; ENTHALPY CORRECTION; GIBBS FREE ENERGY; GIBBS FREE ENERGY CORRECTION; THERMAL ENERGY; THERMAL ENERGY CORRECTION; ZERO K ENTHALPY; ZPVE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; PSI Variables by Module; THERMO. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__thermo.html:175,ENERGY,ENERGY,175,psi4manual/1.6.x/autodir_psivariables/module__thermo.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_psivariables/module__thermo.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. THERMO. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; THERMO. THERMO¶. ENTHALPY; ENTHALPY CORRECTION; GIBBS FREE ENERGY; GIBBS FREE ENERGY CORRECTION; THERMAL ENERGY; THERMAL ENERGY CORRECTION; ZERO K ENTHALPY; ZPVE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; PSI Variables by Module; THERMO. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__thermo.html:175,ENERGY,ENERGY,175,psi4manual/1.7.x/autodir_psivariables/module__thermo.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_psivariables/module__thermo.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. THERMO. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; THERMO. THERMO¶. ENTHALPY; ENTHALPY CORRECTION; GIBBS FREE ENERGY; GIBBS FREE ENERGY CORRECTION; THERMAL ENERGY; THERMAL ENERGY CORRECTION; ZERO K ENTHALPY; ZPVE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; PSI Variables by Module; THERMO. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__thermo.html:177,ENERGY,ENERGY,177,psi4manual/1.8.x/autodir_psivariables/module__thermo.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_psivariables/module__thermo.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. THERMO. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; THERMO. THERMO¶. ENTHALPY; ENTHALPY CORRECTION; GIBBS FREE ENERGY; GIBBS FREE ENERGY CORRECTION; THERMAL ENERGY; THERMAL ENERGY CORRECTION; ZERO K ENTHALPY; ZPVE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; PSI Variables by Module; THERMO. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__thermo.html:177,ENERGY,ENERGY,177,psi4manual/1.9.x/autodir_psivariables/module__thermo.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_psivariables/module__thermo.html,4,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. THREE_PARTICLE — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». THREE_PARTICLE¶. Whether to compute three-particle energy correction or not. Type: string; Possible Values: NONE, PERTURBATIVE; Default: NONE. Previous topic; STABILITY_N_GUESS_VECTORS; Next topic; TIKHONOW_OMEGA. This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2016, The Psi4 Project.; Last updated on Tuesday, 05 July 2016 02:54AM.; Created using Sphinx 1.3.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__three_particle-1.html:232,energy,energy,232,psi4manual/1.0.0/autodir_options_c/dcft__three_particle-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/autodir_options_c/dcft__three_particle-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. THREE_PARTICLE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DCT; THREE_PARTICLE. THREE_PARTICLE¶. Whether to compute three-particle energy correction or not. Type: string; Possible Values: NONE, PERTURBATIVE; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DCT; THREE_PARTICLE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dct__three_particle.html:200,energy,energy,200,psi4manual/master/autodir_options_c/dct__three_particle.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dct__three_particle.html,2,['energy'],['energy']
Energy Efficiency,"﻿. THREE_PARTICLE. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DCT; THREE_PARTICLE. THREE_PARTICLE¶. Whether to compute three-particle energy correction or not. Type: string; Possible Values: NONE, PERTURBATIVE; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Appendices; Keywords by Module; DCT; THREE_PARTICLE. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dct__three_particle-1.html:191,energy,energy,191,psi4manual/1.4.0/autodir_options_c/dct__three_particle-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/autodir_options_c/dct__three_particle-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. THREE_PARTICLE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DCT; THREE_PARTICLE. THREE_PARTICLE¶. Whether to compute three-particle energy correction or not. Type: string; Possible Values: NONE, PERTURBATIVE; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DCT; THREE_PARTICLE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dct__three_particle-1.html:191,energy,energy,191,psi4manual/1.5.0/autodir_options_c/dct__three_particle-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dct__three_particle-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. THREE_PARTICLE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DCT; THREE_PARTICLE. THREE_PARTICLE¶. Whether to compute three-particle energy correction or not. Type: string; Possible Values: NONE, PERTURBATIVE; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DCT; THREE_PARTICLE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dct__three_particle.html:191,energy,energy,191,psi4manual/1.6.x/autodir_options_c/dct__three_particle.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dct__three_particle.html,2,['energy'],['energy']
Energy Efficiency,"﻿. THREE_PARTICLE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DCT; THREE_PARTICLE. THREE_PARTICLE¶. Whether to compute three-particle energy correction or not. Type: string; Possible Values: NONE, PERTURBATIVE; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DCT; THREE_PARTICLE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dct__three_particle.html:191,energy,energy,191,psi4manual/1.7.x/autodir_options_c/dct__three_particle.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dct__three_particle.html,2,['energy'],['energy']
Energy Efficiency,"﻿. THREE_PARTICLE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DCT; THREE_PARTICLE. THREE_PARTICLE¶. Whether to compute three-particle energy correction or not. Type: string; Possible Values: NONE, PERTURBATIVE; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DCT; THREE_PARTICLE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dct__three_particle.html:193,energy,energy,193,psi4manual/1.8.x/autodir_options_c/dct__three_particle.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dct__three_particle.html,2,['energy'],['energy']
Energy Efficiency,"﻿. THREE_PARTICLE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DCT; THREE_PARTICLE. THREE_PARTICLE¶. Whether to compute three-particle energy correction or not. Type: string; Possible Values: NONE, PERTURBATIVE; Default: NONE. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DCT; THREE_PARTICLE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dct__three_particle.html:193,energy,energy,193,psi4manual/1.9.x/autodir_options_c/dct__three_particle.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dct__three_particle.html,2,['energy'],['energy']
Energy Efficiency,"﻿. TLaplaceDenominator. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; TLaplaceDenominator. TLaplaceDenominator¶. class psi4.core.TLaplaceDenominator¶; Bases: pybind11_object; Computer class for a Laplace factorization of the six-index energy denominator in coupled-cluster theory; Methods Summary. denominator_occ(self); Returns the occupied orbital Laplace weights of the factorized triples denominator (nweights * nocc). denominator_vir(self); Returns the virtual orbital Laplace weights of the factorized triples denominator (nweights * nvirt). Methods Documentation. denominator_occ(self: psi4.core.TLaplaceDenominator) → psi4.core.Matrix¶; Returns the occupied orbital Laplace weights of the factorized triples denominator (nweights * nocc). denominator_vir(self: psi4.core.TLaplaceDenominator) → psi4.core.Matrix¶; Returns the virtual orbital Laplace weights of the factorized triples denominator (nweights * nvirt). table of contents. TLaplaceDenominator; TLaplaceDenominator; TLaplaceDenominator.denominator_occ(); TLaplaceDenominator.denominator_vir(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; TLaplaceDenominator. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.TLaplaceDenominator.html:300,energy,energy,300,psi4manual/master/api/psi4.core.TLaplaceDenominator.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.TLaplaceDenominator.html,2,['energy'],['energy']
Energy Efficiency,"﻿. TLaplaceDenominator. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; TLaplaceDenominator. TLaplaceDenominator¶. class psi4.core.TLaplaceDenominator¶; Bases: pybind11_object; Computer class for a Laplace factorization of the six-index energy denominator in coupled-cluster theory; Methods Summary. denominator_occ(self); Returns the occupied orbital Laplace weights of the factorized triples denominator (nweights * nocc). denominator_vir(self); Returns the virtual orbital Laplace weights of the factorized triples denominator (nweights * nvirt). Methods Documentation. denominator_occ(self: psi4.core.TLaplaceDenominator) → psi4.core.Matrix¶; Returns the occupied orbital Laplace weights of the factorized triples denominator (nweights * nocc). denominator_vir(self: psi4.core.TLaplaceDenominator) → psi4.core.Matrix¶; Returns the virtual orbital Laplace weights of the factorized triples denominator (nweights * nvirt). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; TLaplaceDenominator. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.TLaplaceDenominator.html:291,energy,energy,291,psi4manual/1.7.x/api/psi4.core.TLaplaceDenominator.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.TLaplaceDenominator.html,2,['energy'],['energy']
Energy Efficiency,"﻿. TLaplaceDenominator. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; TLaplaceDenominator. TLaplaceDenominator¶. class psi4.core.TLaplaceDenominator¶; Bases: pybind11_object; Computer class for a Laplace factorization of the six-index energy denominator in coupled-cluster theory; Methods Summary. denominator_occ(self); Returns the occupied orbital Laplace weights of the factorized triples denominator (nweights * nocc). denominator_vir(self); Returns the virtual orbital Laplace weights of the factorized triples denominator (nweights * nvirt). Methods Documentation. denominator_occ(self: psi4.core.TLaplaceDenominator) → psi4.core.Matrix¶; Returns the occupied orbital Laplace weights of the factorized triples denominator (nweights * nocc). denominator_vir(self: psi4.core.TLaplaceDenominator) → psi4.core.Matrix¶; Returns the virtual orbital Laplace weights of the factorized triples denominator (nweights * nvirt). table of contents. TLaplaceDenominator; TLaplaceDenominator; TLaplaceDenominator.denominator_occ(); TLaplaceDenominator.denominator_vir(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; TLaplaceDenominator. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.TLaplaceDenominator.html:293,energy,energy,293,psi4manual/1.8.x/api/psi4.core.TLaplaceDenominator.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.TLaplaceDenominator.html,2,['energy'],['energy']
Energy Efficiency,"﻿. TLaplaceDenominator. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; TLaplaceDenominator. TLaplaceDenominator¶. class psi4.core.TLaplaceDenominator¶; Bases: pybind11_object; Computer class for a Laplace factorization of the six-index energy denominator in coupled-cluster theory; Methods Summary. denominator_occ(self); Returns the occupied orbital Laplace weights of the factorized triples denominator (nweights * nocc). denominator_vir(self); Returns the virtual orbital Laplace weights of the factorized triples denominator (nweights * nvirt). Methods Documentation. denominator_occ(self: psi4.core.TLaplaceDenominator) → psi4.core.Matrix¶; Returns the occupied orbital Laplace weights of the factorized triples denominator (nweights * nocc). denominator_vir(self: psi4.core.TLaplaceDenominator) → psi4.core.Matrix¶; Returns the virtual orbital Laplace weights of the factorized triples denominator (nweights * nvirt). table of contents. TLaplaceDenominator; TLaplaceDenominator; TLaplaceDenominator.denominator_occ(); TLaplaceDenominator.denominator_vir(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; TLaplaceDenominator. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.TLaplaceDenominator.html:293,energy,energy,293,psi4manual/1.9.x/api/psi4.core.TLaplaceDenominator.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.TLaplaceDenominator.html,2,['energy'],['energy']
Energy Efficiency,"﻿. TPDM — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DCFT ». TPDM¶. Controls whether to compute unrelaxed two-particle density matrix at the end of the energy computation. Type: boolean; Default: false. Previous topic; TIKHONOW_OMEGA; Next topic; DETCI; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2012, Psi4 Project.; Last updated on Sep 30, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/autodir_options_c/dcft__tpdm-1.html:240,energy,energy,240,psi4manual/4.0b2/autodir_options_c/dcft__tpdm-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/autodir_options_c/dcft__tpdm-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. TPDM — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DCFT ». TPDM¶. Controls whether to compute unrelaxed two-particle density matrix at the end of the energy computation. Type: boolean; Default: false. Previous topic; TIKHONOW_OMEGA; Next topic; DETCI; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2012, The Psi4 Project.; Last updated on Oct 16, 2012.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/autodir_options_c/dcft__tpdm-1.html:255,energy,energy,255,psi4manual/4.0b3/autodir_options_c/dcft__tpdm-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/autodir_options_c/dcft__tpdm-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. TPDM — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DCFT ». TPDM¶. Controls whether to compute unrelaxed two-particle density matrix at the end of the energy computation. Type: boolean; Default: false. Previous topic; TIKHONOW_OMEGA; Next topic; DETCI; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2013, The Psi4 Project.; Last updated on Apr 25, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/autodir_options_c/dcft__tpdm-1.html:255,energy,energy,255,psi4manual/4.0b4/autodir_options_c/dcft__tpdm-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/autodir_options_c/dcft__tpdm-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. TPDM — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DCFT ». TPDM¶. Controls whether to compute unrelaxed two-particle density matrix at the end of the energy computation. Type: boolean; Default: false. Previous topic; TIKHONOW_OMEGA; Next topic; DETCI; This Page. Show Source. Quick search. Enter search terms or a module, class or function name.; . Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices »; Keywords by Module »; DCFT ». © Copyright 2013, The Psi4 Project.; Last updated on Jul 08, 2013.; Created using Sphinx 1.1.3.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/autodir_options_c/dcft__tpdm-1.html:255,energy,energy,255,psi4manual/4.0b5/autodir_options_c/dcft__tpdm-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/autodir_options_c/dcft__tpdm-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. T_CUT_MKN. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_MKN. T_CUT_MKN¶. Mulliken charge threshold for including aux BFs on atom (a) in domain of LMO (i). Type: double; Default: 1e-3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_MKN. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dlpno__t_cut_mkn.html:162,charge,charge,162,psi4manual/master/autodir_options_c/dlpno__t_cut_mkn.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dlpno__t_cut_mkn.html,2,['charge'],['charge']
Energy Efficiency,"﻿. T_CUT_MKN. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_MKN. T_CUT_MKN¶. Mulliken charge threshold for including aux BFs on atom (a) in domain of LMO (i). Type: double; Default: 1e-3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_MKN. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dlpno__t_cut_mkn-1.html:153,charge,charge,153,psi4manual/1.5.0/autodir_options_c/dlpno__t_cut_mkn-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dlpno__t_cut_mkn-1.html,4,['charge'],['charge']
Energy Efficiency,"﻿. T_CUT_MKN. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_MKN. T_CUT_MKN¶. Mulliken charge threshold for including aux BFs on atom (a) in domain of LMO (i). Type: double; Default: 1e-3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_MKN. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dlpno__t_cut_mkn.html:153,charge,charge,153,psi4manual/1.6.x/autodir_options_c/dlpno__t_cut_mkn.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dlpno__t_cut_mkn.html,2,['charge'],['charge']
Energy Efficiency,"﻿. T_CUT_MKN. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_MKN. T_CUT_MKN¶. Mulliken charge threshold for including aux BFs on atom (a) in domain of LMO (i). Type: double; Default: 1e-3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_MKN. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dlpno__t_cut_mkn.html:153,charge,charge,153,psi4manual/1.7.x/autodir_options_c/dlpno__t_cut_mkn.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dlpno__t_cut_mkn.html,2,['charge'],['charge']
Energy Efficiency,"﻿. T_CUT_MKN. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_MKN. T_CUT_MKN¶. Mulliken charge threshold for including aux BFs on atom (a) in domain of LMO (i). Type: double; Default: 1e-3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_MKN. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dlpno__t_cut_mkn.html:155,charge,charge,155,psi4manual/1.8.x/autodir_options_c/dlpno__t_cut_mkn.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dlpno__t_cut_mkn.html,2,['charge'],['charge']
Energy Efficiency,"﻿. T_CUT_MKN. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_MKN. T_CUT_MKN¶. Mulliken charge threshold for including aux BFs on atom (a) in domain of LMO (i). Type: double; Default: 1e-3. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_MKN. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dlpno__t_cut_mkn.html:155,charge,charge,155,psi4manual/1.9.x/autodir_options_c/dlpno__t_cut_mkn.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dlpno__t_cut_mkn.html,2,['charge'],['charge']
Energy Efficiency,"﻿. T_CUT_PRE. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_PRE. T_CUT_PRE¶. Pair energy threshold (dipole approximation) for treating LMOs (i, j) as interacting. Type: double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_PRE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/autodir_options_c/dlpno__t_cut_pre.html:158,energy,energy,158,psi4manual/master/autodir_options_c/dlpno__t_cut_pre.html,https://psicode.org,https://psicode.org/psi4manual/master/autodir_options_c/dlpno__t_cut_pre.html,2,['energy'],['energy']
Energy Efficiency,"﻿. T_CUT_PRE. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_PRE. T_CUT_PRE¶. Pair energy threshold (dipole approximation) for treating LMOs (i, j) as interacting. Type: double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_PRE. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dlpno__t_cut_pre-1.html:149,energy,energy,149,psi4manual/1.5.0/autodir_options_c/dlpno__t_cut_pre-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/autodir_options_c/dlpno__t_cut_pre-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. T_CUT_PRE. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_PRE. T_CUT_PRE¶. Pair energy threshold (dipole approximation) for treating LMOs (i, j) as interacting. Type: double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_PRE. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dlpno__t_cut_pre.html:149,energy,energy,149,psi4manual/1.6.x/autodir_options_c/dlpno__t_cut_pre.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/autodir_options_c/dlpno__t_cut_pre.html,2,['energy'],['energy']
Energy Efficiency,"﻿. T_CUT_PRE. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_PRE. T_CUT_PRE¶. Pair energy threshold (dipole approximation) for treating LMOs (i, j) as interacting. Type: double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_PRE. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dlpno__t_cut_pre.html:149,energy,energy,149,psi4manual/1.7.x/autodir_options_c/dlpno__t_cut_pre.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/autodir_options_c/dlpno__t_cut_pre.html,2,['energy'],['energy']
Energy Efficiency,"﻿. T_CUT_PRE. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_PRE. T_CUT_PRE¶. Pair energy threshold (dipole approximation) for treating LMOs (i, j) as interacting. Type: double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_PRE. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dlpno__t_cut_pre.html:151,energy,energy,151,psi4manual/1.8.x/autodir_options_c/dlpno__t_cut_pre.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/autodir_options_c/dlpno__t_cut_pre.html,2,['energy'],['energy']
Energy Efficiency,"﻿. T_CUT_PRE. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_PRE. T_CUT_PRE¶. Pair energy threshold (dipole approximation) for treating LMOs (i, j) as interacting. Type: double; Default: 1e-6. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Appendices; Keywords by Module; DLPNO; T_CUT_PRE. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dlpno__t_cut_pre.html:151,energy,energy,151,psi4manual/1.9.x/autodir_options_c/dlpno__t_cut_pre.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/autodir_options_c/dlpno__t_cut_pre.html,2,['energy'],['energy']
Energy Efficiency,"﻿. Test Suite and Sample Inputs — PSI4 [beta2] documentation. Navigation. index. modules |. next |. previous |; PSI4 [beta2] » ; Appendices ». Test Suite and Sample Inputs¶; PSI4 is distributed with an extensive test suite, which can be found in; psi4/tests. After building the source code, these can automatically be; run by running make tests in the compilation directory. Sample input; files can be found in the the psi4/samples subdirectory of the top-level Psi; directory. The samples and a brief description are provided below. Input File; Description. scf2; RI-SCF cc-pVTZ energy of water, with Z-matrix input and cc-pVTZ-RI auxilliary basis. cc22; ROHF-EOM-CCSD/DZ on the lowest two states of each irrep in CH2. mcscf2; TCSCF cc-pVDZ energy of asymmetrically displaced ozone, with Z-matrix input. min_input; This checks that all energy methods can run with a minimal input and set symmetry. cc25; Single point gradient of 1-2B2 state of H2O+ with EOM-CCSD. fd-gradient; SCF STO-3G finite-difference tests. scf6; Tests RHF/ROHF/UHF SCF gradients. psimrcc-ccsd_t-3; Mk-MRCCSD(T) single point. CH2 state described using the Ms = 0 component of the singlet. Uses RHF singlet orbitals. mcscf1; ROHF 6-31G** energy of the state of CH2, with Z-matrix input. The occupations are specified explicitly. sapt5; SAPT0 aug-cc-pVTZ computation of the charge transfer energy of the water dimer. adc2; ADC/aug-cc-pVDZ on two water molecules that are distant from 1000 angstroms from each other. cc40; RHF-CC2-LR/cc-pVDZ optical rotation of H2O2. gauge = length, omega = (589 355 nm). dcft2; DCFT-06 calculation for the He dimer. This performs a two-step update of the orbitals and cumulant, using DIIS extrapolation. Four-virtual integrals are handled in the MO Basis. cc32; CC3/cc-pVDZ H2O geom from Olsen et al., JCP 104, 8007 (1996). tu1-h2o-energy; Sample HF/cc-pVDZ H2O computation. dcft4; DCFT calculation for the HF+ using DCFT-06 functional. This performs both two-step and simultaneous update of the ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/testsuite-1.html:580,energy,energy,580,psi4manual/4.0b2/testsuite-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/testsuite-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. Test Suite and Sample Inputs — PSI4 [beta3] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta3] » ; Appendices ». Test Suite and Sample Inputs¶; PSI4 is distributed with an extensive test suite, which can be found in; psi4/tests. After building the source code, these can automatically be; run by running make tests in the compilation directory. Sample input; files can be found in the the psi4/samples subdirectory of the top-level Psi; directory. The samples and a brief description are provided below. Input File; Description. scf2; RI-SCF cc-pVTZ energy of water, with Z-matrix input and cc-pVTZ-RI auxilliary basis. cc22; ROHF-EOM-CCSD/DZ on the lowest two states of each irrep in CH2. mcscf2; TCSCF cc-pVDZ energy of asymmetrically displaced ozone, with Z-matrix input. min_input; This checks that all energy methods can run with a minimal input and set symmetry. mp2-1; All-electron MP2 6-31G** geometry optimization of water. cc25; Single point gradient of 1-2B2 state of H2O+ with EOM-CCSD. fd-gradient; SCF STO-3G finite-difference tests. scf6; Tests RHF/ROHF/UHF SCF gradients. psimrcc-ccsd_t-3; Mk-MRCCSD(T) single point. CH2 state described using the Ms = 0 component of the singlet. Uses RHF singlet orbitals. dfmp2-3; DF-MP2 cc-pVDZ frozen core gradient of benzene, computed at the DF-SCF cc-pVDZ geometry. mcscf1; ROHF 6-31G** energy of the state of CH2, with Z-matrix input. The occupations are specified explicitly. ci-multi; BH single points, checking that program can run multiple instances of DETCI in a single input, without an intervening clean() call. sapt5; SAPT0 aug-cc-pVTZ computation of the charge transfer energy of the water dimer. adc2; ADC/aug-cc-pVDZ on two water molecules that are distant from 1000 angstroms from each other. cc40; RHF-CC2-LR/cc-pVDZ optical rotation of H2O2. gauge = length, omega = (589 355 nm). dcft2; DCFT-06 calculation for the He dimer. This performs a two-step update of the orbitals and cumulant,",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/testsuite-1.html:595,energy,energy,595,psi4manual/4.0b3/testsuite-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/testsuite-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. Test Suite and Sample Inputs — PSI4 [beta4] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta4] » ; Appendices ». Test Suite and Sample Inputs¶; PSI4 is distributed with an extensive test suite, which can be found in; psi4/tests. After building the source code, these can automatically be; run by running make tests in the compilation directory. Sample input; files can be found in the the psi4/samples subdirectory of the top-level Psi; directory. The samples and a brief description are provided below. Input File; Description. dfmp2-4; conventional and density-fitting mp2 test of mp2 itself and setting scs-mp2. scf2; RI-SCF cc-pVTZ energy of water, with Z-matrix input and cc-pVTZ-RI auxilliary basis. fnocc2; Test G2 method for H2O. cc22; ROHF-EOM-CCSD/DZ on the lowest two states of each irrep in CH2. fnocc4; Test FNO-DF-CCSD(T) energy. mcscf2; TCSCF cc-pVDZ energy of asymmetrically displaced ozone, with Z-matrix input. omp3-4; SCS-OMP3 cc-pVDZ geometry optimization for the H2O molecule. min_input; This checks that all energy methods can run with a minimal input and set symmetry. mp2-1; All-electron MP2 6-31G** geometry optimization of water. cc25; Single point gradient of 1-2B2 state of H2O+ with EOM-CCSD. opt6; Various constrained energy minimizations of HOOH with cc-pvdz RHF. omp2_5-grad1; OMP2.5 cc-pVDZ gradient for the H2O molecule. fd-gradient; SCF STO-3G finite-difference tests. scf6; Tests RHF/ROHF/UHF SCF gradients. psimrcc-ccsd_t-3; Mk-MRCCSD(T) single point. CH2 state described using the Ms = 0 component of the singlet. Uses RHF singlet orbitals. dfmp2-3; DF-MP2 cc-pVDZ frozen core gradient of benzene, computed at the DF-SCF cc-pVDZ geometry. mcscf1; ROHF 6-31G** energy of the state of CH2, with Z-matrix input. The occupations are specified explicitly. ci-multi; BH single points, checking that program can run multiple instances of DETCI in a single input, without an intervening clean() call. sapt5; SAPT0 aug-cc-pVTZ ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/testsuite-1.html:681,energy,energy,681,psi4manual/4.0b4/testsuite-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/testsuite-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. Test Suite and Sample Inputs — PSI4 [beta5] documentation. Navigation. index. modules    . toc    . next    . previous    ; PSI4 [beta5] » ; Appendices ». Test Suite and Sample Inputs¶; PSI4 is distributed with an extensive test suite, which can be found in; psi4/tests. After building the source code, these can automatically be; run by running make tests in the compilation directory. Sample input; files can be found in the the psi4/samples subdirectory of the top-level Psi; directory. The samples and a brief description are provided below. Input File; Description. dfmp2-4; conventional and density-fitting mp2 test of mp2 itself and setting scs-mp2. scf2; RI-SCF cc-pVTZ energy of water, with Z-matrix input and cc-pVTZ-RI auxilliary basis. fnocc2; Test G2 method for H2O. cc22; ROHF-EOM-CCSD/DZ on the lowest two states of each irrep in CH2. fnocc4; Test FNO-DF-CCSD(T) energy. mcscf2; TCSCF cc-pVDZ energy of asymmetrically displaced ozone, with Z-matrix input. omp3-4; SCS-OMP3 cc-pVDZ geometry optimization for the H2O molecule. min_input; This checks that all energy methods can run with a minimal input and set symmetry. mp2-1; All-electron MP2 6-31G** geometry optimization of water. cc25; Single point gradient of 1-2B2 state of H2O+ with EOM-CCSD. opt6; Various constrained energy minimizations of HOOH with cc-pvdz RHF. omp2_5-grad1; OMP2.5 cc-pVDZ gradient for the H2O molecule. fd-gradient; SCF STO-3G finite-difference tests. scf6; Tests RHF/ROHF/UHF SCF gradients. psimrcc-ccsd_t-3; Mk-MRCCSD(T) single point. CH2 state described using the Ms = 0 component of the singlet. Uses RHF singlet orbitals. dfmp2-3; DF-MP2 cc-pVDZ frozen core gradient of benzene, computed at the DF-SCF cc-pVDZ geometry. mcscf1; ROHF 6-31G** energy of the state of CH2, with Z-matrix input. The occupations are specified explicitly. ci-multi; BH single points, checking that program can run multiple instances of DETCI in a single input, without an intervening clean() call. sapt5; SAPT0 aug-cc-pVTZ ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b5/testsuite-1.html:681,energy,energy,681,psi4manual/4.0b5/testsuite-1.html,https://psicode.org,https://psicode.org/psi4manual/4.0b5/testsuite-1.html,6,['energy'],['energy']
Energy Efficiency,"﻿. Vibrational and Thermochemical Analysis. Navigation. Index. modules    .    .    .    .  · ; 1.1;  · . PSI4. Theoretical Methods: SCF to FCI. Vibrational and Thermochemical Analysis¶; Code author: Rollin A. King; Module: Keywords, PSI Variables, THERMO. Caution; It is important to know that PSI4, like any other; quantum chemistry program, does not compute the usual enthalpies,; entropies, or Gibbs free energies of formation provided by most; reference books. Instead, quantum chemistry programs compute “absolute”; thermodynamic properties relative to infinitely separated nuclei and; electrons, not “formation” values relative to elements in their standard; states. If you are computing thermodynamic differences, like a reaction; enthalpy computed as the enthalpy of the products minus the enthalpy; of the reactants, then these “absolute” enthalpies are perfectly valid; and usable. However, they cannot be mixed and matched with enthalpies of; formation from reference books, since the zero of energy is not the same.; Additionally, the “thermal energies” reported in kcal/mol are the; finite-temperature corrections to the electronic total energy, and; not the overall thermal energies themselves. If in doubt, use the; reported Total Energies in Hartree/particle. Keywords¶. T¶. Temperature in Kelvin for thermodynamic analysis. Note that 273.15 is the value for IUPAC STP. Type: double; Default: 298.15. P¶. Pressure in Pascal for thermodynamic analysis. Note that 100000. is the value for IUPAC STP. Type: double; Default: 101325. ROTATIONAL_SYMMETRY_NUMBER¶. Rotational symmetry number for thermodynamic analysis. Default is set from the full point group (e.g., Td for methane) as opposed to the computational point group (e.g., C2v for methane). Default takes into account symmetry reduction through asymmetric isotopic substitution and is unaffected by user-set symmetry on molecule, so this option is the sole way to influence the symmetry-dependent aspects of the thermodynamic ana",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/thermo-1.html:1005,energy,energy,1005,psi4manual/1.1.0/thermo-1.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/thermo-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. aliases — PSI4 [beta2] documentation. Navigation. index. modules |; PSI4 [beta2] » ; Module code ». Source code for aliases; """"""Module with functions that call upon those in modules; :py:mod:`proc`, :py:mod:`driver`, and :py:mod:`wrappers`. Place in this file quickly defined procedures such as; - aliases for complex methods; - simple modifications to existing methods. """"""; import PsiMod; import re; import os; import input; import math; import warnings; from driver import *; from wrappers import *; from molutil import *; from text import *; from procutil import *. # Python procedures like these can be run directly from the input file or integrated; # with the energy(), etc. routines by means of lines like those at the end of this file. [docs]def sherrillgroup_gold_standard(name='mp2', **kwargs):; r""""""Function to call the quantum chemical method known as 'Gold Standard'; in the Sherrill group. Uses :py:func:`~wrappers.complete_basis_set` to evaluateo; the following expression. Two-point extrapolation of the correlation energy; performed according to :py:func:`~wrappers.corl_xtpl_helgaker_2`. .. math:: E_{total}^{\text{Au\_std}} = E_{total,\; \text{SCF}}^{\text{aug-cc-pVQZ}} \; + E_{corl,\; \text{MP2}}^{\text{aug-cc-pV[TQ]Z}} \; + \delta_{\text{MP2}}^{\text{CCSD(T)}}\big\vert_{\text{aug-cc-pVTZ}}. >>> energy('sherrillgroup_gold_standard'). """"""; lowername = name.lower(); kwargs = kwargs_lower(kwargs). if not ('func_cbs' in kwargs):; kwargs['func_cbs'] = energy. if not ('scf_basis' in kwargs):; kwargs['scf_basis'] = 'aug-cc-pVQZ'; if not ('scf_scheme' in kwargs):; kwargs['scf_scheme'] = highest_1. if not ('corl_wfn' in kwargs):; kwargs['corl_wfn'] = 'mp2'; if not ('corl_basis' in kwargs):; kwargs['corl_basis'] = 'aug-cc-pV[TQ]Z'; if not ('corl_scheme' in kwargs):; kwargs['corl_scheme'] = corl_xtpl_helgaker_2. if not ('delta_wfn' in kwargs):; kwargs['delta_wfn'] = 'ccsd(t)'; if not ('delta_wfn_lesser' in kwargs):; kwargs['delta_wfn_lesser'] = 'mp2'; if not ('delta_basis",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/aliases.html:670,energy,energy,670,psi4manual/4.0b2/_modules/aliases.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/aliases.html,2,['energy'],['energy']
Energy Efficiency,"﻿. aliases — PSI4 [beta3] documentation. Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». Source code for aliases; """"""Module with functions that call upon those in modules; :py:mod:`proc`, :py:mod:`driver`, and :py:mod:`wrappers`. Place in this file quickly defined procedures such as; - aliases for complex methods; - simple modifications to existing methods. """"""; import PsiMod; import re; import os; import math; import warnings; from driver import *; from wrappers import *; from molutil import *; from text import *; from procutil import *. # Python procedures like these can be run directly from the input file or integrated; # with the energy(), etc. routines by means of lines like those at the end of this file. [docs]def sherrillgroup_gold_standard(name='mp2', **kwargs):; r""""""Function to call the quantum chemical method known as 'Gold Standard'; in the Sherrill group. Uses :py:func:`~wrappers.complete_basis_set` to evaluateo; the following expression. Two-point extrapolation of the correlation energy; performed according to :py:func:`~wrappers.corl_xtpl_helgaker_2`. .. math:: E_{total}^{\text{Au\_std}} = E_{total,\; \text{SCF}}^{\text{aug-cc-pVQZ}} \; + E_{corl,\; \text{MP2}}^{\text{aug-cc-pV[TQ]Z}} \; + \delta_{\text{MP2}}^{\text{CCSD(T)}}\big\vert_{\text{aug-cc-pVTZ}}. >>> energy('sherrillgroup_gold_standard'). """"""; lowername = name.lower(); kwargs = kwargs_lower(kwargs). if not ('func_cbs' in kwargs):; kwargs['func_cbs'] = energy. if not ('scf_basis' in kwargs):; kwargs['scf_basis'] = 'aug-cc-pVQZ'; if not ('scf_scheme' in kwargs):; kwargs['scf_scheme'] = highest_1. if not ('corl_wfn' in kwargs):; kwargs['corl_wfn'] = 'mp2'; if not ('corl_basis' in kwargs):; kwargs['corl_basis'] = 'aug-cc-pV[TQ]Z'; if not ('corl_scheme' in kwargs):; kwargs['corl_scheme'] = corl_xtpl_helgaker_2. if not ('delta_wfn' in kwargs):; kwargs['delta_wfn'] = 'ccsd(t)'; if not ('delta_wfn_lesser' in kwargs):; kwargs['delta_wfn_lesser'] = 'mp2'; if not ('delta_basis' i",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/aliases.html:667,energy,energy,667,psi4manual/4.0b3/_modules/aliases.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/aliases.html,2,['energy'],['energy']
Energy Efficiency,"﻿. aliases — PSI4 [beta4] documentation. Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». Source code for aliases; """"""Module with functions that call upon those in modules; :py:mod:`proc`, :py:mod:`driver`, and :py:mod:`wrappers`. Place in this file quickly defined procedures such as; - aliases for complex methods; - simple modifications to existing methods. """"""; import PsiMod; import re; import os; import math; import warnings; from driver import *; from wrappers import *; from molutil import *; from text import *; from procutil import *. # Python procedures like these can be run directly from the input file or integrated; # with the energy(), etc. routines by means of lines like those at the end of this file. [docs]def sherrillgroup_gold_standard(name='mp2', **kwargs):; r""""""Function to call the quantum chemical method known as 'Gold Standard'; in the Sherrill group. Uses :py:func:`~wrappers.complete_basis_set` to evaluate; the following expression. Two-point extrapolation of the correlation energy; performed according to :py:func:`~wrappers.corl_xtpl_helgaker_2`. .. math:: E_{total}^{\text{Au\_std}} = E_{total,\; \text{SCF}}^{\text{aug-cc-pVQZ}} \; + E_{corl,\; \text{MP2}}^{\text{aug-cc-pV[TQ]Z}} \; + \delta_{\text{MP2}}^{\text{CCSD(T)}}\big\vert_{\text{aug-cc-pVTZ}}. >>> energy('sherrillgroup_gold_standard'). """"""; lowername = name.lower(); kwargs = kwargs_lower(kwargs). if not ('func_cbs' in kwargs):; kwargs['func_cbs'] = energy. if not ('scf_basis' in kwargs):; kwargs['scf_basis'] = 'aug-cc-pVQZ'; if not ('scf_scheme' in kwargs):; kwargs['scf_scheme'] = highest_1. if not ('corl_wfn' in kwargs):; kwargs['corl_wfn'] = 'mp2'; if not ('corl_basis' in kwargs):; kwargs['corl_basis'] = 'aug-cc-pV[TQ]Z'; if not ('corl_scheme' in kwargs):; kwargs['corl_scheme'] = corl_xtpl_helgaker_2. if not ('delta_wfn' in kwargs):; kwargs['delta_wfn'] = 'ccsd(t)'; if not ('delta_wfn_lesser' in kwargs):; kwargs['delta_wfn_lesser'] = 'mp2'; if not ('delta_basis' in",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/aliases.html:667,energy,energy,667,psi4manual/4.0b4/_modules/aliases.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/aliases.html,2,['energy'],['energy']
Energy Efficiency,"﻿. cbs. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; cbs. cbs¶. psi4.driver.cbs(func, label, **kwargs)[source]¶; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases:; complete_basis_set(). Returns:; (float) – Total electronic energy in Hartrees. PSI variables:. CBS TOTAL ENERGY; CBS REFERENCE ENERGY; CBS CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Caution; Some features are not yet implemented. Buy a developer a coffee. No way to tell function to boost fitting basis size for all calculations.; Need to add more extrapolation schemes. As represented in the equation below, a CBS energy method is defined in several; sequential stages (scf, corl, delta1, delta2, … ) covering treatment; of the reference total energy, the correlation energy, a delta correction to the; correlation energy, and a second delta correction, etc.. Each is activated by its; stage_wfn keyword, or as a field in the `cbs_metadata` list, and is only; allowed if all preceding stages are active. \[E_{\text{total}}^{\text{CBS}} = \mathcal{F}_{\textbf{scf_scheme}} \left(E_{\text{total},\; \text{SCF}}^{\textbf{scf_basis}}\right) \; + \mathcal{F}_{\textbf{corl_scheme}} \left(E_{\text{corl},\; \textbf{corl_wfn}}^{\textbf{corl_basis}}\right) \; + \delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; + \delta_{\textbf{delta2_wfn_lesser}}^{\textbf{delta2_wfn}} \; + \delta_{\textbf{delta3_wfn_lesser}}^{\textbf{delta3_wfn}} \; + \delta_{\textbf{delta4_wfn_lesser}}^{\textbf{delta4_wfn}} \; + \delta_{\textbf{delta5_wfn_lesser}}^{\textbf{delta5_wfn}}\]; Here, \(\mathcal{F}\) is an energy or energy extrapolation scheme, and the following also hold. \[\delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; = \mathcal{F}_{\textbf{delta_scheme}} \left(E_{\text{corl},",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.cbs.html:211,energy,energy,211,psi4manual/master/api/psi4.driver.cbs.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.cbs.html,18,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. cbs. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. cbs¶. psi4.driver.cbs(func, label, **kwargs)[source]¶; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases:complete_basis_set(). Returns:(float) – Total electronic energy in Hartrees. PSI variables:. CBS TOTAL ENERGY; CBS REFERENCE ENERGY; CBS CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Caution; Some features are not yet implemented. Buy a developer a coffee. No way to tell function to boost fitting basis size for all calculations.; No way to extrapolate def2 family basis sets; Need to add more extrapolation schemes. As represented in the equation below, a CBS energy method is defined in several; sequential stages (scf, corl, delta, delta2, delta3, delta4, delta5) covering treatment; of the reference total energy, the correlation energy, a delta correction to the; correlation energy, and a second delta correction, etc.. Each is activated by its; stage_wfn keyword and is only allowed if all preceding stages are active. \[E_{\text{total}}^{\text{CBS}} = \mathcal{F}_{\textbf{scf_scheme}} \left(E_{\text{total},\; \text{SCF}}^{\textbf{scf_basis}}\right) \; + \mathcal{F}_{\textbf{corl_scheme}} \left(E_{\text{corl},\; \textbf{corl_wfn}}^{\textbf{corl_basis}}\right) \; + \delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; + \delta_{\textbf{delta2_wfn_lesser}}^{\textbf{delta2_wfn}} \; + \delta_{\textbf{delta3_wfn_lesser}}^{\textbf{delta3_wfn}} \; + \delta_{\textbf{delta4_wfn_lesser}}^{\textbf{delta4_wfn}} \; + \delta_{\textbf{delta5_wfn_lesser}}^{\textbf{delta5_wfn}}\]; Here, \(\mathcal{F}\) is an energy or energy extrapolation scheme, and the following also hold. \[\delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; = \mathcal{F}_{\textbf{delta_scheme}} \left(E_{\text{c",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.cbs-1.html:199,energy,energy,199,psi4manual/1.2.1/api/psi4.driver.cbs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.cbs-1.html,12,['energy'],['energy']
Energy Efficiency,"﻿. cbs. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. cbs¶. psi4.driver.cbs(func, label, **kwargs)[source]¶; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases:complete_basis_set(). Returns:(float) – Total electronic energy in Hartrees. PSI variables:. CBS TOTAL ENERGY; CBS REFERENCE ENERGY; CBS CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Caution; Some features are not yet implemented. Buy a developer a coffee. No way to tell function to boost fitting basis size for all calculations.; Need to add more extrapolation schemes. As represented in the equation below, a CBS energy method is defined in several; sequential stages (scf, corl, delta1, delta2, … ) covering treatment; of the reference total energy, the correlation energy, a delta correction to the; correlation energy, and a second delta correction, etc.. Each is activated by its; stage_wfn keyword, or as a field in the `cbs_metadata` list, and is only; allowed if all preceding stages are active. \[E_{\text{total}}^{\text{CBS}} = \mathcal{F}_{\textbf{scf_scheme}} \left(E_{\text{total},\; \text{SCF}}^{\textbf{scf_basis}}\right) \; + \mathcal{F}_{\textbf{corl_scheme}} \left(E_{\text{corl},\; \textbf{corl_wfn}}^{\textbf{corl_basis}}\right) \; + \delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; + \delta_{\textbf{delta2_wfn_lesser}}^{\textbf{delta2_wfn}} \; + \delta_{\textbf{delta3_wfn_lesser}}^{\textbf{delta3_wfn}} \; + \delta_{\textbf{delta4_wfn_lesser}}^{\textbf{delta4_wfn}} \; + \delta_{\textbf{delta5_wfn_lesser}}^{\textbf{delta5_wfn}}\]; Here, \(\mathcal{F}\) is an energy or energy extrapolation scheme, and the following also hold. \[\delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; = \mathcal{F}_{\textbf{delta_scheme}} \left(E_{\text{corl},\; \textbf{delta",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.cbs-1.html:199,energy,energy,199,psi4manual/1.3.2/api/psi4.driver.cbs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.cbs-1.html,12,['energy'],['energy']
Energy Efficiency,"﻿. cbs. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; cbs. cbs¶. psi4.driver.cbs(func, label, **kwargs)[source]¶; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases; complete_basis_set(). Returns; (float) – Total electronic energy in Hartrees. PSI variables. CBS TOTAL ENERGY; CBS REFERENCE ENERGY; CBS CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Caution; Some features are not yet implemented. Buy a developer a coffee. No way to tell function to boost fitting basis size for all calculations.; Need to add more extrapolation schemes. As represented in the equation below, a CBS energy method is defined in several; sequential stages (scf, corl, delta1, delta2, … ) covering treatment; of the reference total energy, the correlation energy, a delta correction to the; correlation energy, and a second delta correction, etc.. Each is activated by its; stage_wfn keyword, or as a field in the `cbs_metadata` list, and is only; allowed if all preceding stages are active. \[E_{\text{total}}^{\text{CBS}} = \mathcal{F}_{\textbf{scf_scheme}} \left(E_{\text{total},\; \text{SCF}}^{\textbf{scf_basis}}\right) \; + \mathcal{F}_{\textbf{corl_scheme}} \left(E_{\text{corl},\; \textbf{corl_wfn}}^{\textbf{corl_basis}}\right) \; + \delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; + \delta_{\textbf{delta2_wfn_lesser}}^{\textbf{delta2_wfn}} \; + \delta_{\textbf{delta3_wfn_lesser}}^{\textbf{delta3_wfn}} \; + \delta_{\textbf{delta4_wfn_lesser}}^{\textbf{delta4_wfn}} \; + \delta_{\textbf{delta5_wfn_lesser}}^{\textbf{delta5_wfn}}\]; Here, \(\mathcal{F}\) is an energy or energy extrapolation scheme, and the following also hold. \[\delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; = \mathcal{F}_{\textbf{delta_scheme}} \left(E_{\text{corl},\; \textbf{d",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.cbs-1.html:202,energy,energy,202,psi4manual/1.4.0/api/psi4.driver.cbs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.cbs-1.html,36,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. cbs. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; cbs. cbs¶. psi4.driver.cbs(func, label, **kwargs)[source]¶; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases; complete_basis_set(). Returns; (float) – Total electronic energy in Hartrees. PSI variables. CBS TOTAL ENERGY; CBS REFERENCE ENERGY; CBS CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Caution; Some features are not yet implemented. Buy a developer a coffee. No way to tell function to boost fitting basis size for all calculations.; Need to add more extrapolation schemes. As represented in the equation below, a CBS energy method is defined in several; sequential stages (scf, corl, delta1, delta2, … ) covering treatment; of the reference total energy, the correlation energy, a delta correction to the; correlation energy, and a second delta correction, etc.. Each is activated by its; stage_wfn keyword, or as a field in the `cbs_metadata` list, and is only; allowed if all preceding stages are active. \[E_{\text{total}}^{\text{CBS}} = \mathcal{F}_{\textbf{scf_scheme}} \left(E_{\text{total},\; \text{SCF}}^{\textbf{scf_basis}}\right) \; + \mathcal{F}_{\textbf{corl_scheme}} \left(E_{\text{corl},\; \textbf{corl_wfn}}^{\textbf{corl_basis}}\right) \; + \delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; + \delta_{\textbf{delta2_wfn_lesser}}^{\textbf{delta2_wfn}} \; + \delta_{\textbf{delta3_wfn_lesser}}^{\textbf{delta3_wfn}} \; + \delta_{\textbf{delta4_wfn_lesser}}^{\textbf{delta4_wfn}} \; + \delta_{\textbf{delta5_wfn_lesser}}^{\textbf{delta5_wfn}}\]; Here, \(\mathcal{F}\) is an energy or energy extrapolation scheme, and the following also hold. \[\delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; = \mathcal{F}_{\textbf{delta_scheme}} \left(E_{\text{corl},\; \textbf{d",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.cbs-1.html:202,energy,energy,202,psi4manual/1.5.0/api/psi4.driver.cbs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.cbs-1.html,36,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. cbs. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; cbs. cbs¶. psi4.driver.cbs(func, label, **kwargs)[source]¶; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases; complete_basis_set(). Returns; (float) – Total electronic energy in Hartrees. PSI variables. CBS TOTAL ENERGY; CBS REFERENCE ENERGY; CBS CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Caution; Some features are not yet implemented. Buy a developer a coffee. No way to tell function to boost fitting basis size for all calculations.; Need to add more extrapolation schemes. As represented in the equation below, a CBS energy method is defined in several; sequential stages (scf, corl, delta1, delta2, … ) covering treatment; of the reference total energy, the correlation energy, a delta correction to the; correlation energy, and a second delta correction, etc.. Each is activated by its; stage_wfn keyword, or as a field in the `cbs_metadata` list, and is only; allowed if all preceding stages are active. \[E_{\text{total}}^{\text{CBS}} = \mathcal{F}_{\textbf{scf_scheme}} \left(E_{\text{total},\; \text{SCF}}^{\textbf{scf_basis}}\right) \; + \mathcal{F}_{\textbf{corl_scheme}} \left(E_{\text{corl},\; \textbf{corl_wfn}}^{\textbf{corl_basis}}\right) \; + \delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; + \delta_{\textbf{delta2_wfn_lesser}}^{\textbf{delta2_wfn}} \; + \delta_{\textbf{delta3_wfn_lesser}}^{\textbf{delta3_wfn}} \; + \delta_{\textbf{delta4_wfn_lesser}}^{\textbf{delta4_wfn}} \; + \delta_{\textbf{delta5_wfn_lesser}}^{\textbf{delta5_wfn}}\]; Here, \(\mathcal{F}\) is an energy or energy extrapolation scheme, and the following also hold. \[\delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; = \mathcal{F}_{\textbf{delta_scheme}} \left(E_{\text{corl},\; \textbf{d",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.cbs.html:202,energy,energy,202,psi4manual/1.6.x/api/psi4.driver.cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.cbs.html,18,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. cbs. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; cbs. cbs¶. psi4.driver.cbs(func, label, **kwargs)[source]¶; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases:; complete_basis_set(). Returns:; (float) – Total electronic energy in Hartrees. PSI variables:. CBS TOTAL ENERGY; CBS REFERENCE ENERGY; CBS CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Caution; Some features are not yet implemented. Buy a developer a coffee. No way to tell function to boost fitting basis size for all calculations.; Need to add more extrapolation schemes. As represented in the equation below, a CBS energy method is defined in several; sequential stages (scf, corl, delta1, delta2, … ) covering treatment; of the reference total energy, the correlation energy, a delta correction to the; correlation energy, and a second delta correction, etc.. Each is activated by its; stage_wfn keyword, or as a field in the `cbs_metadata` list, and is only; allowed if all preceding stages are active. \[E_{\text{total}}^{\text{CBS}} = \mathcal{F}_{\textbf{scf_scheme}} \left(E_{\text{total},\; \text{SCF}}^{\textbf{scf_basis}}\right) \; + \mathcal{F}_{\textbf{corl_scheme}} \left(E_{\text{corl},\; \textbf{corl_wfn}}^{\textbf{corl_basis}}\right) \; + \delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; + \delta_{\textbf{delta2_wfn_lesser}}^{\textbf{delta2_wfn}} \; + \delta_{\textbf{delta3_wfn_lesser}}^{\textbf{delta3_wfn}} \; + \delta_{\textbf{delta4_wfn_lesser}}^{\textbf{delta4_wfn}} \; + \delta_{\textbf{delta5_wfn_lesser}}^{\textbf{delta5_wfn}}\]; Here, \(\mathcal{F}\) is an energy or energy extrapolation scheme, and the following also hold. \[\delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; = \mathcal{F}_{\textbf{delta_scheme}} \left(E_{\text{corl},\; \textb",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.cbs.html:202,energy,energy,202,psi4manual/1.7.x/api/psi4.driver.cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.cbs.html,18,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. cbs. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; cbs. cbs¶. psi4.driver.cbs(func, label, **kwargs)[source]¶; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases:; complete_basis_set(). Returns:; (float) – Total electronic energy in Hartrees. PSI variables:. CBS TOTAL ENERGY; CBS REFERENCE ENERGY; CBS CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Caution; Some features are not yet implemented. Buy a developer a coffee. No way to tell function to boost fitting basis size for all calculations.; Need to add more extrapolation schemes. As represented in the equation below, a CBS energy method is defined in several; sequential stages (scf, corl, delta1, delta2, … ) covering treatment; of the reference total energy, the correlation energy, a delta correction to the; correlation energy, and a second delta correction, etc.. Each is activated by its; stage_wfn keyword, or as a field in the `cbs_metadata` list, and is only; allowed if all preceding stages are active. \[E_{\text{total}}^{\text{CBS}} = \mathcal{F}_{\textbf{scf_scheme}} \left(E_{\text{total},\; \text{SCF}}^{\textbf{scf_basis}}\right) \; + \mathcal{F}_{\textbf{corl_scheme}} \left(E_{\text{corl},\; \textbf{corl_wfn}}^{\textbf{corl_basis}}\right) \; + \delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; + \delta_{\textbf{delta2_wfn_lesser}}^{\textbf{delta2_wfn}} \; + \delta_{\textbf{delta3_wfn_lesser}}^{\textbf{delta3_wfn}} \; + \delta_{\textbf{delta4_wfn_lesser}}^{\textbf{delta4_wfn}} \; + \delta_{\textbf{delta5_wfn_lesser}}^{\textbf{delta5_wfn}}\]; Here, \(\mathcal{F}\) is an energy or energy extrapolation scheme, and the following also hold. \[\delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; = \mathcal{F}_{\textbf{delta_scheme}} \left(E_{\text{corl},\; \tex",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.cbs.html:204,energy,energy,204,psi4manual/1.8.x/api/psi4.driver.cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.cbs.html,18,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. cbs. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; cbs. cbs¶. psi4.driver.cbs(func, label, **kwargs)[source]¶; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases:; complete_basis_set(). Returns:; (float) – Total electronic energy in Hartrees. PSI variables:. CBS TOTAL ENERGY; CBS REFERENCE ENERGY; CBS CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Caution; Some features are not yet implemented. Buy a developer a coffee. No way to tell function to boost fitting basis size for all calculations.; Need to add more extrapolation schemes. As represented in the equation below, a CBS energy method is defined in several; sequential stages (scf, corl, delta1, delta2, … ) covering treatment; of the reference total energy, the correlation energy, a delta correction to the; correlation energy, and a second delta correction, etc.. Each is activated by its; stage_wfn keyword, or as a field in the `cbs_metadata` list, and is only; allowed if all preceding stages are active. \[E_{\text{total}}^{\text{CBS}} = \mathcal{F}_{\textbf{scf_scheme}} \left(E_{\text{total},\; \text{SCF}}^{\textbf{scf_basis}}\right) \; + \mathcal{F}_{\textbf{corl_scheme}} \left(E_{\text{corl},\; \textbf{corl_wfn}}^{\textbf{corl_basis}}\right) \; + \delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; + \delta_{\textbf{delta2_wfn_lesser}}^{\textbf{delta2_wfn}} \; + \delta_{\textbf{delta3_wfn_lesser}}^{\textbf{delta3_wfn}} \; + \delta_{\textbf{delta4_wfn_lesser}}^{\textbf{delta4_wfn}} \; + \delta_{\textbf{delta5_wfn_lesser}}^{\textbf{delta5_wfn}}\]; Here, \(\mathcal{F}\) is an energy or energy extrapolation scheme, and the following also hold. \[\delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; = \mathcal{F}_{\textbf{delta_scheme}} \left(E_{\text{corl},\; \tex",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.cbs.html:204,energy,energy,204,psi4manual/1.9.x/api/psi4.driver.cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.cbs.html,18,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. ccenergy. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; ccenergy. ccenergy¶. psi4.core.ccenergy(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the coupled cluster energy code. table of contents. ccenergy; ccenergy(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; ccenergy. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.ccenergy.html:249,energy,energy,249,psi4manual/master/api/psi4.core.ccenergy.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.ccenergy.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ccenergy. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. ccenergy¶. psi4.core.ccenergy(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the coupled cluster energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.ccenergy-1.html:219,energy,energy,219,psi4manual/1.2.1/api/psi4.core.ccenergy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.ccenergy-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ccenergy. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. ccenergy¶. psi4.core.ccenergy(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the coupled cluster energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.ccenergy-1.html:219,energy,energy,219,psi4manual/1.3.2/api/psi4.core.ccenergy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.ccenergy-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ccenergy. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; ccenergy. ccenergy¶. psi4.core.ccenergy(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the coupled cluster energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; ccenergy. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.ccenergy-1.html:240,energy,energy,240,psi4manual/1.4.0/api/psi4.core.ccenergy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.ccenergy-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ccenergy. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; ccenergy. ccenergy¶. psi4.core.ccenergy(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the coupled cluster energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; ccenergy. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.ccenergy-1.html:240,energy,energy,240,psi4manual/1.5.0/api/psi4.core.ccenergy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.ccenergy-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. ccenergy. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; ccenergy. ccenergy¶. psi4.core.ccenergy(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the coupled cluster energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; ccenergy. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.ccenergy.html:240,energy,energy,240,psi4manual/1.6.x/api/psi4.core.ccenergy.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.ccenergy.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ccenergy. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; ccenergy. ccenergy¶. psi4.core.ccenergy(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the coupled cluster energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; ccenergy. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.ccenergy.html:240,energy,energy,240,psi4manual/1.7.x/api/psi4.core.ccenergy.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.ccenergy.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ccenergy. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; ccenergy. ccenergy¶. psi4.core.ccenergy(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the coupled cluster energy code. table of contents. ccenergy; ccenergy(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; ccenergy. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.ccenergy.html:242,energy,energy,242,psi4manual/1.8.x/api/psi4.core.ccenergy.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.ccenergy.html,2,['energy'],['energy']
Energy Efficiency,"﻿. ccenergy. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; ccenergy. ccenergy¶. psi4.core.ccenergy(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the coupled cluster energy code. table of contents. ccenergy; ccenergy(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; ccenergy. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.ccenergy.html:242,energy,energy,242,psi4manual/1.9.x/api/psi4.core.ccenergy.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.ccenergy.html,2,['energy'],['energy']
Energy Efficiency,"﻿. cctriples. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; cctriples. cctriples¶. psi4.core.cctriples(ref_wfn: psi4.core.Wavefunction) → float¶; Runs the coupled cluster (T) energy code. table of contents. cctriples; cctriples(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; cctriples. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.cctriples.html:240,energy,energy,240,psi4manual/master/api/psi4.core.cctriples.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.cctriples.html,2,['energy'],['energy']
Energy Efficiency,"﻿. cctriples. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. cctriples¶. psi4.core.cctriples(arg0: psi::Wavefunction) → float¶; Runs the coupled cluster (T) energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.cctriples-1.html:214,energy,energy,214,psi4manual/1.2.1/api/psi4.core.cctriples-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.cctriples-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. cctriples. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. cctriples¶. psi4.core.cctriples(arg0: psi::Wavefunction) → float¶; Runs the coupled cluster (T) energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.cctriples-1.html:214,energy,energy,214,psi4manual/1.3.2/api/psi4.core.cctriples-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.cctriples-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. cctriples. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; cctriples. cctriples¶. psi4.core.cctriples(ref_wfn: psi4.core.Wavefunction) → float¶; Runs the coupled cluster (T) energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; cctriples. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.cctriples-1.html:231,energy,energy,231,psi4manual/1.4.0/api/psi4.core.cctriples-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.cctriples-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. cctriples. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; cctriples. cctriples¶. psi4.core.cctriples(ref_wfn: psi4.core.Wavefunction) → float¶; Runs the coupled cluster (T) energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; cctriples. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.cctriples-1.html:231,energy,energy,231,psi4manual/1.5.0/api/psi4.core.cctriples-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.cctriples-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. cctriples. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; cctriples. cctriples¶. psi4.core.cctriples(ref_wfn: psi4.core.Wavefunction) → float¶; Runs the coupled cluster (T) energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; cctriples. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.cctriples.html:231,energy,energy,231,psi4manual/1.6.x/api/psi4.core.cctriples.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.cctriples.html,2,['energy'],['energy']
Energy Efficiency,"﻿. cctriples. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; cctriples. cctriples¶. psi4.core.cctriples(ref_wfn: psi4.core.Wavefunction) → float¶; Runs the coupled cluster (T) energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; cctriples. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.cctriples.html:231,energy,energy,231,psi4manual/1.7.x/api/psi4.core.cctriples.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.cctriples.html,2,['energy'],['energy']
Energy Efficiency,"﻿. cctriples. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; cctriples. cctriples¶. psi4.core.cctriples(ref_wfn: psi4.core.Wavefunction) → float¶; Runs the coupled cluster (T) energy code. table of contents. cctriples; cctriples(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; cctriples. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.cctriples.html:233,energy,energy,233,psi4manual/1.8.x/api/psi4.core.cctriples.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.cctriples.html,2,['energy'],['energy']
Energy Efficiency,"﻿. cctriples. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; cctriples. cctriples¶. psi4.core.cctriples(ref_wfn: psi4.core.Wavefunction) → float¶; Runs the coupled cluster (T) energy code. table of contents. cctriples; cctriples(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; cctriples. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.cctriples.html:233,energy,energy,233,psi4manual/1.9.x/api/psi4.core.cctriples.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.cctriples.html,2,['energy'],['energy']
Energy Efficiency,"﻿. compare_fcidumps. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. compare_fcidumps¶. psi4.driver.compare_fcidumps(expected, computed, label)[source]¶; Comparison function for FCIDUMP files.; Compares the first six below, then computes energies from MO integrals and compares the last four. ‘norb’ : number of basis functions; ‘nelec’ : number of electrons; ‘ms2’ : spin polarization of the system; ‘isym’ : symmetry of state (if present in FCIDUMP); ‘orbsym’ : list of symmetry labels of each orbital; ‘uhf’ : whether restricted or unrestricted; ‘ONE-ELECTRON ENERGY’ : SCF one-electron energy; ‘TWO-ELECTRON ENERGY’ : SCF two-electron energy; ‘SCF TOTAL ENERGY’ : SCF total energy; ‘MP2 CORRELATION ENERGY’ : MP2 correlation energy. Parameters:. expected (str) – Reference FCIDUMP file against which computed is compared.; computed (str) – Input FCIDUMP file to compare against expected.; label (str) – string labeling the test. table of contents. compare_fcidumps; compare_fcidumps(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.compare_fcidumps.html:671,energy,energy,671,psi4manual/master/api/psi4.driver.compare_fcidumps.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.compare_fcidumps.html,12,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. compare_fcidumps. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. compare_fcidumps¶. psi4.driver.p4util.compare_fcidumps(expected, computed, label)[source]¶; Comparison function for FCIDUMP files.; Compares the first six below, then computes energies from MO integrals and compares the last four. ‘norb’ : number of basis functions; ‘nelec’ : number of electrons; ‘ms2’ : spin polarization of the system; ‘isym’ : symmetry of state (if present in FCIDUMP); ‘orbsym’ : list of symmetry labels of each orbital; ‘uhf’ : whether restricted or unrestricted; ‘ONE-ELECTRON ENERGY’ : SCF one-electron energy; ‘TWO-ELECTRON ENERGY’ : SCF two-electron energy; ‘SCF TOTAL ENERGY’ : SCF total energy; ‘MP2 CORRELATION ENERGY’ : MP2 correlation energy. Parameters:. expected (str) – Reference FCIDUMP file against which computed is compared.; computed (str) – Input FCIDUMP file to compare against expected.; label (str) – string labeling the test. table of contents. compare_fcidumps; compare_fcidumps(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.compare_fcidumps.html:678,energy,energy,678,psi4manual/master/api/psi4.driver.p4util.compare_fcidumps.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.compare_fcidumps.html,12,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. compare_fcidumps. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. compare_fcidumps¶. psi4.driver.compare_fcidumps(expected, computed, label)[source]¶; Function to compare two FCIDUMP files. Prints util.success(); when value computed matches value expected.; Performs a system exit on failure. Used in input files in the test suite. Returns:a dictionary of energies computed from the MO integrals. The key-value pairs are:. ‘NUCLEAR REPULSION ENERGY’ : nuclear repulsion plus frozen core energy; ‘ONE-ELECTRON ENERGY’ : SCF one-electron energy; ‘TWO-ELECTRON ENERGY’ : SCF two-electron energy; ‘SCF TOTAL ENERGY’ : SCF total energy; ‘MP2 CORRELATION ENERGY’ : MP2 correlation energy. Parameters:; expected – reference FCIDUMP file; computed – computed FCIDUMP file; label – string labelling the test. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.compare_fcidumps-1.html:546,energy,energy,546,psi4manual/1.2.1/api/psi4.driver.compare_fcidumps-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.compare_fcidumps-1.html,10,['energy'],['energy']
Energy Efficiency,"﻿. compare_fcidumps. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. compare_fcidumps¶. psi4.driver.compare_fcidumps(expected, computed, label)[source]¶; Function to compare two FCIDUMP files. Prints util.success(); when value computed matches value expected.; Performs a system exit on failure. Used in input files in the test suite. Returns:a dictionary of energies computed from the MO integrals. The key-value pairs are:. ‘NUCLEAR REPULSION ENERGY’ : nuclear repulsion plus frozen core energy; ‘ONE-ELECTRON ENERGY’ : SCF one-electron energy; ‘TWO-ELECTRON ENERGY’ : SCF two-electron energy; ‘SCF TOTAL ENERGY’ : SCF total energy; ‘MP2 CORRELATION ENERGY’ : MP2 correlation energy. Parameters:; expected – reference FCIDUMP file; computed – computed FCIDUMP file; label – string labelling the test. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.compare_fcidumps-1.html:546,energy,energy,546,psi4manual/1.3.2/api/psi4.driver.compare_fcidumps-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.compare_fcidumps-1.html,10,['energy'],['energy']
Energy Efficiency,"﻿. compare_fcidumps. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. compare_fcidumps¶. psi4.driver.compare_fcidumps(expected, computed, label)[source]¶; Function to compare two FCIDUMP files. Prints success; when value computed matches value expected.; Performs a system exit on failure. Used in input files in the test suite. Returns; a dictionary of energies computed from the MO integrals.; - ‘NUCLEAR REPULSION ENERGY’ : nuclear repulsion plus frozen core energy; - ‘ONE-ELECTRON ENERGY’ : SCF one-electron energy; - ‘TWO-ELECTRON ENERGY’ : SCF two-electron energy; - ‘SCF TOTAL ENERGY’ : SCF total energy; - ‘MP2 CORRELATION ENERGY’ : MP2 correlation energy. Parameters. expected – reference FCIDUMP file; computed – computed FCIDUMP file; label – string labelling the test. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.compare_fcidumps-1.html:533,energy,energy,533,psi4manual/1.4.0/api/psi4.driver.compare_fcidumps-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.compare_fcidumps-1.html,30,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. compare_fcidumps. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. compare_fcidumps¶. psi4.driver.compare_fcidumps(expected, computed, label)[source]¶; Function to compare two FCIDUMP files. Prints success; when value computed matches value expected.; Performs a system exit on failure. Used in input files in the test suite. Returns; a dictionary of energies computed from the MO integrals.; - ‘NUCLEAR REPULSION ENERGY’ : nuclear repulsion plus frozen core energy; - ‘ONE-ELECTRON ENERGY’ : SCF one-electron energy; - ‘TWO-ELECTRON ENERGY’ : SCF two-electron energy; - ‘SCF TOTAL ENERGY’ : SCF total energy; - ‘MP2 CORRELATION ENERGY’ : MP2 correlation energy. Parameters. expected – reference FCIDUMP file; computed – computed FCIDUMP file; label – string labelling the test. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.compare_fcidumps-1.html:533,energy,energy,533,psi4manual/1.5.0/api/psi4.driver.compare_fcidumps-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.compare_fcidumps-1.html,30,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. compare_fcidumps. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. compare_fcidumps¶. psi4.driver.compare_fcidumps(expected, computed, label)[source]¶; Comparison function for FCIDUMP files.; Compares the first six below, then computes energies from MO integrals and compares the last four. ‘norb’ : number of basis functions; ‘nelec’ : number of electrons; ‘ms2’ : spin polarization of the system; ‘isym’ : symmetry of state (if present in FCIDUMP); ‘orbsym’ : list of symmetry labels of each orbital; ‘uhf’ : whether restricted or unrestricted; ‘ONE-ELECTRON ENERGY’ : SCF one-electron energy; ‘TWO-ELECTRON ENERGY’ : SCF two-electron energy; ‘SCF TOTAL ENERGY’ : SCF total energy; ‘MP2 CORRELATION ENERGY’ : MP2 correlation energy. Parameters. expected – Reference FCIDUMP file against which computed is compared.; computed – Input FCIDUMP file to compare against expected.; label – string labeling the test. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.compare_fcidumps.html:662,energy,energy,662,psi4manual/1.6.x/api/psi4.driver.compare_fcidumps.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.compare_fcidumps.html,12,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. compare_fcidumps. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. compare_fcidumps¶. psi4.driver.compare_fcidumps(expected, computed, label)[source]¶; Comparison function for FCIDUMP files.; Compares the first six below, then computes energies from MO integrals and compares the last four. ‘norb’ : number of basis functions; ‘nelec’ : number of electrons; ‘ms2’ : spin polarization of the system; ‘isym’ : symmetry of state (if present in FCIDUMP); ‘orbsym’ : list of symmetry labels of each orbital; ‘uhf’ : whether restricted or unrestricted; ‘ONE-ELECTRON ENERGY’ : SCF one-electron energy; ‘TWO-ELECTRON ENERGY’ : SCF two-electron energy; ‘SCF TOTAL ENERGY’ : SCF total energy; ‘MP2 CORRELATION ENERGY’ : MP2 correlation energy. Parameters:. expected (str) – Reference FCIDUMP file against which computed is compared.; computed (str) – Input FCIDUMP file to compare against expected.; label (str) – string labeling the test. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.compare_fcidumps.html:662,energy,energy,662,psi4manual/1.7.x/api/psi4.driver.compare_fcidumps.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.compare_fcidumps.html,12,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. compare_fcidumps. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. compare_fcidumps¶. psi4.driver.p4util.compare_fcidumps(expected, computed, label)[source]¶; Comparison function for FCIDUMP files.; Compares the first six below, then computes energies from MO integrals and compares the last four. ‘norb’ : number of basis functions; ‘nelec’ : number of electrons; ‘ms2’ : spin polarization of the system; ‘isym’ : symmetry of state (if present in FCIDUMP); ‘orbsym’ : list of symmetry labels of each orbital; ‘uhf’ : whether restricted or unrestricted; ‘ONE-ELECTRON ENERGY’ : SCF one-electron energy; ‘TWO-ELECTRON ENERGY’ : SCF two-electron energy; ‘SCF TOTAL ENERGY’ : SCF total energy; ‘MP2 CORRELATION ENERGY’ : MP2 correlation energy. Parameters:. expected (str) – Reference FCIDUMP file against which computed is compared.; computed (str) – Input FCIDUMP file to compare against expected.; label (str) – string labeling the test. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.compare_fcidumps.html:669,energy,energy,669,psi4manual/1.7.x/api/psi4.driver.p4util.compare_fcidumps.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.compare_fcidumps.html,12,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. compare_fcidumps. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. compare_fcidumps¶. psi4.driver.compare_fcidumps(expected, computed, label)[source]¶; Comparison function for FCIDUMP files.; Compares the first six below, then computes energies from MO integrals and compares the last four. ‘norb’ : number of basis functions; ‘nelec’ : number of electrons; ‘ms2’ : spin polarization of the system; ‘isym’ : symmetry of state (if present in FCIDUMP); ‘orbsym’ : list of symmetry labels of each orbital; ‘uhf’ : whether restricted or unrestricted; ‘ONE-ELECTRON ENERGY’ : SCF one-electron energy; ‘TWO-ELECTRON ENERGY’ : SCF two-electron energy; ‘SCF TOTAL ENERGY’ : SCF total energy; ‘MP2 CORRELATION ENERGY’ : MP2 correlation energy. Parameters:. expected (str) – Reference FCIDUMP file against which computed is compared.; computed (str) – Input FCIDUMP file to compare against expected.; label (str) – string labeling the test. table of contents. compare_fcidumps; compare_fcidumps(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.compare_fcidumps.html:664,energy,energy,664,psi4manual/1.8.x/api/psi4.driver.compare_fcidumps.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.compare_fcidumps.html,12,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. compare_fcidumps. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. compare_fcidumps¶. psi4.driver.p4util.compare_fcidumps(expected, computed, label)[source]¶; Comparison function for FCIDUMP files.; Compares the first six below, then computes energies from MO integrals and compares the last four. ‘norb’ : number of basis functions; ‘nelec’ : number of electrons; ‘ms2’ : spin polarization of the system; ‘isym’ : symmetry of state (if present in FCIDUMP); ‘orbsym’ : list of symmetry labels of each orbital; ‘uhf’ : whether restricted or unrestricted; ‘ONE-ELECTRON ENERGY’ : SCF one-electron energy; ‘TWO-ELECTRON ENERGY’ : SCF two-electron energy; ‘SCF TOTAL ENERGY’ : SCF total energy; ‘MP2 CORRELATION ENERGY’ : MP2 correlation energy. Parameters:. expected (str) – Reference FCIDUMP file against which computed is compared.; computed (str) – Input FCIDUMP file to compare against expected.; label (str) – string labeling the test. table of contents. compare_fcidumps; compare_fcidumps(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.compare_fcidumps.html:671,energy,energy,671,psi4manual/1.8.x/api/psi4.driver.p4util.compare_fcidumps.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.compare_fcidumps.html,12,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. compare_fcidumps. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. compare_fcidumps¶. psi4.driver.compare_fcidumps(expected, computed, label)[source]¶; Comparison function for FCIDUMP files.; Compares the first six below, then computes energies from MO integrals and compares the last four. ‘norb’ : number of basis functions; ‘nelec’ : number of electrons; ‘ms2’ : spin polarization of the system; ‘isym’ : symmetry of state (if present in FCIDUMP); ‘orbsym’ : list of symmetry labels of each orbital; ‘uhf’ : whether restricted or unrestricted; ‘ONE-ELECTRON ENERGY’ : SCF one-electron energy; ‘TWO-ELECTRON ENERGY’ : SCF two-electron energy; ‘SCF TOTAL ENERGY’ : SCF total energy; ‘MP2 CORRELATION ENERGY’ : MP2 correlation energy. Parameters:. expected (str) – Reference FCIDUMP file against which computed is compared.; computed (str) – Input FCIDUMP file to compare against expected.; label (str) – string labeling the test. table of contents. compare_fcidumps; compare_fcidumps(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.compare_fcidumps.html:664,energy,energy,664,psi4manual/1.9.x/api/psi4.driver.compare_fcidumps.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.compare_fcidumps.html,12,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. compare_fcidumps. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. compare_fcidumps¶. psi4.driver.p4util.compare_fcidumps(expected, computed, label)[source]¶; Comparison function for FCIDUMP files.; Compares the first six below, then computes energies from MO integrals and compares the last four. ‘norb’ : number of basis functions; ‘nelec’ : number of electrons; ‘ms2’ : spin polarization of the system; ‘isym’ : symmetry of state (if present in FCIDUMP); ‘orbsym’ : list of symmetry labels of each orbital; ‘uhf’ : whether restricted or unrestricted; ‘ONE-ELECTRON ENERGY’ : SCF one-electron energy; ‘TWO-ELECTRON ENERGY’ : SCF two-electron energy; ‘SCF TOTAL ENERGY’ : SCF total energy; ‘MP2 CORRELATION ENERGY’ : MP2 correlation energy. Parameters:. expected (str) – Reference FCIDUMP file against which computed is compared.; computed (str) – Input FCIDUMP file to compare against expected.; label (str) – string labeling the test. table of contents. compare_fcidumps; compare_fcidumps(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; compare_fcidumps. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.compare_fcidumps.html:671,energy,energy,671,psi4manual/1.9.x/api/psi4.driver.p4util.compare_fcidumps.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.compare_fcidumps.html,12,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. cubeprop() Generation of cube files — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Psithon Functions: Invoking a Calculation ». cubeprop() Generation of cube files¶; Code author: Robert M. Parrish and Francesco A. Evangelista; Section author: Francesco A. Evangelista. cubeprop(wfn)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals ; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). Introduction¶; Psi4 has the ability to export cube files that store information about; basis functions, molecular orbitals, the electron density, and; the electrostatic potential (ESP). Cube files store the value of a scalar; quantity on a regular Cartesian grid, and can be visualized with several; visualization programs, some of which are free, like VMD; (http://www.ks.uiuc.edu/Research/vmd/).; An example utilization of the code is:; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set basis cc-pvdz; set scf_type df; set freeze_core True; set cubeprop_tasks ['orbitals']; set cubeprop_orbitals [5,6,-5,-6]. E, wfn = energy('scf', return_wfn=True); cubeprop(wfn). In this example, the cubeprop(); call after the energy('scf') command; executes the cubeprop code. The array CUBEPROP_TASKS specifies which; tasks should be executed. In this case the task 'orbitals' generates cube; files for orbitals. The CUBEPROP_ORBITALS option specifies that cube files; should be generated only for alpha orbitals 5 (HOMO) and 6 (LUMO) ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/cubeprop-1.html:653,energy,energy,653,psi4manual/1.0.0/cubeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/cubeprop-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. cubeprop. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. cubeprop¶. psi4.driver.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. Added in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). table of contents. cubeprop; cubeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.cubeprop.html:482,energy,energy,482,psi4manual/master/api/psi4.driver.cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.cubeprop.html,4,['energy'],['energy']
Energy Efficiency,"﻿. cubeprop. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. cubeprop¶. psi4.driver.p4util.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. Added in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). table of contents. cubeprop; cubeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.cubeprop.html:489,energy,energy,489,psi4manual/master/api/psi4.driver.p4util.cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.cubeprop.html,4,['energy'],['energy']
Energy Efficiency,"﻿. cubeprop. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. cubeprop¶. psi4.driver.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. 1; 2; 3>>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). 1; 2; 3; 4; 5; 6>>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.cubeprop-1.html:466,energy,energy,466,psi4manual/1.2.1/api/psi4.driver.cubeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.cubeprop-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. cubeprop. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. cubeprop¶. psi4.driver.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.cubeprop-1.html:459,energy,energy,459,psi4manual/1.3.2/api/psi4.driver.cubeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.cubeprop-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. cubeprop. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. cubeprop¶. psi4.driver.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.cubeprop-1.html:468,energy,energy,468,psi4manual/1.4.0/api/psi4.driver.cubeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.cubeprop-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. cubeprop. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. cubeprop¶. psi4.driver.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.cubeprop-1.html:468,energy,energy,468,psi4manual/1.5.0/api/psi4.driver.cubeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.cubeprop-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. cubeprop. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. cubeprop¶. psi4.driver.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.cubeprop.html:468,energy,energy,468,psi4manual/1.6.x/api/psi4.driver.cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.cubeprop.html,4,['energy'],['energy']
Energy Efficiency,"﻿. cubeprop. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. cubeprop¶. psi4.driver.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.cubeprop.html:471,energy,energy,471,psi4manual/1.7.x/api/psi4.driver.cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.cubeprop.html,4,['energy'],['energy']
Energy Efficiency,"﻿. cubeprop. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. cubeprop¶. psi4.driver.p4util.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.cubeprop.html:478,energy,energy,478,psi4manual/1.7.x/api/psi4.driver.p4util.cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.cubeprop.html,4,['energy'],['energy']
Energy Efficiency,"﻿. cubeprop. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. cubeprop¶. psi4.driver.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). table of contents. cubeprop; cubeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.cubeprop.html:473,energy,energy,473,psi4manual/1.8.x/api/psi4.driver.cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.cubeprop.html,4,['energy'],['energy']
Energy Efficiency,"﻿. cubeprop. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. cubeprop¶. psi4.driver.p4util.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). table of contents. cubeprop; cubeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.cubeprop.html:480,energy,energy,480,psi4manual/1.8.x/api/psi4.driver.p4util.cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.cubeprop.html,4,['energy'],['energy']
Energy Efficiency,"﻿. cubeprop. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. cubeprop¶. psi4.driver.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). table of contents. cubeprop; cubeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.cubeprop.html:473,energy,energy,473,psi4manual/1.9.x/api/psi4.driver.cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.cubeprop.html,4,['energy'],['energy']
Energy Efficiency,"﻿. cubeprop. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. cubeprop¶. psi4.driver.p4util.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. >>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). >>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). table of contents. cubeprop; cubeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; cubeprop. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.cubeprop.html:480,energy,energy,480,psi4manual/1.9.x/api/psi4.driver.p4util.cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.cubeprop.html,4,['energy'],['energy']
Energy Efficiency,"﻿. diatomic — PSI4 [beta3] documentation. Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». Source code for diatomic; import PsiMod; from physconst import psi_bohr2angstroms, psi_hartree2aJ, psi_amu2kg, psi_h, psi_c; from math import sqrt, pi; from diatomic_fits import *. [docs]def diatomic_anharmonicity(rvals, energies):; """"""Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic ; constants. The r values provided must bracket the minimum energy point, or an error will result.; ; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. **Keywords**. :type rvals: list; :param rvals:. The bond lengths (in Angstrom) for which energies are provided of length either 5 or 9; but must be the same length as the energies array. :type energies: list; :param energies:. The energies (Eh) computed at the bond lengths in the rvals list. :returns: (*dict*) Keys: ""re"", ""r0"", ""we"", ""wexe"", ""nu"", ""ZPVE(harmonic)"", ""ZPVE(anharmonic)"", ""Be"", ""B0"", ""ae"", ""De""; corresponding to the spectroscopic constants in cm-1; """""". angstrom_to_bohr = 1.0 / psi_bohr2angstroms; angstrom_to_meter = 10e-10;; ; if len(rvals) != len(energies):; raise Exception(""The number of energies must match the number of distances""); ; npoints = len(rvals). if npoints != 5 and npoints != 9:; raise Exception(""Only 5- or 9-point fits are implemented right now""). PsiMod.print_out(""\n\nPerforming a %d-point fit\n"" % npoints); ; PsiMod.print_out(""\nOptimizing geometry based on current surface:\n\n"");; if (npoints == 5):; optx = rvals[2]; elif (npoints == 9):; optx = rvals[4]. mol = PsiMod.get_active_molecule(); natoms = mol.natom(); if natoms != 2:; raise Exception(""The current molecule must be a diatomic for this code to work!""); m1 = mol.mass(0); m2 = mol.m",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/diatomic.html:438,energy,energy,438,psi4manual/4.0b3/_modules/diatomic.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/diatomic.html,6,['energy'],['energy']
Energy Efficiency,"﻿. diatomic — PSI4 [beta4] documentation. Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». Source code for diatomic; import PsiMod; from physconst import psi_bohr2angstroms, psi_hartree2aJ, psi_amu2kg, psi_h, psi_c; from math import sqrt, pi; from diatomic_fits import *. [docs]def diatomic_anharmonicity(rvals, energies):; """"""Generates spectroscopic constants for a diatomic molecules.; Fits a diatomic potential energy curve using either a 5 or 9 point Legendre fit, locates the minimum; energy point, and then applies second order vibrational perturbation theory to obtain spectroscopic ; constants. The r values provided must bracket the minimum energy point, or an error will result.; ; A dictionary with the following keys, which correspond to spectroscopic constants, is returned:. :type rvals: list; :param rvals: The bond lengths (in Angstrom) for which energies are ; provided of length either 5 or 9 but must be the same length as ; the energies array. :type energies: list; :param energies: The energies (Eh) computed at the bond lengths in the rvals list. :returns: (*dict*) Keys: ""re"", ""r0"", ""we"", ""wexe"", ""nu"", ""ZPVE(harmonic)"", ""ZPVE(anharmonic)"", ""Be"", ""B0"", ""ae"", ""De""; corresponding to the spectroscopic constants in cm-1; """""". angstrom_to_bohr = 1.0 / psi_bohr2angstroms; angstrom_to_meter = 10e-10;; ; if len(rvals) != len(energies):; raise Exception(""The number of energies must match the number of distances""); ; npoints = len(rvals). if npoints != 5 and npoints != 9:; raise Exception(""Only 5- or 9-point fits are implemented right now""). PsiMod.print_out(""\n\nPerforming a %d-point fit\n"" % npoints); ; PsiMod.print_out(""\nOptimizing geometry based on current surface:\n\n"");; if (npoints == 5):; optx = rvals[2]; elif (npoints == 9):; optx = rvals[4]. mol = PsiMod.get_active_molecule(); natoms = mol.natom(); if natoms != 2:; raise Exception(""The current molecule must be a diatomic for this code to work!""); m1 = mol.mass(0); m2 = mol.mass(1). maxit",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/diatomic.html:438,energy,energy,438,psi4manual/4.0b4/_modules/diatomic.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/diatomic.html,6,['energy'],['energy']
Energy Efficiency,"﻿. driver — PSI4 [beta4] documentation. Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». Source code for driver; from __future__ import print_function; """"""Module with a *procedures* dictionary specifying available quantum; chemical methods and functions driving the main quantum chemical; functionality, namely single-point energies, geometry optimizations,; properties, and vibrational frequency calculations. """"""; import sys; import PsiMod; from proc import *; from text import *; from procutil import *; from functional import *; from psifiles import *; # never import wrappers or aliases into this file. # Procedure lookup tables; procedures = {; 'energy': {; 'scf' : run_scf,; 'mcscf' : run_mcscf,; 'dcft' : run_dcft,; 'dfmp2' : run_dfmp2,; 'df-mp2' : run_dfmp2,; 'conv-mp2' : run_mp2,; 'mp3' : run_mp3,; 'mp2.5' : run_mp2_5,; 'mp2' : run_mp2_select,; 'omp2' : run_omp2,; 'scs-omp2' : run_scs_omp2,; 'scsn-omp2' : run_scs_omp2,; 'scs-mi-omp2' : run_scs_omp2,; 'scs-omp2-vdw' : run_scs_omp2,; 'sos-omp2' : run_sos_omp2,; 'sos-pi-omp2' : run_sos_omp2,; 'omp3' : run_omp3,; 'scs-omp3' : run_scs_omp3,; 'scsn-omp3' : run_scs_omp3,; 'scs-mi-omp3' : run_scs_omp3,; 'scs-omp3-vdw' : run_scs_omp3,; 'sos-omp3' : run_sos_omp3,; 'sos-pi-omp3' : run_sos_omp3,; 'ocepa' : run_ocepa,; 'cepa0' : run_cepa0,; 'omp2.5' : run_omp2_5,; 'dftsapt' : run_dftsapt,; 'infsapt' : run_infsapt,; 'sapt0' : run_sapt,; 'sapt2' : run_sapt,; 'sapt2+' : run_sapt,; 'sapt2+(3)' : run_sapt,; 'sapt2+3' : run_sapt,; 'sapt2+(ccd)' : run_sapt,; 'sapt2+(3)(ccd)': run_sapt,; 'sapt2+3(ccd)' : run_sapt,; 'sapt0-ct' : run_sapt_ct,; 'sapt2-ct' : run_sapt_ct,; 'sapt2+-ct' : run_sapt_ct,; 'sapt2+(3)-ct' : run_sapt_ct,; 'sapt2+3-ct' : run_sapt_ct,; 'sapt2+(ccd)-ct' : run_sapt_ct,; 'sapt2+(3)(ccd)-ct' : run_sapt_ct,; 'sapt2+3(ccd)-ct' : run_sapt_ct,; 'mp2c' : run_mp2c,; 'ccenergy' : run_ccenergy, # full control over ccenergy; 'ccsd' : run_ccenergy,; 'ccsd(t)' : run_ccenergy,; 'cc2' : run_ccenergy,; 'cc3' : ru",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/driver.html:676,energy,energy,676,psi4manual/4.0b4/_modules/driver.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/driver.html,2,['energy'],['energy']
Energy Efficiency,"﻿. energies_from_fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. energies_from_fcidump¶. psi4.driver.energies_from_fcidump(intdump)[source]¶; From integrals dictionary generated from fcidump_from_file(),; compute energies. Return type:; Dict[str, float]. Returns:; a dictionary with energies. ’NUCLEAR REPULSION ENERGY’; ’ONE-ELECTRON ENERGY’; ’TWO-ELECTRON ENERGY’; ’SCF TOTAL ENERGY’; ’MP2 CORRELATION ENERGY’. table of contents. energies_from_fcidump; energies_from_fcidump(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.energies_from_fcidump.html:407,ENERGY,ENERGY,407,psi4manual/master/api/psi4.driver.energies_from_fcidump.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.energies_from_fcidump.html,5,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. energies_from_fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. energies_from_fcidump¶. psi4.driver.p4util.energies_from_fcidump(intdump)[source]¶; From integrals dictionary generated from fcidump_from_file(),; compute energies. Return type:; Dict[str, float]. Returns:; a dictionary with energies. ’NUCLEAR REPULSION ENERGY’; ’ONE-ELECTRON ENERGY’; ’TWO-ELECTRON ENERGY’; ’SCF TOTAL ENERGY’; ’MP2 CORRELATION ENERGY’. table of contents. energies_from_fcidump; energies_from_fcidump(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.energies_from_fcidump.html:414,ENERGY,ENERGY,414,psi4manual/master/api/psi4.driver.p4util.energies_from_fcidump.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.energies_from_fcidump.html,5,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. energies_from_fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. energies_from_fcidump¶. psi4.driver.energies_from_fcidump(intdump)[source]¶; From integrals dictionary generated from fcidump_from_file(),; compute energies. Return type:; Dict[str, float]. Returns:; a dictionary with energies. ’NUCLEAR REPULSION ENERGY’; ’ONE-ELECTRON ENERGY’; ’TWO-ELECTRON ENERGY’; ’SCF TOTAL ENERGY’; ’MP2 CORRELATION ENERGY’. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.energies_from_fcidump.html:398,ENERGY,ENERGY,398,psi4manual/1.7.x/api/psi4.driver.energies_from_fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.energies_from_fcidump.html,5,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. energies_from_fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. energies_from_fcidump¶. psi4.driver.p4util.energies_from_fcidump(intdump)[source]¶; From integrals dictionary generated from fcidump_from_file(),; compute energies. Return type:; Dict[str, float]. Returns:; a dictionary with energies. ’NUCLEAR REPULSION ENERGY’; ’ONE-ELECTRON ENERGY’; ’TWO-ELECTRON ENERGY’; ’SCF TOTAL ENERGY’; ’MP2 CORRELATION ENERGY’. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.energies_from_fcidump.html:405,ENERGY,ENERGY,405,psi4manual/1.7.x/api/psi4.driver.p4util.energies_from_fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.energies_from_fcidump.html,5,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. energies_from_fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. energies_from_fcidump¶. psi4.driver.energies_from_fcidump(intdump)[source]¶; From integrals dictionary generated from fcidump_from_file(),; compute energies. Return type:; Dict[str, float]. Returns:; a dictionary with energies. ’NUCLEAR REPULSION ENERGY’; ’ONE-ELECTRON ENERGY’; ’TWO-ELECTRON ENERGY’; ’SCF TOTAL ENERGY’; ’MP2 CORRELATION ENERGY’. table of contents. energies_from_fcidump; energies_from_fcidump(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.energies_from_fcidump.html:400,ENERGY,ENERGY,400,psi4manual/1.8.x/api/psi4.driver.energies_from_fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.energies_from_fcidump.html,5,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. energies_from_fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. energies_from_fcidump¶. psi4.driver.p4util.energies_from_fcidump(intdump)[source]¶; From integrals dictionary generated from fcidump_from_file(),; compute energies. Return type:; Dict[str, float]. Returns:; a dictionary with energies. ’NUCLEAR REPULSION ENERGY’; ’ONE-ELECTRON ENERGY’; ’TWO-ELECTRON ENERGY’; ’SCF TOTAL ENERGY’; ’MP2 CORRELATION ENERGY’. table of contents. energies_from_fcidump; energies_from_fcidump(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.energies_from_fcidump.html:407,ENERGY,ENERGY,407,psi4manual/1.8.x/api/psi4.driver.p4util.energies_from_fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.energies_from_fcidump.html,5,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. energies_from_fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. energies_from_fcidump¶. psi4.driver.energies_from_fcidump(intdump)[source]¶; From integrals dictionary generated from fcidump_from_file(),; compute energies. Return type:; Dict[str, float]. Returns:; a dictionary with energies. ’NUCLEAR REPULSION ENERGY’; ’ONE-ELECTRON ENERGY’; ’TWO-ELECTRON ENERGY’; ’SCF TOTAL ENERGY’; ’MP2 CORRELATION ENERGY’. table of contents. energies_from_fcidump; energies_from_fcidump(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.energies_from_fcidump.html:400,ENERGY,ENERGY,400,psi4manual/1.9.x/api/psi4.driver.energies_from_fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.energies_from_fcidump.html,5,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. energies_from_fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. energies_from_fcidump¶. psi4.driver.p4util.energies_from_fcidump(intdump)[source]¶; From integrals dictionary generated from fcidump_from_file(),; compute energies. Return type:; Dict[str, float]. Returns:; a dictionary with energies. ’NUCLEAR REPULSION ENERGY’; ’ONE-ELECTRON ENERGY’; ’TWO-ELECTRON ENERGY’; ’SCF TOTAL ENERGY’; ’MP2 CORRELATION ENERGY’. table of contents. energies_from_fcidump; energies_from_fcidump(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; energies_from_fcidump. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.energies_from_fcidump.html:407,ENERGY,ENERGY,407,psi4manual/1.9.x/api/psi4.driver.p4util.energies_from_fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.energies_from_fcidump.html,5,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. energy. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; energy. energy¶. psi4.driver.energy(name, **kwargs)[source]¶; Function to compute the single-point electronic energy. Returns:; float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. write_orbitals (str, boolean) – filename || \(\Rightarrow\) 'on' \(\Leftarrow\) || 'off'; (str) Save wfn containing current orbitals to the given file name after each SCF iteration; and retain after PSI4 finishes.; (boolean) Turns writing the orbitals after the converged SCF on/off.; Orbital file will be deleted unless PSI4 is called with -m flag. restart_file (str) – ['file.1, file.32] || ./file || etc.; Existing files to be renamed and copied for calculation restart, e.g. a serialized wfn or module-specific binary data. name; calls method. efp; (with LibEFP) effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual] [details]. hf; HF self consistent field (SCF) [manual] [details]. qchf; quadratically-convergent HF. hf3c; HF with dispersion, BSSE, SRB, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [manual]. b973c; B97(GGA) with dispersion, SRB, and basis set corrections [manual]. r2scan3c; r2SCAN with dispersion, BSSE, and basis set co",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.energy.html:3,energy,energy,3,psi4manual/master/api/psi4.driver.energy.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.energy.html,21,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. energy. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. energy¶. psi4.driver.energy(name, **kwargs)[source]¶; Function to compute the single-point electronic energy. Returns:float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. restart_file (string) – ['file.1, file.32] || ./file || etc.; Binary data files to be renamed for calculation restart. name; calls method. efp; effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. hf; HF self consistent field (SCF) [manual]. hf3c; HF with dispersion, BSSE, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [manual]. dcft; density cumulant functional theory [manual]. mp2; 2nd-order Møller–Plesset perturbation theory (MP2) [manual] [details]. mp3; 3rd-order Møller–Plesset perturbation theory (MP3) [manual] [details]. fno-mp3; MP3 with frozen natural orbitals [manual]. mp2.5; average of MP2 and MP3 [manual] [details]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. fno-mp4(sdq); MP4 (less triples) with frozen natural orbitals [manual]. mp4; full MP4 [manual] [details]. fno-mp4; full MP4 with frozen natural orbitals [manual]. mpn; nth-order Møller–Plesset (MP) perturbation theory [manual]. zaptn; nth-order z-avera",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.energy-1.html:3,energy,energy,3,psi4manual/1.2.1/api/psi4.driver.energy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.energy-1.html,16,['energy'],['energy']
Energy Efficiency,"﻿. energy. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. energy¶. psi4.driver.energy(name, **kwargs)[source]¶; Function to compute the single-point electronic energy. Returns:float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. restart_file (string) – ['file.1, file.32] || ./file || etc.; Binary data files to be renamed for calculation restart. name; calls method. efp; effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. hf; HF self consistent field (SCF) [manual]. hf3c; HF with dispersion, BSSE, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [manual]. dcft; density cumulant functional theory [manual]. mp2; 2nd-order Møller–Plesset perturbation theory (MP2) [manual] [details]. mp3; 3rd-order Møller–Plesset perturbation theory (MP3) [manual] [details]. fno-mp3; MP3 with frozen natural orbitals [manual]. mp2.5; average of MP2 and MP3 [manual] [details]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. fno-mp4(sdq); MP4 (less triples) with frozen natural orbitals [manual]. mp4; full MP4 [manual] [details]. fno-mp4; full MP4 with frozen natural orbitals [manual]. mpn; nth-order Møller–Plesset (MP) perturbation theory [manual]. zaptn; nth-order z-avera",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.energy-1.html:3,energy,energy,3,psi4manual/1.3.2/api/psi4.driver.energy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.energy-1.html,16,['energy'],['energy']
Energy Efficiency,"﻿. energy. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; energy. energy¶. psi4.driver.energy(name, **kwargs)[source]¶; Function to compute the single-point electronic energy. Returns; float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. write_orbitals (str, boolean) – filename || \(\Rightarrow\) 'on' \(\Leftarrow\) || 'off'; (str) Save wfn containing current orbitals to the given file name after each SCF iteration; and retain after PSI4 finishes.; (boolean) Turns writing the orbitals after the converged SCF on/off.; Orbital file will be deleted unless PSI4 is called with -m flag. restart_file (str) – ['file.1, file.32] || ./file || etc.; Existing files to be renamed and copied for calculation restart, e.g. a serialized wfn or module-specific binary data. name; calls method. efp; effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. hf; HF self consistent field (SCF) [manual]. hf3c; HF with dispersion, BSSE, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [manual]. dct; density cumulant (functional) theory [manual]. mp2; 2nd-order Møller–Plesset perturbation theory (MP2) [manual] [details]. mp3; 3rd-order Møller–Plesset perturbation theory (MP3) [manual] [details]. fno-mp3; MP3 ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.energy-1.html:3,energy,energy,3,psi4manual/1.4.0/api/psi4.driver.energy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.energy-1.html,42,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. energy. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; energy. energy¶. psi4.driver.energy(name, **kwargs)[source]¶; Function to compute the single-point electronic energy. Returns; float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. write_orbitals (str, boolean) – filename || \(\Rightarrow\) 'on' \(\Leftarrow\) || 'off'; (str) Save wfn containing current orbitals to the given file name after each SCF iteration; and retain after PSI4 finishes.; (boolean) Turns writing the orbitals after the converged SCF on/off.; Orbital file will be deleted unless PSI4 is called with -m flag. restart_file (str) – ['file.1, file.32] || ./file || etc.; Existing files to be renamed and copied for calculation restart, e.g. a serialized wfn or module-specific binary data. name; calls method. efp; effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. hf; HF self consistent field (SCF) [manual]. hf3c; HF with dispersion, BSSE, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [manual]. dct; density cumulant (functional) theory [manual]. mp2; 2nd-order Møller–Plesset perturbation theory (MP2) [manual] [details]. dlpno-mp2; local MP2 with pair natural orbital domains [manual]. mp3; 3rd-order Møller–Pl",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.energy-1.html:3,energy,energy,3,psi4manual/1.5.0/api/psi4.driver.energy-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.energy-1.html,42,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. energy. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; energy. energy¶. psi4.driver.energy(name, **kwargs)[source]¶; Function to compute the single-point electronic energy. Returns; float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. write_orbitals (str, boolean) – filename || \(\Rightarrow\) 'on' \(\Leftarrow\) || 'off'; (str) Save wfn containing current orbitals to the given file name after each SCF iteration; and retain after PSI4 finishes.; (boolean) Turns writing the orbitals after the converged SCF on/off.; Orbital file will be deleted unless PSI4 is called with -m flag. restart_file (str) – ['file.1, file.32] || ./file || etc.; Existing files to be renamed and copied for calculation restart, e.g. a serialized wfn or module-specific binary data. name; calls method. efp; effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. hf; HF self consistent field (SCF) [manual]. hf3c; HF with dispersion, BSSE, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [manual]. dct; density cumulant (functional) theory [manual]. mp2; 2nd-order Møller–Plesset perturbation theory (MP2) [manual] [details]. dlpno-mp2; local MP2 with pair natural orbital domains [manual]. mp3; 3rd-order Møller–Pl",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.energy.html:3,energy,energy,3,psi4manual/1.6.x/api/psi4.driver.energy.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.energy.html,21,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. energy. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; energy. energy¶. psi4.driver.energy(name, **kwargs)[source]¶; Function to compute the single-point electronic energy. Returns:; float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. write_orbitals (str, boolean) – filename || \(\Rightarrow\) 'on' \(\Leftarrow\) || 'off'; (str) Save wfn containing current orbitals to the given file name after each SCF iteration; and retain after PSI4 finishes.; (boolean) Turns writing the orbitals after the converged SCF on/off.; Orbital file will be deleted unless PSI4 is called with -m flag. restart_file (str) – ['file.1, file.32] || ./file || etc.; Existing files to be renamed and copied for calculation restart, e.g. a serialized wfn or module-specific binary data. name; calls method. efp; (with LibEFP) effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual] [details]. hf; HF self consistent field (SCF) [manual] [details]. qchf; quadratically-convergent HF. hf3c; HF with dispersion, BSSE, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [manual]. dct; density cumulant (functional) theory [manual]. mp2; 2nd-order Møller–Plesset perturbation theory (MP2) [manual] [details]. scs-mp2; spin-co",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.energy.html:3,energy,energy,3,psi4manual/1.7.x/api/psi4.driver.energy.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.energy.html,21,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. energy. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; energy. energy¶. psi4.driver.energy(name, **kwargs)[source]¶; Function to compute the single-point electronic energy. Returns:; float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. write_orbitals (str, boolean) – filename || \(\Rightarrow\) 'on' \(\Leftarrow\) || 'off'; (str) Save wfn containing current orbitals to the given file name after each SCF iteration; and retain after PSI4 finishes.; (boolean) Turns writing the orbitals after the converged SCF on/off.; Orbital file will be deleted unless PSI4 is called with -m flag. restart_file (str) – ['file.1, file.32] || ./file || etc.; Existing files to be renamed and copied for calculation restart, e.g. a serialized wfn or module-specific binary data. name; calls method. efp; (with LibEFP) effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual] [details]. hf; HF self consistent field (SCF) [manual] [details]. qchf; quadratically-convergent HF. hf3c; HF with dispersion, BSSE, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [manual]. dct; density cumulant (functional) theory [manual]. mp2; 2nd-order Møller–Plesset perturbation theory (MP2) [manual] [details]. scs-mp2; spin-",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.energy.html:3,energy,energy,3,psi4manual/1.8.x/api/psi4.driver.energy.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.energy.html,21,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. energy. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; energy. energy¶. psi4.driver.energy(name, **kwargs)[source]¶; Function to compute the single-point electronic energy. Returns:; float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. write_orbitals (str, boolean) – filename || \(\Rightarrow\) 'on' \(\Leftarrow\) || 'off'; (str) Save wfn containing current orbitals to the given file name after each SCF iteration; and retain after PSI4 finishes.; (boolean) Turns writing the orbitals after the converged SCF on/off.; Orbital file will be deleted unless PSI4 is called with -m flag. restart_file (str) – ['file.1, file.32] || ./file || etc.; Existing files to be renamed and copied for calculation restart, e.g. a serialized wfn or module-specific binary data. name; calls method. efp; (with LibEFP) effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual] [details]. hf; HF self consistent field (SCF) [manual] [details]. qchf; quadratically-convergent HF. hf3c; HF with dispersion, BSSE, SRB, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [manual]. b973c; B97(GGA) with dispersion, SRB, and basis set corrections [manual]. r2scan3c; r2SCAN with dispersion, BSSE, and basis set correctio",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.energy.html:3,energy,energy,3,psi4manual/1.9.x/api/psi4.driver.energy.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.energy.html,21,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. expand_psivars. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; expand_psivars. expand_psivars¶. psi4.driver.p4util.expand_psivars(pvdefs, verbose=None)[source]¶; From rules on building QCVariables from others, set new variables to; P::e if all the contributors are available. Parameters:. pvdefs (Dict[str, Dict[str, Union[List[str], Callable]]]) – Dictionary with keys with names of QCVariables to be created and values; with dictionary of two keys: ‘args’, the QCVariables that contribute to; the key and ‘func’, a function (or lambda) to combine them.; verbose (Optional[int]) – Control print level. If unspecified (None), value taken from; PRINT. Status printing when verbose > 2. Examples; >>> pv1 = dict(); >>> pv1['SAPT CCD DISP'] = {'func': lambda x: x[0] * x[1] + x[2] + x[3] + x[4],; 'args': ['SAPT EXCHSCAL', 'SAPT EXCH-DISP20 ENERGY', 'SAPT DISP2(CCD) ENERGY',; 'SAPT DISP22(S)(CCD) ENERGY', 'SAPT EST.DISP22(T)(CCD) ENERGY']}; >>> pv1['SAPT0 ELST ENERGY'] = {'func': sum, 'args': ['SAPT ELST10,R ENERGY']}; >>> expand_psivars(pv1). table of contents. expand_psivars; expand_psivars(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; expand_psivars. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.expand_psivars.html:905,ENERGY,ENERGY,905,psi4manual/master/api/psi4.driver.p4util.expand_psivars.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.expand_psivars.html,6,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. expand_psivars. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; expand_psivars. expand_psivars¶. psi4.driver.p4util.expand_psivars(pvdefs, verbose=None)[source]¶; From rules on building QCVariables from others, set new variables to; P::e if all the contributors are available. Parameters:. pvdefs (Dict[str, Dict[str, Union[List[str], Callable]]]) – Dictionary with keys with names of QCVariables to be created and values; with dictionary of two keys: ‘args’, the QCVariables that contribute to; the key and ‘func’, a function (or lambda) to combine them.; verbose (Optional[int]) – Control print level. If unspecified (None), value taken from; PRINT. Status printing when verbose > 2. Examples; >>> pv1 = dict(); >>> pv1['SAPT CCD DISP'] = {'func': lambda x: x[0] * x[1] + x[2] + x[3] + x[4],; 'args': ['SAPT EXCHSCAL', 'SAPT EXCH-DISP20 ENERGY', 'SAPT DISP2(CCD) ENERGY',; 'SAPT DISP22(S)(CCD) ENERGY', 'SAPT EST.DISP22(T)(CCD) ENERGY']}; >>> pv1['SAPT0 ELST ENERGY'] = {'func': sum, 'args': ['SAPT ELST10,R ENERGY']}; >>> expand_psivars(pv1). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; expand_psivars. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.expand_psivars.html:896,ENERGY,ENERGY,896,psi4manual/1.7.x/api/psi4.driver.p4util.expand_psivars.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.expand_psivars.html,6,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. expand_psivars. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; expand_psivars. expand_psivars¶. psi4.driver.p4util.expand_psivars(pvdefs, verbose=None)[source]¶; From rules on building QCVariables from others, set new variables to; P::e if all the contributors are available. Parameters:. pvdefs (Dict[str, Dict[str, Union[List[str], Callable]]]) – Dictionary with keys with names of QCVariables to be created and values; with dictionary of two keys: ‘args’, the QCVariables that contribute to; the key and ‘func’, a function (or lambda) to combine them.; verbose (Optional[int]) – Control print level. If unspecified (None), value taken from; PRINT. Status printing when verbose > 2. Examples; >>> pv1 = dict(); >>> pv1['SAPT CCD DISP'] = {'func': lambda x: x[0] * x[1] + x[2] + x[3] + x[4],; 'args': ['SAPT EXCHSCAL', 'SAPT EXCH-DISP20 ENERGY', 'SAPT DISP2(CCD) ENERGY',; 'SAPT DISP22(S)(CCD) ENERGY', 'SAPT EST.DISP22(T)(CCD) ENERGY']}; >>> pv1['SAPT0 ELST ENERGY'] = {'func': sum, 'args': ['SAPT ELST10,R ENERGY']}; >>> expand_psivars(pv1). table of contents. expand_psivars; expand_psivars(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; expand_psivars. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.expand_psivars.html:898,ENERGY,ENERGY,898,psi4manual/1.8.x/api/psi4.driver.p4util.expand_psivars.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.expand_psivars.html,6,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. expand_psivars. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; expand_psivars. expand_psivars¶. psi4.driver.p4util.expand_psivars(pvdefs, verbose=None)[source]¶; From rules on building QCVariables from others, set new variables to; P::e if all the contributors are available. Parameters:. pvdefs (Dict[str, Dict[str, Union[List[str], Callable]]]) – Dictionary with keys with names of QCVariables to be created and values; with dictionary of two keys: ‘args’, the QCVariables that contribute to; the key and ‘func’, a function (or lambda) to combine them.; verbose (Optional[int]) – Control print level. If unspecified (None), value taken from; PRINT. Status printing when verbose > 2. Examples; >>> pv1 = dict(); >>> pv1['SAPT CCD DISP'] = {'func': lambda x: x[0] * x[1] + x[2] + x[3] + x[4],; 'args': ['SAPT EXCHSCAL', 'SAPT EXCH-DISP20 ENERGY', 'SAPT DISP2(CCD) ENERGY',; 'SAPT DISP22(S)(CCD) ENERGY', 'SAPT EST.DISP22(T)(CCD) ENERGY']}; >>> pv1['SAPT0 ELST ENERGY'] = {'func': sum, 'args': ['SAPT ELST10,R ENERGY']}; >>> expand_psivars(pv1). table of contents. expand_psivars; expand_psivars(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; expand_psivars. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.expand_psivars.html:898,ENERGY,ENERGY,898,psi4manual/1.9.x/api/psi4.driver.p4util.expand_psivars.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.expand_psivars.html,6,['ENERGY'],['ENERGY']
Energy Efficiency,"﻿. fchk. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. fchk¶. psi4.driver.fchk(wfn, filename)[source]¶; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:None. Parameters:; filename (string) – destination file name for FCHK file; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file. Examples:. 1; 2; 3>>> # [1] FCHK file for DFT calculation; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> fchk(wfn, 'mycalc.fchk'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.fchk-1.html:514,energy,energy,514,psi4manual/1.2.1/api/psi4.driver.fchk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.fchk-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fchk. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. fchk¶. psi4.driver.fchk(wfn, filename)[source]¶; Function to write wavefunction information in wfn to filename in; Gaussian FCHK format. New in version 0.6. Returns:None. Parameters:; filename (string) – destination file name for FCHK file; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate fchk file. Notes. A description of the FCHK format is http://wild.life.nctu.edu.tw/~jsyu/compchem/g09/g09ur/f_formchk.htm; The allowed headers for methods are general and limited, i.e., “Total SCF|MP2|CI|CC Density”,; so “CC” is always used for the post-HF case. Examples:. >>> # [1] FCHK file for DFT calculation; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> fchk(wfn, 'mycalc.fchk'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.fchk-1.html:759,energy,energy,759,psi4manual/1.3.2/api/psi4.driver.fchk-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.fchk-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. fcidump¶. psi4.driver.fcidump(wfn, fname='INTDUMP', oe_ints=None)[source]¶; Save integrals to file in FCIDUMP format as defined in Comp. Phys. Commun. 54 75 (1989),; https://doi.org/10.1016/0010-4655(89)90033-7 .; Additional one-electron integrals, including orbital energies, can also be saved.; This latter format can be used with the HANDE QMC code but is not standard. Parameters:. wfn (Wavefunction) – Set of molecule, basis, orbitals from which to generate FCIDUMP file.; fname (str) – Name of the integrals file, defaults to INTDUMP.; oe_ints (Optional[List]) – List of additional one-electron integrals to save to file. So far only; EIGENVALUES is a valid option. Raises:; ValidationError – When SCF wavefunction is not RHF. Examples; >>> # [1] Save one- and two-electron integrals to standard FCIDUMP format; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn). >>> # [2] Save orbital energies, one- and two-electron integrals.; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn, oe_ints=['EIGENVALUES']). table of contents. fcidump; fcidump(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.fcidump.html:963,energy,energy,963,psi4manual/master/api/psi4.driver.fcidump.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.fcidump.html,4,['energy'],['energy']
Energy Efficiency,"﻿. fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. fcidump¶. psi4.driver.p4util.fcidump(wfn, fname='INTDUMP', oe_ints=None)[source]¶; Save integrals to file in FCIDUMP format as defined in Comp. Phys. Commun. 54 75 (1989),; https://doi.org/10.1016/0010-4655(89)90033-7 .; Additional one-electron integrals, including orbital energies, can also be saved.; This latter format can be used with the HANDE QMC code but is not standard. Parameters:. wfn (Wavefunction) – Set of molecule, basis, orbitals from which to generate FCIDUMP file.; fname (str) – Name of the integrals file, defaults to INTDUMP.; oe_ints (Optional[List]) – List of additional one-electron integrals to save to file. So far only; EIGENVALUES is a valid option. Raises:; ValidationError – When SCF wavefunction is not RHF. Examples; >>> # [1] Save one- and two-electron integrals to standard FCIDUMP format; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn). >>> # [2] Save orbital energies, one- and two-electron integrals.; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn, oe_ints=['EIGENVALUES']). table of contents. fcidump; fcidump(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.fcidump.html:970,energy,energy,970,psi4manual/master/api/psi4.driver.p4util.fcidump.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.fcidump.html,4,['energy'],['energy']
Energy Efficiency,"﻿. fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. fcidump¶. psi4.driver.fcidump(wfn, fname='INTDUMP', oe_ints=None)[source]¶; Save integrals to file in FCIDUMP format as defined in Comp. Phys. Commun. 54 75 (1989); Additional one-electron integrals, including orbital energies, can also be saved.; This latter format can be used with the HANDE QMC code but is not standard. Returns:None. Raises:ValidationError when SCF wavefunction is not RHF. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files; fname – name of the integrals file, defaults to INTDUMP; oe_ints – list of additional one-electron integrals to save to file. So far only EIGENVALUES is a valid option. Examples:. 1; 2; 3>>> # [1] Save one- and two-electron integrals to standard FCIDUMP format; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn). 1; 2; 3>>> # [2] Save orbital energies, one- and two-electron integrals.; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn, oe_ints=['EIGENVALUES']). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.fcidump-1.html:888,energy,energy,888,psi4manual/1.2.1/api/psi4.driver.fcidump-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.fcidump-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. fcidump¶. psi4.driver.fcidump(wfn, fname='INTDUMP', oe_ints=None)[source]¶; Save integrals to file in FCIDUMP format as defined in Comp. Phys. Commun. 54 75 (1989); Additional one-electron integrals, including orbital energies, can also be saved.; This latter format can be used with the HANDE QMC code but is not standard. Returns:None. Raises:ValidationError when SCF wavefunction is not RHF. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files; fname – name of the integrals file, defaults to INTDUMP; oe_ints – list of additional one-electron integrals to save to file. So far only EIGENVALUES is a valid option. Examples:. >>> # [1] Save one- and two-electron integrals to standard FCIDUMP format; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn). >>> # [2] Save orbital energies, one- and two-electron integrals.; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn, oe_ints=['EIGENVALUES']). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.fcidump-1.html:881,energy,energy,881,psi4manual/1.3.2/api/psi4.driver.fcidump-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.fcidump-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. fcidump¶. psi4.driver.fcidump(wfn, fname='INTDUMP', oe_ints=None)[source]¶; Save integrals to file in FCIDUMP format as defined in Comp. Phys. Commun. 54 75 (1989); Additional one-electron integrals, including orbital energies, can also be saved.; This latter format can be used with the HANDE QMC code but is not standard. Returns; None. Raises; ValidationError when SCF wavefunction is not RHF. Parameters. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files; fname – name of the integrals file, defaults to INTDUMP; oe_ints – list of additional one-electron integrals to save to file. So far only EIGENVALUES is a valid option. Examples. >>> # [1] Save one- and two-electron integrals to standard FCIDUMP format; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn). >>> # [2] Save orbital energies, one- and two-electron integrals.; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn, oe_ints=['EIGENVALUES']). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.fcidump-1.html:888,energy,energy,888,psi4manual/1.4.0/api/psi4.driver.fcidump-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.fcidump-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. fcidump¶. psi4.driver.fcidump(wfn, fname='INTDUMP', oe_ints=None)[source]¶; Save integrals to file in FCIDUMP format as defined in Comp. Phys. Commun. 54 75 (1989); Additional one-electron integrals, including orbital energies, can also be saved.; This latter format can be used with the HANDE QMC code but is not standard. Returns; None. Raises; ValidationError when SCF wavefunction is not RHF. Parameters. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files; fname – name of the integrals file, defaults to INTDUMP; oe_ints – list of additional one-electron integrals to save to file. So far only EIGENVALUES is a valid option. Examples. >>> # [1] Save one- and two-electron integrals to standard FCIDUMP format; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn). >>> # [2] Save orbital energies, one- and two-electron integrals.; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn, oe_ints=['EIGENVALUES']). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.fcidump-1.html:888,energy,energy,888,psi4manual/1.5.0/api/psi4.driver.fcidump-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.fcidump-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. fcidump¶. psi4.driver.fcidump(wfn, fname='INTDUMP', oe_ints=None)[source]¶; Save integrals to file in FCIDUMP format as defined in Comp. Phys. Commun. 54 75 (1989); Additional one-electron integrals, including orbital energies, can also be saved.; This latter format can be used with the HANDE QMC code but is not standard. Returns; None. Raises; ValidationError when SCF wavefunction is not RHF. Parameters. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files; fname – name of the integrals file, defaults to INTDUMP; oe_ints – list of additional one-electron integrals to save to file. So far only EIGENVALUES is a valid option. Examples. >>> # [1] Save one- and two-electron integrals to standard FCIDUMP format; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn). >>> # [2] Save orbital energies, one- and two-electron integrals.; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn, oe_ints=['EIGENVALUES']). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.fcidump.html:888,energy,energy,888,psi4manual/1.6.x/api/psi4.driver.fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.fcidump.html,4,['energy'],['energy']
Energy Efficiency,"﻿. fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. fcidump¶. psi4.driver.fcidump(wfn, fname='INTDUMP', oe_ints=None)[source]¶; Save integrals to file in FCIDUMP format as defined in Comp. Phys. Commun. 54 75 (1989),; https://doi.org/10.1016/0010-4655(89)90033-7 .; Additional one-electron integrals, including orbital energies, can also be saved.; This latter format can be used with the HANDE QMC code but is not standard. Parameters:. wfn (Wavefunction) – Set of molecule, basis, orbitals from which to generate FCIDUMP file.; fname (str) – Name of the integrals file, defaults to INTDUMP.; oe_ints (Optional[List]) – List of additional one-electron integrals to save to file. So far only; EIGENVALUES is a valid option. Raises:; ValidationError – When SCF wavefunction is not RHF. Examples; >>> # [1] Save one- and two-electron integrals to standard FCIDUMP format; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn). >>> # [2] Save orbital energies, one- and two-electron integrals.; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn, oe_ints=['EIGENVALUES']). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.fcidump.html:954,energy,energy,954,psi4manual/1.7.x/api/psi4.driver.fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.fcidump.html,4,['energy'],['energy']
Energy Efficiency,"﻿. fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. fcidump¶. psi4.driver.p4util.fcidump(wfn, fname='INTDUMP', oe_ints=None)[source]¶; Save integrals to file in FCIDUMP format as defined in Comp. Phys. Commun. 54 75 (1989),; https://doi.org/10.1016/0010-4655(89)90033-7 .; Additional one-electron integrals, including orbital energies, can also be saved.; This latter format can be used with the HANDE QMC code but is not standard. Parameters:. wfn (Wavefunction) – Set of molecule, basis, orbitals from which to generate FCIDUMP file.; fname (str) – Name of the integrals file, defaults to INTDUMP.; oe_ints (Optional[List]) – List of additional one-electron integrals to save to file. So far only; EIGENVALUES is a valid option. Raises:; ValidationError – When SCF wavefunction is not RHF. Examples; >>> # [1] Save one- and two-electron integrals to standard FCIDUMP format; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn). >>> # [2] Save orbital energies, one- and two-electron integrals.; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn, oe_ints=['EIGENVALUES']). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.fcidump.html:961,energy,energy,961,psi4manual/1.7.x/api/psi4.driver.p4util.fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.fcidump.html,4,['energy'],['energy']
Energy Efficiency,"﻿. fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. fcidump¶. psi4.driver.fcidump(wfn, fname='INTDUMP', oe_ints=None)[source]¶; Save integrals to file in FCIDUMP format as defined in Comp. Phys. Commun. 54 75 (1989),; https://doi.org/10.1016/0010-4655(89)90033-7 .; Additional one-electron integrals, including orbital energies, can also be saved.; This latter format can be used with the HANDE QMC code but is not standard. Parameters:. wfn (Wavefunction) – Set of molecule, basis, orbitals from which to generate FCIDUMP file.; fname (str) – Name of the integrals file, defaults to INTDUMP.; oe_ints (Optional[List]) – List of additional one-electron integrals to save to file. So far only; EIGENVALUES is a valid option. Raises:; ValidationError – When SCF wavefunction is not RHF. Examples; >>> # [1] Save one- and two-electron integrals to standard FCIDUMP format; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn). >>> # [2] Save orbital energies, one- and two-electron integrals.; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn, oe_ints=['EIGENVALUES']). table of contents. fcidump; fcidump(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.fcidump.html:956,energy,energy,956,psi4manual/1.8.x/api/psi4.driver.fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.fcidump.html,4,['energy'],['energy']
Energy Efficiency,"﻿. fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. fcidump¶. psi4.driver.p4util.fcidump(wfn, fname='INTDUMP', oe_ints=None)[source]¶; Save integrals to file in FCIDUMP format as defined in Comp. Phys. Commun. 54 75 (1989),; https://doi.org/10.1016/0010-4655(89)90033-7 .; Additional one-electron integrals, including orbital energies, can also be saved.; This latter format can be used with the HANDE QMC code but is not standard. Parameters:. wfn (Wavefunction) – Set of molecule, basis, orbitals from which to generate FCIDUMP file.; fname (str) – Name of the integrals file, defaults to INTDUMP.; oe_ints (Optional[List]) – List of additional one-electron integrals to save to file. So far only; EIGENVALUES is a valid option. Raises:; ValidationError – When SCF wavefunction is not RHF. Examples; >>> # [1] Save one- and two-electron integrals to standard FCIDUMP format; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn). >>> # [2] Save orbital energies, one- and two-electron integrals.; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn, oe_ints=['EIGENVALUES']). table of contents. fcidump; fcidump(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.fcidump.html:963,energy,energy,963,psi4manual/1.8.x/api/psi4.driver.p4util.fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.fcidump.html,4,['energy'],['energy']
Energy Efficiency,"﻿. fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. fcidump¶. psi4.driver.fcidump(wfn, fname='INTDUMP', oe_ints=None)[source]¶; Save integrals to file in FCIDUMP format as defined in Comp. Phys. Commun. 54 75 (1989),; https://doi.org/10.1016/0010-4655(89)90033-7 .; Additional one-electron integrals, including orbital energies, can also be saved.; This latter format can be used with the HANDE QMC code but is not standard. Parameters:. wfn (Wavefunction) – Set of molecule, basis, orbitals from which to generate FCIDUMP file.; fname (str) – Name of the integrals file, defaults to INTDUMP.; oe_ints (Optional[List]) – List of additional one-electron integrals to save to file. So far only; EIGENVALUES is a valid option. Raises:; ValidationError – When SCF wavefunction is not RHF. Examples; >>> # [1] Save one- and two-electron integrals to standard FCIDUMP format; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn). >>> # [2] Save orbital energies, one- and two-electron integrals.; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn, oe_ints=['EIGENVALUES']). table of contents. fcidump; fcidump(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.fcidump.html:956,energy,energy,956,psi4manual/1.9.x/api/psi4.driver.fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.fcidump.html,4,['energy'],['energy']
Energy Efficiency,"﻿. fcidump. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. fcidump¶. psi4.driver.p4util.fcidump(wfn, fname='INTDUMP', oe_ints=None)[source]¶; Save integrals to file in FCIDUMP format as defined in Comp. Phys. Commun. 54 75 (1989),; https://doi.org/10.1016/0010-4655(89)90033-7 .; Additional one-electron integrals, including orbital energies, can also be saved.; This latter format can be used with the HANDE QMC code but is not standard. Parameters:. wfn (Wavefunction) – Set of molecule, basis, orbitals from which to generate FCIDUMP file.; fname (str) – Name of the integrals file, defaults to INTDUMP.; oe_ints (Optional[List]) – List of additional one-electron integrals to save to file. So far only; EIGENVALUES is a valid option. Raises:; ValidationError – When SCF wavefunction is not RHF. Examples; >>> # [1] Save one- and two-electron integrals to standard FCIDUMP format; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn). >>> # [2] Save orbital energies, one- and two-electron integrals.; >>> E, wfn = energy('scf', return_wfn=True); >>> fcidump(wfn, oe_ints=['EIGENVALUES']). table of contents. fcidump; fcidump(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.fcidump.html:963,energy,energy,963,psi4manual/1.9.x/api/psi4.driver.p4util.fcidump.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.fcidump.html,4,['energy'],['energy']
Energy Efficiency,"﻿. fcidump_from_file. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. fcidump_from_file¶. psi4.driver.fcidump_from_file(fname)[source]¶; Function to read in a FCIDUMP file. Return type:; Dict[str, Any]. Returns:; a dictionary with FCIDUMP header and integrals. ’norb’ : number of basis functions; ’nelec’ : number of electrons; ’ms2’ : spin polarization of the system; ’isym’ : symmetry of state (if present in FCIDUMP); ’orbsym’ : list of symmetry labels of each orbital; ’uhf’ : whether restricted or unrestricted; ’enuc’ : nuclear repulsion plus frozen core energy; ’epsilon’ : orbital energies; ’hcore’ : core Hamiltonian; ’eri’ : electron-repulsion integrals. Parameters:; fname (str) – FCIDUMP file name. table of contents. fcidump_from_file; fcidump_from_file(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.fcidump_from_file.html:643,energy,energy,643,psi4manual/master/api/psi4.driver.fcidump_from_file.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.fcidump_from_file.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fcidump_from_file. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. fcidump_from_file¶. psi4.driver.p4util.fcidump_from_file(fname)[source]¶; Function to read in a FCIDUMP file. Return type:; Dict[str, Any]. Returns:; a dictionary with FCIDUMP header and integrals. ’norb’ : number of basis functions; ’nelec’ : number of electrons; ’ms2’ : spin polarization of the system; ’isym’ : symmetry of state (if present in FCIDUMP); ’orbsym’ : list of symmetry labels of each orbital; ’uhf’ : whether restricted or unrestricted; ’enuc’ : nuclear repulsion plus frozen core energy; ’epsilon’ : orbital energies; ’hcore’ : core Hamiltonian; ’eri’ : electron-repulsion integrals. Parameters:; fname (str) – FCIDUMP file name. table of contents. fcidump_from_file; fcidump_from_file(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.fcidump_from_file.html:650,energy,energy,650,psi4manual/master/api/psi4.driver.p4util.fcidump_from_file.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.fcidump_from_file.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fcidump_from_file. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. fcidump_from_file¶. psi4.driver.fcidump_from_file(fname)[source]¶; Function to read in a FCIDUMP file. Returns:a dictionary with FCIDUMP header and integrals. The key-value pairs are:. ‘norb’ : number of basis functions; ‘nelec’ : number of electrons; ‘ms2’ : spin polarization of the system; ‘isym’ : symmetry of state (if present in FCIDUMP); ‘orbsym’ : list of symmetry labels of each orbital; ‘uhf’ : whether restricted or unrestricted; ‘enuc’ : nuclear repulsion plus frozen core energy; ‘epsilon’ : orbital energies; ‘hcore’ : core Hamiltonian; ‘eri’ : electron-repulsion integrals. Parameters:fname – FCIDUMP file name. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.fcidump_from_file-1.html:611,energy,energy,611,psi4manual/1.2.1/api/psi4.driver.fcidump_from_file-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.fcidump_from_file-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fcidump_from_file. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. fcidump_from_file¶. psi4.driver.fcidump_from_file(fname)[source]¶; Function to read in a FCIDUMP file. Returns:a dictionary with FCIDUMP header and integrals. The key-value pairs are:. ‘norb’ : number of basis functions; ‘nelec’ : number of electrons; ‘ms2’ : spin polarization of the system; ‘isym’ : symmetry of state (if present in FCIDUMP); ‘orbsym’ : list of symmetry labels of each orbital; ‘uhf’ : whether restricted or unrestricted; ‘enuc’ : nuclear repulsion plus frozen core energy; ‘epsilon’ : orbital energies; ‘hcore’ : core Hamiltonian; ‘eri’ : electron-repulsion integrals. Parameters:fname – FCIDUMP file name. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.fcidump_from_file-1.html:611,energy,energy,611,psi4manual/1.3.2/api/psi4.driver.fcidump_from_file-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.fcidump_from_file-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fcidump_from_file. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. fcidump_from_file¶. psi4.driver.fcidump_from_file(fname)[source]¶; Function to read in a FCIDUMP file. Returns; a dictionary with FCIDUMP header and integrals; - ‘norb’ : number of basis functions; - ‘nelec’ : number of electrons; - ‘ms2’ : spin polarization of the system; - ‘isym’ : symmetry of state (if present in FCIDUMP); - ‘orbsym’ : list of symmetry labels of each orbital; - ‘uhf’ : whether restricted or unrestricted; - ‘enuc’ : nuclear repulsion plus frozen core energy; - ‘epsilon’ : orbital energies; - ‘hcore’ : core Hamiltonian; - ‘eri’ : electron-repulsion integrals. Parameters; fname – FCIDUMP file name. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.fcidump_from_file-1.html:617,energy,energy,617,psi4manual/1.4.0/api/psi4.driver.fcidump_from_file-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.fcidump_from_file-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. fcidump_from_file. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. fcidump_from_file¶. psi4.driver.fcidump_from_file(fname)[source]¶; Function to read in a FCIDUMP file. Returns; a dictionary with FCIDUMP header and integrals; - ‘norb’ : number of basis functions; - ‘nelec’ : number of electrons; - ‘ms2’ : spin polarization of the system; - ‘isym’ : symmetry of state (if present in FCIDUMP); - ‘orbsym’ : list of symmetry labels of each orbital; - ‘uhf’ : whether restricted or unrestricted; - ‘enuc’ : nuclear repulsion plus frozen core energy; - ‘epsilon’ : orbital energies; - ‘hcore’ : core Hamiltonian; - ‘eri’ : electron-repulsion integrals. Parameters; fname – FCIDUMP file name. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.fcidump_from_file-1.html:617,energy,energy,617,psi4manual/1.5.0/api/psi4.driver.fcidump_from_file-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.fcidump_from_file-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. fcidump_from_file. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. fcidump_from_file¶. psi4.driver.fcidump_from_file(fname)[source]¶; Function to read in a FCIDUMP file. Returns; a dictionary with FCIDUMP header and integrals. ’norb’ : number of basis functions; ’nelec’ : number of electrons; ’ms2’ : spin polarization of the system; ’isym’ : symmetry of state (if present in FCIDUMP); ’orbsym’ : list of symmetry labels of each orbital; ’uhf’ : whether restricted or unrestricted; ’enuc’ : nuclear repulsion plus frozen core energy; ’epsilon’ : orbital energies; ’hcore’ : core Hamiltonian; ’eri’ : electron-repulsion integrals. Parameters; fname – FCIDUMP file name. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.fcidump_from_file.html:603,energy,energy,603,psi4manual/1.6.x/api/psi4.driver.fcidump_from_file.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.fcidump_from_file.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fcidump_from_file. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. fcidump_from_file¶. psi4.driver.fcidump_from_file(fname)[source]¶; Function to read in a FCIDUMP file. Return type:; Dict[str, Any]. Returns:; a dictionary with FCIDUMP header and integrals. ’norb’ : number of basis functions; ’nelec’ : number of electrons; ’ms2’ : spin polarization of the system; ’isym’ : symmetry of state (if present in FCIDUMP); ’orbsym’ : list of symmetry labels of each orbital; ’uhf’ : whether restricted or unrestricted; ’enuc’ : nuclear repulsion plus frozen core energy; ’epsilon’ : orbital energies; ’hcore’ : core Hamiltonian; ’eri’ : electron-repulsion integrals. Parameters:; fname (str) – FCIDUMP file name. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.fcidump_from_file.html:634,energy,energy,634,psi4manual/1.7.x/api/psi4.driver.fcidump_from_file.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.fcidump_from_file.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fcidump_from_file. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. fcidump_from_file¶. psi4.driver.p4util.fcidump_from_file(fname)[source]¶; Function to read in a FCIDUMP file. Return type:; Dict[str, Any]. Returns:; a dictionary with FCIDUMP header and integrals. ’norb’ : number of basis functions; ’nelec’ : number of electrons; ’ms2’ : spin polarization of the system; ’isym’ : symmetry of state (if present in FCIDUMP); ’orbsym’ : list of symmetry labels of each orbital; ’uhf’ : whether restricted or unrestricted; ’enuc’ : nuclear repulsion plus frozen core energy; ’epsilon’ : orbital energies; ’hcore’ : core Hamiltonian; ’eri’ : electron-repulsion integrals. Parameters:; fname (str) – FCIDUMP file name. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.fcidump_from_file.html:641,energy,energy,641,psi4manual/1.7.x/api/psi4.driver.p4util.fcidump_from_file.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.fcidump_from_file.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fcidump_from_file. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. fcidump_from_file¶. psi4.driver.fcidump_from_file(fname)[source]¶; Function to read in a FCIDUMP file. Return type:; Dict[str, Any]. Returns:; a dictionary with FCIDUMP header and integrals. ’norb’ : number of basis functions; ’nelec’ : number of electrons; ’ms2’ : spin polarization of the system; ’isym’ : symmetry of state (if present in FCIDUMP); ’orbsym’ : list of symmetry labels of each orbital; ’uhf’ : whether restricted or unrestricted; ’enuc’ : nuclear repulsion plus frozen core energy; ’epsilon’ : orbital energies; ’hcore’ : core Hamiltonian; ’eri’ : electron-repulsion integrals. Parameters:; fname (str) – FCIDUMP file name. table of contents. fcidump_from_file; fcidump_from_file(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.fcidump_from_file.html:636,energy,energy,636,psi4manual/1.8.x/api/psi4.driver.fcidump_from_file.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.fcidump_from_file.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fcidump_from_file. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. fcidump_from_file¶. psi4.driver.p4util.fcidump_from_file(fname)[source]¶; Function to read in a FCIDUMP file. Return type:; Dict[str, Any]. Returns:; a dictionary with FCIDUMP header and integrals. ’norb’ : number of basis functions; ’nelec’ : number of electrons; ’ms2’ : spin polarization of the system; ’isym’ : symmetry of state (if present in FCIDUMP); ’orbsym’ : list of symmetry labels of each orbital; ’uhf’ : whether restricted or unrestricted; ’enuc’ : nuclear repulsion plus frozen core energy; ’epsilon’ : orbital energies; ’hcore’ : core Hamiltonian; ’eri’ : electron-repulsion integrals. Parameters:; fname (str) – FCIDUMP file name. table of contents. fcidump_from_file; fcidump_from_file(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.fcidump_from_file.html:643,energy,energy,643,psi4manual/1.8.x/api/psi4.driver.p4util.fcidump_from_file.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.fcidump_from_file.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fcidump_from_file. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. fcidump_from_file¶. psi4.driver.fcidump_from_file(fname)[source]¶; Function to read in a FCIDUMP file. Return type:; Dict[str, Any]. Returns:; a dictionary with FCIDUMP header and integrals. ’norb’ : number of basis functions; ’nelec’ : number of electrons; ’ms2’ : spin polarization of the system; ’isym’ : symmetry of state (if present in FCIDUMP); ’orbsym’ : list of symmetry labels of each orbital; ’uhf’ : whether restricted or unrestricted; ’enuc’ : nuclear repulsion plus frozen core energy; ’epsilon’ : orbital energies; ’hcore’ : core Hamiltonian; ’eri’ : electron-repulsion integrals. Parameters:; fname (str) – FCIDUMP file name. table of contents. fcidump_from_file; fcidump_from_file(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.fcidump_from_file.html:636,energy,energy,636,psi4manual/1.9.x/api/psi4.driver.fcidump_from_file.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.fcidump_from_file.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fcidump_from_file. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. fcidump_from_file¶. psi4.driver.p4util.fcidump_from_file(fname)[source]¶; Function to read in a FCIDUMP file. Return type:; Dict[str, Any]. Returns:; a dictionary with FCIDUMP header and integrals. ’norb’ : number of basis functions; ’nelec’ : number of electrons; ’ms2’ : spin polarization of the system; ’isym’ : symmetry of state (if present in FCIDUMP); ’orbsym’ : list of symmetry labels of each orbital; ’uhf’ : whether restricted or unrestricted; ’enuc’ : nuclear repulsion plus frozen core energy; ’epsilon’ : orbital energies; ’hcore’ : core Hamiltonian; ’eri’ : electron-repulsion integrals. Parameters:; fname (str) – FCIDUMP file name. table of contents. fcidump_from_file; fcidump_from_file(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; fcidump_from_file. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.fcidump_from_file.html:643,energy,energy,643,psi4manual/1.9.x/api/psi4.driver.p4util.fcidump_from_file.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.fcidump_from_file.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fd_1_0. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. fd_1_0¶. psi4.core.fd_1_0(arg0: psi::Molecule, arg1: list) → psi::Matrix¶; Performs a finite difference gradient computation, from energy points. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.fd_1_0-1.html:246,energy,energy,246,psi4manual/1.2.1/api/psi4.core.fd_1_0-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.fd_1_0-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fd_freq_0. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. fd_freq_0¶. psi4.core.fd_freq_0(arg0: psi::Molecule, arg1: list, arg2: int) → psi::Matrix¶; Performs a finite difference frequency computation, from energy points, for a given irrep. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.fd_freq_0-1.html:267,energy,energy,267,psi4manual/1.2.1/api/psi4.core.fd_freq_0-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.fd_freq_0-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fd_geoms_1_0. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. fd_geoms_1_0¶. psi4.core.fd_geoms_1_0(arg0: psi::Molecule) → List[psi::Matrix]¶; Gets list of displacements needed for a finite difference gradient computation, from energy points. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.fd_geoms_1_0-1.html:287,energy,energy,287,psi4manual/1.2.1/api/psi4.core.fd_geoms_1_0-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.fd_geoms_1_0-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fd_geoms_freq_0. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. fd_geoms_freq_0¶. psi4.core.fd_geoms_freq_0(arg0: psi::Molecule, arg1: int) → List[psi::Matrix]¶; Gets list of displacements needed for a finite difference frequency computation, from energy points, for a given irrep. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.fd_geoms_freq_0-1.html:308,energy,energy,308,psi4manual/1.2.1/api/psi4.core.fd_geoms_freq_0-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.fd_geoms_freq_0-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fnocc. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; fnocc. fnocc¶. psi4.core.fnocc(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the FNO-CCSD(T)/QCISD(T)/MP4/CEPA energy code. table of contents. fnocc; fnocc(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; fnocc. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.core.fnocc.html:251,energy,energy,251,psi4manual/master/api/psi4.core.fnocc.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.core.fnocc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fnocc. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. fnocc¶. psi4.core.fnocc(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the fno-ccsd(t)/qcisd(t)/mp4/cepa energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.fnocc-1.html:224,energy,energy,224,psi4manual/1.2.1/api/psi4.core.fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.fnocc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fnocc. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. fnocc¶. psi4.core.fnocc(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the fno-ccsd(t)/qcisd(t)/mp4/cepa energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.fnocc-1.html:224,energy,energy,224,psi4manual/1.3.2/api/psi4.core.fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.fnocc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fnocc. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; fnocc. fnocc¶. psi4.core.fnocc(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the FNO-CCSD(T)/QCISD(T)/MP4/CEPA energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; fnocc. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.core.fnocc-1.html:242,energy,energy,242,psi4manual/1.4.0/api/psi4.core.fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.core.fnocc-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fnocc. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; fnocc. fnocc¶. psi4.core.fnocc(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the FNO-CCSD(T)/QCISD(T)/MP4/CEPA energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; fnocc. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.core.fnocc-1.html:242,energy,energy,242,psi4manual/1.5.0/api/psi4.core.fnocc-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.core.fnocc-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. fnocc. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; fnocc. fnocc¶. psi4.core.fnocc(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the FNO-CCSD(T)/QCISD(T)/MP4/CEPA energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; fnocc. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.core.fnocc.html:242,energy,energy,242,psi4manual/1.6.x/api/psi4.core.fnocc.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.core.fnocc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fnocc. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; fnocc. fnocc¶. psi4.core.fnocc(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the FNO-CCSD(T)/QCISD(T)/MP4/CEPA energy code. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; fnocc. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.core.fnocc.html:242,energy,energy,242,psi4manual/1.7.x/api/psi4.core.fnocc.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.core.fnocc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fnocc. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; fnocc. fnocc¶. psi4.core.fnocc(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the FNO-CCSD(T)/QCISD(T)/MP4/CEPA energy code. table of contents. fnocc; fnocc(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; fnocc. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.core.fnocc.html:244,energy,energy,244,psi4manual/1.8.x/api/psi4.core.fnocc.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.core.fnocc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. fnocc. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; fnocc. fnocc¶. psi4.core.fnocc(ref_wfn: psi4.core.Wavefunction) → psi4.core.Wavefunction¶; Runs the FNO-CCSD(T)/QCISD(T)/MP4/CEPA energy code. table of contents. fnocc; fnocc(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; fnocc. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.core.fnocc.html:244,energy,energy,244,psi4manual/1.9.x/api/psi4.core.fnocc.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.core.fnocc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. frac — PSI4 [beta2] documentation. Navigation. index. modules |; PSI4 [beta2] » ; Module code ». Source code for frac; import PsiMod; import os; import input; import math; from molutil import * ; from driver import * ; from procutil import *; from util import *. # Scan from +1 electron to -1 electron; [docs]def frac_traverse(mol, **kwargs):; kwargs = kwargs_lower(kwargs). # The molecule is required, and should be the neutral species; mol.update_geometry(); activate(mol); charge0 = mol.molecular_charge(); mult0 = mol.multiplicity() . chargep = charge0 + 1; chargem = charge0 - 1; ; # By default, the multiplicity of the cation/anion are mult0 + 1; # These are overridden with the cation_mult and anion_mult kwargs; multp = mult0 + 1; multm = mult0 + 1; if kwargs.has_key('cation_mult'):; multp = kwargs['cation_mult'] ; if kwargs.has_key('anion_mult'):; multm = kwargs['anion_mult'] ; ; # By default, we start the frac procedure on the 25th iteration ; # when not reading a previous guess; frac_start = 25; if kwargs.has_key('frac_start'):; frac_start = kwargs['frac_start']. # By default, we occupy by tenths of electrons; LUMO_occs = [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]; HOMO_occs = [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]; if kwargs.has_key('HOMO_occs'):; HOMO_occs = kwargs['HOMO_occs'] ; if kwargs.has_key('LUMO_occs'):; LUMO_occs = kwargs['LUMO_occs'] . # By default, HOMO and LUMO are both in alpha; Z = 0;; for A in range(mol.natom()):; Z += mol.Z(A); Z -= charge0; if (Z%2):; HOMO = Z/2+1; else:; HOMO = Z/2; LUMO = HOMO+1; if kwargs.has_key('HOMO'):; HOMO = kwargs['HOMO']; if kwargs.has_key('LUMO'):; LUMO = kwargs['LUMO']. # By default, DIIS in FRAC (1.0 occupation is always DIIS'd); frac_diis = True; if kwargs.has_key('frac_diis'):; frac_diis = kwargs['frac_diis']. # By default, use the neutral orbitals as a guess for the anion; neutral_guess = True; if kwargs.has_key('neutral_guess'):; neutral_guess = kwargs['neutral_guess']. # By defaul",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/frac.html:542,charge,chargep,542,psi4manual/4.0b2/_modules/frac.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/frac.html,4,['charge'],"['chargem', 'chargep']"
Energy Efficiency,"﻿. frac — PSI4 [beta3] documentation. Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». Source code for frac; import PsiMod; import os; import math; from molutil import * ; from driver import * ; from procutil import *; from util import *. # Scan from +1 electron to -1 electron; [docs]def frac_traverse(mol, **kwargs):; kwargs = kwargs_lower(kwargs). # The molecule is required, and should be the neutral species; mol.update_geometry(); activate(mol); charge0 = mol.molecular_charge(); mult0 = mol.multiplicity() . chargep = charge0 + 1; chargem = charge0 - 1; ; # By default, the multiplicity of the cation/anion are mult0 + 1; # These are overridden with the cation_mult and anion_mult kwargs; multp = mult0 + 1; multm = mult0 + 1; if kwargs.has_key('cation_mult'):; multp = kwargs['cation_mult'] ; if kwargs.has_key('anion_mult'):; multm = kwargs['anion_mult'] ; ; # By default, we start the frac procedure on the 25th iteration ; # when not reading a previous guess; frac_start = 25; if kwargs.has_key('frac_start'):; frac_start = kwargs['frac_start']. # By default, we occupy by tenths of electrons; LUMO_occs = [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]; HOMO_occs = [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]; if kwargs.has_key('HOMO_occs'):; HOMO_occs = kwargs['HOMO_occs'] ; if kwargs.has_key('LUMO_occs'):; LUMO_occs = kwargs['LUMO_occs'] . # By default, HOMO and LUMO are both in alpha; Z = 0;; for A in range(mol.natom()):; Z += mol.Z(A); Z -= charge0; if (Z%2):; HOMO = Z/2+1; else:; HOMO = Z/2; LUMO = HOMO+1; if kwargs.has_key('HOMO'):; HOMO = kwargs['HOMO']; if kwargs.has_key('LUMO'):; LUMO = kwargs['LUMO']. # By default, DIIS in FRAC (1.0 occupation is always DIIS'd); frac_diis = True; if kwargs.has_key('frac_diis'):; frac_diis = kwargs['frac_diis']. # By default, use the neutral orbitals as a guess for the anion; neutral_guess = True; if kwargs.has_key('neutral_guess'):; neutral_guess = kwargs['neutral_guess']. # By default, ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/frac.html:539,charge,chargep,539,psi4manual/4.0b3/_modules/frac.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/frac.html,4,['charge'],"['chargem', 'chargep']"
Energy Efficiency,"﻿. frac — PSI4 [beta4] documentation. Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». Source code for frac; import PsiMod; import os; import math; from molutil import * ; from driver import * ; from procutil import *; from util import *. # Scan from +1 electron to -1 electron; [docs]def frac_traverse(mol, **kwargs):; kwargs = kwargs_lower(kwargs). # The molecule is required, and should be the neutral species; mol.update_geometry(); activate(mol); charge0 = mol.molecular_charge(); mult0 = mol.multiplicity() . chargep = charge0 + 1; chargem = charge0 - 1; ; # By default, the multiplicity of the cation/anion are mult0 + 1; # These are overridden with the cation_mult and anion_mult kwargs; multp = mult0 + 1; multm = mult0 + 1; if kwargs.has_key('cation_mult'):; multp = kwargs['cation_mult'] ; if kwargs.has_key('anion_mult'):; multm = kwargs['anion_mult'] ; ; # By default, we start the frac procedure on the 25th iteration ; # when not reading a previous guess; frac_start = 25; if kwargs.has_key('frac_start'):; frac_start = kwargs['frac_start']. # By default, we occupy by tenths of electrons; LUMO_occs = [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]; HOMO_occs = [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]; if kwargs.has_key('HOMO_occs'):; HOMO_occs = kwargs['HOMO_occs'] ; if kwargs.has_key('LUMO_occs'):; LUMO_occs = kwargs['LUMO_occs'] . # By default, HOMO and LUMO are both in alpha; Z = 0;; for A in range(mol.natom()):; Z += mol.Z(A); Z -= charge0; if (Z%2):; HOMO = Z/2+1; else:; HOMO = Z/2; LUMO = HOMO+1; if kwargs.has_key('HOMO'):; HOMO = kwargs['HOMO']; if kwargs.has_key('LUMO'):; LUMO = kwargs['LUMO']. # By default, DIIS in FRAC (1.0 occupation is always DIIS'd); frac_diis = True; if kwargs.has_key('frac_diis'):; frac_diis = kwargs['frac_diis']. # By default, use the neutral orbitals as a guess for the anion; neutral_guess = True; if kwargs.has_key('neutral_guess'):; neutral_guess = kwargs['neutral_guess']. # By default, ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/frac.html:539,charge,chargep,539,psi4manual/4.0b4/_modules/frac.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/frac.html,4,['charge'],"['chargem', 'chargep']"
Energy Efficiency,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; freq. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences according to av",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.freq.html:290,energy,energy,290,psi4manual/master/api/psi4.driver.freq.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.freq.html,8,['energy'],['energy']
Energy Efficiency,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies or gradients frequency, indicates; whether the calculations required to complete the frequency are to be run; in one file ('continuous') or are to be farmed out in an; embarrassingly parallel fashion ('sow'/'reap')/ For the latter,; run an initial job with 'sow' and follow instructions in its output file.; For maximum flexibility, return_wfn is always on in 'reap' mode. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.freq-1.html:273,energy,energy,273,psi4manual/1.2.1/api/psi4.driver.freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.freq-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF. For all other methods, Frequencies will; proceed through finite differences according to availability of gradien",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.freq-1.html:273,energy,energy,273,psi4manual/1.3.2/api/psi4.driver.freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.freq-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; freq. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences according to availability of",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.freq-1.html:279,energy,energy,279,psi4manual/1.4.0/api/psi4.driver.freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.freq-1.html,16,['energy'],['energy']
Energy Efficiency,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; freq. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences according to availability of",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.freq-1.html:279,energy,energy,279,psi4manual/1.5.0/api/psi4.driver.freq-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.freq-1.html,16,['energy'],['energy']
Energy Efficiency,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; freq. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences according to availability of",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.freq.html:279,energy,energy,279,psi4manual/1.6.x/api/psi4.driver.freq.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.freq.html,8,['energy'],['energy']
Energy Efficiency,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; freq. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences according to availabilit",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.freq.html:281,energy,energy,281,psi4manual/1.7.x/api/psi4.driver.freq.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.freq.html,8,['energy'],['energy']
Energy Efficiency,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; freq. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences according to availabil",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.freq.html:283,energy,energy,283,psi4manual/1.8.x/api/psi4.driver.freq.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.freq.html,8,['energy'],['energy']
Energy Efficiency,"﻿. freq. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; freq. freq¶. psi4.driver.freq(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences according to availabil",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.freq.html:283,energy,energy,283,psi4manual/1.9.x/api/psi4.driver.freq.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.freq.html,8,['energy'],['energy']
Energy Efficiency,"﻿. frequencies. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; frequencies. frequencies¶. psi4.driver.frequencies(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.frequencies.html:318,energy,energy,318,psi4manual/master/api/psi4.driver.frequencies.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.frequencies.html,6,['energy'],['energy']
Energy Efficiency,"﻿. frequencies. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. frequencies¶. psi4.driver.frequencies(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies or gradients frequency, indicates; whether the calculations required to complete the frequency are to be run; in one file ('continuous') or are to be farmed out in an; embarrassingly parallel fashion ('sow'/'reap')/ For the latter,; run an initial job with 'sow' and follow instructions in its output file.; For maximum flexibility, return_wfn is always on in 'reap' mode. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite differ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.frequencies-1.html:294,energy,energy,294,psi4manual/1.2.1/api/psi4.driver.frequencies-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.frequencies-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. frequencies. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. frequencies¶. psi4.driver.frequencies(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF. For all other methods, Frequencies will; proceed through finite differences according to av",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.frequencies-1.html:294,energy,energy,294,psi4manual/1.3.2/api/psi4.driver.frequencies-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.frequencies-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. frequencies. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; frequencies. frequencies¶. psi4.driver.frequencies(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.frequencies-1.html:307,energy,energy,307,psi4manual/1.4.0/api/psi4.driver.frequencies-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.frequencies-1.html,12,['energy'],['energy']
Energy Efficiency,"﻿. frequencies. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; frequencies. frequencies¶. psi4.driver.frequencies(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.frequencies-1.html:307,energy,energy,307,psi4manual/1.5.0/api/psi4.driver.frequencies-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.frequencies-1.html,12,['energy'],['energy']
Energy Efficiency,"﻿. frequencies. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; frequencies. frequencies¶. psi4.driver.frequencies(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.frequencies.html:307,energy,energy,307,psi4manual/1.6.x/api/psi4.driver.frequencies.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.frequencies.html,6,['energy'],['energy']
Energy Efficiency,"﻿. frequencies. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; frequencies. frequencies¶. psi4.driver.frequencies(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differen",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.frequencies.html:309,energy,energy,309,psi4manual/1.7.x/api/psi4.driver.frequencies.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.frequencies.html,6,['energy'],['energy']
Energy Efficiency,"﻿. frequencies. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; frequencies. frequencies¶. psi4.driver.frequencies(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.frequencies.html:311,energy,energy,311,psi4manual/1.8.x/api/psi4.driver.frequencies.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.frequencies.html,6,['energy'],['energy']
Energy Efficiency,"﻿. frequencies. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; frequencies. frequencies¶. psi4.driver.frequencies(name, **kwargs)¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.frequencies.html:311,energy,energy,311,psi4manual/1.9.x/api/psi4.driver.frequencies.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.frequencies.html,6,['energy'],['energy']
Energy Efficiency,"﻿. frequency. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; frequency. frequency¶. psi4.driver.frequency(name, **kwargs)[source]¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.frequency.html:318,energy,energy,318,psi4manual/master/api/psi4.driver.frequency.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.frequency.html,6,['energy'],['energy']
Energy Efficiency,"﻿. frequency. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. frequency¶. psi4.driver.frequency(name, **kwargs)[source]¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies or gradients frequency, indicates; whether the calculations required to complete the frequency are to be run; in one file ('continuous') or are to be farmed out in an; embarrassingly parallel fashion ('sow'/'reap')/ For the latter,; run an initial job with 'sow' and follow instructions in its output file.; For maximum flexibility, return_wfn is always on in 'reap' mode. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite diff",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.frequency-1.html:296,energy,energy,296,psi4manual/1.2.1/api/psi4.driver.frequency-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.frequency-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. frequency. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. frequency¶. psi4.driver.frequency(name, **kwargs)[source]¶; Function to compute harmonic vibrational frequencies. Aliases:frequencies(), freq(). Returns:float – Total electronic energy in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or string) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF. For all other methods, Frequencies will; proceed through finite differences according to ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.frequency-1.html:296,energy,energy,296,psi4manual/1.3.2/api/psi4.driver.frequency-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.frequency-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. frequency. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; frequency. frequency¶. psi4.driver.frequency(name, **kwargs)[source]¶; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.frequency-1.html:307,energy,energy,307,psi4manual/1.4.0/api/psi4.driver.frequency-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.frequency-1.html,12,['energy'],['energy']
Energy Efficiency,"﻿. frequency. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; frequency. frequency¶. psi4.driver.frequency(name, **kwargs)[source]¶; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.frequency-1.html:307,energy,energy,307,psi4manual/1.5.0/api/psi4.driver.frequency-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.frequency-1.html,12,['energy'],['energy']
Energy Efficiency,"﻿. frequency. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; frequency. frequency¶. psi4.driver.frequency(name, **kwargs)[source]¶; Function to compute harmonic vibrational frequencies. Aliases; frequencies(), freq(). Returns; float – Total electronic energy in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differences ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.frequency.html:307,energy,energy,307,psi4manual/1.6.x/api/psi4.driver.frequency.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.frequency.html,6,['energy'],['energy']
Energy Efficiency,"﻿. frequency. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; frequency. frequency¶. psi4.driver.frequency(name, **kwargs)[source]¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differen",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.frequency.html:309,energy,energy,309,psi4manual/1.7.x/api/psi4.driver.frequency.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.frequency.html,6,['energy'],['energy']
Energy Efficiency,"﻿. frequency. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; frequency. frequency¶. psi4.driver.frequency(name, **kwargs)[source]¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.frequency.html:311,energy,energy,311,psi4manual/1.8.x/api/psi4.driver.frequency.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.frequency.html,6,['energy'],['energy']
Energy Efficiency,"﻿. frequency. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; frequency. frequency¶. psi4.driver.frequency(name, **kwargs)[source]¶; Function to compute harmonic vibrational frequencies. Aliases:; frequencies(), freq(). Returns:; float – Total electronic energy in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple.; Arrays of frequencies and the Hessian can be accessed through the wavefunction. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword freq_func instead of func. dertype (dertype) – \(\Rightarrow\) 'hessian' \(\Leftarrow\) || 'gradient' || 'energy'; Indicates whether analytic (if available- they’re not), finite; difference of gradients (if available) or finite difference of; energies is to be performed. irrep (int or str) – \(\Rightarrow\) -1 \(\Leftarrow\) || 1 || 'b2' || 'App' || etc.; Indicates which symmetry block (Cotton ordering) of vibrational; frequencies to be computed. 1, '1', or 'a1' represents; \(a_1\), requesting only the totally symmetric modes.; -1 indicates a full frequency calculation. Note; Analytic hessians are only available for RHF and UHF. For all other methods, Frequencies will; proceed through finite differ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.frequency.html:311,energy,energy,311,psi4manual/1.9.x/api/psi4.driver.frequency.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.frequency.html,6,['energy'],['energy']
Energy Efficiency,"﻿. get_atomic_point_charges. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. get_atomic_point_charges¶. psi4.core.get_atomic_point_charges() → psi::Vector¶; Returns the most recently computed atomic point charges, as a double * object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.core.get_atomic_point_charges-1.html:261,charge,charges,261,psi4manual/1.2.1/api/psi4.core.get_atomic_point_charges-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.core.get_atomic_point_charges-1.html,2,['charge'],['charges']
Energy Efficiency,"﻿. get_atomic_point_charges. Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. get_atomic_point_charges¶. psi4.core.get_atomic_point_charges() → psi::Vector¶; Returns the most recently computed atomic point charges, as a double * object. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.core.get_atomic_point_charges-1.html:256,charge,charges,256,psi4manual/1.3.2/api/psi4.core.get_atomic_point_charges-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.core.get_atomic_point_charges-1.html,2,['charge'],['charges']
Energy Efficiency,"﻿. mdi_run. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. mdi_run¶. psi4.driver.mdi_run(scf_method, **kwargs)[source]¶; Begin functioning as an MDI (MolSSI driver interface) engine. Parameters:. scf_method (str) – Method (SCF or post-SCF) used when calculating energies or gradients.; molecule – The target molecule, if not the last molecule defined.; kwargs – Any additional arguments to pass to psi4.driver.energy() or; psi4.driver.gradient() computation. table of contents. mdi_run; mdi_run(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.mdi_run.html:483,energy,energy,483,psi4manual/master/api/psi4.driver.mdi_run.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.mdi_run.html,2,['energy'],['energy']
Energy Efficiency,"﻿. mdi_run. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. mdi_run¶. psi4.driver.mdi_run(scf_method, **kwargs)[source]¶; Begin functioning as an MDI (MolSSI driver interface) engine. Parameters:. scf_method (str) – Method (SCF or post-SCF) used when calculating energies or gradients.; molecule – The target molecule, if not the last molecule defined.; kwargs – Any additional arguments to pass to psi4.driver.energy() or; psi4.driver.gradient() computation. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.mdi_run.html:474,energy,energy,474,psi4manual/1.7.x/api/psi4.driver.mdi_run.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.mdi_run.html,2,['energy'],['energy']
Energy Efficiency,"﻿. mdi_run. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. mdi_run¶. psi4.driver.mdi_run(scf_method, **kwargs)[source]¶; Begin functioning as an MDI (MolSSI driver interface) engine. Parameters:. scf_method (str) – Method (SCF or post-SCF) used when calculating energies or gradients.; molecule – The target molecule, if not the last molecule defined.; kwargs – Any additional arguments to pass to psi4.driver.energy() or; psi4.driver.gradient() computation. table of contents. mdi_run; mdi_run(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.mdi_run.html:476,energy,energy,476,psi4manual/1.8.x/api/psi4.driver.mdi_run.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.mdi_run.html,2,['energy'],['energy']
Energy Efficiency,"﻿. mdi_run. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. mdi_run¶. psi4.driver.mdi_run(scf_method, **kwargs)[source]¶; Begin functioning as an MDI (MolSSI driver interface) engine. Parameters:. scf_method (str) – Method (SCF or post-SCF) used when calculating energies or gradients.; molecule – The target molecule, if not the last molecule defined.; kwargs – Any additional arguments to pass to psi4.driver.energy() or; psi4.driver.gradient() computation. table of contents. mdi_run; mdi_run(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; mdi_run. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.mdi_run.html:476,energy,energy,476,psi4manual/1.9.x/api/psi4.driver.mdi_run.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.mdi_run.html,2,['energy'],['energy']
Energy Efficiency,"﻿. molden. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; molden. molden¶. psi4.driver.molden(wfn, filename=None, density_a=None, density_b=None, dovirtual=None)[source]¶; Function to write wavefunction information in wfn to filename in; molden format. Will write natural orbitals from density (MO basis) if supplied.; Warning! Most post-SCF Wavefunctions do not build the density as this is often; much more costly than the energy. In addition, the Wavefunction density attributes; (Da and Db) return the SO density and must be transformed to the MO basis; to use with this function. Added in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files; filename (str) – destination file name for MOLDEN file (optional); density_a (Matrix) – density in the MO basis to build alpha NO’s from (optional); density_b (Matrix) – density in the MO basis to build beta NO’s from, assumes restricted if not supplied (optional); dovirtual (bool) – do write all the MOs to the MOLDEN file (true) or discard the unoccupied MOs, not valid for NO’s (false) (optional). Examples:. Molden file with the Kohn-Sham orbitals of a DFT calculation.; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> molden(wfn, 'mycalc.molden'). Molden file for CI/MCSCF computation using NO roots.; Any method returning a CIWavefunction object will work: detci,; fci, casscf, etc. The first two arguments of get_opdm can be; set to n, n where n => 0 selects the root to write out, provided; these roots were computed, see NUM_ROOTS. The; third argument controls the spin (""A"", ""B"" or ""SUM"") and the final; boolean option determines whether inactive orbitals are included.; >>> E, wfn = energy('detci', return_wfn=True); >>> molden(wfn, 'no_root1.molden', density_a=wfn.get_opdm(0, 0, ""A"", True)). The following produces an INCORRECT Molden file, because the; molden f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.molden.html:489,energy,energy,489,psi4manual/master/api/psi4.driver.molden.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.molden.html,2,['energy'],['energy']
Energy Efficiency,"﻿. molden. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. molden¶. psi4.driver.molden(wfn, filename=None, density_a=None, density_b=None, dovirtual=None)[source]¶; Function to write wavefunction information in wfn to filename in; molden format. Will write natural orbitals from density (MO basis) if supplied.; Warning! Most post-SCF Wavefunctions do not build the density as this is often; much more costly than the energy. In addition, the Wavefunction density attributes; (Da and Db) return the SO density and must be transformed to the MO basis; to use with this function. New in version 0.5: wfn parameter passed explicitly. Returns:None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files; filename (string) – destination file name for MOLDEN file (optional); density_a (Matrix) – density in the MO basis to build alpha NO’s from (optional); density_b (Matrix) – density in the MO basis to build beta NO’s from, assumes restricted if not supplied (optional); dovirtual (bool) – do write all the MOs to the MOLDEN file (true) or discard the unoccupied MOs, not valid for NO’s (false) (optional). Examples:. 1; 2; 3>>> # [1] Molden file for DFT calculation; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> molden(wfn, 'mycalc.molden'). 1; 2; 3>>> # [2] Molden file for CI/MCSCF computation using NO roots; >>> E, wfn = energy('ci', return_wfn=True); >>> molden(wfn, 'no_root1.molden', density_a=wfn.opdm(0, 0, ""A"", True)). 1; 2; 3>>> # [3] The following does NOT work, please see below; >>> E, wfn = energy('ccsd', return_wfn=True); >>> molden(wfn, 'ccsd_no.molden', density_a=wfn.Da()). 1; 2; 3; 4; 5>>> # [4] This WILL work, note the transformation of Da (SO->MO); >>> E, wfn = properties('ccsd', properties=['dipole'], return_wfn=True); >>> Da_so = wfn.Da(); >>> Da_mo = Matrix.triplet(wfn.Ca(), Da_so, wfn.Ca(), True, False, False); >>> molden(wfn, 'ccsd_no.molden', density_a=Da_mo)",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.molden-1.html:474,energy,energy,474,psi4manual/1.2.1/api/psi4.driver.molden-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.molden-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. molden. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. molden¶. psi4.driver.molden(wfn, filename=None, density_a=None, density_b=None, dovirtual=None)[source]¶; Function to write wavefunction information in wfn to filename in; molden format. Will write natural orbitals from density (MO basis) if supplied.; Warning! Most post-SCF Wavefunctions do not build the density as this is often; much more costly than the energy. In addition, the Wavefunction density attributes; (Da and Db) return the SO density and must be transformed to the MO basis; to use with this function. New in version 0.5: wfn parameter passed explicitly. Returns:None. Parameters:; wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files; filename (string) – destination file name for MOLDEN file (optional); density_a (Matrix) – density in the MO basis to build alpha NO’s from (optional); density_b (Matrix) – density in the MO basis to build beta NO’s from, assumes restricted if not supplied (optional); dovirtual (bool) – do write all the MOs to the MOLDEN file (true) or discard the unoccupied MOs, not valid for NO’s (false) (optional). Examples:. >>> # [1] Molden file for DFT calculation; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> molden(wfn, 'mycalc.molden'). >>> # [2] Molden file for CI/MCSCF computation using NO roots; >>> E, wfn = energy('ci', return_wfn=True); >>> molden(wfn, 'no_root1.molden', density_a=wfn.opdm(0, 0, ""A"", True)). >>> # [3] The following does NOT work, please see below; >>> E, wfn = energy('ccsd', return_wfn=True); >>> molden(wfn, 'ccsd_no.molden', density_a=wfn.Da()). >>> # [4] This WILL work, note the transformation of Da (SO->MO); >>> E, wfn = properties('ccsd', properties=['dipole'], return_wfn=True); >>> Da_so = wfn.Da(); >>> SCa = core.doublet(wfn.S(), wfn.Ca(), False, False); >>> Da_mo = core.triplet(SCa, Da_so, SCa, True, False, False); >>> molden(wfn, 'ccsd_no.molden', densi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.molden-1.html:474,energy,energy,474,psi4manual/1.3.2/api/psi4.driver.molden-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.molden-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. molden. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; molden. molden¶. psi4.driver.molden(wfn, filename=None, density_a=None, density_b=None, dovirtual=None)[source]¶; Function to write wavefunction information in wfn to filename in; molden format. Will write natural orbitals from density (MO basis) if supplied.; Warning! Most post-SCF Wavefunctions do not build the density as this is often; much more costly than the energy. In addition, the Wavefunction density attributes; (Da and Db) return the SO density and must be transformed to the MO basis; to use with this function. New in version 0.5: wfn parameter passed explicitly. Returns; None. Parameters. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files; filename (str) – destination file name for MOLDEN file (optional); density_a (Matrix) – density in the MO basis to build alpha NO’s from (optional); density_b (Matrix) – density in the MO basis to build beta NO’s from, assumes restricted if not supplied (optional); dovirtual (bool) – do write all the MOs to the MOLDEN file (true) or discard the unoccupied MOs, not valid for NO’s (false) (optional). Examples. Molden file with the Kohn-Sham orbitals of a DFT calculation.; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> molden(wfn, 'mycalc.molden'). Molden file for CI/MCSCF computation using NO roots.; Any method returning a CIWavefunction object will work: detci,; fci, casscf, etc. The first two arguments of get_opdm can be; set to n, n where n => 0 selects the root to write out, provided; these roots were computed, see NUM_ROOTS. The; third argument controls the spin (""A"", ""B"" or ""SUM"") and the final; boolean option determines whether inactive orbitals are included.; >>> E, wfn = energy('detci', return_wfn=True); >>> molden(wfn, 'no_root1.molden', density_a=wfn.get_opdm(0, 0, ""A"", True)). The following produces an INCORRECT Molden file, because the; molden function needs ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.molden-1.html:480,energy,energy,480,psi4manual/1.4.0/api/psi4.driver.molden-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.molden-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. molden. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; molden. molden¶. psi4.driver.molden(wfn, filename=None, density_a=None, density_b=None, dovirtual=None)[source]¶; Function to write wavefunction information in wfn to filename in; molden format. Will write natural orbitals from density (MO basis) if supplied.; Warning! Most post-SCF Wavefunctions do not build the density as this is often; much more costly than the energy. In addition, the Wavefunction density attributes; (Da and Db) return the SO density and must be transformed to the MO basis; to use with this function. New in version 0.5: wfn parameter passed explicitly. Returns; None. Parameters. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files; filename (str) – destination file name for MOLDEN file (optional); density_a (Matrix) – density in the MO basis to build alpha NO’s from (optional); density_b (Matrix) – density in the MO basis to build beta NO’s from, assumes restricted if not supplied (optional); dovirtual (bool) – do write all the MOs to the MOLDEN file (true) or discard the unoccupied MOs, not valid for NO’s (false) (optional). Examples. Molden file with the Kohn-Sham orbitals of a DFT calculation.; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> molden(wfn, 'mycalc.molden'). Molden file for CI/MCSCF computation using NO roots.; Any method returning a CIWavefunction object will work: detci,; fci, casscf, etc. The first two arguments of get_opdm can be; set to n, n where n => 0 selects the root to write out, provided; these roots were computed, see NUM_ROOTS. The; third argument controls the spin (""A"", ""B"" or ""SUM"") and the final; boolean option determines whether inactive orbitals are included.; >>> E, wfn = energy('detci', return_wfn=True); >>> molden(wfn, 'no_root1.molden', density_a=wfn.get_opdm(0, 0, ""A"", True)). The following produces an INCORRECT Molden file, because the; molden function needs ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.molden-1.html:480,energy,energy,480,psi4manual/1.5.0/api/psi4.driver.molden-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.molden-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. molden. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; molden. molden¶. psi4.driver.molden(wfn, filename=None, density_a=None, density_b=None, dovirtual=None)[source]¶; Function to write wavefunction information in wfn to filename in; molden format. Will write natural orbitals from density (MO basis) if supplied.; Warning! Most post-SCF Wavefunctions do not build the density as this is often; much more costly than the energy. In addition, the Wavefunction density attributes; (Da and Db) return the SO density and must be transformed to the MO basis; to use with this function. New in version 0.5: wfn parameter passed explicitly. Returns; None. Parameters. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files; filename (str) – destination file name for MOLDEN file (optional); density_a (Matrix) – density in the MO basis to build alpha NO’s from (optional); density_b (Matrix) – density in the MO basis to build beta NO’s from, assumes restricted if not supplied (optional); dovirtual (bool) – do write all the MOs to the MOLDEN file (true) or discard the unoccupied MOs, not valid for NO’s (false) (optional). Examples. Molden file with the Kohn-Sham orbitals of a DFT calculation.; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> molden(wfn, 'mycalc.molden'). Molden file for CI/MCSCF computation using NO roots.; Any method returning a CIWavefunction object will work: detci,; fci, casscf, etc. The first two arguments of get_opdm can be; set to n, n where n => 0 selects the root to write out, provided; these roots were computed, see NUM_ROOTS. The; third argument controls the spin (""A"", ""B"" or ""SUM"") and the final; boolean option determines whether inactive orbitals are included.; >>> E, wfn = energy('detci', return_wfn=True); >>> molden(wfn, 'no_root1.molden', density_a=wfn.get_opdm(0, 0, ""A"", True)). The following produces an INCORRECT Molden file, because the; molden function needs ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.molden.html:480,energy,energy,480,psi4manual/1.6.x/api/psi4.driver.molden.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.molden.html,2,['energy'],['energy']
Energy Efficiency,"﻿. molden. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; molden. molden¶. psi4.driver.molden(wfn, filename=None, density_a=None, density_b=None, dovirtual=None)[source]¶; Function to write wavefunction information in wfn to filename in; molden format. Will write natural orbitals from density (MO basis) if supplied.; Warning! Most post-SCF Wavefunctions do not build the density as this is often; much more costly than the energy. In addition, the Wavefunction density attributes; (Da and Db) return the SO density and must be transformed to the MO basis; to use with this function. New in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files; filename (str) – destination file name for MOLDEN file (optional); density_a (Matrix) – density in the MO basis to build alpha NO’s from (optional); density_b (Matrix) – density in the MO basis to build beta NO’s from, assumes restricted if not supplied (optional); dovirtual (bool) – do write all the MOs to the MOLDEN file (true) or discard the unoccupied MOs, not valid for NO’s (false) (optional). Examples:. Molden file with the Kohn-Sham orbitals of a DFT calculation.; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> molden(wfn, 'mycalc.molden'). Molden file for CI/MCSCF computation using NO roots.; Any method returning a CIWavefunction object will work: detci,; fci, casscf, etc. The first two arguments of get_opdm can be; set to n, n where n => 0 selects the root to write out, provided; these roots were computed, see NUM_ROOTS. The; third argument controls the spin (""A"", ""B"" or ""SUM"") and the final; boolean option determines whether inactive orbitals are included.; >>> E, wfn = energy('detci', return_wfn=True); >>> molden(wfn, 'no_root1.molden', density_a=wfn.get_opdm(0, 0, ""A"", True)). The following produces an INCORRECT Molden file, because the; molden function nee",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.molden.html:480,energy,energy,480,psi4manual/1.7.x/api/psi4.driver.molden.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.molden.html,2,['energy'],['energy']
Energy Efficiency,"﻿. molden. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; molden. molden¶. psi4.driver.molden(wfn, filename=None, density_a=None, density_b=None, dovirtual=None)[source]¶; Function to write wavefunction information in wfn to filename in; molden format. Will write natural orbitals from density (MO basis) if supplied.; Warning! Most post-SCF Wavefunctions do not build the density as this is often; much more costly than the energy. In addition, the Wavefunction density attributes; (Da and Db) return the SO density and must be transformed to the MO basis; to use with this function. New in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files; filename (str) – destination file name for MOLDEN file (optional); density_a (Matrix) – density in the MO basis to build alpha NO’s from (optional); density_b (Matrix) – density in the MO basis to build beta NO’s from, assumes restricted if not supplied (optional); dovirtual (bool) – do write all the MOs to the MOLDEN file (true) or discard the unoccupied MOs, not valid for NO’s (false) (optional). Examples:. Molden file with the Kohn-Sham orbitals of a DFT calculation.; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> molden(wfn, 'mycalc.molden'). Molden file for CI/MCSCF computation using NO roots.; Any method returning a CIWavefunction object will work: detci,; fci, casscf, etc. The first two arguments of get_opdm can be; set to n, n where n => 0 selects the root to write out, provided; these roots were computed, see NUM_ROOTS. The; third argument controls the spin (""A"", ""B"" or ""SUM"") and the final; boolean option determines whether inactive orbitals are included.; >>> E, wfn = energy('detci', return_wfn=True); >>> molden(wfn, 'no_root1.molden', density_a=wfn.get_opdm(0, 0, ""A"", True)). The following produces an INCORRECT Molden file, because the; molden function n",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.molden.html:482,energy,energy,482,psi4manual/1.8.x/api/psi4.driver.molden.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.molden.html,2,['energy'],['energy']
Energy Efficiency,"﻿. molden. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; molden. molden¶. psi4.driver.molden(wfn, filename=None, density_a=None, density_b=None, dovirtual=None)[source]¶; Function to write wavefunction information in wfn to filename in; molden format. Will write natural orbitals from density (MO basis) if supplied.; Warning! Most post-SCF Wavefunctions do not build the density as this is often; much more costly than the energy. In addition, the Wavefunction density attributes; (Da and Db) return the SO density and must be transformed to the MO basis; to use with this function. New in version 0.5: wfn parameter passed explicitly. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files; filename (str) – destination file name for MOLDEN file (optional); density_a (Matrix) – density in the MO basis to build alpha NO’s from (optional); density_b (Matrix) – density in the MO basis to build beta NO’s from, assumes restricted if not supplied (optional); dovirtual (bool) – do write all the MOs to the MOLDEN file (true) or discard the unoccupied MOs, not valid for NO’s (false) (optional). Examples:. Molden file with the Kohn-Sham orbitals of a DFT calculation.; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> molden(wfn, 'mycalc.molden'). Molden file for CI/MCSCF computation using NO roots.; Any method returning a CIWavefunction object will work: detci,; fci, casscf, etc. The first two arguments of get_opdm can be; set to n, n where n => 0 selects the root to write out, provided; these roots were computed, see NUM_ROOTS. The; third argument controls the spin (""A"", ""B"" or ""SUM"") and the final; boolean option determines whether inactive orbitals are included.; >>> E, wfn = energy('detci', return_wfn=True); >>> molden(wfn, 'no_root1.molden', density_a=wfn.get_opdm(0, 0, ""A"", True)). The following produces an INCORRECT Molden file, because the; molden function n",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.molden.html:482,energy,energy,482,psi4manual/1.9.x/api/psi4.driver.molden.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.molden.html,2,['energy'],['energy']
Energy Efficiency,"﻿. oeprop() Evaluation of One-Electron Properties — Psi4 [1.0.0 6a9a71b] Docs. Navigation. index. modules    . toc    . next    . previous    ; Psi4 [1.0.0 6a9a71b] » ; Theoretical Methods: SCF to FCI ». oeprop() Evaluation of One-Electron Properties¶; Code author: Robert M. Parrish and Andrew C. Simmonett; Section author: Andrew C. Simmonett. oeprop(wfn, *args[, title])[source]¶; Evaluate one-electron properties. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters:title (string) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). Psi4 is capable of computing a number of one-electron properties; summarized in the table below. Current one-electron property capabilities of Psi4¶. Feature; Keyword; Notes. Electric dipole moment; DIPOLE;  . Electric quadrupole moment; QUADRUPOLE; Raw (traced) moments and traceless multipoles. All moments up order N; MULTIPOLE(N); Only raw (traced) moments. Sets global variables e.g. “DIPOLE X”, “32-POLE XYYZZ”. Electrostatic potential, at nuclei; ESP_AT_NUCLEI; Sets global variables “ESP AT CENTER n”, n = 1 to natoms. Electrostatic potential, on grid; GRID_ESP; Generates V at each point in grid_esp.dat. See Properties evaluated on a grid. Electric field, on grid; GRID_FIELD; Generates {Ex,Ey,Ez} at each point grid_field.dat. See Properties evaluated on a grid. Molecular orbital extents; MO_EXTENTS;  . Mulliken atomic charges; MULLIKEN_CHARGES;  . Löwdin atomic charges; LOWDIN_CHARGES;  . Wiberg bond indices; WIBERG_LOWDIN_INDICES; Uses (Löwdin) symmetrically orthogonalized orbitals. Mayer bond indices; MAYER_INDICES;  . Natural orbital occupations; NO_OCCUPATIONS;  . There are two ways the computation of one-electron properties can be requested.; Firstly, the propert",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.0.0/oeprop-1.html:723,energy,energy,723,psi4manual/1.0.0/oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.0.0/oeprop-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). table of contents. oeprop; oeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.oeprop.html:575,energy,energy,575,psi4manual/master/api/psi4.driver.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.oeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.p4util.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). table of contents. oeprop; oeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.oeprop.html:582,energy,energy,582,psi4manual/master/api/psi4.driver.p4util.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.p4util.oeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters:title (string) – label prepended to all psivars computed. Examples:. 1; 2; 3>>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2018, The Psi4 Project.; Last updated on Wednesday, 25 July 2018 04:21AM.; Created using Sphinx 1.7.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.oeprop-1.html:521,energy,energy,521,psi4manual/1.2.1/api/psi4.driver.oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.oeprop-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters:title (string) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. © Copyright 2019, The Psi4 Project.; Last updated on Wednesday, 15 May 2019 08:49PM.; Created using Sphinx 1.8.5.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.oeprop-1.html:514,energy,energy,514,psi4manual/1.3.2/api/psi4.driver.oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.oeprop-1.html,2,['energy'],['energy']
Energy Efficiency,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters. title (str) – label prepended to all psivars computed; wfn (psi4.core.Wavefunction) – . Examples. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.oeprop-1.html:552,energy,energy,552,psi4manual/1.4.0/api/psi4.driver.oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.oeprop-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters. title (str) – label prepended to all psivars computed; wfn (psi4.core.Wavefunction) – . Examples. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.oeprop-1.html:552,energy,energy,552,psi4manual/1.5.0/api/psi4.driver.oeprop-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.oeprop-1.html,4,['energy'],['energy']
Energy Efficiency,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns; None. Parameters; wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties. How to specify args, which are actually the most important. Parameters. title (str) – label prepended to all psivars computed; wfn (psi4.core.Wavefunction) – . Examples. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.oeprop.html:552,energy,energy,552,psi4manual/1.6.x/api/psi4.driver.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.oeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.oeprop.html:566,energy,energy,566,psi4manual/1.7.x/api/psi4.driver.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.oeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.p4util.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.oeprop.html:573,energy,energy,573,psi4manual/1.7.x/api/psi4.driver.p4util.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.p4util.oeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). table of contents. oeprop; oeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.oeprop.html:568,energy,energy,568,psi4manual/1.8.x/api/psi4.driver.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.oeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.p4util.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). table of contents. oeprop; oeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.oeprop.html:575,energy,energy,575,psi4manual/1.8.x/api/psi4.driver.p4util.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.p4util.oeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). table of contents. oeprop; oeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.oeprop.html:568,energy,energy,568,psi4manual/1.9.x/api/psi4.driver.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.oeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. oeprop. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. oeprop¶. psi4.driver.p4util.oeprop(wfn, *args, **kwargs)[source]¶; Evaluate one-electron properties. Returns:; None. Parameters:. wfn (Wavefunction) – set of molecule, basis, orbitals from which to compute properties; args (List[str]) – Arbitrary-number of properties to be computed from wfn.; See Available One-Electron Properties.; title (str) – label prepended to all psivars computed. Examples:. >>> # [1] Moments with specific label; >>> E, wfn = energy('hf', return_wfn=True); >>> oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', title='H3O+ SCF'). table of contents. oeprop; oeprop(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; oeprop. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.oeprop.html:575,energy,energy,575,psi4manual/1.9.x/api/psi4.driver.p4util.oeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.p4util.oeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; opt. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of p",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.opt.html:261,energy,energy,261,psi4manual/master/api/psi4.driver.opt.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.opt.html,9,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.OptimizationConvergenceError if |optking__geom_maxiter| exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies optimization, indicates whether; the calculations required to complete the; optimization are to be run in one file ('continuous') or are to be; farmed out in an embarrassingly parallel fashion; ('sow'/'reap'). For the latter, run an initial job with; 'sow' and follow instructions in its output file",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.opt-1.html:245,energy,energy,245,psi4manual/1.2.1/api/psi4.driver.opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.opt-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.OptimizationConvergenceError if |optking__geom_maxiter| exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) – 'gradient' || 'energy'; Indicates whether analytic (if available) or finite difference; optimization is to be performed. hessian_with (string) – 'scf' || 'mp2' || etc.; Indicates the computational method with which to perform a hessian; analysis to guide the geometry optimization. Warning; Optimizations where the molecule is specified in Z-matrix format; with dummy atoms will result in the ge",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.opt-1.html:245,energy,energy,245,psi4manual/1.3.2/api/psi4.driver.opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.opt-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; opt. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Options passed to the GeomeTRIC optimizer; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) – 'gradient' || 'energy'; Ind",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.opt-1.html:250,energy,energy,250,psi4manual/1.4.0/api/psi4.driver.opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.opt-1.html,18,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; opt. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Options passed to the GeomeTRIC optimizer; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) – 'gradient' || 'energy'; Ind",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.opt-1.html:250,energy,energy,250,psi4manual/1.5.0/api/psi4.driver.opt-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.opt-1.html,18,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; opt. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Options passed to the GeomeTRIC optimizer; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) – 'gradient' || 'energy'; Ind",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.opt.html:250,energy,energy,250,psi4manual/1.6.x/api/psi4.driver.opt.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.opt.html,9,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; opt. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python fun",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.opt.html:252,energy,energy,252,psi4manual/1.7.x/api/psi4.driver.opt.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.opt.html,9,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; opt. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.opt.html:254,energy,energy,254,psi4manual/1.8.x/api/psi4.driver.opt.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.opt.html,9,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. opt. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; opt. opt¶. psi4.driver.opt(name, **kwargs)¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python f",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.opt.html:254,energy,energy,254,psi4manual/1.9.x/api/psi4.driver.opt.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.opt.html,9,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. PSI4 API: Linking C++ and Python; optimize. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculati",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.optimize.html:289,energy,energy,289,psi4manual/master/api/psi4.driver.optimize.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.optimize.html,9,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.2.1;  · . PSI4. PSI4 API: Linking C++ and Python. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.OptimizationConvergenceError if |optking__geom_maxiter| exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. mode (string) – \(\Rightarrow\) 'continuous' \(\Leftarrow\) || 'sow' || 'reap'; For a finite difference of energies optimization, indicates whether; the calculations required to complete the; optimization are to be run in one file ('continuous') or are to be; farmed out in an embarrassingly parallel fashion; ('sow'/'reap'). For the latter, run an initial job with; 'sow' and follow instruct",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.optimize-1.html:268,energy,energy,268,psi4manual/1.2.1/api/psi4.driver.optimize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.2.1/api/psi4.driver.optimize-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.3.2;  · . PSI4. PSI4 API: Linking C++ and Python. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases:opt(). Returns:float – Total electronic energy of optimized structure in Hartrees. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:psi4.OptimizationConvergenceError if |optking__geom_maxiter| exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) – 'gradient' || 'energy'; Indicates whether analytic (if available) or finite difference; optimization is to be performed. hessian_with (string) – 'scf' || 'mp2' || etc.; Indicates the computational method with which to perform a hessian; analysis to guide the geometry optimization. Warning; Optimizations where the molecule is specified in Z-matrix format; with dummy atom",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.optimize-1.html:268,energy,energy,268,psi4manual/1.3.2/api/psi4.driver.optimize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.3.2/api/psi4.driver.optimize-1.html,8,['energy'],['energy']
Energy Efficiency,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. PSI4 API: Linking C++ and Python; optimize. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Options passed to the GeomeTRIC optimizer; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) –",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.optimize-1.html:278,energy,energy,278,psi4manual/1.4.0/api/psi4.driver.optimize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.optimize-1.html,18,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. PSI4 API: Linking C++ and Python; optimize. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Options passed to the GeomeTRIC optimizer; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) –",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.optimize-1.html:278,energy,energy,278,psi4manual/1.5.0/api/psi4.driver.optimize-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.optimize-1.html,18,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. PSI4 API: Linking C++ and Python; optimize. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases; opt(). Returns; float – Total electronic energy of optimized structure in Hartrees. Returns; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises; psi4.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables. CURRENT ENERGY. Parameters. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Options passed to the GeomeTRIC optimizer; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a nested series of python functions is intended (see Function Intercalls),; use keyword opt_func instead of func. dertype (dertype) –",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.optimize.html:278,energy,energy,278,psi4manual/1.6.x/api/psi4.driver.optimize.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.optimize.html,9,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. PSI4 API: Linking C++ and Python; optimize. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If a",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.optimize.html:280,energy,energy,280,psi4manual/1.7.x/api/psi4.driver.optimize.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.optimize.html,9,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. PSI4 API: Linking C++ and Python; optimize. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.optimize.html:282,energy,energy,282,psi4manual/1.8.x/api/psi4.driver.optimize.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.optimize.html,9,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. optimize. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. PSI4 API: Linking C++ and Python; optimize. optimize¶. psi4.driver.optimize(name, **kwargs)[source]¶; Function to perform a geometry optimization. Aliases:; opt(). Returns:; float – Total electronic energy of optimized structure in Hartrees. Returns:; (float, Wavefunction) – energy and wavefunction when return_wfn specified. Raises:; psi4.driver.OptimizationConvergenceError if GEOM_MAXITER exceeded without reaching geometry convergence. PSI variables:. CURRENT ENERGY. Parameters:. name (str) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the database. May be any valid argument to; psi4.driver.energy(). molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. return_history (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return dictionary of lists of geometries,; energies, and gradients at each step in the optimization. engine (str) – \(\Rightarrow\) 'optking' \(\Leftarrow\) || 'geometric'; Indicates the optimization engine to use, which can be either Psi4’s; native Optking optimizer or the GeomeTRIC program. optimizer_keywords (dict) – Extra options passed to the GeomeTRIC or optking optimizers; Indicates additional options to be passed to the GeomeTRIC optimizer if; chosen as the optimization engine. Alternatively, can be used to set optking options; that are not currently recognized by Psi4. func (function) – \(\Rightarrow\) gradient \(\Leftarrow\) || energy || cbs; Indicates the type of calculation to be performed on the molecule.; The default dertype accesses 'gradient' or 'energy', while; 'cbs' performs a multistage finite difference calculation.; If",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.optimize.html:282,energy,energy,282,psi4manual/1.9.x/api/psi4.driver.optimize.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.optimize.html,9,"['ENERGY', 'energy']","['ENERGY', 'energy']"
Energy Efficiency,"﻿. print_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. print_vibs¶. psi4.driver.qcdb.vib.print_vibs(vibinfo, atom_lbl=None, *, normco='x', shortlong=True, groupby=None, prec=4, ncprec=None)[source]¶; Pretty printer for vibrational analysis. Parameters:. vibinfo (Dict[str, Datum]) – Results of a Hessian solution.; atom_lbl (Optional[List[str]]) – Atomic symbols for printing. If None, integers used.; normco (str) – {‘q’, ‘w’, ‘x’}; Which normal coordinate definition to print (reduced mass, etc. unaffected by this parameter). Must be. q [a0 u^1/2], the mass-weighted normalized eigenvectors of the Hessian,; w [a0], the un-mass-weighted (Cartesian) of q, or; x [a0], the normalized w. shortlong (bool) – Whether normal coordinates should be in (nat, 3) True or (nat * 3, 1) False format.; groupby (Optional[int]) – How many normal coordinates per row. Defaults to 3/6 for shortlong=T/F. Value of -1 uses one row.; prec (int) – Number of decimal places for frequencies, reduced masses, etc.; ncprec (Optional[int]) – Number of decimal places for normal coordinates. Defaults to 2 for shortlong=short and 4 for shortlong=long. Returns:; String suitable for printing. Return type:; str. table of contents. print_vibs; print_vibs(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.10a1.dev61;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 07 November 2024 08:57AM.; Created using Sphinx 7.4.7.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/master/api/psi4.driver.qcdb.vib.print_vibs.html:664,reduce,reduced,664,psi4manual/master/api/psi4.driver.qcdb.vib.print_vibs.html,https://psicode.org,https://psicode.org/psi4manual/master/api/psi4.driver.qcdb.vib.print_vibs.html,4,['reduce'],['reduced']
Energy Efficiency,"﻿. print_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. print_vibs¶. psi4.driver.qcdb.vib.print_vibs(vibinfo, atom_lbl=None, *, normco='x', shortlong=True, groupby=None, prec=4, ncprec=None)[source]¶; Pretty printer for vibrational analysis. Parameters. vibinfo (Dict[str, Datum]) – Results of a Hessian solution.; atom_lbl (Optional[List[str]]) – Atomic symbols for printing. If None, integers used.; normco (str) – {‘q’, ‘w’, ‘x’}; Which normal coordinate definition to print (reduced mass, etc. unaffected by this parameter). Must be. q [a0 u^1/2], the mass-weighted normalized eigenvectors of the Hessian,; w [a0], the un-mass-weighted (Cartesian) of q, or; x [a0], the normalized w. shortlong (bool) – Whether normal coordinates should be in (nat, 3) True or (nat * 3, 1) False format.; groupby (Optional[int]) – How many normal coordinates per row. Defaults to 3/6 for shortlong=T/F. Value of -1 uses one row.; prec (int) – Number of decimal places for frequencies, reduced masses, etc.; ncprec (Optional[int]) – Number of decimal places for normal coordinates. Defaults to 2 for shortlong=short and 4 for shortlong=long. Returns; String suitable for printing. Return type; str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.4;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. © Copyright 2021, The Psi4 Project.; Last updated on Thursday, 05 August 2021 02:16PM.; Created using Sphinx 4.1.2.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.qcdb.vib.print_vibs-1.html:654,reduce,reduced,654,psi4manual/1.4.0/api/psi4.driver.qcdb.vib.print_vibs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.4.0/api/psi4.driver.qcdb.vib.print_vibs-1.html,8,['reduce'],['reduced']
Energy Efficiency,"﻿. print_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. print_vibs¶. psi4.driver.qcdb.vib.print_vibs(vibinfo, atom_lbl=None, *, normco='x', shortlong=True, groupby=None, prec=4, ncprec=None)[source]¶; Pretty printer for vibrational analysis. Parameters. vibinfo (Dict[str, Datum]) – Results of a Hessian solution.; atom_lbl (Optional[List[str]]) – Atomic symbols for printing. If None, integers used.; normco (str) – {‘q’, ‘w’, ‘x’}; Which normal coordinate definition to print (reduced mass, etc. unaffected by this parameter). Must be. q [a0 u^1/2], the mass-weighted normalized eigenvectors of the Hessian,; w [a0], the un-mass-weighted (Cartesian) of q, or; x [a0], the normalized w. shortlong (bool) – Whether normal coordinates should be in (nat, 3) True or (nat * 3, 1) False format.; groupby (Optional[int]) – How many normal coordinates per row. Defaults to 3/6 for shortlong=T/F. Value of -1 uses one row.; prec (int) – Number of decimal places for frequencies, reduced masses, etc.; ncprec (Optional[int]) – Number of decimal places for normal coordinates. Defaults to 2 for shortlong=short and 4 for shortlong=long. Returns; String suitable for printing. Return type; str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.5;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. © Copyright 2021, The Psi4 Project.; Last updated on Sunday, 28 November 2021 02:41AM.; Created using Sphinx 4.3.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.qcdb.vib.print_vibs-1.html:654,reduce,reduced,654,psi4manual/1.5.0/api/psi4.driver.qcdb.vib.print_vibs-1.html,https://psicode.org,https://psicode.org/psi4manual/1.5.0/api/psi4.driver.qcdb.vib.print_vibs-1.html,8,['reduce'],['reduced']
Energy Efficiency,"﻿. print_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. print_vibs¶. psi4.driver.qcdb.vib.print_vibs(vibinfo, atom_lbl=None, *, normco='x', shortlong=True, groupby=None, prec=4, ncprec=None)[source]¶; Pretty printer for vibrational analysis. Parameters. vibinfo (Dict[str, Datum]) – Results of a Hessian solution.; atom_lbl (Optional[List[str]]) – Atomic symbols for printing. If None, integers used.; normco (str) – {‘q’, ‘w’, ‘x’}; Which normal coordinate definition to print (reduced mass, etc. unaffected by this parameter). Must be. q [a0 u^1/2], the mass-weighted normalized eigenvectors of the Hessian,; w [a0], the un-mass-weighted (Cartesian) of q, or; x [a0], the normalized w. shortlong (bool) – Whether normal coordinates should be in (nat, 3) True or (nat * 3, 1) False format.; groupby (Optional[int]) – How many normal coordinates per row. Defaults to 3/6 for shortlong=T/F. Value of -1 uses one row.; prec (int) – Number of decimal places for frequencies, reduced masses, etc.; ncprec (Optional[int]) – Number of decimal places for normal coordinates. Defaults to 2 for shortlong=short and 4 for shortlong=long. Returns; String suitable for printing. Return type; str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.6;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. © Copyright 2022, The Psi4 Project.; Last updated on Thursday, 19 May 2022 08:57PM.; Created using Sphinx 4.5.0.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.qcdb.vib.print_vibs.html:654,reduce,reduced,654,psi4manual/1.6.x/api/psi4.driver.qcdb.vib.print_vibs.html,https://psicode.org,https://psicode.org/psi4manual/1.6.x/api/psi4.driver.qcdb.vib.print_vibs.html,4,['reduce'],['reduced']
Energy Efficiency,"﻿. print_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. print_vibs¶. psi4.driver.qcdb.vib.print_vibs(vibinfo, atom_lbl=None, *, normco='x', shortlong=True, groupby=None, prec=4, ncprec=None)[source]¶; Pretty printer for vibrational analysis. Parameters:. vibinfo (Dict[str, Datum]) – Results of a Hessian solution.; atom_lbl (Optional[List[str]]) – Atomic symbols for printing. If None, integers used.; normco (str) – {‘q’, ‘w’, ‘x’}; Which normal coordinate definition to print (reduced mass, etc. unaffected by this parameter). Must be. q [a0 u^1/2], the mass-weighted normalized eigenvectors of the Hessian,; w [a0], the un-mass-weighted (Cartesian) of q, or; x [a0], the normalized w. shortlong (bool) – Whether normal coordinates should be in (nat, 3) True or (nat * 3, 1) False format.; groupby (Optional[int]) – How many normal coordinates per row. Defaults to 3/6 for shortlong=T/F. Value of -1 uses one row.; prec (int) – Number of decimal places for frequencies, reduced masses, etc.; ncprec (Optional[int]) – Number of decimal places for normal coordinates. Defaults to 2 for shortlong=short and 4 for shortlong=long. Returns:; String suitable for printing. Return type:; str. «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.7;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. © Copyright 2007-2022, The Psi4 Project.; Last updated on Tuesday, 06 December 2022 10:44PM.; Created using Sphinx 5.1.1.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.qcdb.vib.print_vibs.html:655,reduce,reduced,655,psi4manual/1.7.x/api/psi4.driver.qcdb.vib.print_vibs.html,https://psicode.org,https://psicode.org/psi4manual/1.7.x/api/psi4.driver.qcdb.vib.print_vibs.html,4,['reduce'],['reduced']
Energy Efficiency,"﻿. print_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. print_vibs¶. psi4.driver.qcdb.vib.print_vibs(vibinfo, atom_lbl=None, *, normco='x', shortlong=True, groupby=None, prec=4, ncprec=None)[source]¶; Pretty printer for vibrational analysis. Parameters:. vibinfo (Dict[str, Datum]) – Results of a Hessian solution.; atom_lbl (List[str]) – Atomic symbols for printing. If None, integers used.; normco (str) – {‘q’, ‘w’, ‘x’}; Which normal coordinate definition to print (reduced mass, etc. unaffected by this parameter). Must be. q [a0 u^1/2], the mass-weighted normalized eigenvectors of the Hessian,; w [a0], the un-mass-weighted (Cartesian) of q, or; x [a0], the normalized w. shortlong (bool) – Whether normal coordinates should be in (nat, 3) True or (nat * 3, 1) False format.; groupby (int) – How many normal coordinates per row. Defaults to 3/6 for shortlong=T/F. Value of -1 uses one row.; prec (int) – Number of decimal places for frequencies, reduced masses, etc.; ncprec (int) – Number of decimal places for normal coordinates. Defaults to 2 for shortlong=short and 4 for shortlong=long. Returns:; String suitable for printing. Return type:; str. table of contents. print_vibs; print_vibs(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.8.2;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. © Copyright 2007-2023, The Psi4 Project.; Last updated on Wednesday, 04 October 2023 01:57AM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.qcdb.vib.print_vibs.html:647,reduce,reduced,647,psi4manual/1.8.x/api/psi4.driver.qcdb.vib.print_vibs.html,https://psicode.org,https://psicode.org/psi4manual/1.8.x/api/psi4.driver.qcdb.vib.print_vibs.html,4,['reduce'],['reduced']
Energy Efficiency,"﻿. print_vibs. Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. print_vibs¶. psi4.driver.qcdb.vib.print_vibs(vibinfo, atom_lbl=None, *, normco='x', shortlong=True, groupby=None, prec=4, ncprec=None)[source]¶; Pretty printer for vibrational analysis. Parameters:. vibinfo (Dict[str, Datum]) – Results of a Hessian solution.; atom_lbl (Optional[List[str]]) – Atomic symbols for printing. If None, integers used.; normco (str) – {‘q’, ‘w’, ‘x’}; Which normal coordinate definition to print (reduced mass, etc. unaffected by this parameter). Must be. q [a0 u^1/2], the mass-weighted normalized eigenvectors of the Hessian,; w [a0], the un-mass-weighted (Cartesian) of q, or; x [a0], the normalized w. shortlong (bool) – Whether normal coordinates should be in (nat, 3) True or (nat * 3, 1) False format.; groupby (Optional[int]) – How many normal coordinates per row. Defaults to 3/6 for shortlong=T/F. Value of -1 uses one row.; prec (int) – Number of decimal places for frequencies, reduced masses, etc.; ncprec (Optional[int]) – Number of decimal places for normal coordinates. Defaults to 2 for shortlong=short and 4 for shortlong=long. Returns:; String suitable for printing. Return type:; str. table of contents. print_vibs; print_vibs(). «; hide menu. menu; sidebar; »; . Navigation. Index. modules    .    .    .    .  · ; 1.9.1;  · . PSI4. Psithon Functions: Invoking a Calculation; Harmonic Vibrational Analysis and Visualization of Normal Modes — frequency() and hessian(); print_vibs. © Copyright 2007-2024, The Psi4 Project.; Last updated on Thursday, 08 February 2024 09:32PM.; Created using Sphinx 7.2.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.qcdb.vib.print_vibs.html:657,reduce,reduced,657,psi4manual/1.9.x/api/psi4.driver.qcdb.vib.print_vibs.html,https://psicode.org,https://psicode.org/psi4manual/1.9.x/api/psi4.driver.qcdb.vib.print_vibs.html,4,['reduce'],['reduced']
Energy Efficiency,"﻿. proc — PSI4 [beta2] documentation. Navigation. index. modules |; PSI4 [beta2] » ; Module code ». Source code for proc; """"""Module with functions that encode the sequence of PSI module; calls for each of the *name* values of the energy(), optimize(),; response(), and frequency() function. """""". import PsiMod; import shutil; import os; import subprocess; import re; import input; import physconst; from molutil import *; from text import *; from procutil import *; # never import driver, wrappers, or aliases into this file. [docs]def run_dcft(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; a density cumulant functional theory calculation. """"""; PsiMod.scf(); return PsiMod.dcft(). [docs]def run_dcft_gradient(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; DCFT gradient calculation. """"""; PsiMod.set_global_option('DERTYPE', 'FIRST'). run_dcft(name, **kwargs); PsiMod.deriv(). [docs]def run_omp2(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; an orbital-optimized MP2 computation. """"""; oldref = PsiMod.get_global_option('REFERENCE'); PsiMod.set_global_option('REFERENCE', 'UHF'); PsiMod.scf(); return PsiMod.omp2(); PsiMod.set_global_option('REFERENCE', oldref). [docs]def run_scf(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; a self-consistent-field theory (HF & DFT) calculation. """"""; lowername = name.lower(). user_fctl = PsiMod.get_local_option('SCF', 'DFT_FUNCTIONAL'); b_user_fctl = PsiMod.has_option_changed('DFT_FUNCTIONAL'); user_ref = PsiMod.get_local_option('SCF', 'REFERENCE'); b_user_ref = PsiMod.has_option_changed('REFERENCE'); user_scftype = PsiMod.get_local_option('SCF', 'SCF_TYPE'); b_user_scftype = PsiMod.has_option_changed('SCF_TYPE'). if lowername == 'df-scf':; PsiMod.set_global_option('SCF_TYPE', 'DF'); elif lowername == 'hf':; if PsiMod.get_local_option('SCF', 'REFERENCE') == 'RKS':; PsiMod.set_global_option('REFERENCE', 'RHF'); elif PsiMod.get_local_option('SCF', '",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b2/_modules/proc.html:230,energy,energy,230,psi4manual/4.0b2/_modules/proc.html,https://psicode.org,https://psicode.org/psi4manual/4.0b2/_modules/proc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. proc — PSI4 [beta3] documentation. Navigation. index. modules    . toc    ; PSI4 [beta3] » ; Module code ». Source code for proc; from __future__ import print_function; """"""Module with functions that encode the sequence of PSI module; calls for each of the *name* values of the energy(), optimize(),; response(), and frequency() function. """"""; import PsiMod; import shutil; import os; import subprocess; import re; import physconst; from molutil import *; from text import *; from procutil import *; from basislist import *; from functional import *; from optproc import *; # never import driver, wrappers, or aliases into this file. [docs]def run_dcft(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; a density cumulant functional theory calculation. """"""; optstash = OptionsState(; ['REFERENCE']). # DCFT module should probably take a REFERENCE keyword with only UHF allowed value; PsiMod.set_global_option('REFERENCE', 'UHF'); PsiMod.scf(); returnvalue = PsiMod.dcft(). optstash.restore(); return returnvalue. [docs]def run_dcft_gradient(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; DCFT gradient calculation. """"""; optstash = OptionsState(; ['REFERENCE'],; ['GLOBALS', 'DERTYPE']). PsiMod.set_global_option('DERTYPE', 'FIRST'); run_dcft(name, **kwargs); PsiMod.deriv(). optstash.restore(). [docs]def run_omp2(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; an orbital-optimized MP2 computation. """"""; oldref = PsiMod.get_global_option('REFERENCE'); PsiMod.set_global_option('REFERENCE', 'UHF'); PsiMod.scf(); return PsiMod.omp2(); PsiMod.set_global_option('REFERENCE', oldref). [docs]def run_omp3(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; an orbital-optimized MP3 computation. """"""; oldref = PsiMod.get_global_option('REFERENCE'); PsiMod.set_global_option('REFERENCE', 'UHF'); PsiMod.scf(); return PsiMod.omp3(); PsiMod.set_global_option('REFERENCE', oldref). [docs]def run_scf(name, **kwarg",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b3/_modules/proc.html:280,energy,energy,280,psi4manual/4.0b3/_modules/proc.html,https://psicode.org,https://psicode.org/psi4manual/4.0b3/_modules/proc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. proc — PSI4 [beta4] documentation. Navigation. index. modules    . toc    ; PSI4 [beta4] » ; Module code ». Source code for proc; from __future__ import print_function; """"""Module with functions that encode the sequence of PSI module; calls for each of the *name* values of the energy(), optimize(),; response(), and frequency() function. """"""; from psifiles import *; import PsiMod; import shutil; import os; import subprocess; import re; import physconst; from molutil import *; from text import *; from procutil import *; from basislist import *; from functional import *; from optproc import *; from util import *; # never import driver, wrappers, or aliases into this file. # ATTN NEW ADDITIONS!; # consult http://sirius.chem.vt.edu/psi4manual/master/proc_py.html. [docs]def run_dcft(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; a density cumulant functional theory calculation. """"""; optstash = OptionsState(; ['SCF', 'REFERENCE'],; ['DCFT', 'REFERENCE']). PsiMod.set_local_option('SCF', 'REFERENCE', 'UHF'); PsiMod.set_local_option('DCFT', 'REFERENCE', 'UHF'). # Bypass routine scf if user did something special to get it to converge; if not (('bypass_scf' in kwargs) and yes.match(str(kwargs['bypass_scf']))):; scf_helper(name, **kwargs); PsiMod.dcft(). optstash.restore(). [docs]def run_dcft_gradient(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; DCFT gradient calculation. """"""; optstash = OptionsState(; ['GLOBALS', 'DERTYPE']). PsiMod.set_global_option('DERTYPE', 'FIRST'); run_dcft(name, **kwargs); PsiMod.deriv(). optstash.restore(). [docs]def run_omp2(name, **kwargs):; """"""Function encoding sequence of PSI module calls for; an orbital-optimized MP2 computation. """"""; # Bypass routine scf if user did something special to get it to converge; if not (('bypass_scf' in kwargs) and yes.match(str(kwargs['bypass_scf']))):; scf_helper(name, **kwargs). return PsiMod.occ(). [docs]def run_omp2_gradient(name, **kwargs):; """"""Function encodi",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/4.0b4/_modules/proc.html:280,energy,energy,280,psi4manual/4.0b4/_modules/proc.html,https://psicode.org,https://psicode.org/psi4manual/4.0b4/_modules/proc.html,2,['energy'],['energy']
Energy Efficiency,"﻿. psi4.core.HF. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.HF¶. class psi4.core.HF¶; Bases: psi4.core.Wavefunction; docstring; Methods Summary. V_potential(...); Returns the internal DFT V object. Va((self: psi4.core.HF) -> psi4.core.Matrix); Returns the Alpha Kohn-Shame Potential Matrix. Vb((self: psi4.core.HF) -> psi4.core.Matrix); Returns the Alpha Kohn-Shame Potential Matrix. finalize_E((self: psi4.core.HF) -> float); Computes the final SCF energy. form_C((self: psi4.core.HF) -> None); Forms the Orbital Matrices from the current Fock Matrices. form_D((self: psi4.core.HF) -> None); Forms the Density Matrices from the current Orbitals Matrices. form_V((self: psi4.core.HF) -> None); Form the Kohn-Sham Potential Matrices from the current Density Matrices. functional(...); Returns the internal DFT Superfunctional. guess_Ca((self: psi4.core.HF, ...); Sets the guess Alpha Orbital Matrix. guess_Cb((self: psi4.core.HF, ...); Sets the guess Beta Orbital Matrix. initialize((self: psi4.core.HF) -> None); Initializes the Wavefunction. iterations((self: psi4.core.HF) -> None); Iterates the Wavefunction until convergence criteria have been met. jk((self: psi4.core.HF) -> psi4.core.JK); Returns the internal JK object. occupation_a(...); Returns the Alpha occupation numbers. occupation_b(...); Returns the Beta occupation numbers. reset_occ((self: psi4.core.HF, ...); If True, the occupation will be reset after the guess to the inital occupation. semicanonicalize((self: psi4.core.HF) -> None); Semicanonicalizes the orbitals for ROHF. set_sad_basissets((self: psi4.core.HF, ...); Sets the Superposition of Atomic Densities basisset. set_sad_fitting_basissets(...); Sets the Superposition of Atomic Densities density-fitted basisset. Methods Documentation. V_potential(self: psi4.core.HF) → psi4.core.VBase¶; Returns the internal DFT V object. Va(self: psi4.core.HF) → psi4.core.Matrix¶; Returns the Alpha Kohn-Shame Potential Matrix. Vb(self: psi4.core.HF) → psi4.c",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.hf.html:475,energy,energy,475,psi4manual/1.1.0/api/psi4.core.hf.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.hf.html,1,['energy'],['energy']
Energy Efficiency,"﻿. psi4.core.Molecule. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.Molecule¶. class psi4.core.Molecule¶; Bases: object; Class to store the elements, coordinates, fragmentation pattern, basis sets, charge, multiplicity, etc. of a molecule.; Attributes Summary. units; Units (Angstrom or Bohr) used to define the geometry. Methods Summary. BFS(); Perform a breadth-first search (BFS) on the real atoms in molecule, returning an array of atom indices of fragments. Z((self: psi4.core.Molecule, arg0: int) -> float); Nuclear charge of atom arg1 (0-indexed). activate_all_fragments(...); Sets all fragments in the molecule to be active. add_atom((self: psi4.core.Molecule, ...); Adds to Molecule arg0 an atom with atomic number arg1, Cartesian coordinates in Bohr (arg2, arg3, arg4), atomic symbol arg5, mass arg6, charge arg7 (optional), and lineno arg8 (optional). atom_at_position((self: psi4.core.Molecule, ...); Tests to see if an atom is at the position arg2 with a given tolerance arg3. center_of_mass(...); Computes center of mass of molecule (does not translate molecule). charge((self: psi4.core.Molecule, ...); Gets charge of atom arg1 (0-indexed). clone(...); Returns a new Molecule identical to arg0. create_molecule_from_string(...); Returns a new Molecule with member data from the geometry string arg0 in Psi4 format. create_psi4_string_from_molecule(...); Gets a string reexpressing in input format the current states of the molecule. deactivate_all_fragments(...); Sets all fragments in the molecule to be inactive. distance_matrix(...); Returns Matrix of interatom distances. extract_subsets(*args, **kwargs); Overloaded function. fZ((self: psi4.core.Molecule, ...); Nuclear charge of atom arg1 (0-indexed including dummies). fcharge((self: psi4.core.Molecule, ...); Gets charge of atom arg1 (0-indexed including dummies). find_point_group((self: psi4.core.Molecule, ...); Finds computational molecular point group, user can override this with the symmetry keywor",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.molecule.html:221,charge,charge,221,psi4manual/1.1.0/api/psi4.core.molecule.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.molecule.html,3,['charge'],['charge']
Energy Efficiency,"﻿. psi4.core.SuperFunctional. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.SuperFunctional¶. class psi4.core.SuperFunctional¶; Bases: object; docstring; Methods Summary. add_c_functional(...); docstring. add_x_functional(...); docstring. allocate(...); docstring. ansatz((self: psi4.core.SuperFunctional) -> int); docstring. blank(() -> psi4.core.SuperFunctional); docstring. c_alpha(...); docstring. c_functional(...); docstring. c_omega(...); docstring. c_os_alpha(...); docstring. c_ss_alpha(...); docstring. citation(...); docstring. deriv((self: psi4.core.SuperFunctional) -> int); docstring. description(...); docstring. is_c_hybrid(...); docstring. is_c_lrc(...); docstring. is_c_scs_hybrid(...); docstring. is_gga((self: psi4.core.SuperFunctional) -> bool); docstring. is_meta(...); docstring. is_x_hybrid(...); docstring. is_x_lrc(...); docstring. max_points(...); docstring. name((self: psi4.core.SuperFunctional) -> str); docstring. print_detail(...); docstring. print_out(...); docstring. set_c_alpha(...); docstring. set_c_omega(...); docstring. set_c_os_alpha(...); docstring. set_c_ss_alpha(...); docstring. set_citation(...); docstring. set_deriv((self: psi4.core.SuperFunctional, ...); docstring. set_description(...); docstring. set_max_points(...); docstring. set_name((self: psi4.core.SuperFunctional, ...); docstring. set_x_alpha(...); docstring. set_x_omega(...); docstring. test_functional(...); docstring. value((self: psi4.core.SuperFunctional, ...); docstring. x_alpha(...); docstring. x_functional(...); docstring. x_omega(...); docstring. Methods Documentation. add_c_functional(self: psi4.core.SuperFunctional, arg0: psi::Functional) → None¶; docstring. add_x_functional(self: psi4.core.SuperFunctional, arg0: psi::Functional) → None¶; docstring. allocate(self: psi4.core.SuperFunctional) → None¶; docstring. ansatz(self: psi4.core.SuperFunctional) → int¶; docstring. blank() → psi4.core.SuperFunctional¶; docstring. c_alpha(self: psi4.core.SuperFun",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.superfunctional.html:261,allocate,allocate,261,psi4manual/1.1.0/api/psi4.core.superfunctional.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.superfunctional.html,1,['allocate'],['allocate']
Energy Efficiency,"﻿. psi4.core.ccenergy. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.ccenergy¶. psi4.core.ccenergy(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the coupled cluster energy code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.ccenergy.html:193,energy,energy,193,psi4manual/1.1.0/api/psi4.core.ccenergy.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.ccenergy.html,1,['energy'],['energy']
Energy Efficiency,"﻿. psi4.core.cctriples. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.cctriples¶. psi4.core.cctriples(arg0: psi::Wavefunction) → float¶; Runs the coupled cluster (T) energy code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cctriples.html:188,energy,energy,188,psi4manual/1.1.0/api/psi4.core.cctriples.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.cctriples.html,1,['energy'],['energy']
Energy Efficiency,"﻿. psi4.core.fd_1_0. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.fd_1_0¶. psi4.core.fd_1_0(arg0: psi::Molecule, arg1: list) → psi::Matrix¶; Performs a finite difference gradient computation, from energy points. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_1_0.html:220,energy,energy,220,psi4manual/1.1.0/api/psi4.core.fd_1_0.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_1_0.html,1,['energy'],['energy']
Energy Efficiency,"﻿. psi4.core.fd_freq_0. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.fd_freq_0¶. psi4.core.fd_freq_0(arg0: psi::Molecule, arg1: list, arg2: int) → psi::Matrix¶; Performs a finite difference frequency computation, from energy points, for a given irrep. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_freq_0.html:241,energy,energy,241,psi4manual/1.1.0/api/psi4.core.fd_freq_0.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_freq_0.html,1,['energy'],['energy']
Energy Efficiency,"﻿. psi4.core.fd_geoms_1_0. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.fd_geoms_1_0¶. psi4.core.fd_geoms_1_0(arg0: psi::Molecule) → List[psi::Matrix]¶; Gets list of displacements needed for a finite difference gradient computation, from energy points. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_geoms_1_0.html:261,energy,energy,261,psi4manual/1.1.0/api/psi4.core.fd_geoms_1_0.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_geoms_1_0.html,1,['energy'],['energy']
Energy Efficiency,"﻿. psi4.core.fd_geoms_freq_0. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.fd_geoms_freq_0¶. psi4.core.fd_geoms_freq_0(arg0: psi::Molecule, arg1: int) → List[psi::Matrix]¶; Gets list of displacements needed for a finite difference frequency computation, from energy points, for a given irrep. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_geoms_freq_0.html:282,energy,energy,282,psi4manual/1.1.0/api/psi4.core.fd_geoms_freq_0.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fd_geoms_freq_0.html,1,['energy'],['energy']
Energy Efficiency,"﻿. psi4.core.fisapt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.fisapt¶. psi4.core.fisapt(arg0: psi::Wavefunction) → float¶; Runs the functional-group intramolecular symmetry adapted perturbation theory code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fisapt.html:200,adapt,adapted,200,psi4manual/1.1.0/api/psi4.core.fisapt.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fisapt.html,1,['adapt'],['adapted']
Energy Efficiency,"﻿. psi4.core.fnocc. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.fnocc¶. psi4.core.fnocc(arg0: psi::Wavefunction) → psi::Wavefunction¶; Runs the fno-ccsd(t)/qcisd(t)/mp4/cepa energy code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fnocc.html:198,energy,energy,198,psi4manual/1.1.0/api/psi4.core.fnocc.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.fnocc.html,1,['energy'],['energy']
Energy Efficiency,"﻿. psi4.core.get_atomic_point_charges. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.get_atomic_point_charges¶. psi4.core.get_atomic_point_charges() → psi::Vector¶; Returns the most recently computed atomic point charges, as a double * object. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_atomic_point_charges.html:235,charge,charges,235,psi4manual/1.1.0/api/psi4.core.get_atomic_point_charges.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.get_atomic_point_charges.html,1,['charge'],['charges']
Energy Efficiency,"﻿. psi4.core.sapt. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.core.sapt¶. psi4.core.sapt(arg0: psi::Wavefunction, arg1: psi::Wavefunction, arg2: psi::Wavefunction) → float¶; Runs the symmetry adapted perturbation theory code. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.core.sapt.html:212,adapt,adapted,212,psi4manual/1.1.0/api/psi4.core.sapt.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.core.sapt.html,1,['adapt'],['adapted']
Energy Efficiency,"﻿. psi4.driver.QMMM. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.QMMM¶. class psi4.driver.QMMM[source]¶; Bases: object; Methods Summary. addChargeAngstrom(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z); Function to add a point charge of magnitude Q at position (x, y, z) Bohr. addDiffuse(diffuse); Function to add a diffuse charge field diffuse. populateExtern(); Function to define a charge field external to the molecule through point and diffuse charges. Methods Documentation. addChargeAngstrom(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]¶; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]¶; Function to add a diffuse charge field diffuse. populateExtern()[source]¶; Function to define a charge field external to the; molecule through point and diffuse charges. addChargeAngstrom(Q, x, y, z)[source]; Function to add a point charge of magnitude Q at; position (x, y, z) Angstroms. addChargeBohr(Q, x, y, z)[source]; Function to add a point charge of magnitude Q at; position (x, y, z) Bohr. addDiffuse(diffuse)[source]; Function to add a diffuse charge field diffuse. populateExtern()[source]; Function to define a charge field external to the; molecule through point and diffuse charges. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.qmmm.html:218,charge,charge,218,psi4manual/1.1.0/api/psi4.driver.qmmm.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.qmmm.html,15,['charge'],"['charge', 'charges']"
Energy Efficiency,"﻿. psi4.driver.cbs. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.cbs¶. psi4.driver.cbs(func, label, **kwargs)[source]¶; Function to define a multistage energy method from combinations of; basis set extrapolations and delta corrections and condense the; components into a minimum number of calculations. Aliases:complete_basis_set(). Returns:(float) – Total electronic energy in Hartrees. PSI variables:. CBS TOTAL ENERGY; CBS REFERENCE ENERGY; CBS CORRELATION ENERGY; CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Caution; Some features are not yet implemented. Buy a developer a coffee. No way to tell function to boost fitting basis size for all calculations.; No way to extrapolate def2 family basis sets; Need to add more extrapolation schemes. As represented in the equation below, a CBS energy method is defined in several; sequential stages (scf, corl, delta, delta2, delta3, delta4, delta5) covering treatment; of the reference total energy, the correlation energy, a delta correction to the; correlation energy, and a second delta correction, etc.. Each is activated by its; stage_wfn keyword and is only allowed if all preceding stages are active. \[E_{\text{total}}^{\text{CBS}} = \mathcal{F}_{\textbf{scf_scheme}} \left(E_{\text{total},\; \text{SCF}}^{\textbf{scf_basis}}\right) \; + \mathcal{F}_{\textbf{corl_scheme}} \left(E_{\text{corl},\; \textbf{corl_wfn}}^{\textbf{corl_basis}}\right) \; + \delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; + \delta_{\textbf{delta2_wfn_lesser}}^{\textbf{delta2_wfn}} \; + \delta_{\textbf{delta3_wfn_lesser}}^{\textbf{delta3_wfn}} \; + \delta_{\textbf{delta4_wfn_lesser}}^{\textbf{delta4_wfn}} \; + \delta_{\textbf{delta5_wfn_lesser}}^{\textbf{delta5_wfn}}\]; Here, \(\mathcal{F}\) is an energy or energy extrapolation scheme, and the following also hold. \[\delta_{\textbf{delta_wfn_lesser}}^{\textbf{delta_wfn}} \; = \mathcal{F}_{\textbf{delta_scheme}} \left(E_{\text{corl},\; \textbf{delta_",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.cbs.html:177,energy,energy,177,psi4manual/1.1.0/api/psi4.driver.cbs.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.cbs.html,6,['energy'],['energy']
Energy Efficiency,"﻿. psi4.driver.cubeprop. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.cubeprop¶. psi4.driver.cubeprop(wfn, **kwargs)[source]¶; Evaluate properties on a grid and generate cube files. New in version 0.5: wfn parameter passed explicitly. Returns:None. Parameters:wfn (Wavefunction) – set of molecule, basis, orbitals from which to generate cube files. Examples:. 1; 2; 3>>> # [1] Cube files for all orbitals; >>> E, wfn = energy('b3lyp', return_wfn=True); >>> cubeprop(wfn). 1; 2; 3; 4; 5; 6>>> # [2] Cube files for density (alpha, beta, total, spin) and four orbitals; >>> # (two alpha, two beta); >>> set cubeprop_tasks ['orbitals', 'density']; >>> set cubeprop_orbitals [5, 6, -5, -6]; >>> E, wfn = energy('scf', return_wfn=True); >>> cubeprop(wfn). Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. © Copyright 2017, The Psi4 Project.; Last updated on Wednesday, 17 May 2017 05:47AM.; Created using Sphinx 1.5.6.; . ",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.cubeprop.html:444,energy,energy,444,psi4manual/1.1.0/api/psi4.driver.cubeprop.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.cubeprop.html,2,['energy'],['energy']
Energy Efficiency,"﻿. psi4.driver.energy. Navigation. Index. modules    .    .  · ; 1.1;  · . PSI4. psi4.driver.energy¶. psi4.driver.energy(name, **kwargs)[source]¶; Function to compute the single-point electronic energy. Returns:float – Total electronic energy in Hartrees. SAPT & EFP return interaction energy. Returns:(float, Wavefunction) – energy and wavefunction when return_wfn specified. PSI variables:. CURRENT ENERGY; CURRENT REFERENCE ENERGY; CURRENT CORRELATION ENERGY. Parameters:; name (string) – 'scf' || 'mp2' || 'ci5' || etc.; First argument, usually unlabeled. Indicates the computational method; to be applied to the system. molecule (molecule) – h2o || etc.; The target molecule, if not the last molecule defined. return_wfn (boolean) – 'on' || \(\Rightarrow\) 'off' \(\Leftarrow\); Indicate to additionally return the Wavefunction; calculation result as the second element (after float energy) of a tuple. restart_file (string) – ['file.1, file.32] || ./file || etc.; Binary data files to be renamed for calculation restart. name; calls method. efp; effective fragment potential (EFP) [manual]. scf; Hartree–Fock (HF) or density functional theory (DFT) [manual]. hf; HF self consistent field (SCF) [manual]. hf3c; HF with dispersion, BSSE, and basis set corrections [manual]. pbeh3c; PBEh with dispersion, BSSE, and basis set corrections [manual]. dcft; density cumulant functional theory [manual]. mp2; 2nd-order Møller–Plesset perturbation theory (MP2) [manual] [details]. mp3; 3rd-order Møller–Plesset perturbation theory (MP3) [manual] [details]. fno-mp3; MP3 with frozen natural orbitals [manual]. mp2.5; average of MP2 and MP3 [manual] [details]. mp4(sdq); 4th-order MP perturbation theory (MP4) less triples [manual]. fno-mp4(sdq); MP4 (less triples) with frozen natural orbitals [manual]. mp4; full MP4 [manual] [details]. fno-mp4; full MP4 with frozen natural orbitals [manual]. mpn; nth-order Møller–Plesset (MP) perturbation theory [manual]. zaptn; nth-order z-averaged perturbation theor",MatchSource.WIKI,psi4,psi4,v1.9.1,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.energy.html:15,energy,energy,15,psi4manual/1.1.0/api/psi4.driver.energy.html,https://psicode.org,https://psicode.org/psi4manual/1.1.0/api/psi4.driver.energy.html,8,['energy'],['energy']
