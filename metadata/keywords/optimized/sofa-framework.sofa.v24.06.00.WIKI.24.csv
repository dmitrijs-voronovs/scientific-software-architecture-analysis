quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Usability,"er &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_forceBinarysofa::component::io::mesh::MeshSTLLoader; d_headerSizesofa::component::io::mesh::MeshSTLLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoade",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html:4909,clear,clearLoggedMessages,4909,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader-members.html,1,['clear'],['clearLoggedMessages']
Usability,"er &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html:4943,clear,clearLoggedMessages,4943,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_gmsh_loader-members.html,5,['clear'],['clearLoggedMessages']
Usability,"er)sofa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::linearalgebra::RotationMatrix< TReal >virtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::RotationMatrix< TReal >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html:5737,clear,clear,5737,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,1,['clear'],['clear']
Usability,"er::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:5484,clear,clearTetrahedraAroundVertex,5484,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearTetrahedraAroundVertex']
Usability,"erer. /sofa-unity3d-full-integration; ; SOFA – SOFA & Unity3D – Full Integration. /sofa-unrealengine-5-basic-renderer; ; SOFA – SOFA & UnrealEngine 5 – Basic Renderer. /soft-rigid-hybrid-arms; ; SOFA – Soft-Rigid Hybrid Arms. /softrobots; ; SOFA – Models and Actuators for Soft-Robots. /tearing; ; SOFA – Tearing. /tetrahedral-mesh-tool; ; SOFA – Tetrahedral Mesh Tool. /timoshenko-beam-catheters; ; SOFA – Timoshenko Beam: catheters. /tutorial-probe-tissue-interaction; ; SOFA – Tutorial: probe-tissue interaction. /ultra-sound-rendering; . /embed; ; Ultra-Sound Rendering – SOFA. SOFA – Ultra-Sound Rendering. /visco-elasticity; ; SOFA – Visco-Elasticity. /x-ray-rendering; ; SOFA – X-Ray Rendering. /xxl-robot; ; SOFA – XXL Robot. SOFA – Plugins. /publications; . /add-a-publication-with-hal; ; SOFA – Add a publication with HAL. /feed; . 	Comments on: Publications	. SOFA – Publications. /submit; ; SOFA – Submit your asset. comments; . /feed; . 	Comments for SOFA	. community; . /feedback; ; SOFA – Feedback Form. /forum; . /feed; ; SOFA » All Posts. /reply; . /15772; ; SOFA - Reply To: CGAL Configuration. /3279; ; SOFA - Reply To: [SOLVED] Obj Files, Msh Files. /section; . /announcements-infos; . /feed; ; SOFA » All Posts. /page; . /2; ; SOFA - Forum: Announcements / Infos. /3; ; SOFA - Forum: Announcements / Infos. /4; ; SOFA - Forum: Announcements / Infos. /5; ; SOFA - Forum: Announcements / Infos. SOFA - Forum: Announcements / Infos. /sofa; . /building-sofa; . /feed; ; SOFA » All Posts. /page; . /10; ; SOFA - Forum: Building SOFA. /11; ; SOFA - Forum: Building SOFA. /12; ; SOFA - Forum: Building SOFA. /13; ; SOFA - Forum: Building SOFA. /2; ; SOFA - Forum: Building SOFA. /3; ; SOFA - Forum: Building SOFA. /4; ; SOFA - Forum: Building SOFA. /5; ; SOFA - Forum: Building SOFA. /6; ; SOFA - Forum: Building SOFA. /7; ; SOFA - Forum: Building SOFA. /8; ; SOFA - Forum: Building SOFA. /9; ; SOFA - Forum: Building SOFA. SOFA - Forum: Building SOFA. /feed; ; SOFA » All Posts. /gettin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:247597,feedback,feedback,247597,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,"erridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(sofa::Index index, CollisionModel *model2, sofa::Index index2) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >inlinestatic; sofa::core::CollisionModel::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TriangleCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html:2820,clear,clearLoggedMessages,2820,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,erridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInQuadArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgesInQuadArray ; (; ). protectedvirtual . Creates the array of edge indices for each quad. ; This function is only called if the EdgesInQuad array is required. m_edgesInQuad[i] contains the 4 indices of the 4 edges composing the ith quad. . ◆ createQuadsAroundEdgeArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::crea,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40594,clear,clearQuadsAroundEdge,40594,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clearQuadsAroundEdge']
Usability,erridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_tetrahedron . m_edgesInTetrahedron . m_trianglesInTetrahedron . m_tetrahedraAroundVertex . m_tetrahedraAroundEdge . m_tetrahedraAroundTriangle ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::to,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50787,clear,clearTetrahedra,50787,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedra']
Usability,"ers. addComponent(const QString &component, core::objectmodel::Base *base, QTreeWidgetItem *listItem, bool clear=true)sofa::gui::qt::QDisplayPropertyWidget; addData(const QString &component, const QString &group, sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QDisplayPropertyWidget; addDescriptionItem(QTreeWidgetItem *groupItem, const QString &name, const QString &description)sofa::gui::qt::QDisplayPropertyWidgetprotected; addGroup(const QString &component, const QString &group)sofa::gui::qt::QDisplayPropertyWidget; addLink(const QString &component, const QString &group, sofa::core::objectmodel::BaseLink *link)sofa::gui::qt::QDisplayPropertyWidget; clear()sofa::gui::qt::QDisplayPropertyWidget; clearAll()sofa::gui::qt::QDisplayPropertyWidget; clearComponentOutput()sofa::gui::qt::QDisplayPropertyWidgetprotectedslot; clearComponentWarning()sofa::gui::qt::QDisplayPropertyWidgetprotectedslot; DefaultDataGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; DefaultInfoGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; DefaultLinkGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; DefaultLogGroup()sofa::gui::qt::QDisplayPropertyWidgetinlinestatic; findComponent(const QString &component) constsofa::gui::qt::QDisplayPropertyWidgetprotected; findGroup(const QString &component, const QString &group) constsofa::gui::qt::QDisplayPropertyWidgetprotected; GraphHistoryManager classsofa::gui::qt::QDisplayPropertyWidgetfriend; LinkComponent classsofa::gui::qt::QDisplayPropertyWidgetfriend; QDisplayPropertyWidget(const ModifyObjectFlags &modifyFlags, QWidget *parent=nullptr)sofa::gui::qt::QDisplayPropertyWidget; setConsoleOutput(const QString &component, const QString &group, sofa::core::objectmodel::Base *base)sofa::gui::qt::QDisplayPropertyWidget; setDescription(const QString &component, const QString &group, sofa::core::objectmodel::Base *base)sofa::gui::qt::QDisplayPropertyWidget; ~QDisplayPropertyWidget() overridesofa::gui::qt::QDisplayPropertyWidget. Gen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget-members.html:367,clear,clear,367,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget-members.html,5,['clear'],"['clear', 'clearAll', 'clearComponentOutput', 'clearComponentWarning']"
Usability,ervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContain,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:4693,clear,clearEdgesInQuad,4693,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearEdgesInQuad']
Usability,"es from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<class TReal > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [6/8]. template<class TReal > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<class TReal > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ add() [8/8]. template<class Real > . void sofa::linearalgebra::RotationMatrix< Real >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . double ; v . ). overridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear(). template<class Real > . void sofa::linearalgebra::RotationMatrix< Real >::clear. overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<class Real > . sofa::SignedIndex sofa::linearalgebra::RotationMatrix< Real >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<class Real > . SReal sofa::linearalgebra::RotationMatrix< Real >::element ; (; Index ; i, . sofa::SignedIndex ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getVector(). template<class Real > . type::vector< Real > & sofa::linearalgebra::RotationMatrix< Real >::getVector. virtual . ◆ Name() [1/5]. const char * sofa::linearalgebra::RotationMatrix< float >::Name ; (; ). ◆ Name() [2/5]. const char * sofa::linearalgebra::RotationMatrix< double >::Name ; (; ). ◆ Name() [3/5]. template<class TReal > . template SOFA_LINEARALGEBRA_API const ch",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:17715,clear,clear,17715,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,1,['clear'],['clear']
Usability,"es the hexahedron volume of hexahedron no i and returns it More...;  ; Real computeShapeFunction (const LocalCoord nc, const HexahedronBinaryIndex bi) const;  computes the shape function value for a given binary index More...;  ; Coord computeNodalValue (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the nodal position given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; void computePositionDerivative (const HexaID h, const LocalCoord nc, const VecCoord &p, Coord dpos[3]) const;  computes the nodal position derivative along the 3 natural coordinates given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; Real computeJacobian (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the Jacobian i.e. determinant of dpos/dnc on the geometry given by p (could be rest geometry) More...;  ; bool isHexahedronAffine (const HexaID h, const VecCoord &p, const Real tolerance=(Real) 1e-5) const;  test if the heaxahedron is a simple affine warp of a cube More...;  ; LocalCoord computeHexahedronBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; LocalCoord computeHexahedronRestBarycentricCoeficients (const HexaID h, const Coord &p) const;  computes barycentric coordinates corresponding to a given position in the hexa 'h' in its rest position. Warning: this method is only correct if the hexahedron is not deformed More...;  ; Coord getPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  computes a position corresponding to given barycentric coordinates More...;  ; Coord getRestPointPositionInHexahedron (const HexaID h, const LocalCoord &baryC) const;  ; Coord getPointPositionInHexahedron (const HexaID h, const Real baryC[3]) const;  computes a position corresponding to given ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html:7460,simpl,simple,7460,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,2,['simpl'],['simple']
Usability,"es. . ◆ add() [8/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [9/9]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:19856,clear,clear,19856,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clear']
Usability,"es. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; basic linear operations; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:3451,clear,clearRowCol,3451,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearRowCol']
Usability,"es. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and add the result in vector result. More...; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:5802,clear,clearRowCol,5802,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,1,['clear'],['clearRowCol']
Usability,"es. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the resu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:3913,clear,clearRowCol,3913,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,1,['clear'],['clearRowCol']
Usability,"es. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:15958,clear,clearRowCol,15958,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearRowCol']
Usability,"escription; This class exists only for compatibility reasons. To be removed once the deprecated API addKToMatrix and addMToMatrix is removed . Public Attributes; std::map< sofa::type::fixed_array< const sofa::core::behavior::BaseMechanicalState *, 2 >, std::shared_ptr< linearalgebra::BaseMatrix > > matrixMap;  . Public Member Functions; MatrixRef getMatrix (const sofa::core::behavior::BaseMechanicalState *mstate) const override;  ; InteractionMatrixRef getMatrix (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2) const override;  ; void setMatrix (sofa::core::behavior::BaseMechanicalState *mstate1, sofa::core::behavior::BaseMechanicalState *mstate2, std::shared_ptr< linearalgebra::BaseMatrix > matrix);  ;  Public Member Functions inherited from sofa::core::behavior::DefaultMultiMatrixAccessor;  DefaultMultiMatrixAccessor ();  ;  ~DefaultMultiMatrixAccessor () override;  ; virtual void clear ();  ; virtual void setGlobalMatrix (linearalgebra::BaseMatrix *matrix);  ; void addMechanicalState (const sofa::core::behavior::BaseMechanicalState *mstate) override;  ; void addMechanicalMapping (sofa::core::BaseMapping *mapping) override;  ; void addMappedMechanicalState (const sofa::core::behavior::BaseMechanicalState *mstate) override;  ; virtual void setupMatrices ();  ; Index getGlobalDimension () const override;  ; int getGlobalOffset (const sofa::core::behavior::BaseMechanicalState *mstate) const override;  ; virtual void computeGlobalMatrix ();  ; void setDoPrintInfo (bool value);  ;  Public Member Functions inherited from sofa::core::behavior::MultiMatrixAccessor; virtual ~MultiMatrixAccessor ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::DefaultMultiMatrixAccessor; bool m_doPrintInfo {false};  ; linearalgebra::BaseMatrix * globalMatrix {nullptr};  ; Index globalDim {0};  ; std::map< const sofa::core::behavior::BaseMechanicalState *, unsigned int > realState",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_matrix_accessor_compat.html:1367,clear,clear,1367,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_matrix_accessor_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_matrix_accessor_compat.html,1,['clear'],['clear']
Usability,"est); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element() [1/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i); const. inline . ◆ element() [2/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ equal(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::equal ; (; const M & ; m, . bool ; add = fals",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:20512,clear,clearRowCol,20512,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clearRowCol']
Usability,"etAttributeMap () const;  ; template<class T > ; void getAttributeList (T &container) const;  ; virtual Base * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...;  ; virtual const char * getAttribute (const std::string &attr, const char *defaultVal=nullptr);  Get an attribute given its name (return defaultVal if not present) More...;  ; virtual float getAttributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::simulation::xml::BaseElement; std::map< std::string, std::string > replaceAttribute;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObjectDescription; AttributeMap attributes;  ; std::vector< std::string > errors;  ;  Static Public Member Functions inherited from sofa::simulation::xml::BaseElement; static BaseElement * Create (const std::string &nodeClass, const std::string &name, const std::string &type);  ; template<class Node > ; static Node * create (Node *, std::pair< std::string, std::string > arg);  . Constructor details. ◆ NodeElement(). sofa::simulation::xml::NodeElement::NodeElement ; (; const std::string & ; name, . const std::string & ; type, . BaseElement * ; parent = nullptr . ). ◆ ~NodeElement(). sofa::simulation::xml::NodeElement::~NodeElement ; (; ). override . Function de",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html:5200,clear,clearErrors,5200,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html,1,['clear'],['clearErrors']
Usability,"etAttributeMap () const;  ; template<class T > ; void getAttributeList (T &container) const;  ; virtual Base * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...;  ; virtual const char * getAttribute (const std::string &attr, const char *defaultVal=nullptr);  Get an attribute given its name (return defaultVal if not present) More...;  ; virtual float getAttributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::simulation::xml::BaseElement; std::map< std::string, std::string > replaceAttribute;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObjectDescription; AttributeMap attributes;  ; std::vector< std::string > errors;  ;  Static Public Member Functions inherited from sofa::simulation::xml::BaseElement; static BaseElement * Create (const std::string &nodeClass, const std::string &name, const std::string &type);  ; template<class Node > ; static Node * create (Node *, std::pair< std::string, std::string > arg);  ;  Protected Member Functions inherited from sofa::simulation::xml::BaseElement; virtual bool setParent (BaseElement *newParent);  Change this node's parent. Note that this method is protected as it should be called by the parent's addChild/removeChild methods. More...;  . Constructor de",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element.html:5115,clear,clearErrors,5115,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element.html,4,['clear'],['clearErrors']
Usability,"etAttributeMap () const;  ; template<class T > ; void getAttributeList (T &container) const;  ; virtual Base * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...;  ; virtual const char * getAttribute (const std::string &attr, const char *defaultVal=nullptr);  Get an attribute given its name (return defaultVal if not present) More...;  ; virtual float getAttributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Protected Member Functions; virtual void updateSceneGraph (sofa::core::BaseMapping *multiMapping, const type::vector< simulation::Node * > &ancestorInputs, type::vector< simulation::Node * > &otherInputs, type::vector< simulation::Node * > &outputs)=0;  ;  Protected Member Functions inherited from sofa::simulation::xml::BaseElement; virtual bool setParent (BaseElement *newParent);  Change this node's parent. Note that this method is protected as it should be called by the parent's addChild/removeChild methods. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::simulation::xml::BaseElement; std::map< std::string, std::string > replaceAttribute;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObjectDescription; AttributeMap attributes;  ; std::vector< std::string > errors;  ;  Static Public Member Functions inherited from sofa::si",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html:5317,clear,clearErrors,5317,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html,1,['clear'],['clearErrors']
Usability,"etAttributeMap () const;  ; template<class T > ; void getAttributeList (T &container) const;  ; virtual Base * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...;  ; virtual const char * getAttribute (const std::string &attr, const char *defaultVal=nullptr);  Get an attribute given its name (return defaultVal if not present) More...;  ; virtual float getAttributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Static Public Member Functions; static BaseElement * Create (const std::string &nodeClass, const std::string &name, const std::string &type);  ; template<class Node > ; static Node * create (Node *, std::pair< std::string, std::string > arg);  . Protected Member Functions; virtual bool setParent (BaseElement *newParent);  Change this node's parent. Note that this method is protected as it should be called by the parent's addChild/removeChild methods. More...;  . Attribute details. ◆ replaceAttribute. std::map< std::string, std::string > sofa::simulation::xml::BaseElement::replaceAttribute. protected . Constructor details. ◆ BaseElement(). sofa::simulation::xml::BaseElement::BaseElement ; (; const std::string & ; name, . const std::string & ; type, . BaseElement * ; newParent = nullptr . ). ◆ ~BaseElement(). sofa::simulation::xml::BaseElement::~BaseElement ; (; ). override . Function",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html:4822,clear,clearErrors,4822,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html,1,['clear'],['clearErrors']
Usability,"evirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ asub() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:16993,clear,clear,16993,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,1,['clear'],['clear']
Usability,evirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_triangle . m_edgesInTriangle . m_trianglesAroundVertex . m_trianglesAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTriangleTopologyFromDirty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTriangleArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgesInTriangleArray ; (; ). protectedvirtual . Creates the array of edge indices for each triangle. ; This functi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:41537,clear,clearTriangles,41537,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clearTriangles']
Usability,"evirtual . Create the system corresponding to the constraints ; Implements sofa::core::behavior::ConstraintSolver. ◆ buildSystem_matrixAssembly(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::buildSystem_matrixAssembly ; (; const core::ConstraintParams * ; cParams). protected . ◆ buildSystem_matrixFree(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::buildSystem_matrixFree ; (; unsigned int ; numConstraints). protected . ◆ cleanup(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::cleanup ; (; ). overridevirtual . Called just before deleting this object Any object in the tree below this object that are to be removed will be removed only after this call, so any references this object holds should still be valid. ; Reimplemented from sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl. ◆ clearConstraintProblemLocks(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::clearConstraintProblemLocks ; (; ). protected . ◆ computeResidual(). void sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::computeResidual ; (; const core::ExecParams * ; ). overridevirtual . Compute the residual in the newton iterations due to the constraints forces i.e. compute Vecid::force() += J^t lambda the result is accumulated in Vecid::force() ; Reimplemented from sofa::core::behavior::ConstraintSolver. ◆ getConstraintProblem(). ConstraintProblem * sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::getConstraintProblem ; (; ). overridevirtual . Implements sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl. ◆ getDx(). sofa::core::MultiVecDerivId sofa::component::constraint::lagrangian::solver::GenericConstraintSolver::getDx ; (; ); const. overridevirtual . Reimplemented from sofa::core::behavior::ConstraintSolver. ◆ getLambda(). sofa::core::MultiVecDerivId sofa::component::constraint::lagran",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html:29940,clear,clearConstraintProblemLocks,29940,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,1,['clear'],['clearConstraintProblemLocks']
Usability,"ex, Index);  ; template<class B > ; void getSubMatrix (Index i, Index j, Index nrow, Index ncol, B &m);  ; template<class B > ; void getAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, B &m);  ; template<class B > ; void setSubMatrix (Index i, Index j, Index nrow, Index ncol, const B &m);  ; template<class B > ; void setAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, const B &m);  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; template<std::size_t M = N, std::enable_if_t<(M > 3), int > = 0> ; void add (Index row, Index col, const type::Mat< BSIZE, BSIZE, Real > &v);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f ma",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:2596,clear,clearCol,2596,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,1,['clear'],['clearCol']
Usability,exity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInQuadArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgesInQuadArray ; (; ). p,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40230,clear,clearEdgesInQuad,40230,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clearEdgesInQuad']
Usability,exity(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::checkConnexity ; (; ). overridevirtual . Checks if the topology has only one connected component. ; Get information about connexity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_triangle . m_edgesInTriangle . m_trianglesAroundVertex . m_trianglesAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTriangleTopologyFromDirty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected .,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:40986,clear,clear,40986,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clear']
Usability,"f matrix More...;  ; void add (Index i, Index j, double v) override;  add scalar v at element i, j of matrix More...;  ; void set (Index i, Index j, int &rowId, int &colId, double v);  set scalar element i, j of matrix when rowId and colId are known More...;  ; template<typename T = Block, typename std::enable_if_t<!std::is_same_v< T, double > &&!std::is_same_v< T, float >, int > = 0> ; void add (Index i, Index j, int &rowId, int &colId, double v);  add scalar v at element i, j when rowId and colId are known More...;  ; void clear (Index i, Index j) override;  clear scalar at element i, j of matrix More...;  ; void add (Index i, Index j, const type::Mat3x3d &_M) override;  ; void add (Index i, Index j, const type::Mat3x3f &_M) override;  ; void clearRow (Index i) override;  Clear row scalar method. Clear all col of this line. More...;  ; void clearCol (Index j) override;  Clear col scalar method. Clear this col in all row of matrix. More...;  ; void clearRowCol (Index i) override;  Clear both row i and column i in a square matrix. More...;  ; void clear () override;  Completely clear the matrix. More...;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class TBlock2 , class TPolicy2 > ; void operator= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator+= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class TBlock2 , class TPolicy2 > ; void operator-= (const CompressedRowSparseMatrixMechanical< TBlock2, TPolicy2 > &m);  ; template<class Expr2 > ; void operator= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator+= (const MatrixExpr< Expr2 > &m);  ; template<class Expr2 > ; void operator-= (const MatrixExpr< Expr2 > &m);  ; MatrixExpr< MatrixTranspose< Matrix > > t () const;  ; MatrixExpr< MatrixNegative< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:6110,clear,clearRowCol,6110,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearRowCol']
Usability,"f the element at row i, column j (using 0-based indices) . ◆ addB() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . const Block & ; b . ). inline . ◆ addB() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . Index ; j, . const Block & ; b . ). inline . ◆ bloc() [1/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i); const. inline . ◆ bloc() [2/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i, . Index ; j . ); const. inline . ◆ clear() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:19106,clear,clear,19106,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,1,['clear'],['clear']
Usability,"fa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inlineprotectedvirtual; sofa::component::linearsystem::AssemblingMatrixAccumulator::add(const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >protectedvirtual; sofa::component::linearsystem::AssemblingMatrixAccumulator::add(const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >protectedvirtual; AssemblingMappedMatrixAccumulator()sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >protected; ConstantLocalMatrix< linearalgebra::clear() overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >; sofa::component::linearsystem::AssemblingMappedMatrixAccumulator::clear() overridesofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >; Col typedefsofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >; ComponentType typedefsofa::component::linearsystem::ConstantLocalMappedMatrix< c, TBlockType >; compressedInsertionOrderListsofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >; ConstantLocalMatrix< linearalgebra::contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >static; sofa::component::linearsystem::AssemblingMappedMatrixAccumulator::contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >static; currentIdsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix-members.html:6965,clear,clear,6965,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix-members.html,1,['clear'],['clear']
Usability,"fa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::DampingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::DampingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::DampingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::DampingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::behavior::DampingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear() overridesofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >inlinevirtual; empty() constsofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >inline; getAccumulators() constsofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >inline; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; push_back(DampingMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >inline; remove(DampingMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >inline; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; size() constsofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >inline; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator-members.html:2043,clear,clear,2043,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,fa::component::topology::container::dynamic::QuadSetTopologyContainer::checkConnexity ; (; ). overridevirtual . Checks if the topology has only one connected component. ; Get information about connexity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::componen,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40074,clear,clear,40074,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clear']
Usability,"fa::core::behavior::ApplyConstraintCompat, and sofa::core::behavior::AddToMatrixCompatMatrix< c >. ◆ clear() [2/2]. virtual void sofa::linearalgebra::BaseMatrix::clear ; (; Index ; i, . Index ; j . ). inlinevirtual . Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, and sofa::linearalgebra::BlockDiagonalMatrix< LC, T >. ◆ clearCol(). virtual void sofa::linearalgebra::BaseMatrix::clearCol ; (; Index ; j). inlinevirtual . Reset the all values in column j to 0. ; Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:35591,clear,clearCol,35591,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearCol']
Usability,"fa::core::behavior::DefaultMultiMatrixAccessor::DefaultMultiMatrixAccessor ; (; ). ◆ ~DefaultMultiMatrixAccessor(). sofa::core::behavior::DefaultMultiMatrixAccessor::~DefaultMultiMatrixAccessor ; (; ). override . Function details. ◆ addMappedMechanicalState(). void sofa::core::behavior::DefaultMultiMatrixAccessor::addMappedMechanicalState ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate). overridevirtual . Reimplemented from sofa::core::behavior::MultiMatrixAccessor. ◆ addMechanicalMapping(). void sofa::core::behavior::DefaultMultiMatrixAccessor::addMechanicalMapping ; (; sofa::core::BaseMapping * ; mapping). overridevirtual . Reimplemented from sofa::core::behavior::MultiMatrixAccessor. ◆ addMechanicalState(). void sofa::core::behavior::DefaultMultiMatrixAccessor::addMechanicalState ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate). overridevirtual . Reimplemented from sofa::core::behavior::MultiMatrixAccessor. ◆ clear(). void sofa::core::behavior::DefaultMultiMatrixAccessor::clear ; (; ). virtual . ◆ computeGlobalMatrix(). void sofa::core::behavior::DefaultMultiMatrixAccessor::computeGlobalMatrix ; (; ). virtual . Reimplemented in sofa::core::behavior::CRSMultiMatrixAccessor. ◆ createMatrix(). linearalgebra::BaseMatrix * sofa::core::behavior::DefaultMultiMatrixAccessor::createMatrix ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate1, . const sofa::core::behavior::BaseMechanicalState * ; mstate2 . ). static . ◆ createMatrixImpl(). linearalgebra::BaseMatrix * sofa::core::behavior::DefaultMultiMatrixAccessor::createMatrixImpl ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate1, . const sofa::core::behavior::BaseMechanicalState * ; mstate2, . bool ; doPrintInfo . ). static . ◆ getGlobalDimension(). DefaultMultiMatrixAccessor::Index sofa::core::behavior::DefaultMultiMatrixAccessor::getGlobalDimension ; (; ); const. overridevirtual . Implements sofa::core::behavior::MultiMatrixAccessor. ◆ getGlobalOffset(). int sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html:5004,clear,clear,5004,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html,1,['clear'],['clear']
Usability,"fa::core::behavior::MultiMatrixAccessor * ; matrix . ). overridevirtual . Compute the system matrix corresponding to . ; Parameters. mparamsmparams->kFactor() is the coefficient for stiffness contributions (i.e. DOFs term in the ODE) ; matrixthe matrix to add the result to . Implements sofa::core::behavior::BaseForceField. ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clear(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::clear ; (; sofa::Size ; reserve = 0). ◆ draw(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getContact(). template<class DataTypes > . const type::vector< Contact >& sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::getContact ; (; ); const. inline . ◆ getPotentialEnergy(). template<class DataTypes > . SReal sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::getPotentialEnergy ; (; const sofa::core::MechanicalParams * ; mparams, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2 . ); const. overridevirtual . Get the potential energy associated to this ForceField.; Used to estimate the total energy of the system by some ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html:25838,clear,clear,25838,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,1,['clear'],['clear']
Usability,"fa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseType typedefsofa::core::objectmodel::Base; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; clearLoggedMessages() constsofa::core::objectmodel::Base; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; d_componentStatesofa::core::objectmodel::Base; d_geometricStiffnesssofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; d_messageLogCountsofa::core::objectmodel::Basemutable; f_bboxsofa::core::objectmodel::Base; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destTyp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html:1561,clear,clearLoggedMessages,1561,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data-members.html,1,['clear'],['clearLoggedMessages']
Usability,"fa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_coordinatessofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_drawSizesofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_messageLogCoun",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html:3176,clear,clearLoggedMessages,3176,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"fa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeGridResolutionPostProcess() overridesofa::component::topology::container::grid::RegularGridTopologyprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkGridResolution()sofa::component::topology::container::grid::GridTopologyprotected; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeEdgeList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeHexaList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computePointList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeQuadList()sofa::component::topology::container::grid::GridTopologyprotectedvirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *contex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html:3863,clear,clearLoggedMessages,3863,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"fa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i) overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; componentsofa::core::behavior::ApplyConstraintCompat; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockCon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html:5066,clear,clear,5066,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,1,['clear'],['clear']
Usability,"fa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ coeffRef(). template<class TReal > . Real& sofa::linearalgebra::EigenBaseSparseMatrix< TR",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:20437,clear,clearRowCol,20437,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearRowCol']
Usability,"fa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, and sofa::core::behavior::ApplyConstraintCompat. ◆ clearRows(). virtual void sofa::linearalgebra::BaseMatrix::clearRows ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears the value of rows imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRowsCols(). virtual void sofa::linearalgebra::BaseMatrix::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ cols(). Index sofa::linearalgebra::BaseMatrix::cols ; (; void ; ); const. inline . Number of columns (Eigen-compatible API) . ◆ colSize(). virtual Index sofa::linearalgebra::BaseMatrix::colSize ; (; void ; ); const. pure virtual . Number of columns. ; Implemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::RotationMatrix< TReal >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::lin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:39750,clear,clearRowsCols,39750,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearRowsCols']
Usability,"fa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, and sofa::core::behavior::ApplyConstraintCompat. ◆ clearRows(). virtual void sofa::linearalgebra::BaseMatrix::clearRows ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears the value of rows imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRowsCols(). virtual void sofa::linearalgebra::BaseMatrix::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ cols(). Index sofa::linearalgebra::BaseMatrix::cols ; (; void ; ); const. inline . Number of columns (Eigen-compatible API) . ◆ colSize(). virtual Index sofa::linearalgebra::BaseMatrix::colSize ; (; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:39369,clear,clearRows,39369,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearRows']
Usability,"fa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType > Class Template Reference . #include <RigidDeriv.h>. Static Public Member Functions; static const Real & v (const Block &b, int, int col);  ; static Real & v (Block &b, int, int col);  ; static void vset (Block &b, int, int col, Real v);  ; static void vadd (Block &b, int, int col, Real v);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static BlockTranspose transposed (const Block &b);  ; static void transpose (BlockTranspose &res, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const char * Name ();  . Function details. ◆ clear(). template<Size N, class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<Size N, class T , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<Size N, class T , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::getElementType ; (; ). inlinestatic . ◆ Name(). template<Size N, class T , typename IndexType > . static const char* sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::Name ; (; ). inlinestatic . ◆ subBlock(). template<Size N, class T , typename IndexType > . template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> . static void sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::subBlock ; (; const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html:1295,clear,clear,1295,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability,"false }. protected . Constructor details. ◆ ConstantSparsityPatternSystem(). template<class TMatrix , class TVector > . sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::ConstantSparsityPatternSystem. protected . Function details. ◆ applyProjectiveConstraints(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::applyProjectiveConstraints ; (; const core::MechanicalParams * ; mparams). overridevirtual . Reimplemented from sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >. ◆ buildHashTable(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::buildHashTable ; (; linearalgebra::CompressedRowSparseMatrix< SReal > & ; M, . ConstantCRSMapping & ; mapping . ). staticprotected . ◆ clearSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::clearSystem. overridevirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ isConstantSparsityPatternUsedYet(). template<class TMatrix , class TVector > . bool sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::isConstantSparsityPatternUsedYet. ◆ makeCreateDispatcher(). template<class TMatrix , class TVector > . std::unique_ptr< CreateMatrixDispatcher< c > > sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::makeCreateDispatcher. overrideprotectedvirtual . Define the type of dispatcher, itself defining the type of local matrices To override if matrix accumulation methods differs from this class. ; Reimplemented from sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >. ◆ makeIndexVerificationStrategy(). template<class TMatrix , class TVector > . std::shared_ptr< sofa::core::matrixaccumulator::IndexVerificationStrategy >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html:29270,clear,clearSystem,29270,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,1,['clear'],['clearSystem']
Usability,"faulttype::SolidTypes< R >::Twist, including all inherited members. clear()sofa::type::SpatialVector< TReal >; cross(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; freeVecsofa::type::SpatialVector< TReal >; getAngularVelocity()sofa::type::SpatialVector< TReal >inline; getAngularVelocity() constsofa::type::SpatialVector< TReal >inline; getForce()sofa::type::SpatialVector< TReal >inline; getForce() constsofa::type::SpatialVector< TReal >inline; getLinearVelocity()sofa::type::SpatialVector< TReal >inline; getLinearVelocity() constsofa::type::SpatialVector< TReal >inline; getTorque()sofa::type::SpatialVector< TReal >inline; getTorque() constsofa::type::SpatialVector< TReal >inline; lineVecsofa::type::SpatialVector< TReal >; Mat66 typedefsofa::type::SpatialVector< TReal >; operator*(Real a) constsofa::type::SpatialVector< TReal >inline; operator*(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator*(const Mat66 &) constsofa::type::SpatialVector< TReal >; operator*=(Real a)sofa::type::SpatialVector< TReal >inline; operator+(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator+=(const SpatialVector &v)sofa::type::SpatialVector< TReal >; operator-(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator-() constsofa::type::SpatialVector< TReal >; Real typedefsofa::type::SpatialVector< TReal >; setAngularVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setForce(const Vec &v)sofa::type::SpatialVector< TReal >inline; setLinearVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setTorque(const Vec &v)sofa::type::SpatialVector< TReal >inline; SpatialVector()=defaultsofa::type::SpatialVector< TReal >; SpatialVector(const Vec &l, const Vec &f)sofa::type::SpatialVector< TReal >; Twist(const Vec3 &linear, const Vec3 &angular)sofa::defaulttype::SolidTypes< R >::Twistinline; Vec typedefsofa::type::SpatialVector< TReal >. Generated on Mon Nov 11 2024 03:18:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist-members.html:273,clear,clear,273,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist-members.html,1,['clear'],['clear']
Usability,"fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >virtual; computeForce(Displacement &F, const Displacement &Depl, const MaterialStiffness &K, const StrainDisplacementTransposed &J)sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >inlineprotected; computeForce(Displacement &F, const Displacement &Depl, const MaterialStiffness &K, const StrainDisplacementTransposed &J, SReal fact)sofa::component::solidmechanics::fem::elastic::Tet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html:7571,clear,clearLoggedMessages,7571,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::MatrixAccumulatorInterface Class Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::MatrixAccumulatorInterface:. [legend]. Public Member Functions; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, float);  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, double);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; virtual void clear ();  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . Constructor details. ◆ ~MatrixAccumulatorInterface(). virtual sofa::core::MatrixAccumulatorInterface::~MatrixAccumulatorInterface ; (; ). virtualdefault . Function details. ◆ add() [1/10]. void sofa::core::MatrixAccumulatorInterface::add ; (; sofa::SignedIndex ; row, . sofa::SignedIndex ; col,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface.html:1488,clear,clear,1488,api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface.html,1,['clear'],['clear']
Usability,"fferent-proximity; . /feed; ; [SOLVED] How to develop collision model that support different proximity? – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /2; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /8; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /9; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /how-to-disable-warning-message; ; SOFA - Topic: How to disable warning message. /how-to-do-attachconstraint; ; SOFA - Topic: [SOLVED] How to Do AttachConstraint?. /how-to-do-feasible-and-stable-physical-acceleration-in-force-feedback-scene; . /page; . /2; ; SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. /how-to-exclude-certain-mesh-elements-from-the-collision-test; ; SOFA - Topic: How to exclude certain mesh elements from the collision test?. /how-to-exert-a-torque-on-an-articulatedsystemmapping; ; SOFA - Topic: How to exert a torque on an ArticulatedSystemMapping?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation-2; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force for certain nodes. /how-to-extract-the-surface-of-a-volumeyric-mesh; ; SOFA - Topic: [SOLVED] How to extract the surface of a volumeyric mesh. /how-to-figure-out-the-available-options-of-xml-tags; ; SOFA - To",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:321191,feedback,feedback,321191,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,"ffnessMatrix *matrix) overridesofa::component::mechanicalload::ConstantForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkForce(const Deriv &force)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; checkForces(const VecDeriv &forces)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeForceFromForcesVector(const VecDeriv &forces)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; computeForceFromSingleForce(const Deriv singleForce)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; computeForceFromTotalForce(const Deriv &totalForce)sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; ConstantForceField()sofa::component::mechanicalload::ConstantForceField< DataTypes >protected; Coord typedefsofa::component::mechanicalload::ConstantForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html:5056,clear,clearLoggedMessages,5056,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ coeffRef(). template<class TReal > . Real& sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::coeffRef ; (; Index ; i, . Index ; j . ). inline . Return a reference to the given entry in the compressed matrix.There can (must ?) be a value at this place already. Efficient only if the it is at the last place of the compressed matrix. . ◆ colSize(). template<class TReal > . Index sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::colSize ; (; void ; ); const. inlineoverridevirtual . number of columns ; Implements sofa::linearalgebra::BaseMatrix. ◆ compress(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::compress ; (; ). inlineoverridevirtual . Add the values from the scheduled list, and clears the schedule list. ; See alsoset(Index i,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:21148,clear,clearRowsCols,21148,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearRowsCols']
Usability,"fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  LCPConstraintSolver ();  Default Constructor. More...;  ;  ~LCPConstraintSolver () override;  Default Destructor. More...;  ;  Protected Member Functions inherited from sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; void postBuildSystem (const core::ConstraintParams *cParams) override;  ; void postSolveSystem (const core::ConstraintParams *cParams) override;  ; void clearConstraintCorrections ();  ; void resetConstraints (const core::ConstraintParams *cParams);  ; void buildLocalConstraintMatrix (const core::ConstraintParams *cparams, unsigned int &constraintId);  Call the method buildConstraintMatrix on all the BaseConstraintSet. More...;  ; void accumulateMatrixDeriv (const core::ConstraintParams *cparams);  ; unsigned int buildConstraintMatrix (const core::ConstraintParams *cparams);  ; void applyProjectiveConstraintOnConstraintMatrix (const core::ConstraintParams *cparams);  ; void getConstraintViolation (const core::ConstraintParams *cparams, sofa::linearalgebra::BaseVector *v);  ;  Protected Member Functions inherited from sofa::core::behavior::ConstraintSolver;  ConstraintSolver ();  ;  ~ConstraintSolver () override;  ; bool prepareStatesTask (const ConstraintParams *, MultiVecId res1, MultiVecId res2);  ; bool buildSystemTask (const ConstraintParams *, MultiVecId res1, MultiVecId res2);  ; bool solveSystemTask (const ConstraintParams *, M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html:15727,clear,clearConstraintCorrections,15727,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,1,['clear'],['clearConstraintCorrections']
Usability,"findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  HermiteSplineProjectiveConstraint (core::behavior::MechanicalState< DataTypes > *mstate=nullptr);  ;  ~HermiteSplineProjectiveConstraint ();  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to kn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html:16095,clear,clear,16095,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,1,['clear'],['clear']
Usability,"fo=EmptyFileInfo);  ; static LoggerStream fatal (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream advice (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static const NullLoggerStream & null ();  ; static MessageDispatcher::LoggerStream log (Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static void process (sofa::helper::logging::Message &m);  . Function details. ◆ addHandler(). int sofa::helper::logging::MessageDispatcher::addHandler ; (; MessageHandler * ; o). static . to add a MessageHandler . ◆ advice(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::advice ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ clearHandlers(). void sofa::helper::logging::MessageDispatcher::clearHandlers ; (; ). static . to remove every MessageHandlers . ◆ deprecated(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::deprecated ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ error(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::error ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ fatal(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::fatal ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ getHandlers(). std::vector< MessageHandler * > & sofa::helper::logging::MessageDispatcher::getHandlers ; (; ). static . the list of MessageHandlers . ◆ info(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html:2370,clear,clearHandlers,2370,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,1,['clear'],['clearHandlers']
Usability,"frame)=0;  ; virtual void setLightingEnabled (bool _isAnabled)=0;  ; States (save/restore); virtual void saveLastState ()=0;  ; virtual void restoreLastState ()=0;  ; StateLifeCycle makeStateLifeCycle ();  ; Overlay methods; virtual void writeOverlayText (int x, int y, unsigned fontSize, const RGBAColor &color, const char *text)=0;  draw 2D text at position (x,y) from top-left corner More...;  ; virtual void enablePolygonOffset (float factor, float units)=0;  Allow a variable depth offset for polygon drawing. More...;  ; virtual void disablePolygonOffset ()=0;  Remove variable depth offset for polygon drawing. More...;  ; virtual void readPixels (int x, int y, int w, int h, float *rgb, float *z=nullptr)=0;  . Constructor details. ◆ DrawTool(). sofa::helper::visual::DrawTool::DrawTool ; (; ). inline . ◆ ~DrawTool(). virtual sofa::helper::visual::DrawTool::~DrawTool ; (; ). inlinevirtual . ◆ ~StateLifeCycle(). sofa::helper::visual::DrawTool::~StateLifeCycle ; (; ). Function details. ◆ clear(). virtual void sofa::helper::visual::DrawTool::clear ; (; ). inlinevirtual . Reimplemented in sofa::gl::DrawToolGL. ◆ disableBlending(). virtual void sofa::helper::visual::DrawTool::disableBlending ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disableDepthTest(). virtual void sofa::helper::visual::DrawTool::disableDepthTest ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disableLighting(). virtual void sofa::helper::visual::DrawTool::disableLighting ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disablePolygonOffset(). virtual void sofa::helper::visual::DrawTool::disablePolygonOffset ; (; ). pure virtual . Remove variable depth offset for polygon drawing. ; Implemented in sofa::gl::DrawToolGL. ◆ draw3DText(). virtual void sofa::helper::visual::DrawTool::draw3DText ; (; const Vec3 & ; p, . float ; scale, . const RGBAColor & ; color, . const char * ; text . ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ draw3DText_Indices(). virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html:9916,clear,clear,9916,api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html,1,['clear'],['clear']
Usability,"from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >.; Reimplemented in sofa::component::linearsystem::ConstantLocalMappedMatrix< c, TBlockType >, and sofa::component::linearsystem::SparsityPatternLocalMappedMatrix< c, TBlockType >. ◆ add() [4/4]. template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . void sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::add ; (; const core::matrixaccumulator::no_check_policy & ; , . sofa::SignedIndex ; row, . sofa::SignedIndex ; col, . float ; value . ). overrideprotectedvirtual . Reimplemented from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >.; Reimplemented in sofa::component::linearsystem::ConstantLocalMappedMatrix< c, TBlockType >, and sofa::component::linearsystem::SparsityPatternLocalMappedMatrix< c, TBlockType >. ◆ clear(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . void sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::clear. override . ◆ getMatrix(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . const std::shared_ptr< LocalMappedMatrixType< TBlockType > > & sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::getMatrix. ◆ shareMatrix(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . void sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::shareMatrix ; (; const std::shared_ptr< LocalMappedMatrixType< TBlockType > > & ; m). ◆ SOFA_CLASS(). template<sofa::core::matrixaccumulator::Contribution c, class TBlockType > . sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >::SOFA_CLASS ; (; AssemblingMappedMatrixAccumulator< c, TBlockType > ; , . AssemblingMatrixAccumulator< c > ;  . ). sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html:9455,clear,clear,9455,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,1,['clear'],['clear']
Usability,"from sofa::core::behavior::ForceField< DataTypes >. ◆ addPoint(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::addPoint ; (; unsigned ; index). methods to add/remove some indices, keyTimes, keyForces . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clearKeyForces(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::clearKeyForces. ◆ clearPoints(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::clearPoints. ◆ getPotentialEnergy() [1/5]. SReal sofa::component::mechanicalload::LinearForceField< Rigid3Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [2/5]. SReal sofa::component::mechanicalload::LinearForceField< Rigid2Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [3/5]. SReal SOFA_COMPONENT_MECHANICALLOAD_API sofa::component::mechanicalload::LinearForceField< defaulttype::Rigid3Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [4/5]. SReal SOFA_COMPONENT_MECHANICALLOAD_API sofa::component::mechanicalload::LinearF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html:25161,clear,clearPoints,25161,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,1,['clear'],['clearPoints']
Usability,"function may be overload to obtain better performances. . ◆ add() [8/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [9/9]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:19822,clear,clear,19822,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clear']
Usability,"function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bufCP1sofa::component::animationloop::ConstraintAnimationLoopprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; compTimesofa::component::animationloop::ConstraintAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; computeComplianceInConstraintSpace()sofa::component::animationloop::ConstraintAnimationLoopprotectedvirtual; computePredictiveForce(int dim, SReal *force, std::vector< core::behavior::ConstraintResolution * > &res)sofa::component::animationloop::ConstraintAnimationLoopprotected; ConstraintAnimationLoop()sofa::component::animationloop::ConstraintAnimationLoopprotected; constraintCorrectionssofa::component::animationloop::ConstraintAnimationLoopprotected; correctiveMotion(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:2198,clear,clearLoggedMessages,2198,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,"function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; collisionStepssofa::component::animationloop::MultiStepAnimationLoop; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_collisionStepssofa::component::animationloop::MultiStepAnimationLoop; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_integrationStepssofa::component::animationloop::MultiStepAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:2124,clear,clearLoggedMessages,2124,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,"function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; computeFreeMotion(const sofa::core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop)sofa::component::animationloop::FreeMotionAnimationLoopprotected; computeFreeMotionAndCollisionDetection(const sofa::core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop)sofa::component::animationloop::FreeMotionAnimationLo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:2126,clear,clearLoggedMessages,2126,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,"function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html:2096,clear,clearLoggedMessages,2096,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,"g::linear::BarycentricMapperSparseGridTopology< In, Out >:. [legend]; Detailed Description; template<class In, class Out>; class sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >; Class allowing barycentric mapping computation on a SparseGridTopology. . Protected Attributes; sofa::type::vector< CubeData > m_map;  ; topology::container::grid::SparseGridTopology * m_fromTopology {nullptr};  ; MatrixType * m_matrixJ {nullptr};  ; bool m_updateJ {false};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(BarycentricMapperSparseGridTopology, In, Out), SOFA_TEMPLATE2(TopologyBarycentricMapper, In, Out));  ;  ~BarycentricMapperSparseGridTopology () override;  ; void init (const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void clear (std::size_t reserve=0) override;  ; Index addPointInCube (const Index cubeIndex, const SReal *baryCoords) override;  ; void apply (typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void applyJ (typename Out::VecDeriv &out, const typename In::VecDeriv &in) override;  ; void applyJT (typename In::VecDeriv &out, const typename Out::VecDeriv &in) override;  ; void applyJT (typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) override;  ; const BaseMatrix * getJ (int outSize, int inSize) override;  ; void draw (const VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void resize (core::State< Out > *toModel) override;  . Protected Member Functions;  BarycentricMapperSparseGridTopology (topology::container::grid::SparseGridTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology);  . Friends; template<class I , class O > ; std::istream & operator>> (std::istream &in, BarycentricMapperSparseGridTopology< I, O > &b);  ; template<class I , class O > ; std::ostream & operator<< (std::ostream &out, const BarycentricMapperSparseGridTopology< I, O > &b);  . Attribute details. ◆ m_fromTopology. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html:1391,clear,clear,1391,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html,1,['clear'],['clear']
Usability,gForceField;  ; class  JointSpring;  JOINTSPRING. More...;  ; class  JointSpringForceFieldInternalData;  ; class  JointSpringForceField;  ; class  LinearSpring;  This class contains the description of one linear spring. More...;  ; class  MeshSpringForceField;  ; class  PolynomialRestShapeSpringsForceField;  This class describes a polynomial elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  PolynomialSpringsForceField;  This class describes a polynomial elastic springs ForceField. More...;  ; class  QuadBendingSprings;  ; class  QuadularBendingSprings;  ; class  RegularGridSpringForceField;  ; class  RepulsiveSpringForceField;  ; class  RestShapeSpringsForceField;  This class describes a simple elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  SpringForceFieldInternalData;  This class can be overridden if needed for additional storage within template specializations. More...;  ; class  SpringForceField;  Set of simple springs between particles. More...;  ; class  TriangleBendingSprings;  ; class  TriangularBendingSprings;  ; class  TriangularBiquadraticSpringsForceField;  ; class  TriangularQuadraticSpringsForceField;  ; class  VectorSpringForceField;  . Typedefs; typedef core::topology::BaseMeshTopology::EdgesInTriangle EdgesInTriangle;  ; typedef core::topology::BaseMeshTopology::Quad Quad;  ; typedef core::topology::BaseMeshTopology::EdgesInQuad EdgesInQuad;  ; using SpringForceField = SpringForceField< T >;  ; typedef core::topology::BaseMeshTopology::Triangle Triangle;  . Functions; void registerAngularSpringForceField (sofa::core::ObjectFactory *factory);  ; void registerFastTriangularBendingSprings (sofa::core::ObjectFactory *factory);  ; void registerFrameSpringForceField (sofa::core::ObjectFactory *factory);  ; void registerGearSpringForceField (sofa::core::ObjectFactory *factory);  ; void registerNonUniformHexahedronFEMForceFieldAndMass (sofa::core::ObjectFactory *factory);  ; voi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html:1615,simpl,simple,1615,api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html,1,['simpl'],['simple']
Usability,"gMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >virtual; buildStiffnessMatrix(sofa::core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgeRestInformation(Index edgeIndex, EdgeRestInformation &ei, const core::topology::BaseMeshTopology::Edge &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_edgeInfosofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >protected; d_messageLogCountsofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html:5459,clear,clearLoggedMessages,5459,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"geSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotectedvirtual; createEdgesInTetrahedronArray()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotectedvirtual; createEdgesInTriangleArray()sofa::component::topology::contain",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:5816,clear,clearTrianglesAroundVertex,5816,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearTrianglesAroundVertex']
Usability,"gebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; Block typedefsofa::linearalgebra::BlockDiagonalMatrix< LC, T >; BlockDiagonalMatrix()sofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; category enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clear() overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize(void) constsofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html:6288,clear,clear,6288,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,1,['clear'],['clear']
Usability,"gebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< TReal >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; CompressedMatrix typedefsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; copy(const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html:6032,clear,clearRows,6032,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,1,['clear'],['clearRows']
Usability,"gend]. Protected Attributes; sofa::core::behavior::MechanicalState< DataTypes > * m_mstate1;  ; sofa::core::behavior::MechanicalState< DataTypes > * m_mstate2;  ;  Protected Attributes inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  ConstraintAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~ConstraintAttachBodyPerformer ()=default;  ; virtual bool startPartial (const BodyPicked &picked) override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html:1439,clear,clear,1439,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer.html,1,['clear'],['clear']
Usability,"gend]. Static Public Attributes; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  . Protected Attributes; unsigned char m_bLoaded;  . Public Member Functions;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  ; virtual bool load (std::string filename);  ; virtual bool save (std::string filename, int compression_level=-1);  . Static Public Member Functions; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Attribute details. ◆ m_bLoaded. unsigned char sofa::helper::io::Image::m_bLoaded. protected . ◆ strFromChannelFormat.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html:1749,clear,clear,1749,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,1,['clear'],['clear']
Usability,"generic ForceField::addForce() method. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ addSpring(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::addSpring ; (; int ; m1, . int ; m2, . SReal ; ks, . SReal ; kd, . Coord ; restVector . ). ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ bwdInit(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::bwdInit. overridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::clear ; (; int ; reserve = 0). inline . ◆ createDefaultSprings(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::createDefaultSprings. ◆ createEdgeInformation(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::createEdgeInformation ; (; Index ; , . Spring & ; t, . const core::topology::BaseMeshTopology::Edge & ; e, . const sofa::type::vector< Index > & ; ancestors, . const sofa::type::vector< SReal > & ; coefs . ). protected . Method to initialize See alsoSpring when a new edge is created. Will be set as creation callback in the EdgeData . d_springArray . ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html:29535,clear,clear,29535,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,1,['clear'],['clear']
Usability,"gin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ); const. inline . ◆ clear() [1/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::SparseMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<typename T > . SReal sofa::linearalgebra::SparseMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ end() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::end ; (; ). inline . ◆ end() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::end ; (; ); const. inline . ◆ equal(). template<typename T > . template<class M > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:22264,clear,clearRowCol,22264,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,1,['clear'],['clearRowCol']
Usability,"ginStateChange() const overridesofa::core::topology::TopologyContainervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; d_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html:3925,clear,clear,3925,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,1,['clear'],['clear']
Usability,gsegv-segfault-segmentation-fault-core-dumped; . /embed; ; SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). /simulate-a-carbon-fibre-textile-for-handling-processes; ; SOFA - Topic: Simulate a carbon fibre textile for handling processes. /simulate-an-embedded-object; ; SOFA - Topic: Simulate an embedded object. /simulate-liquid-environment; ; SOFA - Topic: simulate liquid environment. /simulate-pivot-liaison-using-rigidmapping-and-articulatedsystem; ; SOFA - Topic: Simulate pivot liaison using RigidMapping and ArticulatedSystem. /simulating-blood-vessels-using-centerline-and-beamfemforcefield; ; SOFA - Topic: Simulating Blood Vessels using Centerline and BeamFEMForceField. /simulating-contracting-actuator; . /embed; ; SOFA - Topic: Simulating contracting actuator. SOFA - Topic: Simulating contracting actuator. /simulating-deformation-of-a-simple-set-of-beams-via-beamfemforcefield; ; SOFA - Topic: Simulating deformation of a simple set of beams via BeamFEMForceField. /simulating-elastic-material-in-sofa; ; SOFA - Topic: Simulating Elastic Material in SOFA. /simulating-geomagic-touch; ; SOFA - Topic: Simulating Geomagic Touch. /simulating-the-internal-stress-distribution-of-an-object-with-certain-load; ; SOFA - Topic: Simulating the internal stress distribution of an object with certain load. /simulation-incredibly-slow; ; SOFA - Topic: Simulation incredibly slow. /simulation-of-tearing-a-part-on-the-lens-capsule; . /feed; ; [SOLVED] Simulation of tearing a part on the lens capsule – SOFA. SOFA - Topic: [SOLVED] Simulation of tearing a part on the lens capsule. /simulationstepdt-does-not-update-the-visuals; ; SOFA - Topic: simulationStep(dt) does not update the visuals. /simulation-trend; ; SOFA - Topic: #Simulation trend!. /skeletonplugin-error-in-cgal; ; SOFA - Topic: SkeletonPlugin: Error in CGAL. /skeletonplugin-install-cmake; ; SOFA - Topic: [SOLVED] CGALPlugin inst,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:387005,simpl,simple-set-of-beams-via-beamfemforcefield,387005,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['simpl'],"['simple', 'simple-set-of-beams-via-beamfemforcefield']"
Usability,"gui::component::performer::AttachBodyPerformer< DataTypes >:. [legend]. Protected Attributes; SReal m_stiffness;  ; SReal m_size;  ;  Protected Attributes inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  AttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~AttachBodyPerformer ()=default;  ; virtual bool startPartial (const BodyPicked &picked) override;  ; void setStiffness (SReal s);  ; void setArrowSize (float s);  ; virtual void configure (sofa::component::setting::MouseButtonSetting *setting) override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html:1440,clear,clear,1440,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer.html,1,['clear'],['clear']
Usability,"gui::component::performer::BaseAttachBodyPerformer< DataTypes >, including all inherited members. BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; MouseContactMapper typedefsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; MouseContainer typedefsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; setPerformerFreeze()sofa::gui::component::performer::InteractionPerformerinlinevirtual; SOFA_ATTRIBUTE_DISABLED__NAMING(""v24.06"", ""v24.06"", interactor, m_interactor)sofa::gui::component::performer::InteractionPerformer; SO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html:455,clear,clear,455,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer-members.html,1,['clear'],['clear']
Usability,"gy< In, Out >; addPointInTriangle(const Index triangleIndex, const SReal *baryCoords) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; apply(typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; applyJ(typename Out::VecDeriv &out, const typename In::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; applyJT(typename In::VecDeriv &out, const typename Out::VecDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; applyJT(typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; BarycentricMapperMeshTopology(core::topology::BaseMeshTopology *fromTopology, core::topology::BaseMeshTopology *toTopology)sofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >protected; clear(std::size_t reserve=0) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; createPointInLine(const typename Out::Coord &p, Index lineIndex, const typename In::VecCoord *points) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; createPointInQuad(const typename Out::Coord &p, Index quadIndex, const typename In::VecCoord *points) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; createPointInTriangle(const typename Out::Coord &p, Index triangleIndex, const typename In::VecCoord *points) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; draw(const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; getJ(int outSize, int inSize) overridesofa::component::mapping::linear::BarycentricMapperMeshTopology< In, Out >; getMap3d() consts",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology-members.html:1911,clear,clear,1911,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology-members.html,1,['clear'],['clear']
Usability,"gyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:4793,clear,clearHexahedra,4793,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearHexahedra']
Usability,h from Matlab iso2mesh toolkit?. /how-to-incise-3d-object; . /page; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM methods into SOFA engine. /how-to-interact-with-3d-deformable-objects-in-sofa; ; SOFA - Topic: How to interact with 3D deformable objects in SOFA. /how-to-know-the-collision-force-or-energy; ; SOFA - Topic: How to know the collision force or energy. /how-to-learn-mesh-editing-programming; . /feed; ; [SOLVED] How to learn mesh editing programming? – SOFA. SOFA - Topic: [SOLVED] How to learn mesh editing programming?. /how-to-learn-using-sofa; ; SOFA - Topic: How to learn using SOFA. /how-to-look-at-the-example-of-the-source-codec; ; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-to-make-tetrahedron-msh-file-with-meshlab; . /embed; ; SOFA - Topic: how to make tetrahedron msh file with meshlab?. SO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:325187,learn,learn,325187,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learn']
Usability,"h>. Inheritance diagram for sofa::gui::common::BaseViewer:. [legend]. Protected Attributes; sofa::simulation::Node::SPtr groot;  the sofa root note of the current scene More...;  ; sofa::component::visual::BaseCamera::SPtr currentCamera;  ; std::string sceneFileName;  ; bool _video;  ; bool m_isVideoButtonPressed;  ; bool m_bShowAxis;  ; bool _fullScreen;  ; int _background;  ; bool initTexturesDone;  ; sofa::type::Vec3 backgroundColour;  ; std::string backgroundImageFile;  ; sofa::type::Vec3 ambientColour;  ; std::unique_ptr< PickHandler > pick;  ; int _navigationMode;  ; bool _mouseInteractorMoving;  ; int _mouseInteractorSavedPosX;  ; int _mouseInteractorSavedPosY;  ; std::string _screenshotDirectory;  . Public Member Functions;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual void drawColourPicking (ColourPickingVisitor::ColourCode);  ; virtual sofa::simulation::Node * getScene ();  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual void setCameraMode (core::visual::VisualParams::CameraType);  ; virtual bool ready ();  ; virtual void wait ();  ask the viewer to resume its activity More...;  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ; virtual void viewAll (void)=0;  Recompute viewer's home position so it encompass the whole scene and apply it. More...;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf);  ; virtual const std::string screenshotName ();  ; virtual void setPrefix (const std::string &prefix, bool prependDirectory=true);  ; virtual void screenshot (const std::string &filename, int compression_level=-1);  ; virtual void getView (sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) const;  ; virtual void setView (const sofa::type::Vec3 &po",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html:1574,resume,resume,1574,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer.html,1,['resume'],['resume']
Usability,"hanical< TBlock, TPolicy >inlinevirtual; bRowSize() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; bRowsRange() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlinestatic; clear(Index i, Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Ind",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:14242,clear,clear,14242,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clear']
Usability,"hanicalPolicy> . virtual Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowSize ; (; ); const. inlineoverridevirtual . Returnsthe number of rows of blocks ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowsRange(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsRange ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48448,clear,clear,48448,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clear']
Usability,"hanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >virtual; computeMuGamma(Real youngModulus, Real poissonRatio)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >protectedstatic; computePrincipalStress()sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; computeTriangleRotation(Transformation &result, Coord eab, Coord eac)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >inline; computeTriangleRotation(Transformation &result, Coord a, Coord b, Coord c)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >inline; computeTriangleRotation(Transformation &result, VecCoord &x0, Triangle t)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >inline; Coord type",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html:5411,clear,clearLoggedMessages,5411,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim-members.html,1,['clear'],['clearLoggedMessages']
Usability,"happens for vectors containing resizable values (i.e. when BaseType()::FixedSize() is false), because of the ""single index"" abstraction;. Returns true iff the data was resizable ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setTextValue(). template<class Info > . virtual void sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::setTextValue ; (; void * ; data, . Index ; index, . const std::string & ; value . ); const. inlineoverridevirtual . Set the value at index of data from a string value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleCopy(). template<class Info > . bool sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::SimpleCopy ; (; ); const. inlineoverridevirtual . True iff copying the data can be done with a memcpy(). ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleLayout(). template<class Info > . bool sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::SimpleLayout ; (; ); const. inlineoverridevirtual . True iff the layout in memory is simply N values of the same base type. It means that you can use the abstract index system to iterate over the elements of the type. (It doesn't mean that the BaseType is of a fixed size) ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ size() [1/2]. template<class Info > . sofa::Size sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::size ; (; ); const. inlineoverridevirtual . The size of this type, in number of elements. For example, the size of a fixed_array<fixed_array<int, 2>, 3> is 6, and those six elements are conceptually numbered from 0 to 5. This is relevant only if FixedSize() is true. I FixedSize() is false, the return value will be equivalent to the one of byteSize() ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ size() [2/2]. template<class Info > . sofa::Size sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::size ; (; const void * ; data); const. inlineoverridevirtual . The size of data, in number of iterable elements (For containers, that'll be the number",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html:10987,simpl,simply,10987,api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html,1,['simpl'],['simply']
Usability,"hase() overridesofa::component::collision::detection::algorithm::IncrSAPvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance inst) overridesofa::core::collision::BroadPhaseDetectionprotectedvirtual; sofa::changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; sofa::core::collision::NarrowPhaseDetection::changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; cmPairssofa::core::collision::BroadPhaseDetectionprotected; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; CollisionModelPair typedefsofa::core::collision::BroadPhaseDetection; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; sofa::draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p-members.html:3183,clear,clearLoggedMessages,3183,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p-members.html,1,['clear'],['clearLoggedMessages']
Usability,"havior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkMassDensity()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; checkTopology()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >protected; checkTotalMass()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; checkTotalMassInit()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; checkVertexMass()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeVertexMass(Real density)sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >protected; Coord typedefsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMassOnRestsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_fileMasssofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_massDensitysofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showAxisSizesofa::component::mass::Di",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html:7610,clear,clearLoggedMessages,7610,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"he force field must start adding its contribution. ; kFactstiffness factor that needs to be multiplied to each matrix entry. ; offsetStarting index of the submatrix to fill in the global matrix. . Reimplemented from sofa::core::behavior::ForceField< DataTypes >. ◆ addPoint(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::addPoint ; (; unsigned ; index). methods to add/remove some indices, keyTimes, keyForces . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clearKeyForces(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::clearKeyForces. ◆ clearPoints(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::clearPoints. ◆ getPotentialEnergy() [1/5]. SReal sofa::component::mechanicalload::LinearForceField< Rigid3Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [2/5]. SReal sofa::component::mechanicalload::LinearForceField< Rigid2Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [3/5]. SReal SOFA_COMPONENT_MECHANICALLOAD_API sofa::component::mechanicalload::LinearForceField< defaulttype::Rigid3Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html:24914,clear,clearKeyForces,24914,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,1,['clear'],['clearKeyForces']
Usability,"he set of hexahedra adjacent to a given quad. More...;  ; virtual const VerticesAroundVertex getVerticesAroundVertex (PointID i);  Returns the set of vertices adjacent to a given vertex (i.e. sharing an edge) More...;  ; virtual const sofa::type::vector< Index > getElementAroundElement (Index elem);  Returns the set of element indices adjacent to a given element (i.e. sharing a link) More...;  ; virtual const sofa::type::vector< Index > getElementAroundElements (sofa::type::vector< Index > elems);  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ; const SeqLines & getLines ();  ; Size getNbLines ();  ; Line getLine (LineID i);  ; bool hasPos () const override;  ; SReal getPX (Index) const override;  ; SReal getPY (Index) const override;  ; SReal getPZ (Index) const override;  ; virtual void clear ();  ; virtual void addPoint (SReal px, SReal py, SReal pz);  ; virtual void addEdge (Index a, Index b);  ; void addLine (Index a, Index b);  ; virtual void addTriangle (Index a, Index b, Index c);  ; virtual void addQuad (Index a, Index b, Index c, Index d);  ; virtual void addTetra (Index a, Index b, Index c, Index d);  ; virtual void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h);  ; virtual bool checkConnexity ();  ; virtual bool checkTopology () const;  Checks if the topology is coherent. More...;  ; virtual Size getNumberOfConnectedComponent ();  Returns the number of connected component. More...;  ; virtual const sofa::type::vector< Index > getConnectedElement (Index elem);  Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual Size getNbPoints () const;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html:18445,clear,clear,18445,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,1,['clear'],['clear']
Usability,heckConnexity() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerp,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:4475,clear,clearEdgesAroundVertex,4475,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearEdgesAroundVertex']
Usability,hedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_hexahedron . m_edgesInHexahedron . m_quadsInHexahedron . m_hexahedraAroundVertex . m_hexahedraAroundEdge . m_hexahedraAroundQuad ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvir,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49252,clear,clearEdgesInHexahedron,49252,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearEdgesInHexahedron']
Usability,"i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; BlockType typedefsofa::linearalgebra::BTDMatrix< N, T >; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix()sofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BTDMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BTDMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html:5713,clear,clear,5713,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,1,['clear'],['clear']
Usability,"i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear()=0sofa::linearalgebra::BaseMatrixpure virtual; clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const =0sofa::linearalgebra::BaseMatrixpure virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalgebra::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html:5111,clear,clearRows,5111,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,1,['clear'],['clearRows']
Usability,"i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear(Index i, Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clear() overridesofa::linearalgebra::FullMatrix< T >virtual; clearCol(Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::FullMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html:5760,clear,clear,5760,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,2,['clear'],['clear']
Usability,"i-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Constructor details. ◆ OffSequenceLoader(). sofa::component::io::mesh::OffSequenceLoader::OffSequenceLoader ; (; ). protected . Function details. ◆ clear(). void sofa::component::io::mesh::OffSequenceLoader::clear ; (; ). ◆ handleEvent(). void sofa::component::io::mesh::OffSequenceLoader::handleEvent ; (; sofa::core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). void sofa::component::io::mesh::OffSequenceLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ load(). bool sofa::component::io::mesh::OffSequenceLoader::load ; (; const char * ; filename). virtual . ◆ reset(). void sofa::component::io::mesh::OffSequenceLoader::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::io::mesh::OffSequenceLoader::SOFA_CLASS ; (; OffSequenceLoader ; , . MeshOffLoader ;  . ). sofacomponentiomeshOffSequenceLoader; Generated on Mon No",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html:20995,clear,clear,20995,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,1,['clear'],['clear']
Usability,"i-physics simuation. Public Member Functions |; List of all members . sofa::core::objectmodel::TagSet Class Reference . #include <TagSet.h>. Public Member Functions;  TagSet ()=default;  ;  TagSet (const Tag &t);  Automatic conversion between a tag and a tagset composed of this tag. More...;  ; bool includes (const Tag &t) const;  Returns true if this TagSet contains specified tag. More...;  ; bool includes (const TagSet &t) const;  Returns true if this TagSet contains all specified tags. More...;  ; iterator find (const Tag &_Keyval);  ; const_iterator find (const Tag &_Keyval) const;  ; bool empty () const noexcept;  ; std::size_t size () const noexcept;  ; std::size_t count (const Tag &_Keyval) const;  ; iterator begin () noexcept;  ; const_iterator begin () const noexcept;  ; iterator end () noexcept;  ; const_iterator end () const noexcept;  ; reverse_iterator rbegin () noexcept;  ; const_reverse_iterator rbegin () const noexcept;  ; reverse_iterator rend () noexcept;  ; const_reverse_iterator rend () const noexcept;  ; const_iterator cbegin () const noexcept;  ; const_iterator cend () const noexcept;  ; const_reverse_iterator crbegin () const noexcept;  ; const_reverse_iterator crend () const noexcept;  ; std::pair< iterator, bool > insert (const value_type &_Val);  ; iterator erase (const_iterator _Where) noexcept;  ; iterator erase (const_iterator _First, const_iterator _Last) noexcept;  ; std::size_t erase (const Tag &_Keyval) noexcept;  ; void clear () noexcept;  . Constructor details. ◆ TagSet() [1/2]. sofa::core::objectmodel::TagSet::TagSet ; (; ). default . ◆ TagSet() [2/2]. sofa::core::objectmodel::TagSet::TagSet ; (; const Tag & ; t). Automatic conversion between a tag and a tagset composed of this tag. . Function details. ◆ begin() [1/2]. TagSet::const_iterator sofa::core::objectmodel::TagSet::begin ; (; ); const. noexcept . ◆ begin() [2/2]. TagSet::iterator sofa::core::objectmodel::TagSet::begin ; (; ). noexcept . ◆ cbegin(). TagSet::const_iterator ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set.html:1593,clear,clear,1593,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set.html,1,['clear'],['clear']
Usability,"i::qt::RealGUI::viewerMap. protected . list of all viewer key name (for creation) mapped to its QAction in the GUI . Constructor details. ◆ RealGUI(). sofa::gui::qt::RealGUI::RealGUI ; (; const char * ; viewername). ◆ ~RealGUI(). sofa::gui::qt::RealGUI::~RealGUI ; (; ). override . Function details. ◆ activateNode. void sofa::gui::qt::RealGUI::activateNode ; (; sofa::simulation::Node * ; node, . bool ; activate . ). virtualslot . ◆ appendToDataLogFile. void sofa::gui::qt::RealGUI::appendToDataLogFile ; (; QString ; dataModifiedString). protectedslot . ◆ centerWindow(). void sofa::gui::qt::RealGUI::centerWindow ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseGUI. ◆ changeViewer. void sofa::gui::qt::RealGUI::changeViewer ; (; ). protectedvirtualslot . Allow to dynamically change viewer. Called when click on another viewer in GUI Qt viewer list (see viewerMap). TODO: find a better way to propagate the argument when we construct the viewer . ◆ clear. void sofa::gui::qt::RealGUI::clear ; (; ). virtualslot . ◆ closeGUI(). int sofa::gui::qt::RealGUI::closeGUI ; (; ). overridevirtual . Close the GUI. ; Implements sofa::gui::common::BaseGUI. ◆ CreateApplication(). void sofa::gui::qt::RealGUI::CreateApplication ; (; int ; _argc = 0, . char ** ; _argv = nullptr . ). staticprotected . ◆ createDisplayFlags(). void sofa::gui::qt::RealGUI::createDisplayFlags ; (; Node::SPtr ; root). protected . ◆ CreateGUI(). BaseGUI * sofa::gui::qt::RealGUI::CreateGUI ; (; const char * ; name, . sofa::simulation::Node::SPtr ; groot = nullptr, . const char * ; filename = nullptr . ). static . ◆ createViewer(). void sofa::gui::qt::RealGUI::createViewer ; (; const char * ; _viewerName, . bool ; _updateViewerList = false . ). virtual . create a viewer according to the argument key Notethe viewerMap have to be initialize at least once before ; _updateViewerList is used only if you want to reactualise the viewerMap in the GUI TODO: find a better way to propagate the argument when we c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:13080,clear,clear,13080,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,1,['clear'],['clear']
Usability,"ic Object * create (Object *, std::string arg="""");  . Attribute details. ◆ m_bLoaded. unsigned char sofa::helper::io::Image::m_bLoaded. protected . ◆ strFromChannelFormat. const char * sofa::helper::io::Image::strFromChannelFormat. static . Initial value:=; {; ""L"",; ""LA"",; ""R"",; ""RG"",; ""RGB"",; ""RGBA"",; ""BGR"",; ""BGRA"",; ; ""COUNT_OF_CHANNEL_FORMATS""; }. ◆ strFromDataType. const char * sofa::helper::io::Image::strFromDataType. static . Initial value:=; {; ""UNORM8"",; ""UNORM16"",; ""UINT32"",; ""HALF"",; ""FLOAT"",; ; ""UCOMPRESSED"",; ; ""COUNT_OF_DATA_TYPES""; }. ◆ strFromTextureType. const char * sofa::helper::io::Image::strFromTextureType. static . Initial value:=; {; ""TEXTURE_2D"",; ""TEXTURE_3D"",; ""TEXTURE_CUBE"",; ; ""TEXTURE_INVALID""; }. Constructor details. ◆ Image() [1/2]. sofa::helper::io::Image::Image ; (; ). ◆ ~Image(). sofa::helper::io::Image::~Image ; (; ). virtual . ◆ Image() [2/2]. sofa::helper::io::Image::Image ; (; const Image & ; rhs). Function details. ◆ clear(). void sofa::helper::io::Image::clear ; (; ). ◆ create(). template<class Object > . static Object* sofa::helper::io::Image::create ; (; Object * ; , . std::string ; arg = """" . ). inlinestatic . ◆ Create(). Image * sofa::helper::io::Image::Create ; (; std::string ; filename). static . ◆ get3DSliceMipmapPixels(). unsigned char * sofa::helper::io::Image::get3DSliceMipmapPixels ; (; unsigned ; slice, . unsigned ; mipmap . ). ◆ getBytesPerBlock(). unsigned sofa::helper::io::Image::getBytesPerBlock ; (; ); const. ◆ getBytesPerChannel(). unsigned sofa::helper::io::Image::getBytesPerChannel ; (; ); const. ◆ getBytesPerPixel(). unsigned sofa::helper::io::Image::getBytesPerPixel ; (; ); const. ◆ getChannelCount(). unsigned sofa::helper::io::Image::getChannelCount ; (; ); const. ◆ getChannelFormat(). Image::ChannelFormat sofa::helper::io::Image::getChannelFormat ; (; ); const. ◆ getCubeMipmapPixels(). unsigned char * sofa::helper::io::Image::getCubeMipmapPixels ; (; unsigned ; cubeside, . unsigned ; mipmap . ). ◆ getDa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html:3217,clear,clear,3217,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,1,['clear'],['clear']
Usability,"ic feedback device. ; More... Inheritance diagram for sofa::component::haptics::NullForceFeedbackT< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::component::haptics::NullForceFeedbackT< TDataTypes >; Null force feedback for haptic feedback device. . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(NullForceFeedbackT, TDataTypes), MechanicalStateForceFeedback< TDataTypes >);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void computeForce (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz) override;  ; void computeForce (const VecCoord &, VecDeriv &) override;  ; void computeWrench (const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world) override;  ;  Public Member Functions inherited from sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(MechanicalStateForceFeedback, TDataTypes), ForceFeedback);  ; void setReferencePosition (sofa::type::Transform< SReal > &) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html:1800,feedback,feedback,1800,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html,1,['feedback'],['feedback']
Usability,"ic< TBlock, CRSMechanicalPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlinestatic; clear(Index i, Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colsIndexsofa::linearalgebra::Com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:14766,clear,clearRow,14766,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clearRow']
Usability,"ich can be reached by topological links) More...;  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  . Protected Member Functions;  QuadSetTopologyContainer ();  ;  ~QuadSetTopologyContainer () override;  ; virtual void createQuadSetArray ();  Creates the QuadSet array. More...;  ; void createEdgeSetArray () override;  Creates the EdgeSet array. More...;  ; virtual void createEdgesInQuadArray ();  Creates the array of edge indices for each quad. More...;  ; virtual void createQuadsAroundVertexArray ();  Creates the QuadsAroundVertex Array. More...;  ; virtual void createQuadsAroundEdgeArray ();  Creates the quadsAroundEdge Array. More...;  ; void clearQuads ();  ; void clearEdgesInQuad ();  ; void clearQuadsAroundVertex ();  ; void clearQuadsAroundEdge ();  ; virtual QuadsAroundVertex & getQuadsAroundVertexForModification (const PointID vertexIndex);  Returns a non-const list of quad indices around a given DOF for subsequent modification. More...;  ; virtual QuadsAroundEdge & getQuadsAroundEdgeForModification (const EdgeID edgeIndex);  Returns a non-const list of quad indices around a given edge for subsequent modification. More...;  ; void setQuadTopologyToDirty ();  ; void cleanQuadTopologyFromDirty ();  ; const bool & isQuadTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer;  EdgeSetTopologyContainer ();  ;  ~EdgeSetTopologyContainer () override;  ; virtual void createEdgesAroundVertexArray ();  Creates the EdgesAroundVertex array. More...;  ; void clearEdges ();  ; void clearEdgesAroundVertex ();  ; void setEdgeTopologyToDirty ();  ; void cleanEdgeTopologyFromDirty ();  ; const bool & isEdgeTopologyDirty ();  ; virtual EdgesAroundVertex & getEdgesAroundVertexForModification (const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:31522,clear,clearQuads,31522,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,4,['clear'],"['clearEdgesInQuad', 'clearQuads', 'clearQuadsAroundEdge', 'clearQuadsAroundVertex']"
Usability,"ics simuation. sofa::core::MatrixAccumulatorInterface Member List . This is the complete list of members for sofa::core::MatrixAccumulatorInterface, including all inherited members. add(sofa::SignedIndex, sofa::SignedIndex, float)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex, sofa::SignedIndex, double)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear()sofa::core::MatrixAccumulatorInterfaceinlinevirtual; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface-members.html:1602,clear,clear,1602,api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_matrix_accumulator_interface-members.html,1,['clear'],['clear']
Usability,"ics simuation. sofa::core::objectmodel::TagSet Member List . This is the complete list of members for sofa::core::objectmodel::TagSet, including all inherited members. begin() noexceptsofa::core::objectmodel::TagSet; begin() const noexceptsofa::core::objectmodel::TagSet; cbegin() const noexceptsofa::core::objectmodel::TagSet; cend() const noexceptsofa::core::objectmodel::TagSet; clear() noexceptsofa::core::objectmodel::TagSet; const_iterator typedefsofa::core::objectmodel::TagSet; const_reverse_iterator typedefsofa::core::objectmodel::TagSet; count(const Tag &_Keyval) constsofa::core::objectmodel::TagSet; crbegin() const noexceptsofa::core::objectmodel::TagSet; crend() const noexceptsofa::core::objectmodel::TagSet; empty() const noexceptsofa::core::objectmodel::TagSet; end() noexceptsofa::core::objectmodel::TagSet; end() const noexceptsofa::core::objectmodel::TagSet; erase(const_iterator _Where) noexceptsofa::core::objectmodel::TagSet; erase(const_iterator _First, const_iterator _Last) noexceptsofa::core::objectmodel::TagSet; erase(const Tag &_Keyval) noexceptsofa::core::objectmodel::TagSet; find(const Tag &_Keyval)sofa::core::objectmodel::TagSet; find(const Tag &_Keyval) constsofa::core::objectmodel::TagSet; includes(const Tag &t) constsofa::core::objectmodel::TagSet; includes(const TagSet &t) constsofa::core::objectmodel::TagSet; insert(const value_type &_Val)sofa::core::objectmodel::TagSet; iterator typedefsofa::core::objectmodel::TagSet; rbegin() noexceptsofa::core::objectmodel::TagSet; rbegin() const noexceptsofa::core::objectmodel::TagSet; rend() noexceptsofa::core::objectmodel::TagSet; rend() const noexceptsofa::core::objectmodel::TagSet; reverse_iterator typedefsofa::core::objectmodel::TagSet; size() const noexceptsofa::core::objectmodel::TagSet; TagSet()=defaultsofa::core::objectmodel::TagSet; TagSet(const Tag &t)sofa::core::objectmodel::TagSet; value_type typedefsofa::core::objectmodel::TagSet. Generated on Mon Nov 11 2024 03:16:01 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set-members.html:467,clear,clear,467,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set-members.html,1,['clear'],['clear']
Usability,"id sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::apply ; (; typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ applyJ(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::applyJ ; (; typename Out::VecDeriv & ; out, . const typename In::VecDeriv & ; in . ). override . ◆ applyJT() [1/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::applyJT ; (; typename In::MatrixDeriv & ; out, . const typename Out::MatrixDeriv & ; in . ). override . ◆ applyJT() [2/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::applyJT ; (; typename In::VecDeriv & ; out, . const typename Out::VecDeriv & ; in . ). override . ◆ clear(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::clear ; (; std::size_t ; reserve = 0). override . ◆ draw(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::draw ; (; const VisualParams * ; vparams, . const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ getJ(). template<class In , class Out > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::getJ ; (; int ; outSize, . int ; inSize . ). override . ◆ init(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::init ; (; const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ resize(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperSparseGridTopology< In, Out >::resize ; (; core::State< Out > * ; toModel). override . ◆ SOFA_CLASS(). ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html:5236,clear,clear,5236,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_sparse_grid_topology.html,1,['clear'],['clear']
Usability,"idStr, const std::string &objStr);  ; template<class T > ; static void stepEnd (const char *idStr, T *obj);  ; static void stepNext (const char *prevIdStr, const char *nextIdStr);  ; static void step (const char *idStr);  ; static void step (const char *idStr, const char *objStr);  ; static void step (const char *idStr, const std::string &objStr);  ; template<class T > ; static void step (const char *idStr, T *obj);  ; static void valSet (IdVal id, double val);  ; static void valAdd (IdVal id, double val);  ; static void valSet (const char *idStr, double val);  ; static void valAdd (const char *idStr, double val);  ; static std::pair< SyncCallBack, void * > setSyncCallBack (SyncCallBack cb, void *userData=nullptr);  . Function details. ◆ begin() [1/2]. void sofa::helper::AdvancedTimer::begin ; (; const char * ; idStr). static . ◆ begin() [2/2]. void sofa::helper::AdvancedTimer::begin ; (; IdTimer ; id). static . ◆ clear(). void sofa::helper::AdvancedTimer::clear ; (; ). static . ◆ clearData(). void sofa::helper::AdvancedTimer::clearData ; (; IdTimer ; id). static . clearDatato clear a specific Timer Data ; Parameters. idIdTimer, id of the timer . ◆ convertOutputType(). AdvancedTimer::outputType sofa::helper::AdvancedTimer::convertOutputType ; (; std::string ; type). static . convertOutputType convert a string to the output type ; Parameters. typestd::string, output type name (example : ""json"") . ReturnsoutputType, output type enum . ◆ end() [1/4]. void sofa::helper::AdvancedTimer::end ; (; const char * ; idStr). static . ◆ end() [2/4]. void sofa::helper::AdvancedTimer::end ; (; IdTimer ; id). static . ◆ end() [3/4]. std::string sofa::helper::AdvancedTimer::end ; (; IdTimer ; id, . double ; time, . double ; dt . ). static . end Override fo the end method in which you can use JSON or old format ; Parameters. idIdTimer, the id of the used timer ; timedouble, current time (from the context) ; timedt, current delta time or dt (from the context) . Returnsstd::string, the o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html:4060,clear,clearData,4060,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,1,['clear'],['clearData']
Usability,"idevirtual . Project the given matrix (Experimental API). See doc in base parent class ; Reimplemented from sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >. ◆ projectResponse(). template<class DataTypes > . void sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >::projectResponse ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; dx . ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Reimplemented from sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >. ◆ projectResponseT(). template<class DataTypes > . template<class DataDeriv > . void sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >::projectResponseT ; (; DataDeriv & ; dx, . const std::function< void(DataDeriv &, const unsigned int, const VecBool &)> & ; clear . ). protected . ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Reimplemented from sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >. ◆ reinit(). template<class DataTypes > . void sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html:25559,clear,clear,25559,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,1,['clear'],['clear']
Usability,"idmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeCorrection(ElementMass &)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >inlineprotectedvirtual; computeElementMass(ElementMass &Mass, Real &totalMass, const type::fixed_array< Coord, 8 > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protectedvirtual; computeElementMasses()sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >pro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html:8863,clear,clearLoggedMessages,8863,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"idmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeElementMass(ElementMass &Mass, Real &totalMass, const type::fixed_array< Coord, 8 > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protectedvirtual; computeElementMasses()sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protectedvirtual; computeElementStiffness(ElementStiffness &K, const MaterialStiffness &M, const type::Vec< 8, Coord > &nodes)sofa::component::solidmechanics::fem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html:8752,clear,clearLoggedMessages,8752,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"idmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeElementStiffness(ElementStiffness &K, const MaterialStiffness &M, const type::Vec< 8, Coord > &nodes)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protectedvirtual; computeForce(Displacement &F, const Displacement &Depl, const ElementStiffness &K)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; computeMaterialStiffness(MaterialStiffness &m, double youngModulus, double poissonRatio)sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html:5827,clear,clearLoggedMessages,5827,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"idmechanics::fem::elastic::TriangularFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeElementStiffnessMatrix(type::Mat< 9, 9, Real > &S, type::Mat< 9, 9, Real > &SR, const MaterialStiffness &K, const StrainDisplacement &J, const Transformation &Rot)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; computeMaterialStiffness(int i, Index &a, Index &b, Index &c) overridesofa::component::solidmechanics::fem::elastic::TriangularAnisotropicFEMForceField< DataTypes >virtual; computePrincipalStrain(Index elementIndex, TriangleInformation &triangleInfo)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; computePrincipalStress(Index elementIndex, TriangleInformation &triangleInfo)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; computeStiffness(Stiffness &K, const StrainDisplacement ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html:6321,clear,clearLoggedMessages,6321,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"idmechanics::fem::elastic::TriangularFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeElementStiffnessMatrix(type::Mat< 9, 9, Real > &S, type::Mat< 9, 9, Real > &SR, const MaterialStiffness &K, const StrainDisplacement &J, const Transformation &Rot)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >; computeMaterialStiffness(int i, Index &a, Index &b, Index &c)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protectedvirtual; computePrincipalStrain(Index elementIndex, TriangleInformation &triangleInfo)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; computePrincipalStress(Index elementIndex, TriangleInformation &triangleInfo)sofa::component::solidmechanics::fem::elastic::TriangularFEMForceField< DataTypes >protected; computeStiffness(Stiffness &K, const StrainDisplacement &J, const M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html:6299,clear,clearLoggedMessages,6299,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"id readOnlyData (QTableWidget *widget, core::objectmodel::BaseData *data);  ; void readOnlyData (QWidget *widget, core::objectmodel::BaseData *data);  . Protected Member Functions; void updateConsole ();  ; QString parseDataModified ();  . Signals; void updateDataWidgets ();  ; void objectUpdated ();  ; void dialogClosed (void *);  ; void nodeNameModification (simulation::Node *);  ; void componentDirty (bool);  ; void dataModified (QString);  ; void beginObjectModification (sofa::core::objectmodel::Base *object);  ; void endObjectModification (sofa::core::objectmodel::Base *object);  ; void beginDataModification (sofa::core::objectmodel::BaseData *data);  ; void endDataModification (sofa::core::objectmodel::BaseData *data);  . Public Slots; void openExternalBrowser (const QUrl &link);  ; void reject () override;  ; void accept () override;  ; void closeNow ();  ; void closeEvent (QCloseEvent *) override;  ; void updateTables ();  ; virtual void updateValues ();  . Protected Slots; void clearMessages ();  . Attribute details. ◆ basenode. core::objectmodel::Base* sofa::gui::qt::ModifyObject::basenode. protected . ◆ buttonUpdate. QPushButton* sofa::gui::qt::ModifyObject::buttonUpdate. protected . ◆ data_. core::objectmodel::BaseData* sofa::gui::qt::ModifyObject::data_. protected . ◆ dialogFlags_. const ModifyObjectFlags sofa::gui::qt::ModifyObject::dialogFlags_. protected . ◆ dialogTab. QTabWidget* sofa::gui::qt::ModifyObject::dialogTab. protected . ◆ Id_. void* sofa::gui::qt::ModifyObject::Id_. protected . ◆ item_. QTreeWidgetItem* sofa::gui::qt::ModifyObject::item_. protected . ◆ m_numMessages. int sofa::gui::qt::ModifyObject::m_numMessages. protected . ◆ m_tabs. std::vector< QTabulationModifyObject* > sofa::gui::qt::ModifyObject::m_tabs. protected . ◆ messageEdit. QTextBrowser* sofa::gui::qt::ModifyObject::messageEdit. protected . ◆ messageTab. QWidget* sofa::gui::qt::ModifyObject::messageTab. protected . Constructor details. ◆ ModifyObject(). sofa::gui::qt::ModifyO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html:2260,clear,clearMessages,2260,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,1,['clear'],['clearMessages']
Usability,ieve-simulation-of-liver-deformation-using-sofa-framework%EF%BC%9F; ; SOFA - Topic: [SOLVED] How to achieve simulation of liver deformation using SOFA framework？. /how-to-add-flexible-plugin-to-sofa; ; SOFA - Topic: How to add Flexible plugin to SOFA. /how-to-add-points-into-a-container; ; SOFA - Topic: [SOLVED] How to add points into a container?. /how-to-add-python-script-to-c-code; ; SOFA - Topic: [SOLVED] How to add python script to c++ code. /how-to-add-qt-and-boost-to-the-path; ; SOFA - Topic: How to add qt and boost to the PATH?. /how-to-add-value-in-a-item-of-a-section; . /embed; ; SOFA - Topic: [SOLVED] How to add value in a item of a section. SOFA - Topic: [SOLVED] How to add value in a item of a section. /how-to-add-vr-functionality-in-sofa-framework; . /feed; ; [SOLVED] How to add VR functionality in SOFA framework? – SOFA. SOFA - Topic: [SOLVED] How to add VR functionality in SOFA framework?. /how-to-apply-a-force-and-get-the-feedback-of-the-soft-tissue-deformation; ; SOFA - Topic: How to apply a force and get the feedback of the soft tissue deformation. /how-to-apply-an-orientation-dependent-pure-torque-to-rigid-body; ; SOFA - Topic: How to apply an orientation-dependent pure torque to Rigid body?. /how-to-apply-displacement-on-object; ; SOFA - Topic: How to apply Displacement on object. /how-to-attach-a-beam-with-a-rigid-body; ; SOFA - Topic: How to attach a beam with a rigid body. /how-to-begin-to-use-sofa-for-medical-simulations; . /feed; ; [SOLVED] How to begin to use sofa for medical simulations? – SOFA. SOFA - Topic: [SOLVED] How to begin to use sofa for medical simulations?. /how-to-break-the-spring-between-mesh; ; SOFA - Topic: [SOLVED] How to break the spring between mesh?. /how-to-build-qtsofa; ; SOFA - Topic: [SOLVED] How to build 'qtSofa'. /how-to-build-sofa-without-opengl-support; ; SOFA - Topic: [SOLVED] How to build SOFA without OpenGL support. /how-to-carving-by-phantom-device; ; SOFA - Topic: [SOLVED] HOW TO carving by phantom device ?.,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:316212,feedback,feedback-of-the-soft-tissue-deformation,316212,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['feedback'],"['feedback', 'feedback-of-the-soft-tissue-deformation']"
Usability,"iewMatrix ();  ; virtual GLuint getDepthTexture ();  ; virtual GLuint getColorTexture ();  ; virtual const sofa::type::Vec3 getPosition ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual type::Vec3 getDirection ();  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ; virtual LightType getLightType ()=0;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html:6695,clear,clearVisual,6695,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"if exist or empty Block if not . ◆ blockMultTranspose(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static auto sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::blockMultTranspose ; (; const TBlock & ; blockA, . const TBlock & ; blockB . ). inlinestatic . ◆ check_matrix() [1/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; ). inline . ◆ check_matrix() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; Index ; nzmax, . Index ; m, . Index ; n, . Index * ; a_p, . Index * ; a_i, . Block * ; a_x . ). inlinestatic . ◆ clear(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clear ; (; ). inline . Completely clear the matrix. ; Warningif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col value of line will be set to zero using default co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:21347,clear,clear,21347,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['clear'],['clear']
Usability,"ildFromVoxelFile(const std::string &filename)sofa::component::topology::container::grid::SparseGridTopologyprotected; buildFromVoxelLoader(sofa::core::loader::VoxelLoader *loader)sofa::component::topology::container::grid::SparseGridTopologyprotected; buildVirtualFinerLevels()sofa::component::topology::container::grid::SparseGridTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingBox(const type::vector< type::Vec3 > &vertices, SReal &xmin, SReal &xmax, SReal &ymin, SReal &ymax, SReal &zmin, SReal &zmax) constsofa::component::topology::container::grid::SparseGridTopologyprotected; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; constructCollisionModels(const sofa::type::vector< sofa::core::topology::BaseMeshTopology * > &list_mesh, const type::vector< Data< type::vector< sofa::type::Vec< 3, T > > > * > &list_X)sofa::component::topology::container::g",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html:7212,clear,clear,7212,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html,1,['clear'],['clear']
Usability,"imer::outputType getOutputType (IdTimer id);  getOutputType Get the outputType for the given AdvancedTimer. More...;  ; static std::string getTimeAnalysis (IdTimer id, double time, double dt);  getTimeAnalysis Return the result of the AdvancedTimer More...;  ; static type::vector< AdvancedTimer::IdStep > getSteps (IdTimer id, bool processData=false);  getSteps Return the vector of IDStep of the AdvancedTimer given execution More...;  ; static std::map< AdvancedTimer::IdStep, StepData > getStepData (IdTimer id, bool processData=false);  getStepData Return the map of StepData of the AdvancedTimer given execution More...;  ; static type::vector< Record > getRecords (IdTimer id);  getRecords the vector of Record of the AdvancedTimer given execution id. More...;  ; static void clearData (IdTimer id);  clearDatato clear a specific Timer Data More...;  ; static void clear ();  ; static void begin (IdTimer id);  ; static void end (IdTimer id);  ; static void end (IdTimer id, std::ostream &result);  ; static std::string end (IdTimer id, double time, double dt);  end Override fo the end method in which you can use JSON or old format More...;  ; static bool isActive ();  ; static void stepBegin (IdStep id);  ; static void stepBegin (IdStep id, IdObj obj);  ; template<class T > ; static void stepBegin (IdStep id, T *obj);  ; static void stepEnd (IdStep id);  ; static void stepEnd (IdStep id, IdObj obj);  ; template<class T > ; static void stepEnd (IdStep id, T *obj);  ; static void stepNext (IdStep prevId, IdStep nextId);  ; static void step (IdStep id);  ; static void step (IdStep id, IdObj obj);  ; template<class T > ; static void step (IdStep id, T *obj);  ; static void begin (const char *idStr);  ; static void end (const char *idStr);  ; static void stepBegin (const char *idStr);  ; static void stepBegin (const char *idStr, const char *objStr);  ; static void stepBegin (const char *idStr, const std::string &objStr);  ; template<class T > ; static void stepBegin (const char *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html:1775,clear,clear,1775,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,1,['clear'],['clear']
Usability,"index, . const std::string & ; value . ). inlinestatic . ◆ size() [1/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::IncompleteTypeInfo< TDataType >::size ; (; ). inlinestatic . ◆ size() [2/2]. template<class TDataType > . static sofa::Size sofa::defaulttype::IncompleteTypeInfo< TDataType >::size ; (; const DataType & ; ). inlinestatic . Enum details. ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorValidInfo 1 if this type has valid infos . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorFixedSize 1 if this type has a fixed size . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorZeroConstructor 1 if the constructor is equivalent to setting memory to 0 . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleCopy 1 if copying the data can be done with a memcpy . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSimpleLayout 1 if the layout in memory is simply N values of the same base type . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorInteger 1 if this type uses integer values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorScalar 1 if this type uses scalar values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorText 1 if this type uses text values . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorCopyOnWrite 1 if this type uses copy-on-write. The memory is shared with its source Data while only the source is changing (and the source modifications are then visible in the current Data). As soon as modifications are applied to the current Data, it will allocate its own value, and no longer shares memory with the source. . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorContainer 1 if this type is a container . ◆ anonymous enum. template<class TDataType > . anonymous enum. EnumeratorSize largest know",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html:3934,simpl,simply,3934,api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_incomplete_type_info.html,1,['simpl'],['simply']
Usability,"indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:3717,clear,clearCol,3717,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,1,['clear'],['clearCol']
Usability,"ine; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear(Index i, Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clear() overridesofa::linearalgebra::FullMatrix< T >virtual; clearCol(Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::FullMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html:5821,clear,clearCol,5821,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,2,['clear'],['clearCol']
Usability,"ineIterator begin ();  ; LineIterator end ();  ; LineConstIterator begin () const;  ; LineConstIterator end () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; FullVector< Real > operator* (const FullVector< Real > &v) const;  ; void mul (FullVector< Real > &res, const FullVector< Real > &b) const;  ; void mulT (FullVector< Real > &res, const FullVector< Real > &b) const;  ; FullMatrix< Real > operator* (const FullMatrix< Real > &m) const;  ; void mul (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; void mulT (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Ind",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html:2470,clear,clearRowCol,2470,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html,1,['clear'],['clearRowCol']
Usability,"inearalgebra::BaseVector::add(Index i0, Index n, const float *src)sofa::linearalgebra::BaseVectorinlinevirtual; sofa::linearalgebra::BaseVector::add(Index i0, Index n, const double *src)sofa::linearalgebra::BaseVectorinlinevirtual; sofa::linearalgebra::BaseVector::add(Index i0, Index n, const int *src)sofa::linearalgebra::BaseVectorinlinevirtual; addDefaultImpl(Index i0, Index n, const T *src)sofa::linearalgebra::BaseVectorinlineprotected; allocsizesofa::linearalgebra::FullVector< T >protected; asub(Index bi, Index) constsofa::linearalgebra::BlockVector< N, T >; asub(Index bi, Index)sofa::linearalgebra::BlockVector< N, T >; begin()sofa::linearalgebra::FullVector< T >inline; begin() constsofa::linearalgebra::FullVector< T >inline; BlockVector()sofa::linearalgebra::BlockVector< N, T >; BlockVector(Index n)sofa::linearalgebra::BlockVector< N, T >explicit; capacity() constsofa::linearalgebra::FullVector< T >inline; checkIndex(Index n) constsofa::linearalgebra::FullVector< T >protected; clear() overridesofa::linearalgebra::FullVector< T >virtual; clear(Index dim) overridesofa::linearalgebra::FullVector< T >virtual; const_iterator typedefsofa::linearalgebra::BlockVector< N, T >; ConstIterator typedefsofa::linearalgebra::FullVector< T >; cursizesofa::linearalgebra::FullVector< T >protected; datasofa::linearalgebra::FullVector< T >protected; dot(const FullVector< Real > &a) constsofa::linearalgebra::FullVector< T >; element(Index i) const overridesofa::linearalgebra::FullVector< T >inlinevirtual; ELEMENT_FLOAT enum valuesofa::linearalgebra::BaseVector; ELEMENT_INT enum valuesofa::linearalgebra::BaseVector; ELEMENT_UNKNOWN enum valuesofa::linearalgebra::BaseVector; elements(Index i0, Index n, float *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elements(Index i0, Index n, double *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elements(Index i0, Index n, int *src) constsofa::linearalgebra::BaseVectorinlinevirtual; elementsDefaultImpl(Index i0, Index n, T *b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector-members.html:1356,clear,clear,1356,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector-members.html,1,['clear'],['clear']
Usability,"inearsystem::CompositeLinearSystem< TMatrix, TVector >::l_solverLinearSystem. protected . Constructor details. ◆ CompositeLinearSystem(). template<class TMatrix , class TVector > . sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::CompositeLinearSystem. protected . Function details. ◆ allocateSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::allocateSystem. overrideprotectedvirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ assembleSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::assembleSystem ; (; const core::MechanicalParams * ; mechanical_params). overrideprotectedvirtual . Reimplemented from sofa::core::behavior::BaseMatrixLinearSystem. ◆ clearSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::clearSystem. overridevirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ dispatchSystemRHS(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::dispatchSystemRHS ; (; core::MultiVecDerivId ; v). overridevirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ dispatchSystemSolution(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::dispatchSystemSolution ; (; core::MultiVecDerivId ; v). overridevirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ getRHSVector(). template<class TMatrix , class TVector > . TVector * sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::getRHSVector. overridevirtual . Return the RHS of the linear system",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html:20291,clear,clearSystem,20291,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html,1,['clear'],['clearSystem']
Usability,"ineoverridevirtual . Get the iterator corresponding to the end of the rows of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowSize ; (; ); const. inlineoverridevirtual . Returnsthe number of rows of blocks ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ bRowsRange(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsRange ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::Com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48282,clear,clear,48282,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clear']
Usability,"iner;  SOFA_CLASS (PointSetTopologyContainer, core::topology::TopologyContainer);  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getChangeList () const;  ; const std::list< const TopologyChange * > & getStateChangeList () const;  ; const Data< std::list< const To",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:17840,simpl,simply,17840,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,6,['simpl'],['simply']
Usability,"ing to the output type More...;  ; static void setOutputType (IdTimer id, const std::string &type);  setOutputType Set the outputType for the given AdvancedTimer. More...;  ; static AdvancedTimer::outputType getOutputType (IdTimer id);  getOutputType Get the outputType for the given AdvancedTimer. More...;  ; static std::string getTimeAnalysis (IdTimer id, double time, double dt);  getTimeAnalysis Return the result of the AdvancedTimer More...;  ; static type::vector< AdvancedTimer::IdStep > getSteps (IdTimer id, bool processData=false);  getSteps Return the vector of IDStep of the AdvancedTimer given execution More...;  ; static std::map< AdvancedTimer::IdStep, StepData > getStepData (IdTimer id, bool processData=false);  getStepData Return the map of StepData of the AdvancedTimer given execution More...;  ; static type::vector< Record > getRecords (IdTimer id);  getRecords the vector of Record of the AdvancedTimer given execution id. More...;  ; static void clearData (IdTimer id);  clearDatato clear a specific Timer Data More...;  ; static void clear ();  ; static void begin (IdTimer id);  ; static void end (IdTimer id);  ; static void end (IdTimer id, std::ostream &result);  ; static std::string end (IdTimer id, double time, double dt);  end Override fo the end method in which you can use JSON or old format More...;  ; static bool isActive ();  ; static void stepBegin (IdStep id);  ; static void stepBegin (IdStep id, IdObj obj);  ; template<class T > ; static void stepBegin (IdStep id, T *obj);  ; static void stepEnd (IdStep id);  ; static void stepEnd (IdStep id, IdObj obj);  ; template<class T > ; static void stepEnd (IdStep id, T *obj);  ; static void stepNext (IdStep prevId, IdStep nextId);  ; static void step (IdStep id);  ; static void step (IdStep id, IdObj obj);  ; template<class T > ; static void step (IdStep id, T *obj);  ; static void begin (const char *idStr);  ; static void end (const char *idStr);  ; static void stepBegin (const char *idStr);  ; stat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html:1686,clear,clearData,1686,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,3,['clear'],"['clear', 'clearData', 'clearDatato']"
Usability,"ing value of element i. ; Implemented in sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ add() [2/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const double * ; src . ). inlinevirtual . Add to the values of n double elements, starting at element i0. . ◆ add() [3/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const float * ; src . ). inlinevirtual . Add to the values of n float elements, starting at element i0. . ◆ add() [4/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const int * ; src . ). inlinevirtual . Add to the values of n int elements, starting at element i0. . ◆ addDefaultImpl(). template<class T > . void sofa::linearalgebra::BaseVector::addDefaultImpl ; (; Index ; i0, . Index ; n, . const T * ; src . ). inlineprotected . ◆ clear() [1/2]. virtual void sofa::linearalgebra::BaseVector::clear ; (; ). pure virtual . Reset all values to 0. ; Implemented in sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ clear() [2/2]. virtual void sofa::linearalgebra::BaseVector::clear ; (; Index ; i). inlinevirtual . Reset the value of element i to 0. ; Reimplemented in sofa::linearalgebra::EigenVector< TReal, TBlockSize >, sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, and sofa::linearalgebra::FullVector< SReal >. ◆ element(). virtual SReal sofa::linearalgebra::BaseVector::element ; (; Index ; i); const. pure virtual . Read the value of element i. ; Implemented in sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ elements() [1/3]. virtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html:4850,clear,clear,4850,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,1,['clear'],['clear']
Usability,ing-attribute-getobject; ; SOFA - Topic: Missing attribute: getObject. /missing-lib-files; ; SOFA - Topic: [SOLVED] Missing lib files. /missing-libraries-stlib-and-libsofapython; . /embed; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. /page; . /2; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. SOFA - Topic: Missing libraries: STLIB and libSofaPython. /missing-pybind11config-cmake; ; SOFA - Topic: Missing pybind11Config.cmake. /missing-sosfsphfluid-dll; ; SOFA - Topic: [SOLVED] Missing SosfSphFluid dll. /model-collapse-with-force-of-gravity; ; SOFA - Topic: Model collapse with force of gravity. /modeler-exe-error; ; SOFA - Topic: Modeler.exe error. /modeler-in-sofa; ; SOFA - Topic: Modeler in SOFA. /modeler-in-sofa-binaries-18-06; . /feed; ; [SOLVED] Modeler in SOFA Binaries 18.06 – SOFA. SOFA - Topic: [SOLVED] Modeler in SOFA Binaries 18.06. /modeler-in-v18-06; ; SOFA - Topic: [SOLVED] Modeler in v18.06. /modeling-a-simple-grasper; . /feed; ; [SOLVED] Modeling a simple grasper – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Modeling a simple grasper. SOFA - Topic: [SOLVED] Modeling a simple grasper. /modeling-hyper-elastic-material; ; SOFA - Topic: Modeling Hyper-elastic Material. /modeling-suction-force; . /feed; ; [SOLVED] Modeling suction force – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Modeling suction force. /4; ; SOFA - Topic: [SOLVED] Modeling suction force. SOFA - Topic: [SOLVED] Modeling suction force. /modelling-flexible-inelastic-materials; ; SOFA - Topic: Modelling flexible inelastic materials. /modelling-skin-attached-to-tissue; ; SOFA - Topic: Modelling skin attached to tissue. /modelling-superelastic-material-nitinol; ; SOFA - Topic: Modelling SuperElastic Material (Nitinol). /modelling-tissue-deformation-in-needle-insertion-case; ; SOFA - Topic: [SOLVED] Modelling tissue deformation in needle insertion case. /model-not-visible-in-runsofa; . /feed; ; [SOLVED] model not visible in runsofa – SOFA. SOFA - Topic: [SOLVED] mode,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:349015,simpl,simple,349015,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['simpl'],['simple']
Usability,ingForceField;  This class describes a simple elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  FastTriangularBendingSprings;  ; class  FrameSpringForceFieldInternalData;  ; class  FrameSpringForceField;  ; class  GearSpring;  ; class  GearSpringForceFieldInternalData;  ; class  GearSpringForceField;  ; class  JointSpring;  JOINTSPRING. More...;  ; class  JointSpringForceFieldInternalData;  ; class  JointSpringForceField;  ; class  LinearSpring;  This class contains the description of one linear spring. More...;  ; class  MeshSpringForceField;  ; class  PolynomialRestShapeSpringsForceField;  This class describes a polynomial elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  PolynomialSpringsForceField;  This class describes a polynomial elastic springs ForceField. More...;  ; class  QuadBendingSprings;  ; class  QuadularBendingSprings;  ; class  RegularGridSpringForceField;  ; class  RepulsiveSpringForceField;  ; class  RestShapeSpringsForceField;  This class describes a simple elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  SpringForceFieldInternalData;  This class can be overridden if needed for additional storage within template specializations. More...;  ; class  SpringForceField;  Set of simple springs between particles. More...;  ; class  TriangleBendingSprings;  ; class  TriangularBendingSprings;  ; class  TriangularBiquadraticSpringsForceField;  ; class  TriangularQuadraticSpringsForceField;  ; class  VectorSpringForceField;  . Typedefs; typedef core::topology::BaseMeshTopology::EdgesInTriangle EdgesInTriangle;  ; typedef core::topology::BaseMeshTopology::Quad Quad;  ; typedef core::topology::BaseMeshTopology::EdgesInQuad EdgesInQuad;  ; using SpringForceField = SpringForceField< T >;  ; typedef core::topology::BaseMeshTopology::Triangle Triangle;  . Functions; void registerAngularSpringForceField (sofa::core::ObjectFactory *factory);  ; voi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html:1348,simpl,simple,1348,api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html,1,['simpl'],['simple']
Usability,"ingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::MeshSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html:5885,clear,clearLoggedMessages,5885,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::Pa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html:5647,clear,clearLoggedMessages,5647,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_regular_grid_spring_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::RepulsiveSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::Pair",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html:5609,clear,clearLoggedMessages,5609,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ingMatrix *) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; c_springCallBacksofa::component::solidmechanics::spring::SpringForceField< DataTypes >protected; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::solidmechanics::spring::SpringForceField< DataTypes >virtual; computeSpringDForce(VecDeriv &df1, const VecDeriv &dx1, VecDeriv &df2, const VecDeriv &dx2, sofa::Index i, const Spring &spring, SReal kFactor, SReal bFactor)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; computeSpringForce(const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring)sofa::component::solidmechanics::spring::SpringForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::solidmechanics::spring::SpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteracti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html:5805,clear,clearLoggedMessages,5805,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs-members.html,3,['clear'],['clearLoggedMessages']
Usability,"ingvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMapping()sofa::core::BaseMappingprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices)sofa::core::BaseMappingvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Multi2Mapping< TIn1, TIn2, TOut >virtual; computeAccFromMapping(const MechanicalParams *, const type::vector< DataVecDeriv_t< Out > * > &, const type::vector< const DataVecDeriv_t< In1 > * > &, const type::vector< const DataVecDeriv_t< In2 > * > &, const type::vector< const DataVecDeriv_t< In1 > * > &, const type::vector< const DataVecDeriv_t< In2 > * > &)sofa::core::Multi2Mapping< TIn1, TIn2, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Multi2Mapping< TIn1, TIn2, TO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html:4936,clear,clearLoggedMessages,4936,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,ing getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; tags; Methods related to tagged subsets . const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; componentstate; Methods related to component state . ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  . Static Public Member Functions; static const BaseClass * GetClass ();  ; template<class T > ; static std::stri,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html:4382,clear,clearLoggedMessages,4382,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,1,['clear'],['clearLoggedMessages']
Usability,"initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; b_setDefaultParameterssofa::component::visual::BaseCameraprotected; Base()sofa::core::objectmodel::Baseprotected; BaseCamera()sofa::component::visual::BaseCamera; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::visual::BaseCameravirtual; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeClippingPlane(const core::visual::VisualParams *vp, double &zNear, double &zFar)sofa::component::visual::BaseCamera; computeZ()sofa::component::visual::BaseCamera; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; currentDistancesofa::component::visual::BaseCameraprotected; currentLookAtsofa::component::visual::BaseCameraprotected; currentZFarsofa::component::visual::BaseCameraprotected; currentZNearsofa::component::visual::BaseCameraprotected; d_activatedsofa::component::visual::BaseCamera; d_cameraUpsofa::component::visual::RecordedCamera; d_componentStatesofa::core::objectmodel::Base; d_computeZClipsofa::component::visual::BaseCamera; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html:2228,clear,clearLoggedMessages,2228,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera-members.html,1,['clear'],['clearLoggedMessages']
Usability,"initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; b_setDefaultParameterssofa::component::visual::BaseCameraprotected; Base()sofa::core::objectmodel::Baseprotected; BaseCamera()sofa::component::visual::BaseCamera; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::visual::BaseCameravirtual; cameraToWorldCoordinates(const type::Vec3 &p)sofa::component::visual::BaseCamera; cameraToWorldTransform(const type::Vec3 &v)sofa::component::visual::BaseCamera; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeClippingPlane(const core::visual::VisualParams *vp, double &zNear, double &zFar)sofa::component::visual::BaseCamera; computeZ()sofa::component::visual::BaseCamera; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; currentDistancesofa::component::visual::BaseCameraprotected; currentLookAtsofa::component::visual::BaseCameraprotected; currentZFarsofa::component::visual::BaseCameraprotected; currentZNearsofa::component::visual::BaseCameraprotected; d_activatedsofa::component::visual::BaseCamera; d_componentStatesofa::core::objectmodel::Base; d_computeZClipsofa::component::visual::BaseCamera; d_distancesofa::component::visual::BaseCamera; d_fi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html:2220,clear,clearLoggedMessages,2220,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera-members.html,1,['clear'],['clearLoggedMessages']
Usability,"inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ coeffRef(). template<class TReal > . Real& sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::coeffRef ; (; Index ; i, . Index ; j . ). inline . Return a reference to the given entry in the compressed matrix.There can (must ?) be a value at this place already. Efficient only if the it is at the last place of the compressed matrix. . ◆ colSize(). template<class TReal > . Index sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::colSize ; (; void ; ); const. inlineoverridevirtual . number of columns ; Implements sofa::linearalgebra::BaseMatrix. ◆ compress(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::compress ; (; ). inlineoverridevirtual . Add the val",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:21048,clear,clearRowsCols,21048,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearRowsCols']
Usability,"inlineprotectedvirtual; sofa::component::linearsystem::AssemblingMatrixAccumulator::add(const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >protectedvirtual; sofa::component::linearsystem::AssemblingMatrixAccumulator::add(const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >protectedvirtual; AssemblingMappedMatrixAccumulator()sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >protected; ConstantLocalMatrix< linearalgebra::clear() overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >; sofa::component::linearsystem::AssemblingMappedMatrixAccumulator::clear() overridesofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >; Col typedefsofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >; ComponentType typedefsofa::component::linearsystem::ConstantLocalMappedMatrix< c, TBlockType >; compressedInsertionOrderListsofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >; ConstantLocalMatrix< linearalgebra::contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >static; sofa::component::linearsystem::AssemblingMappedMatrixAccumulator::contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >static; currentIdsofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >; ConstantLocalMatrix< linearalgebra::GetCustomTemplateName()sofa::component::linearsystem::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix-members.html:7164,clear,clear,7164,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix-members.html,1,['clear'],['clear']
Usability,"ion *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkMassDensity()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; checkTopology()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >protected; checkTotalMass()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; checkTotalMassInit()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; checkVertexMass()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >virtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeVertexMass(Real density)sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >protected; Coord typedefsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMassOnRestsofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_fileMasssofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_massDensitysofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >; d_messageLog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html:7535,clear,clear,7535,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass-members.html,1,['clear'],['clear']
Usability,"ion specialized on contributions of the same size than the blocks. . ◆ asub() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BTDMatrix< N, T >::Index sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17302,clear,clear,17302,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,1,['clear'],['clear']
Usability,"ion vector. More...;  ; void projectVelocity (core::MultiVecDerivId v, SReal time=0.0);  Apply projective constraints to the given velocity vector. More...;  ; void projectResponse (core::MultiVecDerivId dx, double **W=nullptr);  Apply projective constraints to the given vector. More...;  ; void projectPositionAndVelocity (core::MultiVecCoordId x, core::MultiVecDerivId v, double time=0.0);  Apply projective constraints to the given position and velocity vectors. More...;  ; void addMdx (core::MultiVecDerivId res, core::MultiVecDerivId dx, SReal factor=1.0);  res += factor M.dx More...;  ; void integrateVelocity (core::MultiVecDerivId res, core::ConstMultiVecCoordId x, core::ConstMultiVecDerivId v, SReal dt);  res = x + v.dt More...;  ; void accFromF (core::MultiVecDerivId a, core::ConstMultiVecDerivId f);  ; void computeEnergy (SReal &kineticEnergy, SReal &potentialEnergy);  Compute Energy. More...;  ; void computeForce (core::MultiVecDerivId result, bool clear=true, bool accumulate=true);  Compute the current force (given the latest propagated position and velocity) More...;  ; void computeDf (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated displacement) More...;  ; void computeDfV (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated velocity) More...;  ; void addMBKdx (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) dx $ (given the latest propagated displacement) More...;  ; void addMBKv (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) velocity $ More...;  ; void addSeparateGravity (SReal dt, core::MultiVecDerivId result=core::VecDerivId::velocity());  Add dt*Gravity to the velocity. More...;  ; void computeContactForce (core::MultiVecDerivId resul",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:3184,clear,clear,3184,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['clear'],['clear']
Usability,"ion).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectPosition() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectResponse(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::projectResponse ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; dx . ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectResponseT(). template<class DataTypes > . template<class DataDeriv > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::projectResponseT ; (; DataDeriv & ; dx, . const std::function< void(DataDeriv &, const unsigned int)> & ; clear . ). protected . ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ removeIndex(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::removeIndex ; (; Index ; index). ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(FixedTranslationProjectiveConstraint< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html:25302,clear,clear,25302,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,1,['clear'],['clear']
Usability,"ion).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectPosition() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectResponse(). template<class DataTypes > . void sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< DataTypes >::projectResponse ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; dx . ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectResponseT(). template<class TDataTypes > . template<class DataDeriv > . void sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >::projectResponseT ; (; DataDeriv & ; dx, . const std::function< void(DataDeriv &, const unsigned int)> & ; clear . ). protected . ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ reset(). template<class DataTypes > . void sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< DataTypes >::reset. overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setAnimationSpeed(). template<class TDataTypes > . void sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >::setAnimationSpeed ; (; float ; speed).",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html:27873,clear,clear,27873,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html,1,['clear'],['clear']
Usability,"ion. sofa::core::behavior::MassMatrixAccumulator Member List . This is the complete list of members for sofa::core::behavior::MassMatrixAccumulator, including all inherited members. add(sofa::SignedIndex, sofa::SignedIndex, float)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex, sofa::SignedIndex, double)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear()sofa::core::MatrixAccumulatorInterfaceinlinevirtual; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix_accumulator-members.html:1612,clear,clear,1612,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,"ion::DetectionOutputVector:. [legend]; Detailed Description; Abstract description of a set of contact point. . Public Member Functions; virtual void clear ()=0;  Clear the content of this vector. More...;  ; virtual unsigned int size () const =0;  Current size (number of detected contacts. More...;  ; bool empty () const;  Test if the vector is empty. More...;  ; virtual void release ();  Delete this vector from memory once the contact pair is no longer active. More...;  ; virtual type::Vec3 getFirstPosition (unsigned idx)=0;  Const iterator to iterate the detection pairs. More...;  ; virtual type::Vec3 getSecondPosition (unsigned idx)=0;  Const iterator end to iterate the detection pairs. More...;  . Protected Member Functions; virtual ~DetectionOutputVector ();  . Constructor details. ◆ ~DetectionOutputVector(). virtual sofa::core::collision::DetectionOutputVector::~DetectionOutputVector ; (; ). inlineprotectedvirtual . Function details. ◆ clear(). virtual void sofa::core::collision::DetectionOutputVector::clear ; (; ). pure virtual . Clear the content of this vector. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ empty(). bool sofa::core::collision::DetectionOutputVector::empty ; (; ); const. inline . Test if the vector is empty. . ◆ getFirstPosition(). virtual type::Vec3 sofa::core::collision::DetectionOutputVector::getFirstPosition ; (; unsigned ; idx). pure virtual . Const iterator to iterate the detection pairs. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ getSecondPosition(). virtual type::Vec3 sofa::core::collision::DetectionOutputVector::getSecondPosition ; (; unsigned ; idx). pure virtual . Const iterator end to iterate the detection pairs. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ release(). virtual void sofa::core::collision::DetectionOutputVector::release ; (; ). inlinevirtual . Delete this vector from memory once the contact pair is no longer active. . ◆",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html:1453,clear,clear,1453,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html,1,['clear'],['clear']
Usability,"ions ; (; const core::ExecParams * ; params, . core::objectmodel::BaseContext * ; ctx, . bool ; precomputedTraversalOrder = false . ). Function details. ◆ accFromF(). void sofa::simulation::common::MechanicalOperations::accFromF ; (; core::MultiVecDerivId ; a, . core::ConstMultiVecDerivId ; f . ). a = M^-1 . f ; Parameters. fa = M^-1 . f . ◆ addMBK_ToMatrix(). void sofa::simulation::common::MechanicalOperations::addMBK_ToMatrix ; (; const sofa::core::behavior::MultiMatrixAccessor * ; matrix, . SReal ; mFact, . SReal ; bFact, . SReal ; kFact . ). ◆ addMBKdx(). void sofa::simulation::common::MechanicalOperations::addMBKdx ; (; core::MultiVecDerivId ; df, . SReal ; m, . SReal ; b, . SReal ; k, . bool ; clear = true, . bool ; accumulate = true . ). accumulate $ df += (m M + b B + k K) dx $ (given the latest propagated displacement) . ◆ addMBKv(). void sofa::simulation::common::MechanicalOperations::addMBKv ; (; core::MultiVecDerivId ; df, . SReal ; m, . SReal ; b, . SReal ; k, . bool ; clear = true, . bool ; accumulate = true . ). accumulate $ df += (m M + b B + k K) velocity $ . ◆ addMdx(). void sofa::simulation::common::MechanicalOperations::addMdx ; (; core::MultiVecDerivId ; res, . core::MultiVecDerivId ; dx, . SReal ; factor = 1.0 . ). res += factor M.dx . ◆ addSeparateGravity(). void sofa::simulation::common::MechanicalOperations::addSeparateGravity ; (; SReal ; dt, . core::MultiVecDerivId ; result = core::VecDerivId::velocity() . ). Add dt*Gravity to the velocity. . ◆ baseVector2MultiVector(). void sofa::simulation::common::MechanicalOperations::baseVector2MultiVector ; (; const linearalgebra::BaseVector * ; src, . core::MultiVecId ; dest, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). ◆ computeAcc(). void sofa::simulation::common::MechanicalOperations::computeAcc ; (; SReal ; t, . core::MultiVecDerivId ; a, . core::MultiVecCoordId ; x, . core::MultiVecDerivId ; v . ). Compute a(x,v) at time t. Parameters x and v not const due to propagation thr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:9417,clear,clear,9417,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['clear'],['clear']
Usability,"iption & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi l",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:5582,simpl,simpleapi,5582,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,1,['simpl'],['simpleapi']
Usability,"irtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseNode classsofa::core::objectmodel::BaseObjectfriend; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html:1942,clear,clearLoggedMessages,1942,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object-members.html,1,['clear'],['clearLoggedMessages']
Usability,"irtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BehaviorModel()sofa::core::BehaviorModelinlineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html:1987,clear,clearLoggedMessages,1987,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"irtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglRenderingSRGBvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawScene(VisualParams *)sofa::core::visual::VisualManagerinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::vis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html:2514,clear,clearVisual,2514,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b-members.html,1,['clear'],['clearVisual']
Usability,"is function may be overload to obtain better performances. ; Adding values from a 3x3d matrix this function may be overload to obtain better performances. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ add() [2/3]. template<matrixaccumulator::Contribution c> . void sofa::core::behavior::AddToMatrixCompatMatrix< c >::add ; (; Index ; row, . Index ; col, . const type::Mat3x3f & ; _M . ). inlineoverridevirtual . Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ add() [3/3]. template<matrixaccumulator::Contribution c> . void sofa::core::behavior::AddToMatrixCompatMatrix< c >::add ; (; Index ; row, . Index ; col, . double ; v . ). inlineoverridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear(). template<matrixaccumulator::Contribution c> . void sofa::core::behavior::AddToMatrixCompatMatrix< c >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<matrixaccumulator::Contribution c> . Index sofa::core::behavior::AddToMatrixCompatMatrix< c >::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<matrixaccumulator::Contribution c> . SReal sofa::core::behavior::AddToMatrixCompatMatrix< c >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ resize(). template<matrixaccumulator::Contribution c> . void sofa::core::behavior::AddToMatrixCompatMatrix< c >::resize ; (; Index ; nbRow, . Index ; nbCol . ). inlineoverridevirtual . Resize the matrix and reset all values to 0. ; Implements so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:16505,clear,clear,16505,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,1,['clear'],['clear']
Usability,"ist< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const =0sofa::core::BaseStatepure virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v)=0sofa::core::BaseStatepure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html:2104,clear,clearLoggedMessages,2104,api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state-members.html,1,['clear'],['clearLoggedMessages']
Usability,"isting value of the element at row i, column j (using 0-based indices) . ◆ begin() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::FullMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<class Real > . SReal sofa::linearalgebra::FullMatrix< Real >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ end() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::end. ◆ end() [2/2]. template<class Rea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:19673,clear,clearRow,19673,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,1,['clear'],['clearRow']
Usability,"isual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::str",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html:3005,clear,clearVisual,3005,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"isualGrid () override=default;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *) override;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; void updateGrid ();  ; void buildGrid ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html:3995,clear,clearVisual,3995,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"itance diagram for sofa::core::behavior::ListDampingMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::ListMatrixAccumulator< DampingMatrixAccumulator >; void push_back (DampingMatrixAccumulator *m);  ; void remove (DampingMatrixAccumulator *m);  ; bool empty () const;  ; void clear () override;  ; InternalListMatrixAccumulator::size_type size () const;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, float value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacorebehaviorListDampingMatrixAccumulator; Generated on Mon Nov 11 2024 03:15",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator.html:630,clear,clear,630,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_list_damping_matrix_accumulator.html,1,['clear'],['clear']
Usability,"itialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; unsigned int getNbColors ();  ; Color getColor (unsigned int i);  ; template<class Real > ; helper::ColorMap::evaluator< Real > getEvaluator (Real vmin, Real vmax);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html:3666,clear,clearVisual,3666,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"ition).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectPosition() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectResponse(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::projectResponse ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; dx . ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectResponseT(). template<class DataTypes > . template<class DataDeriv > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::projectResponseT ; (; DataDeriv & ; dx, . const std::function< void(DataDeriv &, const unsigned int)> & ; clear . ). protected . ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ removeIndex(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::removeIndex ; (; Index ; index). ◆ reset(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::reset. overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:32068,clear,clear,32068,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['clear'],['clear']
Usability,ity() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerp,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:4880,clear,clearEdgesAroundVertex,4880,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['clear'],['clearEdgesAroundVertex']
Usability,"iv > & ; in . ). override . ◆ buildGeometricStiffnessMatrix(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::buildGeometricStiffnessMatrix ; (; sofa::core::GeometricStiffnessMatrix * ; matrices). overridevirtual . Assembles the geometric stiffness matrix of the mapping in the provided matrix object. ; The geometric stiffness is defined as dJ^T/dx * outForce, where outForce is the forces applying on the output of the mapping, J is the jacobian matrix of the mapping and x is the position of the input of the mapping.; Inside the method, outForce is retrieved, while dJ^T/dx and its product with outForce must be computed.; Note that dJ^T/dx is null for linear mappings, meaning that the method can remain empty.; The geometric stiffness is a term that must be added into the global mechanical matrix.; Parameters. matricesThe matrix to fill in with the geometric stiffness of the mapping . Reimplemented from sofa::core::BaseMapping. ◆ clear(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::clear ; (; sofa::Size ; reserve = 0). ◆ draw(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getGlobalToLocalCoords() [1/2]. void sofa::component::mapping::nonlinear::RigidMapping< Rigid3Types, Rigid3Types >::getGlobalToLocalCoords ; (; OutCoord & ; result, . const InCoord & ; xFrom, . const OutCoord & ; xTo . ). ◆ getGlobalToLocalCoords() [2/2]. template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::getGlobalToLocalCoords ; (; OutCoord & ; result, . const InCoord & ; xfrom, . const OutCoord & ; xto . ). ◆ getJ(). template<class TIn , class TOut > . const sofa::linearalgebra::BaseMat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:30612,clear,clear,30612,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,1,['clear'],['clear']
Usability,"iv > * read (core::ConstVecDerivId v) const override;  ; virtual Data< MatrixDeriv > * write (core::MatrixDerivId) override;  ; virtual const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, DataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< DataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html:3971,simpl,simplified,3971,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,1,['simpl'],['simplified']
Usability,"ix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_poissonRatiosofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; d_youngModulussofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::core::behavior::ForceField< DataTypes >; DataVecDeriv type",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html:4869,clear,clearLoggedMessages,4869,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; basic linear operations; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:3028,clear,clear,3028,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,2,['clear'],"['clear', 'clearRow']"
Usability,"ix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linear",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:5379,clear,clear,5379,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,2,['clear'],"['clear', 'clearRow']"
Usability,"ix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:15535,clear,clear,15535,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['clear'],"['clear', 'clearRow']"
Usability,"ix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector resu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:3104,clear,clear,3104,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,2,['clear'],"['clear', 'clearRow']"
Usability,"ix;  . Public Member Functions;  SOFA_CLASS (AssemblingMappedMatrixAccumulator, AssemblingMatrixAccumulator< c >);  ; void clear () override;  ; void shareMatrix (const std::shared_ptr< LocalMappedMatrixType< TBlockType > > &m);  ; const std::shared_ptr< LocalMappedMatrixType< TBlockType > > & getMatrix () const;  ;  Public Member Functions inherited from sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >;  SOFA_CLASS (AssemblingMatrixAccumulator, SOFA_TEMPLATE2(sofa::core::MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >, TStrategy));  ; void clear () override;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >);  ; void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy > strategy) override;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const float value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, double value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) override final;  . Prote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html:1299,clear,clear,1299,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator.html,2,['clear'],['clear']
Usability,"ixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::SparseMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html:6621,clear,clearCols,6621,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,1,['clear'],['clearCols']
Usability,"ixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::DiagonalMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear(Index i)sofa::linearalgebra::DiagonalMatrix< T >inline; clearCol(Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index intern",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html:6157,clear,clearCols,6157,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,1,['clear'],['clearCols']
Usability,"izer_list< BaseData * > outputs)sofa::core::objectmodel::Base; backgroundValuesofa::component::io::mesh::VoxelGridLoader; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bppsofa::component::io::mesh::VoxelGridLoaderprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::component::io::mesh::VoxelGridLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::io::mesh::VoxelGridLoadervirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createSegmentation3DTexture(unsigned char **textureData, int &width, int &height, int &depth) overridesofa::component::io::mesh::VoxelGridLoadervirtual; d_activeValuesofa::component::io::mesh::VoxelGridLoader; d_backgroundValuesofa::component::io::mesh::VoxelGridLoader; d_componentStatesofa::core::objectmodel::Base; d_dataResolutionsofa::component::io::mesh::VoxelGridLoader; d_filenamesofa::core::loader::BaseLoader; d_generateHexasofa::component::io::mesh::VoxelGridLoader; d_headerSizesofa::component::io::mesh::VoxelGridLoader; d_idxInRegularGridsofa::component::io::mesh::VoxelGridLoader; d_messa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html:2762,clear,clearLoggedMessages,2762,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,1,['clear'],['clearLoggedMessages']
Usability,"jective::DirectionProjectiveConstraint< DataTypes >::addConstraint ; (; Index ; index). ◆ applyConstraint() [1/2]. template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Matrix to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [2/2]. template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html:24136,clear,clearConstraints,24136,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"jective::PartialLinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ interpolatePosition() [1/4]. template<class TDataTypes > . template<class MyCoord > . void sofa::component::constraint",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:33901,clear,clearIndices,33901,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"jectiveConstraintSet::projectPosition(const MechanicalParams *mparams, MultiVecCoordId xId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; projectResponse(const core::MechanicalParams *mparams, DataVecDeriv &resData) overridesofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId)=0sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; sofa::core::behavior::BaseProjectiveConstraintSet::projectResponse(const MechanicalParams *, double **)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; projectResponseT(DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int, const VecBool &)> &clear)sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >protected; projectVelocity(const core::MechanicalParams *mparams, DataVecDeriv &vData) overridesofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >virtual; sofa::core::behavior::ProjectiveConstraintSet::projectVelocity(const MechanicalParams *mparams, MultiVecDerivId vId) overridesofa::core::behavior::ProjectiveConstraintSet< DataTypes >virtual; Ptr typedefsofa::core::objectmodel::Base; Real typedefsofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; reinit() overridesofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >virtual; removeConstraint(Index index)sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; rem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html:14774,clear,clear,14774,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,1,['clear'],['clear']
Usability,"jectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >virtual; buildStiffnessMatrix(sofa::core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeMeshVolumeAndArea(Real &volume, Real &area, const helper::ReadAccessor< DataVecCoord > &x)sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >protectedvirtual; computePressureAndStiffness(Real &pressure, Real &stiffness, Real currentVolume, Real v0)sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >protected; computePressureTriangles()sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >protectedvirtual; computeStatistics(const helper::ReadAccessor< DataVecCoord > &x)sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >protectedvirtual; Coord typedefsofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::A",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html:4937,clear,clearLoggedMessages,4937,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"jectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgeInfosofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_kdsofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_kssofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showSpringssofa::component::solidmechanics::spring::TriangularBendingSprings< DataTypes >; DataTypes typedefsofa::core::b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html:5787,clear,clearLoggedMessages,5787,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs-members.html,1,['clear'],['clearLoggedMessages']
Usability,"jectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyCon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4267,clear,clearEdgesAroundVertex,4267,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clearEdgesAroundVertex']
Usability,"jectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionPipeline()sofa::component::collision::detection::algorithm::CollisionPipelineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:2174,clear,clearLoggedMessages,2174,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,1,['clear'],['clearLoggedMessages']
Usability,"jectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_buttonsofa::component::setting::MouseButtonSetting; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html:1955,clear,clearLoggedMessages,1955,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting-members.html,6,['clear'],['clearLoggedMessages']
Usability,"k & ; blockB . ). inlinestatic . ◆ check_matrix() [1/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; ). inline . ◆ check_matrix() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; Index ; nzmax, . Index ; m, . Index ; n, . Index * ; a_p, . Index * ; a_i, . Block * ; a_x . ). inlinestatic . ◆ clear(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clear ; (; ). inline . Completely clear the matrix. ; Warningif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col value of line will be set to zero using default constructor . ◆ clearRowColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowColBlock ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:21645,clear,clearColBlock,21645,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['clear'],['clearColBlock']
Usability,"k (Index i, Index j) const;  Get block method. More...;  ; const Block & bloc (Index i, Index j) const;  ; Block * wblock (Index i, Index j, bool create=false);  Write block method. More...;  ; Block * wbloc (Index i, Index j, bool create=false);  ; Block * wblock (Index i, Index j, Index &rowId, Index &colId, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; BlockMatrixWriter operators; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsigned int bj, const DBlock &b);  ; void addDValue (unsigned int bi, unsigned int bj, const Real b);  ; void addDValue (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Real b);  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void addDiag (unsigned int bi, const Block &b);  ; t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:5341,clear,clearColBlock,5341,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['clear'],['clearColBlock']
Usability,"k (Index i, Index j) const;  Get block method. More...;  ; const Block & bloc (Index i, Index j) const;  ; Block * wblock (Index i, Index j, bool create=false);  Write block method. More...;  ; Block * wblock (Index i, Index j, Index &rowId, Index &colId, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; Block * wbloc (Index i, Index j, bool create=false);  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsigned int bj, const DBlock &b);  ; void addDValue (unsigned int bi, unsigned int bj, const Real b);  ; void addDValue (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Real b);  ; void addDiag (unsigned int bi, const Block &b);  ; void addDiag (unsigned int bi, int &rowId, int &colId, const Block &b);  ; void addDiagDBlock (unsigned int bi, const DBlock &b);  ; void addDiagDValue (unsigned int bi, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html:6227,clear,clearColBlock,6227,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,2,['clear'],['clearColBlock']
Usability,"k::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FixedProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3, sofa::type::Vec3);  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html:4549,clear,clearConstraints,4549,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"k< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FixedTranslationProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ; void clearIndices ();  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; virtual bool isActiv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html:4600,clear,clearIndices,4600,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"k< Multi2Mapping< In1, In2, Out >, State< In2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK >, sofa::core::objectmodel::MultiLink< DAGNode, DAGNode, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_DOUBLELINK >, sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>, and sofa::core::objectmodel::MultiLink< MyType, sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >, BaseLink::FLAG_DUPLICATE >. ◆ addPath(). template<class TOwnerType , class TDestType , unsigned TFlags> . bool sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::addPath ; (; const std::string & ; path). inline . ◆ begin(). template<class TOwnerType , class TDestType , unsigned TFlags> . const_iterator sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::begin ; (; ); const. inline . ◆ clear(). template<class TOwnerType , class TDestType , unsigned TFlags> . void sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::clear ; (; ). inline . ◆ empty(). template<class TOwnerType , class TDestType , unsigned TFlags> . bool sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::empty ; (; ); const. inline . ◆ end(). template<class TOwnerType , class TDestType , unsigned TFlags> . const_iterator sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::end ; (; ); const. inline . ◆ getDestClass(). template<class TOwnerType , class TDestType , unsigned TFlags> . const BaseClass* sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::getDestClass ; (; ); const. inlineoverridevirtual . Implements sofa::core::objectmodel::BaseLink. ◆ getIndex(). template<class TOwnerType , class TDestType , unsigned TFlags> . DestType* sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >::getIndex ; (; std::size_t ; index); const. inlineprotected . ◆ getOwnerBase(). template<class TOwnerType , class TDestType , unsigned TFlags> . sofa::core::objectmodel::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html:31490,clear,clear,31490,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,1,['clear'],['clear']
Usability,"l >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >; CompressedMatrix typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >; copy(const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift)sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; copyFrom(const CompressedRowSparseMatrix< type::Mat< Nout, Nin, AnyReal > > &crs)sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >inline; createBlock(unsigned column, const Block &b)sofa::lin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html:7859,clear,clearRowsCols,7859,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,1,['clear'],['clearRowsCols']
Usability,"l)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexturePointer; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturePointervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; enabledsofa::gl::component::shader::OglTexturePo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html:2571,clear,clearVisual,2571,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,1,['clear'],['clearVisual']
Usability,"l, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::Visu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html:3354,clear,clearVisual,3354,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute-members.html,1,['clear'],['clearVisual']
Usability,"l, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::Visu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html:3354,clear,clearVisual,3354,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute-members.html,1,['clear'],['clearVisual']
Usability,"l, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::Visu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html:3354,clear,clearVisual,3354,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute-members.html,1,['clear'],['clearVisual']
Usability,"l::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinesta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4173,clear,clearEdges,4173,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clearEdges']
Usability,"l::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; BVHNarrowPhase()sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::core::collision::NarrowPhaseDetectionvirtual; endNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; f_bboxsofa::core::objectmodel::Base; f_listen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:2783,clear,clearLoggedMessages,2783,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,1,['clear'],['clearLoggedMessages']
Usability,"l::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildFileName()sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >protected; bwdInit() overridesofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >virtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ConstraintCorrection< TDataTypes >inlinestatic; sofa::core::behavior::BaseConstraintCorrection::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDx(Data< VecDeriv > &dx, const Data< VecDeriv > &f, const std::list< int > &activeDofs)sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >protected; computeMotionCorrection(const core::ConstraintParams *, core::MultiVecDerivId dx, core::MultiVecDerivId f) overridesofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >virtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) overridesofa::core::behavior::ConstraintCorrection< TDataTypes >virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; constraint_Dsofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html:5613,clear,clearLoggedMessages,5613,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction-members.html,1,['clear'],['clearLoggedMessages']
Usability,"l::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::QuadSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html:4077,clear,clear,4077,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container-members.html,1,['clear'],['clear']
Usability,"l; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::playback::ReadStatevirtual; canCreate(T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::ReadStateinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::playback::ReadState; d_intervalsofa::component::playback::ReadState; d_loopsofa::component::playback::ReadState; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rotationsofa::component::playback::ReadState; d_scalePossofa::component::playback::ReadState; d_shiftsofa::component::playback::ReadState; d_translationsofa::component::playback::ReadState; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html:1949,clear,clearLoggedMessages,1949,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state-members.html,1,['clear'],['clearLoggedMessages']
Usability,"lModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexture; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; cubemapFilenameNegXsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegYsofa::gl::component::shader::OglTextureprotected; cubemapFilenameNegZsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosXsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosYsofa::gl::component::shader::OglTextureprotected; cubemapFilenamePosZsofa::gl::component::shader::OglTextureprotected; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html:2485,clear,clearLoggedMessages,2485,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture-members.html,2,['clear'],['clearLoggedMessages']
Usability,"lParams *, linearalgebra::BaseVector *, const behavior::MultiMatrixAccessor *)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; applyConstraint(sofa::core::behavior::ZeroDirichletCondition *)sofa::core::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set-members.html:2446,clear,clearLoggedMessages,2446,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set-members.html,1,['clear'],['clearLoggedMessages']
Usability,"lParams *, linearalgebra::BaseVector *, const behavior::MultiMatrixAccessor *)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; applyConstraint(sofa::core::behavior::ZeroDirichletCondition *)sofa::core::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html:2468,clear,clearLoggedMessages,2468,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set-members.html,1,['clear'],['clearLoggedMessages']
Usability,"lVector< T >::FullVector ; (; T * ; ptr, . Index ; n, . Index ; nmax . ). inline . ◆ ~FullVector(). template<typename T > . sofa::linearalgebra::FullVector< T >::~FullVector ; (; ). inlineoverride . Function details. ◆ add(). template<typename T > . void sofa::linearalgebra::FullVector< T >::add ; (; Index ; i, . SReal ; v . ). inlineoverridevirtual . Add v to the existing value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ begin() [1/2]. template<typename T > . Iterator sofa::linearalgebra::FullVector< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . ConstIterator sofa::linearalgebra::FullVector< T >::begin ; (; ); const. inline . ◆ capacity(). template<typename T > . Index sofa::linearalgebra::FullVector< T >::capacity ; (; ); const. inline . ◆ checkIndex(). template<typename Real > . void sofa::linearalgebra::FullVector< Real >::checkIndex ; (; Index ; n); const. protected . ◆ clear() [1/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [2/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Real >::clear ; (; Index ; i). overridevirtual . Reset the value of element i to 0. ; Reimplemented from sofa::linearalgebra::BaseVector. ◆ dot(). template<typename Real > . Real sofa::linearalgebra::FullVector< Real >::dot ; (; const FullVector< Real > & ; a); const. Returnsv.a . ◆ element(). template<typename T > . SReal sofa::linearalgebra::FullVector< T >::element ; (; Index ; i); const. inlineoverridevirtual . Read the value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ end() [1/2]. template<typename T > . Iterator sofa::linearalgebra::FullVector< T >::end ; (; ). inline . ◆ end() [2/2]. template<typename T > . ConstIterator sofa::linearalgebra::FullVector< T >::end ; (; ); const. inline . ◆ eq() [1/2]. template<typename Real > . void sofa::linearalgebra::FullVector< R",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html:6622,clear,clear,6622,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,1,['clear'],['clear']
Usability,"lace. Scheduled additions must be finalized using function compress(). More...;  ; void beginRow (Index index);  ; void insertBack (Index row, Index col, Real value);  ; Real & coeffRef (Index i, Index j);  Return a reference to the given entry in the compressed matrix.There can (must ?) be a value at this place already. Efficient only if the it is at the last place of the compressed matrix. More...;  ; void copy (const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift);  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix without preserving the data (the matrix is set to zero) More...;  ; Index rowSize (void) const override;  number of rows More...;  ; Index colSize (void) const override;  number of columns More...;  ; void reserve (typename CompressedMatrix::Index reserveSize);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:3417,clear,clears,3417,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clears']
Usability,"laneProjectiveConstraint< DataTypes >virtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; d_dmaxsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; d_dminsofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html:2966,clear,clearLoggedMessages,2966,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"lass B > ; void getSubMatrix (Index i, Index j, Index nrow, Index ncol, B &m);  ; template<class B > ; void getAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, B &m);  ; template<class B > ; void setSubMatrix (Index i, Index j, Index nrow, Index ncol, const B &m);  ; template<class B > ; void setAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, const B &m);  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:2744,clear,clear,2744,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,1,['clear'],['clear']
Usability,"lass Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::FullMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<class Real > . SReal sofa::linearalgebra::FullMatrix< Real >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ end() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::end. ◆ end() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::end. ◆ mul() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::mul ; (; FullMatrix< Real > & ; res, . const Ful",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:19894,clear,clearRowCol,19894,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,1,['clear'],['clearRowCol']
Usability,"lass TVector > . sofa::type::vector<sofa::core::behavior::BaseProjectiveConstraintSet*> sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::m_projectiveConstraints. protected . The list of projective constraints contributing to the matrix assembly. . Function details. ◆ allocateSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::allocateSystem. protectedvirtual . Reimplemented in sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >. ◆ associateLocalMatrixToComponents(). template<class TMatrix , class TVector > . virtual void sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::associateLocalMatrixToComponents ; (; const core::MechanicalParams * ; ). inlineprotectedvirtual . Reimplemented in sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >, and sofa::component::linearsystem::MatrixFreeSystem< TMatrix, TVector >. ◆ clearSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::clearSystem. virtual . Reimplemented in sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >, and sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >. ◆ copyLocalVectorToGlobalVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::TypedMatrixLinearSystem< GraphScatteredMatrix, GraphScatteredVector >::copyLocalVectorToGlobalVector ; (; core::MultiVecDerivId ; v, . GraphScatteredVector * ; globalVector . ). protected . ◆ copyLocalVectorToGlobalVector() [2/3]. void sofa::component::linearsystem::TypedMatrixLinearSystem< GraphScatteredMatrix, GraphScatteredVector >::copyLocalVectorToGlobalVector ; (; core::MultiVecDerivId ; v, . GraphScatteredVector * ; globalVector . ). protected . ◆ copyLocalVectorToGlobalVector() [3/3]. template<class TMatrix , class TVector > . void so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system.html:19622,clear,clearSystem,19622,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system.html,1,['clear'],['clearSystem']
Usability,"ldDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; calcF(const Coord1 &p1, const Deriv1 &v1, Deriv1 &f1, Mat &dfdx)sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >protected; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centersofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; colorsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; contactssofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >protected; Coord1 typedefsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; Coord2 typedefsofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; dampingsofa::component::mechanicalload::InteractionE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field-members.html:4578,clear,clearLoggedMessages,4578,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"le API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:3490,clear,clear,3490,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,2,['clear'],"['clear', 'clearRow']"
Usability,"leName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ root. sofa::core::objectmodel::BaseNode* sofa::component::sceneutility::PauseAnimation::root. protected . Constructor details. ◆ PauseAnimation(). sofa::component::sceneutility::PauseAnimation::PauseAnimation ; (; ). protected . ◆ ~PauseAnimation(). sofa::component::sceneutility::PauseAnimation::~PauseAnimation ; (; ). overrideprotected . Function details. ◆ init(). void sofa::component::sceneutility::PauseAnimation::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::sceneutility::PauseAnimationOnEvent. ◆ isPaused(). virtual bool sofa::component::sceneutility::PauseAnimation::isPaused ; (; ). pure virtual . Implemented in sofa::component::sceneutility::PauseAnimationOnEvent. ◆ pause(). void sofa::component::sceneutility::PauseAnimation::pause ; (; ). virtual . ◆ SOFA_ABSTRACT_CLASS(). sofa::component::sceneutility::PauseAnimation::SOFA_ABSTRACT_CLASS ; (; PauseAnimation ; , . core::objectmodel::BaseObject ;  . ). sofacomponentsceneutilityPauseAnimation; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html:13894,pause,pause,13894,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,2,['pause'],['pause']
Usability,"leRepository() [6/6]. sofa::helper::system::FileRepository::FileRepository ; (; const char * ; envVar, . const std::vector< std::string > & ; paths, . const fileKeysMap & ; iniFilesAndKeys . ). Initialize the set of paths using the environment variable specified by the parameter envVar, the relative paths specified by the parameter paths and the ini files and respective keys specified by the parameter iniFilesAndKeys. . ◆ ~FileRepository(). sofa::helper::system::FileRepository::~FileRepository ; (; ). Function details. ◆ addFirstPath(). void sofa::helper::system::FileRepository::addFirstPath ; (; const std::string & ; path). Adds a path to the front of the set of paths. . ◆ addLastPath(). void sofa::helper::system::FileRepository::addLastPath ; (; const std::string & ; path). Adds a path to the back of the set of paths. . ◆ cleanPath(). std::string sofa::helper::system::FileRepository::cleanPath ; (; const std::string & ; path). static . Replaces every occurrences of ""//"" by ""/"" . ◆ clear(). void sofa::helper::system::FileRepository::clear ; (; ). Remove all known paths. . ◆ displayPaths(). void sofa::helper::system::FileRepository::displayPaths ; (; ); const. inline . ◆ entrySeparator(). static char sofa::helper::system::FileRepository::entrySeparator ; (; ). inlinestatic . OS-dependant character separating entries in list of paths. . ◆ findFile(). bool sofa::helper::system::FileRepository::findFile ; (; std::string & ; filename, . const std::string & ; basedir = """", . std::ostream * ; errlog = &std::cerr . ). Find file using the stored set of paths. Parameters. basediroverride current directory (optional) ; filenamerequested file as input, resolved file path as output . Returnstrue if the file was found in one of the directories, false otherwise . ◆ findFileFromFile(). bool sofa::helper::system::FileRepository::findFileFromFile ; (; std::string & ; filename, . const std::string & ; basefile, . std::ostream * ; errlog = &std::cerr . ). Find file using the stored set",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html:6621,clear,clear,6621,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,1,['clear'],['clear']
Usability,"leSetTopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html:9596,clear,clearLoggedMessages,9596,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier-members.html,2,['clear'],['clearLoggedMessages']
Usability,"leanTetrahedronTopologyFromDirty()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=fal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:5084,clear,clearLoggedMessages,5084,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearLoggedMessages']
Usability,"lic Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::common::ArgumentParser Class Reference . #include <ArgumentParser.h>; Detailed Description; Command line parser; This object parses arguments from a command line or from an input stream. See alsoArgument . Static Public Attributes; static std::vector< std::string > extra = std::vector<std::string>();  . Public Member Functions;  ArgumentParser (int argc, char **argv);  constructor. More...;  ;  ~ArgumentParser ();  ; void addArgument (std::shared_ptr< cxxopts::Value > s, const std::string name, const std::string help);  addArgument More...;  ; void addArgument (std::shared_ptr< cxxopts::Value > s, const std::string name, const std::string help, std::function< void(const ArgumentParser *, const std::string &)> callback);  addArgument More...;  ; void addArgument (const std::string name, const std::string help);  addArgument More...;  ; void showHelp ();  simply display the help (You need to add -h –help options in your main and call this function by yourself More...;  ; void parse ();  this is the main function. You have to call this function if you want to parse the arguments given to the constructor More...;  ; void showArgs ();  display args with values More...;  ; template<typename T > ; bool getValueFromKey (const std::string &key, T &value) const;  get the value associated to the key (if this key exists or the type is correct) More...;  ; const std::unordered_map< std::string, std::string > & getMap () const;  ; std::vector< std::string > getInputFileList ();  . Static Public Member Functions; static const std::vector< std::string > extra_args ();  return extra_args needed for python (arguments) More...;  . Attribute details. ◆ extra. std::vector< std::string > sofa::gui::common::ArgumentParser::extra = std::vector<std::string>(). static . last parsed extra arguments extra parameter needed for python (arguments) . Constructor details. ◆ ArgumentParser(). sofa::gui::common:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_argument_parser.html:1126,simpl,simply,1126,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_argument_parser.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_argument_parser.html,1,['simpl'],['simply']
Usability,"licy, ThreadAccessPolicy > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy > Class Template Reference . #include <CircularQueue.h>. Inheritance diagram for sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >:. [legend]; Detailed Description; template<class T, template< class U > class StoragePolicy, class ThreadAccessPolicy>; class sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >; This class implements a policy-based circular queue. The template parameter ThreadAccessPolicy allows to customize access to the array according to thread-safety requirements. . Public Member Functions;  CircularQueue ();  ;  ~CircularQueue ();  ; bool push (const T &item);  ; bool pop (T &item, bool clear=true);  ; bool isEmpty () const;  ; unsigned size () const;  ; bool isFull () const;  ; unsigned skip (unsigned maxsize, bool clear=true);  ; template<class OutputIterator > ; unsigned pop (OutputIterator out, unsigned maxsize, bool clear=true);  . Constructor details. ◆ CircularQueue(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::CircularQueue. ◆ ~CircularQueue(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::~CircularQueue. Function details. ◆ isEmpty(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >::isEmpty. ◆ isFull(). template<class T , template< class U > class StoragePolicy, class ThreadAccessPolicy > . bool sofa::helper::system::thread::CircularQueue< T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html:1006,clear,clear,1006,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue.html,3,['clear'],['clear']
Usability,"licy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; Index ; nzmax, . Index ; m, . Index ; n, . Index * ; a_p, . Index * ; a_i, . Block * ; a_x . ). inlinestatic . ◆ clear(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clear ; (; ). inline . Completely clear the matrix. ; Warningif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col value of line will be set to zero using default constructor . ◆ clearRowColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowColBlock ; (; Index ; i). inline . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col i and line i values of will be set to zero using default constructor . ◆ colBSize(). template<typename TBlock , type",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:21928,clear,clearRowBlock,21928,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['clear'],['clearRowBlock']
Usability,"linder::Cylinder ; (; SReal ; len = 1.0_sreal). ◆ Cylinder() [2/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; len). ◆ Cylinder() [3/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const Quaternion & ; orient, . const Vec3 & ; length . ). ◆ Cylinder() [4/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const double ; orient[4][4], . const Vec3 & ; length . ). ◆ Cylinder() [5/8]. sofa::gl::Cylinder::Cylinder ; (; const double * ; mat, . const Vec3 & ; length . ). ◆ Cylinder() [6/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const Quaternion & ; orient, . SReal ; length = 1.0_sreal . ). ◆ Cylinder() [7/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const double ; orient[4][4], . SReal ; length = 1.0_sreal . ). ◆ Cylinder() [8/8]. sofa::gl::Cylinder::Cylinder ; (; const double * ; mat, . SReal ; length = 1.0_sreal . ). ◆ ~Cylinder(). sofa::gl::Cylinder::~Cylinder ; (; ). Function details. ◆ clear(). static void sofa::gl::Cylinder::clear ; (; ). inlinestatic . ◆ draw() [1/7]. void sofa::gl::Cylinder::draw ; (; ). ◆ draw() [2/7]. void sofa::gl::Cylinder::draw ; (; const double * ; mat, . const Vec3 & ; length . ). static . ◆ draw() [3/7]. void sofa::gl::Cylinder::draw ; (; const double * ; mat, . SReal ; length = 1.0_sreal . ). static . ◆ draw() [4/7]. void sofa::gl::Cylinder::draw ; (; const Vec3 & ; center, . const double ; orient[4][4], . const Vec3 & ; length . ). static . ◆ draw() [5/7]. void sofa::gl::Cylinder::draw ; (; const Vec3 & ; center, . const double ; orient[4][4], . SReal ; length = 1.0_sreal . ). static . ◆ draw() [6/7]. void sofa::gl::Cylinder::draw ; (; const Vec3 & ; center, . const Quaternion & ; orient, . const Vec3 & ; length . ). static . ◆ draw() [7/7]. void sofa::gl::Cylinder::draw ; (; const Vec3 & ; center, . const Quaternion & ; orient, . SReal ; length = 1.0_sreal . ). static . ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). sofa::gl::Cylinder::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_cylinder.html:2693,clear,clear,2693,api/master/sofa/html/classsofa_1_1gl_1_1_cylinder.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_cylinder.html,1,['clear'],['clear']
Usability,"linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html:7297,clear,clearCol,7297,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,1,['clear'],['clearCol']
Usability,"linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col value of line will be set to zero using default constructor . ◆ clearRowColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowColBlock ; (; Index ; i). inline . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col i and line i values of will be set to zero using default constructor . ◆ colBSize(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::colBSize ; (; ); const. inline . Returnsthe number of col blocks . ◆ compress(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::compress ; (; ). inline . ◆ compressBtemp(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::compressBtemp ; (; ). inlineprotected . Clear matrix and compute new triplet's arrays by combining old ones and ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:22601,clear,clearRowColBlock,22601,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['clear'],['clearRowColBlock']
Usability,"linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::m_isConstantSparsityPatternUsedYet { false }. protected . Constructor details. ◆ ConstantSparsityPatternSystem(). template<class TMatrix , class TVector > . sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::ConstantSparsityPatternSystem. protected . Function details. ◆ applyProjectiveConstraints(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::applyProjectiveConstraints ; (; const core::MechanicalParams * ; mparams). overridevirtual . Reimplemented from sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >. ◆ buildHashTable(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::buildHashTable ; (; linearalgebra::CompressedRowSparseMatrix< SReal > & ; M, . ConstantCRSMapping & ; mapping . ). staticprotected . ◆ clearSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::clearSystem. overridevirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ isConstantSparsityPatternUsedYet(). template<class TMatrix , class TVector > . bool sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::isConstantSparsityPatternUsedYet. ◆ makeCreateDispatcher(). template<class TMatrix , class TVector > . std::unique_ptr< CreateMatrixDispatcher< c > > sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >::makeCreateDispatcher. overrideprotectedvirtual . Define the type of dispatcher, itself defining the type of local matrices To override if matrix accumulation methods differs from this class. ; Reimplemented from sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >. ◆ makeIndexVerificationStrategy(). template<class TM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html:29125,clear,clearSystem,29125,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,1,['clear'],['clearSystem']
Usability,"lineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; clearKeyMovements()sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_imposedDisplacmentOnMacroNodessofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; d_indicessofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; d_keyMovementssofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; d_keyTimessofa::component::constraint::projective::PartialLinearMovem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html:3475,clear,clearLoggedMessages,3475,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"lizer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseRayContact(CollisionModel1 *model1, core::collision::Intersection *instersectionMethod)sofa::component::collision::response::contact::BaseRayContactprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel1 typedefsofa::component::collision::response::contact::BaseRayContact; collisionssofa::component::collision::response::contact::BaseRayContactprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg)sofa::core::collision::Contactinlinestatic; sofa::core::objectmodel::BaseObject::create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; Create(const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true)sofa::core::collision::Contactstatic; c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html:2100,clear,clearLoggedMessages,2100,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact-members.html,1,['clear'],['clearLoggedMessages']
Usability,"lizer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseRayContact(CollisionModel1 *model1, core::collision::Intersection *instersectionMethod)sofa::component::collision::response::contact::BaseRayContactprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel1 typedefsofa::component::collision::response::contact::RayContact< CM2 >; CollisionModel2 typedefsofa::component::collision::response::contact::RayContact< CM2 >; collisionssofa::component::collision::response::contact::BaseRayContactprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg)sofa::core::collision::Contactinlinestatic; sofa::core::objectmodel::BaseObject::create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; Create(const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html:2106,clear,clearLoggedMessages,2106,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ll inherited members. clear()sofa::type::SpatialVector< TReal >; cross(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; freeVecsofa::type::SpatialVector< TReal >; getAngularVelocity()sofa::type::SpatialVector< TReal >inline; getAngularVelocity() constsofa::type::SpatialVector< TReal >inline; getForce()sofa::type::SpatialVector< TReal >inline; getForce() constsofa::type::SpatialVector< TReal >inline; getLinearVelocity()sofa::type::SpatialVector< TReal >inline; getLinearVelocity() constsofa::type::SpatialVector< TReal >inline; getTorque()sofa::type::SpatialVector< TReal >inline; getTorque() constsofa::type::SpatialVector< TReal >inline; lineVecsofa::type::SpatialVector< TReal >; Mat66 typedefsofa::type::SpatialVector< TReal >; operator*(Real a) constsofa::type::SpatialVector< TReal >inline; operator*(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator*(const Mat66 &) constsofa::type::SpatialVector< TReal >; operator*=(Real a)sofa::type::SpatialVector< TReal >inline; operator+(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator+=(const SpatialVector &v)sofa::type::SpatialVector< TReal >; operator-(const SpatialVector &v) constsofa::type::SpatialVector< TReal >; operator-() constsofa::type::SpatialVector< TReal >; operator<<(std::ostream &out, const SpatialVector &t)sofa::type::SpatialVector< TReal >friend; operator>>(std::istream &in, SpatialVector &t)sofa::type::SpatialVector< TReal >friend; Real typedefsofa::type::SpatialVector< TReal >; setAngularVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setForce(const Vec &v)sofa::type::SpatialVector< TReal >inline; setLinearVelocity(const Vec &v)sofa::type::SpatialVector< TReal >inline; setTorque(const Vec &v)sofa::type::SpatialVector< TReal >inline; SpatialVector()=defaultsofa::type::SpatialVector< TReal >; SpatialVector(const Vec &l, const Vec &f)sofa::type::SpatialVector< TReal >; Vec typedefsofa::type::SpatialVector< TReal >. Generated on Mon Nov",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector-members.html:259,clear,clear,259,api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector-members.html,1,['clear'],['clear']
Usability,"llMatrix< N, T >::add ; (; Index ; row, . Index ; col, . double ; v . ). overridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ asub() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:16888,clear,clear,16888,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,1,['clear'],['clear']
Usability,"llMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Index sofa::linearalgebra::BlockFullMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BlockFullMatrix< N, T >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getAlignedSubMatrix(). template<std::size_t N, typename T > . tem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:17655,clear,clearRow,17655,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,1,['clear'],['clearRow']
Usability,"llVector() [5/5]. template<typename T > . sofa::linearalgebra::FullVector< T >::FullVector ; (; T * ; ptr, . Index ; n, . Index ; nmax . ). inline . ◆ ~FullVector(). template<typename T > . sofa::linearalgebra::FullVector< T >::~FullVector ; (; ). inlineoverride . Function details. ◆ add(). template<typename T > . void sofa::linearalgebra::FullVector< T >::add ; (; Index ; i, . SReal ; v . ). inlineoverridevirtual . Add v to the existing value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ begin() [1/2]. template<typename T > . Iterator sofa::linearalgebra::FullVector< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . ConstIterator sofa::linearalgebra::FullVector< T >::begin ; (; ); const. inline . ◆ capacity(). template<typename T > . Index sofa::linearalgebra::FullVector< T >::capacity ; (; ); const. inline . ◆ checkIndex(). template<typename Real > . void sofa::linearalgebra::FullVector< Real >::checkIndex ; (; Index ; n); const. protected . ◆ clear() [1/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [2/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Real >::clear ; (; Index ; i). overridevirtual . Reset the value of element i to 0. ; Reimplemented from sofa::linearalgebra::BaseVector. ◆ dot(). template<typename Real > . Real sofa::linearalgebra::FullVector< Real >::dot ; (; const FullVector< Real > & ; a); const. Returnsv.a . ◆ element(). template<typename T > . SReal sofa::linearalgebra::FullVector< T >::element ; (; Index ; i); const. inlineoverridevirtual . Read the value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ end() [1/2]. template<typename T > . Iterator sofa::linearalgebra::FullVector< T >::end ; (; ). inline . ◆ end() [2/2]. template<typename T > . ConstIterator sofa::linearalgebra::FullVector< T >::end ; (; ); const. inline . ◆ eq() [1/2]. t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html:6534,clear,clear,6534,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,1,['clear'],['clear']
Usability,"llVector<SReal> sofa::component::animationloop::ConstraintProblem::_df. protected . ◆ _dFree. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_dFree. protected . ◆ _dim. int sofa::component::animationloop::ConstraintProblem::_dim. protected . ◆ _force. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_force. protected . ◆ _timer. sofa::helper::system::thread::CTime* sofa::component::animationloop::ConstraintProblem::_timer. protected . ◆ _tol. SReal sofa::component::animationloop::ConstraintProblem::_tol. protected . ◆ _W. sofa::linearalgebra::LPtrFullMatrix<SReal> sofa::component::animationloop::ConstraintProblem::_W. protected . Constructor details. ◆ ConstraintProblem(). sofa::component::animationloop::ConstraintProblem::ConstraintProblem ; (; bool ; printLog = false). ◆ ~ConstraintProblem(). sofa::component::animationloop::ConstraintProblem::~ConstraintProblem ; (; ). virtual . Function details. ◆ clear(). void sofa::component::animationloop::ConstraintProblem::clear ; (; int ; dim, . const SReal & ; tol . ). virtual . ◆ gaussSeidelConstraintTimed(). void sofa::component::animationloop::ConstraintProblem::gaussSeidelConstraintTimed ; (; SReal & ; timeout, . int ; numItMax . ). ◆ getConstraintResolutions(). std::vector<core::behavior::ConstraintResolution*>& sofa::component::animationloop::ConstraintProblem::getConstraintResolutions ; (; void ; ). inline . ◆ getD(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getD ; (; void ; ). inline . ◆ getdF(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getdF ; (; void ; ). inline . ◆ getDfree(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getDfree ; (; void ; ). inline . ◆ getF(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getF ; (; void ; ). inline . ◆ getS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html:2765,clear,clear,2765,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html,1,['clear'],['clear']
Usability,"llisions;  ; type::fixed_array< Operation *, NONE > operations;  ; type::vector< CallBackPicker * > callbacks;  ; CallBackRender * renderCallback;  ; PickingMethod pickingMethod;  ; double m_defaultLength;  Default length of the ray. Set by constructor. More...;  . Public Member Functions;  GLPickHandler (double defaultLength=1000000);  ; virtual ~GLPickHandler () override;  ; void allocateSelectionBuffer (int width, int height) override;  ; void destroySelectionBuffer () override;  ; common::BodyPicked findCollisionUsingColourCoding (const type::Vec3 &origin, const type::Vec3 &direction) override;  ;  Public Member Functions inherited from sofa::gui::common::PickHandler;  PickHandler (double defaultLength=1000000);  ; virtual ~PickHandler ();  ; void activateRay (int width, int height, core::objectmodel::BaseNode *root);  ; void deactivateRay ();  ; void setPickingMethod (PickingMethod method);  ; bool useSelectionBufferMethod () const;  ; void updateRay (const sofa::type::Vec3 &position, const sofa::type::Vec3 &orientation);  ; void handleMouseEvent (MOUSE_STATUS status, MOUSE_BUTTON button);  ; void init (core::objectmodel::BaseNode *root);  ; void reset ();  ; void unload ();  ; void setColourRenderCallback (CallBackRender *colourRender);  ; void updateMouse2D (MousePosition mouse);  ; Operation * getOperation (MOUSE_BUTTON button);  ; Operation * changeOperation (sofa::component::setting::MouseButtonSetting *setting);  ; Operation * changeOperation (MOUSE_BUTTON button, const std::string &op);  ; void addCallBack (CallBackPicker *c);  ; type::vector< CallBackPicker * > getCallBackPicker ();  ; void clearCallBacks ();  ; ComponentMouseInteraction * getInteraction ();  ; BodyPicked * getLastPicked ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::common::PickHandler; static BodyPicked findCollisionUsingBruteForce (const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler.html:2556,clear,clearCallBacks,2556,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_g_l_pick_handler.html,1,['clear'],['clearCallBacks']
Usability,"llptr };  Solver who is using this matrix. More...;  . Public Member Functions;  MultiMatrix (const MultiMatrix< Parent > &)=delete;  Copy-constructor is forbidden. More...;  ;  MultiMatrix (Parent *parent);  ;  ~MultiMatrix ()=default;  ; void clear ();  m = 0 More...;  ; void reset ();  m = 0 More...;  ; void setSystemMBKMatrix (const MechanicalMatrix &m);  ; void solve (MultiVecDerivId solution, MultiVecDerivId rh);  . Friends; std::ostream & operator<< (std::ostream &out, const MultiMatrix< Parent > &m);  . Attribute details. ◆ parent. template<class Parent > . Parent* sofa::core::behavior::MultiMatrix< Parent >::parent { nullptr }. protected . Solver who is using this matrix. . Constructor details. ◆ MultiMatrix() [1/2]. template<class Parent > . sofa::core::behavior::MultiMatrix< Parent >::MultiMatrix ; (; const MultiMatrix< Parent > & ; ). delete . Copy-constructor is forbidden. . ◆ MultiMatrix() [2/2]. template<class Parent > . sofa::core::behavior::MultiMatrix< Parent >::MultiMatrix ; (; Parent * ; parent). inlineexplicit . ◆ ~MultiMatrix(). template<class Parent > . sofa::core::behavior::MultiMatrix< Parent >::~MultiMatrix ; (; ). default . Function details. ◆ clear(). template<class Parent > . void sofa::core::behavior::MultiMatrix< Parent >::clear ; (; ). inline . m = 0 . ◆ reset(). template<class Parent > . void sofa::core::behavior::MultiMatrix< Parent >::reset ; (; ). inline . m = 0 . ◆ setSystemMBKMatrix(). template<class Parent > . void sofa::core::behavior::MultiMatrix< Parent >::setSystemMBKMatrix ; (; const MechanicalMatrix & ; m). inline . ◆ solve(). template<class Parent > . void sofa::core::behavior::MultiMatrix< Parent >::solve ; (; MultiVecDerivId ; solution, . MultiVecDerivId ; rh . ). inline . Related details. ◆ operator<<. template<class Parent > . std::ostream& operator<< ; (; std::ostream & ; out, . const MultiMatrix< Parent > & ; m . ). friend . sofacorebehaviorMultiMatrix; Generated on Mon Nov 11 2024 03:15:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_multi_matrix.html:1823,clear,clear,1823,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_multi_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_multi_matrix.html,2,['clear'],['clear']
Usability,"locElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::DiagonalMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear(Index i)sofa::linearalgebra::DiagonalMatrix< T >inline; clearCol(Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html:6014,clear,clear,6014,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,1,['clear'],['clear']
Usability,"locGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; BlockType typedefsofa::linearalgebra::BTDMatrix< N, T >; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix()sofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BTDMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BTDMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBloc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html:5776,clear,clearCol,5776,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,1,['clear'],['clearCol']
Usability,"lock, CRSMechanicalPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlinestatic; clear(Index i, Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:14573,clear,clearColBlock,14573,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clearColBlock']
Usability,"lockAccessor * getInternal (const BlockAccessor *b);  ; static InternalColBlockIterator * getInternal (ColBlockConstIterator *b);  ; static const InternalColBlockIterator * getInternal (const ColBlockConstIterator *b);  ; static InternalRowBlockIterator * getInternal (RowBlockConstIterator *b);  ; static const InternalRowBlockIterator * getInternal (const RowBlockConstIterator *b);  . Attribute details. ◆ component. BaseProjectiveConstraintSet* sofa::core::behavior::ApplyConstraintCompat::component { nullptr }. ◆ zeroDirichletCondition. sofa::core::behavior::ZeroDirichletCondition* sofa::core::behavior::ApplyConstraintCompat::zeroDirichletCondition { nullptr }. Function details. ◆ add(). void sofa::core::behavior::ApplyConstraintCompat::add ; (; Index ; row, . Index ; col, . double ; v . ). inlineoverridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear(). void sofa::core::behavior::ApplyConstraintCompat::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). void sofa::core::behavior::ApplyConstraintCompat::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). Index sofa::core::behavior::ApplyConstraintCompat::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). SReal sofa::core::behavior::ApplyConstraintCompat::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ resize(). void sofa::core::behavior::ApplyConstraintCompat::resize ; (; Index ; nbRow, . Index ; nbCol . ). inlineoverridevirtual . Resize the matrix and reset all values to 0. ; Implements sofa::linearalgebra::BaseMatri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:14004,clear,clear,14004,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['clear'],['clear']
Usability,"logy. ◆ addTetra(). void sofa::component::topology::container::constant::MeshTopology::addTetra ; (; Index ; a, . Index ; b, . Index ; c, . Index ; d . ). overridevirtual . Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ addTriangle(). void sofa::component::topology::container::constant::MeshTopology::addTriangle ; (; Index ; a, . Index ; b, . Index ; c . ). overridevirtual . Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ addUV(). void sofa::component::topology::container::constant::MeshTopology::addUV ; (; SReal ; u, . SReal ; v . ). ◆ checkConnexity(). bool sofa::component::topology::container::constant::MeshTopology::checkConnexity ; (; ). overridevirtual . Checks if the topology has only one connected component. ; Get information about connexity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ clear(). void sofa::component::topology::container::constant::MeshTopology::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ computeRelativeOrientationInQuad(). int sofa::component::topology::container::constant::MeshTopology::computeRelativeOrientationInQuad ; (; const PointID ; ind_p0, . const PointID ; ind_p1, . const PointID ; ind_q . ). ◆ computeRelativeOrientationInTri(). int sofa::component::topology::container::constant::MeshTopology::computeRelativeOrientationInTri ; (; const PointID ; ind_p0, . const PointID ; ind_p1, . const PointID ; ind_t . ). ◆ createEdgesAroundVertexArray(). void sofa::component::topology::container::constant::MeshTopology::createEdgesAroundVertexArray ; (; ). protected . Creates the EdgeSetIndex. ; This function is only called if the EdgesAroundVertex member is required. m_edgesAroundVertex[i] contains the indices of all edges having the ith DOF as one of their ends. . ◆ createEdgesInHexahedronArray(). void sofa::component::topo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html:47466,clear,clear,47466,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,1,['clear'],['clear']
Usability,"logyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void clear () override;  ; void getHexaNeighbors (const Index hexaId, type::vector< Index > &neighbors);  ; void getHexaFaceNeighbors (const Index hexaId, const Index faceId, type::vector< Index > &neighbors);  ; void getHexaVertexNeighbors (const Index hexaId, const Index vertexId, type::vector< Index > &neighbors);  ; void addTopologyChangeFine (const core::topology::TopologyChange *topologyChange);  ; void resetTopologyChangeListFine ();  ; std::list< const core::topology::TopologyChange * >::const_iterator beginChangeFine () const;  ; std::list< const core::topology::TopologyChange * >::const_iterator endChangeFine () const;  ; const std::list< const core::topology::TopologyChange * > & getChangeListFine () const;  ; int getLevel () const;  ; const Vec3i & getCoarseResolution () const;  ; bool getHexaContainsPosition (const Index hexaId, const type::Vec3 &baryC) const;  ; const Vec3i & getHexaIdxInCoarseRegularGrid (const Index hexaId) const;  ; int getHexaIdInCoarseRegularGrid (const Index hexaId) const;  ; const Vec3i & getHexaIdxInFineRegularGrid (const Index hexaId) const;  ; Index getHexaIdInFineRegularGrid (const Index hexaId) const;  ; Index getHexaChildren (const Index hexaId, type::vector< Index > &children) const;  ; Index getHexaParent (const Index hexaId) const;  ; Index getHexaInFineRegularGrid (const Vec3i &id) const;  ; const std::set< Vec3i > & getHexaVoxels (const Index hexaId) const;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer;  SOFA_CLASS (HexahedronSetTopologyContainer, QuadSetTopologyContainer);  ; Size getNumberOfHexahedra () const;  Returns the number of hexahedra in this topology. The difference to getNbHexahedra() is that this method does not generate the hexa array if it does not exist. More...;  ; Size getNumberOfEle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html:3858,clear,clear,3858,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,1,['clear'],['clear']
Usability,"logyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the arrays are coherent. See alsom_edgesAroundVertex . m_edge ; Returnsbool true if topology is coherent. ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ cleanEdgeTopologyFromDirty(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::cleanEdgeTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ clearEdges(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdges ; (; ). protected . ◆ clearEdgesAroundVertex(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdgesAroundVertex ; (; ). protected . ◆ createEdgesAroundVertexArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgesAroundVertexArray ; (; ). pro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:36733,clear,clear,36733,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['clear'],['clear']
Usability,logyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTetrahedronArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgesInTetrahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for each tetrahedron. ; This function is only called if the ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:51105,clear,clearTetrahedraAroundTriangle,51105,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTetrahedraAroundTriangle']
Usability,logyContainer::checkConnexity ; (; ). overridevirtual . Checks if the topology has only one connected component. ; Get information about connexity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_tetrahedron . m_edgesInTetrahedron . m_trianglesInTetrahedron . m_tetrahedraAroundVertex . m_tetrahedraAroundEdge . m_tetrahedraAroundTriangle ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTetrahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::cleanTetrahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clear,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:50275,clear,clear,50275,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clear']
Usability,logyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTriangleArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgesInTriangleArray ; (; ). protectedvirtual . Creates the array of edge indices for each triangle. ; This function is only called if the EdgesInTriangle array is required. m_edgesInTriangle[i] contains the 3 indices of the 3 edges composing the ith triangle. . ◆ createElementsOnBorder(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createElementsOnBorder ; (; ). : Create element lists which are on topology border: . A vector of TriangleID See als,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:41943,clear,clearTrianglesAroundVertex,41943,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clearTrianglesAroundVertex']
Usability,"lot . ◆ resizeGL(). void sofa::gui::qt::viewer::qgl::QtGLViewer::resizeGL ; (; int ; w, . int ; h . ). overrideprotected . ◆ resizeH. void sofa::gui::qt::viewer::qgl::QtGLViewer::resizeH ; (; int ; ). overridesignal . ◆ resizeW. void sofa::gui::qt::viewer::qgl::QtGLViewer::resizeW ; (; int ; ). overridesignal . ◆ saveView. void sofa::gui::qt::viewer::qgl::QtGLViewer::saveView ; (; ). overrideslot . ◆ screenshot(). void sofa::gui::qt::viewer::qgl::QtGLViewer::screenshot ; (; const std::string & ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::gui::qt::viewer::SofaViewer. ◆ setCameraMode(). void sofa::gui::qt::viewer::qgl::QtGLViewer::setCameraMode ; (; core::visual::VisualParams::CameraType ; mode). overridevirtual . Reimplemented from sofa::gui::common::BaseViewer. ◆ setSizeH. void sofa::gui::qt::viewer::qgl::QtGLViewer::setSizeH ; (; int ; size). overrideslot . ◆ setSizeW. void sofa::gui::qt::viewer::qgl::QtGLViewer::setSizeW ; (; int ; size). overrideslot . ◆ setView. void sofa::gui::qt::viewer::qgl::QtGLViewer::setView ; (; const type::Vec3 & ; pos, . const type::Quat< SReal > & ; ori . ). overridevirtualslot . ◆ UpdateOBJ(). void sofa::gui::qt::viewer::qgl::QtGLViewer::UpdateOBJ ; (; void ; ). ◆ viewAll(). void sofa::gui::qt::viewer::qgl::QtGLViewer::viewAll ; (; void ; ). overrideprotectedvirtual . Overloaded from SofaViewer. ; Implements sofa::gui::common::BaseViewer. ◆ viewerName(). static const char* sofa::gui::qt::viewer::qgl::QtGLViewer::viewerName ; (; ). inlinestatic . ◆ wait(). void sofa::gui::qt::viewer::qgl::QtGLViewer::wait ; (; ). inlineoverridevirtual . ask the viewer to resume its activity ; Reimplemented from sofa::gui::common::BaseViewer. ◆ wheelEvent(). void sofa::gui::qt::viewer::qgl::QtGLViewer::wheelEvent ; (; QWheelEvent * ; e). overrideprotectedvirtual . Reimplemented from sofa::gui::qt::viewer::SofaViewer. sofaguiqtviewerqglQtGLViewer; Generated on Mon Nov 11 2024 03:25:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html:12158,resume,resume,12158,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,1,['resume'],['resume']
Usability,"lsValue () const;  ; virtual void resizeBlock (Index nbBRow, Index nbBCol);  ; void resizeBloc (Index nbBRow, Index nbBCol);  ; void compress ();  ; void swap (Matrix &m);  ; void fullRows ();  Make sure all rows have an entry even if they are empty. More...;  ; void shiftIndices (Index base);  ; const Block & block (Index i, Index j) const;  Get block method. More...;  ; const Block & bloc (Index i, Index j) const;  ; Block * wblock (Index i, Index j, bool create=false);  Write block method. More...;  ; Block * wbloc (Index i, Index j, bool create=false);  ; Block * wblock (Index i, Index j, Index &rowId, Index &colId, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; BlockMatrixWriter operators; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsign",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:5246,clear,clearRowBlock,5246,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['clear'],['clearRowBlock']
Usability,"lue) override finalsofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inline; MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >::add(const matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inlineprotectedvirtual; MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >::add(const matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inlineprotectedvirtual; clear() overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >; ComponentType typedefsofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >; contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >static; GetCustomTemplateName()sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >inlinestatic; indexCheckedAdd(sofa::SignedIndex row, sofa::SignedIndex col, const T &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inlineprotected; indexVerificationStrategysofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >; MatrixAccumulator typedefsofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy > strategy) overridesofa::core::Mat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_matrix_accumulator-members.html:5611,clear,clear,5611,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,"lue) override finalsofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inline; MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >::add(const matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inlineprotectedvirtual; MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >::add(const matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inlineprotectedvirtual; clear() overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >; Col typedefsofa::component::linearsystem::ConstantLocalMatrix< TMatrix, c, TStrategy >; ComponentType typedefsofa::component::linearsystem::ConstantLocalMatrix< TMatrix, c, TStrategy >; compressedInsertionOrderListsofa::component::linearsystem::ConstantLocalMatrix< TMatrix, c, TStrategy >; contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >static; currentIdsofa::component::linearsystem::ConstantLocalMatrix< TMatrix, c, TStrategy >; GetCustomTemplateName()sofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >inlinestatic; indexCheckedAdd(sofa::SignedIndex row, sofa::SignedIndex col, const T &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerificati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_matrix-members.html:5871,clear,clear,5871,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_matrix-members.html,1,['clear'],['clear']
Usability,"lue) override finalsofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inline; MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >::add(const matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inlineprotectedvirtual; MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >::add(const matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inlineprotectedvirtual; clear() overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >; Col typedefsofa::component::linearsystem::SparsityPatternLocalMatrix< c, TStrategy >; ComponentType typedefsofa::component::linearsystem::SparsityPatternLocalMatrix< c, TStrategy >; contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >static; GetCustomTemplateName()sofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >inlinestatic; getInsertionOrderList() constsofa::component::linearsystem::SparsityPatternLocalMatrix< c, TStrategy >inline; indexCheckedAdd(sofa::SignedIndex row, sofa::SignedIndex col, const T &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inlineprotected; indexVerificationStrategysofa::core::MatrixAccumulatorIndexCheck",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_matrix-members.html:5823,clear,clear,5823,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_matrix-members.html,1,['clear'],['clear']
Usability,"l OrderedInsertion = false;  ; static constexpr int matrixType = 2;  ;  Static Public Attributes inherited from sofa::linearalgebra::CRSDefaultPolicy; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) More...;  ; static constexpr bool OrderedInsertion = false;  Set to true if insertion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Attribute details. ◆ AutoCompress. constexpr bool sofa::linearalgebra::CRSConstraintPolicy::AutoCompress = true. staticconstexpr . ◆ AutoSize. constexpr bool sofa::linearalgebra::CRSConstraintPolicy::AutoSize = true. staticconstexpr . ◆ ClearByZeros. constexpr bool sofa::linearalgebra::CRSConstraintPolicy::ClearByZeros = false. staticconstexpr . ◆ CompressZeros. constexpr bool sofa::linearalgebra::CRSConstraintPolicy::CompressZeros = false. staticconstexp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_constraint_policy.html:1790,clear,clear,1790,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_constraint_policy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_constraint_policy.html,2,['clear'],"['clear', 'clearing']"
Usability,"l OrderedInsertion = false;  ; static constexpr int matrixType = 2;  ;  Static Public Attributes inherited from sofa::linearalgebra::CRSDefaultPolicy; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) More...;  ; static constexpr bool OrderedInsertion = false;  Set to true if insertion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Public Member Functions;  CompressedRowSparseMatrixConstraint ();  ;  CompressedRowSparseMatrixConstraint (Index nbRow, Index nbCol);  ; bool empty () const;  ; RowConstIterator begin () const;  Get the iterator corresponding to the beginning of the rows of blocks. More...;  ; RowConstIterator end () const;  Get the iterator corresponding to the end of the rows of blocks. More...;  ; RowConstIterator cbegin () const;  Get the iterator corresponding to the",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html:2728,clear,clear,2728,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,2,['clear'],"['clear', 'clearing']"
Usability,"m a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [7/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [8/9]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [9/9]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:19627,clear,clear,19627,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clear']
Usability,"m sofa::core::topology::BaseMeshTopology. ◆ addPoints(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::addPoints ; (; const Size ; nPoints). add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) ; Parameters. Thenumber of point to add. . ◆ checkTopology(). bool sofa::component::topology::container::dynamic::PointSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the Topology is coherent. ; Dynamic Topology API ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::QuadSetTopologyContainer. ◆ cleanPointTopologyFromDirty(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::cleanPointTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::QuadSetTopologyContainer. ◆ getNbPoints(). Size sofa::component::topology::container::dynamic::PointSetTopologyContainer::getNbPoints ; (; ); const. inlineoverridevirtual . Returns the number of vertices in this topology. ; BaseMeshTopology API ; Reimplemented from sofa::core::topology::Topology. ◆ getNumberOfElements(). Size sofa::component::topology::container::dynamic::PointSetTopologyContainer::getNumberOfElements ; (; ); const. virtual . Returns the number of topological element of the current topology. This function avoids to know which topological contain",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:32103,clear,clear,32103,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['clear'],['clear']
Usability,"m. protected . ◆ m_p. sofa::linearalgebra::FullVector<SReal> sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::m_p. protected . ◆ scaleTolerance. bool sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::scaleTolerance. ◆ sceneTime. SReal sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::sceneTime. ◆ sor. SReal sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::sor. ◆ Wdiag. linearalgebra::SparseMatrix<SReal> sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::Wdiag. Constructor details. ◆ GenericConstraintProblem(). sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::GenericConstraintProblem ; (; ). inline . ◆ ~GenericConstraintProblem(). sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::~GenericConstraintProblem ; (; ). inlineoverride . Function details. ◆ clear(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::clear ; (; int ; nbConstraints). overridevirtual . Reimplemented from sofa::component::constraint::lagrangian::solver::ConstraintProblem. ◆ freeConstraintResolutions(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::freeConstraintResolutions ; (; ). ◆ gaussSeidel(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::gaussSeidel ; (; SReal ; timeout = 0, . GenericConstraintSolver * ; solver = nullptr . ). Projective Gauss Seidel method building the compliance matrix. . ◆ gaussSeidel_increment(). void sofa::component::constraint::lagrangian::solver::GenericConstraintProblem::gaussSeidel_increment ; (; bool ; measureError, . SReal * ; dfree, . SReal * ; force, . SReal ** ; w, . SReal ; tol, . SReal * ; d, . int ; dim, . bool & ; constraintsAreVerified, . SReal & ; error, . sofa::type::vector< SReal > & ; tabErrors . ); const. ◆ getNumConstraintGroups(). int sofa::component::constraint::lagrangian::solver",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html:5458,clear,clear,5458,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,1,['clear'],['clear']
Usability,m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInQuadArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgesInQuadArray ; (; ). protectedvirtual . Creates the array of edge indices for each quad. ; This function is only called if the EdgesInQuad array is required. m_edgesInQuad[i] contains the 4 indices of the 4 edges composing the ith quad. . ◆ createQuadsAroundEdgeArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createQuadsAroundEdgeArray ; (; ). protectedvirtual . Creates the quadsAroundEdge Array. ; This function is only called if the QuadsAroundVertex array i,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40741,clear,clearQuadsAroundVertex,40741,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clearQuadsAroundVertex']
Usability,"matrix this function may be overload to obtain better performances. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ add() [2/3]. template<matrixaccumulator::Contribution c> . void sofa::core::behavior::AddToMatrixCompatMatrix< c >::add ; (; Index ; row, . Index ; col, . const type::Mat3x3f & ; _M . ). inlineoverridevirtual . Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ add() [3/3]. template<matrixaccumulator::Contribution c> . void sofa::core::behavior::AddToMatrixCompatMatrix< c >::add ; (; Index ; row, . Index ; col, . double ; v . ). inlineoverridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear(). template<matrixaccumulator::Contribution c> . void sofa::core::behavior::AddToMatrixCompatMatrix< c >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<matrixaccumulator::Contribution c> . Index sofa::core::behavior::AddToMatrixCompatMatrix< c >::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<matrixaccumulator::Contribution c> . SReal sofa::core::behavior::AddToMatrixCompatMatrix< c >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ resize(). template<matrixaccumulator::Contribution c> . void sofa::core::behavior::AddToMatrixCompatMatrix< c >::resize ; (; Index ; nbRow, . Index ; nbCol . ). inlineoverridevirtual . Resize the matrix and reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ rowSize(). template<matrixaccumulator::Contribution c>",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:16617,clear,clear,16617,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,1,['clear'],['clear']
Usability,"may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [6/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ begin() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize().",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:19071,clear,clear,19071,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,1,['clear'],['clear']
Usability,"mber of columns. More...;  ; Index rowBSize (void) const;  ; Index colBSize (void) const;  ; const Block & bloc (Index i) const;  ; const Block & bloc (Index i, Index j) const;  ; Block * wbloc (Index i);  ; Block * wbloc (Index i, Index j);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void setB (Index i, const Block &b);  ; void setB (Index i, Index j, const Block &b);  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void addB (Index i, const Block &b);  ; void addB (Index i, Index j, const Block &b);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void invert ();  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:2018,clear,clearCol,2018,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,1,['clear'],['clearCol']
Usability,"ment at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multithreaded. More...;  ; template<class V1 , class V2 > ; void multVector (V1 &output, const V2 &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; template<class V > ; V operator* (const V &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; bool choleskyDecompose ();  Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. More...;  ; void choleskySolve (VectorEigen &x, const VectorEigen &b) const;  Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. More...;  ; void addToBaseMatrix (BaseMatrix *matrix, SReal factor, Index offset) const;  add this EigenBaseSparseMatrix to a BaseM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:4255,clear,clear,4255,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clear']
Usability,"ment at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multithreaded. More...;  ; void multVector (V1 &output, const V2 &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; V operator* (const V &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; const char * Name ();  ; const char * Name ();  ; bool choleskyDecompose ();  Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. More...;  ; void choleskySolve (VectorEigen &x, const VectorEigen &b) const;  Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. More...;  ; void addToBaseMatrix (BaseMatrix *matrix, SReal factor, Index offset) const;  add this EigenBaseSparseMatrix to a BaseMatri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html:5526,clear,clear,5526,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,1,['clear'],['clear']
Usability,"mentProjectiveConstraint< TDataTypes >::x0. initial constrained DOFs position . ◆ xf. template<class TDataTypes > . VecCoord sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >::xf. final constrained DOFs position . Constructor details. ◆ AffineMovementProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::AffineMovementProjectiveConstraint. protected . ◆ ~AffineMovementProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::~AffineMovementProjectiveConstraint. protectedvirtual . Function details. ◆ addConstraint(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::addConstraint ; (; Index ; index). ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Draw the constrained points (= border mesh points) ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getFinalPositions(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::getFinalPositions ; (; VecCoord & ; finalPos, . DataVecCoord & ; xData . ). Compute the theoretical final positions. . ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class TDataTypes > . void sofa::component::constraint::projective::Aff",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html:26758,clear,clearConstraints,26758,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"mented from sofa::core::topology::BaseMeshTopology. ◆ addTetra(). void sofa::component::topology::container::constant::MeshTopology::addTetra ; (; Index ; a, . Index ; b, . Index ; c, . Index ; d . ). overridevirtual . Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ addTriangle(). void sofa::component::topology::container::constant::MeshTopology::addTriangle ; (; Index ; a, . Index ; b, . Index ; c . ). overridevirtual . Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ addUV(). void sofa::component::topology::container::constant::MeshTopology::addUV ; (; SReal ; u, . SReal ; v . ). ◆ checkConnexity(). bool sofa::component::topology::container::constant::MeshTopology::checkConnexity ; (; ). overridevirtual . Checks if the topology has only one connected component. ; Get information about connexity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ clear(). void sofa::component::topology::container::constant::MeshTopology::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ computeRelativeOrientationInQuad(). int sofa::component::topology::container::constant::MeshTopology::computeRelativeOrientationInQuad ; (; const PointID ; ind_p0, . const PointID ; ind_p1, . const PointID ; ind_q . ). ◆ computeRelativeOrientationInTri(). int sofa::component::topology::container::constant::MeshTopology::computeRelativeOrientationInTri ; (; const PointID ; ind_p0, . const PointID ; ind_p1, . const PointID ; ind_t . ). ◆ createEdgesAroundVertexArray(). void sofa::component::topology::container::constant::MeshTopology::createEdgesAroundVertexArray ; (; ). protected . Creates the EdgeSetIndex. ; This function is only called if the EdgesAroundVertex member is required. m_edgesAroundVertex[i] contains the indices of all edges having the ith DOF as one of their ends. . ◆ createEdgesI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html:47390,clear,clear,47390,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,1,['clear'],['clear']
Usability,"mented in sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet.; Reimplemented in sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >. ◆ checkIndices(). template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::checkIndices. protected . Function check values of given indices. . ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::clearConstraints. ◆ computeBBox(). template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBBoxForIndices(). template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::computeBBoxForIndices ; (; const type::vector< Index > & ; indices). protected . ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ fixAllDOFs(). template<class DataTypes > . bool sofa::component::constraint::projec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html:24500,clear,clearConstraints,24500,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"ments sofa::defaulttype::AbstractTypeInfo. ◆ Scalar(). bool sofa::defaulttype::NoTypeInfo::Scalar ; (; ); const. inlineoverridevirtual . True iff this type uses scalar values. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setIntegerValue(). void sofa::defaulttype::NoTypeInfo::setIntegerValue ; (; void * ; , . Index ; , . long long ;  . ); const. inlineoverridevirtual . Set the value at index of data from an integer value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setScalarValue(). void sofa::defaulttype::NoTypeInfo::setScalarValue ; (; void * ; , . Index ; , . double ;  . ); const. inlineoverridevirtual . Set the value at index of data from a scalar value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setSize(). bool sofa::defaulttype::NoTypeInfo::setSize ; (; void * ; , . sofa::Size ;  . ); const. inlineoverridevirtual . Resize data to size elements, if relevant. ; But resizing is not always relevant, for example:; nothing happens if FixedSize() is true;; sets can't be resized; they are cleared instead;; nothing happens for vectors containing resizable values (i.e. when BaseType()::FixedSize() is false), because of the ""single index"" abstraction;. Returns true iff the data was resizable ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setTextValue(). void sofa::defaulttype::NoTypeInfo::setTextValue ; (; void * ; , . Index ; , . const std::string & ;  . ); const. inlineoverridevirtual . Set the value at index of data from a string value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleCopy(). bool sofa::defaulttype::NoTypeInfo::SimpleCopy ; (; ); const. inlineoverridevirtual . True iff copying the data can be done with a memcpy(). ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleLayout(). bool sofa::defaulttype::NoTypeInfo::SimpleLayout ; (; ); const. inlineoverridevirtual . True iff the layout in memory is simply N values of the same base type. It means that you can use the abstract index system to iterate over the elemen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html:7873,clear,cleared,7873,api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_no_type_info.html,1,['clear'],['cleared']
Usability,"mic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotectedvirtual; createEdgesInTetrahedronArray()sofa::component::topology::container::dynamic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:5704,clear,clearTrianglesAroundEdge,5704,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearTrianglesAroundEdge']
Usability,mic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInHexahedronArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgesInHexahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for each hexahedron. ; This function is only called if the EdgesInHexahedron array is required. m_edgesInHexahedron[i] contains the 12 indices of the 12 edges of each hexahedron. . ◆ createHexahedraAroundEdgeArray(). void sofa::component::topo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49868,clear,clearHexahedraAroundVertex,49868,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearHexahedraAroundVertex']
Usability,"model::Base* sofa::core::castToBase ; (; Source * ; b). Dynamic cast from the type parameter B* into Base*. ; CORE::OPAQUE FUNCTION /////////////////////////////////////////////////; CORE::OPAQUE function are a groupe of function that make ""opaque"" some of the common sofa behaviors.; Core::Opaque functions are:; Base* sofa::core::castToBase(T*) replace dynamic_cast<Base*>(T*);; T* sofa::core::castTo(Base*) replace dynamic_cast<T*>(Base*);; sofa:core::objectmodel::base::GetClass<T>() replace T::GetClass();. These functions are called ""opaque"" as they work with only forward declaration of the involved types in comparison to class methods the requires the full class declaration to be used.; It is highly recommended to use as much as possible opaque function in header files as this allow to reduce the dependency tree.; Opaque function may be slower at runtime (by one function call) but this is true only if LTO isn't able to optimize them properly. If you have experience/feedback with LTO please join the discussion in https://github.com/sofa-framework/sofa/discussions/1822 Defines the baseline functions for a type all the types in-herit from Base. These are non-opaque function that needs to be specialized in order to implement an opaque version for a given type. . ◆ cleanup(). SOFA_CORE_API void sofa::core::cleanup ; (; ). Clean up the resources used by the SofaCore library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ findTemplatedCreator(). void sofa::core::findTemplatedCreator ; (; objectmodel::BaseContext * ; context, . const ObjectFactory::Creator::SPtr & ; creator, . const std::string & ; templateName, . std::map< std::string, std::vector< std::string >> & ; creatorsErrors, . std::vector< std::pair< std::string, ObjectFactory::Creator::SPtr > > & ; creators, . objectmodel::BaseObjectDescription * ; arg . ). ◆ init(). SOFA_CORE_API void sofa::core::init ; (; ). Initialize the SofaCore library, as well as its dependencies: SofaDefaultType, SofaHelper.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html:19634,feedback,feedback,19634,api/master/sofa/html/namespacesofa_1_1core.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html,1,['feedback'],['feedback']
Usability,"model::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyEdgessofa::component::mapping::linear::Mesh2PointTopologicalMappingprotected; copyTetrahedrasofa::component::mapping::linear::Mesh2PointTopologicalMappingprotected; copyTrianglessofa::component::mapping::linear::Mesh2PointTopologicalMappingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::Top",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html:2976,clear,clearLoggedMessages,2976,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"model::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgeD2Ssofa::component::topology::mapping::SubsetTopologicalMapping; d_edgeS2Dsofa::component::topology::mapping::SubsetTopologicalMapping; d_handleEdgessofa::component::topology::mapping::SubsetTopologicalMapping; d_handleHexahedrasofa::component::topology::mapping::SubsetTopologicalMapping; d_handleQuadssofa::component::topology::mapping::SubsetTopologicalMapping; d_handleTetrahedrasofa::component::topology::mapping::SubsetTopologicalMapping; d_handleTrianglessofa::component::topology::mapping::SubsetTop",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html:2280,clear,clearLoggedMessages,2280,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"model::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgeListsofa::component::topology::mapping::Edge2QuadTopologicalMapping; d_flipNormalssofa::component::topology::mapping::Edge2QuadTopologicalMapping; d_focalAxissofa::component::topology::mapping::Edge2QuadTopologicalMapping; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbPointsOnEachCirclesofa::component::topology::mapping::Edge2QuadTopologicalMapping; d_radiussofa::component::topology::mapping::Edge2QuadTopologicalMapping; d_radiusFocalsofa::component::topology::mapping::Edge2QuadTopological",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping-members.html:2286,clear,clearLoggedMessages,2286,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"model::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_flipNormalssofa::component::topology::mapping::Hexa2QuadTopologicalMappingprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::TopologicalMapping; dumpLoc2GlobVec()sofa::core::topology::TopologicalMapping; ElementType typedefsofa::core::topology::TopologicalMapping; f_bboxsofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping-members.html:2286,clear,clearLoggedMessages,2286,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"model::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pointMappedFromEdgesofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMappingprotected; d_pointMappedFromPointsofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMappingprotected; d_pointSourcesofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMappingprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinli",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping-members.html:2306,clear,clearLoggedMessages,2306,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"model::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_swappingsofa::component::topology::mapping::Hexa2TetraTopologicalMapping; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::TopologicalMapping; dumpLoc2GlobVec()sofa::core::topology::TopologicalMapping; ElementType typedefsofa::core::topology::TopologicalMapping; f_bboxsofa::core::objectmodel::Base; f_lis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping-members.html:2288,clear,clearLoggedMessages,2288,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"model::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::TopologicalMapping; dumpLoc2GlobVec()sofa::core::topology::TopologicalMapping; ElementType typedefsofa::core::topology::TopologicalMapping; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping-members.html:2304,clear,clearLoggedMessages,2304,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping-members.html,5,['clear'],['clearLoggedMessages']
Usability,"model::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMaterial()sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDStress(Vec3 &dstress, Vec3 &dstrain) overridesofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterialvirtual; computeStress(Vec3 &stress, Vec3 &strain, unsigned int &elementIndex) overridesofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterialvirtual; computeStress(unsigned int) overridesofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterialinlinevirtual; computeStressOnSection(Vec3 &Stress, Vec3 Strain, int section)sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; computeVonMisesStrain(Vec3 &strain)sofa::component::solidmechanics::fem::hyperelastic::material::PlasticMaterial; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html:2604,clear,clearLoggedMessages,2604,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material-members.html,1,['clear'],['clearLoggedMessages']
Usability,"model::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMaterial()sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDStress(type::Vec3 &, type::Vec3 &)sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinlinevirtual; computeStress(type::Vec3 &, type::Vec3 &, unsigned int &)sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialinlinevirtual; computeStress(unsigned int)=0sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterialpure virtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html:2059,clear,clearLoggedMessages,2059,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material-members.html,1,['clear'],['clearLoggedMessages']
Usability,"model::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CentralDifferenceSolver()sofa::component::odesolver::forward::CentralDifferenceSolverprotected; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rayleighMasssofa::component::odesolver::forward::CentralDifferenceSolver; d_threadSafeVisitorsofa::component::odesolver::forward::CentralDifferenceSolver; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver-members.html:2031,clear,clearLoggedMessages,2031,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,"model::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *matrix) overridesofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dampingCoefficientsofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; d_implicitsofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; dampingCoefficientsofa::component::mechanicalload::UniformVelocityDampingForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field-members.html:4782,clear,clearLoggedMessages,4782,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"models a position).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectPosition() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectResponse(). template<class DataTypes > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::projectResponse ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; dx . ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectResponseT(). template<class DataTypes > . template<class DataDeriv > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::projectResponseT ; (; DataDeriv & ; dx, . const std::function< void(DataDeriv &, const unsigned int)> & ; clear . ). protected . ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ reinit(). template<class DataTypes > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setBeginTime(). template<class DataTypes > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::setBeginTi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html:27372,clear,clear,27372,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,1,['clear'],['clear']
Usability,models using GeoMagic Plugin and centring. /mass-below-a-multimap; ; SOFA - Topic: [SOLVED] Mass below a multimap. /mass-spring-model; ; SOFA - Topic: Mass-Spring Model. /mass-spring-modelling; ; SOFA - Topic: Mass-Spring Modelling. /materials-with-directionally-asymetric-friction; ; SOFA - Topic: [SOLVED] materials with directionally asymetric friction. /meaning-of-parameters-in-jointspringforcefield; ; SOFA - Topic: Meaning of parameters in JointSpringForceField. /measuring-contact-pressure; ; SOFA - Topic: [SOLVED] Measuring contact pressure. /mechanicalobject-and-articulationcenter-classes; ; SOFA - Topic: [SOLVED] MechanicalObject and ArticulationCenter classes. /mechanicalobject-rotation; ; SOFA - Topic: [SOLVED] MechanicalObject rotation. /memory-leaks; ; SOFA - Topic: Memory Leaks. /memory-leak-when-using-localmindistance; . /feed; ; [SOLVED] Memory leak when using LocalMinDistance – SOFA. SOFA - Topic: [SOLVED] Memory leak when using LocalMinDistance. /memory-problems-in-simple-app-using-sofa-as-lib; . /feed; ; [SOLVED] Memory problems in simple app using Sofa as lib – SOFA. SOFA - Topic: [SOLVED] Memory problems in simple app using Sofa as lib. /mergemeshes-remove-duplicated-vertices; ; SOFA - Topic: [SOLVED] MergeMeshes remove duplicated vertices. /mesh-explodes-when-using-the-surfacepressureconstraint; ; SOFA - Topic: [SOLVED] Mesh explodes when using the surfacepressureconstraint. /mesh-generation-in-sofa; ; SOFA - Topic: Mesh Generation in SOFA. /meshing-a-sphere; ; SOFA - Topic: [SOLVED] Meshing a Sphere. /mesh-object-does-not-visible; ; SOFA - Topic: [SOLVED] Mesh Object does not visible. /mesh-optimizatiation-for-deformable-objects; ; SOFA - Topic: Mesh-optimizatiation for deformable objects. /meshspringforcefield-on-rigid3d; ; SOFA - Topic: MeshSpringForceField on Rigid3d. /meshsteploader-plugin-loading-failed; ; SOFA - Topic: [SOLVED] MeshSTEPLoader plugin loading failed. /metal-forging-simulation; ; SOFA - Topic: Metal Forging Simulation. /missin,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:347008,simpl,simple-app-using-sofa-as-lib,347008,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['simpl'],['simple-app-using-sofa-as-lib']
Usability,"mplate<class Object > ; static Object * create (Object *, std::string arg="""");  . Attribute details. ◆ m_bLoaded. unsigned char sofa::helper::io::Image::m_bLoaded. protected . ◆ strFromChannelFormat. const char * sofa::helper::io::Image::strFromChannelFormat. static . Initial value:=; {; ""L"",; ""LA"",; ""R"",; ""RG"",; ""RGB"",; ""RGBA"",; ""BGR"",; ""BGRA"",; ; ""COUNT_OF_CHANNEL_FORMATS""; }. ◆ strFromDataType. const char * sofa::helper::io::Image::strFromDataType. static . Initial value:=; {; ""UNORM8"",; ""UNORM16"",; ""UINT32"",; ""HALF"",; ""FLOAT"",; ; ""UCOMPRESSED"",; ; ""COUNT_OF_DATA_TYPES""; }. ◆ strFromTextureType. const char * sofa::helper::io::Image::strFromTextureType. static . Initial value:=; {; ""TEXTURE_2D"",; ""TEXTURE_3D"",; ""TEXTURE_CUBE"",; ; ""TEXTURE_INVALID""; }. Constructor details. ◆ Image() [1/2]. sofa::helper::io::Image::Image ; (; ). ◆ ~Image(). sofa::helper::io::Image::~Image ; (; ). virtual . ◆ Image() [2/2]. sofa::helper::io::Image::Image ; (; const Image & ; rhs). Function details. ◆ clear(). void sofa::helper::io::Image::clear ; (; ). ◆ create(). template<class Object > . static Object* sofa::helper::io::Image::create ; (; Object * ; , . std::string ; arg = """" . ). inlinestatic . ◆ Create(). Image * sofa::helper::io::Image::Create ; (; std::string ; filename). static . ◆ get3DSliceMipmapPixels(). unsigned char * sofa::helper::io::Image::get3DSliceMipmapPixels ; (; unsigned ; slice, . unsigned ; mipmap . ). ◆ getBytesPerBlock(). unsigned sofa::helper::io::Image::getBytesPerBlock ; (; ); const. ◆ getBytesPerChannel(). unsigned sofa::helper::io::Image::getBytesPerChannel ; (; ); const. ◆ getBytesPerPixel(). unsigned sofa::helper::io::Image::getBytesPerPixel ; (; ); const. ◆ getChannelCount(). unsigned sofa::helper::io::Image::getChannelCount ; (; ); const. ◆ getChannelFormat(). Image::ChannelFormat sofa::helper::io::Image::getChannelFormat ; (; ); const. ◆ getCubeMipmapPixels(). unsigned char * sofa::helper::io::Image::getCubeMipmapPixels ; (; unsigned ; cubeside, . uns",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html:3178,clear,clear,3178,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image.html,1,['clear'],['clear']
Usability,"mplate<class T > ; static void stepEnd (const char *idStr, T *obj);  ; static void stepNext (const char *prevIdStr, const char *nextIdStr);  ; static void step (const char *idStr);  ; static void step (const char *idStr, const char *objStr);  ; static void step (const char *idStr, const std::string &objStr);  ; template<class T > ; static void step (const char *idStr, T *obj);  ; static void valSet (IdVal id, double val);  ; static void valAdd (IdVal id, double val);  ; static void valSet (const char *idStr, double val);  ; static void valAdd (const char *idStr, double val);  ; static std::pair< SyncCallBack, void * > setSyncCallBack (SyncCallBack cb, void *userData=nullptr);  . Function details. ◆ begin() [1/2]. void sofa::helper::AdvancedTimer::begin ; (; const char * ; idStr). static . ◆ begin() [2/2]. void sofa::helper::AdvancedTimer::begin ; (; IdTimer ; id). static . ◆ clear(). void sofa::helper::AdvancedTimer::clear ; (; ). static . ◆ clearData(). void sofa::helper::AdvancedTimer::clearData ; (; IdTimer ; id). static . clearDatato clear a specific Timer Data ; Parameters. idIdTimer, id of the timer . ◆ convertOutputType(). AdvancedTimer::outputType sofa::helper::AdvancedTimer::convertOutputType ; (; std::string ; type). static . convertOutputType convert a string to the output type ; Parameters. typestd::string, output type name (example : ""json"") . ReturnsoutputType, output type enum . ◆ end() [1/4]. void sofa::helper::AdvancedTimer::end ; (; const char * ; idStr). static . ◆ end() [2/4]. void sofa::helper::AdvancedTimer::end ; (; IdTimer ; id). static . ◆ end() [3/4]. std::string sofa::helper::AdvancedTimer::end ; (; IdTimer ; id, . double ; time, . double ; dt . ). static . end Override fo the end method in which you can use JSON or old format ; Parameters. idIdTimer, the id of the used timer ; timedouble, current time (from the context) ; timedt, current delta time or dt (from the context) . Returnsstd::string, the output if JSON format is set . ◆ end() [",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html:4107,clear,clearData,4107,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,1,['clear'],['clearData']
Usability,"mplate<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addEqual(). template<typename T > . template<class M > . void sofa::linearalgebra::DiagonalMatrix< T >::addEqual ; (; const M & ; m). inlineprotected . this += m . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::DiagonalMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ clear() [1/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i). inline . ◆ clear() [3/3]. template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::DiagonalMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::DiagonalMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element() [1/2]. template<typename T > . SReal sofa::linearalgebra::DiagonalMatrix< T >::element ; (; Ind",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:20059,clear,clearCol,20059,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clearCol']
Usability,"mplate<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsRange ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48713,clear,clearCol,48713,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearCol']
Usability,"mpressedMatrix::Index reserveSize);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multithreaded. More...;  ; template<class V1 , class V2 > ; void multVector (V1 &output, const V2 &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; template<class V > ; V operator* (const V &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; bool choleskyDecompose ();  Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. More...;  ; void choleskySolve (VectorEigen &x, const VectorEigen &b) const;  Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. More...;  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:4115,clear,clearRowsCols,4115,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearRowsCols']
Usability,"mpressedMatrix::Index reserveSize);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multithreaded. More...;  ; void multVector (V1 &output, const V2 &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; V operator* (const V &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; const char * Name ();  ; const char * Name ();  ; bool choleskyDecompose ();  Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. More...;  ; void choleskySolve (VectorEigen &x, const VectorEigen &b) const;  Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. More...;  ; void addT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html:5386,clear,clearRowsCols,5386,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,1,['clear'],['clearRowsCols']
Usability,"ms *) override;  Called after objects in the current branch are displayed. More...;  ; std::string getTextureName ();  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html:4792,clear,clearVisual,4792,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,4,['clear'],"['clear', 'clearVisual']"
Usability,"mulator::NoIndexVerification >inlineprotectedvirtual; sofa::component::linearsystem::AssemblingMatrixAccumulator::add(const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >protectedvirtual; sofa::component::linearsystem::AssemblingMatrixAccumulator::add(const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >protectedvirtual; AssemblingMappedMatrixAccumulator()sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >protected; sofa::clear() overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >; sofa::component::linearsystem::AssemblingMappedMatrixAccumulator::clear() overridesofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >; Col typedefsofa::component::linearsystem::SparsityPatternLocalMatrix< c, TStrategy >; ComponentType typedefsofa::component::linearsystem::SparsityPatternLocalMappedMatrix< c, TBlockType >; sofa::contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >static; sofa::component::linearsystem::AssemblingMappedMatrixAccumulator::contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >static; sofa::GetCustomTemplateName()sofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >inlinestatic; sofa::component::linearsystem::AssemblingMappedMatrixAccumulator::GetCustomTemplateName()sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >inlinestatic; getInsertionOrderList() constsofa::component::linearsystem::SparsityPatternLoca",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix-members.html:6880,clear,clear,6880,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix-members.html,1,['clear'],['clear']
Usability,"n ();  ; LineIterator end ();  ; LineConstIterator begin () const;  ; LineConstIterator end () const;  ; Line & operator[] (Index i);  ; const Line & operator[] (Index i) const;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void addMulTranspose (FullVector< Real2 > &res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void mul (FullVector< Real2 > &res, const linearalgebra::BaseVector *v) const;  ; template<class Real2 > ; void addMulTranspose (FullVector< Real2 > &res, const linearalgebra::BaseVector *v) const;  ; template<class Real2 > ; void mul (linearalgebra::BaseVector *res, const FullVector< Real2 > &v) const;  ; template<class Real2 > ; void addMulTranspose (linearalgebra::BaseVector *res, const FullVector< Real2 > &v) const;  ; void mul (linearalgebra::BaseVector *res, const linearalgebra::BaseVector *v) const;  ; void addMulTranspose (linearalgebra::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:1857,clear,clearCol,1857,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,1,['clear'],['clearCol']
Usability,"n ();  ; LineIterator end ();  ; LineConstIterator begin () const;  ; LineConstIterator end () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; FullVector< Real > operator* (const FullVector< Real > &v) const;  ; void mul (FullVector< Real > &res, const FullVector< Real > &b) const;  ; void mulT (FullVector< Real > &res, const FullVector< Real > &b) const;  ; FullMatrix< Real > operator* (const FullMatrix< Real > &m) const;  ; void mul (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; void mulT (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. Th",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:2025,clear,clearCol,2025,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,1,['clear'],['clearCol']
Usability,"n element (i.e. sharing a link) More...;  ; virtual const sofa::type::vector< Index > getElementAroundElements (sofa::type::vector< Index > elems);  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ; Deprecated names, for backward-compatibility; const SeqLines & getLines ();  ; Size getNbLines ();  ; Line getLine (LineID i);  ; Initial points accessors (only available if the topology was loaded from a file containing this information).; Note that this data is only used for initialization and is not maintained afterwards (i.e. topological changes may not be applied) . bool hasPos () const override;  ; SReal getPX (Index) const override;  ; SReal getPY (Index) const override;  ; SReal getPZ (Index) const override;  . virtual void clear ();  ; virtual void addPoint (SReal px, SReal py, SReal pz);  ; virtual void addEdge (Index a, Index b);  ; void addLine (Index a, Index b);  ; virtual void addTriangle (Index a, Index b, Index c);  ; virtual void addQuad (Index a, Index b, Index c, Index d);  ; virtual void addTetra (Index a, Index b, Index c, Index d);  ; virtual void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h);  . virtual bool checkConnexity ();  ; virtual bool checkTopology () const;  Checks if the topology is coherent. More...;  ; virtual Size getNumberOfConnectedComponent ();  Returns the number of connected component. More...;  ; virtual const sofa::type::vector< Index > getConnectedElement (Index elem);  Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  . virtual std::list< const TopologyChange * >::const_iterator beginChange () const;  Provides an iterator on the first element in the list of TopologyChange objects. More...;  ; virtual std::list< const TopologyChange * >::const_iterator endChange () const;  Provides an iterator on the last element in the list of TopologyChange objects. More...;  ; virtua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html:9401,clear,clear,9401,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,1,['clear'],['clear']
Usability,"n j (using 0-based indices) More...;  ; const Block & asub (Index bi, Index bj, Index, Index) const;  ; const Block & sub (Index i, Index j, Index, Index) const;  ; Block & asub (Index bi, Index bj, Index, Index);  ; Block & sub (Index i, Index j, Index, Index);  ; template<class B > ; void getSubMatrix (Index i, Index j, Index nrow, Index ncol, B &m);  ; template<class B > ; void getAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, B &m);  ; template<class B > ; void setSubMatrix (Index i, Index j, Index nrow, Index ncol, const B &m);  ; template<class B > ; void setAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, const B &m);  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:2435,clear,clear,2435,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,2,['clear'],"['clear', 'clearRow']"
Usability,"n sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ add() [2/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const double * ; src . ). inlinevirtual . Add to the values of n double elements, starting at element i0. . ◆ add() [3/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const float * ; src . ). inlinevirtual . Add to the values of n float elements, starting at element i0. . ◆ add() [4/4]. virtual void sofa::linearalgebra::BaseVector::add ; (; Index ; i0, . Index ; n, . const int * ; src . ). inlinevirtual . Add to the values of n int elements, starting at element i0. . ◆ addDefaultImpl(). template<class T > . void sofa::linearalgebra::BaseVector::addDefaultImpl ; (; Index ; i0, . Index ; n, . const T * ; src . ). inlineprotected . ◆ clear() [1/2]. virtual void sofa::linearalgebra::BaseVector::clear ; (; ). pure virtual . Reset all values to 0. ; Implemented in sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ clear() [2/2]. virtual void sofa::linearalgebra::BaseVector::clear ; (; Index ; i). inlinevirtual . Reset the value of element i to 0. ; Reimplemented in sofa::linearalgebra::EigenVector< TReal, TBlockSize >, sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, and sofa::linearalgebra::FullVector< SReal >. ◆ element(). virtual SReal sofa::linearalgebra::BaseVector::element ; (; Index ; i); const. pure virtual . Read the value of element i. ; Implemented in sofa::linearalgebra::FullVector< T >, sofa::linearalgebra::FullVector< Real >, sofa::linearalgebra::FullVector< SReal >, and sofa::linearalgebra::EigenVector< TReal, TBlockSize >. ◆ elements() [1/3]. virtual const double* sofa::linearalgebra::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html:4911,clear,clear,4911,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,1,['clear'],['clear']
Usability,"n::algorithm::DirectSAPNarrowPhasevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; cacheData()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkNewCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createBoxesFromCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; DirectSAPNarrowPhase()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:2935,clear,clearLoggedMessages,2935,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,1,['clear'],['clearLoggedMessages']
Usability,"nSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotectedvirtual; createEdgesInTetrahedronArray()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotectedvirtual; createEdgesInTriangleArray()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createElementsOnBorder()sofa::component::topology::cont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:5930,clear,clearTrianglesInTetrahedron,5930,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearTrianglesInTetrahedron']
Usability,"nSparseMatrix< InDataTypes, OutDataTypes >protected; BlockRowMap typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >protected; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; cols(void) constsofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html:7100,clear,clear,7100,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,1,['clear'],['clear']
Usability,"nVector< TReal, TBlockSize >; Container of a vector of the Eigen library. Not an eigenvector of a matrix. . Protected Attributes; VectorEigen eigenVector;  the data More...;  . Public Member Functions; VectorEigen & getVectorEigen ();  ; const VectorEigen & getVectorEigen () const;  ;  EigenVector (Index nbRow=0);  ; Index size () const override;  Number of elements. More...;  ; void resize (Index nbRow) override;  Resize the matrix without preserving the data (the matrix is set to zero) More...;  ; void resizeBlocks (Index nbBlocks);  Resize the matrix without preserving the data (the matrix is set to zero), with the size given in number of blocks. More...;  ; SReal element (Index i) const override;  Read the value of element i. More...;  ; void set (Index i, SReal v) override;  Write the value of element i. More...;  ; void setBlock (Index i, const Block &v);  ; void add (Index i, SReal v) override;  Add v to the existing value of element i. More...;  ; void clear (Index i) override;  Reset the value of element i to 0. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; const std::string Name ();  ;  Public Member Functions inherited from sofa::linearalgebra::BaseVector; virtual ~BaseVector ();  ; virtual const float * elements (Index i0, Index n, float *src) const;  Get the values of n elements, starting at element i0, into given float buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual const double * elements (Index i0, Index n, double *src) const;  Get the values of n elements, starting at element i0, into given double buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual const int * elements (Index i0, Index n, int *src) const;  Get the values of n elements, starting at element i0, into given int buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual void set (Index i0, Inde",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html:1561,clear,clear,1561,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,1,['clear'],['clear']
Usability,"nal (const ColBlockConstIterator *b);  ; static InternalRowBlockIterator * getInternal (RowBlockConstIterator *b);  ; static const InternalRowBlockIterator * getInternal (const RowBlockConstIterator *b);  . Attribute details. ◆ component. BaseProjectiveConstraintSet* sofa::core::behavior::ApplyConstraintCompat::component { nullptr }. ◆ zeroDirichletCondition. sofa::core::behavior::ZeroDirichletCondition* sofa::core::behavior::ApplyConstraintCompat::zeroDirichletCondition { nullptr }. Function details. ◆ add(). void sofa::core::behavior::ApplyConstraintCompat::add ; (; Index ; row, . Index ; col, . double ; v . ). inlineoverridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear(). void sofa::core::behavior::ApplyConstraintCompat::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). void sofa::core::behavior::ApplyConstraintCompat::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). Index sofa::core::behavior::ApplyConstraintCompat::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). SReal sofa::core::behavior::ApplyConstraintCompat::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ resize(). void sofa::core::behavior::ApplyConstraintCompat::resize ; (; Index ; nbRow, . Index ; nbCol . ). inlineoverridevirtual . Resize the matrix and reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ rowSize(). Index sofa::core::behavior::ApplyConstraintCompat::rowSize ; (; ); const. inlineoverridevirtual . Number of rows. ; Implements sofa::linearalgebra::BaseMatrix. ◆ set(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:14178,clear,clearRowCol,14178,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['clear'],['clearRowCol']
Usability,"name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; assembleSystemMatrix(sofa::simulation::common::MechanicalOperations *mop) constsofa::component::odesolver::forward::EulerExplicitSolverprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAcceleration(sofa::simulation::common::MechanicalOperations *mop, core::MultiVecDerivId acc, core::ConstMultiVecDerivId f)sofa::component::odesolver::forward::EulerExplicitSolverprotectedstatic; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeForce(sofa::simulation::common::MechanicalOperations *mop, core::MultiVecDerivId f)sofa::component::odesolver::forward::EulerExplicitSolverprotectedstatic; computeResidual(const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId)sofa::core::behavior::OdeSolverinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html:2252,clear,clearLoggedMessages,2252,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,namic::TriangleSetTopologyContainer::checkConnexity ; (; ). overridevirtual . Checks if the topology has only one connected component. ; Get information about connexity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_triangle . m_edgesInTriangle . m_trianglesAroundVertex . m_trianglesAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTriangleTopologyFromDirty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topolo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:41077,clear,clear,41077,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clear']
Usability,"nce . This allow Base object to interact with the messaging system. ; More... Namespaces;  countingmessagehandler;  ;  loggingmessagehandler;  ;  percomponentloggingmessagehandler;  ;  routingmessagehandler;  . Classes; class  RichConsoleStyleMessageFormatter;  The RichConsoleStyleMessageFormatter class. More...;  ; class  SofaComponentInfo;  ; class  ClangMessageHandler;  ; class  ClangStyleMessageFormatter;  ; struct  ComponentInfo;  ; class  ConsoleMessageHandler;  ; class  MainConsoleMessageHandler;  The MainConsoleMessageHandler class contains a singleton to ConsoleMessageHandler and offer static version of ConsoleMessageHandler API. More...;  ; class  DefaultStyleMessageFormatter;  ; class  ExceptionMessageHandler;  ; struct  FileInfo;  ; struct  FileInfoOwningFilename;  To keep a trace (file,line) from where the message have been created. More...;  ; class  FileMessageHandler;  ; class  Message;  ; class  MessageDispatcherImpl;  ; class  MessageDispatcher;  ; class  MessageFormatter;  ; class  MessageHandler;  ; class  SilentMessageHandler;  This class is a MessageHandler that simply do nothing with the message. More...;  ; class  TracyMessageHandler;  Send the message to the Tracy profiler. More...;  ; class  MainTracyMessageHandler;  The MainTracyMessageHandler class contains a singleton to TracyMessageHandler and offer static version of TracyMessageHandler API. More...;  . Typedefs; typedef boost::tokenizer< boost::char_separator< char > > tokenizer;  . Functions; void simpleFormat (size_t jsize, const std::string &text, size_t line_length, std::ostream &wrapped);  simpleFormat a text containing our markdown 'tags' More...;  ; bool notMuted (const sofa::core::objectmodel::Base *t);  ; bool notMuted (sofa::core::objectmodel::Base *t);  ; ComponentInfo::SPtr getComponentInfo (const sofa::core::objectmodel::Base *t);  This construct a new ComponentInfo object from a Base object. More...;  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:1318,simpl,simply,1318,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,1,['simpl'],['simply']
Usability,"nclude <SolidTypes.h>; A wrench aka a SpatialVector representing a force and a torque This is practically a SpatialVector (screw) with the additional semantics that this screw represents a wrench (force and torque) and not a twist (velocity) ; More... Inheritance diagram for sofa::defaulttype::SolidTypes< R >::Wrench:. [legend]; Detailed Description; template<class R = float>; class sofa::defaulttype::SolidTypes< R >::Wrench; A wrench aka a SpatialVector representing a force and a torque This is practically a SpatialVector (screw) with the additional semantics that this screw represents a wrench (force and torque) and not a twist (velocity) ; AuthorAnthony Truchet, CEA, 2006 . Public Member Functions;  Wrench (const Vec3 &force, const Vec3 &torque);  ;  Public Member Functions inherited from sofa::type::SpatialVector< TReal >; void clear ();  ;  SpatialVector ()=default;  ;  SpatialVector (const Vec &l, const Vec &f);  ; SpatialVector & operator+= (const SpatialVector &v);  ; SpatialVector operator* (Real a) const;  ; SpatialVector & operator*= (Real a);  ; SpatialVector operator+ (const SpatialVector &v) const;  ; SpatialVector operator- (const SpatialVector &v) const;  ; SpatialVector operator- () const;  ; Real operator* (const SpatialVector &v) const;  Spatial dot product (cross terms) More...;  ; SpatialVector cross (const SpatialVector &v) const;  Spatial cross product. More...;  ; SpatialVector operator* (const Mat66 &) const;  product with a dense matrix More...;  ; Vec & getLinearVelocity ();  ; const Vec & getLinearVelocity () const;  ; void setLinearVelocity (const Vec &v);  ; Vec & getAngularVelocity ();  ; const Vec & getAngularVelocity () const;  ; void setAngularVelocity (const Vec &v);  ; Vec & getTorque ();  ; const Vec & getTorque () const;  ; void setTorque (const Vec &v);  ; Vec & getForce ();  ; const Vec & getForce () const;  ; void setForce (const Vec &v);  . Additional Inherited Members;  Public Attributes inherited from sofa::type::SpatialVec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench.html:1103,clear,clear,1103,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_wrench.html,1,['clear'],['clear']
Usability,"ncol, B &m);  ; template<class B > ; void getAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, B &m);  ; template<class B > ; void setSubMatrix (Index i, Index j, Index nrow, Index ncol, const B &m);  ; template<class B > ; void setAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, const B &m);  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; template<std::size_t M = N, std::enable_if_t<(M > 3), int > = 0> ; void add (Index row, Index col, const type::Mat< BSIZE, BSIZE, Real > &v);  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:2682,clear,clearRowCol,2682,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,1,['clear'],['clearRowCol']
Usability,"ndex i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; compatibilityMessagesofa::core::behavior::AddToMatrixCompatMatrix< c >static; componentsofa::core::behavior::AddToMatrixCompatMatrix< c >; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html:5370,clear,clearRowCol,5370,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,1,['clear'],['clearRowCol']
Usability,"ndex j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i) overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::ApplyConstraintCompatinlinevirtual; componentsofa::core::behavior::ApplyConstraintCompat; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAcces",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html:5198,clear,clearCols,5198,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat-members.html,1,['clear'],['clearCols']
Usability,"ndex nbCol) override;  Resize the matrix without preserving the data (the matrix is set to zero) More...;  ; Index rowSize (void) const override;  number of rows More...;  ; Index colSize (void) const override;  number of columns More...;  ; void reserve (typename CompressedMatrix::Index reserveSize);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multithreaded. More...;  ; template<class V1 , class V2 > ; void multVector (V1 &output, const V2 &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; template<class V > ; V operator* (const V &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; bool choleskyDecompose ();  Try to compute the LDLT decompositi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:3861,clear,clearCols,3861,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearCols']
Usability,"ndex nbCol) override;  Resize the matrix without preserving the data (the matrix is set to zero) More...;  ; Index rowSize (void) const override;  number of rows More...;  ; Index colSize (void) const override;  number of columns More...;  ; void reserve (typename CompressedMatrix::Index reserveSize);  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void compress () override;  Add the values from the scheduled list, and clears the schedule list. More...;  ; Index * getRowBegin ();  ; Index * getColsIndex ();  ; Real * getColsValue ();  ; void clearRow (Index i) override;  Set all the entries of a row to 0. More...;  ; void clearRows (Index imin, Index imax) override;  Set all the entries of rows imin to imax-1 to 0. More...;  ; void clearCol (Index col) override;  Clears the all the entries of column imin to column imax-1. Not efficient ! More...;  ; void clearCols (Index imin, Index imax) override;  Set all the entries of column i and of row i to 0. Not efficient ! More...;  ; void clearRowCol (Index i) override;  Clears all the entries of rows imin to imax-1 and columns imin to imax-1. More...;  ; void clearRowsCols (Index imin, Index imax) override;  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; void clear () override;  Set all values to 0, by resizing to the same size. More...;  ; void mult (VectorEigen &result, const VectorEigen &data);  Matrix-vector product. More...;  ; void mult_MT (VectorEigen &result, const VectorEigen &data);  Matrix-vector product openmp multithreaded. More...;  ; void multVector (V1 &output, const V2 &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; V operator* (const V &input);  Matrix-Vector product (dense vector with contiguous memory layout) More...;  ; const char * Name ();  ; const char * Name ();  ; bool choleskyDecompose ();  Try to compute the LDLT decomposition, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html:5132,clear,clearCols,5132,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix.html,1,['clear'],['clearCols']
Usability,"ndex row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:5254,clear,clearCols,5254,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,7,['clear'],['clearCols']
Usability,"ndex). ◆ apply(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::apply ; (; const core::MechanicalParams * ; mparams, . OutDataVecCoord & ; dOut, . const InDataVecCoord & ; dIn . ). override . ◆ applyJ(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::applyJ ; (; const core::MechanicalParams * ; mparams, . OutDataVecDeriv & ; dOut, . const InDataVecDeriv & ; dIn . ). override . ◆ applyJT() [1/2]. template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::applyJT ; (; const core::ConstraintParams * ; , . InDataMatrixDeriv & ; dOut, . const OutDataMatrixDeriv & ; dIn . ). override . ◆ applyJT() [2/2]. template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::applyJT ; (; const core::MechanicalParams * ; mparams, . InDataVecDeriv & ; dOut, . const OutDataVecDeriv & ; dIn . ). override . ◆ clear(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::clear ; (; Size ; reserve). ◆ getJ(). template<class TIn , class TOut > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::getJ. override . ◆ getJs(). template<class TIn , class TOut > . const SubsetMapping< TIn, TOut >::js_type * sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::getJs. override . ◆ init(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::init ; (; void ; ). override . ◆ postInit(). template<class TIn , class TOut > . void sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::postInit. ◆ SOFA_CLASS(). template<class TIn , class TOut > . sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::SOFA_CLASS ; (; SOFA_TEMPLATE2(SubsetMapping< TIn, TOut >, TIn, TOut) ; , . SOFA_TEMPLATE2(LinearMapping, TIn, TOut) ;  . ). Enum details. ◆ a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html:8531,clear,clear,8531,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html,1,['clear'],['clear']
Usability,"ndex). ◆ applyConstraint() [1/2]. template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Matrix to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [2/2]. template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ). overridevirtual . Project c to constrained space (c models a constraint).; This method mu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html:24457,clear,clearConstraints,24457,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"ne returned by calling the prepareAdd method. . ◆ getCol(). Index sofa::linearalgebra::BaseMatrix::BlockAccessor::getCol ; (; ); const. inline . ◆ getMatrix() [1/2]. BaseMatrix* sofa::linearalgebra::BaseMatrix::BlockAccessor::getMatrix ; (; ). inline . ◆ getMatrix() [2/2]. const BaseMatrix* sofa::linearalgebra::BaseMatrix::BlockAccessor::getMatrix ; (; ); const. inline . ◆ getRow(). Index sofa::linearalgebra::BaseMatrix::BlockAccessor::getRow ; (; ); const. inline . ◆ isValid(). bool sofa::linearalgebra::BaseMatrix::BlockAccessor::isValid ; (; ); const. inline . ◆ operator=(). void sofa::linearalgebra::BaseMatrix::BlockAccessor::operator= ; (; const BlockAccessor & ; b). inline . ◆ prepareAdd() [1/3]. const double* sofa::linearalgebra::BaseMatrix::BlockAccessor::prepareAdd ; (; double * ; buffer). inline . Prepare the addition of double values to this block. Return a pointer to a double buffer where values can be added. If the in-memory format of the matrix is incompatible, the provided buffer can be used, but the method must clear it before returning. . ◆ prepareAdd() [2/3]. const float* sofa::linearalgebra::BaseMatrix::BlockAccessor::prepareAdd ; (; float * ; buffer). inline . Prepare the addition of float values to this block. Return a pointer to a float buffer where values can be added. If the in-memory format of the matrix is incompatible, the provided buffer can be used, but the method must clear it before returning. . ◆ prepareAdd() [3/3]. const int* sofa::linearalgebra::BaseMatrix::BlockAccessor::prepareAdd ; (; int * ; buffer). inline . Prepare the addition of int values to this block. Return a pointer to a int buffer where values can be added. If the in-memory format of the matrix is incompatible, the provided buffer can be used, but the method must clear it before returning. . ◆ set() [1/4]. void sofa::linearalgebra::BaseMatrix::BlockAccessor::set ; (; const double * ; src). inline . Set all values of this block from the given double buffer. . ◆ set() [2/4",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_1_1_block_accessor.html:7336,clear,clear,7336,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_1_1_block_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_1_1_block_accessor.html,1,['clear'],['clear']
Usability,"ne; blocAdd(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::SparseMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html:6388,clear,clear,6388,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,1,['clear'],['clear']
Usability,"nearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; blockMultTranspose(const TBlock &blockA, const TBlock &blockB)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinestatic; BlockTranspose typedefsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlinestatic; clear()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >; compress()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlineprotected; compressCSR()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inlineprotected; CompressedRowSparseMatrixGeneric()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >inline; CompressedRowSparseMatrixGeneric(Index nbBlockRow, Index nbBlockCol)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBloc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html:4122,clear,clearRowBlock,4122,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic-members.html,1,['clear'],['clearRowBlock']
Usability,"nearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, and sofa::core::behavior::ApplyConstraintCompat. ◆ clearRows(). virtual void sofa::linearalgebra::BaseMatrix::clearRows ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears the value of rows imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ clearRowsCols(). virtual void sofa::linearalgebra::BaseMatrix::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlinevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented in sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, and sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >. ◆ cols(). Index sofa::linearalgebra::BaseMatrix::cols ; (; void ; ); const. inline . Number of columns (Eigen-compatible API) . ◆ colSize(). virtual Index sofa::linearalgebra::BaseMatrix::colSize ; (; void ; ); const. pure virtual . Number of columns.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:39428,clear,clearRows,39428,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearRows']
Usability,"nent::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::m_projectiveConstraints. protected . The list of projective constraints contributing to the matrix assembly. . Function details. ◆ allocateSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::allocateSystem. protectedvirtual . Reimplemented in sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >. ◆ associateLocalMatrixToComponents(). template<class TMatrix , class TVector > . virtual void sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::associateLocalMatrixToComponents ; (; const core::MechanicalParams * ; ). inlineprotectedvirtual . Reimplemented in sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >, and sofa::component::linearsystem::MatrixFreeSystem< TMatrix, TVector >. ◆ clearSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::clearSystem. virtual . Reimplemented in sofa::component::linearsystem::ConstantSparsityPatternSystem< TMatrix, TVector >, and sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >. ◆ copyLocalVectorToGlobalVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::TypedMatrixLinearSystem< GraphScatteredMatrix, GraphScatteredVector >::copyLocalVectorToGlobalVector ; (; core::MultiVecDerivId ; v, . GraphScatteredVector * ; globalVector . ). protected . ◆ copyLocalVectorToGlobalVector() [2/3]. void sofa::component::linearsystem::TypedMatrixLinearSystem< GraphScatteredMatrix, GraphScatteredVector >::copyLocalVectorToGlobalVector ; (; core::MultiVecDerivId ; v, . GraphScatteredVector * ; globalVector . ). protected . ◆ copyLocalVectorToGlobalVector() [3/3]. template<class TMatrix , class TVector > . void sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::copyLocalVectorToGlobalV",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system.html:19761,clear,clearSystem,19761,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system.html,1,['clear'],['clearSystem']
Usability,"ner::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::TetrahedronSetTopo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:5602,clear,clearTriangles,5602,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearTriangles']
Usability,"nervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::top",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:4522,clear,clearEdgesInTriangle,4522,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['clear'],['clearEdgesInTriangle']
Usability,"nestatic; clear(Index i, Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; colSize() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; colsValuesofa::linearalgebra::C",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:14971,clear,clearRowBlock,14971,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clearRowBlock']
Usability,"nevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::DiagonalMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear(Index i)sofa::linearalgebra::DiagonalMatrix< T >inline; clearCol(Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockCons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html:6236,clear,clearRow,6236,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,1,['clear'],['clearRow']
Usability,"ngEnabled (bool _isAnabled)=0;  ; States (save/restore); virtual void saveLastState ()=0;  ; virtual void restoreLastState ()=0;  ; StateLifeCycle makeStateLifeCycle ();  ; Overlay methods; virtual void writeOverlayText (int x, int y, unsigned fontSize, const RGBAColor &color, const char *text)=0;  draw 2D text at position (x,y) from top-left corner More...;  ; virtual void enablePolygonOffset (float factor, float units)=0;  Allow a variable depth offset for polygon drawing. More...;  ; virtual void disablePolygonOffset ()=0;  Remove variable depth offset for polygon drawing. More...;  ; virtual void readPixels (int x, int y, int w, int h, float *rgb, float *z=nullptr)=0;  . Constructor details. ◆ DrawTool(). sofa::helper::visual::DrawTool::DrawTool ; (; ). inline . ◆ ~DrawTool(). virtual sofa::helper::visual::DrawTool::~DrawTool ; (; ). inlinevirtual . ◆ ~StateLifeCycle(). sofa::helper::visual::DrawTool::~StateLifeCycle ; (; ). Function details. ◆ clear(). virtual void sofa::helper::visual::DrawTool::clear ; (; ). inlinevirtual . Reimplemented in sofa::gl::DrawToolGL. ◆ disableBlending(). virtual void sofa::helper::visual::DrawTool::disableBlending ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disableDepthTest(). virtual void sofa::helper::visual::DrawTool::disableDepthTest ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disableLighting(). virtual void sofa::helper::visual::DrawTool::disableLighting ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disablePolygonOffset(). virtual void sofa::helper::visual::DrawTool::disablePolygonOffset ; (; ). pure virtual . Remove variable depth offset for polygon drawing. ; Implemented in sofa::gl::DrawToolGL. ◆ draw3DText(). virtual void sofa::helper::visual::DrawTool::draw3DText ; (; const Vec3 & ; p, . float ; scale, . const RGBAColor & ; color, . const char * ; text . ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ draw3DText_Indices(). virtual void sofa::helper::visual::Draw",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html:9970,clear,clear,9970,api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html,1,['clear'],['clear']
Usability,"ngif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col value of line will be set to zero using default constructor . ◆ clearRowColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowColBlock ; (; Index ; i). inline . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col i and line i values of will be set to zero using default constructor . ◆ colBSize(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::colBSize ; (; ); const. inline . Returnsthe number of col blocks . ◆ compress(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::compress ; (; ). inline . ◆ compressBtemp(). template<typename TBlock , typename TPolicy = CRSDe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:22364,clear,clearRowColBlock,22364,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['clear'],['clearRowColBlock']
Usability,"nics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CoarseToFinesofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >protectedstatic; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField::computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >virtual; computeClassicalMechanicalMatrices(ElementStiffness &K, ElementMass &M, const Index elementIndice, int level)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html:9890,clear,clearLoggedMessages,9890,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"nics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; sofa::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField::computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >virtual; computeClassicalMechanicalMatrices(ElementStiffness &K, ElementMass &M, const Index elementIndice, int level)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >protected; computeElementMas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html:9663,clear,clearLoggedMessages,9663,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,nipulation. /image-registration; ; SOFA – Image Registration. /inverse-model-for-soft-robot-control; ; SOFA – Inverse Model for Soft-Robot Control. /lapgym; ; SOFA – LapGym. /mesh-skeletonization; ; SOFA – Mesh Skeletonization. /micro-parallel-robot; ; SOFA – Micro-Parallel Robot. /migribot-robot; ; SOFA – MiGriBot Robot. /model-order-reduction; ; SOFA – Model Order Reduction. /modern-gui-using-glfw; ; SOFA – Modern GUI using GLFW. /modular-fem-mechanics; ; SOFA – Modular FEM Mechanics. /multi-material-tool; ; SOFA – Multi-Material Tool. /multithreading; ; SOFA – Multithreading. /openigtlink; ; SOFA – OpenIGTLink. /pardiso-contact-solver; ; SOFA – Pardiso Contact Solver. /porous-visco-hyperelasticity; ; SOFA – Porous Visco-Hyperelasticity. /pyqt-widget-for-cameras; ; SOFA – PyQt Widget for Cameras. /python-template-scenes; ; SOFA – Python Template Scenes. /reinforcement-learning-framework; ; SOFA – Reinforcement Learning Framework. /reinforcement-learning-with-domain-randomization; ; SOFA – Reinforcement Learning with Domain Randomization. /rendering-hardware-interface-rhi; ; SOFA – Rendering Hardware Interface (RHI). /shape-matching; ; SOFA – Shape Matching. /shell-elastic-fem; ; SOFA – Shell Elastic FEM. /sofa-godot-basic-renderer; ; SOFA – SOFA & Godot – Basic Renderer. /sofa-unity3d-basic-renderer; ; SOFA – SOFA & Unity3D – Basic Renderer. /sofa-unity3d-full-integration; ; SOFA – SOFA & Unity3D – Full Integration. /sofa-unrealengine-5-basic-renderer; ; SOFA – SOFA & UnrealEngine 5 – Basic Renderer. /soft-rigid-hybrid-arms; ; SOFA – Soft-Rigid Hybrid Arms. /softrobots; ; SOFA – Models and Actuators for Soft-Robots. /tearing; ; SOFA – Tearing. /tetrahedral-mesh-tool; ; SOFA – Tetrahedral Mesh Tool. /timoshenko-beam-catheters; ; SOFA – Timoshenko Beam: catheters. /tutorial-probe-tissue-interaction; ; SOFA – Tutorial: probe-tissue interaction. /ultra-sound-rendering; . /embed; ; Ultra-Sound Rendering – SOFA. SOFA – Ultra-Sound Rendering. /visco-elasticity; ; SOFA – ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:246213,learn,learning-with-domain-randomization,246213,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learning-with-domain-randomization']
Usability,"nit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(sofa::Index index, CollisionModel *model2, sofa::Index index2) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::LineCollisionModel< TDataTypes >inlinestatic; sofa::core::CollisionModel::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::LineCollisionModel< TDataTypes >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::LineCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; creat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html:2884,clear,clearLoggedMessages,2884,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"nitializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::component::collision::response::contact::CollisionResponseprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::collision::response::contact::CollisionResponsevirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; CollisionResponse()sofa::component::collision::response::contact::CollisionResponseprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; contactCreationError(std::stringstream &errorStream, const core::CollisionModel *model1, const core::CollisionModel *model2, std::string &responseUsed)sofa::component::collision::response::contact::CollisionResponseprotected; ContactManager()sofa::core::collision::ContactManagerinlineprotected; ContactMap typedefsofa::component::collision::response::contact::CollisionResponseprotected; contactMapsofa::component::collision::response::contact::CollisionResponseprotected; contactssofa::core::collision::ContactManagerprotected; ContactVector typedefsofa::core::collision::ContactManager; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Messag",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html:2101,clear,clearLoggedMessages,2101,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response-members.html,1,['clear'],['clearLoggedMessages']
Usability,"nitializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::component::collision::response::contact::CollisionResponseprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::collision::response::contact::CollisionResponsevirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; CollisionResponse()sofa::component::collision::response::contact::CollisionResponseprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; contactCreationError(std::stringstream &errorStream, const core::CollisionModel *model1, const core::CollisionModel *model2, std::string &responseUsed)sofa::component::collision::response::contact::CollisionResponseprotected; ContactManager()sofa::core::collision::ContactManagerinlineprotected; contactMapsofa::component::collision::response::contact::CollisionResponseprotected; ContactMap typedefsofa::component::collision::response::contact::CollisionResponseprotected; contactssofa::core::collision::ContactManagerprotected; ContactVector typedefsofa::core::collision::ContactManager; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Messag",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html:2113,clear,clearLoggedMessages,2113,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager-members.html,1,['clear'],['clearLoggedMessages']
Usability,"nitializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransform()sofa::component::io::mesh::SphereLoader; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad()sofa::core::loader::BaseLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::core::loader::BaseLoader; d_messageLogCountsofa::core::objectmodel::Basemutable; d_positionssofa::component::io::mesh::SphereLoader; d_radiussofa::component::io::mesh::SphereLoader; d_rotationsofa::component::io::mesh::SphereLoader; d_scalesofa::component::io::mesh::SphereLoader; d_translationsofa::component::io::mesh::SphereLoader; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_liste",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html:2051,clear,clearLoggedMessages,2051,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader-members.html,1,['clear'],['clearLoggedMessages']
Usability,"nitializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; assembleSystem(const core::MechanicalParams *)sofa::core::behavior::BaseMatrixLinearSystemprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_matrixSizesofa::core::behavior::BaseMatrixLinearSystemprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html:2192,clear,clearLoggedMessages,2192,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system-members.html,1,['clear'],['clearLoggedMessages']
Usability,"nk (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseNode ();  ;  ~BaseNode () override;  ; void setObjectContext (BaseObject::SPtr obj);  Set the context of an object to this. More...;  ; void clearObjectContext (BaseObject::SPtr obj);  Reset the context of an object. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Scene hierarchy; typedef sofa::type::vector< BaseNode * > Children;  ; typedef sofa::type::vector< BaseNode * > Parents;  ; virtual Children getChildren () const =0;  Get a list of child node. More...;  ; virtual Parents getParents () ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html:7279,clear,clearObjectContext,7279,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,1,['clear'],['clearObjectContext']
Usability,"nline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; BlockFullMatrix()sofa::linearalgebra::BlockFullMatrix< N, T >; BlockFullMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BlockFullMatrix< N, T >; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockFullMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html:5633,clear,clear,5633,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,1,['clear'],['clear']
Usability,"nlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeShadowMapSize()sofa::gl::component::shader::Lightprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_attenuationsofa::gl::component::shader::PositionalLight; d_colorsofa::gl::component::shader::Light; d_componentStatesofa::core::objectmodel::Base; d_cutoffsofa::gl::component::shader::SpotLight; d_directionsofa::gl::component::shader::SpotLight; d_drawSourcesofa::gl::component::shader::Light; d_enablesofa::core::visual::VisualModel; d_exponentsofa::gl::component::shader::SpotLight; d_fixedsofa::gl::component::shader::PositionalLight; d_lookatsofa::gl::component::shader::SpotLight; d_messageLogCountsofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html:2589,clear,clearVisual,2589,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,1,['clear'],['clearVisual']
Usability,"nlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeShadowMapSize()sofa::gl::component::shader::Lightprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_attenuationsofa::gl::component::shader::PositionalLight; d_colorsofa::gl::component::shader::Light; d_componentStatesofa::core::objectmodel::Base; d_drawSourcesofa::gl::component::shader::Light; d_enablesofa::core::visual::VisualModel; d_fixedsofa::gl::component::shader::PositionalLight; d_messageLogCountsofa::core::objectmodel::Basemutable; d_modelViewMatrixsofa::gl::component::shader::Light; d_positionsofa::gl::component::shader::PositionalLight; d_projectionMatrixsofa::gl::component::shader::Light; d_shadowFactorsofa::gl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html:2601,clear,clearVisual,2601,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,1,['clear'],['clearVisual']
Usability,"nlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeShadowMapSize()sofa::gl::component::shader::Lightprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::gl::component::shader::Light; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::gl::component::shader::DirectionalLight; d_drawSourcesofa::gl::component::shader::Light; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_modelViewMatrixsofa::gl::component::shader::Light; d_projectionMatrixsofa::gl::component::shader::Light; d_shadowFactorsofa::gl::component::shader::Light; d_shadowsEnabledsofa::gl::component::shader::Light; d_shadowTextureSizesofa::gl::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html:2603,clear,clearVisual,2603,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,1,['clear'],['clearVisual']
Usability,"nlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeShadowMapSize()sofa::gl::component::shader::Lightprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::gl::component::shader::Light; d_componentStatesofa::core::objectmodel::Base; d_drawSourcesofa::gl::component::shader::Light; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_modelViewMatrixsofa::gl::component::shader::Light; d_projectionMatrixsofa::gl::component::shader::Light; d_shadowFactorsofa::gl::component::shader::Light; d_shadowsEnabledsofa::gl::component::shader::Light; d_shadowTextureSizesofa::gl::component::shader::Light; d_softShadowssofa::gl::component:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html:2581,clear,clearVisual,2581,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,1,['clear'],['clearVisual']
Usability,"nlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; BlockFullMatrix()sofa::linearalgebra::BlockFullMatrix< N, T >; BlockFullMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BlockFullMatrix< N, T >; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockFullMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html:5702,clear,clearCol,5702,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,1,['clear'],['clearCol']
Usability,"no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, float value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, double value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value) override;  ; const sofa::type::vector< std::pair< Row, Col > > & getInsertionOrderList () const;  ;  Public Member Functions inherited from sofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (AssemblingMatrixAccumulator, SOFA_TEMPLATE2(sofa::core::MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification));  ; void clear () override;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >);  ; void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy > strategy) override;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const float value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, double value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value) override final;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix.html:2542,clear,clear,2542,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix.html,2,['clear'],['clear']
Usability,"noexcept;  ; const_reverse_iterator crend () const noexcept;  ; std::pair< iterator, bool > insert (const value_type &_Val);  ; iterator erase (const_iterator _Where) noexcept;  ; iterator erase (const_iterator _First, const_iterator _Last) noexcept;  ; std::size_t erase (const Tag &_Keyval) noexcept;  ; void clear () noexcept;  . Constructor details. ◆ TagSet() [1/2]. sofa::core::objectmodel::TagSet::TagSet ; (; ). default . ◆ TagSet() [2/2]. sofa::core::objectmodel::TagSet::TagSet ; (; const Tag & ; t). Automatic conversion between a tag and a tagset composed of this tag. . Function details. ◆ begin() [1/2]. TagSet::const_iterator sofa::core::objectmodel::TagSet::begin ; (; ); const. noexcept . ◆ begin() [2/2]. TagSet::iterator sofa::core::objectmodel::TagSet::begin ; (; ). noexcept . ◆ cbegin(). TagSet::const_iterator sofa::core::objectmodel::TagSet::cbegin ; (; ); const. noexcept . ◆ cend(). TagSet::const_iterator sofa::core::objectmodel::TagSet::cend ; (; ); const. noexcept . ◆ clear(). void sofa::core::objectmodel::TagSet::clear ; (; ). noexcept . ◆ count(). std::size_t sofa::core::objectmodel::TagSet::count ; (; const Tag & ; _Keyval); const. ◆ crbegin(). TagSet::const_reverse_iterator sofa::core::objectmodel::TagSet::crbegin ; (; ); const. noexcept . ◆ crend(). TagSet::const_reverse_iterator sofa::core::objectmodel::TagSet::crend ; (; ); const. noexcept . ◆ empty(). bool sofa::core::objectmodel::TagSet::empty ; (; ); const. noexcept . ◆ end() [1/2]. TagSet::const_iterator sofa::core::objectmodel::TagSet::end ; (; ); const. noexcept . ◆ end() [2/2]. TagSet::iterator sofa::core::objectmodel::TagSet::end ; (; ). noexcept . ◆ erase() [1/3]. std::size_t sofa::core::objectmodel::TagSet::erase ; (; const Tag & ; _Keyval). noexcept . ◆ erase() [2/3]. TagSet::iterator sofa::core::objectmodel::TagSet::erase ; (; const_iterator ; _First, . const_iterator ; _Last . ). noexcept . ◆ erase() [3/3]. TagSet::iterator sofa::core::objectmodel::TagSet::erase ; (; const_iterator ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set.html:2280,clear,clear,2280,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set.html,1,['clear'],['clear']
Usability,"ns;  SOFA_CLASS (PointSplatModel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool isTransparent ();  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::str",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html:1421,clear,clearVisual,1421,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"nsoleMessageHandler and offer static version of ConsoleMessageHandler API. More...;  ; class  DefaultStyleMessageFormatter;  ; class  ExceptionMessageHandler;  ; struct  FileInfo;  ; struct  FileInfoOwningFilename;  To keep a trace (file,line) from where the message have been created. More...;  ; class  FileMessageHandler;  ; class  Message;  ; class  MessageDispatcherImpl;  ; class  MessageDispatcher;  ; class  MessageFormatter;  ; class  MessageHandler;  ; class  SilentMessageHandler;  This class is a MessageHandler that simply do nothing with the message. More...;  ; class  TracyMessageHandler;  Send the message to the Tracy profiler. More...;  ; class  MainTracyMessageHandler;  The MainTracyMessageHandler class contains a singleton to TracyMessageHandler and offer static version of TracyMessageHandler API. More...;  . Typedefs; typedef boost::tokenizer< boost::char_separator< char > > tokenizer;  . Functions; void simpleFormat (size_t jsize, const std::string &text, size_t line_length, std::ostream &wrapped);  simpleFormat a text containing our markdown 'tags' More...;  ; bool notMuted (const sofa::core::objectmodel::Base *t);  ; bool notMuted (sofa::core::objectmodel::Base *t);  ; ComponentInfo::SPtr getComponentInfo (const sofa::core::objectmodel::Base *t);  This construct a new ComponentInfo object from a Base object. More...;  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  ; const ComponentInfo::SPtr getComponentInfo (const std::string &s);  This function is used in the msg_* macro to handle emitting case based on string. More...;  ; const ComponentInfo::SPtr getComponentInfo (const ComponentInfo::SPtr &s);  This function is used in the msg_* macro to handle emitting case based on string. More...;  ; bool notMuted (const ComponentInfo::SPtr &);  ; bool notMuted (const std::string &);  This function is used in the msg_* macro to handle string based on strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:1721,simpl,simpleFormat,1721,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,2,['simpl'],['simpleFormat']
Usability,"nst BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Protected Member Functions; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  ProjectiveConstraintSet (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html:14730,clear,clear,14730,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,1,['clear'],['clear']
Usability,"nst Block & sub (Index i, Index j, Index, Index) const;  ; Block & asub (Index bi, Index bj, Index, Index);  ; Block & sub (Index i, Index j, Index, Index);  ; template<class B > ; void getSubMatrix (Index i, Index j, Index nrow, Index ncol, B &m);  ; template<class B > ; void getAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, B &m);  ; template<class B > ; void setSubMatrix (Index i, Index j, Index nrow, Index ncol, const B &m);  ; template<class B > ; void setAlignedSubMatrix (Index bi, Index bj, Index nrow, Index ncol, const B &m);  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f ma",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:2561,clear,clearCol,2561,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,1,['clear'],['clearCol']
Usability,"nst Data< VecDeriv > * read (core::ConstVecDerivId v) const override;  ; Data< MatrixDeriv > * write (core::MatrixDerivId) override;  ; const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, DataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< DataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html:4862,simpl,simplified,4862,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html,1,['simpl'],['simplified']
Usability,"nst MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  PartialFixedProjectiveConstraint ();  ; virtual ~PartialFixedProjectiveConstraint ();  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int, const VecBool &)> &clear);  ;  Protected Member Functions inherited from sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >;  FixedProjectiveConstraint ();  ; virtual ~FixedProjectiveConstraint ();  ; void checkIndices ();  Function check values of given indices. More...;  ; void computeBBoxForIndices (const type::vector< Index > &indices);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject ()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html:16285,clear,clear,16285,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,1,['clear'],['clear']
Usability,"nst SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html:3318,clear,clearVisual,3318,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute-members.html,1,['clear'],['clearVisual']
Usability,"nst std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; added(DestPtr val, std::size_t)sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>inlineprotectedvirtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; changed(DestPtr before, DestPtr val)sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>inlineprotected; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >inline; const_iterator typedefsofa::simulation::NodeSingle< T, duplicate >; const_reverse_iterator typedefsofa::simulation::NodeSingle< T, duplicate >; Container typedefsofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa::core::objectmodel::BaseLinkstatic; CreateStringPath(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; DestPtr typedefsofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICAT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single-members.html:1460,clear,clear,1460,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single-members.html,1,['clear'],['clear']
Usability,"nst. inline . ◆ clear() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colBSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colBSize ; (; void ; ); const. inline . ◆ colSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t LC, typename T = SReal> . SReal sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ invert(). template<std::size_t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:19858,clear,clearRowCol,19858,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,1,['clear'],['clearRowCol']
Usability,"nst;  ; const ComponentLibrary * getComponent (const std::string &componentName) const;  ; unsigned int getNumComponents () const;  . Protected Member Functions; virtual CategoryLibrary * createCategory (const std::string &category, unsigned int);  ; virtual void addCategory (CategoryLibrary *);  ; void computeNumComponents ();  . Attribute details. ◆ categories. VecCategory sofa::core::SofaLibrary::categories. protected . ◆ exampleFiles. std::vector< std::string > sofa::core::SofaLibrary::exampleFiles. protected . ◆ numComponents. unsigned int sofa::core::SofaLibrary::numComponents. protected . Constructor details. ◆ ~SofaLibrary(). virtual sofa::core::SofaLibrary::~SofaLibrary ; (; ). inlinevirtual . Function details. ◆ addCategory(). void sofa::core::SofaLibrary::addCategory ; (; CategoryLibrary * ; category). protectedvirtual . ◆ build(). void sofa::core::SofaLibrary::build ; (; const std::vector< std::string > & ; examples = std::vector< std::string >()). virtual . ◆ clear(). void sofa::core::SofaLibrary::clear ; (; ). virtual . ◆ computeNumComponents(). void sofa::core::SofaLibrary::computeNumComponents ; (; ). protected . ◆ createCategory(). virtual CategoryLibrary* sofa::core::SofaLibrary::createCategory ; (; const std::string & ; category, . unsigned int ;  . ). inlineprotectedvirtual . ◆ getCategories(). const VecCategory& sofa::core::SofaLibrary::getCategories ; (; ); const. inline . ◆ getCategory(). const CategoryLibrary * sofa::core::SofaLibrary::getCategory ; (; const std::string & ; categoryName); const. ◆ getComponent(). const ComponentLibrary * sofa::core::SofaLibrary::getComponent ; (; const std::string & ; componentName); const. ◆ getComponentDescription(). std::string sofa::core::SofaLibrary::getComponentDescription ; (; const std::string & ; componentName); const. ◆ getNumComponents(). unsigned int sofa::core::SofaLibrary::getNumComponents ; (; ); const. inline . sofacoreSofaLibrary; Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_sofa_library.html:2053,clear,clear,2053,api/master/sofa/html/classsofa_1_1core_1_1_sofa_library.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_sofa_library.html,1,['clear'],['clear']
Usability,"nstraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >virtual; PairInteractionConstraint< DataTypes >::buildConstraintMatrix(const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::PairInteractionConstraint< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< DataTypes >inlinestatic; sofa::core::behavior::BaseInteractionConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; ConstDeriv typedefsofa::core::behavior::BaseConstraint; ConstraintBlockInfo typedefsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; constraintIdsofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >; contactssofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >protected; contact",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html:3605,clear,clear,3605,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint-members.html,1,['clear'],['clear']
Usability,"nstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; clearKeyVelocities()sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_coordinatessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_indicessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_keyTimessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_keyVelocitiessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_messageLogCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html:3317,clear,clearLoggedMessages,3317,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"nstsofa::core::BaseMappingvirtual; areForcesMapped() constsofa::core::BaseMappingvirtual; areMassesMapped() constsofa::core::BaseMappingvirtual; areMatricesMapped() constsofa::core::BaseMappingvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMapping()sofa::core::BaseMappingprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices)sofa::core::BaseMappingvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc)=0sofa::core::BaseMappingpure virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix)sofa::core::BaseMappingvirtual; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; disable()=0sofa::core::BaseMappingpure virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html:3089,clear,clearLoggedMessages,3089,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"nt i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRowCol ; (; Index ; i). inlineoverride . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in scalar. . ◆ colSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ compress(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::compress ; (; ). inlineoverridevirtual . Make the final data setup after adding entries. For most concrete types, this method does nothing. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ copyLower(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:49719,clear,clearRowCol,49719,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearRowCol']
Usability,"nt, SReal);  TO IMPLEMENT. More...;  ; SReal element (int);  ; void resize (int);  ; void operator= (const MultExpr< GraphScatteredMatrix, GraphScatteredVector > &expr);  ;  Public Member Functions inherited from sofa::core::behavior::TMultiVec< V_DERIV >;  TMultiVec (BaseVectorOperations *vop, MyMultiVecId v);  Refers to a state vector with the given ID (VecId::position(), VecId::velocity(), etc). More...;  ;  TMultiVec ();  Refers to a not yet allocated state vector. More...;  ;  TMultiVec (BaseVectorOperations *vop, bool dynamic=true, const VecIdProperties &properties={});  Allocate a new temporary vector with the given type (sofa::core::V_COORD or sofa::core::V_DERIV). More...;  ;  ~TMultiVec ();  ;  operator MyMultiVecId ();  Automatic conversion to the underlying VecId. More...;  ;  operator ConstMyMultiVecId ();  ;  operator AllMultiVecId ();  ;  operator ConstAllMultiVecId ();  ; const MyMultiVecId & id () const;  ; MyMultiVecId & id ();  ; BaseVectorOperations * ops ();  ; void setOps (BaseVectorOperations *op);  ; void realloc (BaseVectorOperations *_vop, bool interactionForceField=false, bool propagate=false, const VecIdProperties &properties={});  ; void clear ();  v = 0 More...;  ; void eq (MyMultiVecId a);  v = a More...;  ; void eq (MyMultiVecId a, SReal f);  v = a*f More...;  ; void eq (AllMultiVecId a, AllMultiVecId b, SReal f=1.0);  v = a+b*f More...;  ; void peq (AllMultiVecId a, SReal f=1.0);  v += a*f More...;  ; void teq (SReal f);  v *= f More...;  ; SReal dot (MyMultiVecId a);  ; void threshold (SReal threshold);  nullify values below given threshold More...;  ; SReal norm ();  ; SReal norm (unsigned l);  ; void operator= (MyMultiVecId a);  v = a More...;  ; void operator= (const TMultiVec< vtype > &a);  v = a More...;  ; void operator+= (MyMultiVecId a);  v += a More...;  ; void operator-= (MyMultiVecId a);  v -= a More...;  ; void operator*= (SReal f);  v *= f More...;  ; void operator/= (SReal f);  v /= f More...;  ; SReal operator* (MyMult",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_graph_scattered_vector.html:1928,clear,clear,1928,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_graph_scattered_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_graph_scattered_vector.html,1,['clear'],['clear']
Usability,"nt::lagrangian::solver::ConstraintProblem::dFree. ◆ dimension. int sofa::component::constraint::lagrangian::solver::ConstraintProblem::dimension. protected . ◆ f. sofa::linearalgebra::FullVector<SReal> sofa::component::constraint::lagrangian::solver::ConstraintProblem::f. ◆ maxIterations. int sofa::component::constraint::lagrangian::solver::ConstraintProblem::maxIterations. ◆ problemId. unsigned int sofa::component::constraint::lagrangian::solver::ConstraintProblem::problemId. protected . ◆ tolerance. SReal sofa::component::constraint::lagrangian::solver::ConstraintProblem::tolerance. ◆ W. sofa::linearalgebra::LPtrFullMatrix<SReal> sofa::component::constraint::lagrangian::solver::ConstraintProblem::W. Constructor details. ◆ ConstraintProblem(). sofa::component::constraint::lagrangian::solver::ConstraintProblem::ConstraintProblem ; (; ). ◆ ~ConstraintProblem(). sofa::component::constraint::lagrangian::solver::ConstraintProblem::~ConstraintProblem ; (; ). virtual . Function details. ◆ clear(). void sofa::component::constraint::lagrangian::solver::ConstraintProblem::clear ; (; int ; nbConstraints). virtual . Reimplemented in sofa::component::constraint::lagrangian::solver::GenericConstraintProblem. ◆ getDfree(). SReal* sofa::component::constraint::lagrangian::solver::ConstraintProblem::getDfree ; (; ). inline . ◆ getDimension(). int sofa::component::constraint::lagrangian::solver::ConstraintProblem::getDimension ; (; ). inline . ◆ getF(). SReal* sofa::component::constraint::lagrangian::solver::ConstraintProblem::getF ; (; ). inline . ◆ getProblemId(). unsigned int sofa::component::constraint::lagrangian::solver::ConstraintProblem::getProblemId ; (; ). ◆ getW(). SReal** sofa::component::constraint::lagrangian::solver::ConstraintProblem::getW ; (; ). inline . ◆ solveTimed(). virtual void sofa::component::constraint::lagrangian::solver::ConstraintProblem::solveTimed ; (; SReal ; tolerance, . int ; maxIt, . SReal ; timeout . ). pure virtual . Implemented in sofa::component:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html:2187,clear,clear,2187,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html,1,['clear'],['clear']
Usability,"nt::performer::BaseAttachBodyPerformer< DataTypes >; This class is a virtualization of attachment performer used to allow the blind use of either ""AttachBodyPerformer"" based on springs and ""ConstraintAttachBodyPerformer"" based on lagrangian constraints. An example of use can be found in the external plugin Sofa.IGTLink in the component ""iGTLinkMouseInteractor"" . Protected Attributes; sofa::core::objectmodel::BaseObject::SPtr m_interactionObject;  ; MouseContactMapper * m_mapper;  ; core::visual::DisplayFlags m_flags;  . Public Member Functions;  BaseAttachBodyPerformer (BaseMouseInteractor *i);  ; virtual ~BaseAttachBodyPerformer ();  ; virtual void start ();  ; virtual void draw (const core::visual::VisualParams *vparams);  ; virtual void clear ();  ; virtual void execute ();  ; sofa::core::objectmodel::BaseObject::SPtr getInteractionObject ();  ; virtual bool startPartial (const BodyPicked &picked)=0;  ;  Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  ;  Static Public Member Functions inherited from sofa::gui::component::performer::TInteractionPerformer< DataTypes >; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html:1328,clear,clear,1328,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,1,['clear'],['clear']
Usability,"nt::projective::PlaneProjectiveConstraint< DataTypes >; BaseType typedefsofa::core::objectmodel::Base; Block typedefsofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; bsize enum valuesofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSizesofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_norm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html:3311,clear,clearConstraints,3311,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint-members.html,1,['clear'],['clearConstraints']
Usability,"nt::topology::utility::TopologyChecker; checkTetrahedronContainer()sofa::component::topology::utility::TopologyChecker; checkTetrahedronToEdgeCrossContainer()sofa::component::topology::utility::TopologyChecker; checkTetrahedronTopology()sofa::component::topology::utility::TopologyChecker; checkTetrahedronToTriangleCrossContainer()sofa::component::topology::utility::TopologyChecker; checkTetrahedronToVertexCrossContainer()sofa::component::topology::utility::TopologyChecker; checkTopology()sofa::component::topology::utility::TopologyChecker; checkTriangleContainer()sofa::component::topology::utility::TopologyChecker; checkTriangleToEdgeCrossContainer()sofa::component::topology::utility::TopologyChecker; checkTriangleTopology()sofa::component::topology::utility::TopologyChecker; checkTriangleToVertexCrossContainer()sofa::component::topology::utility::TopologyChecker; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_eachStepsofa::component::topology::utility::TopologyChecker; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::component::topology::utility::TopologyCheckervirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker-members.html:3729,clear,clearLoggedMessages,3729,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ntSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:5011,clear,clearHexahedraAroundQuad,5011,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearHexahedraAroundQuad']
Usability,ntainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_triangle . m_edgesInTriangle . m_trianglesAroundVertex . m_trianglesAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTriangleTopologyFromDirty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTriangleArray(). void sofa::component::topology::container::dynamic::Tria,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:41388,clear,clearEdgesInTriangle,41388,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clearEdgesInTriangle']
Usability,ntainer_type * operator-> () const;  ; const_container_type & operator* () const;  ; const container_type & ref () const;  this one duplicate operator* More...;  . Attribute details. ◆ vref. template<class T > . container_type* sofa::helper::WriteAccessorVector< T >::vref. protected . Constructor details. ◆ WriteAccessorVector(). template<class T > . sofa::helper::WriteAccessorVector< T >::WriteAccessorVector ; (; container_type & ; container). inline . Function details. ◆ back() [1/2]. template<class T > . reference sofa::helper::WriteAccessorVector< T >::back ; (; ). inline . ◆ back() [2/2]. template<class T > . const_reference sofa::helper::WriteAccessorVector< T >::back ; (; ); const. inline . ◆ begin() [1/2]. template<class T > . iterator sofa::helper::WriteAccessorVector< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<class T > . const_iterator sofa::helper::WriteAccessorVector< T >::begin ; (; ); const. inline . ◆ clear(). template<class T > . void sofa::helper::WriteAccessorVector< T >::clear ; (; ). inline . ◆ emplace_back(). template<class T > . template<class... Args> . reference sofa::helper::WriteAccessorVector< T >::emplace_back ; (; Args &&... ; args). inline . ◆ empty(). template<class T > . bool sofa::helper::WriteAccessorVector< T >::empty ; (; ); const. inline . ◆ end() [1/2]. template<class T > . iterator sofa::helper::WriteAccessorVector< T >::end ; (; ). inline . ◆ end() [2/2]. template<class T > . const_iterator sofa::helper::WriteAccessorVector< T >::end ; (; ); const. inline . ◆ erase() [1/2]. template<class T > . iterator sofa::helper::WriteAccessorVector< T >::erase ; (; const_iterator ; pos). inline . ◆ erase() [2/2]. template<class T > . iterator sofa::helper::WriteAccessorVector< T >::erase ; (; iterator ; pos). inline . ◆ front() [1/2]. template<class T > . reference sofa::helper::WriteAccessorVector< T >::front ; (; ). inline . ◆ front() [2/2]. template<class T > . const_reference sofa::helper::WriteAccessorVector< T >::front ; ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector.html:2616,clear,clear,2616,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector.html,1,['clear'],['clear']
Usability,"ntainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:5530,clear,clearHexahedraAroundVertex,5530,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['clear'],['clearHexahedraAroundVertex']
Usability,"o::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream fatal (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream advice (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static const NullLoggerStream & null ();  ; static MessageDispatcher::LoggerStream log (Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static void process (sofa::helper::logging::Message &m);  . Function details. ◆ addHandler(). int sofa::helper::logging::MessageDispatcher::addHandler ; (; MessageHandler * ; o). static . to add a MessageHandler . ◆ advice(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::advice ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ clearHandlers(). void sofa::helper::logging::MessageDispatcher::clearHandlers ; (; ). static . to remove every MessageHandlers . ◆ deprecated(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::deprecated ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ error(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::error ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ fatal(). MessageDispatcher::LoggerStream sofa::helper::logging::MessageDispatcher::fatal ; (; Message::Class ; mclass, . const ComponentInfo::SPtr & ; cinfo, . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). static . ◆ getHandlers(). std::vector< MessageHandler * > & sofa::helper::logging::MessageDispatcher::getHandlers ; (; ). static . the list of MessageHandlers . ◆ info(). MessageDispatcher::LoggerStr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html:2306,clear,clearHandlers,2306,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,1,['clear'],['clearHandlers']
Usability,"oGroup ();  ; static QString DefaultLogGroup ();  . Protected Member Functions; void addDescriptionItem (QTreeWidgetItem *groupItem, const QString &name, const QString &description);  ; QTreeWidgetItem * findComponent (const QString &component) const;  ; QTreeWidgetItem * findGroup (const QString &component, const QString &group) const;  . Protected Slots; void clearComponentOutput ();  ; void clearComponentWarning ();  . Friends; class GraphHistoryManager;  ; class LinkComponent;  . Constructor details. ◆ QDisplayPropertyWidget(). sofa::gui::qt::QDisplayPropertyWidget::QDisplayPropertyWidget ; (; const ModifyObjectFlags & ; modifyFlags, . QWidget * ; parent = nullptr . ). ◆ ~QDisplayPropertyWidget(). sofa::gui::qt::QDisplayPropertyWidget::~QDisplayPropertyWidget ; (; ). override . Function details. ◆ addComponent(). void sofa::gui::qt::QDisplayPropertyWidget::addComponent ; (; const QString & ; component, . core::objectmodel::Base * ; base, . QTreeWidgetItem * ; listItem, . bool ; clear = true . ). ◆ addData(). void sofa::gui::qt::QDisplayPropertyWidget::addData ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseData * ; data . ). ◆ addDescriptionItem(). void sofa::gui::qt::QDisplayPropertyWidget::addDescriptionItem ; (; QTreeWidgetItem * ; groupItem, . const QString & ; name, . const QString & ; description . ). protected . ◆ addGroup(). void sofa::gui::qt::QDisplayPropertyWidget::addGroup ; (; const QString & ; component, . const QString & ; group . ). ◆ addLink(). void sofa::gui::qt::QDisplayPropertyWidget::addLink ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseLink * ; link . ). ◆ clear(). void sofa::gui::qt::QDisplayPropertyWidget::clear ; (; ). ◆ clearAll(). void sofa::gui::qt::QDisplayPropertyWidget::clearAll ; (; ). ◆ clearComponentOutput. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentOutput ; (; ). protectedslot . ◆ clearComponentWarning. void sofa::gui::qt::Q",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:2408,clear,clear,2408,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,1,['clear'],['clear']
Usability,"oModel;  True to resize the output MechanicalState to match the size of indices. More...;  ; SubsetMappingInternalData< In, Out > data;  ; SingleLink< SubsetMapping< In, Out >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  . Protected Attributes; eigen_type eigen;  ; js_type js;  ; std::unique_ptr< MatrixType > matrixJ;  ; bool updateJ;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(SubsetMapping, TIn, TOut), SOFA_TEMPLATE2(LinearMapping, TIn, TOut));  ; void postInit ();  ; void clear (Size reserve);  ; int addPoint (Index index);  ; void init () override;  ; virtual ~SubsetMapping ();  ; void apply (const core::MechanicalParams *mparams, OutDataVecCoord &dOut, const InDataVecCoord &dIn) override;  ; void applyJ (const core::MechanicalParams *mparams, OutDataVecDeriv &dOut, const InDataVecDeriv &dIn) override;  ; void applyJT (const core::MechanicalParams *mparams, InDataVecDeriv &dOut, const OutDataVecDeriv &dIn) override;  ; void applyJT (const core::ConstraintParams *, InDataMatrixDeriv &dOut, const OutDataMatrixDeriv &dIn) override;  ; const sofa::linearalgebra::BaseMatrix * getJ () override;  ; const js_type * getJs () override;  ;  Public Member Functions inherited from sofa::component::mapping::linear::crtp::CRTPLinearMapping< TMapping >;  SOFA_CLASS (SOFA_TEMPLATE(CRTPLinearMapping, TMapping), TMapping);  ; virtual bool isLinear () const override;  . Protected Member Functions;  SubsetMapping ();  . Attribute details. ◆ d_first. template<class TIn , class TOut > . Data< Index > sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::d_first. first index (use if indices are sequential) . ◆ d_handleTopologyChange. template<class TIn , class TOut > . Data< bool > sofa::component::mapping::linear::SubsetMapping< TIn, TOut >::d_handleTopologyChange. Enable support of topological changes for indices (disable if it is",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html:2430,clear,clear,2430,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_subset_mapping.html,1,['clear'],['clear']
Usability,"oad::LinearForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::LinearForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearKeyForces()sofa::component::mechanicalload::LinearForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; clearPoints()sofa::component::mechanicalload::LinearForceField< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::LinearForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_arrowSizeCoefsofa::component::mechanicalload::LinearForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_forcesofa::component::mechanicalload::LinearForceField< DataTypes >; d_keyForcessofa::component::mechanicalload::LinearForceField< DataTypes >; d_keyTimessofa::component::mechanicalload::LinearForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; datasofa::component::mechanicalload::LinearForceField< DataTypes >protected",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html:5003,clear,clearPoints,5003,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html,1,['clear'],['clearPoints']
Usability,"object. protected . ◆ map_modifyDialogOpened. std::map< void*, QTreeWidgetItem* > sofa::gui::qt::QSofaListView::map_modifyDialogOpened. protected . ◆ map_modifyObjectWindow. std::map< void*, QDialog* > sofa::gui::qt::QSofaListView::map_modifyObjectWindow. protected . ◆ object_. ObjectModel sofa::gui::qt::QSofaListView::object_. protected . ◆ propertyWidget. QDisplayPropertyWidget* sofa::gui::qt::QSofaListView::propertyWidget. protected . Constructor details. ◆ QSofaListView(). sofa::gui::qt::QSofaListView::QSofaListView ; (; const SofaListViewAttribute & ; attribute, . QWidget * ; parent = nullptr, . const char * ; name = nullptr, . Qt::WindowFlags ; f = Qt::WindowType::Widget . ). ◆ ~QSofaListView(). sofa::gui::qt::QSofaListView::~QSofaListView ; (; ). override . Function details. ◆ ActivateNode. void sofa::gui::qt::QSofaListView::ActivateNode ; (; ). protectedslot . ◆ addInPropertyWidget(). void sofa::gui::qt::QSofaListView::addInPropertyWidget ; (; QTreeWidgetItem * ; item, . bool ; clear . ). ◆ Clear(). void sofa::gui::qt::QSofaListView::Clear ; (; sofa::simulation::Node * ; rootNode). ◆ Close. void sofa::gui::qt::QSofaListView::Close ; (; ). signal . ◆ CloseAllDialogs. void sofa::gui::qt::QSofaListView::CloseAllDialogs ; (; ). slot . ◆ collapseNode [1/2]. void sofa::gui::qt::QSofaListView::collapseNode ; (; ). protectedslot . ◆ collapseNode() [2/2]. void sofa::gui::qt::QSofaListView::collapseNode ; (; QTreeWidgetItem * ; item). protected . ◆ collectNodesToChange(). std::list<core::objectmodel::BaseNode*> sofa::gui::qt::QSofaListView::collectNodesToChange ; (; core::objectmodel::BaseNode * ; node). protected . ◆ contextMenuEvent(). void sofa::gui::qt::QSofaListView::contextMenuEvent ; (; QContextMenuEvent * ; event). override . ◆ copyFilePathToClipBoard. void sofa::gui::qt::QSofaListView::copyFilePathToClipBoard ; (; ). protectedslot . ◆ dataModified. void sofa::gui::qt::QSofaListView::dataModified ; (; QString ; ). signal . ◆ DeactivateNode. void sofa::gui::qt::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html:5866,clear,clear,5866,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,1,['clear'],['clear']
Usability,"objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance)=0sofa::core::collision::CollisionAlgorithmprotectedpure virtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html:1987,clear,clearLoggedMessages,1987,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm-members.html,1,['clear'],['clearLoggedMessages']
Usability,"objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool isPaused ()=0;  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html:1532,pause,pause,1532,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,1,['pause'],['pause']
Usability,"objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::EdgeSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; d_checkConnexitysofa::component::topology::container::dynamic::EdgeSetTopologyContainer; d_checkTopologysofa::component::topology::container::dynamic::PointSetTopologyContainer; d_componentStatesofa::core::objectmodel::Base; d_edgesofa::component::topology::container::dy",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html:4115,clear,clearEdgesAroundVertex,4115,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container-members.html,1,['clear'],['clearEdgesAroundVertex']
Usability,"objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGroupsOfComponentAssociatedToMechanicalStates(std::map< PairMechanicalStates, GroupOfComponentsAssociatedToAPairOfMechanicalStates > &groups)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanLocalMatrices()sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; contribute(const core::MechanicalParams *mparams, IndependentContributors &contributors)sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >protected; Contribution typedefsofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVecto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html:3586,clear,clearLoggedMessages,3586,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system-members.html,1,['clear'],['clearLoggedMessages']
Usability,"objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseROI()sofa::component::engine::select::BaseROI< DataTypes >protected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centerssofa::component::engine::select::SphereROI< DataTypes >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) finalsofa::component::engine::select::BaseROI< DataTypes >virtual; Coord typedefsofa::component::engine::select::BaseROI< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::BaseROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_centerssofa::component::engine::select::SphereROI< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computeEdgessofa::component::engine::select::BaseROI< DataTypes >; d_computeHexahedrasofa::component::engine::select::BaseROI< DataTypes >; d_computeQuadssofa::component::engine::select::BaseROI< DataTypes >; d_computeTetrahedrasofa::component::engine::select::BaseROI< DataTypes >; d_computeTrianglessofa::component::engin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html:2825,clear,clearLoggedMessages,2825,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i-members.html,1,['clear'],['clearLoggedMessages']
Usability,"objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies() overridesofa::component::topology::mapping::Tetra2TriangleTopologicalMappingvirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_flipNormalssofa::component::topology::mapping::Tetra2TriangleTopologicalMappingprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_noInitialTrianglessofa::component::topology::mapping::Tetra2TriangleTopologicalMappingprotected; d_noNewTrianglessofa::component::topology::mapping::Tetra2TriangleTopologicalMappingprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2Lo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html:2424,clear,clearLoggedMessages,2424,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"oc() [2/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i, . Index ; j . ); const. inline . ◆ clear() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colBSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colBSize ; (; void ; ); const. inline . ◆ colSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t LC, typename T = SReal> . SReal sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:19716,clear,clearRow,19716,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,1,['clear'],['clearRow']
Usability,"ock, TPolicy >inlinevirtual; bRowsRange() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlinestatic; clear(Index i, Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:14368,clear,clearCol,14368,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clearCol']
Usability,"ockAccessor;  ; class  BlockConstAccessor;  ; class  ColBlockConstIterator;  ; class  InternalBlockAccessor;  ; class  InternalColBlockIterator;  ; class  InternalRowBlockIterator;  ; class  RowBlockConstIterator;  . Public Member Functions;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; virtual Index rowSize (void) const =0;  Number of rows. More...;  ; virtual Index colSize (void) const =0;  Number of columns. More...;  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; virtual SReal element (Index i, Index j) const =0;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void resize (Index nbRow, Index nbCol)=0;  Resize the matrix and reset all values to 0. More...;  ; virtual void clear ()=0;  Reset all values to 0. More...;  ; virtual void set (Index i, Index j, double v)=0;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better per",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:1635,clear,clear,1635,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clear']
Usability,"od. ; Parameters. Lineindex i and column index j . ReturnsBlock value if exist or empty Block if not . ◆ blockMultTranspose(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static auto sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::blockMultTranspose ; (; const TBlock & ; blockA, . const TBlock & ; blockB . ). inlinestatic . ◆ check_matrix() [1/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; ). inline . ◆ check_matrix() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; Index ; nzmax, . Index ; m, . Index ; n, . Index * ; a_p, . Index * ; a_i, . Block * ; a_x . ). inlinestatic . ◆ clear(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clear ; (; ). inline . Completely clear the matrix. ; Warningif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in block. . Warningif ClearByZeros Policy i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:21313,clear,clear,21313,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['clear'],['clear']
Usability,"odel::Base; BarycentricStickContact(CollisionModel1 *model1, CollisionModel2 *model2, Intersection *intersectionMethod)sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionElement1 typedefsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionElement2 typedefsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel1 typedefsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; CollisionModel2 typedefsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Contact()sofa::core::collision::Contactinlineprotected; contactIndexsofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >protected; ContactIndexMap typedefsofa::compon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html:2415,clear,clearLoggedMessages,2415,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact-members.html,1,['clear'],['clearLoggedMessages']
Usability,"odel::Base; buildDampingMatrix(core::behavior::DampingMatrix *matrix) overridesofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *) overridesofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_dampingCoefficientssofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; dampingCoefficientssofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; DataVecCoord typedefsofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; DataVecDeriv ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field-members.html:4851,clear,clearLoggedMessages,4851,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"odel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgeInfosofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_poissonRatiosofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >protected; d_youngModulussofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >protected; DataTypes typedefsofa::core::behavio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html:5649,clear,clearLoggedMessages,5649,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"odel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; backgroundValuesofa::component::io::mesh::VoxelGridLoader; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bppsofa::component::io::mesh::VoxelGridLoaderprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::component::io::mesh::VoxelGridLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::io::mesh::VoxelGridLoadervirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createSegmentation3DTexture(unsigned char **textureData, int &width, int &height, int &depth) overridesofa::component::io::mesh::VoxelGridLoadervirtual; d_activeValuesofa::component::io::mesh::VoxelGridLoader; d_backgroundValuesofa::component::io::mesh::VoxelGridLoader; d_componentStatesofa::core::objectmodel::Base; d_dataResolutionsofa::component::io::mesh::VoxelGridLoader; d_filenamesofa::core::loader::BaseLoader; d_generateHexasofa::component::io::mesh::VoxelGridLoader; d_headerSizesofa::component::io::mesh::VoxelGridLoader; d_id",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html:2704,clear,clear,2704,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader-members.html,1,['clear'],['clear']
Usability,"odelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >virtual; doUpdateInternal()sofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html:3336,clear,clearLoggedMessages,3336,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute-members.html,1,['clear'],['clearLoggedMessages']
Usability,"odelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >virtual; doUpdateInternal()sofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html:3336,clear,clearLoggedMessages,3336,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute-members.html,1,['clear'],['clearLoggedMessages']
Usability,"odelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >virtual; doUpdateInternal()sofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html:3336,clear,clearLoggedMessages,3336,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute-members.html,1,['clear'],['clearLoggedMessages']
Usability,"of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html:13628,clear,clearVisual,13628,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,6,['clear'],"['clear', 'clearVisual']"
Usability,"ofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::apply ; (; typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ applyJ(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::applyJ ; (; typename Out::VecDeriv & ; out, . const typename In::VecDeriv & ; in . ). override . ◆ applyJT() [1/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::applyJT ; (; typename In::MatrixDeriv & ; out, . const typename Out::MatrixDeriv & ; in . ). override . ◆ applyJT() [2/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::applyJT ; (; typename In::VecDeriv & ; out, . const typename Out::VecDeriv & ; in . ). override . ◆ clear(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::clear ; (; std::size_t ; reserve = 0). override . ◆ draw(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::draw ; (; const core::visual::VisualParams * ; vparams, . const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ getJ(). template<class In , class Out > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::getJ ; (; int ; outSize, . int ; inSize . ). override . ◆ getTopology(). template<class In , class Out > . RegularGridTopology* sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::getTopology ; (; ). inline . ◆ init(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperRegularGridTopology< In, Out >::init ; (; const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ is",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html:5319,clear,clear,5319,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_regular_grid_topology.html,1,['clear'],['clear']
Usability,"ofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::checkEdgeMass. ◆ checkMassDensity(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::checkMassDensity. virtual . ◆ checkTopology(). template<class DataTypes , class GeometricalTypes > . sofa::geometry::ElementType sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::checkTopology. protected . ◆ checkTotalMass(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::checkTotalMass. virtual . ◆ checkTotalMassInit(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::checkTotalMassInit. virtual . ◆ checkVertexMass(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::checkVertexMass. virtual . ◆ clear(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::clear. virtual . ◆ computeMass(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::computeMass. Compute the mass from input values. . ◆ copyVertexMass(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::copyVertexMass. Copy the vertex mass scalar (in case of CudaTypes) . ◆ doUpdateInternal(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::doUpdateInternal. overridevirtual . Implementation of the internal update. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::draw ; (; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:43525,clear,clear,43525,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['clear'],['clear']
Usability,"ofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >virtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkOutOfBoundsIndices()sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >protected; checkOutOfBoundsIndices(const VecIndex &indices, const sofa::Size dimension)sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; coord_total_sizesofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >static; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activeDirectionssofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; d_angularStiffnesssofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_drawSpringsofa::component::solidme",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html:5151,clear,clearLoggedMessages,5151,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ofa::component::solidmechanics::spring::SpringForceField< DataTypes >::applyRemovedEdges ; (; const sofa::core::topology::EdgesRemoved * ; edgesRemoved, . sofa::Index ; mstateId . ). protected . ◆ applyRemovedPoints(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::applyRemovedPoints ; (; const sofa::core::topology::PointsRemoved * ; pointsRemoved, . sofa::Index ; mstateId . ). protected . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::clear ; (; sofa::Size ; reserve = 0). ◆ computeBBox(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ; = false . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeSpringDForce(). template<class DataTypes > . DataTypes::DPos sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::computeSpringDForce ; (; VecDeriv & ; df1, . const VecDeriv & ; dx1, . VecDeriv & ; df2, . const VecDeriv & ; dx2, . sofa::Index ; i, . const Spring & ; spring, . SReal ; kFactor, . SReal ; bFactor . ). ◆ computeSpringForce(). template<class DataTypes > . auto sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::computeSpringForce ; (; const VecCoord & ; p1, . c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html:35714,clear,clear,35714,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,1,['clear'],['clear']
Usability,"ofa::component::statecontainer::MechanicalObject< T >, and sofa::component::statecontainer::MappedObject< DataTypes >. ◆ readDx(). template<class TDataTypes > . ReadVecDeriv sofa::core::State< TDataTypes >::readDx ; (; ); const. inline . ◆ readForces(). template<class TDataTypes > . ReadVecDeriv sofa::core::State< TDataTypes >::readForces ; (; ); const. inline . ◆ readNormals(). template<class TDataTypes > . ReadVecDeriv sofa::core::State< TDataTypes >::readNormals ; (; ); const. inline . ◆ readPositions(). template<class TDataTypes > . ReadVecCoord sofa::core::State< TDataTypes >::readPositions ; (; ); const. inline . ◆ readRestPositions(). template<class TDataTypes > . ReadVecCoord sofa::core::State< TDataTypes >::readRestPositions ; (; ); const. inline . ◆ readTotalForces(). template<class TDataTypes > . const AccumulationVecId<TDataTypes, V_DERIV, V_READ>& sofa::core::State< TDataTypes >::readTotalForces ; (; ); const. inline . Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. . ◆ readVelocities(). template<class TDataTypes > . ReadVecDeriv sofa::core::State< TDataTypes >::readVelocities ; (; ); const. inline . ◆ removeFromTotalForces(). template<class TDataTypes > . void sofa::core::State< TDataTypes >::removeFromTotalForces ; (; core::ConstVecDerivId ; forceId). overridevirtual . Reimplemented from sofa::core::BaseState. ◆ SOFA_CLASS(). template<class TDataTypes > . sofa::core::State< TDataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(State< TDataTypes >, TDataTypes) ; , . BaseState< TDataTypes > ;  . ). ◆ write() [1/3]. template<class TDataTypes > . virtual Data< MatrixDeriv >* sofa::core::State< TDataTypes >::write ; (; MatrixDerivId ; v). pure virtual . Implemented in sofa::core::visual::VisualState< DataTypes >, sofa::core::visual::VisualState< defaulttype::Vec3Types >, sofa::component::statecontainer::MappedObject< DataTypes >, sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html:21743,simpl,simplified,21743,api/master/sofa/html/classsofa_1_1core_1_1_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html,1,['simpl'],['simplified']
Usability,"ofa::core::behavior::DampingMatrixAccumulator Member List . This is the complete list of members for sofa::core::behavior::DampingMatrixAccumulator, including all inherited members. add(sofa::SignedIndex, sofa::SignedIndex, float)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex, sofa::SignedIndex, double)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear()sofa::core::MatrixAccumulatorInterfaceinlinevirtual; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual. Generated on Mon Nov 11 2024 03:15:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_damping_matrix_accumulator-members.html:1618,clear,clear,1618,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_damping_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_damping_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,"ofa::core::objectmodel::Base; begin()sofa::core::CollisionModelinline; bMovingsofa::core::CollisionModelprotected; bSelfCollisionsofa::core::CollisionModelprotected; bSimulatedsofa::core::CollisionModelprotected; bwdInit() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(Index, CollisionModel *, Index)sofa::core::CollisionModelinlinevirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; ChildIterator typedefsofa::component::collision::geometry::CubeCollisionModel; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::CubeCollisionModelvirtual; computeContinuousBoundingTree(SReal, int maxDepth=0)sofa::core::CollisionModelinlinevirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createPrevious()sofa::core::CollisionModelinline; Cube classsofa::component::collision::geomet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html:2662,clear,clearLoggedMessages,2662,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >inlinevirtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; Col_Value typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedMatrix typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; CompressedValue typedefsofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >virtual; computeElementStiffness(ElementStiffness &K, const MaterialStiffness &M, const type::Vec< 8, Coord > &nodes, const sofa::Index elementIndice, double stiffnessFactor=1.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html:7257,clear,clearLoggedMessages,7257,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; clearKeyMovements()sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; d_keyMovementssofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; d_keyTimessofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; d_messag",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html:3302,clear,clearKeyMovements,3302,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,1,['clear'],['clearKeyMovements']
Usability,"ofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; clearKeyVelocities()sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_coordinatessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_indicessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_keyTimessofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >; d_keyVelo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html:3206,clear,clearKeyVelocities,3206,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint-members.html,1,['clear'],['clearKeyVelocities']
Usability,"ofa::core::objectmodel::Baseprotected; BaseMeshTopology()sofa::core::topology::BaseMeshTopologyprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInHexahedronArray()sofa::component::topology::container::constant::MeshTopologypro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html:3561,clear,clear,3561,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,2,['clear'],['clear']
Usability,"ofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bindInput(core::visual::VisualParams *)sofa::gl::component::shader::VisualManagerSecondaryPass; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkMultipass(sofa::core::objectmodel::BaseContext *con)sofa::gl::component::shader::VisualManagerPassprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerSecondaryPassvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::VisualManagerPassvirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::shader::VisualManagerSecondaryPassvirtual; drawShadow(const VisualParams *vparams",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html:2745,clear,clearVisual,2745,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass-members.html,1,['clear'],['clearVisual']
Usability,"ofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::component::io::mesh::GridMeshCreatorinlinevirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:4756,clear,clearBuffers,4756,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['clear'],['clearBuffers']
Usability,"ofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGrid()sofa::component::visual::VisualGrid; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::visual::VisualGrid; d_componentStatesofa::core::objectmodel::Base; d_drawsofa::component::visual::VisualGrid; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbSubdivsofa::component::visual::VisualGrid; d_planesofa::component::visual::VisualGrid; d_sizesofa::component::visual::VisualGrid; d_thicknesssofa::component::visual::VisualGrid; doDrawVisual(const core::visual::VisualParams *) overridesofa::component::visual::VisualGridvirtual; doUpdateInternal()sofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html:2453,clear,clearLoggedMessages,2453,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear()=0sofa::linearalgebra::BaseMatrixpure virtual; clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const =0sofa::linearalgebra::BaseMatrixpure virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::l",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html:4982,clear,clearRow,4982,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,1,['clear'],['clearRow']
Usability,"ofa::linearalgebra::FullVector< T >::~FullVector ; (; ). inlineoverride . Function details. ◆ add(). template<typename T > . void sofa::linearalgebra::FullVector< T >::add ; (; Index ; i, . SReal ; v . ). inlineoverridevirtual . Add v to the existing value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ begin() [1/2]. template<typename T > . Iterator sofa::linearalgebra::FullVector< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . ConstIterator sofa::linearalgebra::FullVector< T >::begin ; (; ); const. inline . ◆ capacity(). template<typename T > . Index sofa::linearalgebra::FullVector< T >::capacity ; (; ); const. inline . ◆ checkIndex(). template<typename Real > . void sofa::linearalgebra::FullVector< Real >::checkIndex ; (; Index ; n); const. protected . ◆ clear() [1/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [2/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Real >::clear ; (; Index ; i). overridevirtual . Reset the value of element i to 0. ; Reimplemented from sofa::linearalgebra::BaseVector. ◆ dot(). template<typename Real > . Real sofa::linearalgebra::FullVector< Real >::dot ; (; const FullVector< Real > & ; a); const. Returnsv.a . ◆ element(). template<typename T > . SReal sofa::linearalgebra::FullVector< T >::element ; (; Index ; i); const. inlineoverridevirtual . Read the value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ end() [1/2]. template<typename T > . Iterator sofa::linearalgebra::FullVector< T >::end ; (; ). inline . ◆ end() [2/2]. template<typename T > . ConstIterator sofa::linearalgebra::FullVector< T >::end ; (; ); const. inline . ◆ eq() [1/2]. template<typename Real > . void sofa::linearalgebra::FullVector< Real >::eq ; (; const FullVector< Real > & ; a, . const FullVector< Real > & ; b, . Real ; f = 1.0 . ). v = a+b*f . ◆ eq() [2/2",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html:6725,clear,clear,6725,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,1,['clear'],['clear']
Usability,"ogy::TopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; DynamicSparseGridTopologyModifier()sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifierinlineprotected; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html:8628,clear,clearLoggedMessages,8628,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ogy::TopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgeID typedefsofa::component::topology::container::dynamic::EdgeSetTopologyModifier; EdgesAroundVertex typedefsofa::component::topology::container::dynamic::EdgeSetTo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html:5808,clear,clearLoggedMessages,5808,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier-members.html,3,['clear'],['clearLoggedMessages']
Usability,"ogy::TopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_propagateToDOFsofa::component::topology::container::dynamic::PointSetTopologyModifier; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html:3655,clear,clearLoggedMessages,3655,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ogy::TopologyModifierprotected; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html:2173,clear,clearLoggedMessages,2173,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ogy::container::dynamic::TetrahedronSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; cou",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:5142,clear,clearTetrahedra,5142,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearTetrahedra']
Usability,"ogyContainer ; (; ). protected . ◆ MultilevelHexahedronSetTopologyContainer() [2/2]. sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::MultilevelHexahedronSetTopologyContainer ; (; const type::vector< Hexahedron > & ; hexahedra). protected . ◆ ~MultilevelHexahedronSetTopologyContainer(). sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::~MultilevelHexahedronSetTopologyContainer ; (; ). overrideprotected . Function details. ◆ addTopologyChangeFine(). void sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::addTopologyChangeFine ; (; const core::topology::TopologyChange * ; topologyChange). inline . ◆ beginChangeFine(). std::list<const core::topology::TopologyChange *>::const_iterator sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::beginChangeFine ; (; ); const. inline . ◆ clear(). void sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ endChangeFine(). std::list<const core::topology::TopologyChange *>::const_iterator sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::endChangeFine ; (; ); const. inline . ◆ getChangeListFine(). const std::list<const core::topology::TopologyChange *>& sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::getChangeListFine ; (; ); const. inline . ◆ getCoarseResolution(). const Vec3i& sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::getCoarseResolution ; (; ); const. inline . ◆ getHexaChildren(). MultilevelHexahedronSetTopologyContainer::Index sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer::getHexaChildren ; (; const Index ; hexaId, . ty",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html:49338,clear,clear,49338,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,1,['clear'],['clear']
Usability,"ogyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:5416,clear,clearHexahedraAroundQuad,5416,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['clear'],['clearHexahedraAroundQuad']
Usability,"ogyprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInHexahedronArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInQuadArray()sofa::component::topology::container::constant::MeshTopology",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html:3646,clear,clearLoggedMessages,3646,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology-members.html,2,['clear'],['clearLoggedMessages']
Usability,"oid sofa::linearalgebra::SparseMatrix< T >::addMulTranspose ; (; FullVector< Real2 > & ; res, . const linearalgebra::BaseVector * ; v . ); const. inline . ◆ addMulTranspose() [3/4]. template<typename T > . template<class Real2 > . void sofa::linearalgebra::SparseMatrix< T >::addMulTranspose ; (; linearalgebra::BaseVector * ; res, . const FullVector< Real2 > & ; v . ); const. inline . ◆ addMulTranspose() [4/4]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::addMulTranspose ; (; linearalgebra::BaseVector * ; res, . const linearalgebra::BaseVector * ; v . ); const. inline . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::SparseMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ begin() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ); const. inline . ◆ clear() [1/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both ro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:21421,clear,clear,21421,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,1,['clear'],['clear']
Usability,"oid addDefaultImpl (Index i0, Index n, const T *src);  . Attribute details. ◆ eigenVector. template<class TReal , std::size_t TBlockSize = 1> . VectorEigen sofa::linearalgebra::EigenVector< TReal, TBlockSize >::eigenVector. protected . the data . Constructor details. ◆ EigenVector(). template<class TReal , std::size_t TBlockSize = 1> . sofa::linearalgebra::EigenVector< TReal, TBlockSize >::EigenVector ; (; Index ; nbRow = 0). inline . Function details. ◆ add(). template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::add ; (; Index ; i, . SReal ; v . ). inlineoverridevirtual . Add v to the existing value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [1/2]. template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [2/2]. template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::clear ; (; Index ; i). inlineoverridevirtual . Reset the value of element i to 0. ; Reimplemented from sofa::linearalgebra::BaseVector. ◆ element(). template<class TReal , std::size_t TBlockSize = 1> . SReal sofa::linearalgebra::EigenVector< TReal, TBlockSize >::element ; (; Index ; i); const. inlineoverridevirtual . Read the value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ getVectorEigen() [1/2]. template<class TReal , std::size_t TBlockSize = 1> . VectorEigen& sofa::linearalgebra::EigenVector< TReal, TBlockSize >::getVectorEigen ; (; ). inline . ◆ getVectorEigen() [2/2]. template<class TReal , std::size_t TBlockSize = 1> . const VectorEigen& sofa::linearalgebra::EigenVector< TReal, TBlockSize >::getVectorEigen ; (; ); const. inline . ◆ Name() [1/2]. const std::string sofa::linearalgebra::EigenVector< double >::Name ; (; ). ◆ Name() [2/2]. templa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html:5047,clear,clear,5047,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,1,['clear'],['clear']
Usability,"ol, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; basic linear operations; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:3152,clear,clearRows,3152,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearRows']
Usability,"ol, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:5503,clear,clearRows,5503,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,1,['clear'],['clearRows']
Usability,"ol, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:15659,clear,clearRows,15659,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearRows']
Usability,"ol, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:3228,clear,clearRows,3228,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['clear'],['clearRows']
Usability,"olidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkPoissonRatio()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; checkYoungModulus()sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >virtual; computeElementStiffnessMatrix(StiffnessMatrix &S, StiffnessMatrix &SR, const MaterialStiffness &K, const StrainDisplacement &J, const Transformation &Rot)sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; computeMaterialStiffnesses()sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_initialPointssofa::component::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html:6859,clear,clearLoggedMessages,6859,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,ology::BaseMeshTopology. ◆ checkConnexity(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::checkConnexity ; (; ). overridevirtual . Checks if the topology has only one connected component. ; Get information about connexity of the mesh; Returnstrue if only one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edg,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:39987,clear,clear,39987,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clear']
Usability,"ology::BaseMeshTopologyprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; beginChange() const overridesofa::core::topology::TopologyContainervirtual; beginStateChange() const overridesofa::core::topology::TopologyContainervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity()sofa::core::topology::BaseMeshTopologyinlinevirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::core::topology::BaseMeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; Edge typedefsofa::core::topology::Topology; EdgeID typedefsofa::core::topology::Topology; EdgesAroundVertex typedefsofa::core::topology::BaseMeshTopology; EdgesInHexahedron typedefsofa::core::topology::BaseMeshTopology; EdgesInQuad typedefsofa::core::topology::BaseMeshTopology; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html:3295,clear,clear,3295,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container-members.html,1,['clear'],['clear']
Usability,"ologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::An",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:5302,clear,clearHexahedraAroundEdge,5302,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['clear'],['clearHexahedraAroundEdge']
Usability,"ologyprotected; buildRamifiedFinestLevel()sofa::component::topology::container::grid::SparseGridRamificationTopology; buildVirtualFinerLevels() overridesofa::component::topology::container::grid::SparseGridMultipleTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeIndices(Index oldidx, Index newidx)sofa::component::topology::container::grid::SparseGridRamificationTopology; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingBox(const type::vector< type::Vec3 > &vertices, SReal &xmin, SReal &xmax, SReal &ymin, SReal &ymax, SReal &zmin, SReal &zmax) constsofa::component::topology::container::grid::SparseGridTopologyprotected; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; constructCollisionModels(const sofa::type::vector< sofa::core::topology::BaseMeshTopology * > &list_mesh, const type::vector< Data< type::vector< sofa::type::Vec< 3, T > > > * > &list_X)sofa::component::topology::container::g",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html:9058,clear,clear,9058,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology-members.html,1,['clear'],['clear']
Usability,"ometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices) overridesofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCoordPositionDifference(Direction &r, const Coord_t< In > &a, const Coord_t< In > &b)sofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanical",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html:5045,clear,clearLoggedMessages,5045,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"omponent::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::~LinearVelocityProjectiveConstraint. protectedvirtual . Function details. ◆ addIndex(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::addIndex ; (; Index ; index). ◆ addKeyVelocity(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::addKeyVelocity ; (; Real ; time, . Deriv ; movement . ). add a new key movement Parameters. time: the simulation time you want to set a movement (in sec) ; movement: the corresponding motion for instance, addKeyMovement(1.0, Deriv(5,0,0) ) will set a translation of 5 in x direction a time 1.0s . ◆ clearIndices(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyVelocity . ◆ clearKeyVelocities(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::clearKeyVelocities. ◆ draw(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ). overridevirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:23329,clear,clearKeyVelocities,23329,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,1,['clear'],['clearKeyVelocities']
Usability,"ompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlinestatic; clear(Index i, Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; colSize() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:14908,clear,clearRow,14908,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clearRow']
Usability,on methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInHexahedronArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgesInHexahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for each hexahedron. ; This function is only called if the EdgesInHexahedron array is required. m_edgesInHexahedron[i] contains the 12 indices of the 12 edges of each hexahedron. . ◆ createHexahedraAroundEdgeArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createHexahedraAroundEdgeAr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49917,clear,clearQuadsInHexahedron,49917,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearQuadsInHexahedron']
Usability,"on. int sofa::component::constraint::lagrangian::solver::ConstraintProblem::dimension. protected . ◆ f. sofa::linearalgebra::FullVector<SReal> sofa::component::constraint::lagrangian::solver::ConstraintProblem::f. ◆ maxIterations. int sofa::component::constraint::lagrangian::solver::ConstraintProblem::maxIterations. ◆ problemId. unsigned int sofa::component::constraint::lagrangian::solver::ConstraintProblem::problemId. protected . ◆ tolerance. SReal sofa::component::constraint::lagrangian::solver::ConstraintProblem::tolerance. ◆ W. sofa::linearalgebra::LPtrFullMatrix<SReal> sofa::component::constraint::lagrangian::solver::ConstraintProblem::W. Constructor details. ◆ ConstraintProblem(). sofa::component::constraint::lagrangian::solver::ConstraintProblem::ConstraintProblem ; (; ). ◆ ~ConstraintProblem(). sofa::component::constraint::lagrangian::solver::ConstraintProblem::~ConstraintProblem ; (; ). virtual . Function details. ◆ clear(). void sofa::component::constraint::lagrangian::solver::ConstraintProblem::clear ; (; int ; nbConstraints). virtual . Reimplemented in sofa::component::constraint::lagrangian::solver::GenericConstraintProblem. ◆ getDfree(). SReal* sofa::component::constraint::lagrangian::solver::ConstraintProblem::getDfree ; (; ). inline . ◆ getDimension(). int sofa::component::constraint::lagrangian::solver::ConstraintProblem::getDimension ; (; ). inline . ◆ getF(). SReal* sofa::component::constraint::lagrangian::solver::ConstraintProblem::getF ; (; ). inline . ◆ getProblemId(). unsigned int sofa::component::constraint::lagrangian::solver::ConstraintProblem::getProblemId ; (; ). ◆ getW(). SReal** sofa::component::constraint::lagrangian::solver::ConstraintProblem::getW ; (; ). inline . ◆ solveTimed(). virtual void sofa::component::constraint::lagrangian::solver::ConstraintProblem::solveTimed ; (; SReal ; tolerance, . int ; maxIt, . SReal ; timeout . ). pure virtual . Implemented in sofa::component::constraint::lagrangian::solver::LCPConstraintProblem, and",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html:2269,clear,clear,2269,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html,1,['clear'],['clear']
Usability,"on::TetrahedronDiffusionFEMForceField< DataTypes >, sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >, sofa::component::mechanicalload::TrianglePressureForceField< DataTypes >, sofa::component::mechanicalload::TrianglePressureForceField< T >, and sofa::component::mechanicalload::QuadPressureForceField< DataTypes >. ◆ addMBKdx(). void sofa::core::behavior::BaseForceField::addMBKdx ; (; const MechanicalParams * ; mparams, . MultiVecDerivId ; dfId . ). virtual . Accumulate the contribution of M, B, and/or K matrices multiplied by the dx vector with the given coefficients. ; This method computes . where M is the mass matrix (associated with inertial forces), K is the stiffness matrix (associated with forces which derive from a potential), and B is the damping matrix (associated with viscous forces).; Very often, at least one of these matrices is null. In most cases only one of these matrices will be non-null for a given component. For forcefields without mass it simply calls addDForce.; Parameters. mparams; mparams->readDx() is the input vector; mparams->mFactor() is the coefficient for mass contributions (i.e. second-order derivatives term in the ODE); sofa::core::mechanicalparams::bFactor(mparams) is the coefficient for damping contributions (i.e. first derivatives term in the ODE); mparams->kFactor() is the coefficient for stiffness contributions (i.e. DOFs term in the ODE) . dfIdthe output vector . Reimplemented in sofa::core::behavior::Mass< DataTypes >, and sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >. ◆ addMBKToMatrix(). void sofa::core::behavior::BaseForceField::addMBKToMatrix ; (; const MechanicalParams * ; mparams, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). virtual . Compute the system matrix corresponding to . ; Parameters. mparams; mparams->mFactor() is the coefficient for mass contributions (i.e. second-order derivatives term in the ODE); sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html:24100,simpl,simply,24100,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,1,['simpl'],['simply']
Usability,"on::common::MechanicalOperations::MechanicalOperations ; (; const core::MechanicalParams * ; mparams, . core::objectmodel::BaseContext * ; ctx, . bool ; precomputedTraversalOrder = false . ). ◆ MechanicalOperations() [2/2]. sofa::simulation::common::MechanicalOperations::MechanicalOperations ; (; const core::ExecParams * ; params, . core::objectmodel::BaseContext * ; ctx, . bool ; precomputedTraversalOrder = false . ). Function details. ◆ accFromF(). void sofa::simulation::common::MechanicalOperations::accFromF ; (; core::MultiVecDerivId ; a, . core::ConstMultiVecDerivId ; f . ). a = M^-1 . f ; Parameters. fa = M^-1 . f . ◆ addMBK_ToMatrix(). void sofa::simulation::common::MechanicalOperations::addMBK_ToMatrix ; (; const sofa::core::behavior::MultiMatrixAccessor * ; matrix, . SReal ; mFact, . SReal ; bFact, . SReal ; kFact . ). ◆ addMBKdx(). void sofa::simulation::common::MechanicalOperations::addMBKdx ; (; core::MultiVecDerivId ; df, . SReal ; m, . SReal ; b, . SReal ; k, . bool ; clear = true, . bool ; accumulate = true . ). accumulate $ df += (m M + b B + k K) dx $ (given the latest propagated displacement) . ◆ addMBKv(). void sofa::simulation::common::MechanicalOperations::addMBKv ; (; core::MultiVecDerivId ; df, . SReal ; m, . SReal ; b, . SReal ; k, . bool ; clear = true, . bool ; accumulate = true . ). accumulate $ df += (m M + b B + k K) velocity $ . ◆ addMdx(). void sofa::simulation::common::MechanicalOperations::addMdx ; (; core::MultiVecDerivId ; res, . core::MultiVecDerivId ; dx, . SReal ; factor = 1.0 . ). res += factor M.dx . ◆ addSeparateGravity(). void sofa::simulation::common::MechanicalOperations::addSeparateGravity ; (; SReal ; dt, . core::MultiVecDerivId ; result = core::VecDerivId::velocity() . ). Add dt*Gravity to the velocity. . ◆ baseVector2MultiVector(). void sofa::simulation::common::MechanicalOperations::baseVector2MultiVector ; (; const linearalgebra::BaseVector * ; src, . core::MultiVecId ; dest, . const sofa::core::behavior::MultiMatrixA",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:9129,clear,clear,9129,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['clear'],['clear']
Usability,one connected component; Get information about connexity of the mesh ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_triangle . m_edgesInTriangle . m_trianglesAroundVertex . m_trianglesAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTriangleTopologyFromDirty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::co,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:41233,clear,clearBorderElementLists,41233,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clearBorderElementLists']
Usability,"onent::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotectedvirtual; createEdgesInHexahedronArray()sofa::component::topology::container::dynamic::HexahedronSetTopolog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:5393,clear,clearQuadsAroundEdge,5393,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,3,['clear'],['clearQuadsAroundEdge']
Usability,onentsTimeMax. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTimeMax. protected . ◆ componentsTimeTotal. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTimeTotal. protected . ◆ controlPanel. QVisitorControlPanel* sofa::gui::qt::WindowVisitor::controlPanel. protected . ◆ icons. QPixmap * sofa::gui::qt::WindowVisitor::icons. staticprotected . ◆ statsWidget. QWidget* sofa::gui::qt::WindowVisitor::statsWidget. ◆ typeOfCharts. QComboBox* sofa::gui::qt::WindowVisitor::typeOfCharts. protected . ◆ visitorsTime. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTime. protected . ◆ visitorsTimeMax. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTimeMax. protected . ◆ visitorsTimeTotal. std::vector< dataTime > sofa::gui::qt::WindowVisitor::visitorsTimeTotal. protected . Constructor details. ◆ WindowVisitor(). sofa::gui::qt::WindowVisitor::WindowVisitor ; (; QWidget * ; parent). Function details. ◆ clearGraph. void sofa::gui::qt::WindowVisitor::clearGraph ; (; ). inlineslot . ◆ closeEvent. void sofa::gui::qt::WindowVisitor::closeEvent ; (; QCloseEvent * ; ). inlineslot . ◆ collapseNode [1/2]. void sofa::gui::qt::WindowVisitor::collapseNode ; (; ). slot . ◆ collapseNode() [2/2]. void sofa::gui::qt::WindowVisitor::collapseNode ; (; QTreeWidgetItem * ; item). ◆ expandNode [1/2]. void sofa::gui::qt::WindowVisitor::expandNode ; (; ). slot . ◆ expandNode() [2/2]. void sofa::gui::qt::WindowVisitor::expandNode ; (; QTreeWidgetItem * ; item). ◆ focusOn. void sofa::gui::qt::WindowVisitor::focusOn ; (; QString ; focus). slot . ◆ getComponentType. static componentType sofa::gui::qt::WindowVisitor::getComponentType ; (; std::string ; name). inlinestaticslot . ◆ getPixmap. static QPixmap* sofa::gui::qt::WindowVisitor::getPixmap ; (; componentType ; t). inlinestaticslot . ◆ rightClick. void sofa::gui::qt::WindowVisitor::rightClick ; (; const QPoint & ; point). slot . ◆ setCharts(). void sofa::gui::qt::WindowVisitor::setCharts ; (; ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html:3146,clear,clearGraph,3146,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html,1,['clear'],['clearGraph']
Usability,"onst DataVecCoord &x2) override;  ; void getConstraintViolation (const ConstraintParams *cParams, BaseVector *v, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2) override;  ; void getVelocityViolation (BaseVector *v, const DataVecCoord &x1, const DataVecCoord &x2, const DataVecDeriv &v1, const DataVecDeriv &v2);  ; void getConstraintResolution (const ConstraintParams *cParams, std::vector< ConstraintResolution * > &resTab, unsigned int &offset) override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void clear (int reserve=0);  ; virtual void addContact (Deriv norm, Coord P, Coord Q, Real contactDistance, int m1, int m2, Coord Pfree, Coord Qfree, long id=0, PersistentID localid=0);  ; void addContact (Deriv norm, Coord P, Coord Q, Real contactDistance, int m1, int m2, long id=0, PersistentID localid=0);  ; void addContact (Deriv norm, Real contactDistance, int m1, int m2, long id=0, PersistentID localid=0);  ; void removeContact (int objectId, SubsetIndices indices);  Method to remove a contact using point. More...;  ; virtual type::vector< std::string > getBilateralInteractionIdentifiers ();  ; virtual type::vector< std::string > getPairInteractionIdentifiers () override final;  ; SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_MODEL_API void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_MODEL_API void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_MODEL_API void getConstraintResolution (const ConstraintParams *cParams, std::vector< ConstraintResolution * > &resTab, unsigned int &offset);  ; SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_MODE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:5148,clear,clear,5148,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,1,['clear'],['clear']
Usability,"onst core::MechanicalParams *mparams, DataVecDeriv &data_f1, DataVecDeriv &data_f2, const DataVecCoord &data_x1, const DataVecCoord &data_x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ; sofa::type::vector< Spring > * getSprings ();  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void clear (int reserve=0);  ; void addSpring (const Spring &s);  ; void addSpring (int m1, int m2, Real softKst, Real softKsr, Real kd);  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void ad",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html:4107,clear,clear,4107,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,1,['clear'],['clear']
Usability,"onst linearalgebra::BaseVector * ; src, . core::MultiVecId ; dest, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). ◆ computeAcc(). void sofa::simulation::common::MechanicalOperations::computeAcc ; (; SReal ; t, . core::MultiVecDerivId ; a, . core::MultiVecCoordId ; x, . core::MultiVecDerivId ; v . ). Compute a(x,v) at time t. Parameters x and v not const due to propagation through mappings. . ◆ computeContactAcc(). void sofa::simulation::common::MechanicalOperations::computeContactAcc ; (; SReal ; t, . core::MultiVecDerivId ; a, . core::MultiVecCoordId ; x, . core::MultiVecDerivId ; v . ). ◆ computeContactDf(). void sofa::simulation::common::MechanicalOperations::computeContactDf ; (; core::MultiVecDerivId ; df). ◆ computeContactForce(). void sofa::simulation::common::MechanicalOperations::computeContactForce ; (; core::MultiVecDerivId ; result). ◆ computeDf(). void sofa::simulation::common::MechanicalOperations::computeDf ; (; core::MultiVecDerivId ; df, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force delta (given the latest propagated displacement) . ◆ computeDfV(). void sofa::simulation::common::MechanicalOperations::computeDfV ; (; core::MultiVecDerivId ; df, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force delta (given the latest propagated velocity) . ◆ computeEnergy(). void sofa::simulation::common::MechanicalOperations::computeEnergy ; (; SReal & ; kineticEnergy, . SReal & ; potentialEnergy . ). Compute Energy. ; Apply projective constraints to the given velocity vector. . ◆ computeForce() [1/2]. void sofa::simulation::common::MechanicalOperations::computeForce ; (; core::MultiVecDerivId ; result, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force (given the latest propagated position and velocity) . ◆ computeForce() [2/2]. void sofa::simulation::common::MechanicalOperations::computeForce ; (; SReal ; t, . core::MultiVecDerivId ; f, . core::MultiVe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:11021,clear,clear,11021,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['clear'],['clear']
Usability,"onst noexcept;  Special const access to first element. More...;  ; constexpr real & y () noexcept;  Special access to second element. More...;  ; constexpr const real & y () const noexcept;  Special const access to second element. More...;  ; constexpr real & z () noexcept;  Special access to third element. More...;  ; constexpr const real & z () const noexcept;  Special const access to third element. More...;  ; constexpr real & w () noexcept;  Special access to fourth element. More...;  ; constexpr const real & w () const noexcept;  Special const access to fourth element. More...;  ; constexpr void operator= (const real r1) noexcept;  Specific Assignment operator for 1-element vectors. More...;  ; constexpr void operator= (const real2 *p) noexcept;  Assignment operator from an array of values. More...;  ; constexpr void operator= (const Vec< M, real2 > &v) noexcept;  Assignment from a vector with different dimensions. More...;  ; constexpr void assign (const real &value) noexcept;  ; constexpr void clear () noexcept;  Sets every element to 0. More...;  ; constexpr void fill (real r) noexcept;  Sets every element to r. More...;  ; constexpr real & operator() (Size i) noexcept;  Access to i-th element. More...;  ; constexpr const real & operator() (Size i) const noexcept;  Const access to i-th element. More...;  ; constexpr const real * ptr () const noexcept;  Cast into a const array of values. More...;  ; constexpr real * ptr () noexcept;  Cast into an array of values. More...;  ; constexpr void getsub (const Size i, Vec< N2, real > &m) const noexcept;  ; constexpr void getsub (const Size i, real &m) const noexcept;  ; constexpr Vec< N, real > mulscalar (const real f) const noexcept;  ; constexpr Vec< N, real > mulscalar (const real2 f) const noexcept;  Multiplication by a scalar f. More...;  ; constexpr Vec< N, real > operator* (const real2 f) const noexcept;  ; constexpr real operator* (const Vec< N, real2 > &v) const noexcept;  Dot product. More...;  ; constexpr ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html:3260,clear,clear,3260,api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html,1,['clear'],['clear']
Usability,"onstraint matrix, including the projection from the mapped DoFs ReturnsThe number of constraints, i.e. the size of the constraint matrix . ◆ buildLocalConstraintMatrix(). void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::buildLocalConstraintMatrix ; (; const core::ConstraintParams * ; cparams, . unsigned int & ; constraintId . ). protected . Call the method buildConstraintMatrix on all the BaseConstraintSet. . ◆ cleanup(). void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::cleanup ; (; ). overridevirtual . Called just before deleting this object Any object in the tree below this object that are to be removed will be removed only after this call, so any references this object holds should still be valid. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::constraint::lagrangian::solver::GenericConstraintSolver. ◆ clearConstraintCorrections(). void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::clearConstraintCorrections ; (; ). protected . ◆ getConstraintProblem(). virtual ConstraintProblem* sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::getConstraintProblem ; (; ). pure virtual . Implemented in sofa::component::constraint::lagrangian::solver::LCPConstraintSolver, and sofa::component::constraint::lagrangian::solver::GenericConstraintSolver. ◆ getConstraintViolation(). void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::getConstraintViolation ; (; const core::ConstraintParams * ; cparams, . sofa::linearalgebra::BaseVector * ; v . ). protected . ◆ init(). void sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::constraint::lagrangian::solver::GenericConstraintSolver. ◆ lo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html:17824,clear,clearConstraintCorrections,17824,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,1,['clear'],['clearConstraintCorrections']
Usability,"onstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; clearKeyMovements()sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; d_keyMovementssofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; d_keyTimessofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_relativeMovementssofa::component::constraint::projective::Line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html:3412,clear,clearLoggedMessages,3412,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"onstsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear()=0sofa::linearalgebra::BaseMatrixpure virtual; clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const =0sofa::linearalgebra::BaseMatrixpure virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html:5045,clear,clearRowCol,5045,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,1,['clear'],['clearRowCol']
Usability,ontainer::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInHexahedronArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgesInHexahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for each hexahedron. ; This function is only called if the EdgesInHexahedron arra,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49707,clear,clearHexahedraAroundQuad,49707,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearHexahedraAroundQuad']
Usability,"op-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool hasTriangles () const;  ; bool hasEdgesInTriangle () const;  ; bool hasTrianglesAroundVertex () const;  ; bool hasTrianglesAroundEdge () const;  ; bool hasBorderElementLists () const;  ; void createElementsOnBorder ();  : Create element lists which are on topology border: More...;  ; void reOrientateTriangle (TriangleID id) override;  Will change order of vertices in triangle: t[1] <=> t[2]. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addEdge (Index, Index) override;  ; void addTriangle (Index a, Index b, Index c) override;  . const SeqTriangles & getTriangles () override;  Returns the quad array. More...;  ; const Triangle getTriangle (TriangleID i) override;  Returns the triangle corresponding to the TriangleID i. More...;  ; TriangleID getTriangleIndex (PointID v1, PointID v2, PointID v3) override;  Returns the index of the triangle given three vertex indices; returns InvalidID if no triangle exists. More...;  ; const EdgesInTriangle & getEdgesInTriangle (TriangleID id) override;  Returns the 3 edges adjacent to a given triangle. More...;  ; const TrianglesAroundVertex & getTrianglesAroundVertex (PointID id) override;  Returns the set of triangles adjacent to a given vertex. More...;  ; const TrianglesAroundEdge & getTrianglesAroundEdge (EdgeID id) override;  Returns the set of triangles adjacent to a given edge. More...;  ; int getVertexIndexInTriangle (const Triangle &t, PointID vertexIndex) const override;  Returns the index (either 0, 1 ,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:6517,clear,clear,6517,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clear']
Usability,"operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; Template Parameters. TDataTypesType of DOFs stored in the State . Public Member Functions; Deriv operator[] (Size i) const;  ; void addToContributingVecIds (core::ConstVecDerivId vecDerivId);  The provided VecDerivId container will contribute in the cumulative sum. More...;  ; void removeFromContributingVecIds (core::ConstVecDerivId vecDerivId);  ;  AccumulationVecId (const State< TDataTypes > &state);  ;  AccumulationVecId ()=delete;  . Constructor details. ◆ AccumulationV",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:1800,simpl,simplified,1800,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,1,['simpl'],['simplified']
Usability,"opertyWidget::~QDisplayPropertyWidget ; (; ). override . Function details. ◆ addComponent(). void sofa::gui::qt::QDisplayPropertyWidget::addComponent ; (; const QString & ; component, . core::objectmodel::Base * ; base, . QTreeWidgetItem * ; listItem, . bool ; clear = true . ). ◆ addData(). void sofa::gui::qt::QDisplayPropertyWidget::addData ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseData * ; data . ). ◆ addDescriptionItem(). void sofa::gui::qt::QDisplayPropertyWidget::addDescriptionItem ; (; QTreeWidgetItem * ; groupItem, . const QString & ; name, . const QString & ; description . ). protected . ◆ addGroup(). void sofa::gui::qt::QDisplayPropertyWidget::addGroup ; (; const QString & ; component, . const QString & ; group . ). ◆ addLink(). void sofa::gui::qt::QDisplayPropertyWidget::addLink ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseLink * ; link . ). ◆ clear(). void sofa::gui::qt::QDisplayPropertyWidget::clear ; (; ). ◆ clearAll(). void sofa::gui::qt::QDisplayPropertyWidget::clearAll ; (; ). ◆ clearComponentOutput. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentOutput ; (; ). protectedslot . ◆ clearComponentWarning. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentWarning ; (; ). protectedslot . ◆ DefaultDataGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultDataGroup ; (; ). inlinestatic . ◆ DefaultInfoGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultInfoGroup ; (; ). inlinestatic . ◆ DefaultLinkGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLinkGroup ; (; ). inlinestatic . ◆ DefaultLogGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLogGroup ; (; ). inlinestatic . ◆ findComponent(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findComponent ; (; const QString & ; component); const. protected . ◆ findGroup(). QTreeWidgetItem * sofa::gui::qt::QDisplayPrope",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:3163,clear,clear,3163,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,1,['clear'],['clear']
Usability,opology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerp,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:4986,clear,clearEdgesInHexahedron,4986,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['clear'],['clearEdgesInHexahedron']
Usability,"opology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer, sofa::component::topology::container::dynamic::EdgeSetTopologyContainer, and sofa::component::topology::container::constant::MeshTopology. ◆ checkTopology(). virtual bool sofa::core::topology::BaseMeshTopology::checkTopology ; (; ); const. inlinevirtual . Checks if the topology is coherent. ; Returnstrue if so. Should be override by child class. ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::PointSetTopologyContainer, sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clear(). void sofa::core::topology::BaseMeshTopology::clear ; (; ). virtual . Procedural creation methods ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::PointSetTopologyContainer, sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer, sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer, sofa::component::topology::container::dynamic::EdgeSetTopologyContainer, and sofa::component::topology::container::constant::MeshTopology. ◆ endChange(). std::list< const TopologyChange * >::const_iterator sofa::core::topology::BaseMeshTopology::endChange ; (; ); const. virtual . Provides an iterator on the last element in the list of TopologyChange objects. ; Reimplemented in sofa::core::topology::TopologyContainer. ◆ endStateChange(). ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html:30277,clear,clear,30277,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,1,['clear'],['clear']
Usability,"or a, iterator b);  Swap two values in the list. Uses a const_cast to violate the read-only iterators. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>;  MultiLink ();  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init);  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~MultiLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get (std::size_t index) const;  ; DestType * operator[] (std::size_t index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html:1564,clear,clear,1564,api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html,1,['clear'],['clear']
Usability,"or::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::DefaultAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; beginIntegration(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; behaviorUpdatePosition(const sofa::core::ExecParams *params, SReal dt) constsofa::simulation::DefaultAnimationLoopprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; collisionDetection(const sofa::core::ExecParams *params) constsofa::simulation::DefaultAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingBox(const sofa::core::ExecParams *params) constsofa::simulation::DefaultAnimationLoopprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; d_parallelODESolvingsofa::simulation::DefaultAnimationLoop; DefaultAnimationLoop(simulation::Node *gnode=nullptr)sofa::simulation::DefaultAnimationLoopexplicitprotected; doUpdateInternal()sofa::core::objectmodel::BaseO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html:2556,clear,clearLoggedMessages,2556,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,"or::BaseProjectiveConstraintSet. ◆ applyConstraint() [2/3]. template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ fixAllDOFs(). template<class DataTypes > . bool sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::fixAllDOFs ; (; ); const. inline . ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html:24308,clear,clearConstraints,24308,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"or::DampingMatrix *) finalsofa::component::mechanicalload::LinearForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::LinearForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearKeyForces()sofa::component::mechanicalload::LinearForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; clearPoints()sofa::component::mechanicalload::LinearForceField< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::LinearForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_arrowSizeCoefsofa::component::mechanicalload::LinearForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_forcesofa::component::mechanicalload::LinearForceField< DataTypes >; d_keyForcessofa::component::mechanicalload::LinearForceField< DataTypes >; d_keyTimessofa::component::mechanicalload::LinearForceField< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; datasofa::component::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html:4945,clear,clearLoggedMessages,4945,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"or::NoIndexVerification >inline; MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >::add(const matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inlineprotectedvirtual; MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >::add(const matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inlineprotectedvirtual; AssemblingMappedMatrixAccumulator()sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >protected; clear() overridesofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >; ComponentType typedefsofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >; contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >static; GetCustomTemplateName()sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >inlinestatic; getMatrix() constsofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >; indexCheckedAdd(sofa::SignedIndex row, sofa::SignedIndex col, const T &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inlineprotected; indexVerificationStrategysofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >; m_mappedMatrixsofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >protected; Ma",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator-members.html:5900,clear,clear,5900,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_mapped_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,"orceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkEdgeMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; checkMassDensity()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; checkTopology()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >protected; checkTotalMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; checkTotalMassInit()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; checkVertexMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >virtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; Coord typedefsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; copyVertexMass()sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMassOnRestsofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_edgeMasssofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; d_lumpingsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html:8043,clear,clear,8043,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass-members.html,1,['clear'],['clear']
Usability,"orceField< DataTypes >::addKToMatrix ; (; const sofa::core::MechanicalParams * ; mparams, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). overridevirtual . Compute the system matrix corresponding to . ; Parameters. mparamsmparams->kFactor() is the coefficient for stiffness contributions (i.e. DOFs term in the ODE) ; matrixthe matrix to add the result to . Implements sofa::core::behavior::BaseForceField. ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clear(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::clear ; (; sofa::Size ; reserve = 0). ◆ draw(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getContact(). template<class DataTypes > . const type::vector< Contact >& sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::getContact ; (; ); const. inline . ◆ getPotentialEnergy(). template<class DataTypes > . SReal sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::getPotentialEnergy ; (; const sofa::core::MechanicalParams * ; mparams, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2 . ); const. overridevirtual . Get the potent",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html:25708,clear,clear,25708,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,1,['clear'],['clear']
Usability,"ord > > WriteOnlyVecCoord;  ; typedef helper::ReadAccessor< Data< Deriv > > ReadDeriv;  ; typedef helper::WriteAccessor< Data< Deriv > > WriteDeriv;  ; typedef helper::WriteOnlyAccessor< Data< Deriv > > WriteOnlyDeriv;  ; typedef helper::ReadAccessor< Data< VecDeriv > > ReadVecDeriv;  ; typedef helper::WriteAccessor< Data< VecDeriv > > WriteVecDeriv;  ; typedef helper::WriteOnlyAccessor< Data< VecDeriv > > WriteOnlyVecDeriv;  ; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< TDataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  State ();  ;  ~State () override;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html:13547,simpl,simplified,13547,api/master/sofa/html/classsofa_1_1core_1_1_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html,1,['simpl'],['simplified']
Usability,"ore::BaseMappingvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMapping()sofa::core::BaseMappingprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices)sofa::core::BaseMappingvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_componentStatesofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html:3675,clear,clearLoggedMessages,3675,api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ore::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; CIRCLE enum valuesofa::component::io::mesh::GIDMeshLoaderprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::io::mesh::GIDMeshLoader; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:4870,clear,clearLoggedMessages,4870,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; Color typedefsofa::gl::component::rendering2d::OglColorMap; Color3 typedefsofa::gl::component::rendering2d::OglColorMap; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorSchemesofa::gl::component::rendering2d::OglColorMap; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_legendOffsetsofa::gl::component::rendering2d::OglColorMap; d_legendRangeScalesofa::gl::component::rendering2d::OglColorMap; d_legendSizesofa::gl::component::rendering2d::OglColorMap; d_legendTitlesofa::gl::component::rendering2d::OglColorMap; d_maxsofa::gl::component::rendering2d::OglColorMap; d_messageLogCountsofa::core::obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html:2483,clear,clearVisual,2483,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; colorsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computePlaneSeparations()sofa::gl::component::rendering3d::SlicedVolumetricModelprotected; Coord typedefsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html:3705,clear,clearVisual,3705,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::visual::TrailRenderer< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::visual::TrailRenderer< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbStepssofa::component::visual::TrailRenderer< DataTypes >; d_positionsofa::component::visual::TrailRenderer< DataTypes >; d_thicknesssofa::component::visual::TrailRenderer< DataTypes >; doDrawVisual(const core::visual::VisualParams *vparams) overridesofa::component::visual::TrailRenderer< DataTypes >virtual; doUpdateInternal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html:2495,clear,clearVisual,2495,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *, SReal *, SReal *, bool)sofa::core::visual::VisualLoopinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawStep(sofa::core::visual::VisualParams *)sofa::core::visual::VisualLoopinlinevirtual; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html:2453,clear,clearVisual,2453,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_alignmentsofa::gl::component::rendering3d::OglSceneFrame; d_componentStatesofa::core::objectmodel::Base; d_drawFramesofa::gl::component::rendering3d::OglSceneFrame; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_stylesofa::gl::component::rendering3d::OglSceneFrame; d_viewportSizesofa::gl::component::rendering3d::OglSceneFrame; doDrawVisual(const core::visual::VisualParams *) overridesofa::gl::component::rendering3d::OglSceneFramevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualP",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html:2487,clear,clearVisual,2487,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_axissofa::component::visual::LineAxis; d_componentStatesofa::core::objectmodel::Base; d_drawsofa::component::visual::LineAxis; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_sizesofa::component::visual::LineAxis; d_thicknesssofa::component::visual::LineAxis; doDrawVisual(const core::visual::VisualParams *) overridesofa::component::visual::LineAxisvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::component::visual::LineAxisvirtual; draw(const core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html:2459,clear,clearVisual,2459,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::visual::Visual3DText; d_componentStatesofa::core::objectmodel::Base; d_depthTestsofa::component::visual::Visual3DText; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_positionsofa::component::visual::Visual3DText; d_scalesofa::component::visual::Visual3DText; d_textsofa::component::visual::Visual3DText; doDrawVisual(const core::visual::VisualParams *vparams) overridesofa::component::visual::Visual3DTextvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html:2467,clear,clearVisual,2467,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::gl::component::rendering2d::OglLabel; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_fontsizesofa::gl::component::rendering2d::OglLabel; d_labelsofa::gl::component::rendering2d::OglLabel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_prefixsofa::gl::component::rendering2d::OglLabel; d_selectContrastingColorsofa::gl::component::rendering2d::OglLabel; d_suffixsofa::gl::component::rendering2d::OglLabel; d_updateLabelEveryNbStepssofa::gl::component::rendering2d::OglLabel; d_visiblesofa::gl::component::rendering2d::OglLabel; d_xso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html:2477,clear,clearVisual,2477,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::rendering2d::OglViewportvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::rendering2d::OglViewportvirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::rendering2d::OglViewportvirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html:2483,clear,clearVisual,2483,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< DataTypes >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< DataTypes >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html:2499,clear,clearVisual,2499,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< float >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< float >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html:2483,clear,clearVisual,2483,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::vis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:2479,clear,clearVisual,2479,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec2f >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec2f >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html:2485,clear,clearVisual,2485,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec3f >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec3f >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html:2485,clear,clearVisual,2485,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec4f >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec4f >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html:2485,clear,clearVisual,2485,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const Visua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html:2481,clear,clearVisual,2481,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const Visua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html:2481,clear,clearVisual,2481,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const Visua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html:2481,clear,clearVisual,2481,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const V",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:2493,clear,clearVisual,2493,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,4,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const V",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html:2495,clear,clearVisual,2495,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,10,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html:2499,clear,clearVisual,2499,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawSh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html:2497,clear,clearVisual,2497,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawSh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html:2497,clear,clearVisual,2497,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawSh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html:2497,clear,clearVisual,2497,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::PostProcessManagervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::shader::PostProcessManagervirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualMod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html:2487,clear,clearVisual,2487,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawScene(VisualParams *)sofa::core::visual::VisualManagerinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::vis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html:2459,clear,clearVisual,2459,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; exportOBJ(std::string, std::ostream *, std::ostr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html:2455,clear,clearVisual,2455,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html,1,['clear'],['clearVisual']
Usability,"ore::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const core::visual::VisualParams *vparams) overridesofa::gl::component::rendering3d::PointSplatModelvirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvirtual; export",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html:2491,clear,clearVisual,2491,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,1,['clear'],['clearVisual']
Usability,"ork for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes > Class Template Referenceabstract . #include <MechanicalStateForceFeedback.h>. Inheritance diagram for sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >:. [legend]. Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MechanicalStateForceFeedback, TDataTypes), ForceFeedback);  ; virtual void computeForce (const VecCoord &state, VecDeriv &forces)=0;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void computeForce (SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) override=0;  ; void computeWrench (const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &) override=0;  ; void setReferencePosition (sofa::type::Transform< SReal > &) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html:1454,feedback,feedback,1454,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html,1,['feedback'],['feedback']
Usability,"oryName) const;  ; const ComponentLibrary * getComponent (const std::string &componentName) const;  ; unsigned int getNumComponents () const;  . Protected Member Functions; virtual CategoryLibrary * createCategory (const std::string &category, unsigned int);  ; virtual void addCategory (CategoryLibrary *);  ; void computeNumComponents ();  . Attribute details. ◆ categories. VecCategory sofa::core::SofaLibrary::categories. protected . ◆ exampleFiles. std::vector< std::string > sofa::core::SofaLibrary::exampleFiles. protected . ◆ numComponents. unsigned int sofa::core::SofaLibrary::numComponents. protected . Constructor details. ◆ ~SofaLibrary(). virtual sofa::core::SofaLibrary::~SofaLibrary ; (; ). inlinevirtual . Function details. ◆ addCategory(). void sofa::core::SofaLibrary::addCategory ; (; CategoryLibrary * ; category). protectedvirtual . ◆ build(). void sofa::core::SofaLibrary::build ; (; const std::vector< std::string > & ; examples = std::vector< std::string >()). virtual . ◆ clear(). void sofa::core::SofaLibrary::clear ; (; ). virtual . ◆ computeNumComponents(). void sofa::core::SofaLibrary::computeNumComponents ; (; ). protected . ◆ createCategory(). virtual CategoryLibrary* sofa::core::SofaLibrary::createCategory ; (; const std::string & ; category, . unsigned int ;  . ). inlineprotectedvirtual . ◆ getCategories(). const VecCategory& sofa::core::SofaLibrary::getCategories ; (; ); const. inline . ◆ getCategory(). const CategoryLibrary * sofa::core::SofaLibrary::getCategory ; (; const std::string & ; categoryName); const. ◆ getComponent(). const ComponentLibrary * sofa::core::SofaLibrary::getComponent ; (; const std::string & ; componentName); const. ◆ getComponentDescription(). std::string sofa::core::SofaLibrary::getComponentDescription ; (; const std::string & ; componentName); const. ◆ getNumComponents(). unsigned int sofa::core::SofaLibrary::getNumComponents ; (; ); const. inline . sofacoreSofaLibrary; Generated on Mon Nov 11 2024 03:14:10 for SOFA API b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_sofa_library.html:2014,clear,clear,2014,api/master/sofa/html/classsofa_1_1core_1_1_sofa_library.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_sofa_library.html,1,['clear'],['clear']
Usability,"oth FEM and PDE/ODE Solvers?. /why-no-one-answered-my-question%EF%BC%9F; . /feed; ; [SOLVED] Why no one answered my question？ – SOFA. SOFA - Topic: [SOLVED] Why no one answered my question？. /windows-10-gtx-970-download-install-execute-crash-wtf; . /feed; ; windows 10, gtx 970, download, install, execute, crash, wtf ? – SOFA. SOFA - Topic: windows 10, gtx 970, download, install, execute, crash, wtf ?. /windows-compile-error-msbuild-exe-sofa-17-12; ; SOFA - Topic: Windows compile error – MSBuild.exe (sofa 17.12). /windows-dependency-pack-for-vs-2019; ; SOFA - Topic: [SOLVED] Windows Dependency Pack for VS 2019. /windows-documentation-still-up-to-date; . /feed; ; [SOLVED] Windows documentation – still up to date? – SOFA. SOFA - Topic: [SOLVED] Windows documentation – still up to date?. /wonder-about-fem-model-for-bending-flat-element; ; SOFA - Topic: [SOLVED] Wonder about FEM model for REISSNER-MINDLIN FLAT SHELL. /working-example-on-simple-suturing-with-suturepointperformer; ; SOFA - Topic: [SOLVED] Working example on simple suturing with SuturePointPerformer. /working-with-obj-files-in-sofa; ; SOFA - Topic: [SOLVED] Working with .obj-files in SOFA. /write-an-xml-file-with-sofa; ; SOFA - Topic: Write an XML file with SOFA. /writing-a-scene-in-cpp-fails; ; SOFA - Topic: Writing a scene in cpp fails. /wrong-msh-file; ; SOFA - Topic: Wrong msh file. /topic-tag; . /16-12-compilation; . /feed; ; 16.12 compilation – SOFA. SOFA - Topic Tag: 16.12 compilation. /2012_beta; . /feed; ; 2012_beta – SOFA. SOFA - Topic Tag: 2012_beta. /2d; . /feed; ; 2D – SOFA. SOFA - Topic Tag: 2D. /32_bits; . /feed; ; 32_bits – SOFA. /page; . /2; ; SOFA - Topic Tag: 32_bits. /3; ; SOFA - Topic Tag: 32_bits. /4; ; SOFA - Topic Tag: 32_bits. SOFA - Topic Tag: 32_bits. /3d; . /feed; ; 3D – SOFA. SOFA - Topic Tag: 3D. /3d-mesh; . /feed; ; 3D mesh – SOFA. SOFA - Topic Tag: 3D mesh. /3d-model; . /feed; ; 3d Model – SOFA. SOFA - Topic Tag: 3d Model. /3d-printing; . /feed; ; 3D printing – SOFA. SOFA - T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:422280,simpl,simple-suturing-with-suturepointperformer,422280,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['simpl'],"['simple', 'simple-suturing-with-suturepointperformer']"
Usability,oundVertex . m_trianglesAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTriangleTopologyFromDirty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTriangleArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgesInTriangleArray ; (; ). protectedvirtual . Creates the array of edge indices for each triangle. ; This function is only called if the EdgesInTriangle array is required. m_edgesInTriangle[i] contains the 3 indices of the 3 edges composing the ith trian,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:41674,clear,clearTrianglesAroundEdge,41674,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clearTrianglesAroundEdge']
Usability,"outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::io::mesh::OffSequenceLoader; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html:4863,clear,clearLoggedMessages,4863,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,1,['clear'],['clearLoggedMessages']
Usability,"override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html:1942,clear,clearVisual,1942,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,54,['clear'],"['clear', 'clearVisual']"
Usability,"overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class TDataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [1/2]. SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< defaulttype::Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init() [2/2]. template<class DataTypes > . void sofa::component::constraint::projective::LinearMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ interpolatePo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:27755,clear,clearKeyMovements,27755,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['clear'],['clearKeyMovements']
Usability,"owerTriangularBlock = true;  ; static constexpr int matrixType = 1;  ;  Static Public Attributes inherited from sofa::linearalgebra::CRSDefaultPolicy; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) More...;  ; static constexpr bool OrderedInsertion = false;  Set to true if insertion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Attribute details. ◆ CompressZeros. constexpr bool sofa::linearalgebra::CRSMechanicalPolicy::CompressZeros = false. staticconstexpr . ◆ IsAlwaysSquare. constexpr bool sofa::linearalgebra::CRSMechanicalPolicy::IsAlwaysSquare = true. staticconstexpr . ◆ IsAlwaysSymmetric. constexpr bool sofa::linearalgebra::CRSMechanicalPolicy::IsAlwaysSymmetric = true. staticconstexpr . ◆ matrixType. constexpr int sofa::linearalgebra::CRSMechanicalPolicy::matrixType = 1. s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_mechanical_policy.html:1761,clear,clear,1761,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_mechanical_policy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_c_r_s_mechanical_policy.html,2,['clear'],"['clear', 'clearing']"
Usability,"owerTriangularBlock = true;  ; static constexpr int matrixType = 1;  ;  Static Public Attributes inherited from sofa::linearalgebra::CRSDefaultPolicy; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) More...;  ; static constexpr bool OrderedInsertion = false;  Set to true if insertion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Public Member Functions;  CompressedRowSparseMatrixMechanical ();  ;  CompressedRowSparseMatrixMechanical (Index nbRow, Index nbCol);  ; void compress () override;  ; void swap (Matrix &m);  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void fullDiagonal ();  Make sure all diagonal entries are present even if they are zero. More...;  ; Index rowSize () const override;  Mathematical size of the matrix. More...;  ; Index colSize ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:3671,clear,clear,3671,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,2,['clear'],"['clear', 'clearing']"
Usability,"p);  ; void addData (const QString &component, const QString &group, sofa::core::objectmodel::BaseData *data);  ; void addLink (const QString &component, const QString &group, sofa::core::objectmodel::BaseLink *link);  ; void setDescription (const QString &component, const QString &group, sofa::core::objectmodel::Base *base);  ; void setConsoleOutput (const QString &component, const QString &group, sofa::core::objectmodel::Base *base);  ; void clear ();  ; void clearAll ();  . Static Public Member Functions; static QString DefaultDataGroup ();  ; static QString DefaultLinkGroup ();  ; static QString DefaultInfoGroup ();  ; static QString DefaultLogGroup ();  . Protected Member Functions; void addDescriptionItem (QTreeWidgetItem *groupItem, const QString &name, const QString &description);  ; QTreeWidgetItem * findComponent (const QString &component) const;  ; QTreeWidgetItem * findGroup (const QString &component, const QString &group) const;  . Protected Slots; void clearComponentOutput ();  ; void clearComponentWarning ();  . Friends; class GraphHistoryManager;  ; class LinkComponent;  . Constructor details. ◆ QDisplayPropertyWidget(). sofa::gui::qt::QDisplayPropertyWidget::QDisplayPropertyWidget ; (; const ModifyObjectFlags & ; modifyFlags, . QWidget * ; parent = nullptr . ). ◆ ~QDisplayPropertyWidget(). sofa::gui::qt::QDisplayPropertyWidget::~QDisplayPropertyWidget ; (; ). override . Function details. ◆ addComponent(). void sofa::gui::qt::QDisplayPropertyWidget::addComponent ; (; const QString & ; component, . core::objectmodel::Base * ; base, . QTreeWidgetItem * ; listItem, . bool ; clear = true . ). ◆ addData(). void sofa::gui::qt::QDisplayPropertyWidget::addData ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseData * ; data . ). ◆ addDescriptionItem(). void sofa::gui::qt::QDisplayPropertyWidget::addDescriptionItem ; (; QTreeWidgetItem * ; groupItem, . const QString & ; name, . const QString & ; description . ). protec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:1775,clear,clearComponentOutput,1775,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,2,['clear'],"['clearComponentOutput', 'clearComponentWarning']"
Usability,"pSparseMatrix< T > &sc);  write to an output stream More...;  ; std::istream & operator>> (std::istream &in, MapMapSparseMatrix< T > &sc);  read from an input stream More...;  . Attribute details. ◆ m_data. template<class T > . SparseMatrix sofa::defaulttype::MapMapSparseMatrix< T >::m_data. protected . Data container. . Function details. ◆ addLine(). template<class T > . std::pair< RowIterator, bool > sofa::defaulttype::MapMapSparseMatrix< T >::addLine ; (; KeyType ; lIndex, . RowType ; row . ). inline . ReturnsPair of Iterator on specified row and boolean on true if addition took place ; Parameters. lIndexrow Index ; rowconstraint itself If lindex doesn't exists, creates the row . ◆ begin() [1/2]. template<class T > . RowIterator sofa::defaulttype::MapMapSparseMatrix< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<class T > . RowConstIterator sofa::defaulttype::MapMapSparseMatrix< T >::begin ; (; ); const. inline . ◆ clear(). template<class T > . void sofa::defaulttype::MapMapSparseMatrix< T >::clear ; (; ). inline . Removes every matrix elements. . ◆ empty(). template<class T > . bool sofa::defaulttype::MapMapSparseMatrix< T >::empty ; (; ); const. inline . Returnstrue if the matrix is empty . ◆ end() [1/2]. template<class T > . RowIterator sofa::defaulttype::MapMapSparseMatrix< T >::end ; (; ). inline . ◆ end() [2/2]. template<class T > . RowConstIterator sofa::defaulttype::MapMapSparseMatrix< T >::end ; (; ); const. inline . ◆ multTransposeBaseVector(). template<class T > . template<class VecDeriv > . void sofa::defaulttype::MapMapSparseMatrix< T >::multTransposeBaseVector ; (; VecDeriv & ; res, . const sofa::linearalgebra::BaseVector * ; lambda . ); const. inline . ◆ newLine(). template<class T > . RowIterator sofa::defaulttype::MapMapSparseMatrix< T >::newLine ; (; ). inline . ReturnsIterator on new allocated row Creates a new row in the sparse matrix with the last+1 key index . ◆ readLine(). template<class T > . RowConstIterator sofa::defaulttype::MapM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix.html:2409,clear,clear,2409,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix.html,1,['clear'],['clear']
Usability,"parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, BaseObjectDescription &desc);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; void SOFA_SIMPLEAPI_API dumpScene (NodeSPtr root);  ; template<class T > ; std::string str (const T &t);  . Function Documentation. ◆ cleanup(). SOFA_SIMPLEAPI_API void sofa::simpleapi::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. . ◆ createChild() [1/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:3618,simpl,simpleapi,3618,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,1,['simpl'],['simpleapi']
Usability,"pe, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > > Class Template Reference . #include <WriteOnlyAccessor.h>. Inheritance diagram for sofa::helper::WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >:. [legend]. Public Member Functions;  WriteOnlyAccessor (container_type &c);  ;  Public Member Functions inherited from sofa::helper::WriteAccessorVector< VectorLikeType >;  WriteAccessorVector (container_type &container);  ; bool empty () const;  ; Size size () const;  ; void reserve (Size s);  ; reference operator[] (Size pos);  ; const_reference operator[] (Size pos) const;  ; reference front ();  ; const_reference front () const;  ; reference back ();  ; const_reference back () const;  ; const_iterator begin () const;  ; iterator begin ();  ; const_iterator end () const;  ; iterator end ();  ; void clear ();  ; void resize (Size s);  ; iterator insert (const_iterator pos, const VectorLikeType &value);  ; iterator erase (iterator pos);  ; iterator erase (const_iterator pos);  ; void push_back (const value_type &v);  ; reference emplace_back (Args &&... args);  ; void pop_back ();  ;  operator container_type ();  ; container_type * operator-> ();  ; const_container_type * operator-> () const;  ; container_type & operator* ();  ; const_container_type & operator* () const;  ; container_type & wref ();  ;  operator const_container_type () const;  ; const container_type & ref () const;  this one duplicate operator* More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::WriteAccessorVector< VectorLikeType >; container_type * vref;  . Constructor details. ◆ WriteOnlyAccessor(). tem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_0182c0cdde284d988a289939f4832128c2.html:1230,clear,clear,1230,api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_0182c0cdde284d988a289939f4832128c2.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_0182c0cdde284d988a289939f4832128c2.html,1,['clear'],['clear']
Usability,"pedefsofa::core::objectmodel::Base; BtLeft enum valuesofa::component::controller::MechanicalStateController< DataTypes >protected; BtMiddle enum valuesofa::component::controller::MechanicalStateController< DataTypes >protected; BtRight enum valuesofa::component::controller::MechanicalStateController< DataTypes >protected; buttonDevicesofa::component::controller::MechanicalStateController< DataTypes >protected; buttonDeviceStatesofa::component::controller::MechanicalStateController< DataTypes >protected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Controller()sofa::component::controller::Controllerprotected; Coord typedefsofa::component::controller::MechanicalStateController< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_buttonDeviceStatesofa::component::controller::MechanicalStateController< DataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_handleEventTriggersUpdatesofa::component::controller::Controllerprotected; d_indexsofa::component::controller::MechanicalStateController< DataTypes >protected; d_mainDirectionsofa::component::controller::MechanicalStateController< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_onl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller-members.html:2598,clear,clearLoggedMessages,2598,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller-members.html,1,['clear'],['clearLoggedMessages']
Usability,"pedefsofa::core::objectmodel::Base; beginChange() constsofa::core::topology::BaseMeshTopologyvirtual; beginStateChange() constsofa::core::topology::BaseMeshTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centersofa::component::topology::container::constant::SphereQuadTopologyprotected; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInHexahedronArray()sofa::component::topology::container::constant::MeshTopologyprotected; createEdgesInQuadArray()sofa::component::topology::container::constant::MeshTopology",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html:3741,clear,clearLoggedMessages,3741,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"pedefsofa::core::objectmodel::Base; buildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices) overridesofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< true >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html:5083,clear,clear,5083,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html,1,['clear'],['clear']
Usability,"pename T > . template<class Real2 > . void sofa::linearalgebra::SparseMatrix< T >::addMulTranspose ; (; linearalgebra::BaseVector * ; res, . const FullVector< Real2 > & ; v . ); const. inline . ◆ addMulTranspose() [4/4]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::addMulTranspose ; (; linearalgebra::BaseVector * ; res, . const linearalgebra::BaseVector * ; v . ); const. inline . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::SparseMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ begin() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ); const. inline . ◆ clear() [1/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::SparseMatrix< T >::colSize ; (; void ; ); const. inlin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:21614,clear,clear,21614,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,1,['clear'],['clear']
Usability,"pes >inlinevirtual; bwdInit()sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >virtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< TDataTypes >inlinestatic; sofa::core::behavior::BaseInteractionConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cidsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::StateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Coord typedefsofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionConstraint< TDataTypes >inlinestatic; d_activatesofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTyp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html:5086,clear,clearLoggedMessages,5086,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"pes >virtual; ProjectiveConstraintSet< TDataTypes >::projectPosition(const MechanicalParams *mparams, MultiVecCoordId xId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; projectResponse(const core::MechanicalParams *mparams, DataVecDeriv &resData) overridesofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId)=0sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; sofa::core::behavior::BaseProjectiveConstraintSet::projectResponse(const MechanicalParams *, double **)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; projectResponseT(DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear)sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >protected; projectVelocity(const core::MechanicalParams *mparams, DataVecDeriv &vData) overridesofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectVelocity(const MechanicalParams *mparams, MultiVecDerivId vId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; Ptr typedefsofa::core::objectmodel::Base; Real typedefsofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html:13312,clear,clear,13312,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint-members.html,1,['clear'],['clear']
Usability,"physics simuation. sofa::core::MappingMatrixAccumulator Member List . This is the complete list of members for sofa::core::MappingMatrixAccumulator, including all inherited members. add(sofa::SignedIndex, sofa::SignedIndex, float)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex, sofa::SignedIndex, double)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear()sofa::core::MatrixAccumulatorInterfaceinlinevirtual; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual. Generated on Mon Nov 11 2024 03:13:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping_matrix_accumulator-members.html:1598,clear,clear,1598,api/master/sofa/html/classsofa_1_1core_1_1_mapping_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,pic Tag: fix. /fixedconstraint; . /feed; ; FixedConstraint – SOFA. SOFA - Topic Tag: FixedConstraint. /fixed-constraint; . /feed; ; fixed constraint – SOFA. SOFA - Topic Tag: fixed constraint. /fixedconstraint-genericconstraintsolver; . /feed; ; fixedconstraint GenericConstraintSolver – SOFA. SOFA - Topic Tag: fixedconstraint GenericConstraintSolver. /fixedtranslationconstraint; . /feed; ; FixedTranslationConstraint – SOFA. SOFA - Topic Tag: FixedTranslationConstraint. /flexible; . /feed; ; Flexible – SOFA. SOFA - Topic Tag: Flexible. /flexible-manipulator; . /feed; ; flexible manipulator – SOFA. SOFA - Topic Tag: flexible manipulator. /fluid; . /feed; ; Fluid – SOFA. SOFA - Topic Tag: Fluid. /fluid-simulation; . /feed; ; fluid simulation – SOFA. SOFA - Topic Tag: fluid simulation. /force; . /feed; ; force – SOFA. SOFA - Topic Tag: force. /forcefeedback; . /feed; ; ForceFeedback – SOFA. SOFA - Topic Tag: ForceFeedback. /force-feedback; . /feed; ; force feedback – SOFA. SOFA - Topic Tag: force feedback. /forcefield; . /feed; ; Forcefield – SOFA. SOFA - Topic Tag: Forcefield. /force-field; . /feed; ; force field – SOFA. SOFA - Topic Tag: force field. /forcefields; . /feed; ; Forcefields – SOFA. SOFA - Topic Tag: Forcefields. /forcefiled; . /feed; ; forcefiled – SOFA. SOFA - Topic Tag: forcefiled. /forces; . /feed; ; forces – SOFA. SOFA - Topic Tag: forces. /forum; . /feed; ; forum – SOFA. SOFA - Topic Tag: forum. /frame-plugin; . /feed; ; Frame plugin – SOFA. SOFA - Topic Tag: Frame plugin. /freemotionanimationloop; . /feed; ; FreeMotionAnimationLoop – SOFA. SOFA - Topic Tag: FreeMotionAnimationLoop. /friction; . /feed; ; friction – SOFA. SOFA - Topic Tag: friction. /gamepad; . /feed; ; Gamepad – SOFA. SOFA - Topic Tag: Gamepad. /gcc; . /feed; ; GCC – SOFA. /page; . /2; ; SOFA - Topic Tag: GCC. /3; ; SOFA - Topic Tag: GCC. /4; ; SOFA - Topic Tag: GCC. /5; ; SOFA - Topic Tag: GCC. /6; ; SOFA - Topic Tag: GCC. SOFA - Topic Tag: GCC. /gcc-4-8-5; . /feed; ; Gcc 4.8.5 – SO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:444459,feedback,feedback,444459,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,"placements starting from the reference frame: translation, then rotation along the new origin, then scale along the new axes. Conversely, the projection of a point from the local frame to the reference frame undergoes scaling, then rotation, then translation. Vectors do not undergo translation since they model directions or displacement.; The product F1F2 can be seen as a frame displacement F1 starting from the reference frame followed by a frame displacement F2 starting from the new frame. It is used in frame hierarchies to model the transformation from frame 2 wrt the reference frame.; AuthorFrancois Faure, INRIA-UJF, 2006 . Public Member Functions;  Frame (const Vec3 &origin, const Mat33 &matrix);  ;  Frame (const Vec3 &origin, const Quat &orientation, const Vec3 &scale=Vec3(1_sreal, 1_sreal, 1_sreal));  ;  Frame (const Vec3 &origin);  ;  Frame ();  Default constructor set the transformation to identity. More...;  ; void setTransform (const Vec3 &origin, const Quat &orientation, const Vec3 &scale);  ; void clear ();  Reset the transformation to identity. More...;  ; Vec3 & getOrigin ();  Origin of the local frame in the reference frame,. More...;  ; const Vec3 & getOrigin () const;  Origin of the local frame in the reference frame,. More...;  ; void setOrigin (const Vec3 &origin);  Set the origin of the local frame in the reference frame,. More...;  ; Mat33 & getBasis ();  The columns represent the base vectors of the local frame wrt the reference frame. More...;  ; const Mat33 & getBasis () const;  The columns represent the base vectors of the local frame wrt the reference frame. More...;  ; void setBasis (const Mat33 &m);  The columns represent the base vectors of the local frame wrt the reference frame. More...;  ; void multRight (const Frame &c);  Apply a transformation defined in the child frame (mult. right) More...;  ; Frame mult (const Frame &c) const;  compute the product with another frame on the right More...;  ; void writeOpenGlMatrix (float *m) const;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_frame.html:1580,clear,clear,1580,api/master/sofa/html/classsofa_1_1type_1_1_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_frame.html,1,['clear'],['clear']
Usability,"plate<class TReal > . sofa::type::Transform< TReal >::Transform ; (; const SpatialVector< TReal > & ; v). Origin of the child in the parent coordinate system and the orientation of the child wrt the parent (i.e. standard way) ; Define as a given SpatialVector integrated during one second. The spatial vector is given in parent coordinates.; Define child as a given SpatialVector<TReal> integrated during one second, starting from the parent (used for time integration). The spatial vector is given in parent coordinates. . Function details. ◆ backProjectPoint(). template<class TReal > . auto sofa::type::Transform< TReal >::backProjectPoint ; (; const Vec & ; pointInParent); const. Project point from parent coordinates to this coordinates. . ◆ backProjectVector(). template<class TReal > . auto sofa::type::Transform< TReal >::backProjectVector ; (; const Vec & ; vectorInParent); const. Projected a vector (i.e. a direction or a displacement) from parent coordinates to child coordinates. . ◆ clear(). template<class TReal > . void sofa::type::Transform< TReal >::clear. Reset this to identity. . ◆ CreateSpatialVector(). template<class TReal > . SpatialVector< TReal > sofa::type::Transform< TReal >::CreateSpatialVector. Project a spatial vector from child to parent TODO One should handle differently the transformation of a twist and a wrench ! This applying the adjoint to velocities or its transpose to wrench : V_parent = Ad . V_child or W_child = Ad^T . W_parent To project a wrench in the child frame to the parent frame you need to do parent_wrench = this->inversed * child_wrench (this doc needs to be douv-ble checked !) . ◆ DTrans(). template<class TReal > . SpatialVector< TReal > sofa::type::Transform< TReal >::DTrans. ◆ getAdjointMatrix(). template<class TReal > . auto sofa::type::Transform< TReal >::getAdjointMatrix. Adjoint matrix to the transform This matrix transports velocities in twist coordinates from the child frame to the parent frame. Its inverse transpose does the",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html:7373,clear,clear,7373,api/master/sofa/html/classsofa_1_1type_1_1_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html,1,['clear'],['clear']
Usability,plemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInHexahedronArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgesI,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49548,clear,clearHexahedraAroundEdge,49548,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearHexahedraAroundEdge']
Usability,"plements sofa::defaulttype::AbstractTypeInfo. ◆ setIntegerValue(). template<class Info > . void sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::setIntegerValue ; (; void * ; data, . Index ; index, . long long ; value . ); const. inlineoverridevirtual . Set the value at index of data from an integer value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setScalarValue(). template<class Info > . void sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::setScalarValue ; (; void * ; data, . Index ; index, . double ; value . ); const. inlineoverridevirtual . Set the value at index of data from a scalar value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setSize(). template<class Info > . bool sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::setSize ; (; void * ; data, . sofa::Size ; size . ); const. inlineoverridevirtual . Resize data to size elements, if relevant. ; But resizing is not always relevant, for example:; nothing happens if FixedSize() is true;; sets can't be resized; they are cleared instead;; nothing happens for vectors containing resizable values (i.e. when BaseType()::FixedSize() is false), because of the ""single index"" abstraction;. Returns true iff the data was resizable ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setTextValue(). template<class Info > . virtual void sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::setTextValue ; (; void * ; data, . Index ; index, . const std::string & ; value . ); const. inlineoverridevirtual . Set the value at index of data from a string value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleCopy(). template<class Info > . bool sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::SimpleCopy ; (; ); const. inlineoverridevirtual . True iff copying the data can be done with a memcpy(). ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleLayout(). template<class Info > . bool sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >::SimpleLayout ; (; ); const. inlineov",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html:9963,clear,cleared,9963,api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html,1,['clear'],['cleared']
Usability,"plete list of members for sofa::simulation::xml::NodeElement, including all inherited members. addChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; addReplaceAttribute(const std::string &attr, const char *val)sofa::simulation::xml::BaseElementvirtual; AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseElement(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::BaseElement; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; begin()sofa::simulation::xml::BaseElementinline; begin()sofa::simulation::xml::BaseElementinline; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; create(Node *, std::pair< std::string, std::string > arg)sofa::simulation::xml::BaseElementinlinestatic; Create(const std::string &nodeClass, const std::string &name, const std::string &type)sofa::simulation::xml::BaseElementstatic; Element(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::Element< sofa::core::objectmodel::BaseNode >; end()sofa::simulation::xml::BaseElementinline; end()sofa::simulation::xml::BaseElementinline; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; Factory typedefsofa::simulation::xml::NodeElement; find(const char *nodeName, bool absolute=false) overridesofa::simulation::xml::BaseElementinlinevirtual; findNode(const char *nodeName, bool absolute=false)sofa::simulation::xml::BaseElementvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(const std::string &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element-members.html:917,clear,clearErrors,917,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element-members.html,1,['clear'],['clearErrors']
Usability,"plyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseContext typedefsofa::simulation::DefaultVisualManagerLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultVisualManagerLoop; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; CompositingVisualLoop()sofa::gl::component::shader::CompositingVisualLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) overridesofa::simulation::DefaultVisualManagerLoopvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DefaultVisualManagerLoop()sofa::simulation::DefaultVisualManagerLoopprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html:2629,clear,clearVisual,2629,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop-members.html,1,['clear'],['clearVisual']
Usability,"plyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseContext typedefsofa::simulation::DefaultVisualManagerLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::DefaultVisualManagerLoop; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *vparams, SReal *minBBox, SReal *maxBBox, bool init) overridesofa::simulation::DefaultVisualManagerLoopvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DefaultVisualManagerLoop()sofa::simulation::DefaultVisualManagerLoopprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::vis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html:2613,clear,clearVisual,2613,api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_visual_manager_loop-members.html,1,['clear'],['clearVisual']
Usability,"pological container is in used. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  . bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getChangeList () const;  ; const std::list< const TopologyChange * > & getStateChangeList () const;  ; const Data< std::list< const To",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:5361,simpl,simply,5361,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['simpl'],['simply']
Usability,"pology. Parameter to activate internal topology checks (might slow down the simulation) . ◆ d_initPoints. Data<InitTypes::VecCoord> sofa::component::topology::container::dynamic::PointSetTopologyContainer::d_initPoints. Initial position of points. . ◆ m_pointTopologyDirty. bool sofa::component::topology::container::dynamic::PointSetTopologyContainer::m_pointTopologyDirty = false. protected . Boolean used to know if the topology Data of this container is dirty. . Constructor details. ◆ PointSetTopologyContainer(). sofa::component::topology::container::dynamic::PointSetTopologyContainer::PointSetTopologyContainer ; (; Size ; nPoints = 0). explicitprotected . ◆ ~PointSetTopologyContainer(). sofa::component::topology::container::dynamic::PointSetTopologyContainer::~PointSetTopologyContainer ; (; ). overrideprotecteddefault . Function details. ◆ addPoint() [1/2]. void sofa::component::topology::container::dynamic::PointSetTopologyContainer::addPoint ; (; ). add one DOF in this topology (simply increment the number of DOF) . ◆ addPoint() [2/2]. void sofa::component::topology::container::dynamic::PointSetTopologyContainer::addPoint ; (; SReal ; px, . SReal ; py, . SReal ; pz . ). overridevirtual . Reimplemented from sofa::core::topology::BaseMeshTopology. ◆ addPoints(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::addPoints ; (; const Size ; nPoints). add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) ; Parameters. Thenumber of point to add. . ◆ checkTopology(). bool sofa::component::topology::container::dynamic::PointSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the Topology is coherent. ; Dynamic Topology API ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, and sofa::comp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:30875,simpl,simply,30875,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['simpl'],['simply']
Usability,"pology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:5704,clear,clearQuads,5704,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['clear'],['clearQuads']
Usability,"pologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer, sofa::component::topology::container::dynamic::EdgeSetTopologyContainer, and sofa::component::topology::container::constant::MeshTopology. ◆ checkTopology(). virtual bool sofa::core::topology::BaseMeshTopology::checkTopology ; (; ); const. inlinevirtual . Checks if the topology is coherent. ; Returnstrue if so. Should be override by child class. ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::PointSetTopologyContainer, sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clear(). void sofa::core::topology::BaseMeshTopology::clear ; (; ). virtual . Procedural creation methods ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::PointSetTopologyContainer, sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer, sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer, sofa::component::topology::container::dynamic::EdgeSetTopologyContainer, and sofa::component::topology::container::constant::MeshTopology. ◆ endChange(). std::list< const TopologyChange * >::const_iterator sofa::core::topology::BaseMeshTopology::endChange ; (; ); const. virtual . Provides an iterator on the last element in the list of TopologyChange objects. ; Reimplemented in sofa::core::topology::Topo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html:30223,clear,clear,30223,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,1,['clear'],['clear']
Usability,"ponent::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCoordPositionDifference(Direction &r, const InCoord &a, const InCoord &b)sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html:5145,clear,clearLoggedMessages,5145,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponent::mass::UniformMass< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *) overridesofa::component::mass::UniformMass< DataTypes >inlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTotalMass()sofa::component::mass::UniformMass< DataTypes >virtual; checkVertexMass()sofa::component::mass::UniformMass< DataTypes >virtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; constructor_message()sofa::component::mass::UniformMass< DataTypes >protected; constructor_message()sofa::component::mass::UniformMass< DataTypes >protected; Coord typedefsofa::component::mass::UniformMass< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeMappingInertiasofa::component::mass::UniformMass< DataTypes >; d_filenameMasssofa::component::mass::UniformMass< DataTypes >; d_indicessofa::component::mass::UniformMass< DataTypes >; d_localRangesofa::component::mass::UniformMass< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html:6467,clear,clearLoggedMessages,6467,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponent::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotectedvirtual; createEdgesInTriangleArray()sofa::component::topology::container::dynamic::TriangleSetTopo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:4688,clear,clearTriangles,4688,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['clear'],['clearTriangles']
Usability,"ponent::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotectedvirtual; createEdgesInHexahedronArray()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotectedvirtual; createEdgesInQuadArray()sofa::component::topology::container::dynamic::QuadSe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:5497,clear,clearQuadsAroundVertex,5497,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,3,['clear'],['clearQuadsAroundVertex']
Usability,"ponent::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotectedvirtual; createEdgesInHexahedronArray()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotectedvirtual; createEdgesInQuadArray()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotectedvirtual; createHexahedraAroundEdgeArray()sofa::component::topology::container::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:5603,clear,clearQuadsInHexahedron,5603,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,3,['clear'],['clearQuadsInHexahedron']
Usability,"ponent::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotectedvirtual; createEdgeSetArray() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:5299,clear,clearQuads,5299,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clearQuads']
Usability,"ponentMouseInteraction * > instanceComponents;  ; BodyPicked lastPicked;  ; bool useCollisions;  ; type::fixed_array< Operation *, NONE > operations;  ; type::vector< CallBackPicker * > callbacks;  ; CallBackRender * renderCallback;  ; PickingMethod pickingMethod;  ; double m_defaultLength;  Default length of the ray. Set by constructor. More...;  . Public Member Functions;  PickHandler (double defaultLength=1000000);  ; virtual ~PickHandler ();  ; void activateRay (int width, int height, core::objectmodel::BaseNode *root);  ; void deactivateRay ();  ; virtual void allocateSelectionBuffer (int width, int height);  ; virtual void destroySelectionBuffer ();  ; void setPickingMethod (PickingMethod method);  ; bool useSelectionBufferMethod () const;  ; void updateRay (const sofa::type::Vec3 &position, const sofa::type::Vec3 &orientation);  ; void handleMouseEvent (MOUSE_STATUS status, MOUSE_BUTTON button);  ; void init (core::objectmodel::BaseNode *root);  ; void reset ();  ; void unload ();  ; void setColourRenderCallback (CallBackRender *colourRender);  ; void updateMouse2D (MousePosition mouse);  ; Operation * getOperation (MOUSE_BUTTON button);  ; Operation * changeOperation (sofa::component::setting::MouseButtonSetting *setting);  ; Operation * changeOperation (MOUSE_BUTTON button, const std::string &op);  ; void addCallBack (CallBackPicker *c);  ; type::vector< CallBackPicker * > getCallBackPicker ();  ; void clearCallBacks ();  ; virtual BodyPicked findCollisionUsingColourCoding (const type::Vec3 &origin, const type::Vec3 &direction);  ; ComponentMouseInteraction * getInteraction ();  ; BodyPicked * getLastPicked ();  . Static Public Member Functions; static BodyPicked findCollisionUsingBruteForce (const type::Vec3 &origin, const type::Vec3 &direction, double maxLength, core::objectmodel::BaseNode *root);  . Protected Member Functions; virtual BodyPicked findCollision ();  ; BodyPicked findCollisionUsingPipeline ();  ; BodyPicked findCollisionUsingBruteForce ();  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html:2186,clear,clearCallBacks,2186,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_pick_handler.html,1,['clear'],['clearCallBacks']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord1 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; Coord2 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes1 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; DataTypes2 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; DataVecCoord1 typedefsofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html:3709,clear,clearLoggedMessages,3709,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; exportGnuplot(SReal time)sofa::core::behavior::BaseInteractionForceFieldinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html:3070,clear,clearLoggedMessages,3070,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseForceField()sofa::core::behavior::BaseForceFieldprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(DampingMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html:3042,clear,clearLoggedMessages,3042,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; ClusteringEngine()sofa::component::engine::analyze::ClusteringEngine< DataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::analyze::ClusteringEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_clustersofa::component::engine::analyze::ClusteringEngine< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_fixedPositionsofa::component::engine::analyze::ClusteringEngine< DataTypes >; d_fixedRadiussofa::component::engine::analyze::ClusteringEngine< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbClusterssofa::component::engine::analyze::ClusteringEngine< DataTypes >; d_positionsofa::component::engi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine-members.html:2704,clear,clearLoggedMessages,2704,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; ComplementaryROI()sofa::component::engine::select::ComplementaryROI< DataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::engine::select::ComplementaryROI< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbSetsofa::component::engine::select::ComplementaryROI< DataTypes >protected; d_pointsInROIsofa::component::engine::select::ComplementaryROI< DataTypes >protected; d_positionsofa::component::engine::select::ComplementaryROI< DataTypes >protected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTracker",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i-members.html:2702,clear,clearLoggedMessages,2702,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_complementary_r_o_i-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; closingPositionsofa::component::engine::generate::MeshClosingEngine< DataTypes >; closingTrianglessofa::component::engine::generate::MeshClosingEngine< DataTypes >; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::MeshClosingEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGN",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html:2708,clear,clearLoggedMessages,2708,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::ExtrudeQuadsAndGenerateHexas< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas-members.html:2730,clear,clearLoggedMessages,2730,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::ExtrudeSurface< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html:2702,clear,clearLoggedMessages,2702,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::GenerateCylinder< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html:2706,clear,clearLoggedMessages,2706,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::GenerateGrid< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_hexahedronsofa::component::engine::generate::GenerateGrid< DataTypes >; d_maxCornersofa::component::engine::generate::GenerateGrid< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_minCornersofa::component::engine::generate::GenerateGrid< DataTypes >; d_outputXsofa::component::engine::generate::GenerateGrid< DataTypes >; d_quadsofa::component::engine::generate::GenerateGrid< DataTypes >; d_resolutionsofa::component::engine::generate::GenerateGrid< DataTy",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html:2698,clear,clearLoggedMessages,2698,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::GenerateSphere< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html:2702,clear,clearLoggedMessages,2702,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::JoinPoints< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points-members.html:2694,clear,clearLoggedMessages,2694,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_barycentricPositionssofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >; d_bComputeLinearInterpolationsofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_imputMeshNamesofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >; d_inputPositionssofa::component::engine::generate::MeshBarycentricMapperEngine< DataTypes >; d_interpolationIndicessofa::component::engine::generate::MeshBarycentricMapp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine-members.html:3523,clear,clearLoggedMessages,3523,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::NormalsFromPoints< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGN",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html:2708,clear,clearLoggedMessages,2708,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_normals_from_points-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::generate::RandomPointDistributionInSurface< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; directionssofa::component::engine::g",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface-members.html:2738,clear,clearLoggedMessages,2738,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::MeshSampler< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler-members.html:2692,clear,clearLoggedMessages,2692,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::MeshSplittingEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGN",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine-members.html:2708,clear,clearLoggedMessages,2708,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::MeshSubsetEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_edgessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_hexahedrasofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_indicessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputEdgessofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputHexahedrasofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputPositionsofa::component::engine::select::MeshSubsetEngine< DataTypes >; d_inputQuadssofa::compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html:2702,clear,clearLoggedMessages,2702,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::select::PointsFromIndices< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices-members.html:2704,clear,clearLoggedMessages,2704,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::DilateEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_distancesofa::component::engine::transform::DilateEngine< DataTypes >protected; d_inputXsofa::component::engine::transform::DilateEngine< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_minThicknesssofa::component::engine::transform::DilateEngine< DataTypes >protected; d_normalssofa::component::engine::transform::DilateEngine< DataTypes >protected; d_outputXsofa::component::engine::transform::DilateEngine< DataTypes >protected; d_quadssofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_dilate_engine-members.html:2700,clear,clearLoggedMessages,2700,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_dilate_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_dilate_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_displacementssofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_scalessofa::component::engine::transform::DisplacementMatrixEngine< DataTypes >; d_xsofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >; d_x0sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >; DataEngine()sofa::core::DataEngi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html:2724,clear,clearLoggedMessages,2724,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::DisplacementTransformEngine< DataTypes, OutputType >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_displacementssofa::component::engine::transform::DisplacementTransformEngine< DataTypes, OutputType >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_xsofa::component::engine::transform::DisplacementTransformEngine< DataTypes, OutputType >; d_x0sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, OutputType >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDG",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine-members.html:2754,clear,clearLoggedMessages,2754,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::IndexValueMapper< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGN",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper-members.html:2708,clear,clearLoggedMessages,2708,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::Indices2ValuesMapper< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html:2716,clear,clearLoggedMessages,2716,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::ProjectiveTransformEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine-members.html:2726,clear,clearLoggedMessages,2726,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::TransformEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine-members.html:2706,clear,clearLoggedMessages,2706,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; Coord1D typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; Coord2D typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; Coord3D typedefsofa::gl::component::engine::TextureInterpolation< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html:3372,clear,clearLoggedMessages,3372,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeDistances()sofa::component::engine::analyze::HausdorffDistance< DataTypes >protected; Coord typedefsofa::component::engine::analyze::HausdorffDistance< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d12sofa::component::engine::analyze::HausdorffDistance< DataTypes >; d21sofa::component::engine::analyze::HausdorffDistance< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_d12sofa::component::engine::analyze::HausdorffDistance< DataTypes >; d_d21sofa::component::engine::analyze::HausdorffDistance< DataTypes >; d_maxsofa::component::engine::analyze::HausdorffDistance< DataTypes >; d_messageLogCountsofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance-members.html:2706,clear,clearLoggedMessages,2706,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeOrientation(const CPos &xAxis, const CPos &yAxis, const CPos &zAxis)sofa::component::engine::transform::Vertex2Frame< DataTypes >protected; Coord typedefsofa::component::engine::transform::Vertex2Frame< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::transform::Vertex2Frame< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_framessofa::component::engine::transform::Vertex2Frame< DataTypes >protected; d_invertNormalssofa::component::engine::transform::Vertex2Frame< DataTypes >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normalssofa::component::engine::tr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame-members.html:2700,clear,clearLoggedMessages,2700,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countEdge(std::map< PointPair, unsigned int > &edgeCount, PointPair &edge)sofa::component::engine::select::MeshBoundaryROIstatic; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::engine::select::MeshBoundaryROI; d_inputROIsofa::component::engine::select::MeshBoundaryROI; d_messageLogCountsofa::core::objectmodel::Basemutable; d_quadssofa::component::engine::select::MeshBoundaryROI; d_trianglessofa::component::engine::select::MeshBoundaryROI; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i-members.html:2674,clear,clearLoggedMessages,2674,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createInputDataVector(unsigned int nb, type::vector< Data< T > * > &vf, std::string name, std::string help)sofa::component::engine::generate::MergeMeshes< DataTypes >inlineprotected; createInputMeshesData(int nb=-1)sofa::component::engine::generate::MergeMeshes< DataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html:2696,clear,clearLoggedMessages,2696,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createInputs(int nb=-1)sofa::component::engine::transform::MathOp< VecT >protected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op-members.html:2678,clear,clearLoggedMessages,2678,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; curvaturesofa::component::engine::generate::Spiral< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvir",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html:2686,clear,clearLoggedMessages,2686,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_connectLabelssofa::component::engine::select::SelectConnectedLabelsROI< _T >; d_indicessofa::component::engine::select::SelectConnectedLabelsROI< _T >; d_labelssofa::component::engine::select::SelectConnectedLabelsROI< _T >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbLabelssofa::component::engine::select::SelectConnectedLabelsROI< _T >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i-members.html:2704,clear,clearLoggedMessages,2704,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_inTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html:2815,clear,clearLoggedMessages,2815,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine-members.html,2,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_inTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; d_rotationsofa::component::engine::transform::RotateTransformMatrixEngineprotected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine-members.html:2811,clear,clearLoggedMessages,2811,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_inTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; d_scalesofa::component::engine::transform::ScaleTransformMatrixEngineprotected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine-members.html:2809,clear,clearLoggedMessages,2809,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_inTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outTsofa::component::engine::transform::AbstractTransformMatrixEngineprotected; d_translationsofa::component::engine::transform::TranslateTransformMatrixEngineprotected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine-members.html:2817,clear,clearLoggedMessages,2817,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::engine::select::SelectLabelROI< _T >; d_labelssofa::component::engine::select::SelectLabelROI< _T >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_selectLabelssofa::component::engine::select::SelectLabelROI< _T >; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i-members.html:2684,clear,clearLoggedMessages,2684,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_inputsofa::component::engine::analyze::SumEngine< TDataType >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outputsofa::component::engine::analyze::SumEngine< TDataType >protected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DataType typedefsofa::component::engine::analyze::SumEngine< TDataType >; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine-members.html:2690,clear,clearLoggedMessages,2690,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_inputsofa::component::engine::generate::NormEngine< TDataType >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_normTypesofa::component::engine::generate::NormEngine< TDataType >protected; d_outputsofa::component::engine::generate::NormEngine< TDataType >protected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DataType typedefsofa::component::engine::generate::NormEngine< TDataType >; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_norm_engine-members.html:2694,clear,clearLoggedMessages,2694,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_norm_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_norm_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_inputsofa::component::engine::transform::DifferenceEngine< TDataType >protected; d_messageLogCountsofa::core::objectmodel::Basemutable; d_outputsofa::component::engine::transform::DifferenceEngine< TDataType >protected; d_substractorsofa::component::engine::transform::DifferenceEngine< TDataType >protected; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DataType typedefsofa::component::engine::transform::DifferenceEngine< TDataType >; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine-members.html:2708,clear,clearLoggedMessages,2708,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine-members.html:2710,clear,clearLoggedMessages,2710,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine-members.html,11,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbROIssofa::component::engine::select::MergeROIs; d_outputIndicessofa::component::engine::select::MergeROIs; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is-members.html:2662,clear,clearLoggedMessages,2662,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::engine::transform::SmoothMeshEngine< DataTypes >virtual; Coord typedefsofa::component::engine::transform::SmoothMeshEngine< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine-members.html:2708,clear,clearLoggedMessages,2708,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; PairStateAccessor< DataTypes, DataTypes >::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeNearestPointMaps(const VecCoord &x1, const VecCoord &x2)sofa::component::engine::select::NearestPointROI< DataTypes >protected; Coord typedefsofa::component::engine::select::NearestPointROI< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_distancessofa::component::engine::select::NearestPointROI< DataTypes >; d_drawPairssofa::component::engine::select::NearestPointROI< DataTypes >; d_edgessofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html:2700,clear,clearLoggedMessages,2700,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ponse (core::MultiVecDerivId dx, double **W=nullptr);  Apply projective constraints to the given vector. More...;  ; void projectPositionAndVelocity (core::MultiVecCoordId x, core::MultiVecDerivId v, double time=0.0);  Apply projective constraints to the given position and velocity vectors. More...;  ; void addMdx (core::MultiVecDerivId res, core::MultiVecDerivId dx, SReal factor=1.0);  res += factor M.dx More...;  ; void integrateVelocity (core::MultiVecDerivId res, core::ConstMultiVecCoordId x, core::ConstMultiVecDerivId v, SReal dt);  res = x + v.dt More...;  ; void accFromF (core::MultiVecDerivId a, core::ConstMultiVecDerivId f);  ; void computeEnergy (SReal &kineticEnergy, SReal &potentialEnergy);  Compute Energy. More...;  ; void computeForce (core::MultiVecDerivId result, bool clear=true, bool accumulate=true);  Compute the current force (given the latest propagated position and velocity) More...;  ; void computeDf (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated displacement) More...;  ; void computeDfV (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated velocity) More...;  ; void addMBKdx (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) dx $ (given the latest propagated displacement) More...;  ; void addMBKv (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) velocity $ More...;  ; void addSeparateGravity (SReal dt, core::MultiVecDerivId result=core::VecDerivId::velocity());  Add dt*Gravity to the velocity. More...;  ; void computeContactForce (core::MultiVecDerivId result);  ; void computeContactDf (core::MultiVecDerivId df);  ; void computeAcc (SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v);  Compute a(x,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:3357,clear,clear,3357,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['clear'],['clear']
Usability,"pr const ValueType & y () const noexcept;  Special const access to second element. More...;  ; template<Size NN = N, typename std::enable_if<(NN >=3), int >::type = 0> ; constexpr const ValueType & z () const noexcept;  Special const access to third element. More...;  ; template<Size NN = N, typename std::enable_if<(NN >=4), int >::type = 0> ; constexpr const ValueType & w () const noexcept;  Special const access to fourth element. More...;  ; template<Size NN = N, typename std::enable_if< NN==1, int >::type = 0> ; constexpr void operator= (const ValueType r1) noexcept;  Specific Assignment operator for 1-element vectors. More...;  ; template<typename real2 > ; constexpr void operator= (const real2 *p) noexcept;  Assignment operator from an array of values. More...;  ; template<Size M, typename real2 > ; constexpr void operator= (const Vec< M, real2 > &v) noexcept;  Assignment from a vector with different dimensions. More...;  ; constexpr void assign (const ValueType &value) noexcept;  ; constexpr void clear () noexcept;  Sets every element to 0. More...;  ; constexpr void fill (ValueType r) noexcept;  Sets every element to r. More...;  ; constexpr ValueType & operator() (Size i) noexcept;  Access to i-th element. More...;  ; constexpr const ValueType & operator() (Size i) const noexcept;  Const access to i-th element. More...;  ; constexpr const ValueType * ptr () const noexcept;  Cast into a const array of values. More...;  ; constexpr ValueType * ptr () noexcept;  Cast into an array of values. More...;  ; template<Size N2, std::enable_if_t<(N2< N), bool > = true> ; constexpr void getsub (const Size i, Vec< N2, ValueType > &m) const noexcept;  ; constexpr void getsub (const Size i, ValueType &m) const noexcept;  ; constexpr Vec< N, ValueType > mulscalar (const ValueType f) const noexcept;  ; template<class real2 , std::enable_if_t< std::is_convertible_v< real2, ValueType >, bool > = true> ; constexpr Vec< N, ValueType > mulscalar (const real2 f) const noexcept;  M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html:8547,clear,clear,8547,api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,2,['clear'],['clear']
Usability,"pressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; colSize() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; compress() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlineprotected; compressCSR()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlineprotected; CompressedRowSparseMatrixGeneric()sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:15413,clear,clearRows,15413,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clearRows']
Usability,"protected . Solver who is using this vector. . Constructor details. ◆ TMultiVec() [1/3]. template<VecType vtype> . sofa::core::behavior::TMultiVec< vtype >::TMultiVec ; (; BaseVectorOperations * ; vop, . MyMultiVecId ; v . ). inline . Refers to a state vector with the given ID (VecId::position(), VecId::velocity(), etc). . ◆ TMultiVec() [2/3]. template<VecType vtype> . sofa::core::behavior::TMultiVec< vtype >::TMultiVec ; (; ). inline . Refers to a not yet allocated state vector. . ◆ TMultiVec() [3/3]. template<VecType vtype> . sofa::core::behavior::TMultiVec< vtype >::TMultiVec ; (; BaseVectorOperations * ; vop, . bool ; dynamic = true, . const VecIdProperties & ; properties = {} . ). inline . Allocate a new temporary vector with the given type (sofa::core::V_COORD or sofa::core::V_DERIV). . ◆ ~TMultiVec(). template<VecType vtype> . sofa::core::behavior::TMultiVec< vtype >::~TMultiVec ; (; ). inline . Function details. ◆ clear(). template<VecType vtype> . void sofa::core::behavior::TMultiVec< vtype >::clear ; (; ). inline . v = 0 . ◆ dot(). template<VecType vtype> . SReal sofa::core::behavior::TMultiVec< vtype >::dot ; (; MyMultiVecId ; a). inline . Returnsv.a . ◆ eq() [1/3]. template<VecType vtype> . void sofa::core::behavior::TMultiVec< vtype >::eq ; (; AllMultiVecId ; a, . AllMultiVecId ; b, . SReal ; f = 1.0 . ). inline . v = a+b*f . ◆ eq() [2/3]. template<VecType vtype> . void sofa::core::behavior::TMultiVec< vtype >::eq ; (; MyMultiVecId ; a). inline . v = a . ◆ eq() [3/3]. template<VecType vtype> . void sofa::core::behavior::TMultiVec< vtype >::eq ; (; MyMultiVecId ; a, . SReal ; f . ). inline . v = a*f . ◆ id() [1/2]. template<VecType vtype> . MyMultiVecId& sofa::core::behavior::TMultiVec< vtype >::id ; (; ). inline . ◆ id() [2/2]. template<VecType vtype> . const MyMultiVecId& sofa::core::behavior::TMultiVec< vtype >::id ; (; ); const. inline . ◆ norm() [1/2]. template<VecType vtype> . SReal sofa::core::behavior::TMultiVec< vtype >::norm ; (; ). inline . Ret",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec.html:4262,clear,clear,4262,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec.html,1,['clear'],['clear']
Usability,"r ();  . Constructor details. ◆ Axis() [1/8]. sofa::gl::Axis::Axis ; (; SReal ; len = 1.0_sreal). ◆ Axis() [2/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; len). ◆ Axis() [3/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const Quaternion & ; orient, . const type::Vec3 & ; length . ). ◆ Axis() [4/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const double ; orient[4][4], . const type::Vec3 & ; length . ). ◆ Axis() [5/8]. sofa::gl::Axis::Axis ; (; const double * ; mat, . const type::Vec3 & ; length . ). ◆ Axis() [6/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const Quaternion & ; orient, . SReal ; length = 1.0_sreal . ). ◆ Axis() [7/8]. sofa::gl::Axis::Axis ; (; const type::Vec3 & ; center, . const double ; orient[4][4], . SReal ; length = 1.0_sreal . ). ◆ Axis() [8/8]. sofa::gl::Axis::Axis ; (; const double * ; mat, . SReal ; length = 1.0_sreal . ). ◆ ~Axis(). sofa::gl::Axis::~Axis ; (; ). Function details. ◆ clear(). static void sofa::gl::Axis::clear ; (; ). inlinestatic . ◆ draw() [1/16]. void sofa::gl::Axis::draw ; (; const double * ; mat, . const type::Vec3 & ; length, . const type::RGBAColor & ; colorX = type::RGBAColor::red(), . const type::RGBAColor & ; colorY = type::RGBAColor::green(), . const type::RGBAColor & ; colorZ = type::RGBAColor::red() . ). static . ◆ draw() [2/16]. void sofa::gl::Axis::draw ; (; const double * ; mat, . const type::Vec3 & ; length, . const type::Vec4f & ; colorX = type::Vec4f(1, 0, 0, 1), . const type::Vec4f & ; colorY = type::Vec4f(0, 1, 0, 1), . const type::Vec4f & ; colorZ = type::Vec4f(0, 0, 1, 1) . ). delete . ◆ draw() [3/16]. void sofa::gl::Axis::draw ; (; const double * ; mat, . SReal ; length = 1.0_sreal, . const type::RGBAColor & ; colorX = type::RGBAColor::red(), . const type::RGBAColor & ; colorY = type::RGBAColor::green(), . const type::RGBAColor & ; colorZ = type::RGBAColor::red() . ). static . ◆ draw() [4/16]. static void sofa::gl::Axis::draw ; (; const double * ; mat, .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis.html:5823,clear,clear,5823,api/master/sofa/html/classsofa_1_1gl_1_1_axis.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_axis.html,1,['clear'],['clear']
Usability,"r Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState ();  ; const MechanicalState< TDataTypes > * getMState () const;  . Protected Member Functions;  SkeletalMotionProjectiveConstraint ();  ; virtual ~SkeletalMotionProjectiveConstraint ();  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ; template<class MyCoord > ; void interpolatePosition (Real cT, typename std::enable_if< std::is_same< MyCoord, defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type &x);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  ProjectiveConstraintSet (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html:15712,clear,clear,15712,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html,1,['clear'],['clear']
Usability,"r multi-physics simuation. sofa::core::behavior::MassMatrix Member List . This is the complete list of members for sofa::core::behavior::MassMatrix, including all inherited members. add(sofa::SignedIndex, sofa::SignedIndex, float)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex, sofa::SignedIndex, double)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear()sofa::core::MatrixAccumulatorInterfaceinlinevirtual; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual. Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix-members.html:1590,clear,clear,1590,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix-members.html,1,['clear'],['clear']
Usability,"r of vertices in this topology. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getChangeList () const;  ; const std::list< const TopologyChange * > & getStateChangeList () const;  ; const Data< std::list< const To",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:8730,simpl,simply,8730,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['simpl'],['simply']
Usability,"r performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and add the result in vector result. More...;  ; virtual void opMulTV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:7460,clear,clear,7460,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,2,['clear'],['clear']
Usability,"r system. If the linear system is written as Ax=b, it is A. More...;  ; StoredVectorType rhs { nullptr };  The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. More...;  ; StoredVectorType solution { nullptr };  The solution of the linear system. If the linear system is written as Ax=b, it is x. More...;  . Public Member Functions; MatrixType * getMatrix () const;  ; VectorType * getRHS () const;  ; VectorType * getSolution () const;  ; void allocateSystem ();  ; void createSystemMatrix ();  Allocate the object for the global matrix. More...;  ; void createSystemRHSVector ();  Allocate the object for the RHS. More...;  ; void createSystemSolutionVector ();  Allocate the object for the solution. More...;  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemRHSVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void createSystemSolutionVector ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void resizeSystem (sofa::Size n);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void clearSystem ();  ; void createSystemRHSVector ();  ; void createSystemSolutionVector ();  ; void resizeSystem (sofa::Size n);  ; void clearSystem ();  . Attribute details. ◆ matrix. template<typename TMatrix , typename TVector > . StoredMatrixType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear sy",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:1263,clear,clearSystem,1263,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,3,['clear'],['clearSystem']
Usability,"r);  ; static void stepEnd (const char *idStr, const std::string &objStr);  ; template<class T > ; static void stepEnd (const char *idStr, T *obj);  ; static void stepNext (const char *prevIdStr, const char *nextIdStr);  ; static void step (const char *idStr);  ; static void step (const char *idStr, const char *objStr);  ; static void step (const char *idStr, const std::string &objStr);  ; template<class T > ; static void step (const char *idStr, T *obj);  ; static void valSet (IdVal id, double val);  ; static void valAdd (IdVal id, double val);  ; static void valSet (const char *idStr, double val);  ; static void valAdd (const char *idStr, double val);  ; static std::pair< SyncCallBack, void * > setSyncCallBack (SyncCallBack cb, void *userData=nullptr);  . Function details. ◆ begin() [1/2]. void sofa::helper::AdvancedTimer::begin ; (; const char * ; idStr). static . ◆ begin() [2/2]. void sofa::helper::AdvancedTimer::begin ; (; IdTimer ; id). static . ◆ clear(). void sofa::helper::AdvancedTimer::clear ; (; ). static . ◆ clearData(). void sofa::helper::AdvancedTimer::clearData ; (; IdTimer ; id). static . clearDatato clear a specific Timer Data ; Parameters. idIdTimer, id of the timer . ◆ convertOutputType(). AdvancedTimer::outputType sofa::helper::AdvancedTimer::convertOutputType ; (; std::string ; type). static . convertOutputType convert a string to the output type ; Parameters. typestd::string, output type name (example : ""json"") . ReturnsoutputType, output type enum . ◆ end() [1/4]. void sofa::helper::AdvancedTimer::end ; (; const char * ; idStr). static . ◆ end() [2/4]. void sofa::helper::AdvancedTimer::end ; (; IdTimer ; id). static . ◆ end() [3/4]. std::string sofa::helper::AdvancedTimer::end ; (; IdTimer ; id, . double ; time, . double ; dt . ). static . end Override fo the end method in which you can use JSON or old format ; Parameters. idIdTimer, the id of the used timer ; timedouble, current time (from the context) ; timedt, current delta time or dt (from",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html:4035,clear,clear,4035,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,1,['clear'],['clear']
Usability,"r::DampingMatrix *) finalsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >virtual; bwdInit() overridesofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >virtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_angularLimitsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; d_angularStiffnesssofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_drawSpringsofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; d_indicessofa::component::solidmechanics::spring::AngularSpringFo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html:5134,clear,clearLoggedMessages,5134,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"r::IndexVerificationStrategy > indexVerificationStrategy;  . Public Member Functions;  SOFA_CLASS (ConstantLocalMatrix, SOFA_TEMPLATE2(AssemblingMatrixAccumulator, c, TStrategy));  ;  Public Member Functions inherited from sofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (AssemblingMatrixAccumulator, SOFA_TEMPLATE2(sofa::core::MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification));  ; void clear () override;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >);  ; void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy > strategy) override;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const float value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, double value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) override final;  . Protected Member Functions; void add (const core::matrixacc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_matrix.html:1784,clear,clear,1784,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_matrix.html,1,['clear'],['clear']
Usability,r::dynamic::TriangleSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_triangle . m_edgesInTriangle . m_trianglesAroundVertex . m_trianglesAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTriangleTopologyFromDirty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTriangleArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgesInTriangleArray ; (; ). protecte,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:41494,clear,clearEdgesInTriangle,41494,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clearEdgesInTriangle']
Usability,"r;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LinearMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearIndices ();  methods to add/remove some indices, keyTimes, keyMovement More...;  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void clearKeyMovements ();  ; void addKeyMovement (Real time, Deriv movement);  Add a new key movement. More...;  ; void init () override;  – Constraint interface More...;  ; void reset () override;  Reset to initial state. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core::MechanicalParams *mparams, linearalgebra::BaseVector *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:5245,clear,clearKeyMovements,5245,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['clear'],['clearKeyMovements']
Usability,"rOfElements () const;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  . bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getCha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:5231,simpl,simply,5231,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['simpl'],['simply']
Usability,"rToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevisi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:8475,simpl,simply,8475,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['simpl'],['simply']
Usability,"ra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::DiagonalMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear(Index i)sofa::linearalgebra::DiagonalMatrix< T >inline; clearCol(Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html:6076,clear,clearCol,6076,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,1,['clear'],['clearCol']
Usability,"ra::BaseVector *lambda)=0sofa::core::behavior::BaseConstraintCorrectionpure virtual; applyVelocityCorrection(const ConstraintParams *cparams, MultiVecDerivId v, MultiVecDerivId dv, ConstMultiVecDerivId correction)=0sofa::core::behavior::BaseConstraintCorrectionpure virtual; Base()sofa::core::objectmodel::Baseprotected; BaseConstraintCorrection()sofa::core::behavior::BaseConstraintCorrectionprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeMotionCorrectionFromLambda(const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda)=0sofa::core::behavior::BaseConstraintCorrectionpure virtual; computeResidual(const core::ExecParams *, linearalgebra::BaseVector *)sofa::core::behavior::BaseConstraintCorrectionvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html:3226,clear,clearLoggedMessages,3226,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction-members.html,1,['clear'],['clearLoggedMessages']
Usability,"racker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; CIRCLE enum valuesofa::component::io::mesh::GIDMeshLoaderprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::io::mesh::GIDMeshLoader; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html:4802,clear,clearBuffers,4802,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader-members.html,1,['clear'],['clearBuffers']
Usability,"rackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (PointSetTopologyContainer, core::topology::TopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  . void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  . Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; virtual Size getNumberOfElements () const;  Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  . bool checkTopology () const override;  Checks if the Topology is coherent. More...;  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:4025,clear,clear,4025,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['clear'],['clear']
Usability,"raint::projective::LineProjectiveConstraint< DataTypes >; BaseType typedefsofa::core::objectmodel::Base; Block typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; bsize enum valuesofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; d_drawSizesofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::LineProjective",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html:3303,clear,clearConstraints,3303,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint-members.html,1,['clear'],['clearConstraints']
Usability,"raints (const core::MechanicalParams *mparams) override;  ; void resizeSystem (sofa::Size n) override;  Set the size of the matrix to n x n, and the size of RHS and solution to n. More...;  ; void clearSystem () override;  ; bool isConstantSparsityPatternUsedYet () const;  ;  Public Member Functions inherited from sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >;  SOFA_CLASS (SOFA_TEMPLATE2(MatrixLinearSystem, TMatrix, TVector), SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector));  ; const MappingGraph & getMappingGraph () const;  ; template<Contribution c> ; auto getSharedMatrix (sofa::core::matrixaccumulator::get_component_type< c > *object, const PairMechanicalStates &pair) -> std::shared_ptr< LocalMappedMatrixType< Real > >;  ; template<Contribution c> ; auto getSharedMatrixSize (sofa::core::matrixaccumulator::get_component_type< c > *object, const PairMechanicalStates &pair) -> std::optional< type::Vec2u >;  ; template<Contribution c> ; LocalMatrixMaps< c, typename MatrixLinearSystem< TMatrix, TVector >::Real > & getLocalMatrixMap ();  ; template<Contribution c> ; const LocalMatrixMaps< c, typename MatrixLinearSystem< TMatrix, TVector >::Real > & getLocalMatrixMap () const;  ; template<core::matrixaccumulator::Contribution c> ; AssemblingMappedMatrixAccumulator< c, typename MatrixLinearSystem< TMatrix, TVector >::Real > * createLocalMappedMatrixT (sofa::core::matrixaccumulator::get_component_type< c > *object, SReal factor);  ;  Public Member Functions inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >;  SOFA_CLASS (SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector), sofa::core::behavior::BaseMatrixLinearSystem);  ; virtual TMatrix * getSystemMatrix () const;  Return the global matrix of the linear system. More...;  ; virtual TVector * getRHSVector () const;  Return the RHS of the linear system. More...;  ; virtual TVector * getSolutionVector () const;  Return the solution of the linear sy",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html:5865,clear,clearSystem,5865,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,1,['clear'],['clearSystem']
Usability,"ralgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >; CompressedMatrix typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >; copy(const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift)sofa::linearalgebra::EigenBaseSparseMatrix< OutData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html:7630,clear,clearRowCol,7630,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,1,['clear'],['clearRowCol']
Usability,"ralgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::EigenBaseSparseMatrix< TReal >, sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >, sofa::linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, sofa::linearalgebra::BlockDiagonalMatrix< LC, T >, sofa::core::behavior::ApplyConstraintCompat, and sofa::core::behavior::AddToMatrixCompatMatrix< c >. ◆ clear() [2/2]. virtual void sofa::linearalgebra::BaseMatrix::clear ; (; Index ; i, . Index ; j . ). inlinevirtual . Reimplemented in sofa::linearalgebra::SparseMatrix< T >, sofa::linearalgebra::SparseMatrix< SReal >, sofa::linearalgebra::SparseMatrix< Real >, sofa::linearalgebra::FullMatrix< T >, sofa::linearalgebra::FullMatrix< typename Vector::Real >, sofa::linearalgebra::FullMatrix< Real >, sofa::linearalgebra::DiagonalMatrix< T >, sofa::linearalgebra::DiagonalMatrix< R1 >, sofa::linearalgebra::DiagonalMatrix< R2 >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< sofa::type::Mat< NL, NC, MReal > >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< MReal >, sofa::linearalgebra::CompressedRowSparseMatrixMechanical< Real >, sofa::linearalgebra::BTDMatrix< N, T >, sofa::linearalgebra::BlockFullMatrix< N, T >, and sofa::linearalgebra::BlockDiagonalMatrix< LC, T >. ◆ clearCol(). virtual void sofa::linearalgebra::BaseMatrix::clearCol ; (; Index ; j). inlinevirtual . Reset the all values in column j to 0. ; Reimplemented",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:34757,clear,clear,34757,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clear']
Usability,"rams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystem(const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0sofa::core::behavior::ConstraintSolverpure virtual; buildSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *)sofa::core::behavior::ConstraintSolverinlinevirtual; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html:2435,clear,clearLoggedMessages,2435,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::addSpringForce ; (; SReal & ; potentialEnergy, . VecDeriv & ; f1, . const VecCoord & ; p1, . const VecDeriv & ; v1, . VecDeriv & ; f2, . const VecCoord & ; p2, . const VecDeriv & ; v2, . sofa::Index ; i, . Spring & ; spring . ). protected . Accumulate the spring force and compute and store its stiffness. . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ bwdInit(). template<class DataTypes > . void sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::bwdInit. overridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::clear ; (; sofa::Size ; reserve = 0). ◆ computeBBox(). template<class DataTypes > . void sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getObject1(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::getObject1 ; (; ). inline . ◆ getObject2(). temp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html:30658,clear,clear,30658,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,1,['clear'],['clear']
Usability,"rceField< DataTypes >::addSpringForce ; (; SReal & ; potentialEnergy, . VecDeriv & ; f1, . const VecCoord & ; p1, . const VecDeriv & ; v1, . VecDeriv & ; f2, . const VecCoord & ; p2, . const VecDeriv & ; v2, . sofa::Index ; i, . Spring & ; spring . ). protected . Accumulate the spring force and compute and store its stiffness. . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ bwdInit(). template<class DataTypes > . void sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::bwdInit. overridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). template<class DataTypes > . void sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::clear ; (; sofa::Size ; reserve = 0). ◆ computeBBox(). template<class DataTypes > . void sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getObject1(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::getObject1 ; (; ). inline . ◆ getObject2(). template<class DataTypes > . core::behavior::MechanicalState<DataTypes>* sofa::component::solidmec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html:30778,clear,clear,30778,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,1,['clear'],['clear']
Usability,"re...;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; sofa::type::SVector< std::string > m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  DataFileNameVector (const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  DataFileNameVector (const sofa::type::SVector< std::string > &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  DataFileNameVector (const BaseData::BaseInitData &init);  ;  DataFileNameVector (const Inherit::InitData &init);  ;  ~DataFileNameVector () override=default;  ; void endEdit () override;  ; void addPath (const std::string &v, bool clear=false);  ; void setValueAsString (const std::string &v);  ; bool read (const std::string &s) override;  ; virtual const std::string & getRelativePath (unsigned int i);  ; virtual const std::string & getFullPath (unsigned int i) const;  ; virtual const std::string & getAbsolutePath (unsigned int i) const;  ; void doOnUpdate () override;  ; void setPathType (PathType pathType);  ; PathType getPathType () const;  ;  DataFileNameVector (const Inherit &d)=delete;  ; DataFileNameVector & operator= (const DataFileNameVector &)=delete;  ;  Public Member Functions inherited from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >;  Data (const Data &)=delete;  ; const sofa::defaulttype::AbstractTypeInfo * getValueTypeInfo () const override;  Get info about the value type of the associated variable. More...;  ; bool read (const std::string &s) override;  ; bool SOFA_CORE_API read (const std::string &str);  Specialization for reading strings. More...;  ; bool SOFA_CORE_API read (const std::string &str);  Specialization for reading booleans. More...;  ; bool read (const std::string &str);  Specialization for reading strings. More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html:1416,clear,clear,1416,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,1,['clear'],['clear']
Usability,"re::ConstVecCoordId v) const override;  ; virtual const Data< VecDeriv > * read (core::ConstVecDerivId v) const override;  ; virtual const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, TDataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< TDataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  . Protected Member Functions; void computeNormals ();  ;  DataDisplay ();  ;  Protected Member Functions inherited from ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:16935,simpl,simplified,16935,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,1,['simpl'],['simplified']
Usability,"re::ConstVecCoordId v) const override;  ; virtual const Data< VecDeriv > * read (core::ConstVecDerivId v) const override;  ; virtual const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, TDataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< TDataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  . Protected Member Functions;  OglCylinderModel ();  ;  ~OglCylinderModel () override;  ;  Protected Member Functions in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html:12842,simpl,simplified,12842,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,1,['simpl'],['simplified']
Usability,"re::ConstVecCoordId v) const override;  ; virtual const Data< VecDeriv > * read (core::ConstVecDerivId v) const override;  ; virtual const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, TDataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ; ReadVecCoord readPositions () const;  ; WriteVecCoord writePositions ();  ; WriteOnlyVecCoord writeOnlyPositions ();  ; ReadVecCoord readRestPositions () const;  ; WriteVecCoord writeRestPositions ();  ; WriteOnlyVecCoord writeOnlyRestPositions ();  ; ReadVecDeriv readVelocities () const;  ; WriteVecDeriv writeVelocities ();  ; WriteOnlyVecDeriv writeOnlyVelocities ();  ; ReadVecDeriv readForces () const;  ; WriteVecDeriv writeForces ();  ; WriteOnlyVecDeriv writeOnlyForces ();  ; ReadVecDeriv readDx () const;  ; WriteVecDeriv writeDx ();  ; WriteOnlyVecDeriv writeOnlyDx ();  ; ReadVecDeriv readNormals () const;  ; const AccumulationVecId< TDataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:22474,simpl,simplified,22474,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,4,['simpl'],['simplified']
Usability,"re::behavior::BaseProjectiveConstraintSetvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_coordinatessofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_drawSizesofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >; d_indice",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html:3070,clear,clearIndices,3070,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint-members.html,1,['clear'],['clearIndices']
Usability,"re::behavior::DampingMatrix *) finalsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createTetrahedronRestInformation(Index, TetrahedronRestInformation &t, const core::topology::BaseMeshTopology::Tetrahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::behavior::ForceField< DataTypes >; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html:5177,clear,clearLoggedMessages,5177,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"re::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; clearKeyMovements()sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_imposedDisplacmentOnMacroNodessofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; d_indicessofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; d_keyMovementssofa::component::constraint::projective::PartialL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html:3358,clear,clearKeyMovements,3358,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html,1,['clear'],['clearKeyMovements']
Usability,"re::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::response::contact::ContactListenerinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ContactListener(core::CollisionModel *collModel1=nullptr, core::CollisionModel *collModel2=nullptr)sofa::component::collision::response::contact::ContactListener; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::response::contact::ContactListenerinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html:2158,clear,clearLoggedMessages,2158,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener-members.html,1,['clear'],['clearLoggedMessages']
Usability,"re::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::utility::TopologicalChangeProcessorinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawsofa::component::topology::utility::TopologicalChangeProcessor; d_edgesToRemovesofa::component::topology::utility::TopologicalChangeProcessor; d_epsilonSnapBordersofa::component::topology::utility::TopologicalChangeProcessor; d_epsilonSnapPathsofa::component::topology::utility::TopologicalChangeProcessor; d_filenamesofa::component::topology::utility::TopologicalChangeProcessor; d_hexahedraToRemovesofa::component::topology::utility::TopologicalChangeProcessor; d_intervalsofa::component::topology::utility::TopologicalChangeProcessor; d_listChange",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html:2158,clear,clearLoggedMessages,2158,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor-members.html,1,['clear'],['clearLoggedMessages']
Usability,"re::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html:2396,clear,clearVisual,2396,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"re::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html:3518,clear,clearVisual,3518,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,1,['clear'],['clearVisual']
Usability,"re::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html:3518,clear,clearVisual,3518,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,1,['clear'],['clearVisual']
Usability,"re::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html:3518,clear,clearVisual,3518,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,1,['clear'],['clearVisual']
Usability,"real >::total_size = 3. staticconstexpr . Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) . Constructor details. ◆ RigidDeriv() [1/4]. template<typename real > . constexpr sofa::defaulttype::RigidDeriv< 2, real >::RigidDeriv ; (; type::NoInit ; ). inlineexplicitconstexpr . ◆ RigidDeriv() [2/4]. template<typename real > . constexpr sofa::defaulttype::RigidDeriv< 2, real >::RigidDeriv ; (; ). inlineconstexpr . ◆ RigidDeriv() [3/4]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 2, real >::RigidDeriv ; (; const type::Vec< 2, real2 > & ; velCenter, . const real2 & ; velOrient . ). inlineconstexpr . ◆ RigidDeriv() [4/4]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 2, real >::RigidDeriv ; (; const type::Vec< 3, real2 > & ; v). inlineconstexpr . Function details. ◆ clear(). template<typename real > . constexpr void sofa::defaulttype::RigidDeriv< 2, real >::clear ; (; ). inlineconstexpr . ◆ getAngular() [1/2]. template<typename real > . constexpr Real& sofa::defaulttype::RigidDeriv< 2, real >::getAngular ; (; ). inlineconstexpr . ◆ getAngular() [2/2]. template<typename real > . constexpr const Real& sofa::defaulttype::RigidDeriv< 2, real >::getAngular ; (; ); const. inlineconstexpr . ◆ getLinear() [1/2]. template<typename real > . constexpr Vec2& sofa::defaulttype::RigidDeriv< 2, real >::getLinear ; (; ). inlineconstexpr . ◆ getLinear() [2/2]. template<typename real > . constexpr const Vec2& sofa::defaulttype::RigidDeriv< 2, real >::getLinear ; (; ); const. inlineconstexpr . ◆ getVAll(). template<typename real > . constexpr VecAll sofa::defaulttype::RigidDeriv< 2, real >::getVAll ; (; ); const. inlineconstexpr . ◆ getVCenter() [1/2]. template<typename real > . constexpr Vec2& sofa::defaulttype::RigidDeriv< 2, real >::getVCenter ; (; ). inlineconstexpr . ◆ getVCenter() [2/2]. template<typename real > . constexpr const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html:4721,clear,clear,4721,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_012_00_01real_01_4.html,1,['clear'],['clear']
Usability,"reation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearEdgesInTetrahedron ; (; ). protected . ◆ clearTetrahedra(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedra ; (; ). protected . ◆ clearTetrahedraAroundEdge(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundEdge ; (; ). protected . ◆ clearTetrahedraAroundTriangle(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundTriangle ; (; ). protected . ◆ clearTetrahedraAroundVertex(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTetrahedraAroundVertex ; (; ). protected . ◆ clearTrianglesInTetrahedron(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::clearTrianglesInTetrahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTetrahedronArray(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer::createEdgesInTetrahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for each tetrahedron. ; This function is only called if the EdgesInTetrahedrone array is required. m_edgesInTetrahedron[i] contains the 6 indices of the 6 edges of each tetrahedron The number of each edge is the following : edge 0 links vertex 0 and 1, edge 1 links vertex 0 and 2, edge 2 links vertex 0 and 3, edge 3 links vertex 1 and 2, edge 4 links vertex 1 and 3, edge 5 links vertex 2 an",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:51439,clear,clearTrianglesInTetrahedron,51439,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['clear'],['clearTrianglesInTetrahedron']
Usability,"recatedData * ; attribute). ◆ addLink(). void sofa::core::objectmodel::Base::addLink ; (; BaseLink * ; l). Add a link. ; Add a link. Note that this method should only be called if the link was not initialized with the initLink method . ◆ addMessage(). void sofa::core::objectmodel::Base::addMessage ; (; const sofa::helper::logging::Message & ; m); const. ◆ addOutputsToCallback(). void sofa::core::objectmodel::Base::addOutputsToCallback ; (; const std::string & ; name, . std::initializer_list< BaseData * > ; outputs . ). ◆ addTag(). void sofa::core::objectmodel::Base::addTag ; (; Tag ; t). Add a subset qualification to the object. . ◆ addUpdateCallback(). void sofa::core::objectmodel::Base::addUpdateCallback ; (; const std::string & ; name, . std::initializer_list< BaseData * > ; inputs, . std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> ; function, . std::initializer_list< BaseData * > ; outputs . ). ◆ clearLoggedMessages(). void sofa::core::objectmodel::Base::clearLoggedMessages ; (; ); const. ◆ countLoggedMessages(). size_t sofa::core::objectmodel::Base::countLoggedMessages ; (; sofa::helper::logging::Message::TypeSet ; t = sofa::helper::logging::Message::AnyTypes); const. ◆ findData(). BaseData * sofa::core::objectmodel::Base::findData ; (; const std::string & ; name); const. Find a data field given its name. Return nullptr if not found. If more than one field is found (due to aliases), only the first is returned. . ◆ findDataLinkDest(). bool sofa::core::objectmodel::Base::findDataLinkDest ; (; BaseData *& ; ptr, . const std::string & ; path, . const BaseLink * ; link . ). virtual . ◆ findGlobalField(). std::vector< BaseData * > sofa::core::objectmodel::Base::findGlobalField ; (; const std::string & ; name); const. Find data fields given a name: several can be found as we look into the alias map. ; Find fields given a name: several can be found as we look into the alias map. . ◆ findLink(). BaseLink * sofa::core::objectmodel::Base::findL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html:13959,clear,clearLoggedMessages,13959,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,1,['clear'],['clearLoggedMessages']
Usability,"removeAttribute (const std::string &attr);  Remove an attribute given its name. More...;  ; virtual std::string getFullName ();  Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) More...;  ; virtual void logError (const std::string &s);  ; virtual void logErrors (const std::vector< std::string > &e);  ; std::vector< std::string > const & getErrors () const;  ; virtual void clearErrors ();  . Attribute details. ◆ attributes. AttributeMap sofa::core::objectmodel::BaseObjectDescription::attributes. protected . ◆ errors. std::vector< std::string > sofa::core::objectmodel::BaseObjectDescription::errors. protected . Constructor details. ◆ BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::BaseObjectDescription ; (; const char * ; name = nullptr, . const char * ; type = nullptr . ). ◆ ~BaseObjectDescription(). sofa::core::objectmodel::BaseObjectDescription::~BaseObjectDescription ; (; ). virtual . Function details. ◆ clearErrors(). virtual void sofa::core::objectmodel::BaseObjectDescription::clearErrors ; (; ). inlinevirtual . ◆ find(). BaseObjectDescription * sofa::core::objectmodel::BaseObjectDescription::find ; (; const char * ; nodeName, . bool ; absolute = false . ). virtual . Find an object description given its name (relative to this object) ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ findObject(). Base * sofa::core::objectmodel::BaseObjectDescription::findObject ; (; const char * ; nodeName). virtual . Find an object given its name (relative to this object) ; Find an object given its name. . ◆ getAttribute(). const char * sofa::core::objectmodel::BaseObjectDescription::getAttribute ; (; const std::string & ; attr, . const char * ; defaultVal = nullptr . ). virtual . Get an attribute given its name (return defaultVal if not present) . ◆ getAttributeAsFloat(). float sofa::core::objectmodel::BaseObjectDescription::getAttributeAsFloat ; (; const std::string & ; attr, . const float ; defa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:3550,clear,clearErrors,3550,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,1,['clear'],['clearErrors']
Usability,"rence; SOFA API: Member List; SOFA API: sofa::type::trait::is_specialization_of< T, Template > Struct Template Reference; SOFA API: sofa::type::trait::is_specialization_of< Template< Args... >, Template > Struct Template Reference; SOFA API: sofa::type::trait::is_vector< T > Struct Template Reference; SOFA API: Member List; tabs.css; SOFA API: sofa::gui::qt::ObjectModelPtr Union Reference; SOFA API: Member List. applications; . /plugins; . /4-wheel-summitxl-robot; ; SOFA – 4-Wheel SummitXL Robot. /bayesian-filtering; ; SOFA – Bayesian Filtering. /cardiac-electrophysiology-2; ; SOFA – Cardiac Electrophysiology. /cardiac-mechanics; ; SOFA – Cardiac Mechanics. /cgal-mesh-generation; ; SOFA – CGAL Mesh Generation. /condensed-fem-model-learning; ; SOFA – Condensed FEM Model Learning. /cosserat-beam-cable-needle; ; SOFA – Cosserat Beam: cable & needle. /cuda-gpu-computing; ; SOFA – CUDA GPU Computing. /cutting-mesh-refinement; ; SOFA – Cutting & Mesh Refinement. /deep-learning-framework; ; SOFA – Deep Learning Framework. /design-optimization; ; SOFA – Design Optimization. /endoscopic-robot; ; SOFA – Endoscopic Robot. /export-system-matrices; ; SOFA – Export System Matrices. /follou-avatar-haptics; ; SOFA – Follou Avatar Haptics. /force-dimension-haptics; ; SOFA – Force Dimension Haptics. /geomagic-haptics; ; SOFA – Geomagic Haptics. /google-benchmark-for-sofa; ; SOFA – Google Benchmark for SOFA. /gpu-cholesky-solver; ; SOFA – GPU Cholesky Solver. /heat-transfer-gpu-diffusion-reaction; ; SOFA – Heat Transfer: GPU diffusion reaction. /image-manipulation; ; SOFA – Image Manipulation. /image-registration; ; SOFA – Image Registration. /inverse-model-for-soft-robot-control; ; SOFA – Inverse Model for Soft-Robot Control. /lapgym; ; SOFA – LapGym. /mesh-skeletonization; ; SOFA – Mesh Skeletonization. /micro-parallel-robot; ; SOFA – Micro-Parallel Robot. /migribot-robot; ; SOFA – MiGriBot Robot. /model-order-reduction; ; SOFA – Model Order Reduction. /modern-gui-using-glfw; ; SOFA",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:244639,learn,learning-framework,244639,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learning-framework']
Usability,"ressedRowSparseMatrixGeneric< TBlock, TPolicy >::block ; (; Index ; i, . Index ; j . ); const. inline . Get block method. ; Parameters. Lineindex i and column index j . ReturnsBlock value if exist or empty Block if not . ◆ blockMultTranspose(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static auto sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::blockMultTranspose ; (; const TBlock & ; blockA, . const TBlock & ; blockB . ). inlinestatic . ◆ check_matrix() [1/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; ). inline . ◆ check_matrix() [2/2]. template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . static bool sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::check_matrix ; (; Index ; nzmax, . Index ; m, . Index ; n, . Index * ; a_p, . Index * ; a_i, . Block * ; a_x . ). inlinestatic . ◆ clear(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clear ; (; ). inline . Completely clear the matrix. ; Warningif ClearByZeros Policy is activated all value in colsValue will be set to zero using default constructor . ◆ clearColBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearColBlock ; (; Index ; j). inline . Clear col block method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in block. . Warningif ClearByZeros Policy is activated all col j of each line will be set to zero using default constructor . ◆ clearRowBlock(). template<typename TBlock , typename TPolicy = CRSDefaultPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, TPolicy >::clearRowBlock ; (; Index ; i). inline . Clear row block method. Clear al",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:21159,clear,clear,21159,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['clear'],['clear']
Usability,"ressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; bRowsEnd() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; bRowSize() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; bRowsRange() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlinestatic; clear(Index i, Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; clear() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:14103,clear,clear,14103,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clear']
Usability,"ries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows imin to imax-1 to 0. ; Set all the entries of a column to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowsCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ coeffRef(). template<class TReal > . Real& sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::coeffRef ; (; Index ; i, . Index ; j . ). inline . Return a reference to the given entry in the compressed matrix.There can (must ?) be a value at this place already. Efficient only if the it is at the last place of the compressed matrix. . ◆ colSize(). template<class TReal > . Index sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::colSize ; (;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:20814,clear,clearRows,20814,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearRows']
Usability,"ring &type, const std::map< std::string, std::string > &params=std::map< std::string, std::string >{});  create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, const std::string &name, const std::map< std::string, std::string > &params=std::map< std::string, std::string >{});  create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, BaseObjectDescription &desc);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; void SOFA_SIMPLEAPI_API dumpScene (NodeSPtr root);  ; template<class T > ; std::string str (const T &t);  . Function Documentation. ◆ cleanup(). SOFA_SIMPLEAPI_API void sofa::simpleapi::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. . ◆ createChild() [1/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:3136,simpl,simpleapi,3136,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,1,['simpl'],['simpleapi']
Usability,"ring & ; component, . core::objectmodel::Base * ; base, . QTreeWidgetItem * ; listItem, . bool ; clear = true . ). ◆ addData(). void sofa::gui::qt::QDisplayPropertyWidget::addData ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseData * ; data . ). ◆ addDescriptionItem(). void sofa::gui::qt::QDisplayPropertyWidget::addDescriptionItem ; (; QTreeWidgetItem * ; groupItem, . const QString & ; name, . const QString & ; description . ). protected . ◆ addGroup(). void sofa::gui::qt::QDisplayPropertyWidget::addGroup ; (; const QString & ; component, . const QString & ; group . ). ◆ addLink(). void sofa::gui::qt::QDisplayPropertyWidget::addLink ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseLink * ; link . ). ◆ clear(). void sofa::gui::qt::QDisplayPropertyWidget::clear ; (; ). ◆ clearAll(). void sofa::gui::qt::QDisplayPropertyWidget::clearAll ; (; ). ◆ clearComponentOutput. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentOutput ; (; ). protectedslot . ◆ clearComponentWarning. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentWarning ; (; ). protectedslot . ◆ DefaultDataGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultDataGroup ; (; ). inlinestatic . ◆ DefaultInfoGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultInfoGroup ; (; ). inlinestatic . ◆ DefaultLinkGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLinkGroup ; (; ). inlinestatic . ◆ DefaultLogGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLogGroup ; (; ). inlinestatic . ◆ findComponent(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findComponent ; (; const QString & ; component); const. protected . ◆ findGroup(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findGroup ; (; const QString & ; component, . const QString & ; group . ); const. protected . ◆ setConsoleOutput(). void sofa::gui::qt::QDisplayPropertyWi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:3320,clear,clearComponentOutput,3320,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,1,['clear'],['clearComponentOutput']
Usability,"rited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LinearMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearIndices ();  methods to add/remove some indices, keyTimes, keyMovement More...;  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void clearKeyMovements ();  ; void addKeyMovement (Real time, Deriv movement);  Add a new key movement. More...;  ; void init () override;  – Constraint interface More...;  ; void reset () override;  Reset to initial state. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:5085,clear,clearIndices,5085,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"rited members. addChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; addReplaceAttribute(const std::string &attr, const char *val)sofa::simulation::xml::BaseElementvirtual; AttributeElement(const std::string &name, const std::string &type, BaseElement *parent=nullptr)sofa::simulation::xml::AttributeElement; AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseElement(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::BaseElement; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; begin()sofa::simulation::xml::BaseElementinline; begin()sofa::simulation::xml::BaseElementinline; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; create(Node *, std::pair< std::string, std::string > arg)sofa::simulation::xml::BaseElementinlinestatic; Create(const std::string &nodeClass, const std::string &name, const std::string &type)sofa::simulation::xml::BaseElementstatic; Element(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::Element< core::objectmodel::BaseObject >; end()sofa::simulation::xml::BaseElementinline; end()sofa::simulation::xml::BaseElementinline; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; Factory typedefsofa::simulation::xml::Element< core::objectmodel::BaseObject >; find(const char *nodeName, bool absolute=false) overridesofa::simulation::xml::BaseElementinlinevirtual; findNode(const char *nodeName, bool absolute=false)sofa::simulation::xml::BaseElementvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element-members.html:1063,clear,clearErrors,1063,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_attribute_element-members.html,1,['clear'],['clearErrors']
Usability,"rivId ; df). ◆ computeContactForce(). void sofa::simulation::common::MechanicalOperations::computeContactForce ; (; core::MultiVecDerivId ; result). ◆ computeDf(). void sofa::simulation::common::MechanicalOperations::computeDf ; (; core::MultiVecDerivId ; df, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force delta (given the latest propagated displacement) . ◆ computeDfV(). void sofa::simulation::common::MechanicalOperations::computeDfV ; (; core::MultiVecDerivId ; df, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force delta (given the latest propagated velocity) . ◆ computeEnergy(). void sofa::simulation::common::MechanicalOperations::computeEnergy ; (; SReal & ; kineticEnergy, . SReal & ; potentialEnergy . ). Compute Energy. ; Apply projective constraints to the given velocity vector. . ◆ computeForce() [1/2]. void sofa::simulation::common::MechanicalOperations::computeForce ; (; core::MultiVecDerivId ; result, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force (given the latest propagated position and velocity) . ◆ computeForce() [2/2]. void sofa::simulation::common::MechanicalOperations::computeForce ; (; SReal ; t, . core::MultiVecDerivId ; f, . core::MultiVecCoordId ; x, . core::MultiVecDerivId ; v . ). Compute f(x,v) at time t. Parameters x and v not const due to propagation through mappings. . ◆ getMatrixDimension() [1/2]. void sofa::simulation::common::MechanicalOperations::getMatrixDimension ; (; sofa::core::behavior::MultiMatrixAccessor * ; matrix). inline . ◆ getMatrixDimension() [2/2]. void sofa::simulation::common::MechanicalOperations::getMatrixDimension ; (; sofa::Size * const ; nbRow, . sofa::Size * const ; nbCol, . sofa::core::behavior::MultiMatrixAccessor * ; matrix = nullptr . ). ◆ integrateVelocity(). void sofa::simulation::common::MechanicalOperations::integrateVelocity ; (; core::MultiVecDerivId ; res, . core::ConstMultiVecCoordId ; x, . core::ConstMultiV",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:11749,clear,clear,11749,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['clear'],['clear']
Usability,"rixFree(unsigned int numConstraints)sofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; buildSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearConstraintProblemLocks()sofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeGraphssofa::component::constraint::lagrangian::solver::GenericConstraintSolver; computeResidual(const core::ExecParams *) overridesofa::component::constraint::lagrangian::solver::GenericConstraintSolvervirtual; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CP_BUFFER_SIZEsofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotectedstatic; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; current_cpsofa::component::constraint::lagrangian::solver::GenericConstraintSolverprotected; currentErrorsofa::component::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html:3835,clear,clearLoggedMessages,3835,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rixGeneric< TBlock, CRSConstraintPolicy >inlinestatic; BlockTranspose typedefsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; cbegin() constsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >inline; cend() constsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >inline; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inlinestatic; clear()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; ClearByZerossofa::linearalgebra::CRSConstraintPolicystatic; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; ColIterator typedefsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; compress()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inlineprotected; compressCSR()sofa::linearalgebra::CompressedRowSpa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html:4755,clear,clearColBlock,4755,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html,1,['clear'],['clearColBlock']
Usability,"rixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear(Index i, Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clear() overridesofa::linearalgebra::FullMatrix< T >virtual; clearCol(Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::FullMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linear",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html:6116,clear,clearRows,6116,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,2,['clear'],['clearRows']
Usability,"rojectiveConstraint. protectedvirtual . Function details. ◆ addIndex(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::addIndex ; (; Index ; index). ◆ addKeyVelocity(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::addKeyVelocity ; (; Real ; time, . Deriv ; movement . ). add a new key movement Parameters. time: the simulation time you want to set a movement (in sec) ; movement: the corresponding motion for instance, addKeyMovement(1.0, Deriv(5,0,0) ) will set a translation of 5 in x direction a time 1.0s . ◆ clearIndices(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyVelocity . ◆ clearKeyVelocities(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::clearKeyVelocities. ◆ draw(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ). overridevirtual . Project c to constrained space (c models a constraint).; This method must be implemented by the c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:23477,clear,clearKeyVelocities,23477,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,1,['clear'],['clearKeyVelocities']
Usability,"rotected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LinearForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void addPoint (unsigned index);  methods to add/remove some indices, keyTimes, keyForces More...;  ; void removePoint (unsigned int index);  ; void clearPoints ();  ; void addKeyForce (Real time, Deriv force);  ; void clearKeyForces ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  Add the forces. More...;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &, const DataVecDeriv &) override;  Compute the force derivative. More...;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const override;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html:4171,clear,clearPoints,4171,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,2,['clear'],"['clearKeyForces', 'clearPoints']"
Usability,"rotected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::GraphVisitor Class Reference . #include <GraphVisitor.h>. Protected Attributes; QTreeWidget * graph;  ; WindowVisitor * window;  ; double totalTime;  ; double totalTimeMax;  ; std::vector< double > timeComponentsBelow;  ; int level;  ; std::vector< dataTime > componentsTime;  ; std::vector< dataTime > visitorsTime;  ; std::vector< dataTime > componentsTimeTotal;  ; std::vector< dataTime > visitorsTimeTotal;  ; std::vector< dataTime > componentsTimeMax;  ; std::vector< dataTime > visitorsTimeMax;  ; std::vector< std::string > visitedNode;  ; bool initSize;  . Public Member Functions;  GraphVisitor (WindowVisitor *w);  ; QTreeWidgetItem * addNode (QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove, std::string info);  ; QTreeWidgetItem * addComment (QTreeWidgetItem *element, QTreeWidgetItem *elementAbove, std::string comment);  ; void addInformation (QTreeWidgetItem *element, std::string name, std::string info);  ; void addTime (QTreeWidgetItem *element, std::string info);  ; bool load (std::string &file);  ; void setGraph (QTreeWidget *g);  ; void clear ();  ; double getTotalTime (tinyxml2::XMLNode *node) const;  ; double getTime (const tinyxml2::XMLAttribute *attribute) const;  . Protected Member Functions; void openTime (tinyxml2::XMLNode *element, QTreeWidgetItem *item);  ; void openAttribute (tinyxml2::XMLElement *element, QTreeWidgetItem *item);  ; QTreeWidgetItem * openNode (tinyxml2::XMLNode *node, QTreeWidgetItem *parent, QTreeWidgetItem *elementAbove);  . Attribute details. ◆ componentsTime. std::vector< dataTime > sofa::gui::qt::GraphVisitor::componentsTime. protected . ◆ componentsTimeMax. std::vector< dataTime > sofa::gui::qt::GraphVisitor::componentsTimeMax. protected . ◆ componentsTimeTotal. std::vector< dataTime > sofa::gui::qt::GraphVisitor::componentsTimeTotal. protected . ◆ graph. QTreeWidget* sofa::gui::qt::GraphVisitor::graph. p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html:1317,clear,clear,1317,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_graph_visitor.html,1,['clear'],['clear']
Usability,"rotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CenterPointTopologicalMapping()sofa::component::topology::mapping::CenterPointTopologicalMappingprotected; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkTopologies()sofa::core::topology::TopologicalMappinginlinevirtual; checkTopologyInputTypes()sofa::core::topology::TopologicalMappingprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::topology::TopologicalMappinginlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; dumpGlob2LocMap()sofa::core::topology::TopologicalMapping; dumpLoc2GlobVec()sofa::core::topology::TopologicalMapping; ElementType typedefsofa::core::topology::TopologicalMapping; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html:2397,clear,clearLoggedMessages,2397,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearQuads()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundEdge()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsAroundVertex()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearQuadsInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:5198,clear,clearHexahedra,5198,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['clear'],['clearHexahedra']
Usability,rray () override;  Creates the EdgeSet array. More...;  ; void createTriangleSetArray () override;  Creates the TriangleSet array. More...;  ; virtual void createTetrahedronSetArray ();  Creates the TetrahedronSet array. More...;  ; virtual void createEdgesInTetrahedronArray ();  Creates the array of edge indices for each tetrahedron. More...;  ; virtual void createTrianglesInTetrahedronArray ();  Creates the array of triangle indices for each tetrahedron. More...;  ; virtual void createTetrahedraAroundVertexArray ();  Creates the TetrahedraAroundVertex Array. More...;  ; virtual void createTetrahedraAroundEdgeArray ();  Creates the TetrahedraAroundEdge Array. More...;  ; virtual void createTetrahedraAroundTriangleArray ();  Creates the TetrahedraAroundTriangle Array. More...;  ; void clearTetrahedra ();  ; void clearEdgesInTetrahedron ();  ; void clearTrianglesInTetrahedron ();  ; void clearTetrahedraAroundVertex ();  ; void clearTetrahedraAroundEdge ();  ; void clearTetrahedraAroundTriangle ();  ; virtual TetrahedraAroundVertex & getTetrahedraAroundVertexForModification (const PointID vertexIndex);  Returns a non-const list of tetrahedron indices around a given DOF for subsequent modification. More...;  ; virtual TetrahedraAroundEdge & getTetrahedraAroundEdgeForModification (const EdgeID edgeIndex);  Returns a non-const list of tetrahedron indices around a given edge for subsequent modification. More...;  ; virtual TetrahedraAroundTriangle & getTetrahedraAroundTriangleForModification (const TriangleID triangleIndex);  Returns a non-const list of tetrahedron indices around a given triangle for subsequent modification. More...;  ; void setTetrahedronTopologyToDirty ();  ; void cleanTetrahedronTopologyFromDirty ();  ; const bool & isTetrahedronTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::TriangleSetTopologyContainer;  TriangleSetTopologyContainer ();  ;  ~TriangleSetTopologyContainer () override;  ; vo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:38251,clear,clearTetrahedra,38251,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,6,['clear'],"['clearEdgesInTetrahedron', 'clearTetrahedra', 'clearTetrahedraAroundEdge', 'clearTetrahedraAroundTriangle', 'clearTetrahedraAroundVertex', 'clearTrianglesInTetrahedron']"
Usability,"rseGridTopologyprotected; buildFromVoxelLoader(sofa::core::loader::VoxelLoader *loader)sofa::component::topology::container::grid::SparseGridTopologyprotected; buildVirtualFinerLevels()sofa::component::topology::container::grid::SparseGridTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingBox(const type::vector< type::Vec3 > &vertices, SReal &xmin, SReal &xmax, SReal &ymin, SReal &ymax, SReal &zmin, SReal &zmax) constsofa::component::topology::container::grid::SparseGridTopologyprotected; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; constructCollisionModels(const sofa::type::vector< sofa::core::topology::BaseMeshTopology * > &list_mesh, const type::vector< Data< type::vector< sofa::type::Vec< 3, T > > > * > &list_X)sofa::component::topology::container::grid::SparseGridTopologyprotected; convolutionSizesofa::component::topology::container::grid:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html:7297,clear,clearLoggedMessages,7297,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rseMatrix< T >::addMulTranspose ; (; linearalgebra::BaseVector * ; res, . const FullVector< Real2 > & ; v . ); const. inline . ◆ addMulTranspose() [4/4]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::addMulTranspose ; (; linearalgebra::BaseVector * ; res, . const linearalgebra::BaseVector * ; v . ); const. inline . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::SparseMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ begin() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ); const. inline . ◆ clear() [1/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::SparseMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:21698,clear,clear,21698,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,1,['clear'],['clear']
Usability,"rseMatrixGeneric< TBlock, CRSConstraintPolicy >; btempsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; category enum valuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; cbegin() constsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >inline; cend() constsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >inline; check_matrix()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; check_matrix(Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inlinestatic; clear()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; ClearByZerossofa::linearalgebra::CRSConstraintPolicystatic; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; ColIterator typedefsofa::linearalgebra::CompressedRowSparseMatrixConstraint< TBlock, TPolicy >; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; compress()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inline; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inlineprotected; compressCSR()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >inlineprotected; CompressedRowSparseMatrixConstraint()sofa::lineara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html:4869,clear,clearRowBlock,4869,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint-members.html,1,['clear'],['clearRowBlock']
Usability,"rt (i.e., Simulation::step): AdvancedTimer::begin(""Animate"");; When all computations stop (i.e., Simulation::step): AdvancedTimer::end(""Animate"");; Using a local variable to automatically call end when current instruction block (i.e. method) ends : AdvancedTimer::TimerVar(""Animate"");; When a part of the computation starts: AdvancedTimer::stepBegin(""Collision"");; When a part of the computation stops: AdvancedTimer::stepEnd(""Collision"");; Both operations combined: AdvancedTimer::stepNext(""Collision"", ""Mechanical"");; Using a local variable to automatically call stepEnd when current instruction block (i.e. method) ends : AdvancedTimer::StepVar(""UpdateMapping"");; Specifying the object being processed: AdvancedTimer::StepVar(""Collision"", objPtr);; When a noteworthy milestone happens: AdvancedTimer::step(""Event1"");; When a noteworthy value must be stored: AdvancedTimer::valSet(""contacts"",nbContacts);; When a noteworthy value must be accumulated: AdvancedTimer::valAdd(""dofs"",mstate->getSize());; When reloading/resetting the simulation: AdvancedTimer::clear();; The produced stats will looks like:; ==== Animate ====; Trace of last iteration : 0 ms > begin Collision : var nbCM = 10 10 ms > begin BP 20 ms < end NP > begin NP 120 ms < end NP : var nbContacts = 100 > begin Response 150 ms < end Response < end Collision > begin Mechanical > begin CGSolve on Torus1 : var dofs += 300 ... 434 ms END; Steps Duration Statistics (in ms) : LEVEL START NUM MEAN MAX TOTAL ID 0 0 100 222.2 546.3 22220 TOTAL 1 0 1 80.5 120.7 80.5 Collision 2 0 1 7.2 8.4 7.2 BP 2 7.2 0.95 65.4 104.8 62.3 NP 2 69.5 1 11.0 13.7 11.0 Response 1 80.5 1 131.1 308.9 131.1 Mechanical 2 80.5 10 13.1 45.7 131.0 CGSolve ...; Values Statistics : MIN MAX MEAN ID 10 10 10 nbCM 0 1230 420.3 nbContacts 5000 5000 5000 dofs; ==== END ==== . Public Attributes; sofa::helper::system::thread::ctime_t time;  ; enum sofa::helper::Record::Type type;  ; std::string label;  ; unsigned int id;  ; unsigned int obj;  ; double val;  . Pub",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_record.html:1514,clear,clear,1514,api/master/sofa/html/classsofa_1_1helper_1_1_record.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_record.html,1,['clear'],['clear']
Usability,rtex ();  ; void clearQuadsAroundEdge ();  ; virtual QuadsAroundVertex & getQuadsAroundVertexForModification (const PointID vertexIndex);  Returns a non-const list of quad indices around a given DOF for subsequent modification. More...;  ; virtual QuadsAroundEdge & getQuadsAroundEdgeForModification (const EdgeID edgeIndex);  Returns a non-const list of quad indices around a given edge for subsequent modification. More...;  ; void setQuadTopologyToDirty ();  ; void cleanQuadTopologyFromDirty ();  ; const bool & isQuadTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer;  EdgeSetTopologyContainer ();  ;  ~EdgeSetTopologyContainer () override;  ; virtual void createEdgesAroundVertexArray ();  Creates the EdgesAroundVertex array. More...;  ; void clearEdges ();  ; void clearEdgesAroundVertex ();  ; void setEdgeTopologyToDirty ();  ; void cleanEdgeTopologyFromDirty ();  ; const bool & isEdgeTopologyDirty ();  ; virtual EdgesAroundVertex & getEdgesAroundVertexForModification (const PointID i);  Returns a non-const list of Edge indices around the ith DOF for subsequent modification. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer;  PointSetTopologyContainer (Size nPoints=0);  ;  ~PointSetTopologyContainer () override=default;  ; void setPointTopologyToDirty ();  ; void cleanPointTopologyFromDirty ();  ; const bool & isPointTopologyDirty () const;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyContainer;  TopologyContainer ();  Constructor. More...;  ;  ~TopologyContainer () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::topology::BaseTopologyObject;  BaseTopologyObject ();  ;  ~BaseTopologyObject () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtu,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:39515,clear,clearEdges,39515,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,8,['clear'],"['clearEdges', 'clearEdgesAroundVertex']"
Usability,"rtion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Attribute details. ◆ AutoCompress. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoCompress = true. staticconstexpr . Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) . ◆ AutoSize. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::AutoSize = false. staticconstexpr . Set to true if the size of the matrix should be automatically increased when new blocks are added. . ◆ ClearByZeros. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::ClearByZeros = true. staticconstexpr . Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) . ◆ CompressZeros. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::CompressZeros = true. staticconstexpr . Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) . ◆ IsAlwaysSquare. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::IsAlwaysSquare = false. staticconstexpr . Set to true if this matrix is always square (must be true for symmetric) . ◆ IsAlwaysSymmetric. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::IsAlwaysSymmetric = false. staticconstexpr . Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) . ◆ matrixType. constexpr int sofa::linearalgebra::CRSDefaultPolicy::matrixType = 0. staticconstexpr . Do not change this value, has to be overrided for all derivated class. . ◆ OrderedInsertion. constexpr bool sofa::linearalgebra::CRSDefaultPolicy::OrderedInsertion = false. staticconstexpr . Set to true if insertion in matri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html:2364,clear,clear,2364,api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1_c_r_s_default_policy.html,2,['clear'],"['clear', 'clearing']"
Usability,"rtual . Reimplemented from sofa::core::topology::Topology. ◆ init(). void sofa::core::topology::BaseMeshTopology::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::core::topology::TopologyContainer. ◆ insertInNode(). bool sofa::core::topology::BaseMeshTopology::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::core::topology::TopologyContainer. ◆ load(). bool sofa::core::topology::BaseMeshTopology::load ; (; const char * ; filename). virtual . Load the topology from a file.; The default implementation supports the following formats: obj, gmsh, mesh (custom simple text file), xs3 (deprecated description of mass-springs networks). . ◆ removeInNode(). bool sofa::core::topology::BaseMeshTopology::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::core::topology::TopologyContainer. ◆ reOrientateTriangle(). void sofa::core::topology::BaseMeshTopology::reOrientateTriangle ; (; TriangleID ; id). virtual . Will change order of vertices in triangle: t[1] <=> t[2]. ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, and sofa::component::topology::container::constant::MeshTopology. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::topology::BaseMeshTopology::SOFA_ABSTRACT_CLASS ; (; BaseMeshTopology ; , . core::topology::Topology ;  . ). s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html:56306,simpl,simple,56306,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,1,['simpl'],['simple']
Usability,"rtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; colSize() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; compress() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inlineprotected; compressCSR()sofa::linearalgebra::Comp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:15296,clear,clearRowColBlock,15296,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clearRowColBlock']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; Color typedefsofa::gl::component::rendering2d::OglColorMap; Color3 typedefsofa::gl::component::rendering2d::OglColorMap; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorSchemesofa::gl::component::rendering2d::OglColorMap; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_legendOffsetsofa::gl::component::rendering2d::OglColorMap; d_legendRangeScalesofa::gl::component::rendering2d::OglColorMap; d_legendSizesofa::gl::component::rendering2d::OglColorMap; d_legendTitlesofa::gl::component::rendering2d::OglColorMap; d_maxsofa::gl::component::rend",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html:2425,clear,clearLoggedMessages,2425,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; colorsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computePlaneSeparations()sofa::gl::component::rendering3d::SlicedVolumetricModelprotected; Coord typedefsofa::gl::component::rendering3d::SlicedVolumetricModelprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html:3647,clear,clearLoggedMessages,3647,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::visual::TrailRenderer< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::visual::TrailRenderer< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_nbStepssofa::component::visual::TrailRenderer< DataTypes >; d_positionsofa::component::visual::TrailRenderer< DataTypes >; d_thicknesssofa::component::visual::TrailRenderer< DataTypes >; doDrawVisual(const core::visual::VisualParams *vparams) overridesofa::component::visua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html:2437,clear,clearLoggedMessages,2437,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBBoxStep(sofa::core::visual::VisualParams *, SReal *, SReal *, bool)sofa::core::visual::VisualLoopinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawStep(sofa::core::visual::Visual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html:2395,clear,clearLoggedMessages,2395,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_alignmentsofa::gl::component::rendering3d::OglSceneFrame; d_componentStatesofa::core::objectmodel::Base; d_drawFramesofa::gl::component::rendering3d::OglSceneFrame; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_stylesofa::gl::component::rendering3d::OglSceneFrame; d_viewportSizesofa::gl::component::rendering3d::OglSceneFrame; doDrawVisual(const core::visual::VisualParams *) overridesofa::gl::component::rendering3d::OglSceneFramevirtual; doUpdateInternal()sofa::core::objectmodel::BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html:2429,clear,clearLoggedMessages,2429,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_axissofa::component::visual::LineAxis; d_componentStatesofa::core::objectmodel::Base; d_drawsofa::component::visual::LineAxis; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_sizesofa::component::visual::LineAxis; d_thicknesssofa::component::visual::LineAxis; doDrawVisual(const core::visual::VisualParams *) overridesofa::component::visual::LineAxisvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html:2401,clear,clearLoggedMessages,2401,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::component::visual::Visual3DText; d_componentStatesofa::core::objectmodel::Base; d_depthTestsofa::component::visual::Visual3DText; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_positionsofa::component::visual::Visual3DText; d_scalesofa::component::visual::Visual3DText; d_textsofa::component::visual::Visual3DText; doDrawVisual(const core::visual::VisualParams *vparams) overridesofa::component::visual::Visual3DTextvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectpr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html:2409,clear,clearLoggedMessages,2409,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::gl::component::rendering2d::OglLabel; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_fontsizesofa::gl::component::rendering2d::OglLabel; d_labelsofa::gl::component::rendering2d::OglLabel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_prefixsofa::gl::component::rendering2d::OglLabel; d_selectContrastingColorsofa::gl::component::rendering2d::OglLabel; d_suffixsofa::gl::component::rendering2d::OglLabel; d_updateLabelEveryNbStepssofa::gl::component::rendering2d::OglLabel; d_vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html:2419,clear,clearLoggedMessages,2419,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::rendering2d::OglViewportvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::rendering2d::OglViewportvirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::rendering2d::OglViewportvirtual; drawS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html:2425,clear,clearLoggedMessages,2425,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< DataTypes >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< DataTypes >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html:2441,clear,clearLoggedMessages,2441,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< float >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< float >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html:2425,clear,clearLoggedMessages,2425,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< int >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html:2421,clear,clearLoggedMessages,2421,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec2f >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec2f >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html:2427,clear,clearLoggedMessages,2427,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec3f >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec3f >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html:2427,clear,clearLoggedMessages,2427,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec4f >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec4f >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html:2427,clear,clearLoggedMessages,2427,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 2, int > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html:2423,clear,clearLoggedMessages,2423,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 3, int > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html:2423,clear,clearLoggedMessages,2423,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::Vec< 4, int > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html:2423,clear,clearLoggedMessages,2423,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< GLint > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html:2435,clear,clearLoggedMessages,2435,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable-members.html,4,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< float > >inlinevirtual; draw(const core::visual::VisualParams *)sofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html:2437,clear,clearLoggedMessages,2437,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable-members.html,10,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >inlinevirtual; draw(const core::visual::VisualParams ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html:2441,clear,clearLoggedMessages,2441,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >inlinevirtual; draw(const core::visual::VisualParams *)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html:2439,clear,clearLoggedMessages,2439,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >inlinevirtual; draw(const core::visual::VisualParams *)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html:2439,clear,clearLoggedMessages,2439,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >inlinevirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >inlinevirtual; draw(const core::visual::VisualParams *)so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html:2439,clear,clearLoggedMessages,2439,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::PostProcessManagervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::shader::PostProcessManagervirtual; drawShadow(con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html:2429,clear,clearLoggedMessages,2429,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawScene(VisualParams *)sofa::core::visual::VisualManagerinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html:2401,clear,clearLoggedMessages,2401,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_manager-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvir",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html:2397,clear,clearLoggedMessages,2397,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyRotation(const type::Quat< SReal >)sofa::core::visual::VisualModelinlinevirtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const core::visual::VisualParams *vparams) overridesofa::gl::component::rendering3d::PointSplatModelvirtual; drawVisual(const VisualParams ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html:2433,clear,clearLoggedMessages,2433,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_point_splat_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bind()sofa::gl::component::shader::OglTexturePointer; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglTexturePointervirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const VisualParams *) finalsofa::core::visual::VisualModelvir",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html:2513,clear,clearLoggedMessages,2513,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer-members.html,1,['clear'],['clearLoggedMessages']
Usability,"rtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; category enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clear() overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize(void) constsofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html:6816,clear,clearRows,6816,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,1,['clear'],['clearRows']
Usability,"rtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear(Index i, Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clear() overridesofa::linearalgebra::FullMatrix< T >virtual; clearCol(Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::FullMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html:5892,clear,clearCols,5892,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,2,['clear'],['clearCols']
Usability,rty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTriangleArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgesInTriangleArray ; (; ). protectedvirtual . Creates the array of edge indices for each triangle. ; This function is only called if the EdgesInTriangle array is required. m_edgesInTriangle[i] contains the 3 indices of the 3 edges composing the ith triangle. . ◆ createElementsOnBorder(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createElementsOnBorder ; (; ). : Create e,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:41831,clear,clearTrianglesAroundVertex,41831,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clearTrianglesAroundVertex']
Usability,s ();  ; virtual TrianglesAroundVertex & getTrianglesAroundVertexForModification (const PointID vertexIndex);  Returns a non-const list of triangle indices around a given DOF for subsequent modification. More...;  ; virtual TrianglesAroundEdge & getTrianglesAroundEdgeForModification (const EdgeID edgeIndex);  Returns a non-const list of triangle indices around a given edge for subsequent modification. More...;  ; void setTriangleTopologyToDirty ();  ; void cleanTriangleTopologyFromDirty ();  ; const bool & isTriangleTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer;  EdgeSetTopologyContainer ();  ;  ~EdgeSetTopologyContainer () override;  ; virtual void createEdgesAroundVertexArray ();  Creates the EdgesAroundVertex array. More...;  ; void clearEdges ();  ; void clearEdgesAroundVertex ();  ; void setEdgeTopologyToDirty ();  ; void cleanEdgeTopologyFromDirty ();  ; const bool & isEdgeTopologyDirty ();  ; virtual EdgesAroundVertex & getEdgesAroundVertexForModification (const PointID i);  Returns a non-const list of Edge indices around the ith DOF for subsequent modification. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer;  PointSetTopologyContainer (Size nPoints=0);  ;  ~PointSetTopologyContainer () override=default;  ; void setPointTopologyToDirty ();  ; void cleanPointTopologyFromDirty ();  ; const bool & isPointTopologyDirty () const;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyContainer;  TopologyContainer ();  Constructor. More...;  ;  ~TopologyContainer () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::topology::BaseTopologyObject;  BaseTopologyObject ();  ;  ~BaseTopologyObject () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtu,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:40843,clear,clearEdges,40843,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,4,['clear'],"['clearEdges', 'clearEdgesAroundVertex']"
Usability,"s . sofa::linearalgebra::matrix_bloc_traits< int, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, int, int);  ; static const Real & v (const Block &b, int, int);  ; static void vset (Block &b, int, int, Real val);  ; static void vadd (Block &b, int, int, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static void split_row_index (int &index, int &modulo);  ; static void split_col_index (int &index, int &modulo);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ Name(). template<typename IndexType > . static const std::string sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::Name ; (; ). inlinestatic . ◆ split_col_index(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::split_col_index ; (; int & ; index, . int & ; modulo . ). inlinestatic . ◆ split_row_index(). template<typename ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01int_00_01_index_type_01_4.html:1247,clear,clear,1247,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01int_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01int_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability,"s Quat except the values are not initialized by default. . Public Member Functions; constexpr QuatNoInit () noexcept;  ;  Public Member Functions inherited from sofa::type::Quat< Real >; constexpr Quat ();  ; constexpr Quat (qNoInit);  Fast constructor: no initialization. More...;  ;  ~Quat ()=default;  ; constexpr Quat (Real x, Real y, Real z, Real w);  ; template<class Real2 > ; constexpr Quat (const Real2 q[]);  ; template<class Real2 > ; constexpr Quat (const Quat< Real2 > &q);  ;  Quat (const Vec3 &axis, Real angle);  ;  Quat (const Vec3 &vFrom, const Vec3 &vTo);  ; void set (Real x, Real y, Real z, Real w);  ; const Real * ptr () const;  Cast into a standard C array of elements. More...;  ; Real * ptr ();  Cast into a standard C array of elements. More...;  ; bool isNormalized ();  Returns true if norm of Quaternion is one, false otherwise. More...;  ; void normalize ();  Normalize a quaternion. More...;  ; void clear ();  ; void fromFrame (const Vec3 &x, const Vec3 &y, const Vec3 &z);  Convert the reference frame orientation into an orientation quaternion. More...;  ; void fromMatrix (const Mat3x3 &m);  Convert a rotation matrix into an orientation quaternion. More...;  ; void toMatrix (Mat3x3 &m) const;  Convert the quaternion into an orientation matrix. More...;  ; constexpr void toHomogeneousMatrix (Mat4x4 &m) const;  ; constexpr auto rotate (const Vec3 &v) const -> Vec3;  Apply the rotation to a given vector. More...;  ; constexpr auto inverseRotate (const Vec3 &v) const -> Vec3;  Apply the inverse rotation to a given vector. More...;  ; auto operator+ (const Quat &q1) const -> Quat;  ; constexpr auto operator* (const Quat &q1) const -> Quat;  ; constexpr auto operator* (const Real &r) const -> Quat;  ; auto operator/ (const Real &r) const -> Quat;  ; void operator*= (const Real &r);  ; void operator/= (const Real &r);  ; constexpr auto quatVectMult (const Vec3 &vect) const -> Quat;  Given two Quats, multiply them together to get a third quaternion. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init.html:1430,clear,clear,1430,api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat_no_init.html,1,['clear'],['clear']
Usability,"s TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowsCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Clears all the values in rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ coeffRef(). template<class TReal > . Real& sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::coeffRef ; (; Index ; i, . Index ; j . ). inline . Return a reference to the given entry in the compressed matrix.There can (must ?) be a value at this place already. Efficient only if the it is at the last place of the compressed matrix. . ◆ colSize(). template<class TReal > . Index sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::colSize ; (; void ; ); const. inlineoverridevirtual . number of columns ; Implements sofa::linearalgebra::BaseMatrix. ◆ compress(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::compress ; (; ). inlineoverridevirtual . Add the values from the scheduled list, and clears the schedule list. ; See alsoset(Index i, Index j, double v). ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ copy(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::copy ; (; const EigenBaseSparseMatrix< TReal > & ; m, . unsigned ; nbCol, . unsigned ; shift . ). inline . Clear and resize this to (m.rows,nbCol) and initialize it with the given matrix, columns shifted of the given value: this(i,j+shift) = m(i,j). @precond nbCol >= m.cols + shift . ◆ element(). template<class TReal > . SReal sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getColsIndex(). template<class TReal > . Index* sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::getColsIndex ; (; ). inline . ◆ getColsValue(). template<class TReal > . Real* sofa::linearalgebra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:22088,clear,clears,22088,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clears']
Usability,"s for sofa::simulation::xml::ObjectElement, including all inherited members. addChild(BaseElement *child)sofa::simulation::xml::BaseElementvirtual; addReplaceAttribute(const std::string &attr, const char *val)sofa::simulation::xml::BaseElementvirtual; AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseElement(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::BaseElement; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; begin()sofa::simulation::xml::BaseElementinline; begin()sofa::simulation::xml::BaseElementinline; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; create(Node *, std::pair< std::string, std::string > arg)sofa::simulation::xml::BaseElementinlinestatic; Create(const std::string &nodeClass, const std::string &name, const std::string &type)sofa::simulation::xml::BaseElementstatic; Element(const std::string &name, const std::string &type, BaseElement *newParent=nullptr)sofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >; end()sofa::simulation::xml::BaseElementinline; end()sofa::simulation::xml::BaseElementinline; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; Factory typedefsofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >; find(const char *nodeName, bool absolute=false) overridesofa::simulation::xml::BaseElementinlinevirtual; findNode(const char *nodeName, bool absolute=false)sofa::simulation::xml::BaseElementvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element-members.html:921,clear,clearErrors,921,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_object_element-members.html,1,['clear'],['clearErrors']
Usability,"s from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<std::size_t LC, typename T = SReal> . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ addB() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . const Block & ; b . ). inline . ◆ addB() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . Index ; j, . const Block & ; b . ). inline . ◆ bloc() [1/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i); const. inline . ◆ bloc() [2/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i, . Index ; j . ); const. inline . ◆ clear() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:18879,clear,clear,18879,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,1,['clear'],['clear']
Usability,s if the topology is coherent. ; Check if the shell arrays are coherent See alsom_hexahedron . m_edgesInHexahedron . m_quadsInHexahedron . m_hexahedraAroundVertex . m_hexahedraAroundEdge . m_hexahedraAroundQuad ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanHexahedronTopologyFromDirty(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::cleanHexahedronTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reim,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:49297,clear,clearHexahedra,49297,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearHexahedra']
Usability,"s only for compatibility reasons. To be removed once the deprecated API addKToMatrix, addBToMatrix and addMToMatrix is removed . Public Attributes; sofa::core::matrixaccumulator::get_component_type< c > * component { nullptr };  ; sofa::core::matrixaccumulator::get_matrix_builder_type< c > * matrices { nullptr };  ; sofa::core::behavior::BaseMechanicalState * mstate1 { nullptr };  ; sofa::core::behavior::BaseMechanicalState * mstate2 { nullptr };  . Static Public Attributes; static constexpr const char * compatibilityMessage;  . Public Member Functions;  ~AddToMatrixCompatMatrix () override=default;  ; Index rowSize () const override;  Number of rows. More...;  ; Index colSize () const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index row, Index col, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index row, Index col, const type::Mat3x3d &_M) override;  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; void add (Index row, Index col, const type::Mat3x3f &_M) override;  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read th",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:1664,clear,clear,1664,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,1,['clear'],['clear']
Usability,"s |; List of all members . sofa::defaulttype::RigidCoord< 2, real > Class Template Reference . #include <RigidCoord.h>. Static Public Attributes; static constexpr sofa::Size total_size = 3;  Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) More...;  ; static constexpr sofa::Size spatial_dimensions = 2;  Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) More...;  . Public Member Functions; constexpr RigidCoord (const Vec2 &posCenter, const Real &orient);  ; constexpr RigidCoord ();  ; constexpr void clear ();  ; constexpr void operator+= (const RigidDeriv< 2, real > &a);  ; constexpr RigidCoord< 2, real > operator+ (const RigidDeriv< 2, real > &a) const;  ; constexpr RigidCoord< 2, real > operator- (const RigidCoord< 2, real > &a) const;  ; constexpr RigidCoord< 2, real > operator+ (const RigidCoord< 2, real > &a) const;  ; constexpr RigidCoord< 2, real > operator- () const;  ; constexpr void operator+= (const RigidCoord< 2, real > &a);  ; template<typename real2 > ; constexpr void operator*= (real2 a);  ; template<typename real2 > ; constexpr void operator/= (real2 a);  ; template<typename real2 > ; constexpr RigidCoord< 2, real > operator* (real2 a) const;  ; template<typename real2 > ; constexpr RigidCoord< 2, real > operator/ (real2 a) const;  ; constexpr Real operator* (const RigidCoord< 2, real > &a) const;  dot product, mostly used to compute residuals as sqrt(x*x) More...;  ; Real norm2 () const;  Squared norm. More...;  ; real norm () const;  Euclidean norm. More...;  ; constexpr Vec2 & getCenter ();  ; constexpr Real & getOrientation ();  ; constexpr const Vec2 & getCenter () const;  ; constexpr const Real & getOrientation () const;  ; Vec2 rotate (const Vec2 &v) const;  ; Vec2 inverseRotate (const Vec2 &v) const;  ; constexpr Vec2 translate (const Vec2 &v) const;  ; constexpr RigidCoord< 2, real > translate (const RigidCoord< 2, real > &c) c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4.html:871,clear,clear,871,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4.html,1,['clear'],['clear']
Usability,"s(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::addPoints ; (; const Size ; nPoints). add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) ; Parameters. Thenumber of point to add. . ◆ checkTopology(). bool sofa::component::topology::container::dynamic::PointSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the Topology is coherent. ; Dynamic Topology API ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::QuadSetTopologyContainer. ◆ cleanPointTopologyFromDirty(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::cleanPointTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::QuadSetTopologyContainer. ◆ getNbPoints(). Size sofa::component::topology::container::dynamic::PointSetTopologyContainer::getNbPoints ; (; ); const. inlineoverridevirtual . Returns the number of vertices in this topology. ; BaseMeshTopology API ; Reimplemented from sofa::core::topology::Topology. ◆ getNumberOfElements(). Size sofa::component::topology::container::dynamic::PointSetTopologyContainer::getNumberOfElements ; (; ); const. virtual . Returns the number of topological element of the current topology. This function avoids to know which topological container is in used. ; Reimplemented in sofa::component::t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:32191,clear,clear,32191,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['clear'],['clear']
Usability,"s, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox() constsofa::core::State< TDataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; Coord typedefsofa::core::State< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::State< TDataTypes >; Deriv typedefsofa::core::State< TDataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state-members.html:2216,clear,clearLoggedMessages,2216,api/master/sofa/html/classsofa_1_1core_1_1_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state-members.html,1,['clear'],['clearLoggedMessages']
Usability,s.min.js. /cf7-conditional-fields; . /js; ; scripts.js. style.css. /cleantalk-spam-protect; . /css; . /images; ; bad_email.svg; good_email.svg. cleantalk-email-decoder.min.css; cleantalk-public.min.css. /js; ; apbct-public-bundle.min.js. /contact-form-7; . /includes; . /css; ; styles.css. /js; ; index.js. /swv; . /js; ; index.js. /revslider; . /rs-plugin; . /css; ; settings.css. /font; ; revicons.eot; revicons.svg; revicons.ttf; revicons.woff. /js; ; jquery.themepunch.revolution.min.js; jquery.themepunch.tools.min.js. /wpcf7-recaptcha; . /assets; . /js; ; wpcf7-recaptcha-controls.js. /wp-logo-showcase-responsive-slider-slider; . /assets; . /css; ; slick.css; wpls-public.css. /js; ; slick.min.js; wpls-public.js. /sofaGraph; ; controller.js; functions.js; style.css. /themes; . /inovado; . /framework; . /css; . /font; ; fontawesome-webfont-1.eot; fontawesome-webfont.eot; fontawesome-webfont.ttf; fontawesome-webfont.woff. custom_script.css; flexslider.css; headers.css; prettyPhoto.css; responsive.css; retina.css; shortcodes.css. /js; . /twitter; ; jquery.tweet.js. bootstrap.js; easing.js; fitvids.js; flexslider.js; functions.js; isotope.js; mobilemenu.js; prettyPhoto.js; shortcodes.js; superfish.js; waypoints.js; waypoints-sticky.js. style.css. /inovado_child; ; style.css. /uploads; . /2016; . /08; ; 2-Tutorial.pdf. /2017; . /04; ; STC3-Report.pdf. /2018; . /07; ; STC1-Report.pdf; STC2-Report.pdf; STC4-Report.pdf; STC5-Report.pdf. /11; ; SOFA-SymposiumProgram-2018.pdf. /12; ; STC6-Report.pdf. /2019; . /06; ; STC7-Report.pdf. /11; ; FrenchTechCentral_Plan_FR.pdf; SOFA-SymposiumProgram-2019.pdf. /12; ; STC8-Report.pdf. /2020; . /05; ; STC9-Agenda-public.pdf; STC9-Report-corrected.pdf. /11; ; 20201118-SOFA-Symposium-2020-Program.pdf. /2021; . /04; ; STC10-Report.pdf. /2022; . /01; ; STC11-Report.pdf; STC12-Report.pdf. /06; ; STC13-Report.pdf. /2023; . /01; ; STC14-Report.pdf. /02; ; interpolated.mp4; Screencast-2023-02-22-154742.mp4; TorusFall__r60_0002.mp4. /06; ; STC15-R,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:587720,responsiv,responsive,587720,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['responsiv'],['responsive']
Usability,"s;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(HermiteSplineProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ; void clearConstraints ();  ; void addConstraint (unsigned index);  ; void setBeginTime (const Real &t);  ; void setEndTime (const Real &t);  ; Real getBeginTime ();  ; Real getEndTime ();  ; void computeHermiteCoefs (const Real u, Real &H00, Real &H10, Real &H01, Real &H11);  ; void computeDerivateHermiteCoefs (const Real u, Real &dH00, Real &dH10, Real &dH01, Real &dH11);  ; void init () override;  – Constraint interface More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void ini",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html:3621,clear,clearConstraints,3621,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"sIdx. Data< type::vector<int> > sofa::component::io::mesh::MeshOBJLoader::d_vertPosIdx. If vertices have multiple normals/texcoords, then we need to separate them This vector store which input position is used for each vertex If it is empty then each vertex correspond to one position . ◆ faceType. FaceType sofa::component::io::mesh::MeshOBJLoader::faceType. protected . ◆ textureName. std::string sofa::component::io::mesh::MeshOBJLoader::textureName. protected . Constructor details. ◆ MeshOBJLoader(). sofa::component::io::mesh::MeshOBJLoader::MeshOBJLoader ; (; ). protected . ◆ ~MeshOBJLoader(). sofa::component::io::mesh::MeshOBJLoader::~MeshOBJLoader ; (; ). overrideprotected . Function details. ◆ addGroup(). void sofa::component::io::mesh::MeshOBJLoader::addGroup ; (; const sofa::core::loader::PrimitiveGroup & ; g). protected . ◆ doClearBuffers(). void sofa::component::io::mesh::MeshOBJLoader::doClearBuffers ; (; ). overrideprotectedvirtual . MeshOBJLoader::clearBuffers Clear all the buffer containing the data loaded from the file. ; Implements sofa::core::loader::MeshLoader. ◆ doLoad(). bool sofa::component::io::mesh::MeshOBJLoader::doLoad ; (; ). overridevirtual . Implements sofa::core::loader::MeshLoader. ◆ readMTL(). bool sofa::component::io::mesh::MeshOBJLoader::readMTL ; (; const char * ; filename, . type::vector< sofa::type::Material > & ; d_materials . ). protected . ◆ readOBJ(). bool sofa::component::io::mesh::MeshOBJLoader::readOBJ ; (; std::ifstream & ; file, . const char * ; filename . ). protected . ◆ SOFA_CLASS(). sofa::component::io::mesh::MeshOBJLoader::SOFA_CLASS ; (; MeshOBJLoader ; , . sofa::core::loader::MeshLoader ;  . ). ◆ type(). virtual std::string sofa::component::io::mesh::MeshOBJLoader::type ; (; ). inlinevirtual . Enum details. ◆ FaceType. enum sofa::component::io::mesh::MeshOBJLoader::FaceType. EnumeratorEDGE ; TRIANGLE ; QUAD ; NBFACETYPE . sofacomponentiomeshMeshOBJLoader; Generated on Mon Nov 11 2024 02:46:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html:25499,clear,clearBuffers,25499,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,1,['clear'],['clearBuffers']
Usability,"se *from);  ; static std::string CreateString (Base *object, BaseData *data, Base *from);  ; void updateCounter ();  . Attribute details. ◆ m_counter. int sofa::core::objectmodel::BaseLink::m_counter. protected . Number of changes since creation. . ◆ m_flags. unsigned int sofa::core::objectmodel::BaseLink::m_flags. protected . ◆ m_help. std::string sofa::core::objectmodel::BaseLink::m_help. protected . ◆ m_name. std::string sofa::core::objectmodel::BaseLink::m_name. protected . Constructor details. ◆ BaseLink() [1/2]. sofa::core::objectmodel::BaseLink::BaseLink ; (; LinkFlags ; flags). ◆ BaseLink() [2/2]. sofa::core::objectmodel::BaseLink::BaseLink ; (; const BaseInitLink & ; init, . LinkFlags ; flags . ). ◆ ~BaseLink(). sofa::core::objectmodel::BaseLink::~BaseLink ; (; ). virtual . Function details. ◆ add(). bool sofa::core::objectmodel::BaseLink::add ; (; Base * ; baseptr, . const std::string & ; path . ). inline . Add a new target to the link. . ◆ clear(). void sofa::core::objectmodel::BaseLink::clear ; (; ). inline . ◆ CreateString() [1/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; Base * ; object, . Base * ; from . ). static . ◆ CreateString() [2/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; Base * ; object, . BaseData * ; data, . Base * ; from . ). static . ◆ CreateString() [3/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; BaseData * ; data, . Base * ; from . ). static . ◆ CreateString() [4/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; const std::string & ; path, . const std::string & ; data = """" . ). static . ◆ CreateStringData(). std::string sofa::core::objectmodel::BaseLink::CreateStringData ; (; BaseData * ; data). static . ◆ CreateStringPath(). std::string sofa::core::objectmodel::BaseLink::CreateStringPath ; (; Base * ; object, . Base * ; from . ). static . ◆ getCounter(). int sofa::core::objectmodel::BaseLink::getCounter ; (; ); const. inline . Return the number o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html:4510,clear,clear,4510,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,1,['clear'],['clear']
Usability,"se()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; bboxsofa::component::visual::VisualModelImpl; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; castShadowsofa::component::visual::VisualModelImpl; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *params, bool=false) overridesofa::component::visual::VisualModelImplvirtual; VisualState< defaulttype::Vec3Types >::computeBBox() constsofa::core::State< TDataTypes >; computeBitangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeMesh()sofa::component::visual::VisualModelImplvirtual; computeNormals()sofa::component::visual::VisualModelImplvirtual; computePositions()sofa::component::visual::VisualModelImplvirtual; computeTangent(const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3)sofa::component::visual::VisualModelImplstatic; computeTangents()sofa::component::visual::VisualModelImplvirtual; computeUVSphereProjection()sofa::component::visual::VisualModelImplvirtual; Coord",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html:3181,clear,clearLoggedMessages,3181,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl-members.html,1,['clear'],['clearLoggedMessages']
Usability,"se; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::TrianglePressureForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; cauchyStresssofa::component::mechanicalload::TrianglePressureForceField< DataTypes >; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::TrianglePressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_cauchyStresssofa::component::mechanicalload::TrianglePressureForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_pressuresofa::component::mechanicalload::TrianglePressureForceField< DataTypes >; d_showForcessofa::component::mechanicalload::TrianglePressureForceField< DataTypes >; d_triangleListsofa::component::mechanicalload::TrianglePressureForceField< DataTypes >; d_trianglePressureMapsofa::component::mec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field-members.html:4776,clear,clearLoggedMessages,4776,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"seMatrix. ◆ bRowsRange(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . virtual std::pair<RowBlockConstIterator, RowBlockConstIterator> sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::bRowsRange ; (; ); const. inlineoverridevirtual . Get the iterators corresponding to the beginning and end of the given row of blocks. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clear() [1/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:48670,clear,clear,48670,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clear']
Usability,"seMatrix::BlockAccessor::prepareAdd ; (; double * ; buffer). inline . Prepare the addition of double values to this block. Return a pointer to a double buffer where values can be added. If the in-memory format of the matrix is incompatible, the provided buffer can be used, but the method must clear it before returning. . ◆ prepareAdd() [2/3]. const float* sofa::linearalgebra::BaseMatrix::BlockAccessor::prepareAdd ; (; float * ; buffer). inline . Prepare the addition of float values to this block. Return a pointer to a float buffer where values can be added. If the in-memory format of the matrix is incompatible, the provided buffer can be used, but the method must clear it before returning. . ◆ prepareAdd() [3/3]. const int* sofa::linearalgebra::BaseMatrix::BlockAccessor::prepareAdd ; (; int * ; buffer). inline . Prepare the addition of int values to this block. Return a pointer to a int buffer where values can be added. If the in-memory format of the matrix is incompatible, the provided buffer can be used, but the method must clear it before returning. . ◆ set() [1/4]. void sofa::linearalgebra::BaseMatrix::BlockAccessor::set ; (; const double * ; src). inline . Set all values of this block from the given double buffer. . ◆ set() [2/4]. void sofa::linearalgebra::BaseMatrix::BlockAccessor::set ; (; const float * ; src). inline . Set all values of this block from the given float buffer. . ◆ set() [3/4]. void sofa::linearalgebra::BaseMatrix::BlockAccessor::set ; (; const int * ; src). inline . Set all values of this block from the given int buffer. . ◆ set() [4/4]. void sofa::linearalgebra::BaseMatrix::BlockAccessor::set ; (; Index ; i, . Index ; j, . double ; v . ). inline . Write the value of the element at row i, column j within this block (using 0-based indices) . Related details. ◆ BaseMatrix. friend class BaseMatrix. friend . ◆ BlockConstAccessor. friend class BlockConstAccessor. friend . ◆ ColBlockConstIterator. friend class ColBlockConstIterator. friend . sofalin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_1_1_block_accessor.html:8084,clear,clear,8084,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_1_1_block_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_1_1_block_accessor.html,1,['clear'],['clear']
Usability,"seMatrix::add. Adding values from a 3x3f matrix. This function may be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [6/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ begin() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:18986,clear,clear,18986,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,1,['clear'],['clear']
Usability,"seMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< TReal >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; CompressedMatrix typedefsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; copy(const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; create",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html:5845,clear,clearRow,5845,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,1,['clear'],['clearRow']
Usability,"seProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkIndices()sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >virtual; computeBBoxForIndices(const type::vector< Index > &indices)sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protected; Coord typedefsofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSizesofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::projective::FixedProjectiveConstrain",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html:3210,clear,clearLoggedMessages,3210,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"seProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkIndices()sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >virtual; computeBBoxForIndices(const type::vector< Index > &indices)sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >protected; Coord typedefsofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSizesofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; d_fixAllsofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; d_fixedDirectionssofa::component::constraint::projective::PartialFi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html:3247,clear,clearLoggedMessages,3247,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"seType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::PlaneForceField< DataTypes >virtual; buildStiffnessMatrix(sofa::core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::PlaneForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool onlyVisible=false) overridesofa::component::mechanicalload::PlaneForceField< DataTypes >virtual; Coord typedefsofa::component::mechanicalload::PlaneForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::mechanicalload::PlaneForceField< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_bilateralsofa::component::mechanicalload::PlaneForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_dampingsofa::component::mechanicalload::PlaneForceField< DataTypes >; d_drawColorsofa::component::mechanicalload::PlaneForceField< DataTypes >; d_drawIsEnabledsofa::component::mechanicalload::PlaneForceField< DataTypes >; d_drawSizesofa::component::mechanicalload::PlaneForceField< DataTy",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field-members.html:4678,clear,clearLoggedMessages,4678,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"sectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &, collision::geometry::Cube &, OutputVector *, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::LocalMinDistancevirtual; computeIntersection(collision::geometry::Point &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; computeIntersection(collision::geometry::Sphere &, collision::geometry::Point &, OutputVector *, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::LocalMinDistance; computeIntersection(collision::geometry::Sphere &, collision::geometry::Sphere &, OutputVector *, const core::collision::Intersection *currentIntersection) overrideso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html:2579,clear,clearLoggedMessages,2579,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance-members.html,1,['clear'],['clearLoggedMessages']
Usability,"sectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::BaseProximityIntersectionvirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::BaseProximityIntersectionvirtual; sofa::component::collision::detection::intersection::DiscreteIntersection::computeIntersection(collision::geometry::Sphere &sph1, collision::geometry::Sphere &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::DiscreteIntersectionvirtual; sofa::component::collision::detection::intersection::Di",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html:2517,clear,clearLoggedMessages,2517,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection-members.html,1,['clear'],['clearLoggedMessages']
Usability,"sectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::MinProximityIntersectioninline; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::MinProximityIntersec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html:2515,clear,clearLoggedMessages,2515,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection-members.html,1,['clear'],['clearLoggedMessages']
Usability,"sectorinline; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProximityIntersection()sofa::component::collision::detection::intersection::BaseProximityIntersectionprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::Intersectioninlinevirtual; beginIntersection(sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *)sofa::core::collision::BaseIntersectorinline; beginNarrowPhase()sofa::core::collision::Intersectioninlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts, const core::collision::Intersection *currentIntersection) overridesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts, const core::collision::Intersection *currentIntersection)sofa::component::collision::detection::intersection::NewProximityIntersection; computeIntersection(collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersectionvirtual; computeIntersection(SphereType1 &sph1, SphereType2 &sph2, OutputVector *contacts)=deletesofa::component::collision::detection::intersection::NewProximityIntersection; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html:2515,clear,clearLoggedMessages,2515,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection-members.html,1,['clear'],['clearLoggedMessages']
Usability,sedevent; . /feed; ; onKeypressedEvent – SOFA. SOFA - Topic Tag: onKeypressedEvent. /opengl; . /feed; ; OpenGL – SOFA. SOFA - Topic Tag: OpenGL. /opengl-ogllabel-memory-leak; . /feed; ; opengl OglLabel memory leak – SOFA. SOFA - Topic Tag: opengl OglLabel memory leak. /opengl-visual-transparaceny-translucency-alpha; . /feed; ; opengl visual transparaceny translucency alpha – SOFA. SOFA - Topic Tag: opengl visual transparaceny translucency alpha. /orientation; . /feed; ; orientation – SOFA. SOFA - Topic Tag: orientation. /other; . /feed; ; Other – SOFA. SOFA - Topic Tag: Other. /parameter; . /feed; ; parameter – SOFA. SOFA - Topic Tag: parameter. /parameters; . /feed; ; parameters – SOFA. SOFA - Topic Tag: parameters. /paraview; . /feed; ; Paraview – SOFA. SOFA - Topic Tag: Paraview. /partiallinearmovementconstraint; . /feed; ; PartialLinearMovementConstraint – SOFA. SOFA - Topic Tag: PartialLinearMovementConstraint. /path; . /feed; ; path – SOFA. SOFA - Topic Tag: path. /pauseanimation-solver-event; . /feed; ; PauseAnimation; Solver; Event – SOFA. SOFA - Topic Tag: PauseAnimation; Solver; Event. /penetration; . /feed; ; penetration – SOFA. SOFA - Topic Tag: penetration. /persisting-contact; . /feed; ; persisting contact – SOFA. SOFA - Topic Tag: persisting contact. /phantom; . /feed; ; phantom – SOFA. SOFA - Topic Tag: phantom. /physical-acceleration; . /feed; ; physical acceleration – SOFA. SOFA - Topic Tag: physical acceleration. /plastic; . /feed; ; Plastic – SOFA. SOFA - Topic Tag: Plastic. /plots; . /feed; ; plots – SOFA. SOFA - Topic Tag: plots. /plugin; . /feed; ; plugin – SOFA. SOFA - Topic Tag: plugin. /plugin_cuda; . /feed; ; Plugin_CUDA – SOFA. SOFA - Topic Tag: Plugin_CUDA. /plugin_geomagic; . /feed; ; Plugin_Geomagic – SOFA. SOFA - Topic Tag: Plugin_Geomagic. /plugin_image; . /feed; ; Plugin_Image – SOFA. SOFA - Topic Tag: Plugin_Image. /plugin_multithreading; . /feed; ; Plugin_Multithreading – SOFA. SOFA - Topic Tag: Plugin_Multithreading. /plugin_othe,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:462303,pause,pauseanimation-solver-event,462303,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['pause'],['pauseanimation-solver-event']
Usability,"seprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseROI()sofa::component::engine::select::BaseROI< DataTypes >protected; BaseType typedefsofa::core::objectmodel::Base; BoxROI()sofa::component::engine::select::boxroi::BoxROI< DataTypes >protected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) finalsofa::component::engine::select::BaseROI< DataTypes >virtual; computeOrientedBoxes()sofa::component::engine::select::boxroi::BoxROI< DataTypes >protected; Coord typedefsofa::component::engine::select::BaseROI< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::BaseROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_alignedBoxessofa::component::engine::select::boxroi::BoxROI< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computeEdgessofa::component::engine::select::BaseROI< DataTypes >; d_computeHexahedrasofa::component::engine::select::BaseROI< DataTypes >; d_computeQuadssofa::component::engine::select::BaseROI< DataTypes >; d_computeTe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html:2850,clear,clearLoggedMessages,2850,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ses) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TrailRenderer, core::visual::VisualModel);  ; void handleEvent (core::objectmodel::Event *) override;  Handle an event. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void reset () override;  Reset to initial state. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html:3863,clear,clearVisual,3863,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,2,['clear'],"['clear', 'clearVisual']"
Usability,shell arrays are coherent See alsom_triangle . m_edgesInTriangle . m_trianglesAroundVertex . m_trianglesAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanTriangleTopologyFromDirty(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::cleanTriangleTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearBorderElementLists(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearBorderElementLists ; (; ). protected . ◆ clearEdgesInTriangle(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearEdgesInTriangle ; (; ). protected . ◆ clearTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTriangles ; (; ). protected . ◆ clearTrianglesAroundEdge(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundEdge ; (; ). protected . ◆ clearTrianglesAroundVertex(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::clearTrianglesAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInTriangleArray(). void sofa::component::topology::container::dynamic::TriangleSetTopologyContainer::createEdgesInTriangleArray ; (; ). protectedvirtual . Creates the array of edge indices for each triangle. ; This function is only called if the EdgesInTriangle array is required. m_e,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:41637,clear,clearTriangles,41637,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['clear'],['clearTriangles']
Usability,"signed int _retcode=0);  ; void sleep (float seconds, float init_time);  ;  Protected Member Functions inherited from sofa::gui::common::BaseGUI;  BaseGUI ();  ; virtual ~BaseGUI ();  The destructor should not be called directly. Use the closeGUI() method instead. More...;  . Static Protected Member Functions; static void CreateApplication (int _argc=0, char **_argv=nullptr);  ; static void InitApplication (RealGUI *_gui);  . Signals; void reload ();  ; void newScene ();  ; void newStep ();  ; void quit ();  . Public Slots; virtual void newRootNode (sofa::simulation::Node *root, const char *path);  ; virtual void activateNode (sofa::simulation::Node *, bool);  ; virtual void setSleepingNode (sofa::simulation::Node *, bool);  ; virtual void lockAnimation (bool);  ; virtual void fileRecentlyOpened (QAction *action);  ; virtual void playpauseGUI (bool value);  ; virtual void interactionGUI (bool value);  ; virtual void step ();  ; virtual void emitIdle ();  ; virtual void setDt (const QString &);  ; virtual void updateDtEditState ();  ; virtual void resetScene ();  ; virtual void screenshot ();  ; virtual void showhideElements ();  ; virtual void update ();  ; virtual void updateBackgroundColour ();  ; virtual void updateBackgroundImage ();  ; virtual void resetView ();  ; virtual void saveView ();  ; virtual void setSizeW (int _valW);  ; virtual void setSizeH (int _valH);  ; virtual void clear ();  ; void redraw () override;  refresh the visualization window More...;  ; virtual void exportOBJ (sofa::simulation::Node *node, bool exportMTL=true);  ; virtual void dumpState (bool);  ; virtual void displayComputationTime (bool);  ; virtual void setExportGnuplot (bool);  ; virtual void setExportVisitor (bool);  ; virtual void displayProflierWindow (bool);  ; virtual void currentTabChanged (int index);  ; virtual void popupOpenFileSelector ();  This open popup the file selection windows. More...;  ; virtual void fileReload ();  ; virtual void fileExit ();  ; virtual void help",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:7400,clear,clear,7400,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,1,['clear'],['clear']
Usability,"slation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >virtual; do",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html:3460,clear,clearLoggedMessages,3460,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute-members.html,1,['clear'],['clearLoggedMessages']
Usability,"slation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >virtual; do",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html:3460,clear,clearLoggedMessages,3460,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute-members.html,1,['clear'],['clearLoggedMessages']
Usability,"slation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; disable()sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >virtual; do",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html:3460,clear,clearLoggedMessages,3460,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute-members.html,1,['clear'],['clearLoggedMessages']
Usability,"sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::buildConstraintMatrix ; (; const core::ConstraintParams * ; cParams, . DataMatrixDeriv & ; c1, . DataMatrixDeriv & ; c2, . unsigned int & ; cIndex, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2 . ). overridevirtual . Construct the Jacobian Matrix; Parameters. c1and c2 are the results constraint sparse matrix ; cIndexis the index of the next constraint equation: when building the constraint matrix, you have to use this index, and then update it ; x1and x2 are the position vectors used for constraint equation computation ; cParamsdefines the state vectors to use for positions and velocities. Also defines the order of the constraint (POS, VEL, ACC). This is the method that should be implemented by the component ; Implements sofa::core::behavior::PairInteractionConstraint< DataTypes >. ◆ clear(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::clear ; (; int ; reserve = 0). ◆ draw(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getConstraintInfo(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >::getConstraintInfo ; (; const core::ConstraintParams * ; cParams, . VecConstraintBlockInfo & ; blocks, . VecPersistentID & ; ids, . VecConstCoord & ; positions, . VecConstDeriv & ; directions, . VecConstArea & ; areas . ). overridevirtual . Get information for each constraint: pointer to parent BaseConstraint, unique persistent ID, 3D position Parameters. cParamsdefines the state vectors to use for positions and velocities. Also defines the order of the cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:26125,clear,clear,26125,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,1,['clear'],['clear']
Usability,"sofa::component::io::mesh::VoxelGridLoader::segmentation. protected . ◆ segmentationHeaderSize. sofa::core::objectmodel::RenamedData< int > sofa::component::io::mesh::VoxelGridLoader::segmentationHeaderSize. ◆ voxelSize. sofa::core::objectmodel::RenamedData< type::Vec3 > sofa::component::io::mesh::VoxelGridLoader::voxelSize. Constructor details. ◆ VoxelGridLoader(). sofa::component::io::mesh::VoxelGridLoader::VoxelGridLoader ; (; ). protected . ◆ ~VoxelGridLoader(). sofa::component::io::mesh::VoxelGridLoader::~VoxelGridLoader ; (; ). overrideprotected . Function details. ◆ addActiveDataValue(). void sofa::component::io::mesh::VoxelGridLoader::addActiveDataValue ; (; const int ; value). ◆ addBackgroundValue(). void sofa::component::io::mesh::VoxelGridLoader::addBackgroundValue ; (; const int ; value). ◆ canLoad(). bool sofa::component::io::mesh::VoxelGridLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ clear(). void sofa::component::io::mesh::VoxelGridLoader::clear ; (; ). virtual . ◆ createSegmentation3DTexture(). void sofa::component::io::mesh::VoxelGridLoader::createSegmentation3DTexture ; (; unsigned char ** ; textureData, . int & ; width, . int & ; height, . int & ; depth . ). overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getActiveDataValue(). int sofa::component::io::mesh::VoxelGridLoader::getActiveDataValue ; (; const unsigned int ; idx = 0); const. ◆ getBackgroundValue(). int sofa::component::io::mesh::VoxelGridLoader::getBackgroundValue ; (; const unsigned int ; idx = 0); const. ◆ getData(). unsigned char * sofa::component::io::mesh::VoxelGridLoader::getData ; (; ). overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getDataSize(). int sofa::component::io::mesh::VoxelGridLoader::getDataSize ; (; ); const. overridevirtual . Implements sofa::core::loader::VoxelLoader. ◆ getHexaIndicesInGrid(). type::vector< unsigned int > sofa::component::io::mesh::VoxelGridLoader::getHexaIndicesInGrid ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html:19922,clear,clear,19922,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,1,['clear'],['clear']
Usability,sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTetrahedronTopologyFromDirty()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TetrahedronSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTetrahedron()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTetrahedra()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundEdge()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundTriangle()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTetrahedraAroundVertex()sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainerprotected; clearTriangles()sofa::component::topology::container::dynamic::Tri,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html:4662,clear,clearEdges,4662,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container-members.html,1,['clear'],['clearEdges']
Usability,"sofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::SurfacePressureForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::SurfacePressureForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; computeMeshVolume(const VecDeriv &f, const VecCoord &x)sofa::component::mechanicalload::SurfacePressureForceField< DataTypes >protected; computeMeshVolume(const VecDeriv &, const VecCoord &x)sofa::component::mechanicalload::SurfacePressureForceField< DataTypes >protected; computeMeshVolume(const VecDeriv &f, const VecCoord &x)sofa::component::mechanicalload::SurfacePressureForceField< DataTypes >protected; computePulseModePressure()sofa::component::mechanicalload::SurfacePressureForceField< DataTypes >protected; Coord typedefsofa::component::mechanicalload::SurfacePressureForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field-members.html:6324,clear,clearLoggedMessages,6324,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_surface_pressure_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtual; bwdInit() overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; depthScalesofa::gl::component::shader::OrderIndependentTransparencyManager; doInitVisual(const core::visual::VisualParams *vp) overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtual; drawOpaques(core::visual::VisualParams *vp)sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html:2609,clear,clearVisual,2609,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,1,['clear'],['clearVisual']
Usability,"sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::linearalgebra::RotationMatrix< TReal >virtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::RotationMatrix< TReal >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html:5806,clear,clearCol,5806,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,1,['clear'],['clearCol']
Usability,"sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskyDecompose ; (; ). inline . Try to compute the LDLT decomposition, and return true if success. The matrix is unchanged. . ◆ choleskySolve(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::choleskySolve ; (; VectorEigen & ; x, . const VectorEigen & ; b . ); const. inline . Solve Ax=b, where A is this matrix. WARNING: ldltDecompose() must be called first. x and b can be the same vector. . ◆ clear(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCol ; (; Index ; col). inlineoverridevirtual . Clears the all the entries of column imin to column imax-1. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCols(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearCols ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of column i and of row i to 0. Not efficient ! ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRow ; (; Index ; i). inlineoverridevirtual . Set all the entries of a row to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Clears all the entries of rows imin to imax-1 and columns imin to imax-1. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRows(). template<class TReal > . void sofa::linearalgebra::EigenBaseSparseMatrix< TReal >::clearRows ; (; Index ; imin, . Index ; imax . ). inlineoverridevirtual . Set all the entries of rows",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html:19909,clear,clearCols,19909,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix.html,1,['clear'],['clearCols']
Usability,"sofa::type::SpatialVector< TReal > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Friends |; List of all members . sofa::type::SpatialVector< TReal > Class Template Reference . #include <SpatialVector.h>. Inheritance diagram for sofa::type::SpatialVector< TReal >:. [legend]; Detailed Description; template<class TReal>; class sofa::type::SpatialVector< TReal >; A spatial vector. When representing a velocity, lineVec is the angular velocity and freeVec is the linear velocity. When representing a spatial force, lineVec is the force and freeVec is the torque. . Public Attributes; Vec lineVec { type::NOINIT };  ; Vec freeVec { type::NOINIT };  . Public Member Functions; void clear ();  ;  SpatialVector ()=default;  ;  SpatialVector (const Vec &l, const Vec &f);  ; SpatialVector & operator+= (const SpatialVector &v);  ; SpatialVector operator* (Real a) const;  ; SpatialVector & operator*= (Real a);  ; SpatialVector operator+ (const SpatialVector &v) const;  ; SpatialVector operator- (const SpatialVector &v) const;  ; SpatialVector operator- () const;  ; Real operator* (const SpatialVector &v) const;  Spatial dot product (cross terms) More...;  ; SpatialVector cross (const SpatialVector &v) const;  Spatial cross product. More...;  ; SpatialVector operator* (const Mat66 &) const;  product with a dense matrix More...;  ; Vec & getLinearVelocity ();  ; const Vec & getLinearVelocity () const;  ; void setLinearVelocity (const Vec &v);  ; Vec & getAngularVelocity ();  ; const Vec & getAngularVelocity () const;  ; void setAngularVelocity (const Vec &v);  ; Vec & getTorque ();  ; const Vec & getTorque () const;  ; void setTorque (const Vec &v);  ; Vec & getForce ();  ; const Vec & getForce () const;  ; void setForce (const Vec &v);  . Friends; std::ostream & operator<< (std::ostream &out, const SpatialVector &t);  write to an output stream More...;  ; std::istream & operator>> (std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html:793,clear,clear,793,api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_spatial_vector.html,1,['clear'],['clear']
Usability,"sorunSofa/main.cpp ; Parameters. nameargument name such as ""help,h"" after the comma it's a character use as short name ; helpdescribing the argument . ◆ addArgument() [3/3]. void sofa::gui::common::ArgumentParser::addArgument ; (; std::shared_ptr< cxxopts::Value > ; s, . const std::string ; name, . const std::string ; help, . std::function< void(const ArgumentParser *, const std::string &)> ; callback . ). addArgument ; @usage Can be call if you want to add parameters; Parameters. sa sptr to a cxxopts::Value for examples . See alsorunSofa/main.cpp ; Parameters. nameargument name such as ""h,help"" after the comma it's a character use as short name ; helpdescribing the argument ; callbackwill be called when parsing is done and this arg has been modified . ◆ extra_args(). static const std::vector<std::string> sofa::gui::common::ArgumentParser::extra_args ; (; ). inlinestatic . return extra_args needed for python (arguments) . ◆ getInputFileList(). std::vector< std::string > sofa::gui::common::ArgumentParser::getInputFileList ; (; ). ◆ getMap(). const std::unordered_map< std::string, std::string > & sofa::gui::common::ArgumentParser::getMap ; (; ); const. ◆ getValueFromKey(). template<typename T > . bool sofa::gui::common::ArgumentParser::getValueFromKey ; (; const std::string & ; key, . T & ; value . ); const. inline . get the value associated to the key (if this key exists or the type is correct) . ◆ parse(). void sofa::gui::common::ArgumentParser::parse ; (; ). this is the main function. You have to call this function if you want to parse the arguments given to the constructor . ◆ showArgs(). void sofa::gui::common::ArgumentParser::showArgs ; (; ). display args with values . ◆ showHelp(). void sofa::gui::common::ArgumentParser::showHelp ; (; ). simply display the help (You need to add -h –help options in your main and call this function by yourself ; See alsorunSofa/main.cpp) . sofaguicommonArgumentParser; Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_argument_parser.html:4821,simpl,simply,4821,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_argument_parser.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_argument_parser.html,1,['simpl'],['simply']
Usability,"splayPropertyWidget::addComponent ; (; const QString & ; component, . core::objectmodel::Base * ; base, . QTreeWidgetItem * ; listItem, . bool ; clear = true . ). ◆ addData(). void sofa::gui::qt::QDisplayPropertyWidget::addData ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseData * ; data . ). ◆ addDescriptionItem(). void sofa::gui::qt::QDisplayPropertyWidget::addDescriptionItem ; (; QTreeWidgetItem * ; groupItem, . const QString & ; name, . const QString & ; description . ). protected . ◆ addGroup(). void sofa::gui::qt::QDisplayPropertyWidget::addGroup ; (; const QString & ; component, . const QString & ; group . ). ◆ addLink(). void sofa::gui::qt::QDisplayPropertyWidget::addLink ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseLink * ; link . ). ◆ clear(). void sofa::gui::qt::QDisplayPropertyWidget::clear ; (; ). ◆ clearAll(). void sofa::gui::qt::QDisplayPropertyWidget::clearAll ; (; ). ◆ clearComponentOutput. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentOutput ; (; ). protectedslot . ◆ clearComponentWarning. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentWarning ; (; ). protectedslot . ◆ DefaultDataGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultDataGroup ; (; ). inlinestatic . ◆ DefaultInfoGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultInfoGroup ; (; ). inlinestatic . ◆ DefaultLinkGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLinkGroup ; (; ). inlinestatic . ◆ DefaultLogGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLogGroup ; (; ). inlinestatic . ◆ findComponent(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findComponent ; (; const QString & ; component); const. protected . ◆ findGroup(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findGroup ; (; const QString & ; component, . const QString & ; group . ); const. protected . ◆ setConsol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:3254,clear,clearComponentOutput,3254,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,1,['clear'],['clearComponentOutput']
Usability,"ss TReal , std::size_t TBlockSize = 1> . VectorEigen sofa::linearalgebra::EigenVector< TReal, TBlockSize >::eigenVector. protected . the data . Constructor details. ◆ EigenVector(). template<class TReal , std::size_t TBlockSize = 1> . sofa::linearalgebra::EigenVector< TReal, TBlockSize >::EigenVector ; (; Index ; nbRow = 0). inline . Function details. ◆ add(). template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::add ; (; Index ; i, . SReal ; v . ). inlineoverridevirtual . Add v to the existing value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [1/2]. template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [2/2]. template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::clear ; (; Index ; i). inlineoverridevirtual . Reset the value of element i to 0. ; Reimplemented from sofa::linearalgebra::BaseVector. ◆ element(). template<class TReal , std::size_t TBlockSize = 1> . SReal sofa::linearalgebra::EigenVector< TReal, TBlockSize >::element ; (; Index ; i); const. inlineoverridevirtual . Read the value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ getVectorEigen() [1/2]. template<class TReal , std::size_t TBlockSize = 1> . VectorEigen& sofa::linearalgebra::EigenVector< TReal, TBlockSize >::getVectorEigen ; (; ). inline . ◆ getVectorEigen() [2/2]. template<class TReal , std::size_t TBlockSize = 1> . const VectorEigen& sofa::linearalgebra::EigenVector< TReal, TBlockSize >::getVectorEigen ; (; ); const. inline . ◆ Name() [1/2]. const std::string sofa::linearalgebra::EigenVector< double >::Name ; (; ). ◆ Name() [2/2]. template<class TReal , std::size_t TBlockSize = 1> . static const std::string sofa::linearalgebra::EigenVecto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html:5175,clear,clear,5175,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,1,['clear'],['clear']
Usability,"ssType >protected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; centerToOriginsofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDGNodeprotectedvirtual; doAddOutput(DDGNode *n)sofa::core::objectmodel::DDGNodeprot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html:2924,clear,clearLoggedMessages,2924,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"st Class Reference . #include <SolidTypes.h>; A twist aka a SpatialVector representing a velocity This is practically a SpatialVector (screw) with the additional semantics that this screw represents a twist (velocity) and not a wrench (force and torque) ; More... Inheritance diagram for sofa::defaulttype::SolidTypes< R >::Twist:. [legend]; Detailed Description; template<class R = float>; class sofa::defaulttype::SolidTypes< R >::Twist; A twist aka a SpatialVector representing a velocity This is practically a SpatialVector (screw) with the additional semantics that this screw represents a twist (velocity) and not a wrench (force and torque) ; AuthorAnthony Truchet, CEA, 2006 . Public Member Functions;  Twist (const Vec3 &linear, const Vec3 &angular);  ;  Public Member Functions inherited from sofa::type::SpatialVector< TReal >; void clear ();  ;  SpatialVector ()=default;  ;  SpatialVector (const Vec &l, const Vec &f);  ; SpatialVector & operator+= (const SpatialVector &v);  ; SpatialVector operator* (Real a) const;  ; SpatialVector & operator*= (Real a);  ; SpatialVector operator+ (const SpatialVector &v) const;  ; SpatialVector operator- (const SpatialVector &v) const;  ; SpatialVector operator- () const;  ; Real operator* (const SpatialVector &v) const;  Spatial dot product (cross terms) More...;  ; SpatialVector cross (const SpatialVector &v) const;  Spatial cross product. More...;  ; SpatialVector operator* (const Mat66 &) const;  product with a dense matrix More...;  ; Vec & getLinearVelocity ();  ; const Vec & getLinearVelocity () const;  ; void setLinearVelocity (const Vec &v);  ; Vec & getAngularVelocity ();  ; const Vec & getAngularVelocity () const;  ; void setAngularVelocity (const Vec &v);  ; Vec & getTorque ();  ; const Vec & getTorque () const;  ; void setTorque (const Vec &v);  ; Vec & getForce ();  ; const Vec & getForce () const;  ; void setForce (const Vec &v);  . Additional Inherited Members;  Public Attributes inherited from sofa::type::SpatialVe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist.html:1078,clear,clear,1078,api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_solid_types_1_1_twist.html,1,['clear'],['clear']
Usability,"st ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex) overridesofa::core::behavior::Constraint< DataTypes >virtual; buildConstraintMatrix(const ConstraintParams *cParams, DataMatrixDeriv &c, unsigned int &cIndex, const DataVecCoord &x)=0sofa::core::behavior::Constraint< DataTypes >pure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::Constraint< DataTypes >inlinestatic; sofa::core::behavior::BaseConstraint::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::SingleStateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ConstArea typedefsofa::core::behavior::BaseConstraint; ConstCoord typedefsofa::core::behavior::BaseConstraint; ConstDeriv typedefsofa::core::behavior::BaseConstraint; Constraint(MechanicalState< DataTypes > *mm=nullptr)sofa::core::behavior::Constraint< DataTypes >protected; Coord typedefsofa::core::behavior::Constraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_constraintIndexsofa::core::behavior::BaseCon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html:2577,clear,clearLoggedMessages,2577,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint-members.html,1,['clear'],['clearLoggedMessages']
Usability,"st SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; disable()sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< size, type, TDataTypes >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html:3214,clear,clearLoggedMessages,3214,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute-members.html,1,['clear'],['clearLoggedMessages']
Usability,"st SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeShadowMapSize()sofa::gl::component::shader::Lightprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_attenuationsofa::gl::component::shader::PositionalLight; d_colorsofa::gl::component::shader::Light; d_componentStatesofa::core::objectmodel::Base; d_cutoffsofa::gl::component::shader::SpotLight; d_directionsofa::gl::component::shader::SpotLight; d_drawSourcesofa::gl::component::shader::Light; d_enablesofa::core::visual::VisualModel; d_exponentsofa::gl::component::shader::SpotLight; d_fixedsofa::gl::component::shader::PositionalLight; d_lookatsofa::gl::component::shader::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html:2531,clear,clearLoggedMessages,2531,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light-members.html,1,['clear'],['clearLoggedMessages']
Usability,"st SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeShadowMapSize()sofa::gl::component::shader::Lightprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_attenuationsofa::gl::component::shader::PositionalLight; d_colorsofa::gl::component::shader::Light; d_componentStatesofa::core::objectmodel::Base; d_drawSourcesofa::gl::component::shader::Light; d_enablesofa::core::visual::VisualModel; d_fixedsofa::gl::component::shader::PositionalLight; d_messageLogCountsofa::core::objectmodel::Basemutable; d_modelViewMatrixsofa::gl::component::shader::Light; d_positionsofa::gl::component::shader::PositionalLight; d_projectionMatrixsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html:2543,clear,clearLoggedMessages,2543,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light-members.html,1,['clear'],['clearLoggedMessages']
Usability,"st SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeShadowMapSize()sofa::gl::component::shader::Lightprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::gl::component::shader::Light; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::gl::component::shader::DirectionalLight; d_drawSourcesofa::gl::component::shader::Light; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_modelViewMatrixsofa::gl::component::shader::Light; d_projectionMatrixsofa::gl::component::shader::Light; d_shadowFactorsofa::gl::component::shader::Light; d_shadowsEnabledsofa::gl::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html:2545,clear,clearLoggedMessages,2545,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light-members.html,1,['clear'],['clearLoggedMessages']
Usability,"st SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; b_needUpdatesofa::gl::component::shader::Lightprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; blurDepthTexture()sofa::gl::component::shader::Lightprotected; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeShadowMapSize()sofa::gl::component::shader::Lightprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_colorsofa::gl::component::shader::Light; d_componentStatesofa::core::objectmodel::Base; d_drawSourcesofa::gl::component::shader::Light; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; d_modelViewMatrixsofa::gl::component::shader::Light; d_projectionMatrixsofa::gl::component::shader::Light; d_shadowFactorsofa::gl::component::shader::Light; d_shadowsEnabledsofa::gl::component::shader::Light; d_shadowTextureSizesofa::gl::compo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html:2523,clear,clearLoggedMessages,2523,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light-members.html,1,['clear'],['clearLoggedMessages']
Usability,"st SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backupFlagssofa::component::visual::VisualStyleprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *) overridesofa::component::visual::VisualStylevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_displayFlagssofa::component::visual::VisualStyle; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DisplayFlags typedefsofa::component::visual::VisualStyle; displayFlagssofa::component::visual::VisualStyle; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html:2531,clear,clearVisual,2531,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style-members.html,1,['clear'],['clearVisual']
Usability,"st core::visual::VisualParams *vparams) override;  ; void preDrawScene (core::visual::VisualParams *vp) override;  Called before rendering the scene. More...;  ; bool drawScene (core::visual::VisualParams *vp) override;  Called instead of rendering the scene. More...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void putLight (Light::SPtr light);  Register a light into the LightManager. More...;  ; void putLights (std::vector< Light::SPtr > m_lights);  Register a vector of lights into the LightManager. More...;  ; void clear ();  Remove all lights of the LightManager. More...;  ; void restoreDefaultLight (core::visual::VisualParams *vparams);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html:3664,clear,clear,3664,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,1,['clear'],['clear']
Usability,"st of all members . sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr > Class Template Reference . #include <Link.h>; Class to hold 0-or-1 pointer. The interface is similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. ; More...; Detailed Description; template<class T, class TDestPtr, class TPtr = T*>; class sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >; Class to hold 0-or-1 pointer. The interface is similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. . Protected Attributes; bool isEmpty {true};  ; TPtr elems [1];  . Public Member Functions;  SinglePtr ();  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; const_iterator cbegin () const;  ; const_iterator cend () const;  ; const_reverse_iterator crbegin () const;  ; const_reverse_iterator crend () const;  ; std::size_t size () const;  ; void resize (size_t size);  ; bool empty () const;  ; void clear ();  ; const TPtr & get () const;  ; TPtr & get ();  ; void add (TDestPtr v);  ; void addBegin (TDestPtr v);  ; const TPtr & operator[] (std::size_t i) const;  ; TPtr & operator[] (std::size_t i);  ; const TPtr & operator() (std::size_t i) const;  ; TPtr & operator() (std::size_t i);  ;  operator T* () const;  ; T * operator-> () const;  . Attribute details. ◆ elems. template<class T , class TDestPtr , class TPtr = T*> . TPtr sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::elems[1]. protected . ◆ isEmpty. template<class T , class TDestPtr , class TPtr = T*> . bool sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::isEmpty {true}. protected . Constructor details. ◆ SinglePtr(). template<class T , class TDestPtr , class TPtr = T*> . sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::SinglePtr ; (; ). inline . Function details. ◆ add(). template<class T , class TDestPtr , class TPtr = T*> . void sofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html:1267,clear,clear,1267,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html,1,['clear'],['clear']
Usability,"st;  ; LineConstIterator end () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; FullVector< Real > operator* (const FullVector< Real > &v) const;  ; void mul (FullVector< Real > &res, const FullVector< Real > &b) const;  ; void mulT (FullVector< Real > &res, const FullVector< Real > &b) const;  ; FullMatrix< Real > operator* (const FullMatrix< Real > &m) const;  ; void mul (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; void mulT (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3f &_M);  Adding values from a 3x3f matrix",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html:2567,clear,clear,2567,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html,1,['clear'],['clear']
Usability,"states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (CollisionGroupManager, CollisionAlgorithm);  ; virtual void createGroups (objectmodel::BaseContext *scene, const sofa::type::vector< Contact::SPtr > &contacts)=0;  Create the integration groups. More...;  ; virtual void clearGroups (objectmodel::BaseContext *scene)=0;  Clear the integration groups. More...;  ; virtual const sofa::type::vector< objectmodel::BaseContext::SPtr > & getGroups ();  Get the integration groups. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:2246,clear,clearGroups,2246,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,1,['clear'],['clearGroups']
Usability,"static const InternalColBlockIterator * getInternal (const ColBlockConstIterator *b);  ; static InternalRowBlockIterator * getInternal (RowBlockConstIterator *b);  ; static const InternalRowBlockIterator * getInternal (const RowBlockConstIterator *b);  . Attribute details. ◆ component. BaseProjectiveConstraintSet* sofa::core::behavior::ApplyConstraintCompat::component { nullptr }. ◆ zeroDirichletCondition. sofa::core::behavior::ZeroDirichletCondition* sofa::core::behavior::ApplyConstraintCompat::zeroDirichletCondition { nullptr }. Function details. ◆ add(). void sofa::core::behavior::ApplyConstraintCompat::add ; (; Index ; row, . Index ; col, . double ; v . ). inlineoverridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear(). void sofa::core::behavior::ApplyConstraintCompat::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). void sofa::core::behavior::ApplyConstraintCompat::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). Index sofa::core::behavior::ApplyConstraintCompat::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). SReal sofa::core::behavior::ApplyConstraintCompat::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ resize(). void sofa::core::behavior::ApplyConstraintCompat::resize ; (; Index ; nbRow, . Index ; nbCol . ). inlineoverridevirtual . Resize the matrix and reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ rowSize(). Index sofa::core::behavior::ApplyConstraintCompat::rowSize ; (; ); const. inlineoverridevirtual . Number of rows. ; Im",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:14113,clear,clearRowCol,14113,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['clear'],['clearRowCol']
Usability,"static constexpr Size total_size = N;  Compile-time constant specifying the number of scalars within this vector (equivalent to static_size and size() method) More...;  ; static constexpr Size spatial_dimensions = N;  Compile-time constant specifying the number of dimensions of space (equivalent to total_size here) More...;  . Public Member Functions; constexpr MatSym () noexcept;  ; constexpr MatSym (NoInit) noexcept;  ; template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3>> ; constexpr MatSym (const real &v1, const real &v2, const real &v3, const real &v4, const real &v5, const real &v6);  Constructor from 6 elements. More...;  ; constexpr MatSym (const sofa::Size sizeM, const real &v);  Constructor from an element. More...;  ; template<typename real2 > ;  MatSym (const MatSym< D, real2 > &m);  Constructor from another matrix. More...;  ; template<typename real2 > ; void operator= (const MatSym< D, real2 > &m);  Assignment from another matrix. More...;  ; void clear ();  Sets each element to 0. More...;  ; void fill (real r);  Sets each element to r. More...;  ; real & operator() (const int i, const int j);  Write access to element (i,j). More...;  ; const real & operator() (const int i, const int j) const;  Read-only access to element (i,j). More...;  ; template<sofa::Size TD = D, typename = std::enable_if_t<TD == 3 || TD == 2>> ; Vec< NumberStoredValues, real > getVoigt () const;  convert to Voigt notation (supported only for D == 2 and D == 3) More...;  ; constexpr void identity ();  Set matrix to identity. More...;  ; Mat< D, D, real > SymSymMultiply (const MatSym< D, real > &m) const;  Matrix multiplication operator: product of two symmetric matrices. More...;  ; Mat< D, D, real > operator* (const MatSym< D, real > &m) const;  ; Mat< D, D, real > SymMatMultiply (const Mat< D, D, real > &m) const;  ; Mat< D, D, real > operator* (const Mat< D, D, real > &m) const;  ; Mat< D, D, real > MatSymMultiply (const Mat< D, D, real > &m) const;  ; MatSym< D, r",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html:1840,clear,clear,1840,api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_sym.html,1,['clear'],['clear']
Usability,"std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; AttachBodyButtonSetting()sofa::gui::component::AttachBodyButtonSettingprotected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buttonsofa::component::setting::MouseButtonSetting; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; ConfigurationSetting()sofa::core::objectmodel::ConfigurationSettingprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_arrowSizesofa::gui::component::AttachBodyButtonSetting; d_buttonsofa::component::setting::MouseButtonSetting; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_showFactorSizesofa::gui::component::AttachBodyButtonSetting; d_stiffnesssofa::gui::component::AttachBodyButtonSetting; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html:2038,clear,clearLoggedMessages,2038,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting-members.html,1,['clear'],['clearLoggedMessages']
Usability,"stead of rendering the scene. More...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; bool isVisible (const core::visual::VisualParams *vparams);  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html:4202,clear,clearVisual,4202,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"straint::projective::PlaneProjectiveConstraint< DataTypes >::addConstraint ; (; Index ; index). ◆ applyConstraint() [1/2]. template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Matrix to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [2/2]. template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html:24094,clear,clearConstraints,24094,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"straintId)sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; buildSystem(const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0sofa::core::behavior::ConstraintSolverpure virtual; buildSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::ConstraintSolverImplvirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *)sofa::core::behavior::ConstraintSolverinlinevirtual; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html:3263,clear,clearLoggedMessages,3263,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html,1,['clear'],['clearLoggedMessages']
Usability,"stsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< TReal >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; CompressedMatrix typedefsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< TReal >; copy(const EigenBaseSparseMatrix &m, unsigned nbCol, unsigned shift)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html:6140,clear,clearRowsCols,6140,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,1,['clear'],['clearRowsCols']
Usability,"sual (const core::visual::VisualParams *) override;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void handleEvent (core::objectmodel::Event *) override;  Handle an event. More...;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setColor (float r, float g, float b, float a);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html:4599,clear,clearVisual,4599,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"s . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). tem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:5782,simpl,simpleapi,5782,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,1,['simpl'],['simpleapi']
Usability,"t ; (; ). override . Function details. ◆ addComponent(). void sofa::gui::qt::QDisplayPropertyWidget::addComponent ; (; const QString & ; component, . core::objectmodel::Base * ; base, . QTreeWidgetItem * ; listItem, . bool ; clear = true . ). ◆ addData(). void sofa::gui::qt::QDisplayPropertyWidget::addData ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseData * ; data . ). ◆ addDescriptionItem(). void sofa::gui::qt::QDisplayPropertyWidget::addDescriptionItem ; (; QTreeWidgetItem * ; groupItem, . const QString & ; name, . const QString & ; description . ). protected . ◆ addGroup(). void sofa::gui::qt::QDisplayPropertyWidget::addGroup ; (; const QString & ; component, . const QString & ; group . ). ◆ addLink(). void sofa::gui::qt::QDisplayPropertyWidget::addLink ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseLink * ; link . ). ◆ clear(). void sofa::gui::qt::QDisplayPropertyWidget::clear ; (; ). ◆ clearAll(). void sofa::gui::qt::QDisplayPropertyWidget::clearAll ; (; ). ◆ clearComponentOutput. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentOutput ; (; ). protectedslot . ◆ clearComponentWarning. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentWarning ; (; ). protectedslot . ◆ DefaultDataGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultDataGroup ; (; ). inlinestatic . ◆ DefaultInfoGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultInfoGroup ; (; ). inlinestatic . ◆ DefaultLinkGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLinkGroup ; (; ). inlinestatic . ◆ DefaultLogGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLogGroup ; (; ). inlinestatic . ◆ findComponent(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findComponent ; (; const QString & ; component); const. protected . ◆ findGroup(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findGroup ; (; const QStr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:3179,clear,clearAll,3179,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,1,['clear'],['clearAll']
Usability,"t > >, sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >, sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >, sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >, sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >, sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >, sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >, sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >, sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >, sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >, sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >, sofa::gl::component::shader::LightManager, and sofa::gl::component::rendering3d::ClipPlane. ◆ clearVisual(). virtual void sofa::core::visual::VisualModel::clearVisual ; (; ). inlinevirtual . clear some graphical resources (generally called before the deleteVisitor). ; Note: for more general usage you can use the cleanup visitor . ◆ drawShadow(). virtual void sofa::core::visual::VisualModel::drawShadow ; (; const VisualParams * ; vparams). inlinevirtual . Display shadow-casting surfaces. ; This method default to calling draw(). Object that do not cast any shadows, or that use a different LOD for them should reimplement it. ; Reimplemented in sofa::component::visual::VisualModelImpl. ◆ drawTransparent(). virtual void sofa::core::visual::VisualModel::drawTransparent ; (; const VisualParams * ; ). inlinevirtual . Display transparent surfaces. ; Transparent objects should use this method to get a correct display order. ; Reimplemented in sofa::component::visual::VisualTransform, sofa::gl::component::rendering3d::SlicedVolumetricModel, sofa::gl::component::rendering3d::PointSplatModel, sofa::component::visual::VisualModelImpl, an",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html:18986,clear,clearVisual,18986,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,1,['clear'],['clearVisual']
Usability,"t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BTDMatrix< N, T >::Index sofa::linearalgebra::BTDMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BTDMatrix< N, T >::element ; (; Index ; i, . Index ; j . ); con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17608,clear,clearCol,17608,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,1,['clear'],['clearCol']
Usability,"t T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; category enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clear() overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize(void) constsofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html:6633,clear,clearRow,6633,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,1,['clear'],['clearRow']
Usability,"t also knows where to add in the matrix using an offset parameter, set by the assembling matrix system. . Static Public Attributes; static constexpr core::matrixaccumulator::Contribution contribution = c;  . Public Member Functions;  SOFA_CLASS (AssemblingMatrixAccumulator, SOFA_TEMPLATE2(sofa::core::MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >, TStrategy));  ; void clear () override;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >);  ; void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy > strategy) override;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const float value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, double value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) override final;  . Static Public Member Functions; static std::string GetCustomTemplateName ();  . Protected Member Functions; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedInd",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_matrix_accumulator.html:1824,clear,clear,1824,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_assembling_matrix_accumulator.html,1,['clear'],['clear']
Usability,"t of all members . sofa::core::behavior::ApplyConstraintCompat Class Reference . #include <MatrixAPICompatibility.h>. Inheritance diagram for sofa::core::behavior::ApplyConstraintCompat:. [legend]; Detailed Description; A fake BaseMatrix redirecting its clearRowCol method to the ZeroDirichletCondition API This class exists only for compatibility reasons. To be removed once the deprecated API applyConstraint is removed . Public Attributes; BaseProjectiveConstraintSet * component { nullptr };  ; sofa::core::behavior::ZeroDirichletCondition * zeroDirichletCondition { nullptr };  . Public Member Functions; Index rowSize () const override;  Number of rows. More...;  ; Index colSize () const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index row, Index col, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. This function may be overload to obtain better perf",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:1183,clear,clear,1183,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['clear'],['clear']
Usability,t of tetrahedron indices around a given triangle for subsequent modification. More...;  ; void setTetrahedronTopologyToDirty ();  ; void cleanTetrahedronTopologyFromDirty ();  ; const bool & isTetrahedronTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::TriangleSetTopologyContainer;  TriangleSetTopologyContainer ();  ;  ~TriangleSetTopologyContainer () override;  ; void createEdgeSetArray () override;  Creates the EdgeSet array. More...;  ; virtual void createEdgesInTriangleArray ();  Creates the array of edge indices for each triangle. More...;  ; virtual void createTrianglesAroundVertexArray ();  Creates the TrianglesAroundVertex Array. More...;  ; virtual void createTrianglesAroundEdgeArray ();  Creates the TrianglesAroundEdge Array. More...;  ; void clearTriangles ();  ; void clearEdgesInTriangle ();  ; void clearTrianglesAroundVertex ();  ; void clearTrianglesAroundEdge ();  ; void clearBorderElementLists ();  ; virtual TrianglesAroundVertex & getTrianglesAroundVertexForModification (const PointID vertexIndex);  Returns a non-const list of triangle indices around a given DOF for subsequent modification. More...;  ; virtual TrianglesAroundEdge & getTrianglesAroundEdgeForModification (const EdgeID edgeIndex);  Returns a non-const list of triangle indices around a given edge for subsequent modification. More...;  ; void setTriangleTopologyToDirty ();  ; void cleanTriangleTopologyFromDirty ();  ; const bool & isTriangleTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer;  EdgeSetTopologyContainer ();  ;  ~EdgeSetTopologyContainer () override;  ; virtual void createEdgesAroundVertexArray ();  Creates the EdgesAroundVertex array. More...;  ; void clearEdges ();  ; void clearEdgesAroundVertex ();  ; void setEdgeTopologyToDirty ();  ; void cleanEdgeTopologyFromDirty ();  ; const bool & isEdgeTopologyDirty ();  ; virtual EdgesAr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:39849,clear,clearTriangles,39849,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,5,['clear'],"['clearBorderElementLists', 'clearEdgesInTriangle', 'clearTriangles', 'clearTrianglesAroundEdge', 'clearTrianglesAroundVertex']"
Usability,"t resizing is not always relevant, for example:; nothing happens if FixedSize() is true;; sets can't be resized; they are cleared instead;; nothing happens for vectors containing resizable values (i.e. when BaseType()::FixedSize() is false), because of the ""single index"" abstraction;. Returns true iff the data was resizable ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ setTextValue(). void sofa::defaulttype::NameOnlyTypeInfo::setTextValue ; (; void * ; , . Index ; , . const std::string & ;  . ); const. inlineoverridevirtual . Set the value at index of data from a string value. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleCopy(). bool sofa::defaulttype::NameOnlyTypeInfo::SimpleCopy ; (; ); const. inlineoverridevirtual . True iff copying the data can be done with a memcpy(). ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ SimpleLayout(). bool sofa::defaulttype::NameOnlyTypeInfo::SimpleLayout ; (; ); const. inlineoverridevirtual . True iff the layout in memory is simply N values of the same base type. It means that you can use the abstract index system to iterate over the elements of the type. (It doesn't mean that the BaseType is of a fixed size) ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ size() [1/2]. sofa::Size sofa::defaulttype::NameOnlyTypeInfo::size ; (; ); const. inlineoverridevirtual . The size of this type, in number of elements. For example, the size of a fixed_array<fixed_array<int, 2>, 3> is 6, and those six elements are conceptually numbered from 0 to 5. This is relevant only if FixedSize() is true. I FixedSize() is false, the return value will be equivalent to the one of byteSize() ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ size() [2/2]. sofa::Size sofa::defaulttype::NameOnlyTypeInfo::size ; (; const void * ; ); const. inlineoverridevirtual . The size of data, in number of iterable elements (For containers, that'll be the number of elements in the 1st dimension). For example, with type == ` ; Implements sofa::defau",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html:8815,simpl,simply,8815,api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html,1,['simpl'],['simply']
Usability,"t to the created object. . ◆ createNode(). NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createNode ; (; const std::string & ; name). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createObject() [1/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . BaseObjectDescription & ; desc . ). ◆ createObject() [2/4]. BaseObject::SPtr sofa::simpleapi::createObject ; (; Node::SPtr ; parent, . const std::string & ; type, . const std::map< std::string, std::string > & ; params . ). ◆ createObject() [3/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . BaseObjectDescription & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:5197,simpl,simpleapi,5197,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,1,['simpl'],['simpleapi']
Usability,"t() overridesofa::core::CollisionModelvirtual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(sofa::Index index, CollisionModel *model2, sofa::Index index2) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::PointCollisionModel< TDataTypes >inlinestatic; sofa::core::CollisionModel::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::PointCollisionModel< TDataTypes >virtual; computeNormalssofa::component::collision::geometry::PointCollisionModel< TDataTypes >protected; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::PointCollisionModel< TDataTypes >; countLoggedMessages(sofa::helper::logging::Me",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html:2889,clear,clearLoggedMessages,2889,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,"t. ◆ applyConstraint() [2/3]. template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ interpolatePosition() ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:33754,clear,clearIndices,33754,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"t2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; basic linear operations; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html:3340,clear,clearCols,3340,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix.html,1,['clear'],['clearCols']
Usability,"t2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:5691,clear,clearCols,5691,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,1,['clear'],['clearCols']
Usability,"t2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:3802,clear,clearCols,3802,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,1,['clear'],['clearCols']
Usability,"t2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowCol (Index i);  Reset the value of both row and column i to 0. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:15847,clear,clearCols,15847,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearCols']
Usability,"t2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clear (Index i, Index j);  ; virtual void clearRow (Index i);  Reset all the values in row i to 0. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCol (Index j);  Reset the all values in column j to 0. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:3416,clear,clearCols,3416,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['clear'],['clearCols']
Usability,"t::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >virtual; bwdInit() overridesofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >virtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; ComputeJacobian(sofa::Index stiffnessIndex, sofa::Index springIndex)sofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >protected; Coord typedefsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_drawSpringsofa::component::solidmechanics::spring::PolynomialRestShapeSpringsForceField< DataTypes >; d_external_pointssofa::component::solidmechanic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html:5014,clear,clearLoggedMessages,5014,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"t::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseTopologyObject()sofa::core::topology::BaseTopologyObjectinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >inlinestatic; sofa::core::topology::GeometryAlgorithms::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compute2EdgesIntersection(const Coord edge1[2], const Coord edge2[2], bool &intersected)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute2PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =deletesofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >virtual; computeEdgeAABB(const EdgeID i, CPos &minCoord, CPos &maxCoord) constsofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; computeEdgeBarycentricCoordinates(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html:2866,clear,clearLoggedMessages,2866,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms-members.html,2,['clear'],['clearLoggedMessages']
Usability,"t;  ; const VecBlock & getColsValue () const;  ; virtual void resizeBlock (Index nbBRow, Index nbBCol);  ; void resizeBloc (Index nbBRow, Index nbBCol);  ; void compress ();  ; void swap (Matrix &m);  ; void fullRows ();  Make sure all rows have an entry even if they are empty. More...;  ; void shiftIndices (Index base);  ; const Block & block (Index i, Index j) const;  Get block method. More...;  ; const Block & bloc (Index i, Index j) const;  ; Block * wblock (Index i, Index j, bool create=false);  Write block method. More...;  ; Block * wblock (Index i, Index j, Index &rowId, Index &colId, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; Block * wbloc (Index i, Index j, bool create=false);  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsigned int bj, const DBlock &b);  ; void addDValue (unsigned int bi, unsigned",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html:6132,clear,clearRowBlock,6132,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,1,['clear'],['clearRowBlock']
Usability,"tAccumulators () const;  . Function details. ◆ add() [1/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . const sofa::type::Mat3x3d & ; value . ). inlineoverride . ◆ add() [2/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . const sofa::type::Mat3x3f & ; value . ). inlineoverride . ◆ add() [3/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . double ; value . ). inlineoverride . ◆ add() [4/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . float ; value . ). inlineoverride . ◆ clear(). template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::clear ; (; ). inlineoverride . ◆ empty(). template<class TMatrixAccumulator > . bool sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::empty ; (; ); const. inline . ◆ getAccumulators(). template<class TMatrixAccumulator > . const InternalListMatrixAccumulator& sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::getAccumulators ; (; ); const. inline . ◆ push_back(). template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::push_back ; (; TMatrixAccumulator * ; m). inline . ◆ remove(). template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::remove ; (; TMatrixAccumulator * ; m). inline . ◆ size(). template<class TMatrixAccumulator > . InternalListMatrixAccumulator::size_type sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::size ; (; ); const. inline . sofacoreListMatrixAccumulator; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator.html:2248,clear,clear,2248,api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator.html,1,['clear'],['clear']
Usability,"tIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ); const. inline . ◆ clear() [1/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::SparseMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<typename T > . SReal sofa::linearalgebra::SparseMatrix< T >::element ; (; Index ; i, . Index ; j . ); const. inlineoverridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ end() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::end ; (; ). inline . ◆ end() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::end ; (; ); const. inline . ◆ equal(). template<typename T > . template<class M > . void sofa::linearalgebra::SparseMatrix< T >::equal ; (; const M & ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:22348,clear,clearRowCol,22348,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,1,['clear'],['clearRowCol']
Usability,"tPtr v, const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; added(DestPtr val, std::size_t)sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inlineprotectedvirtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; changed(DestPtr before, DestPtr val)sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >inlineprotected; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >inline; const_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >; const_reverse_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >; Container typedefsofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa::core::objectmodel::BaseLinkstatic; CreateStringPath(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; DestPtr typedefsofa::core::objectmodel::SingleLink< TOwner",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link-members.html:1552,clear,clear,1552,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link-members.html,1,['clear'],['clear']
Usability,"tRow(). Index sofa::linearalgebra::BaseMatrix::BlockAccessor::getRow ; (; ); const. inline . ◆ isValid(). bool sofa::linearalgebra::BaseMatrix::BlockAccessor::isValid ; (; ); const. inline . ◆ operator=(). void sofa::linearalgebra::BaseMatrix::BlockAccessor::operator= ; (; const BlockAccessor & ; b). inline . ◆ prepareAdd() [1/3]. const double* sofa::linearalgebra::BaseMatrix::BlockAccessor::prepareAdd ; (; double * ; buffer). inline . Prepare the addition of double values to this block. Return a pointer to a double buffer where values can be added. If the in-memory format of the matrix is incompatible, the provided buffer can be used, but the method must clear it before returning. . ◆ prepareAdd() [2/3]. const float* sofa::linearalgebra::BaseMatrix::BlockAccessor::prepareAdd ; (; float * ; buffer). inline . Prepare the addition of float values to this block. Return a pointer to a float buffer where values can be added. If the in-memory format of the matrix is incompatible, the provided buffer can be used, but the method must clear it before returning. . ◆ prepareAdd() [3/3]. const int* sofa::linearalgebra::BaseMatrix::BlockAccessor::prepareAdd ; (; int * ; buffer). inline . Prepare the addition of int values to this block. Return a pointer to a int buffer where values can be added. If the in-memory format of the matrix is incompatible, the provided buffer can be used, but the method must clear it before returning. . ◆ set() [1/4]. void sofa::linearalgebra::BaseMatrix::BlockAccessor::set ; (; const double * ; src). inline . Set all values of this block from the given double buffer. . ◆ set() [2/4]. void sofa::linearalgebra::BaseMatrix::BlockAccessor::set ; (; const float * ; src). inline . Set all values of this block from the given float buffer. . ◆ set() [3/4]. void sofa::linearalgebra::BaseMatrix::BlockAccessor::set ; (; const int * ; src). inline . Set all values of this block from the given int buffer. . ◆ set() [4/4]. void sofa::linearalgebra::BaseMatrix::Block",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_1_1_block_accessor.html:7714,clear,clear,7714,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_1_1_block_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix_1_1_block_accessor.html,1,['clear'],['clear']
Usability,"tSolverImplprotected; buildLocalConstraintMatrix(const core::ConstraintParams *cparams, unsigned int &constraintId)sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; buildSystem(const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0sofa::core::behavior::ConstraintSolverpure virtual; buildSystemTask(const ConstraintParams *, MultiVecId res1, MultiVecId res2)sofa::core::behavior::ConstraintSolverprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup() overridesofa::component::constraint::lagrangian::solver::ConstraintSolverImplvirtual; clearConstraintCorrections()sofa::component::constraint::lagrangian::solver::ConstraintSolverImplprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeResidual(const core::ExecParams *)sofa::core::behavior::ConstraintSolverinlinevirtual; ConstraintSolver()sofa::core::behavior::ConstraintSolverprotected; ConstraintSolverImpl()sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html:3155,clear,clearConstraintCorrections,3155,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl-members.html,1,['clear'],['clearConstraintCorrections']
Usability,"tStarting index of the submatrix to fill in the global matrix. . Reimplemented from sofa::core::behavior::ForceField< DataTypes >. ◆ addPoint(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::addPoint ; (; unsigned ; index). methods to add/remove some indices, keyTimes, keyForces . ◆ buildDampingMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::buildDampingMatrix ; (; core::behavior::DampingMatrix * ; ). finalvirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ buildStiffnessMatrix(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::buildStiffnessMatrix ; (; core::behavior::StiffnessMatrix * ; matrix). overridevirtual . Reimplemented from sofa::core::behavior::BaseForceField. ◆ clearKeyForces(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::clearKeyForces. ◆ clearPoints(). template<class DataTypes > . void sofa::component::mechanicalload::LinearForceField< DataTypes >::clearPoints. ◆ getPotentialEnergy() [1/5]. SReal sofa::component::mechanicalload::LinearForceField< Rigid3Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [2/5]. SReal sofa::component::mechanicalload::LinearForceField< Rigid2Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [3/5]. SReal SOFA_COMPONENT_MECHANICALLOAD_API sofa::component::mechanicalload::LinearForceField< defaulttype::Rigid3Types >::getPotentialEnergy ; (; const core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. virtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getPotentialEnergy() [4/5]. SR",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html:25048,clear,clearPoints,25048,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,1,['clear'],['clearPoints']
Usability,"ta * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseROI()sofa::component::engine::select::BaseROI< DataTypes >protected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) finalsofa::component::engine::select::BaseROI< DataTypes >virtual; Coord typedefsofa::component::engine::select::BaseROI< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::BaseROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeEdgessofa::component::engine::select::BaseROI< DataTypes >; d_computeHexahedrasofa::component::engine::select::BaseROI< DataTypes >; d_computeQuadssofa::component::engine::select::BaseROI< DataTypes >; d_computeTetrahedrasofa::component::engine::select::BaseROI< DataTypes >; d_computeTrianglessofa::component::engine::select::BaseROI< DataTypes >; d_doUpdatesofa::component::engine",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html:2757,clear,clearLoggedMessages,2757,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ta * > outputs)sofa::core::objectmodel::Base; affineRatiosofa::component::engine::analyze::ShapeMatching< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clustersofa::component::engine::analyze::ShapeMatching< DataTypes >; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::SingleStateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::engine::analyze::ShapeMatching< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_affineRatiosofa::component::engine::analyze::ShapeMatching< DataTypes >; d_clustersofa::component::engine::analyze::ShapeMatching< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_fixedPositionsofa::component::engine::analyze::ShapeMatching< DataTypes >; d_fixedPositio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching-members.html:2771,clear,clearLoggedMessages,2771,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ta<Vec3R> sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::m_x0. ◆ m_x1. template<class DataTypes > . sofa::core::objectmodel::RenamedData<Vec3R> sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::m_x1. Constructor details. ◆ HermiteSplineProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::HermiteSplineProjectiveConstraint ; (; core::behavior::MechanicalState< DataTypes > * ; mstate = nullptr). explicitprotected . ◆ ~HermiteSplineProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::~HermiteSplineProjectiveConstraint. protected . Function details. ◆ addConstraint(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::addConstraint ; (; unsigned ; index). ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::clearConstraints. ◆ computeDerivateHermiteCoefs(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::computeDerivateHermiteCoefs ; (; const Real ; u, . Real & ; dH00, . Real & ; dH10, . Real & ; dH01, . Real & ; dH11 . ). ◆ computeHermiteCoefs(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::computeHermiteCoefs ; (; const Real ; u, . Real & ; H00, . Real & ; H10, . Real & ; H01, . Real & ; H11 . ). ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html:25051,clear,clearConstraints,25051,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"taTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit() overridesofa::component::playback::ReadStatevirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::CompareStateinlinestatic; sofa::component::playback::ReadState::canCreate(T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::ReadStateinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CompareState()sofa::component::playback::CompareStateprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::playback::ReadState; d_intervalsofa::component::playback::ReadState; d_loopsofa::component::playback::ReadState; d_messageLogCountsofa::core::objectmodel::Basemutable; d_rotationsofa::component::playback::ReadState; d_scalePossofa::component::playback::ReadState; d_shiftsofa::component::playback::ReadState; d_translationsofa::component::playback::ReadState; dofError_Vsofa::component::playback::CompareStateprotected; dofError_Xsofa::component::playback::CompareS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html:2152,clear,clearLoggedMessages,2152,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state-members.html,1,['clear'],['clearLoggedMessages']
Usability,tails. ◆ m_flags. template<class DataTypes > . core::visual::DisplayFlags sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_flags. protected . ◆ m_interactionObject. template<class DataTypes > . sofa::core::objectmodel::BaseObject::SPtr sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_interactionObject. protected . ◆ m_mapper. template<class DataTypes > . MouseContactMapper* sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::m_mapper. protected . Constructor details. ◆ BaseAttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::BaseAttachBodyPerformer ; (; BaseMouseInteractor * ; i). explicit . ◆ ~BaseAttachBodyPerformer(). template<class DataTypes > . sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::~BaseAttachBodyPerformer. virtual . Function details. ◆ clear(). template<class DataTypes > . void sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::clear. virtual . ◆ draw(). template<class DataTypes > . void sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). virtual . Reimplemented from sofa::gui::component::performer::InteractionPerformer. ◆ execute(). template<class DataTypes > . void sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::execute. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ getInteractionObject(). template<class DataTypes > . sofa::core::objectmodel::BaseObject::SPtr sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::getInteractionObject. ◆ start(). template<class DataTypes > . void sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >::start. virtual . Implements sofa::gui::component::performer::InteractionPerformer. ◆ startPartial(). template<class DataTypes > . virtual bool sofa::gui::component::performer::BaseAtt,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html:3862,clear,clear,3862,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_attach_body_performer.html,1,['clear'],['clear']
Usability,"tainer::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ cleanEdgeTopologyFromDirty(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::cleanEdgeTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::core::topology::BaseMeshTopology.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, sofa::component::topology::container::dynamic::QuadSetTopologyContainer, sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer. ◆ clearEdges(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdges ; (; ). protected . ◆ clearEdgesAroundVertex(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::clearEdgesAroundVertex ; (; ). protected . ◆ createEdgesAroundVertexArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgesAroundVertexArray ; (; ). protectedvirtual . Creates the EdgesAroundVertex array. ; This function is only called if EdgesAroundVertex member is required. EdgesAroundVertex[i] contains the indices of all edges having the ith DOF as one of their ends. . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::EdgeSetTopologyContainer::createEdgeSetArray ; (; ). protectedvirtual . Creates the EdgeSet array. ; This function must be implemented by derived classes to create a list of edges from a set of triangles or tetrahedra ; Reimplemented in sofa::component::topology::container::dynamic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:37276,clear,clearEdges,37276,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['clear'],['clearEdges']
Usability,"tate > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglSceneFrame, VisualModel);  ;  OglSceneFrame ();  ; void doDrawVisual (const core::visual::VisualParams *) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html:2551,clear,clearVisual,2551,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"tatic Public Member Functions inherited from sofa::core::objectmodel::BaseContext; static BaseContext * getDefault ();  . Protected Member Functions;  Node (const std::string &name="""");  ; virtual ~Node () override;  ; virtual bool doAddObject (sofa::core::objectmodel::BaseObject::SPtr obj, sofa::core::objectmodel::TypeOfInsertion insertionLocation=sofa::core::objectmodel::TypeOfInsertion::AtEnd);  Add an object. Detect the implemented interfaces and add the object to the corresponding lists. More...;  ; virtual bool doRemoveObject (sofa::core::objectmodel::BaseObject::SPtr obj);  Remove an object. More...;  ; virtual void doMoveObject (sofa::core::objectmodel::BaseObject::SPtr sobj, Node *prev_parent);  Remove an object. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseNode;  BaseNode ();  ;  ~BaseNode () override;  ; void setObjectContext (BaseObject::SPtr obj);  Set the context of an object to this. More...;  ; void clearObjectContext (BaseObject::SPtr obj);  Reset the context of an object. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Context;  Context ();  ; virtual ~Context () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseContext;  BaseContext ();  ;  ~BaseCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:28641,clear,clearObjectContext,28641,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['clear'],['clearObjectContext']
Usability,"tatic; add(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; add(DestPtr v, const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; sofa::core::objectmodel::BaseLink::add(Base *baseptr, const std::string &path)sofa::core::objectmodel::BaseLinkinline; addBegin(DestPtr v)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; added(DestPtr val, std::size_t index)sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >inlineprotectedvirtual; addPath(const std::string &path)sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; BaseLink(LinkFlags flags)sofa::core::objectmodel::BaseLink; BaseLink(const BaseInitLink &init, LinkFlags flags)sofa::core::objectmodel::BaseLink; begin() constsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; clear()sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >inline; const_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >; const_reverse_iterator typedefsofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >; Container typedefsofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >; CreateString(const std::string &path, const std::string &data="""")sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateString(Base *object, BaseData *data, Base *from)sofa::core::objectmodel::BaseLinkstatic; CreateStringData(BaseData *data)sofa::core::objectmodel::BaseLinkstatic; CreateStringPath(Base *object, Base *from)sofa::core::objectmodel::BaseLinkstatic; DestPtr typedefsofa::core::objectmodel::MultiLink< TOwnerType, TD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link-members.html:1422,clear,clear,1422,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link-members.html,1,['clear'],['clear']
Usability,"tatusMap, Visitor::TreeTraversalRepetition repeat, bool alreadyRepeated=false);  ;  Protected Member Functions inherited from sofa::simulation::Node;  Node (const std::string &name="""");  ; virtual ~Node () override;  ; virtual bool doAddObject (sofa::core::objectmodel::BaseObject::SPtr obj, sofa::core::objectmodel::TypeOfInsertion insertionLocation=sofa::core::objectmodel::TypeOfInsertion::AtEnd);  Add an object. Detect the implemented interfaces and add the object to the corresponding lists. More...;  ; virtual bool doRemoveObject (sofa::core::objectmodel::BaseObject::SPtr obj);  Remove an object. More...;  ; virtual void doMoveObject (sofa::core::objectmodel::BaseObject::SPtr sobj, Node *prev_parent);  Remove an object. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseNode;  BaseNode ();  ;  ~BaseNode () override;  ; void setObjectContext (BaseObject::SPtr obj);  Set the context of an object to this. More...;  ; void clearObjectContext (BaseObject::SPtr obj);  Reset the context of an object. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Context;  Context ();  ; virtual ~Context () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseContext;  BaseContext ();  ;  ~BaseCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:26421,clear,clearObjectContext,26421,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,1,['clear'],['clearObjectContext']
Usability,"td::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::WriteTopologyinlinestatic; sofa::core::objectmodel::BaseObject::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::playback::WriteTopology; d_intervalsofa::component::playback::WriteTopology; d_messageLogCountsofa::core::objectmodel::Basemutable; d_periodsofa::component::playback::WriteTopology; d_timesofa::component::playback::WriteTopology; d_writeContainerssofa::component::playback::WriteTopology; d_writeShellContainerssofa::component::playback::WriteTopology; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology-members.html:2092,clear,clearLoggedMessages,2092,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"td::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::component::io::mesh::GridMeshCreatorinlinevirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core::loader::MeshLoader; d_highOrderHexahedronPositionssofa::core::loader::MeshLoader; d_highOrderQuadPositionssofa::core::loader::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html:4824,clear,clearLoggedMessages,4824,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator-members.html,1,['clear'],['clearLoggedMessages']
Usability,"td::list< unsigned int > constraints_sequence;  ; bool change_sequence;  ; std::vector< ConstraintCorrections > cclist_elems;  ;  Public Attributes inherited from sofa::component::constraint::lagrangian::solver::ConstraintProblem; sofa::linearalgebra::LPtrFullMatrix< SReal > W;  ; sofa::linearalgebra::FullVector< SReal > dFree;  ; sofa::linearalgebra::FullVector< SReal > f;  ; SReal tolerance;  ; int maxIterations;  . Protected Attributes; sofa::linearalgebra::FullVector< SReal > m_lam;  ; sofa::linearalgebra::FullVector< SReal > m_deltaF;  ; sofa::linearalgebra::FullVector< SReal > m_deltaF_new;  ; sofa::linearalgebra::FullVector< SReal > m_p;  ;  Protected Attributes inherited from sofa::component::constraint::lagrangian::solver::ConstraintProblem; int dimension;  ; unsigned int problemId;  . Public Member Functions;  GenericConstraintProblem ();  ;  ~GenericConstraintProblem () override;  ; void clear (int nbConstraints) override;  ; void freeConstraintResolutions ();  ; void solveTimed (SReal tol, int maxIt, SReal timeout) override;  ; void gaussSeidel (SReal timeout=0, GenericConstraintSolver *solver=nullptr);  Projective Gauss Seidel method building the compliance matrix. More...;  ; void unbuiltGaussSeidel (SReal timeout=0, GenericConstraintSolver *solver=nullptr);  Projective Gauss Seidel unbuilt method. More...;  ; void NNCG (GenericConstraintSolver *solver=nullptr, int iterationNewton=1);  ; void gaussSeidel_increment (bool measureError, SReal *dfree, SReal *force, SReal **w, SReal tol, SReal *d, int dim, bool &constraintsAreVerified, SReal &error, sofa::type::vector< SReal > &tabErrors) const;  ; void result_output (GenericConstraintSolver *solver, SReal *force, SReal error, int iterCount, bool convergence);  ; int getNumConstraints ();  ; int getNumConstraintGroups ();  ;  Public Member Functions inherited from sofa::component::constraint::lagrangian::solver::ConstraintProblem;  ConstraintProblem ();  ; virtual ~ConstraintProblem ();  ; int getDimension (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html:1749,clear,clear,1749,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_problem.html,1,['clear'],['clear']
Usability,"te< TDataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; sofa::baseWrite(VecId v)=0sofa::core::BaseStatepure virtual; sofa::core::State::baseWrite(VecId v) overridesofa::core::State< TDataTypes >virtual; beginIntegration(SReal)sofa::core::behavior::BaseMechanicalStateinlinevirtual; buildIdentityBlocksInJacobian(const sofa::type::vector< unsigned int > &list_n, core::MatrixDerivId &mID)=0sofa::core::behavior::BaseMechanicalStatepure virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compareVec(ConstVecId v, std::istream &in)=0sofa::core::behavior::BaseMechanicalStatepure virtual; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::State::computeBBox() constsofa::core::State< TDataTypes >; sofa::core::State::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< TDataTypes >virtual; constraintBlocks(const std::list< unsigned int > &) constsofa::core::behavior::BaseMechanicalStateinlinevirtual; Coord typedefsofa::core::behavior::MechanicalState< TDataTypes >; copyFromBaseVector(VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset)=0sofa::core::behavior::BaseMechanicalStatepure virtual; copyFromBuffer(VecId dst, const SReal *src, unsigned n) overridesofa::core::behavior::MechanicalState< TDataTypes >; sofa::core::behavior::BaseMechanicalState::copyFromBuffer(VecId dst, const SReal *src, unsigned int",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html:4219,clear,clearLoggedMessages,4219,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state-members.html,1,['clear'],['clearLoggedMessages']
Usability,"te<class DataTypes > . SingleLink<FixedTranslationProjectiveConstraint<DataTypes>, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::l_topology. Link to be set to the topology container in the component graph. . Constructor details. ◆ FixedTranslationProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::FixedTranslationProjectiveConstraint. protected . ◆ ~FixedTranslationProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::~FixedTranslationProjectiveConstraint. protectedvirtual . Function details. ◆ addIndex(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::addIndex ; (; Index ; index). ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::clearIndices. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::FixedTranslationProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const core::MechanicalP",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html:22676,clear,clearIndices,22676,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"te<typename real > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; type::NoInit ; ). inlineexplicitconstexpr . ◆ RigidDeriv() [3/6]. template<typename real > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; const Vec3 & ; velCenter, . const Vec3 & ; velOrient . ). inlineconstexpr . ◆ RigidDeriv() [4/6]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; const RigidDeriv< 3, real2 > & ; c). inlineconstexpr . ◆ RigidDeriv() [5/6]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; const type::Vec< 6, real2 > & ; v). inlineconstexpr . ◆ RigidDeriv() [6/6]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidDeriv< 3, real >::RigidDeriv ; (; const real2 * ; ptr). inlineconstexpr . Function details. ◆ clear(). template<typename real > . constexpr void sofa::defaulttype::RigidDeriv< 3, real >::clear ; (; ). inlineconstexpr . ◆ getAngular() [1/2]. template<typename real > . constexpr Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getAngular ; (; ). inlineconstexpr . ◆ getAngular() [2/2]. template<typename real > . constexpr const Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getAngular ; (; ); const. inlineconstexpr . ◆ getLinear() [1/2]. template<typename real > . constexpr Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getLinear ; (; ). inlineconstexpr . ◆ getLinear() [2/2]. template<typename real > . constexpr const Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getLinear ; (; ); const. inlineconstexpr . ◆ getVAll(). template<typename real > . constexpr VecAll sofa::defaulttype::RigidDeriv< 3, real >::getVAll ; (; ); const. inlineconstexpr . ◆ getVCenter() [1/2]. template<typename real > . constexpr Vec3& sofa::defaulttype::RigidDeriv< 3, real >::getVCenter ; (; ). inlineconstexpr . ◆ getVCenter() [2/2]. template<typename real > . constexpr const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html:5458,clear,clear,5458,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_deriv_3_013_00_01real_01_4.html,1,['clear'],['clear']
Usability,"tected Member Functions inherited from sofa::linearalgebra::BaseVector; template<class T > ; const T * elementsDefaultImpl (Index i0, Index n, T *buffer) const;  ; template<class T > ; void setDefaultImpl (Index i0, Index n, const T *src);  ; template<class T > ; void addDefaultImpl (Index i0, Index n, const T *src);  . Attribute details. ◆ eigenVector. template<class TReal , std::size_t TBlockSize = 1> . VectorEigen sofa::linearalgebra::EigenVector< TReal, TBlockSize >::eigenVector. protected . the data . Constructor details. ◆ EigenVector(). template<class TReal , std::size_t TBlockSize = 1> . sofa::linearalgebra::EigenVector< TReal, TBlockSize >::EigenVector ; (; Index ; nbRow = 0). inline . Function details. ◆ add(). template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::add ; (; Index ; i, . SReal ; v . ). inlineoverridevirtual . Add v to the existing value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [1/2]. template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::clear ; (; ). inlineoverridevirtual . Set all values to 0, by resizing to the same size. ; Implements sofa::linearalgebra::BaseVector. ◆ clear() [2/2]. template<class TReal , std::size_t TBlockSize = 1> . void sofa::linearalgebra::EigenVector< TReal, TBlockSize >::clear ; (; Index ; i). inlineoverridevirtual . Reset the value of element i to 0. ; Reimplemented from sofa::linearalgebra::BaseVector. ◆ element(). template<class TReal , std::size_t TBlockSize = 1> . SReal sofa::linearalgebra::EigenVector< TReal, TBlockSize >::element ; (; Index ; i); const. inlineoverridevirtual . Read the value of element i. ; Implements sofa::linearalgebra::BaseVector. ◆ getVectorEigen() [1/2]. template<class TReal , std::size_t TBlockSize = 1> . VectorEigen& sofa::linearalgebra::EigenVector< TReal, TBlockSize >::getVectorEigen ; (; ). inline . ◆ getVectorEigen() [2/2]. template<class",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html:4782,clear,clear,4782,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_vector.html,1,['clear'],['clear']
Usability,"tected; checkConnexity() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createEdgesAroundVertexArray()sofa::component::topology::contai",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:4416,clear,clearEdgesAroundVertex,4416,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['clear'],['clearEdgesAroundVertex']
Usability,"tectedvirtual; associateLocalMatrixToComponents(const core::MechanicalParams *)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem() overridesofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >virtual; CompositeLinearSystem()sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >protected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html:2562,clear,clearLoggedMessages,2562,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system-members.html,1,['clear'],['clearLoggedMessages']
Usability,"tectedvirtual; associateLocalMatrixToComponents(const core::MechanicalParams *)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; CompositeLinearSystem classsofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >friend; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html:2522,clear,clearLoggedMessages,2522,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system-members.html,1,['clear'],['clearLoggedMessages']
Usability,"tectedvirtual; associateLocalMatrixToComponents(const core::MechanicalParams *)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >inlineprotectedvirtual; Base()sofa::core::objectmodel::Baseprotected; BaseMatrixLinearSystem()sofa::core::behavior::BaseMatrixLinearSystemprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildSystemMatrix(const core::MechanicalParams *mparams)sofa::core::behavior::BaseMatrixLinearSystem; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearSystem()sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >virtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, TVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; copyLocalVectorToGlobalVector(core::MultiVecDerivId v, GraphScatteredVector *globalVector)sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinesta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html:2554,clear,clearLoggedMessages,2554,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system-members.html,2,['clear'],['clearLoggedMessages']
Usability,"ted from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlag",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html:3086,clear,clear,3086,api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html,2,['clear'],['clear']
Usability,"ted from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  . Protected Member Functions; DestType * getIndex (std::size_t index) const;  ; virtual void added (DestPtr ptr, std::size_t index)=0",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html:3349,clear,clear,3349,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,1,['clear'],['clear']
Usability,"ted from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  . Protected Member Functions; void added (DestPtr val, std::size_t index);  ; void removed (DestPtr val, std::size_t index);  ;  Prot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html:3628,clear,clear,3628,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,1,['clear'],['clear']
Usability,"ted from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  . Protected Member Functions; void added (DestPtr val, std::size_t);  ; void removed (DestPtr val, std::size_t);  ; void changed (Des",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html:3917,clear,clear,3917,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,1,['clear'],['clear']
Usability,"ted from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(MeshMatrixMass, DataTypes, GeometricalTypes), SOFA_TEMPLATE(core::behavior::Mass, DataTypes));  ; virtual void clear ();  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void doUpdateInternal () override;  Implementation of the internal update. More...;  ; sofa::geometry::ElementType getMassTopologyType () const;  ; void setMassTopologyType (sofa::geometry::ElementType t);  ; std::size_t getMassCount () const;  ; void printMass ();  Print key mass information (totalMass, vertexMass and massDensity) More...;  ; void computeMass ();  Compute the mass from input values. More...;  ; void copyVertexMass ();  Copy the vertex mass scalar (in case of CudaTypes) More...;  ; void addMDx (const core::MechanicalParams *, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) override;  ; void ac",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:6635,clear,clear,6635,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['clear'],['clear']
Usability,"ted; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::mechanicalload::LinearForceField< DataTypes >virtual; buildStiffnessMatrix(core::behavior::StiffnessMatrix *matrix) overridesofa::component::mechanicalload::LinearForceField< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ForceField< DataTypes >inlinestatic; sofa::core::behavior::BaseForceField::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearKeyForces()sofa::component::mechanicalload::LinearForceField< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; clearPoints()sofa::component::mechanicalload::LinearForceField< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::mechanicalload::LinearForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_arrowSizeCoefsofa::component::mechanicalload::LinearForceField< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_forcesofa::component::mechanicalload::LinearForceField< DataTypes >; d_keyForcessofa::component::mechanicalload::LinearForceField< DataTypes >; d_keyTimessofa::component::mechanicalload::LinearForceField< DataTyp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html:4865,clear,clearKeyForces,4865,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field-members.html,1,['clear'],['clearKeyForces']
Usability,"ted; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(sofa::Index index, CollisionModel *model2, sofa::Index index2) overridesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >virtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >inlinestatic; sofa::core::CollisionModel::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TriangleOctreeModelvirtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::TriangleOctreeModelvirtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; TriangleCollisionModel< sofa::Coord typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; sofa::helper::TriangleOctreeRoot::Coord typedefsofa::helper::TriangleOctreeRoot; countLogge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model-members.html:3121,clear,clearLoggedMessages,3121,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_octree_model-members.html,1,['clear'],['clearLoggedMessages']
Usability,tegrated in Unity3D. /sofa-day-2016-in-strasbourg; ; SOFA – SOFA Day 2016 in Strasbourg. /sofa-gets-a-brand-new-design; . /feed; . 	Comments on: SOFA gets a brand-new design !	. SOFA – SOFA gets a brand-new design !. /sofa-in-robotics-2021-6-new-papers; ; SOFA – SOFA in Robotics 2021: 6 new papers. /sofa-in-the-jfr-2015; ; SOFA – SOFA in the JFR 2015. /sofa-is-on-twitter; ; SOFA – SOFA is on twitter !. /sofa-partner-of-medfit-2019; ; SOFA – SOFA partner of MedFIT 2019. /sofa-presented-at-medteq-2018-in-montreal; ; SOFA – SOFA presented at MedTeq 2018 in Montreal. /sofa-presented-in-webinar-radiologie-numerique-french; ; SOFA – SOFA presented in webinar “Radiologie Numérique” [French]. /sofa-soon-on-github; ; SOFA – SOFA soon on GitHub. /sofa-stc5-coming-soon; ; SOFA – SOFA STC#5 in Strasbourg. /sofa-technical-committee-3-upcoming-raise-your-expectations; ; SOFA – SOFA Technical Committee #3 upcoming: raise your expectations!. /sofa-technologies-exhibited-amd-learning-day-in-paris; ; SOFA – SOFA technologies exhibited @ AMD Learning Day in Paris. /sofa-training-discover-and-learn-sofa-at-ismar2017; ; SOFA – SOFA training: discover and learn SOFA at ISMAR 2017. /sofa-v16-12-has-been-released; ; SOFA – SOFA v16.12 has been released!. /sofa-v17-06-has-been-released; ; SOFA – SOFA v17.06 has been released!. /sofa-v17-12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-be,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:8439,learn,learning-day-in-paris,8439,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['learn'],['learning-day-in-paris']
Usability,"template<std::size_t M, std::enable_if_t<(M > 3), int > > . void sofa::linearalgebra::BTDMatrix< N, T >::add ; (; Index ; row, . Index ; col, . const type::Mat< BSIZE, BSIZE, Real > & ; v . ). Accumulation specialized on contributions of the same size than the blocks. . ◆ asub() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ). ◆ asub() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::asub ; (; Index ; bi, . Index ; bj, . Index ; , . Index ;  . ); const. ◆ bloc() [1/2]. template<std::size_t N, typename T > . BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BTDMatrix< N, T >::Block & sofa::linearalgebra::BTDMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BTDMatrix< N, T >::clearRowCol ; (; Index ; i).",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html:17100,clear,clear,17100,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix.html,1,['clear'],['clear']
Usability,"ter performances. . ◆ add() [6/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<typename T > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [8/8]. template<typename T > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ begin() [1/2]. template<class Real > . FullMatrix< Real >::LineIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ begin() [2/2]. template<class Real > . FullMatrix< Real >::LineConstIterator sofa::linearalgebra::FullMatrix< Real >::begin. ◆ clear() [1/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<class Real > . void sofa::linearalgebra::FullMatrix< Real >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::FullMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Num",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html:19174,clear,clear,19174,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix.html,1,['clear'],['clear']
Usability,"ter performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain better performances. More...;  ; virtual void clearRows (Index imin, Index imax);  Clears the value of rows imin to imax-1. More...;  ; virtual void clearCols (Index imin, Index imax);  Clears all the values in columns imin to imax-1. More...;  ; virtual void clearRowsCols (Index imin, Index imax);  Clears all the values in rows imin to imax-1 and columns imin to imax-1. More...;  ; virtual void compress ();  ; virtual void opMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and put the result in vector result. More...;  ; virtual void opMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and put the result in vector result. More...;  ; virtual void opMulV (double *result, const double *v) const;  Multiply the matrix by double vector v and put the result in vector result. More...;  ; virtual void opPMulV (linearalgebra::BaseVector *result, const linearalgebra::BaseVector *v) const;  Multiply the matrix by vector v and add the result in vector result. More...;  ; virtual void opPMulV (float *result, const float *v) const;  Multiply the matrix by float vector v and add the result in vector result. More...;  ; virtual void opPMulV (double *result, const double *v) const;  Multiply the matrix by",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:5365,clear,clearRowsCols,5365,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,7,['clear'],['clearRowsCols']
Usability,"texpr Size spatial_dimensions = 3;  Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for quaternions) More...;  . Public Member Functions; constexpr Quat ();  ; constexpr Quat (qNoInit);  Fast constructor: no initialization. More...;  ;  ~Quat ()=default;  ; constexpr Quat (Real x, Real y, Real z, Real w);  ; template<class Real2 > ; constexpr Quat (const Real2 q[]);  ; template<class Real2 > ; constexpr Quat (const Quat< Real2 > &q);  ;  Quat (const Vec3 &axis, Real angle);  ;  Quat (const Vec3 &vFrom, const Vec3 &vTo);  ; void set (Real x, Real y, Real z, Real w);  ; const Real * ptr () const;  Cast into a standard C array of elements. More...;  ; Real * ptr ();  Cast into a standard C array of elements. More...;  ; bool isNormalized ();  Returns true if norm of Quaternion is one, false otherwise. More...;  ; void normalize ();  Normalize a quaternion. More...;  ; void clear ();  ; void fromFrame (const Vec3 &x, const Vec3 &y, const Vec3 &z);  Convert the reference frame orientation into an orientation quaternion. More...;  ; void fromMatrix (const Mat3x3 &m);  Convert a rotation matrix into an orientation quaternion. More...;  ; void toMatrix (Mat3x3 &m) const;  Convert the quaternion into an orientation matrix. More...;  ; constexpr void toHomogeneousMatrix (Mat4x4 &m) const;  ; constexpr auto rotate (const Vec3 &v) const -> Vec3;  Apply the rotation to a given vector. More...;  ; constexpr auto inverseRotate (const Vec3 &v) const -> Vec3;  Apply the inverse rotation to a given vector. More...;  ; auto operator+ (const Quat &q1) const -> Quat;  ; constexpr auto operator* (const Quat &q1) const -> Quat;  ; constexpr auto operator* (const Real &r) const -> Quat;  ; auto operator/ (const Real &r) const -> Quat;  ; void operator*= (const Real &r);  ; void operator/= (const Real &r);  ; constexpr auto quatVectMult (const Vec3 &vect) const -> Quat;  Given two Quats, multiply them together to get a third quaternion. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html:1551,clear,clear,1551,api/master/sofa/html/classsofa_1_1type_1_1_quat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html,1,['clear'],['clear']
Usability,"texpr const T & x () const noexcept;  Special const access to first element. More...;  ; constexpr T & y () noexcept;  Special access to second element. More...;  ; constexpr const T & y () const noexcept;  Special const access to second element. More...;  ; constexpr T & z () noexcept;  Special access to third element. More...;  ; constexpr const T & z () const noexcept;  Special const access to third element. More...;  ; constexpr T & w () noexcept;  Special access to fourth element. More...;  ; constexpr const T & w () const noexcept;  Special const access to fourth element. More...;  ; constexpr void operator= (const T r1) noexcept;  Specific Assignment operator for 1-element vectors. More...;  ; constexpr void operator= (const real2 *p) noexcept;  Assignment operator from an array of values. More...;  ; constexpr void operator= (const Vec< M, real2 > &v) noexcept;  Assignment from a vector with different dimensions. More...;  ; constexpr void assign (const T &value) noexcept;  ; constexpr void clear () noexcept;  Sets every element to 0. More...;  ; constexpr void fill (T r) noexcept;  Sets every element to r. More...;  ; constexpr T & operator() (Size i) noexcept;  Access to i-th element. More...;  ; constexpr const T & operator() (Size i) const noexcept;  Const access to i-th element. More...;  ; constexpr const T * ptr () const noexcept;  Cast into a const array of values. More...;  ; constexpr T * ptr () noexcept;  Cast into an array of values. More...;  ; constexpr void getsub (const Size i, Vec< N2, T > &m) const noexcept;  ; constexpr void getsub (const Size i, T &m) const noexcept;  ; constexpr Vec< N, T > mulscalar (const T f) const noexcept;  ; constexpr Vec< N, T > mulscalar (const real2 f) const noexcept;  Multiplication by a scalar f. More...;  ; constexpr Vec< N, T > operator* (const real2 f) const noexcept;  ; constexpr T operator* (const Vec< N, real2 > &v) const noexcept;  Dot product. More...;  ; constexpr void eqmulscalar (const T f) noexcept",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector_1_1_block.html:3030,clear,clear,3030,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector_1_1_block.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_vector_1_1_block.html,1,['clear'],['clear']
Usability,"texpr Mat (const Mat< L2, C2, real2 > &m) noexcept;  Constructor from another matrix with different size (with null default entries and ignoring outside entries) More...;  ; constexpr Mat (const real2 *p) noexcept;  Constructor from an array of elements (stored per line). More...;  ; constexpr Size getNbLines () const;  number of lines More...;  ; constexpr Size getNbCols () const;  number of columns More...;  ; constexpr void operator= (const Real *p) noexcept;  Assignment from an array of elements (stored per line). More...;  ; constexpr void operator= (const Mat< L, C, real2 > &m) noexcept;  Assignment from another matrix. More...;  ; constexpr void operator= (const Mat< L2, C2, Real > &m) noexcept;  Assignment from a matrix of different size. More...;  ; constexpr void getsub (Size L0, Size C0, Mat< L2, C2, Real > &m) const noexcept;  ; constexpr void getsub (const Size L0, const Size C0, Vec< C2, Real > &m) const noexcept;  ; constexpr void getsub (Size L0, Size C0, Real &m) const noexcept;  ; constexpr void setsub (Size L0, Size C0, const Mat< L2, C2, Real > &m) noexcept;  ; constexpr void setsub (Size L0, Size C0, const Vec< L2, Real > &v) noexcept;  ; constexpr void clear () noexcept;  Sets each element to 0. More...;  ; constexpr void fill (Real r) noexcept;  Sets each element to r. More...;  ; constexpr const Line & line (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr Col col (Size j) const noexcept;  Copy of column j. More...;  ; constexpr LineNoInit & operator[] (Size i) noexcept;  Write access to line i. More...;  ; constexpr const LineNoInit & operator[] (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr LineNoInit & operator() (Size i) noexcept;  Write access to line i. More...;  ; constexpr const LineNoInit & operator() (Size i) const noexcept;  Read-only access to line i. More...;  ; constexpr Real & operator() (Size i, Size j) noexcept;  Write access to element (i,j). More...;  ; constexpr const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix_1_1_block.html:2933,clear,clear,2933,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix_1_1_block.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix_1_1_block.html,2,['clear'],['clear']
Usability,"textLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html:4279,clear,clear,4279,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container-members.html,2,['clear'],['clear']
Usability,"textLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::HexahedronSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanHexahedronTopologyFromDirty()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanQuadTopologyFromDirty()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainervirtual; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInHexahedron()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearEdgesInQuad()sofa::component::topology::container::dynamic::QuadSetTopologyContainerprotected; clearHexahedra()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundEdge()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundQuad()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearHexahedraAroundVertex()sofa::component::topology::container::dynamic::HexahedronSetTopologyContainerprotected; clearLoggedMessages() constsofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html:4674,clear,clear,4674,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container-members.html,1,['clear'],['clear']
Usability,"the complete list of members for sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >, including all inherited members. Block typedefsofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >; BlockTranspose typedefsofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >; clear(Block &b)sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >inlinestatic; empty(const Block &b)sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >inlinestatic; getElementType()sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >inlinestatic; Name()sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >inlinestatic; NC enum valuesofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >; NL enum valuesofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >; Real typedefsofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >; subBlock(const Block &b, IndexType row, IndexType col, TSubBlock &subBlock)sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >inlinestatic; transpose(Block &res, const Block &b)sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >inlinestatic; transposed(const Block &b)sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >inlinestatic; v(Block &b, int, int col)sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >inlinestatic; v(const Block &b, int, int col)sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >inlinestatic; vadd(Block &b, int, int col, Real v)sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >inlinestatic; vset(Block &b, int, int col, Real v)sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >inlinestatic. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_00_01_index_type_01_4-members.html:538,clear,clear,538,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_00_01_index_type_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_00_01_index_type_01_4-members.html,1,['clear'],['clear']
Usability,"the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LinearVelocityProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearIndices ();  methods to add/remove some indices, keyTimes, keyVelocity More...;  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void clearKeyVelocities ();  ; void addKeyVelocity (Real time, Deriv movement);  ; void init () override;  – Constraint interface More...;  ; void reset () override;  Reset to initial state. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::Pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:3259,clear,clearIndices,3259,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,1,['clear'],['clearIndices']
Usability,"the msg_* macro to handle emitting case based on string. . ◆ getDefaultMessageHandlers(). std::vector<MessageHandler*> sofa::helper::logging::getDefaultMessageHandlers ; (; ). Threading issues... a mutex is serializing the access to the message API. Memory management: object are passed to the message info. some of them are duplicated other get a weak reference . ◆ getMainInstance(). MessageDispatcherImpl* sofa::helper::logging::getMainInstance ; (; ). ◆ notMuted() [1/4]. bool sofa::helper::logging::notMuted ; (; const ComponentInfo::SPtr & ; ). inline . ◆ notMuted() [2/4]. bool sofa::helper::logging::notMuted ; (; const sofa::core::objectmodel::Base * ; t). inline . ◆ notMuted() [3/4]. bool sofa::helper::logging::notMuted ; (; const std::string & ; ). inline . This function is used in the msg_* macro to handle string based on string. . ◆ notMuted() [4/4]. bool sofa::helper::logging::notMuted ; (; sofa::core::objectmodel::Base * ; t). inline . ◆ operator<<() [1/3]. std::ostream& sofa::helper::logging::operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). ◆ operator<<() [2/3]. std::ostream& sofa::helper::logging::operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). ◆ operator<<() [3/3]. SOFA_HELPER_API std::ostream & sofa::helper::logging::operator<< ; (; std::ostream & ; s, . const Message & ; m . ). ◆ simpleFormat(). void sofa::helper::logging::simpleFormat ; (; size_t ; jsize, . const std::string & ; text, . size_t ; line_length, . std::ostream & ; wrapped . ). simpleFormat a text containing our markdown 'tags' ; Parameters. jsizesize of the line prefix to fill with space (for left side alignment) ; textthe text to format ; line_lengthnumber of column to render to to ; wrappedthe destination stream where to write the formatted text. . ◆ toString(). SOFA_HELPER_API const std::string sofa::helper::logging::toString ; (; const Message::Type ; type). sofahelperlogging; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:5249,simpl,simpleFormat,5249,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,3,['simpl'],['simpleFormat']
Usability,"thod called at graph creation and modification, during top-down traversal. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void exportOBJ (std::string, std::ostream *, std::ostream *, Index &, Index &, Index &, int &) override;  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html:1544,clear,clearVisual,1544,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"thod. More...;  ; Block * wbloc (Index i, Index j, bool create=false);  ; Block * wblock (Index i, Index j, Index &rowId, Index &colId, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; BlockMatrixWriter operators; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsigned int bj, const DBlock &b);  ; void addDValue (unsigned int bi, unsigned int bj, const Real b);  ; void addDValue (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Real b);  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void addDiag (unsigned int bi, const Block &b);  ; template<typename = typename std::enable_if< Policy::IsAlwaysSquare>> ; void addDiag (unsigned int bi, int &rowId, int &colId, const Block &b);  ; template<typename = typename ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:5559,clear,clearRowColBlock,5559,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,1,['clear'],['clearRowColBlock']
Usability,"tializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseMass()sofa::core::behavior::BaseMassprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; buildMassMatrix(sofa::core::behavior::MassMatrixAccumulator *matrices)sofa::core::behavior::BaseMassvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; exportGnuplot(const MechanicalParams *mparams, SReal time)=0sofa::core::behavior::BaseMasspure virtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html:2524,clear,clearLoggedMessages,2524,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass-members.html,1,['clear'],['clearLoggedMessages']
Usability,"tion & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). template<class T > . std::string sofa::simpleapi::str ; (; const T & ; t). sofasimpleapi; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:5990,simpl,simpleapi,5990,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,8,['simpl'],['simpleapi']
Usability,"tion method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html:3838,clear,clearVisual,3838,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"tion(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkMultipass(sofa::core::objectmodel::BaseContext *con)sofa::gl::component::shader::VisualManagerPassprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::VisualManagerPassvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::VisualManagerPassvirtual; drawScene(core::visual::VisualParams *vp) overridesofa::gl::component::shader::VisualManagerPassvirtual; drawShadow(const VisualParams *vparams)sofa::core::visua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html:2631,clear,clearVisual,2631,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass-members.html,1,['clear'],['clearVisual']
Usability,"tions and velocities. Also defines the order of the constraint (POS, VEL, ACC). This is the method that should be implemented by the component ; Implements sofa::core::behavior::PairInteractionConstraint< TDataTypes >. ◆ bwdInit() [1/2]. SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_MODEL_API void sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< Rigid3Types >::bwdInit ; (; ). virtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ bwdInit() [2/2]. template<class DataTypes > . void sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >::bwdInit ; (; ). inlineoverridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >::clear ; (; int ; reserve = 0). ◆ draw(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getBilateralInteractionIdentifiers(). template<class DataTypes > . virtual type::vector<std::string> sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >::getBilateralInteractionIdentifiers ; (; ). inlinevirtual . ◆ getConstraintResolution() [1/2]. SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_MODEL_API void sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< Rigid3Types >::getConstraintResolution ; (; const ConstraintParams * ; cParams, . std::vector< ConstraintResolution * > & ; resTab, . unsigned int & ; offset . ). virtual . Add the correspondi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:34236,clear,clear,34236,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,1,['clear'],['clear']
Usability,"tions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  . Protected Member Functions;  TriangleSetTopologyContainer ();  ;  ~TriangleSetTopologyContainer () override;  ; virtual void createTriangleSetArray ();  Creates the TriangleSet array. More...;  ; void createEdgeSetArray () override;  Creates the EdgeSet array. More...;  ; virtual void createEdgesInTriangleArray ();  Creates the array of edge indices for each triangle. More...;  ; virtual void createTrianglesAroundVertexArray ();  Creates the TrianglesAroundVertex Array. More...;  ; virtual void createTrianglesAroundEdgeArray ();  Creates the TrianglesAroundEdge Array. More...;  ; void clearTriangles ();  ; void clearEdgesInTriangle ();  ; void clearTrianglesAroundVertex ();  ; void clearTrianglesAroundEdge ();  ; void clearBorderElementLists ();  ; virtual TrianglesAroundVertex & getTrianglesAroundVertexForModification (const PointID vertexIndex);  Returns a non-const list of triangle indices around a given DOF for subsequent modification. More...;  ; virtual TrianglesAroundEdge & getTrianglesAroundEdgeForModification (const EdgeID edgeIndex);  Returns a non-const list of triangle indices around a given edge for subsequent modification. More...;  ; void setTriangleTopologyToDirty ();  ; void cleanTriangleTopologyFromDirty ();  ; const bool & isTriangleTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer;  EdgeSetTopologyContainer ();  ;  ~EdgeSetTopologyContainer () override;  ; virtual void createEdgesAroundVertexArray ();  Creates the EdgesAroundVertex array. More...;  ; void clearEdges ();  ; void clearEdgesAroundVertex ();  ; void setEdgeTopologyToDirty ();  ; void cleanEdgeTopologyFromDirty ();  ; const bool & isEdgeTopologyDirty ();  ; virtual EdgesAr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:31426,clear,clearTriangles,31426,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,5,['clear'],"['clearBorderElementLists', 'clearEdgesInTriangle', 'clearTriangles', 'clearTrianglesAroundEdge', 'clearTrianglesAroundVertex']"
Usability,"tmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase()sofa::core::collision::BroadPhaseDetectionvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance inst) overridesofa::core::collision::BroadPhaseDetectionprotectedvirtual; changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; cmPairssofa::core::collision::BroadPhaseDetectionprotected; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; CollisionModelPair typedefsofa::core::collision::BroadPhaseDetection; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::BroadPhaseDetectionvirtual; f_bbox",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection-members.html:2468,clear,clearLoggedMessages,2468,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection-members.html,1,['clear'],['clearLoggedMessages']
Usability,"tmodel::Base; bDrawsofa::component::engine::generate::MeshTetraStuffing; bSnapPointssofa::component::engine::generate::MeshTetraStuffing; bSplitTetrahedrasofa::component::engine::generate::MeshTetraStuffing; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; cellsizesofa::component::engine::generate::MeshTetraStuffing; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_alphaLongsofa::component::engine::generate::MeshTetraStuffing; d_alphaShortsofa::component::engine::generate::MeshTetraStuffing; d_bDrawsofa::component::engine::generate::MeshTetraStuffing; d_bSnapPointssofa::component::engine::generate::MeshTetraStuffing; d_bSplitTetrahedrasofa::component::engine::generate::MeshTetraStuffing; d_componentStatesofa::core::objectmodel::Base; d_inputPointssofa::component::engine::generate::MeshTetraStuffing; d_inputQuadssofa::component::engine::generate::MeshTetraStuffing; d_inputTrianglessofa::component::engine::generate::MeshTetraStuffing; d_messageLogCountsofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html:3375,clear,clearLoggedMessages,3375,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing-members.html,1,['clear'],['clearLoggedMessages']
Usability,to-the-indices-in-a-map; ; SOFA - Topic: [SOLVED] How to get access to the indices in a Map?. /how-to-get-indices-in-fixedconstraint; ; SOFA - Topic: [SOLVED] How to get indices in FixedConstraint. /how-to-get-strain-output-in-sofa; ; SOFA - Topic: How to get Strain output in SOFA. /how-to-get-stress-strain-on-surface; ; SOFA - Topic: How to get Stress strain on surface. /how-to-get-the-3d-position-of-mouse-interaction-in-sofapython; ; SOFA - Topic: How to get the 3d position of mouse interaction in SofaPython. /how-to-get-the-forcefeedback; ; SOFA - Topic: [SOLVED] How to get the ForceFeedback?. /how-to-give-multi-physical-properties-to-one-tetrahedron-object; ; SOFA - Topic: [SOLVED] How to give multi-physical properties to one tetrahedron object. /how-to-give-offset-distance-of-collision-in-geomagic-haptic-simulation; ; SOFA - Topic: [SOLVED] How to give offset distance of collision in geomagic haptic simulation. /how-to-implement-mechanical-resistance-in-a-simple-model; ; SOFA - Topic: [SOLVED] How to implement mechanical resistance in a simple model. /how-to-import-numpy-is-python-scripting-of-sofa; ; SOFA - Topic: [SOLVED] How to import numpy in python scripting of SOFA?. /how-to-import-sofa-in-softrobot; ; SOFA - Topic: How to import sofa in SoftRobot. /how-to-import-volume-mesh-from-matlab-iso2mesh-toolkit; ; SOFA - Topic: [SOLVED] How to import volume mesh from Matlab iso2mesh toolkit?. /how-to-incise-3d-object; . /page; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM m,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:323776,simpl,simple-model,323776,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['simpl'],"['simple', 'simple-model']"
Usability,"tor >::matrix { nullptr }. The global matrix of the linear system. If the linear system is written as Ax=b, it is A. . ◆ rhs. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSyste",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:2867,clear,clearSystem,2867,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,1,['clear'],['clearSystem']
Usability,"tor< MappingData3D > m_map3d;  ; MatrixType * m_matrixJ {nullptr};  ; bool m_updateJ {false};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(BarycentricMapperMeshTopology, In, Out), SOFA_TEMPLATE2(TopologyBarycentricMapper, In, Out));  ; void clear (std::size_t reserve=0) override;  ; void resize (core::State< Out > *toModel) override;  ; Index addPointInLine (const Index lineIndex, const SReal *baryCoords) override;  ; Index createPointInLine (const typename Out::Coord &p, Index lineIndex, const typename In::VecCoord *points) override;  ; Index addPointInTriangle (const Index triangleIndex, const SReal *baryCoords) override;  ; Index createPointInTriangle (const typename Out::Coord &p, Index triangleIndex, const typename In::VecCoord *points) override;  ; Index addPointInQuad (const Index quadIndex, const SReal *baryCoords) override;  ; Index createPointInQuad (const typename Out::Coord &p, Index quadIndex, const typename In::VecCoord *points) override;  ; Index addPointInTetra (const Index tetraIndex, const SReal *baryCoords) override;  ; Index addPointInCube (const Index cubeIndex, const SReal *baryCoords) override;  ; void init (const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void draw (const core::visual::VisualParams *, const typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void apply (typename Out::VecCoord &out, const typename In::VecCoord &in) override;  ; void applyJ (typename Out::VecDeriv &out, const typename In::VecDeriv &in) override;  ; void applyJT (typename In::VecDeriv &out, const typename Out::VecDeriv &in) override;  ; void applyJT (typename In::MatrixDeriv &out, const typename Out::MatrixDeriv &in) override;  ; const BaseMatrix * getJ (int outSize, int inSize) override;  ; sofa::type::vector< MappingData3D > const * getMap3d () const;  ;  ~BarycentricMapperMeshTopology () override;  . Protected Member Functions;  BarycentricMapperMeshTopology (core::topology::BaseMeshTopology *f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology.html:1223,clear,clear,1223,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_mesh_topology.html,1,['clear'],['clear']
Usability,"tor< dataTime > visitorsTimeTotal;  ; std::vector< dataTime > componentsTimeMax;  ; std::vector< dataTime > visitorsTimeMax;  ; QVisitorControlPanel * controlPanel;  ; ChartsWidget * chartsComponent;  ; ChartsWidget * chartsVisitor;  ; QComboBox * typeOfCharts;  . Static Protected Attributes; static QPixmap * icons [OTHER+1];  . Public Member Functions;  WindowVisitor (QWidget *parent);  ; void collapseNode (QTreeWidgetItem *item);  ; void expandNode (QTreeWidgetItem *item);  ; void setCharts (std::vector< dataTime > &latestC, std::vector< dataTime > &maxTC, std::vector< dataTime > &totalC, std::vector< dataTime > &latestV, std::vector< dataTime > &maxTV, std::vector< dataTime > &totalV);  . Protected Member Functions; bool setFocusOn (QTreeWidgetItem *item, QString text);  . Signals; void WindowVisitorClosed (bool);  . Public Slots; void setCurrentCharts (int);  ; void rightClick (const QPoint &point);  ; void collapseNode ();  ; void expandNode ();  ; void focusOn (QString focus);  ; static componentType getComponentType (std::string name);  ; static QPixmap * getPixmap (componentType t);  ; void closeEvent (QCloseEvent *);  ; void clearGraph ();  . Attribute details. ◆ chartsComponent. ChartsWidget* sofa::gui::qt::WindowVisitor::chartsComponent. protected . ◆ chartsVisitor. ChartsWidget* sofa::gui::qt::WindowVisitor::chartsVisitor. protected . ◆ componentsTime. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTime. protected . ◆ componentsTimeMax. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTimeMax. protected . ◆ componentsTimeTotal. std::vector< dataTime > sofa::gui::qt::WindowVisitor::componentsTimeTotal. protected . ◆ controlPanel. QVisitorControlPanel* sofa::gui::qt::WindowVisitor::controlPanel. protected . ◆ icons. QPixmap * sofa::gui::qt::WindowVisitor::icons. staticprotected . ◆ statsWidget. QWidget* sofa::gui::qt::WindowVisitor::statsWidget. ◆ typeOfCharts. QComboBox* sofa::gui::qt::WindowVisitor::typeOfCharts. protected",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html:1814,clear,clearGraph,1814,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_window_visitor.html,1,['clear'],['clearGraph']
Usability,"torOperations* sofa::core::behavior::TMultiVec< vtype >::vop. protected . Solver who is using this vector. . Constructor details. ◆ TMultiVec() [1/3]. template<VecType vtype> . sofa::core::behavior::TMultiVec< vtype >::TMultiVec ; (; BaseVectorOperations * ; vop, . MyMultiVecId ; v . ). inline . Refers to a state vector with the given ID (VecId::position(), VecId::velocity(), etc). . ◆ TMultiVec() [2/3]. template<VecType vtype> . sofa::core::behavior::TMultiVec< vtype >::TMultiVec ; (; ). inline . Refers to a not yet allocated state vector. . ◆ TMultiVec() [3/3]. template<VecType vtype> . sofa::core::behavior::TMultiVec< vtype >::TMultiVec ; (; BaseVectorOperations * ; vop, . bool ; dynamic = true, . const VecIdProperties & ; properties = {} . ). inline . Allocate a new temporary vector with the given type (sofa::core::V_COORD or sofa::core::V_DERIV). . ◆ ~TMultiVec(). template<VecType vtype> . sofa::core::behavior::TMultiVec< vtype >::~TMultiVec ; (; ). inline . Function details. ◆ clear(). template<VecType vtype> . void sofa::core::behavior::TMultiVec< vtype >::clear ; (; ). inline . v = 0 . ◆ dot(). template<VecType vtype> . SReal sofa::core::behavior::TMultiVec< vtype >::dot ; (; MyMultiVecId ; a). inline . Returnsv.a . ◆ eq() [1/3]. template<VecType vtype> . void sofa::core::behavior::TMultiVec< vtype >::eq ; (; AllMultiVecId ; a, . AllMultiVecId ; b, . SReal ; f = 1.0 . ). inline . v = a+b*f . ◆ eq() [2/3]. template<VecType vtype> . void sofa::core::behavior::TMultiVec< vtype >::eq ; (; MyMultiVecId ; a). inline . v = a . ◆ eq() [3/3]. template<VecType vtype> . void sofa::core::behavior::TMultiVec< vtype >::eq ; (; MyMultiVecId ; a, . SReal ; f . ). inline . v = a*f . ◆ id() [1/2]. template<VecType vtype> . MyMultiVecId& sofa::core::behavior::TMultiVec< vtype >::id ; (; ). inline . ◆ id() [2/2]. template<VecType vtype> . const MyMultiVecId& sofa::core::behavior::TMultiVec< vtype >::id ; (; ); const. inline . ◆ norm() [1/2]. template<VecType vtype> . SReal sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec.html:4180,clear,clear,4180,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec.html,1,['clear'],['clear']
Usability,"tor crend () const noexcept;  ; std::pair< iterator, bool > insert (const value_type &_Val);  ; iterator erase (const_iterator _Where) noexcept;  ; iterator erase (const_iterator _First, const_iterator _Last) noexcept;  ; std::size_t erase (const Tag &_Keyval) noexcept;  ; void clear () noexcept;  . Constructor details. ◆ TagSet() [1/2]. sofa::core::objectmodel::TagSet::TagSet ; (; ). default . ◆ TagSet() [2/2]. sofa::core::objectmodel::TagSet::TagSet ; (; const Tag & ; t). Automatic conversion between a tag and a tagset composed of this tag. . Function details. ◆ begin() [1/2]. TagSet::const_iterator sofa::core::objectmodel::TagSet::begin ; (; ); const. noexcept . ◆ begin() [2/2]. TagSet::iterator sofa::core::objectmodel::TagSet::begin ; (; ). noexcept . ◆ cbegin(). TagSet::const_iterator sofa::core::objectmodel::TagSet::cbegin ; (; ); const. noexcept . ◆ cend(). TagSet::const_iterator sofa::core::objectmodel::TagSet::cend ; (; ); const. noexcept . ◆ clear(). void sofa::core::objectmodel::TagSet::clear ; (; ). noexcept . ◆ count(). std::size_t sofa::core::objectmodel::TagSet::count ; (; const Tag & ; _Keyval); const. ◆ crbegin(). TagSet::const_reverse_iterator sofa::core::objectmodel::TagSet::crbegin ; (; ); const. noexcept . ◆ crend(). TagSet::const_reverse_iterator sofa::core::objectmodel::TagSet::crend ; (; ); const. noexcept . ◆ empty(). bool sofa::core::objectmodel::TagSet::empty ; (; ); const. noexcept . ◆ end() [1/2]. TagSet::const_iterator sofa::core::objectmodel::TagSet::end ; (; ); const. noexcept . ◆ end() [2/2]. TagSet::iterator sofa::core::objectmodel::TagSet::end ; (; ). noexcept . ◆ erase() [1/3]. std::size_t sofa::core::objectmodel::TagSet::erase ; (; const Tag & ; _Keyval). noexcept . ◆ erase() [2/3]. TagSet::iterator sofa::core::objectmodel::TagSet::erase ; (; const_iterator ; _First, . const_iterator ; _Last . ). noexcept . ◆ erase() [3/3]. TagSet::iterator sofa::core::objectmodel::TagSet::erase ; (; const_iterator ; _Where). noexcept . ◆ find() ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set.html:2327,clear,clear,2327,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_tag_set.html,1,['clear'],['clear']
Usability,"tprotected; BaseType typedefsofa::core::objectmodel::Base; buildDampingMatrix(core::behavior::DampingMatrix *) finalsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >virtual; buildStiffnessMatrix(StiffnessMatrix *matrix)sofa::core::behavior::BaseForceFieldvirtual; bwdInit() overridesofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >virtual; canCreate(T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(int reserve=0)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >inline; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::behavior::PairInteractionForceField< DataTypes >inlinestatic; createDefaultSprings()sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >; createEdgeInformation(Index, Spring &t, const core::topology::BaseMeshTopology::Edge &e, const sofa::type::vector< Index > &ancestors, const sofa::type::vector< SReal > &coefs)sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >protected; d_componentStatesofa::core::objectmodel::Base; d_filenameso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html:4228,clear,clearLoggedMessages,4228,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field-members.html,1,['clear'],['clearLoggedMessages']
Usability,"traintSet< TDataTypes >::projectPosition(const MechanicalParams *mparams, MultiVecCoordId xId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; projectResponse(const core::MechanicalParams *mparams, DataVecDeriv &resData) overridesofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectResponse(const MechanicalParams *mparams, MultiVecDerivId dxId)=0sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; sofa::core::behavior::BaseProjectiveConstraintSet::projectResponse(const MechanicalParams *, double **)sofa::core::behavior::BaseProjectiveConstraintSetinlinevirtual; projectResponseT(DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int, const VecBool &)> &clear)sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >protected; projectVelocity(const core::MechanicalParams *mparams, DataVecDeriv &vData) overridesofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >virtual; ProjectiveConstraintSet< TDataTypes >::projectVelocity(const MechanicalParams *mparams, MultiVecDerivId vId) overridesofa::core::behavior::ProjectiveConstraintSet< TDataTypes >virtual; Ptr typedefsofa::core::objectmodel::Base; Real typedefsofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeIndex(Index index)sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseProjectiveConstraintSetvirtual; removeSlave(BaseObject::SPtr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html:18174,clear,clear,18174,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html,1,['clear'],['clear']
Usability,"trix *matrices) overridesofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< true >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear(sofa::Size reserve=0)sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMappedMatrix(const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) overridesofa::core::Mapping< TIn, TOut >virtual; d_componentStatesofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html:5174,clear,clearLoggedMessages,5174,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"trix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; ClearByZerossofa::linearalgebra::CRSDefaultPolicystatic; clearCol(Index j) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearColBlock(Index j)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRowCol(Index i) overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inline; sofa::linearalgebra::BaseMatrix::clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowColBlock(Index i)sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize() constsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colsIndexsofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; colSize() const overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; colsValuesofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; compress() overridesofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >inlinevirtual; compressBtemp()sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMech",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html:15230,clear,clearRowCol,15230,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical-members.html,1,['clear'],['clearRowCol']
Usability,"trixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear(Index i, Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clear() overridesofa::linearalgebra::FullMatrix< T >virtual; clearCol(Index j) overridesofa::linearalgebra::FullMatrix< T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::FullMatrix< T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::FullMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; cre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html:6042,clear,clearRowCol,6042,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_matrix-members.html,2,['clear'],['clearRowCol']
Usability,"ts)sofa::core::objectmodel::Base; AFFINE enum valuesofa::component::engine::transform::TransformPosition< DataTypes >; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; Coord typedefsofa::component::engine::transform::TransformPosition< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataEngine()sofa::core::DataEngineprotected; DataTrackerDDGNode()sofa::core::DataTrackerDDGNodeinline; DDGLinkContainer typedefsofa::core::objectmodel::DDGNode; DDGLinkIterator typedefsofa::core::objectmodel::DDGNode; DDGNode()sofa::core::objectmodel::DDGNode; delInput(DDGNode *n)sofa::core::objectmodel::DDGNode; delOutput(DDGNode *n)sofa::core::objectmodel::DDGNode; doAddInput(DDGNode *n)sofa::core::objectmodel::DDG",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html:2795,clear,clearLoggedMessages,2795,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position-members.html,1,['clear'],['clearLoggedMessages']
Usability,"tsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< TReal >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< TReal >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< TReal >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html:5459,clear,clear,5459,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_base_sparse_matrix-members.html,1,['clear'],['clear']
Usability,"tsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix()sofa::linearalgebra::BTDMatrix< N, T >; BTDMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BTDMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BTDMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BTDMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html:6077,clear,clearRows,6077,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_b_t_d_matrix-members.html,1,['clear'],['clearRows']
Usability,"tual; BlockFullMatrix()sofa::linearalgebra::BlockFullMatrix< N, T >; BlockFullMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BlockFullMatrix< N, T >; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockFullMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html:5781,clear,clearCols,5781,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,1,['clear'],['clearCols']
Usability,"tual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; BlockFullMatrix()sofa::linearalgebra::BlockFullMatrix< N, T >; BlockFullMatrix(Index nbRow, Index nbCol)sofa::linearalgebra::BlockFullMatrix< N, T >; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockFullMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html:5548,clear,clear,5548,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,1,['clear'],['clear']
Usability,"tual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; Block typedefsofa::linearalgebra::BlockDiagonalMatrix< LC, T >; BlockDiagonalMatrix()sofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; category enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clear() overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize(void) constsofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html:6384,clear,clear,6384,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,1,['clear'],['clear']
Usability,"tual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; checkTopology() const overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; cleanEdgeTopologyFromDirty()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; cleanPointTopologyFromDirty()sofa::component::topology::container::dynamic::PointSetTopologyContainerprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanTriangleTopologyFromDirty()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::dynamic::TriangleSetTopologyContainervirtual; clearBorderElementLists()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearEdges()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesAroundVertex()sofa::component::topology::container::dynamic::EdgeSetTopologyContainerprotected; clearEdgesInTriangle()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearLoggedMessages() constsofa::core::objectmodel::Base; clearTriangles()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundEdge()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; clearTrianglesAroundVertex()sofa::component::topology::container::dynamic::TriangleSetTopologyContainerprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html:4111,clear,clear,4111,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container-members.html,1,['clear'],['clear']
Usability,"tual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value)sofa::core::MatrixAccumulatorInterfacevirtual; sofa::core::MappingMatrixAccumulator::add(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value)sofa::core::MatrixAccumulatorInterfacevirtual; clear() overridesofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inlinevirtual; empty() constsofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inline; getAccumulators() constsofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inline; matAdd(sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value)sofa::core::MatrixAccumulatorInterface; push_back(MappingMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inline; remove(MappingMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inline; setIndexCheckerStrategy(std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >)sofa::core::MatrixAccumulatorInterfaceinlinevirtual; size() constsofa::core::ListMatrixAccumulator< MappingMatrixAccumulator >inline; ~MatrixAccumulatorInterface()=defaultsofa::core::MatrixAccumulatorInterfacevirtual.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator-members.html:1963,clear,clear,1963,api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_mapping_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,"tvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::playback::ReadTopologyinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_filenamesofa::component::playback::ReadTopology; d_intervalsofa::component::playback::ReadTopology; d_loopsofa::component::playback::ReadTopology; d_messageLogCountsofa::core::objectmodel::Basemutable; d_shiftsofa::component::playback::ReadTopology; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; edgessofa::component::playback::ReadTopology; f_bboxsofa::core::objectmodel::Base; f_filenamesofa::component::playback::ReadTopology; f_interva",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology-members.html:1948,clear,clearLoggedMessages,1948,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ual; applyScale(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtual; bwdInit() overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; depthScalesofa::gl::component::shader::OrderIndependentTransparencyManager; doInitVisual(const core::visual::VisualParams *vp) overridesofa::gl::component::shader::OrderIndependentTransparencyManagervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OrderIndependentTransparencyManagervi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html:2551,clear,clearLoggedMessages,2551,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ual; canCollideWith(CollisionModel *model)sofa::core::CollisionModelvirtual; canCollideWithElement(sofa::Index index, CollisionModel *model2, sofa::Index index2) overridesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >virtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >inlinestatic; sofa::core::CollisionModel::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; CAPSULE_TYPE enum valuesofa::core::CollisionModel; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionModel()sofa::core::CollisionModelprotected; colorsofa::core::CollisionModelprotected; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >virtual; computeBoundingTree(int maxDepth=0) overridesofa::component::collision::geometry::TriangleModelInRegularGridvirtual; computeContinuousBoundingTree(SReal dt, int maxDepth=0) overridesofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >virtual; contactFrictionsofa::core::CollisionModelprotected; contactResponsesofa::core::CollisionModelprotected; contactRestitutionsofa::core::CollisionModelprotected; contactStiffnesssofa::core::CollisionModelprotected; Coord typedefsofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::log",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html:3069,clear,clearLoggedMessages,3069,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; virtual void preDrawScene (VisualParams *);  Called before rendering the scene. More...;  ; virtual void postDrawScene (VisualParams *);  Called after rendering the scene. More...;  ; virtual bool drawScene (VisualParams *);  Called instead of rendering the scene. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html:1888,clear,clearVisual,1888,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"ualModelinlinevirtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; backfaceWritingsofa::gl::component::shader::OglShader; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdDraw(VisualParams *)sofa::core::visual::VisualModelinlinevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; clampVertexColorsofa::gl::component::shader::OglShader; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; doInitVisual(const core::visual::VisualParams *) overridesofa::gl::component::shader::OglShadervirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; drawShadow(const VisualParams *vparams)sofa::core::visual::VisualModelinlinevirtual; drawTransparent(const VisualParams *)sofa::core::visual::VisualModelinlinevirtual; drawVisual(const Visua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html:2780,clear,clearVisual,2780,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader-members.html,3,['clear'],['clearVisual']
Usability,"uble *mat, const Vec3 &length);  ;  Cylinder (const Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal);  ;  Cylinder (const Vec3 &center, const double orient[4][4], SReal length=1.0_sreal);  ;  Cylinder (const double *mat, SReal length=1.0_sreal);  ;  ~Cylinder ();  ; void update (const Vec3 &center, const Quaternion &orient=Quaternion());  ; void update (const Vec3 &center, const double orient[4][4]);  ; void update (const double *mat);  ; void draw ();  . Static Public Member Functions; static void draw (const Vec3 &center, const Quaternion &orient, const Vec3 &length);  ; static void draw (const Vec3 &center, const double orient[4][4], const Vec3 &length);  ; static void draw (const double *mat, const Vec3 &length);  ; static void draw (const Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal);  ; static void draw (const Vec3 &center, const double orient[4][4], SReal length=1.0_sreal);  ; static void draw (const double *mat, SReal length=1.0_sreal);  ; static void clear ();  . Constructor details. ◆ Cylinder() [1/8]. sofa::gl::Cylinder::Cylinder ; (; SReal ; len = 1.0_sreal). ◆ Cylinder() [2/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; len). ◆ Cylinder() [3/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const Quaternion & ; orient, . const Vec3 & ; length . ). ◆ Cylinder() [4/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const double ; orient[4][4], . const Vec3 & ; length . ). ◆ Cylinder() [5/8]. sofa::gl::Cylinder::Cylinder ; (; const double * ; mat, . const Vec3 & ; length . ). ◆ Cylinder() [6/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const Quaternion & ; orient, . SReal ; length = 1.0_sreal . ). ◆ Cylinder() [7/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const double ; orient[4][4], . SReal ; length = 1.0_sreal . ). ◆ Cylinder() [8/8]. sofa::gl::Cylinder::Cylinder ; (; const double * ; mat, . SReal ; length = 1.0_sreal . ). ◆ ~Cylinder(). sofa::gl::Cylinde",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_cylinder.html:1617,clear,clear,1617,api/master/sofa/html/classsofa_1_1gl_1_1_cylinder.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_cylinder.html,1,['clear'],['clear']
Usability,"ublic Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::linearalgebra::FullVector< T > Class Template Reference . #include <FullVector.h>. Inheritance diagram for sofa::linearalgebra::FullVector< T >:. [legend]. Protected Attributes; T * data;  ; Index cursize;  ; Index allocsize;  . Public Member Functions;  FullVector ();  ;  FullVector (const FullVector &vect);  ;  FullVector (Index n);  ;  FullVector (T *ptr, Index n);  ;  FullVector (T *ptr, Index n, Index nmax);  ;  ~FullVector () override;  ; T * ptr ();  ; const T * ptr () const;  ; void setptr (T *p);  ; Index capacity () const;  ; Iterator begin ();  ; Iterator end ();  ; ConstIterator begin () const;  ; ConstIterator end () const;  ; void fastResize (Index dim);  ; void resize (Index dim) override;  Resize the vector, and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void swap (FullVector< T > &v);  ; void clear (Index dim) override;  Reset the value of element i to 0. More...;  ; T & operator[] (Index i);  ; const T & operator[] (Index i) const;  ; SReal element (Index i) const override;  Read the value of element i. More...;  ; void set (Index i, SReal v) override;  Write the value of element i. More...;  ; void add (Index i, SReal v) override;  Add v to the existing value of element i. More...;  ; Index size () const override;  Number of elements. More...;  ; FullVector< T > sub (Index i, Index n);  ; template<class TV > ; void getsub (Index i, Index n, TV &v);  ; template<class TV > ; void setsub (Index i, Index n, const TV &v);  ; void operator= (const FullVector< T > &a);  v = a More...;  ; void operator= (const T &a);  ; void operator+= (const FullVector< Real > &a);  v += a More...;  ; void operator-= (const FullVector< Real > &a);  v -= a More...;  ; void eq (const FullVector< Real > &a, Real f);  v = a*f More...;  ; void eq (const FullVector< Real > &a, const FullVector< Real > &b, Real",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html:1166,clear,clear,1166,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_full_vector.html,1,['clear'],['clear']
Usability,"uildGeometricStiffnessMatrix(sofa::core::GeometricStiffnessMatrix *matrices) overridesofa::component::mapping::nonlinear::DistanceMapping< TIn, TOut >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; sofa::core::BaseMapping::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkLinearSolverSymmetry(const core::MechanicalParams *mparams) constsofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >protected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeAccFromMapping(const MechanicalParams *mparams, MultiVecDerivId outAcc, ConstMultiVecDerivId inVel, ConstMultiVecDerivId inAcc) overridesofa::core::Mapping< TIn, TOut >virtual; computeAccFromMapping(const MechanicalParams *, OutDataVecDeriv &, const InDataVecDeriv &, const InDataVecDeriv &)sofa::core::Mapping< TIn, TOut >inlinevirtual; computeBBox(const core::ExecParams *params, bool onlyVisible) overridesofa::component::mapping::nonlinear::DistanceMapping< TIn, TOut >virtual; computeCoordPositionDifference(Direction &r, const Coord_t< In > &a, const Coord_t< In > &b)sofa::component::mapping::nonlinear::DistanceMapping< TIn, TOut >protected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg)sofa::core::Mapping< TIn, TOut >inlinestatic; createMapp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping-members.html:5021,clear,clearLoggedMessages,5021,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ulTranspose() [4/4]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::addMulTranspose ; (; linearalgebra::BaseVector * ; res, . const linearalgebra::BaseVector * ; v . ); const. inline . ◆ addTo(). template<typename T > . template<class Dest > . void sofa::linearalgebra::SparseMatrix< T >::addTo ; (; Dest * ; dest); const. inline . ◆ begin() [1/2]. template<typename T > . LineIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ). inline . ◆ begin() [2/2]. template<typename T > . LineConstIterator sofa::linearalgebra::SparseMatrix< T >::begin ; (; ); const. inline . ◆ clear() [1/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<typename T > . void sofa::linearalgebra::SparseMatrix< T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<typename T > . Index sofa::linearalgebra::SparseMatrix< T >::colSize ; (; void ; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<typename T > . SReal sofa::linearalgebra::SparseMatrix< T >::element ; (; Index ; i, . Index ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:21815,clear,clearCol,21815,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,1,['clear'],['clearCol']
Usability,"umeric_limits<Index>::lowest() : std::numeric_limits<Index>::max();  ;  Static Public Attributes inherited from sofa::linearalgebra::CRSDefaultPolicy; static constexpr bool IsAlwaysSquare = false;  Set to true if this matrix is always square (must be true for symmetric) More...;  ; static constexpr bool IsAlwaysSymmetric = false;  Set to true if this matrix is always symmetric (IsAlwaysSquare should be true) More...;  ; static constexpr bool AutoSize = false;  Set to true if the size of the matrix should be automatically increased when new blocks are added. More...;  ; static constexpr bool AutoCompress = true;  Set to true if the matrix should be automatically compressed (easier to use, but might cause issues in multithreading) More...;  ; static constexpr bool CompressZeros = true;  Set to true if the blocks that are all zeros should be removed from the matrix when compressing (expensive) More...;  ; static constexpr bool ClearByZeros = true;  Set to true if clear methods will put all concerned value to zero instead of clearing vectors (CompressZeros should be true) More...;  ; static constexpr bool OrderedInsertion = false;  Set to true if insertion in matrix are in most case at last line index or last col index. More...;  ; static constexpr bool StoreLowerTriangularBlock = true;  Set to false to disable storage of blocks on the lower triangular part (IsAlwaysSymmetric must be true) More...;  ; static constexpr int matrixType = 0;  Do not change this value, has to be overrided for all derivated class. More...;  . Public Member Functions;  CompressedRowSparseMatrixGeneric ();  ;  CompressedRowSparseMatrixGeneric (Index nbBlockRow, Index nbBlockCol);  ; virtual ~CompressedRowSparseMatrixGeneric ()=default;  ; Index rowBSize () const;  ; Index colBSize () const;  ; const VecIndex & getRowIndex () const;  ; const VecIndex & getRowBegin () const;  ; Range getRowRange (Index id) const;  Returns the range of indices from the column indices corresponding to the id-th row.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html:2940,clear,clear,2940,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_generic.html,2,['clear'],"['clear', 'clearing']"
Usability,untime; ; SOFA - Topic: [SOLVED] How to change the texture of OglModel at runtime?. /how-to-close-the-runsofa-window-reinitialize-it-in-python; ; SOFA - Topic: [SOLVED] How to close the runSofa window/reinitialize it in python?. /how-to-completely-prevent-penetration-when-collision-occurs; ; SOFA - Topic: How to completely prevent penetration when collision occurs?. /how-to-connect-two-rigid-parts-while-one-would-separate-from-the-other-halfway; ; SOFA - Topic: How to connect two rigid parts while one would separate from the other halfway?. /how-to-constraint-objects-inside-a-closed-mesh-without-using-collision-models; ; SOFA - Topic: How to constraint objects inside a closed mesh without using collision models?. /how-to-construct-a-grasper-scenewith-force-feedback; . /page; . /15; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /4; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /how-to-control-cable-length-in-cable-driven-manipulator; ; SOFA - Topic: How to control cable length in cable-driven manipulator. /how-to-convert-arbitrary-triangular-surface-mesh-to-tetrahedron-mesh; ; SOFA - Topic: [SOLVED] How to convert arbitrary triangular surface mesh to tetrahedron mesh?. /how-to-convert-obj-to-msh-format-file; . /feed; ; [SOLVED] How to convert obj to msh format file? – SOFA. SOFA - Topic: [SOLVED] How to convert obj to msh format file?. /how-to-create-a-coaxial-contraints-between-part-a-and-b; . /feed; ; [SOLVED] How to create a coaxial contraints between part A and B – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /5; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /how-to-create-an-advanced-simulation-in-c; ; SOFA - Topic: [SOLVED] How to create an a,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:318332,feedback,feedback,318332,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['feedback'],['feedback']
Usability,"ust be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectPosition() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectResponse(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::projectResponse ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; dx . ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectResponseT(). template<class DataTypes > . template<class DataDeriv > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::projectResponseT ; (; DataDeriv & ; dx, . const std::function< void(DataDeriv &, const unsigned int, const VecBool &)> & ; clear . ). protected . ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ removeIndex(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::removeIndex ; (; Index ; index). ◆ reset(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::reset. overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:38035,clear,clear,38035,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['clear'],['clear']
Usability,"uts)sofa::core::objectmodel::Base; AverageCoord()sofa::component::engine::analyze::AverageCoord< DataTypes >protected; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; sofa::computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; sofa::core::behavior::SingleStateAccessor::computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::engine::analyze::AverageCoord< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_averagesofa::component::engine::analyze::AverageCoord< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::engine::analyze::AverageCoord< DataTypes >; d_messageLogCountsofa::core::objectmodel::Basemutable; d_vecIdsofa::component::engine::analyze::AverageCoord< DataTypes >; DataEngine()sofa::core::DataEngineprotected;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html:2780,clear,clearLoggedMessages,2780,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord-members.html,1,['clear'],['clearLoggedMessages']
Usability,"uts, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< DataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox() constsofa::core::State< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< DataTypes >virtual; Coord typedefsofa::component::statecontainer::MappedObject< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; d_Vsofa::component::statecontainer::MappedObject< DataTypes >; d_Xsofa::component::statecontainer::MappedObject< DataTypes >; datasofa::component::statecontainer::MappedObject< DataTypes >protected; DataTypes typedefsofa::core::State< DataTypes >; Deriv typedefsofa::component::statecontainer::MappedObject< DataTypes >; doUpdateInternal()sofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html:2266,clear,clearLoggedMessages,2266,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object-members.html,1,['clear'],['clearLoggedMessages']
Usability,"uts, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; baseRead(ConstVecId v) const overridesofa::core::State< DataTypes >virtual; BaseState()sofa::core::BaseStateinlineprotected; BaseType typedefsofa::core::objectmodel::Base; baseWrite(VecId v) overridesofa::core::State< DataTypes >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox() constsofa::core::State< DataTypes >; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::State< DataTypes >virtual; Coord typedefsofa::core::State< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DataTypes typedefsofa::core::State< DataTypes >; Deriv typedefsofa::core::State< DataTypes >; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagsso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html:2238,clear,clearLoggedMessages,2238,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state-members.html,1,['clear'],['clearLoggedMessages']
Usability,"uts, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; applyTransformation(sofa::type::Matrix4 const &T)sofa::core::loader::MeshLoadervirtual; Base()sofa::core::objectmodel::Baseprotected; BaseLoader()sofa::core::loader::BaseLoaderprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; canLoad() overridesofa::core::loader::MeshLoadervirtual; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::io::mesh::OffSequenceLoader; clearBuffers() finalsofa::core::loader::MeshLoaderprotectedvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; copyMeshToData(helper::io::Mesh &_mesh)sofa::core::loader::MeshLoaderprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_createSubelementssofa::core::loader::MeshLoader; d_edgessofa::core::loader::MeshLoader; d_edgesGroupssofa::core::loader::MeshLoader; d_filenamesofa::core::loader::BaseLoader; d_flipNormalssofa::core::loader::MeshLoader; d_hexahedrasofa::core::loader::MeshLoader; d_hexahedraGroupssofa::core::loader::MeshLoader; d_highOrderEdgePositionssofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html:4742,clear,clear,4742,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader-members.html,1,['clear'],['clear']
Usability,"ve::DirectionProjectiveConstraint< DataTypes >; BaseType typedefsofa::core::objectmodel::Base; Block typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; bsize enum valuesofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< DataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearConstraints()sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_directionsofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; d_drawSizesofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >; d_indicessofa::component::constraint::p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html:3343,clear,clearConstraints,3343,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint-members.html,1,['clear'],['clearConstraints']
Usability,"vectors used for constraint equation computation ; cParamsdefines the state vectors to use for positions and velocities. Also defines the order of the constraint (POS, VEL, ACC). This is the method that should be implemented by the component ; Implements sofa::core::behavior::PairInteractionConstraint< TDataTypes >. ◆ bwdInit() [1/2]. SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_MODEL_API void sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< Rigid3Types >::bwdInit ; (; ). virtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ bwdInit() [2/2]. template<class DataTypes > . void sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >::bwdInit ; (; ). inlineoverridevirtual . Initialization method called at graph creation and modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ clear(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >::clear ; (; int ; reserve = 0). ◆ draw(). template<class DataTypes > . void sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getBilateralInteractionIdentifiers(). template<class DataTypes > . virtual type::vector<std::string> sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< DataTypes >::getBilateralInteractionIdentifiers ; (; ). inlinevirtual . ◆ getConstraintResolution() [1/2]. SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_MODEL_API void sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint< Rigid3Types >::getConstraintResolution ; (; const ConstraintParams * ; cParams, . std::vector<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:34101,clear,clear,34101,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,1,['clear'],['clear']
Usability,"vementProjectiveConstraint< TDataTypes >virtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; clearKeyMovements()sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_indicessofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; d_keyMovementssofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >; d_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html:3197,clear,clearIndices,3197,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint-members.html,1,['clear'],['clearIndices']
Usability,"vementProjectiveConstraint< TDataTypes >virtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseProjectiveConstraintSet()sofa::core::behavior::BaseProjectiveConstraintSetinlineprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >inlinestatic; sofa::core::behavior::BaseProjectiveConstraintSet::canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearIndices()sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; clearKeyMovements()sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible=false) overridesofa::core::behavior::StateAccessorinlinevirtual; Coord typedefsofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_imposedDisplacmentOnMacroNodessofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >; d_indicessofa::component::constraint::projective::Partia",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html:3246,clear,clearIndices,3246,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint-members.html,1,['clear'],['clearIndices']
Usability,"verride;  ; Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getChangeList () const;  ; const std::list< const TopologyChange * > & getStateChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataStateChangeList () ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:17971,simpl,simply,17971,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,6,['simpl'],['simply']
Usability,"verride;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html:3843,clear,clearVisual,3843,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,26,['clear'],"['clear', 'clearVisual']"
Usability,"virtual; applyTranslation(const SReal, const SReal, const SReal)sofa::core::visual::VisualModelinlinevirtual; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginEdit()sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; bwdDraw(core::visual::VisualParams *) overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >virtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; clearVisual()sofa::core::visual::VisualModelinlinevirtual; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_enablesofa::core::visual::VisualModel; d_messageLogCountsofa::core::objectmodel::Basemutable; DataType typedefsofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; disable()sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; doInitVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >virtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; doUpdateVisual(const core::visual::VisualParams *vparams) overridesofa::gl::component::shader",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html:3194,clear,clearVisual,3194,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute-members.html,1,['clear'],['clearVisual']
Usability,"virtual; blocAdd(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; blocCreate(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocElements(Index i, Index j, T *buffer) constsofa::linearalgebra::BaseMatrixinline; blocGet(Index i, Index j) constsofa::linearalgebra::BaseMatrixinlinevirtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear()=0sofa::linearalgebra::BaseMatrixpure virtual; clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const =0sofa::linearalgebra::BaseMatrixpure virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html:4771,clear,clear,4771,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_matrix-members.html,1,['clear'],['clear']
Usability,"virtual; blocGetW(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::SparseMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::SparseMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstItera",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html:6700,clear,clearRow,6700,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix-members.html,1,['clear'],['clearRow']
Usability,"virtual; blocSet(Index i, Index j, const T *buffer)sofa::linearalgebra::BaseMatrixinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::linearalgebra::RotationMatrix< TReal >virtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::RotationMatrix< TReal >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html:6077,clear,clearRows,6077,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,1,['clear'],['clearRows']
Usability,"void sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >::buildGeometricStiffnessMatrix ; (; sofa::core::GeometricStiffnessMatrix * ; matrices). overridevirtual . Assembles the geometric stiffness matrix of the mapping in the provided matrix object. ; The geometric stiffness is defined as dJ^T/dx * outForce, where outForce is the forces applying on the output of the mapping, J is the jacobian matrix of the mapping and x is the position of the input of the mapping.; Inside the method, outForce is retrieved, while dJ^T/dx and its product with outForce must be computed.; Note that dJ^T/dx is null for linear mappings, meaning that the method can remain empty.; The geometric stiffness is a term that must be added into the global mechanical matrix.; Parameters. matricesThe matrix to fill in with the geometric stiffness of the mapping . Reimplemented from sofa::core::BaseMapping. ◆ clear(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >::clear. Remove all targets. . ◆ computeCoordPositionDifference(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >::computeCoordPositionDifference ; (; Direction & ; r, . const InCoord & ; a, . const InCoord & ; b . ). protected . r=b-a only for position (eventual rotation, affine transform... remains null) . ◆ createTarget(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >::createTarget ; (; unsigned ; index, . const InCoord & ; position, . Real ; distance . ). Add a target with a desired distance. . ◆ doUpdateK(). template<class TIn , class TOut > . void sofa::component::mapping::nonlinear::DistanceFromTargetMapping< TIn, TOut >::doUpdateK ; (; const core::MechanicalParams * ; mparams, . const Data< VecDeriv_t< Out > > & ; childForce, . SparseKMatrixEigen & ; matrix . ). overrideprotectedvirtual . Implements sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html:28182,clear,clear,28182,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,1,['clear'],['clear']
Usability,"void applyRotation (const sofa::type::Quat< SReal > q) override;  ; void applyScale (const SReal sx, const SReal sy, const SReal sz) override;  ; virtual void applyUVTransformation ();  ; void applyUVTranslation (const Real dU, const Real dV);  ; void applyUVScale (const Real su, const Real sv);  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:13575,clear,clearVisual,13575,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,4,['clear'],"['clear', 'clearVisual']"
Usability,"void applyRotation (const sofa::type::Quat< SReal > q) override;  ; void applyScale (const SReal sx, const SReal sy, const SReal sz) override;  ; virtual void applyUVTransformation ();  ; void applyUVTranslation (const Real dU, const Real dV);  ; void applyUVScale (const Real su, const Real sv);  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeLi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html:16586,clear,clearVisual,16586,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"wBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockFullMatrix< N, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clear() overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCol(Index j) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockFullMatrix< N, T >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html:6021,clear,clearRows,6021,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix-members.html,1,['clear'],['clearRows']
Usability,"wBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize() const overridesofa::core::behavior::AddToMatrixCompatMatrix< c >inlinevirtual; compatibilityMessagesofa::core::behavior::AddToMatrixCompatMatrix< c >static; componentsofa::core::behavior::AddToMatrixCompatMatrix< c >; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html:5515,clear,clearRowsCols,5515,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix-members.html,1,['clear'],['clearRowsCols']
Usability,"wEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::DiagonalMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear(Index i)sofa::linearalgebra::DiagonalMatrix< T >inline; clearCol(Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::li",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html:6401,clear,clearRows,6401,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,1,['clear'],['clearRows']
Usability,"wId, Index &colId, bool create=false);  Write block method when rowId and colId are known, this is an optimized wblock specification. More...;  ; Block * wbloc (Index i, Index j, bool create=false);  ; const Block & getBlock (Index i, Index j) const;  ; const BlockTranspose getSymBlock (Index i, Index j) const;  ; void setBlock (Index i, Index j, const Block &v);  ; void setBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; void addBlock (Index i, Index j, const Block &v);  ; void addBlock (Index i, Index j, Index &rowId, Index &colId, const Block &v);  ; Block * getWBlock (Index i, Index j, bool create=false);  ; void clearRowBlock (Index i);  Clear row block method. Clear all col of this line. More...;  ; void clearColBlock (Index j);  Clear col block method. Clear this col in all row of matrix. More...;  ; std::size_t countEmptyBlocks () const;  ; void clearRowColBlock (Index i);  Clear both row i and column i in a square matrix. More...;  ; void clear ();  Completely clear the matrix. More...;  ; bool check_matrix ();  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &is);  ; void add (unsigned int bi, unsigned int bj, const Block &b);  ; void add (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Block &b);  ; void addDBlock (unsigned int bi, unsigned int bj, const DBlock &b);  ; void addDValue (unsigned int bi, unsigned int bj, const Real b);  ; void addDValue (unsigned int bi, unsigned int bj, int &rowId, int &colId, const Real b);  ; void addDiag (unsigned int bi, const Block &b);  ; void addDiag (unsigned int bi, int &rowId, int &colId, const Block &b);  ; void addDiagDBlock (unsigned int bi, const DBlock &b);  ; void addDiagDValue (unsigned int bi, const Real b);  ; void addDiagDValue (unsigned int bi, int &rowId, int &colId, const Real b);  ; void addSym (unsigned int bi, unsigned int bj, const Block &b);  ; void addSym (unsigned int bi, unsigned int bj, int &rowId, int &colId, int &r",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html:6469,clear,clear,6469,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,4,['clear'],['clear']
Usability,wing indices and vertices of elements in run window – SOFA. /page; . /5; ; SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. /segfault-at-runsofa-start-in-the-logger; . /feed; ; [SOLVED] Segfault at runSofa start in the logger – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /3; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /segfault-with-meshmatrixmass; ; SOFA - Topic: Segfault with MeshMatrixMass. /segmentation-fault-core-dumped-when-opening-simulation; ; SOFA - Topic: Segmentation fault (core dumped) when opening simulation. /segmentation-fault-when-addings-shadows; ; SOFA - Topic: Segmentation Fault when addings Shadows. /segmentation-fault-with-clang-and-libc; ; SOFA - Topic: Segmentation fault with clang and libc++. /self-learning-this-framework; ; SOFA - Topic: Self learning this framework. /send-component-data-via-zmq-socket; ; SOFA - Topic: Send component data via zmq socket. /sending-speech-input-to-sofa; ; SOFA - Topic: [SOLVED] Sending Speech Input to Sofa. /sensable-compilation-error; ; SOFA - Topic: Sensable Compilation Error. /sensable-drivers-3dsystems-still-functioning; . /feed; ; [SOLVED] Sensable drivers – 3DSystems still functioning? – SOFA. SOFA - Topic: [SOLVED] Sensable drivers – 3DSystems still functioning?. /sensable-plugin; . /feed; ; [SOLVED] Sensable Plugin – SOFA. SOFA - Topic: [SOLVED] Sensable Plugin. /sensable-plugin-cannot-be-added-into-plugin-manager; ; SOFA - Topic: [SOLVED] Sensable plugin cannot be added into plugin manager. /sensable-plugins-example-problems; . /feed; ; [SOLVED] Sensable Plugin Example Problems – SOFA. SOFA - Topic: [SOLVED] Sensable Plugin Example Problems. /sensible-pluginrunning-examples-in-sensible-folder; . /feed; ; [SOLVED] Running examples in sensible folder (Sensible Plugin) – S,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:383212,learn,learning-this-framework,383212,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['learn'],"['learning', 'learning-this-framework']"
Usability,"work for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< int, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, int, int);  ; static const Real & v (const Block &b, int, int);  ; static void vset (Block &b, int, int, Real val);  ; static void vadd (Block &b, int, int, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static void split_row_index (int &index, int &modulo);  ; static void split_col_index (int &index, int &modulo);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ Name(). template<typename IndexType > . static const std::string sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::Name ; (; ). inlinestatic . ◆ split_col_index(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::split_col_index ; (; int & ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01int_00_01_index_type_01_4.html:1135,clear,clear,1135,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01int_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01int_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability,"wsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; BSIZE enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; category enum valuesofa::linearalgebra::BlockDiagonalMatrix< LC, T >; clear(Index i, Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clear() overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCol(Index j) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; colBSize(void) constsofa::linearalgebra::BlockDiagonalMatrix< LC, T >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::BlockDiagonalMatrix< LC, T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html:6895,clear,clearRowsCols,6895,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix-members.html,1,['clear'],['clearRowsCols']
Usability,"x (Real *p, Index, Index);  ;  ~DiagonalMatrix () override;  ; Real * ptr ();  ; const Real * ptr () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; void resize (Index nbRow, Index) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void resize (Index nbRow);  ; Index size () const;  ; void swap (DiagonalMatrix< T > &v);  ; SReal element (Index i) const;  ; void set (Index i, double v);  ; void add (Index i, double v);  ; void clear (Index i);  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; void invert ();  ; template<class Real2 > ; void mult (FullVector< Real2 > &z, const FullVector< Real2 > &v) const;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class Real2 > ; void operator= (const DiagonalMatrix< Real2 > &m);  ; template<class Real2 > ; void operator+= (const DiagonalMatrix< Real2 > &m);  ; template<class Real2 > ; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:1761,clear,clearCol,1761,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,1,['clear'],['clearCol']
Usability,"x n, int *src) const;  Get the values of n elements, starting at element i0, into given int buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual void set (Index i0, Index n, const float *src);  Write the values of n float elements, starting at element i0. More...;  ; virtual void set (Index i0, Index n, const double *src);  Write the values of n double elements, starting at element i0. More...;  ; virtual void set (Index i0, Index n, const int *src);  Write the values of n int elements, starting at element i0. More...;  ; virtual void add (Index i0, Index n, const float *src);  Add to the values of n float elements, starting at element i0. More...;  ; virtual void add (Index i0, Index n, const double *src);  Add to the values of n double elements, starting at element i0. More...;  ; virtual void add (Index i0, Index n, const int *src);  Add to the values of n int elements, starting at element i0. More...;  ; virtual void clear (Index i);  Reset the value of element i to 0. More...;  . Protected Member Functions; template<class T > ; const T * elementsDefaultImpl (Index i0, Index n, T *buffer) const;  ; template<class T > ; void setDefaultImpl (Index i0, Index n, const T *src);  ; template<class T > ; void addDefaultImpl (Index i0, Index n, const T *src);  . Friends; SOFA_LINEARALGEBRA_API std::ostream & operator<< (std::ostream &out, const BaseVector &v);  Declare that the operator << exists but is defined in BaseVector.cpp. More...;  . Get information about the content and structure of this vector; enum  ElementType { ELEMENT_UNKNOWN = 0; , ELEMENT_FLOAT; , ELEMENT_INT; };  ; virtual ElementType getElementType () const;  ; virtual std::size_t getElementSize () const;  ; virtual bool isFull () const;  Return true if this vector is full, i.a. all elements are stored in memory. More...;  ; bool isSparse () const;  . Constructor details. ◆ ~BaseVector(). virtual sofa::linearalgebra::BaseVector::~BaseVector ; (; ). inlinev",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html:2680,clear,clear,2680,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,1,['clear'],['clear']
Usability,"x pitch);  ;  ~FullMatrix () override;  ; Real * ptr ();  ; const Real * ptr () const;  ; LineIterator begin ();  ; LineIterator end ();  ; LineConstIterator begin () const;  ; LineConstIterator end () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; FullVector< Real > operator* (const FullVector< Real > &v) const;  ; void mul (FullVector< Real > &res, const FullVector< Real > &b) const;  ; void mulT (FullVector< Real > &res, const FullVector< Real > &b) const;  ; FullMatrix< Real > operator* (const FullMatrix< Real > &m) const;  ; void mul (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; void mulT (FullMatrix< Real > &res, const FullMatrix< Real > &m) const;  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; const char * Name ();  ; virtual void add (Index row, Index col, double v)=0;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; virtual void add (Index row, Index col, const type::Mat3x3d &_M);  Adding values from a 3x3d matrix. Th",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html:2384,clear,clearCol,2384,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_l_ptr_full_matrix.html,1,['clear'],['clearCol']
Usability,"x). ◆ applyConstraint() [1/2]. template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Matrix to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [2/2]. template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ). overridevirtual . Project c to constrained space (c models a constraint).; This metho",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html:24229,clear,clearConstraints,24229,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"x, TVector >::rhs { nullptr }. The right-hand side of the linear system. If the linear system is written as Ax=b, it is b. . ◆ solution. template<typename TMatrix , typename TVector > . StoredVectorType sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::solution { nullptr }. The solution of the linear system. If the linear system is written as Ax=b, it is x. . Function details. ◆ allocateSystem(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::allocateSystem. ◆ clearSystem() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::clearSystem ; (; ). ◆ clearSystem() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::clearSystem. ◆ createSystemMatrix(). template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemMatrix. Allocate the object for the global matrix. . ◆ createSystemRHSVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [2/3]. void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphScatteredVector >::createSystemRHSVector ; (; ). ◆ createSystemRHSVector() [3/3]. template<typename TMatrix , typename TVector > . void sofa::component::linearsystem::LinearSystemData< TMatrix, TVector >::createSystemRHSVector. Allocate the object for the RHS. . ◆ createSystemSolutionVector() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsystem::LinearSystemData< GraphScatteredMatrix, GraphS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html:3154,clear,clearSystem,3154,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_linear_system_data.html,1,['clear'],['clearSystem']
Usability,"x2, const DataVecDeriv &data_v1, const DataVecDeriv &data_v2) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &data_df1, DataVecDeriv &data_df2, const DataVecDeriv &data_dx1, const DataVecDeriv &data_dx2) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *, const DataVecCoord &, const DataVecCoord &) const override;  ; sofa::type::vector< Spring > * getSprings ();  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void clear (int reserve=0);  ; void addSpring (const Spring &s);  ; void addSpring (int m1, int m2, int p1, int p2, Real hardKst, Real softKsr, Real hardKsr, Real kd, Real ratio);  ; GearSpringForceField< DataTypes >::Real getAngleAroundAxis (Coord p1, Coord p2, unsigned int axis);  ; void getVectorAngle (Vector u, Vector v, Vector &w);  ; void getVectorAngle (Coord p1, Coord p2, unsigned int axis, Vector &w);  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionFor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html:5821,clear,clear,5821,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,1,['clear'],['clear']
Usability,"xAccessor *matrix)sofa::simulation::common::MechanicalOperations; bFactsofa::simulation::common::MechanicalOperations; computeAcc(SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; computeContactAcc(SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; computeContactDf(core::MultiVecDerivId df)sofa::simulation::common::MechanicalOperations; computeContactForce(core::MultiVecDerivId result)sofa::simulation::common::MechanicalOperations; computeDf(core::MultiVecDerivId df, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; computeDfV(core::MultiVecDerivId df, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; computeEnergy(SReal &kineticEnergy, SReal &potentialEnergy)sofa::simulation::common::MechanicalOperations; computeForce(core::MultiVecDerivId result, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; computeForce(SReal t, core::MultiVecDerivId f, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; cparamssofa::simulation::common::MechanicalOperations; ctxsofa::simulation::common::MechanicalOperations; executeVisitorsofa::simulation::common::MechanicalOperationsprotected; getMatrixDimension(sofa::Size *const, sofa::Size *const, sofa::core::behavior::MultiMatrixAccessor *matrix=nullptr)sofa::simulation::common::MechanicalOperations; getMatrixDimension(sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::simulation::common::MechanicalOperationsinline; hasShownMissingLinearSolverMapsofa::simulation::common::MechanicalOperationsprotectedstatic; integrateVelocity(core::MultiVecDerivId res, core::ConstMultiVecCoordId x, core::ConstMultiVecDerivId v, SReal dt)sofa::simulation::common::MechanicalOperations; kFactsofa::simulation::common::MechanicalOperations; Mechani",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html:2227,clear,clear,2227,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html,1,['clear'],['clear']
Usability,"xCapacity, OutputIterator out, unsigned outmaxsize, bool clear=true);  . Attribute details. ◆ head. volatile unsigned sofa::helper::system::thread::OneThreadPerEnd::head. protected . ◆ tail. volatile unsigned sofa::helper::system::thread::OneThreadPerEnd::tail. protected . Constructor details. ◆ OneThreadPerEnd(). SOFA_HELPER_API sofa::helper::system::thread::OneThreadPerEnd::OneThreadPerEnd ; (; ). inlineprotected . Function details. ◆ init(). template<class T > . void sofa::helper::system::thread::OneThreadPerEnd::init ; (; T ; array[], . unsigned ; maxCapacity . ). protected . ◆ isEmpty(). SOFA_HELPER_API bool sofa::helper::system::thread::OneThreadPerEnd::isEmpty ; (; unsigned ; maxSize); const. inlineprotected . ◆ isFull(). SOFA_HELPER_API bool sofa::helper::system::thread::OneThreadPerEnd::isFull ; (; unsigned ; maxSize); const. inlineprotected . ◆ pop() [1/2]. template<class T , class OutputIterator > . unsigned sofa::helper::system::thread::OneThreadPerEnd::pop ; (; T ; array[], . unsigned ; maxSize, . unsigned ; maxCapacity, . OutputIterator ; out, . unsigned ; outmaxsize, . bool ; clear = true . ). protected . ◆ pop() [2/2]. template<class T > . bool sofa::helper::system::thread::OneThreadPerEnd::pop ; (; T ; array[], . unsigned ; maxSize, . unsigned ; maxCapacity, . T & ; item, . bool ; clear = true . ). protected . ◆ push(). template<class T > . bool sofa::helper::system::thread::OneThreadPerEnd::push ; (; T ; array[], . unsigned ; maxSize, . unsigned ; maxCapacity, . const T & ; item . ). protected . ◆ size(). SOFA_HELPER_API unsigned sofa::helper::system::thread::OneThreadPerEnd::size ; (; unsigned ; maxSize); const. inlineprotected . ◆ skip(). template<class T > . unsigned sofa::helper::system::thread::OneThreadPerEnd::skip ; (; T ; array[], . unsigned ; maxSize, . unsigned ; maxCapacity, . unsigned ; outmaxsize, . bool ; clear = true . ). protected . sofahelpersystemthreadOneThreadPerEnd; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_one_thread_per_end.html:2351,clear,clear,2351,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_one_thread_per_end.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_one_thread_per_end.html,3,['clear'],['clear']
Usability,"xinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; category enum valuesofa::linearalgebra::DiagonalMatrix< T >; clear(Index i, Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear() overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clear(Index i)sofa::linearalgebra::DiagonalMatrix< T >inline; clearCol(Index j) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::DiagonalMatrix< T >inlinevirtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinline",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html:6317,clear,clearRowCol,6317,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix-members.html,1,['clear'],['clearRowCol']
Usability,"xinline; bRowBegin(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowEnd(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowRange(Index ib) constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; clear() overridesofa::linearalgebra::RotationMatrix< TReal >virtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRow(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowCol(Index i)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRows(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; clearRowsCols(Index imin, Index imax)sofa::linearalgebra::BaseMatrixinlinevirtual; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::RotationMatrix< TReal >virtual; compress()sofa::linearalgebra::BaseMatrixvirtual; createBlockAccessor(Index row, Index col, void *internalPtr=nullptr)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockAccessor(Index row, Index col, Index internalData)sofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, void *internalPtr=nullptr) constsofa::linearalgebra::BaseMatrixinlineprotected; createBlockConstAccessor(Index row, Index col, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, void *internalPtr) constsofa::linearalgebra::BaseMatrixinlineprotected; createColBlockConstIterator(Index row, Index internalData) constsofa::linearalgebra::BaseMatrixinlineprotected; createRowBlockConstIterator(void *internalP",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html:6156,clear,clearRowsCols,6156,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix-members.html,1,['clear'],['clearRowsCols']
Usability,"xinlinevirtual; bRowsBegin() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsEnd() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowSize() constsofa::linearalgebra::BaseMatrixinlinevirtual; bRowsRange() constsofa::linearalgebra::BaseMatrixinlinevirtual; choleskysofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >protected; choleskyDecompose()sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; choleskySolve(VectorEigen &x, const VectorEigen &b) constsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; clear() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; sofa::linearalgebra::BaseMatrix::clear(Index i, Index j)sofa::linearalgebra::BaseMatrixinlinevirtual; clearCol(Index col) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRow(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowCol(Index i) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRows(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; clearRowsCols(Index imin, Index imax) overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; coeffRef(Index i, Index j)sofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inline; cols(void) constsofa::linearalgebra::BaseMatrixinline; colSize(void) const overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compress() overridesofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >inlinevirtual; compressedMatrixsofa::linearalgebra::EigenBaseSparseMatrix< OutDataTypes::Real >; CompressedMatrix typedefsofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >; copy(const Ei",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html:7525,clear,clearRow,7525,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_eigen_sparse_matrix-members.html,1,['clear'],['clearRow']
Usability,"xt *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkNodeSequence(const TetraID tetraId) constsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; checkNodeSequence(const Tetrahedron &tetra) constsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; checkTetrahedronDihedralAngles(const TetraID tetraId, SReal minAngle=20, SReal maxAngle=160) constsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; checkTetrahedronValidity(const TetraID tetraId, SReal minAngle=20, SReal maxAnglemaxAngle=160, SReal factorLength=10) constsofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; compute2EdgesIntersection(const Coord edge1[2], const Coord edge2[2], bool &intersected)sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute2PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2) const =deletesofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; compute3PointsBarycoefs(const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, PointID ind_p3, bool bRest=false) constsofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; computeAngle(PointID ind_p0, PointID ind_p1, PointID ind_p2) constsofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; computeBadTetrahedron(SReal minAngle=20, SReal maxAngle=160, SReal factorLength=10)sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >; computeBaryEdgePoint(PointID p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html:3667,clear,clearLoggedMessages,3667,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms-members.html,1,['clear'],['clearLoggedMessages']
Usability,"y &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value)sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >inlineprotectedvirtual; sofa::component::linearsystem::AssemblingMatrixAccumulator::add(const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >protectedvirtual; sofa::component::linearsystem::AssemblingMatrixAccumulator::add(const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >protectedvirtual; AssemblingMappedMatrixAccumulator()sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >protected; sofa::clear() overridesofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >; sofa::component::linearsystem::AssemblingMappedMatrixAccumulator::clear() overridesofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >; Col typedefsofa::component::linearsystem::SparsityPatternLocalMatrix< c, TStrategy >; ComponentType typedefsofa::component::linearsystem::SparsityPatternLocalMappedMatrix< c, TBlockType >; sofa::contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >static; sofa::component::linearsystem::AssemblingMappedMatrixAccumulator::contributionsofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >static; sofa::GetCustomTemplateName()sofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >inlinestatic; sofa::component::linearsystem::AssemblingMappedMatrixAccu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix-members.html:6681,clear,clear,6681,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix-members.html,1,['clear'],['clear']
Usability,"y be overload to obtain better performances. ; Adding values from a 3x3f matrix this function may be overload to obtain better performances. . ◆ add() [5/8]. template<class TReal > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6d matrix. This function may be overload to obtain better performances. . ◆ add() [6/8]. template<class TReal > . void sofa::linearalgebra::BaseMatrix::add. Adding values from a 6x6f matrix. This function may be overload to obtain better performances. . ◆ add() [7/8]. template<class TReal > . virtual void sofa::linearalgebra::BaseMatrix::add. Add v to the existing value of the element at row i, column j (using 0-based indices) . ◆ add() [8/8]. template<class Real > . void sofa::linearalgebra::RotationMatrix< Real >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . double ; v . ). overridevirtual . Add v to the existing value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear(). template<class Real > . void sofa::linearalgebra::RotationMatrix< Real >::clear. overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<class Real > . sofa::SignedIndex sofa::linearalgebra::RotationMatrix< Real >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<class Real > . SReal sofa::linearalgebra::RotationMatrix< Real >::element ; (; Index ; i, . sofa::SignedIndex ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalgebra::BaseMatrix. ◆ getVector(). template<class Real > . type::vector< Real > & sofa::linearalgebra::RotationMatrix< Real >::getVector. virtual . ◆ Name() [1/5]. const char * sofa::linearalgebra::RotationMatrix< float >::Name ; (; ). ◆ Name() [2/5]. const char * sofa::linearalgebra::RotationMatrix< double >::Name ; (; ). ◆ Name() [3/5]. templat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html:17632,clear,clear,17632,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_rotation_matrix.html,1,['clear'],['clear']
Usability,"y(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::checkMassDensity. virtual . ◆ checkTopology(). template<class DataTypes , class GeometricalTypes > . sofa::geometry::ElementType sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::checkTopology. protected . ◆ checkTotalMass(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::checkTotalMass. virtual . ◆ checkTotalMassInit(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::checkTotalMassInit. virtual . ◆ checkVertexMass(). template<class DataTypes , class GeometricalTypes > . bool sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::checkVertexMass. virtual . ◆ clear(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::clear. virtual . ◆ computeMass(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::computeMass. Compute the mass from input values. . ◆ copyVertexMass(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::copyVertexMass. Copy the vertex mass scalar (in case of CudaTypes) . ◆ doUpdateInternal(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::doUpdateInternal. overridevirtual . Implementation of the internal update. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ draw(). template<class DataTypes , class GeometricalTypes > . void sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:43663,clear,clear,43663,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['clear'],['clear']
Usability,"y::container::dynamic::PointSetTopologyContainer::linkTopologyHandlerToData ; (; core::topology::TopologyHandler * ; topologyHandler, . sofa::geometry::ElementType ; elementType . ). overridevirtual . \ brief Generic function to link potential data (related to a type of element) with a topologyHandler ; Reimplemented from sofa::core::topology::TopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyContainer, sofa::component::topology::container::dynamic::TetrahedronSetTopologyContainer, and sofa::component::topology::container::dynamic::QuadSetTopologyContainer. ◆ removePoint(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::removePoint ; (; ). remove one DOF in this topology (simply decrement the number of DOF) . ◆ removePoints(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::removePoints ; (; const Size ; nPoints). remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) ; Parameters. Thenumber of point to remove. . ◆ setNbPoints(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::setNbPoints ; (; Size ; n). overridevirtual . Set the number of vertices in this topology. ; Reimplemented from sofa::core::topology::Topology. ◆ setPointTopologyToDirty(). void sofa::component::topology::container::dynamic::PointSetTopologyContainer::setPointTopologyToDirty ; (; ). protected . Use a specific boolean See alsom_pointTopologyDirty in order to know if topology Data is dirty or not. Set/Get function access to this boolean . ◆ SOFA_CLASS(). sofa::component::topology::container::dynamic::PointSetTopologyContainer::SOFA_CLASS ; (; PointSetTopologyContainer ; , . core::topology::TopologyContainer ;  . ). ◆ unlinkTopologyHandlerToData(). bool sofa::component::topology::container::dynamic::PointSetTopologyContainer::unlinkTopologyHandlerToData ; (; core::topology::TopologyHandler * ; topologyHa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:36716,simpl,simply,36716,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['simpl'],['simply']
Usability,"yConstraint() [1/2]. template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Matrix to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [2/2]. template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ). overridevirtual . Project c to constrained space (c models a constraint",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html:24275,clear,clearConstraints,24275,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,yContainer. ◆ checkTopology(). bool sofa::component::topology::container::dynamic::QuadSetTopologyContainer::checkTopology ; (; ); const. overridevirtual . Checks if the topology is coherent. ; Check if the shell arrays are coherent See alsom_quad . m_edgesInQuad . m_quadsAroundVertex . m_quadsAroundEdge ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ cleanQuadTopologyFromDirty(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::cleanQuadTopologyFromDirty ; (; ). protected . ◆ clear(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clear ; (; ). overridevirtual . Procedural creation methods ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ clearEdgesInQuad(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearEdgesInQuad ; (; ). protected . ◆ clearQuads(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuads ; (; ). protected . ◆ clearQuadsAroundEdge(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundEdge ; (; ). protected . ◆ clearQuadsAroundVertex(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::clearQuadsAroundVertex ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInQuadArray(). void sofa::component::topology::container::dynamic::QuadSetTopologyContainer::createEdgesInQuadArray ; (; ). protectedvirtual . Creates the array of edge indices for each quad. ; This function is only called if the EdgesInQuad array is required. m_edgesInQuad[i] contains the 4 indices of the 4 edges ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:40459,clear,clearQuads,40459,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['clear'],['clearQuads']
Usability,"ycentricMapperTetrahedronSetTopologyRigid< In, Out >::apply ; (; typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ applyJ(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::applyJ ; (; typename Out::VecDeriv & ; out, . const typename In::VecDeriv & ; in . ). override . ◆ applyJT() [1/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::applyJT ; (; typename In::MatrixDeriv & ; out, . const typename Out::MatrixDeriv & ; in . ). override . ◆ applyJT() [2/2]. template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::applyJT ; (; typename In::VecDeriv & ; out, . const typename Out::VecDeriv & ; in . ). override . ◆ clear(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::clear ; (; std::size_t ; reserve = 0). override . ◆ draw(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::draw ; (; const core::visual::VisualParams * ; vparams, . const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ getJ(). template<class In , class Out > . const sofa::linearalgebra::BaseMatrix * sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::getJ ; (; int ; outSize, . int ; inSize . ). override . ◆ init(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::init ; (; const typename Out::VecCoord & ; out, . const typename In::VecCoord & ; in . ). override . ◆ resize(). template<class In , class Out > . void sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< In, Out >::resize ; (; core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html:7115,clear,clear,7115,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_rigid.html,1,['clear'],['clear']
Usability,"ylinder() [1/8]. sofa::gl::Cylinder::Cylinder ; (; SReal ; len = 1.0_sreal). ◆ Cylinder() [2/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; len). ◆ Cylinder() [3/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const Quaternion & ; orient, . const Vec3 & ; length . ). ◆ Cylinder() [4/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const double ; orient[4][4], . const Vec3 & ; length . ). ◆ Cylinder() [5/8]. sofa::gl::Cylinder::Cylinder ; (; const double * ; mat, . const Vec3 & ; length . ). ◆ Cylinder() [6/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const Quaternion & ; orient, . SReal ; length = 1.0_sreal . ). ◆ Cylinder() [7/8]. sofa::gl::Cylinder::Cylinder ; (; const Vec3 & ; center, . const double ; orient[4][4], . SReal ; length = 1.0_sreal . ). ◆ Cylinder() [8/8]. sofa::gl::Cylinder::Cylinder ; (; const double * ; mat, . SReal ; length = 1.0_sreal . ). ◆ ~Cylinder(). sofa::gl::Cylinder::~Cylinder ; (; ). Function details. ◆ clear(). static void sofa::gl::Cylinder::clear ; (; ). inlinestatic . ◆ draw() [1/7]. void sofa::gl::Cylinder::draw ; (; ). ◆ draw() [2/7]. void sofa::gl::Cylinder::draw ; (; const double * ; mat, . const Vec3 & ; length . ). static . ◆ draw() [3/7]. void sofa::gl::Cylinder::draw ; (; const double * ; mat, . SReal ; length = 1.0_sreal . ). static . ◆ draw() [4/7]. void sofa::gl::Cylinder::draw ; (; const Vec3 & ; center, . const double ; orient[4][4], . const Vec3 & ; length . ). static . ◆ draw() [5/7]. void sofa::gl::Cylinder::draw ; (; const Vec3 & ; center, . const double ; orient[4][4], . SReal ; length = 1.0_sreal . ). static . ◆ draw() [6/7]. void sofa::gl::Cylinder::draw ; (; const Vec3 & ; center, . const Quaternion & ; orient, . const Vec3 & ; length . ). static . ◆ draw() [7/7]. void sofa::gl::Cylinder::draw ; (; const Vec3 & ; center, . const Quaternion & ; orient, . SReal ; length = 1.0_sreal . ). static . ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). sofa::gl::Cylinder::SOFA_ATTR",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_cylinder.html:2652,clear,clear,2652,api/master/sofa/html/classsofa_1_1gl_1_1_cylinder.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_cylinder.html,1,['clear'],['clear']
Usability,ynamic::EdgeSetTopologyContainer.; Reimplemented in sofa::component::topology::container::dynamic::MultilevelHexahedronSetTopologyContainer. ◆ clearEdgesInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearEdgesInHexahedron ; (; ). protected . ◆ clearHexahedra(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedra ; (; ). protected . ◆ clearHexahedraAroundEdge(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundEdge ; (; ). protected . ◆ clearHexahedraAroundQuad(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundQuad ; (; ). protected . ◆ clearHexahedraAroundVertex(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearHexahedraAroundVertex ; (; ). protected . ◆ clearQuadsInHexahedron(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::clearQuadsInHexahedron ; (; ). protected . ◆ createEdgeSetArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgeSetArray ; (; ). overrideprotectedvirtual . Creates the EdgeSet array. ; Create the set of edges when needed. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer. ◆ createEdgesInHexahedronArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createEdgesInHexahedronArray ; (; ). protectedvirtual . Creates the array of edge indices for each hexahedron. ; This function is only called if the EdgesInHexahedron array is required. m_edgesInHexahedron[i] contains the 12 indices of the 12 edges of each hexahedron. . ◆ createHexahedraAroundEdgeArray(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer::createHexahedraAroundEdgeArray ; (; ). protectedvirtual . Creates the HexahedraAroundEdge Array. ; ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:50027,clear,clearQuadsInHexahedron,50027,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['clear'],['clearQuadsInHexahedron']
Usability,"ype typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkInputData()sofa::component::engine::select::MeshROI< DataTypes >protected; checkSameOrder(const CPos &A, const CPos &B, const CPos &pt, const CPos &norm) constsofa::component::engine::select::MeshROI< DataTypes >protected; cleanDirty(const core::ExecParams *params=nullptr)sofa::core::DataTrackerDDGNodevirtual; sofa::core::objectmodel::DDGNode::cleanDirty()sofa::core::objectmodel::DDGNode; cleanDirtyOutputsOfInputs()sofa::core::objectmodel::DDGNodeprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *params, bool onlyVisible) finalsofa::component::engine::select::BaseROI< DataTypes >virtual; computeBoundingBox()sofa::component::engine::select::MeshROI< DataTypes >protected; Coord typedefsofa::component::engine::select::BaseROI< DataTypes >; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; CPos typedefsofa::component::engine::select::BaseROI< DataTypes >; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_boxsofa::component::engine::select::MeshROI< DataTypes >; d_componentStatesofa::core::objectmodel::Base; d_computeEdgessofa::component::engine::select::BaseROI< DataTypes >; d_computeHexahedrasofa::component::engine::select::BaseROI< DataTypes >; d_computeQuadssofa::component::engine::select::BaseROI< DataTypes >; d_computeTemplateTrianglessofa::comp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html:2985,clear,clearLoggedMessages,2985,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i-members.html,1,['clear'],['clearLoggedMessages']
Usability,"ype::RigidCoord< 3, real >::spatial_dimensions = 3. staticconstexpr . Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) . ◆ total_size. template<typename real > . constexpr sofa::Size sofa::defaulttype::RigidCoord< 3, real >::total_size = 7. staticconstexpr . Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) . Constructor details. ◆ RigidCoord() [1/3]. template<typename real > . constexpr sofa::defaulttype::RigidCoord< 3, real >::RigidCoord ; (; const Vec3 & ; posCenter, . const Quat & ; orient . ). inlineconstexpr . ◆ RigidCoord() [2/3]. template<typename real > . constexpr sofa::defaulttype::RigidCoord< 3, real >::RigidCoord ; (; ). inlineconstexpr . ◆ RigidCoord() [3/3]. template<typename real > . template<typename real2 > . constexpr sofa::defaulttype::RigidCoord< 3, real >::RigidCoord ; (; const RigidCoord< 3, real2 > & ; c). inlineconstexpr . Function details. ◆ clear(). template<typename real > . constexpr void sofa::defaulttype::RigidCoord< 3, real >::clear ; (; ). inlineconstexpr . ◆ fromHomogeneous(). template<typename real > . template<typename V > . static constexpr Vec3 sofa::defaulttype::RigidCoord< 3, real >::fromHomogeneous ; (; V ; v). inlinestaticconstexpr . create a 3d vector from a homogeneous vector . ◆ fromMatrix(). template<typename real > . template<class Mat > . void sofa::defaulttype::RigidCoord< 3, real >::fromMatrix ; (; const Mat & ; m). inline . Set from the given matrix. . ◆ getCenter() [1/2]. template<typename real > . constexpr Vec3& sofa::defaulttype::RigidCoord< 3, real >::getCenter ; (; ). inlineconstexpr . ◆ getCenter() [2/2]. template<typename real > . constexpr const Vec3& sofa::defaulttype::RigidCoord< 3, real >::getCenter ; (; ); const. inlineconstexpr . ◆ getOrientation() [1/2]. template<typename real > . constexpr Quat& sofa::defaulttype::RigidCoord< 3, real >::getOrientation ; (; ). inlineconstexpr . ◆ getOri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html:6996,clear,clear,6996,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_013_00_01real_01_4.html,1,['clear'],['clear']
Usability,"ypename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; ). inlineoverridevirtual . Completely clear the matrix. ; Need implement clear to override BaseMatrix one. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clear ; (; Index ; i, . Index ; j . ). inlineoverride . clear scalar at element i, j of matrix . ◆ clearCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearCol ; (; Index ; j). inlineoverride . Clear col scalar method. Clear this col in all row of matrix. ; Parameters. j: Col index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearColBlock . ◆ clearRow(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRow ; (; Index ; i). inlineoverride . Clear row scalar method. Clear all col of this line. ; Parameters. i: Line index considering size of matrix in scalar. . WarningIf you want to clear all value of a block, it is better to call clearRowBlock . ◆ clearRowCol(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . void sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::clearRowCol ; (; Index ; i). inlineoverride . Clear both row i and column i in a square matrix. ; Parameters. i: Row and Col index considering size of matrix in scalar. . ◆ colSize(). template<typename TBlock , typename TPolicy = CRSMechanicalPolicy> . Index sofa::linearalgebra::CompressedRowSparseMatrixMechanical< TBlock, TPolicy >::colSize ; (; ); const. inlineoverridevirtual . Number of columns. ; Implements sofa::l",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:49137,clear,clearRow,49137,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['clear'],['clearRow']
Usability,"ypes > . VecCoord sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >::x0. initial constrained DOFs position . ◆ xf. template<class TDataTypes > . VecCoord sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >::xf. final constrained DOFs position . Constructor details. ◆ PatchTestMovementProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::PatchTestMovementProjectiveConstraint. protected . ◆ ~PatchTestMovementProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::~PatchTestMovementProjectiveConstraint. protectedvirtual . Function details. ◆ addConstraint(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::addConstraint ; (; Index ; index). ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Draw the constrained points (= border mesh points) ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getFinalPositions(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::getFinalPositions ; (; VecCoord & ; finalPos, . DataVecCoord & ; xData . ). Compute the theoretical final positions. . ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html:24683,clear,clearConstraints,24683,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"yprotected; buildRamifiedFinestLevel()sofa::component::topology::container::grid::SparseGridRamificationTopology; buildVirtualFinerLevels() overridesofa::component::topology::container::grid::SparseGridRamificationTopologyvirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeIndices(Index oldidx, Index newidx)sofa::component::topology::container::grid::SparseGridRamificationTopology; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkConnexity() overridesofa::component::topology::container::constant::MeshTopologyvirtual; checkTopology() constsofa::core::topology::BaseMeshTopologyinlinevirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear() overridesofa::component::topology::container::constant::MeshTopologyvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeBoundingBox(const type::vector< type::Vec3 > &vertices, SReal &xmin, SReal &xmax, SReal &ymin, SReal &ymax, SReal &zmin, SReal &zmax) constsofa::component::topology::container::grid::SparseGridTopologyprotected; computeRelativeOrientationInQuad(const PointID ind_p0, const PointID ind_p1, const PointID ind_q)sofa::component::topology::container::constant::MeshTopology; computeRelativeOrientationInTri(const PointID ind_p0, const PointID ind_p1, const PointID ind_t)sofa::component::topology::container::constant::MeshTopology; constructCollisionModels(const sofa::type::vector< sofa::core::topology::BaseMeshTopology * > &list_mesh, const type::vector< Data< type::vector< sofa::type::Vec< 3, T > > > * > &list_X)sofa::component::topology::container::g",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology-members.html:7944,clear,clear,7944,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology-members.html,1,['clear'],['clear']
Usability,"ystem<TMatrix, TVector>, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK > sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::l_solverLinearSystem. protected . Constructor details. ◆ CompositeLinearSystem(). template<class TMatrix , class TVector > . sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::CompositeLinearSystem. protected . Function details. ◆ allocateSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::allocateSystem. overrideprotectedvirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ assembleSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::assembleSystem ; (; const core::MechanicalParams * ; mechanical_params). overrideprotectedvirtual . Reimplemented from sofa::core::behavior::BaseMatrixLinearSystem. ◆ clearSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::clearSystem. overridevirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ dispatchSystemRHS(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::dispatchSystemRHS ; (; core::MultiVecDerivId ; v). overridevirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ dispatchSystemSolution(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >::dispatchSystemSolution ; (; core::MultiVecDerivId ; v). overridevirtual . Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ getRHSVector(). template<class TMatrix , class TVector > . TVector * sofa::component::linearsystem::CompositeLine",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html:20154,clear,clearSystem,20154,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html,1,['clear'],['clearSystem']
Usability,"ze ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual GLuint getDepthTexture ();  ; virtual GLuint getColorTexture ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual type::Vec3 getDirection ();  ; virtual float getShadowFactor ();  ; virtual float getVSMLightBleeding ();  ; virtual float getVSMMinVariance ();  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html:5212,clear,clearVisual,5212,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html,2,['clear'],"['clear', 'clearVisual']"
Usability,"ze_t N, typename T > . BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ). ◆ bloc() [2/2]. template<std::size_t N, typename T > . const BlockFullMatrix< N, T >::Block & sofa::linearalgebra::BlockFullMatrix< N, T >::bloc ; (; Index ; bi, . Index ; bj . ); const. ◆ clear() [1/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; ). overridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clear ; (; Index ; i, . Index ; j . ). overridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearCol ; (; Index ; j). overridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRow ; (; Index ; i). overridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t N, typename T > . void sofa::linearalgebra::BlockFullMatrix< N, T >::clearRowCol ; (; Index ; i). overridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colSize(). template<std::size_t N, typename T > . BlockFullMatrix< N, T >::Index sofa::linearalgebra::BlockFullMatrix< N, T >::colSize ; (; void ; ); const. overridevirtual . Number of columns. ; Implements sofa::linearalgebra::BaseMatrix. ◆ element(). template<std::size_t N, typename T > . SReal sofa::linearalgebra::BlockFullMatrix< N, T >::element ; (; Index ; i, . Index ; j . ); const. overridevirtual . Read the value of the element at row i, column j (using 0-based indices) ; Implements sofa::linearalg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html:17553,clear,clearRow,17553,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_full_matrix.html,1,['clear'],['clearRow']
Usability," . Public Member Functions;  DiagonalMatrix ();  ;  DiagonalMatrix (Index nbRow, Index);  ;  DiagonalMatrix (Real *p, Index, Index);  ;  ~DiagonalMatrix () override;  ; Real * ptr ();  ; const Real * ptr () const;  ; Real * operator[] (Index i);  ; const Real * operator[] (Index i) const;  ; void resize (Index nbRow, Index) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void resize (Index nbRow);  ; Index size () const;  ; void swap (DiagonalMatrix< T > &v);  ; SReal element (Index i) const;  ; void set (Index i, double v);  ; void add (Index i, double v);  ; void clear (Index i);  ; template<class Real2 > ; FullVector< Real2 > operator* (const FullVector< Real2 > &v) const;  ; void invert ();  ; template<class Real2 > ; void mult (FullVector< Real2 > &z, const FullVector< Real2 > &v) const;  ; template<class M2 > ; bool hasRef (const M2 *m) const;  ; std::string expr () const;  ; bool valid () const;  ; template<class Dest > ; void addTo (Dest *dest) const;  ; template<class Real2 > ; void operator= (const DiagonalMatrix< Real2 > &m);  ; tem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html:1635,clear,clear,1635,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_diagonal_matrix.html,2,['clear'],"['clear', 'clearRow']"
Usability," ; p . ). protected . ◆ addTetrahedron() [2/2]. void sofa::core::loader::MeshLoader::addTetrahedron ; (; type::vector< Tetrahedron > & ; pTetrahedra, . Topology::TetrahedronID ; p0, . Topology::TetrahedronID ; p1, . Topology::TetrahedronID ; p2, . Topology::TetrahedronID ; p3 . ). protected . ◆ addTriangle() [1/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . const Triangle & ; p . ). protected . ◆ addTriangle() [2/2]. void sofa::core::loader::MeshLoader::addTriangle ; (; type::vector< Triangle > & ; pTriangles, . Topology::TriangleID ; p0, . Topology::TriangleID ; p1, . Topology::TriangleID ; p2 . ). protected . ◆ applyTransformation(). void sofa::core::loader::MeshLoader::applyTransformation ; (; sofa::type::Matrix4 const & ; T). virtual . Apply Homogeneous transformation to the positions. . ◆ canLoad(). bool sofa::core::loader::MeshLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ clearBuffers(). void sofa::core::loader::MeshLoader::clearBuffers ; (; ). finalprotectedvirtual . ◆ copyMeshToData(). void sofa::core::loader::MeshLoader::copyMeshToData ; (; helper::io::Mesh & ; _mesh). protected . Temporary method that will copy all buffers from a io::Mesh into the corresponding Data. Will be removed as soon as work on unifying meshloader is finished. . ◆ getRotation(). virtual Vec3 sofa::core::loader::MeshLoader::getRotation ; (; ); const. inlinevirtual . ◆ getScale(). virtual Vec3 sofa::core::loader::MeshLoader::getScale ; (; ); const. inlinevirtual . ◆ getTransformation(). virtual sofa::type::Matrix4 sofa::core::loader::MeshLoader::getTransformation ; (; ); const. inlinevirtual . ◆ getTranslation(). virtual Vec3 sofa::core::loader::MeshLoader::getTranslation ; (; ); const. inlinevirtual . ◆ init(). void sofa::core::loader::MeshLoader::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:28509,clear,clearBuffers,28509,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['clear'],['clearBuffers']
Usability," ; static void stepNext (const char *prevIdStr, const char *nextIdStr);  ; static void step (const char *idStr);  ; static void step (const char *idStr, const char *objStr);  ; static void step (const char *idStr, const std::string &objStr);  ; template<class T > ; static void step (const char *idStr, T *obj);  ; static void valSet (IdVal id, double val);  ; static void valAdd (IdVal id, double val);  ; static void valSet (const char *idStr, double val);  ; static void valAdd (const char *idStr, double val);  ; static std::pair< SyncCallBack, void * > setSyncCallBack (SyncCallBack cb, void *userData=nullptr);  . Function details. ◆ begin() [1/2]. void sofa::helper::AdvancedTimer::begin ; (; const char * ; idStr). static . ◆ begin() [2/2]. void sofa::helper::AdvancedTimer::begin ; (; IdTimer ; id). static . ◆ clear(). void sofa::helper::AdvancedTimer::clear ; (; ). static . ◆ clearData(). void sofa::helper::AdvancedTimer::clearData ; (; IdTimer ; id). static . clearDatato clear a specific Timer Data ; Parameters. idIdTimer, id of the timer . ◆ convertOutputType(). AdvancedTimer::outputType sofa::helper::AdvancedTimer::convertOutputType ; (; std::string ; type). static . convertOutputType convert a string to the output type ; Parameters. typestd::string, output type name (example : ""json"") . ReturnsoutputType, output type enum . ◆ end() [1/4]. void sofa::helper::AdvancedTimer::end ; (; const char * ; idStr). static . ◆ end() [2/4]. void sofa::helper::AdvancedTimer::end ; (; IdTimer ; id). static . ◆ end() [3/4]. std::string sofa::helper::AdvancedTimer::end ; (; IdTimer ; id, . double ; time, . double ; dt . ). static . end Override fo the end method in which you can use JSON or old format ; Parameters. idIdTimer, the id of the used timer ; timedouble, current time (from the context) ; timedt, current delta time or dt (from the context) . Returnsstd::string, the output if JSON format is set . ◆ end() [4/4]. void sofa::helper::AdvancedTimer::end ; (; IdTimer ; id, . std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html:4146,clear,clearDatato,4146,api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_advanced_timer.html,2,['clear'],"['clear', 'clearDatato']"
Usability," Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions; void postBuildSystem (const core::ConstraintParams *cParams) override;  ; void postSolveSystem (const core::ConstraintParams *cParams) override;  ; void clearConstraintCorrections ();  ; void resetConstraints (const core::ConstraintParams *cParams);  ; void buildLocalConstraintMatrix (const core::ConstraintParams *cparams, unsigned int &constraintId);  Call the method buildConstraintMatrix on all the BaseConstraintSet. More...;  ; void accumulateMatrixDeriv (const core::ConstraintParams *cparams);  ; unsigned int buildConstraintMatrix (const core::ConstraintParams *cparams);  ; void applyProjectiveConstraintOnConstraintMatrix (const core::ConstraintParams *cparams);  ; void getConstraintViolation (const core::ConstraintParams *cparams, sofa::linearalgebra::BaseVector *v);  ;  Protected Member Functions inherited from sofa::core::behavior::ConstraintSolver;  ConstraintSolver ();  ;  ~ConstraintSolver () override;  ; bool prepareStatesTask (const ConstraintParams *, MultiVecId res1, MultiVecId res2);  ; bool buildSystemTask (const ConstraintParams *, MultiVecId res1, MultiVecId res2);  ; bool solveSystemTask (const ConstraintParams *, MultiVecId res1, MultiVecId res2);  ; bool app",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html:11293,clear,clearConstraintCorrections,11293,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,1,['clear'],['clearConstraintCorrections']
Usability," CreateString (BaseData *data, Base *from);  ; static std::string CreateString (Base *object, BaseData *data, Base *from);  ; void updateCounter ();  . Attribute details. ◆ m_counter. int sofa::core::objectmodel::BaseLink::m_counter. protected . Number of changes since creation. . ◆ m_flags. unsigned int sofa::core::objectmodel::BaseLink::m_flags. protected . ◆ m_help. std::string sofa::core::objectmodel::BaseLink::m_help. protected . ◆ m_name. std::string sofa::core::objectmodel::BaseLink::m_name. protected . Constructor details. ◆ BaseLink() [1/2]. sofa::core::objectmodel::BaseLink::BaseLink ; (; LinkFlags ; flags). ◆ BaseLink() [2/2]. sofa::core::objectmodel::BaseLink::BaseLink ; (; const BaseInitLink & ; init, . LinkFlags ; flags . ). ◆ ~BaseLink(). sofa::core::objectmodel::BaseLink::~BaseLink ; (; ). virtual . Function details. ◆ add(). bool sofa::core::objectmodel::BaseLink::add ; (; Base * ; baseptr, . const std::string & ; path . ). inline . Add a new target to the link. . ◆ clear(). void sofa::core::objectmodel::BaseLink::clear ; (; ). inline . ◆ CreateString() [1/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; Base * ; object, . Base * ; from . ). static . ◆ CreateString() [2/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; Base * ; object, . BaseData * ; data, . Base * ; from . ). static . ◆ CreateString() [3/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; BaseData * ; data, . Base * ; from . ). static . ◆ CreateString() [4/4]. std::string sofa::core::objectmodel::BaseLink::CreateString ; (; const std::string & ; path, . const std::string & ; data = """" . ). static . ◆ CreateStringData(). std::string sofa::core::objectmodel::BaseLink::CreateStringData ; (; BaseData * ; data). static . ◆ CreateStringPath(). std::string sofa::core::objectmodel::BaseLink::CreateStringPath ; (; Base * ; object, . Base * ; from . ). static . ◆ getCounter(). int sofa::core::objectmodel::BaseLink::getCounter ; (; ); con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html:4461,clear,clear,4461,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,1,['clear'],['clear']
Usability," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:9679,clear,clearLoggedMessages,9679,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,512,['clear'],['clearLoggedMessages']
Usability," addB() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::addB ; (; Index ; i, . Index ; j, . const Block & ; b . ). inline . ◆ bloc() [1/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i); const. inline . ◆ bloc() [2/2]. template<std::size_t LC, typename T = SReal> . const Block& sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::bloc ; (; Index ; i, . Index ; j . ); const. inline . ◆ clear() [1/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; ). inlineoverridevirtual . Reset all values to 0. ; Implements sofa::linearalgebra::BaseMatrix. ◆ clear() [2/2]. template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clear ; (; Index ; i, . Index ; j . ). inlineoverridevirtual . Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearCol ; (; Index ; j). inlineoverridevirtual . Reset the all values in column j to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRow(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRow ; (; Index ; i). inlineoverridevirtual . Reset all the values in row i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ clearRowCol(). template<std::size_t LC, typename T = SReal> . void sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::clearRowCol ; (; Index ; i). inlineoverridevirtual . Reset the value of both row and column i to 0. ; Reimplemented from sofa::linearalgebra::BaseMatrix. ◆ colBSize(). template<std::size_t LC, typename T = SReal> . Index sofa::linearalgebra::BlockDiagonalMatrix< LC, T >::colBSize ; (; void ; ); const. inline . ◆ colSize(). template<std::size_t LC, typename T = SReal>",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html:19341,clear,clearCol,19341,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_block_diagonal_matrix.html,1,['clear'],['clearCol']
Usability," bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; unsigned short getTextureUnit ();  ; void bind ();  ; void unbind ();  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html:3335,clear,clearVisual,3335,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,2,['clear'],"['clear', 'clearVisual']"
Usability," operator>> (std::istream &in, RigidCoord< 2, real > &v);  read from an input stream More...;  . Attribute details. ◆ spatial_dimensions. template<typename real > . constexpr sofa::Size sofa::defaulttype::RigidCoord< 2, real >::spatial_dimensions = 2. staticconstexpr . Compile-time constant specifying the number of dimensions of space (NOT equivalent to total_size for rigids) . ◆ total_size. template<typename real > . constexpr sofa::Size sofa::defaulttype::RigidCoord< 2, real >::total_size = 3. staticconstexpr . Compile-time constant specifying the number of scalars within this vector (equivalent to the size() method) . Constructor details. ◆ RigidCoord() [1/2]. template<typename real > . constexpr sofa::defaulttype::RigidCoord< 2, real >::RigidCoord ; (; const Vec2 & ; posCenter, . const Real & ; orient . ). inlineconstexpr . ◆ RigidCoord() [2/2]. template<typename real > . constexpr sofa::defaulttype::RigidCoord< 2, real >::RigidCoord ; (; ). inlineconstexpr . Function details. ◆ clear(). template<typename real > . constexpr void sofa::defaulttype::RigidCoord< 2, real >::clear ; (; ). inlineconstexpr . ◆ fromHomogeneous(). template<typename real > . template<typename V > . static constexpr Vec2 sofa::defaulttype::RigidCoord< 2, real >::fromHomogeneous ; (; V ; v). inlinestaticconstexpr . create a 2d vector from a homogeneous vector . ◆ fromMatrix(). template<typename real > . template<class Mat > . void sofa::defaulttype::RigidCoord< 2, real >::fromMatrix ; (; const Mat & ; m). inline . Set from the given matrix. . ◆ getCenter() [1/2]. template<typename real > . constexpr Vec2& sofa::defaulttype::RigidCoord< 2, real >::getCenter ; (; ). inlineconstexpr . ◆ getCenter() [2/2]. template<typename real > . constexpr const Vec2& sofa::defaulttype::RigidCoord< 2, real >::getCenter ; (; ); const. inlineconstexpr . ◆ getOrientation() [1/2]. template<typename real > . constexpr Real& sofa::defaulttype::RigidCoord< 2, real >::getOrientation ; (; ). inlineconstexpr . ◆ getOri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4.html:6180,clear,clear,6180,api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_rigid_coord_3_012_00_01real_01_4.html,1,['clear'],['clear']
Usability,"◆ addData(). void sofa::gui::qt::QDisplayPropertyWidget::addData ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseData * ; data . ). ◆ addDescriptionItem(). void sofa::gui::qt::QDisplayPropertyWidget::addDescriptionItem ; (; QTreeWidgetItem * ; groupItem, . const QString & ; name, . const QString & ; description . ). protected . ◆ addGroup(). void sofa::gui::qt::QDisplayPropertyWidget::addGroup ; (; const QString & ; component, . const QString & ; group . ). ◆ addLink(). void sofa::gui::qt::QDisplayPropertyWidget::addLink ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::BaseLink * ; link . ). ◆ clear(). void sofa::gui::qt::QDisplayPropertyWidget::clear ; (; ). ◆ clearAll(). void sofa::gui::qt::QDisplayPropertyWidget::clearAll ; (; ). ◆ clearComponentOutput. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentOutput ; (; ). protectedslot . ◆ clearComponentWarning. void sofa::gui::qt::QDisplayPropertyWidget::clearComponentWarning ; (; ). protectedslot . ◆ DefaultDataGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultDataGroup ; (; ). inlinestatic . ◆ DefaultInfoGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultInfoGroup ; (; ). inlinestatic . ◆ DefaultLinkGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLinkGroup ; (; ). inlinestatic . ◆ DefaultLogGroup(). static QString sofa::gui::qt::QDisplayPropertyWidget::DefaultLogGroup ; (; ). inlinestatic . ◆ findComponent(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findComponent ; (; const QString & ; component); const. protected . ◆ findGroup(). QTreeWidgetItem * sofa::gui::qt::QDisplayPropertyWidget::findGroup ; (; const QString & ; component, . const QString & ; group . ); const. protected . ◆ setConsoleOutput(). void sofa::gui::qt::QDisplayPropertyWidget::setConsoleOutput ; (; const QString & ; component, . const QString & ; group, . sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:3434,clear,clearComponentWarning,3434,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,1,['clear'],['clearComponentWarning']
Usability,"◆ addTreeItem() [2/2]. QTreeWidgetItem * sofa::gui::qt::SofaWindowProfiler::addTreeItem ; (; const AnimationStepData * ; step). protected . ◆ closeEvent. void sofa::gui::qt::SofaWindowProfiler::closeEvent ; (; QCloseEvent * ; ). inlineoverrideslot . ◆ closeWindow. void sofa::gui::qt::SofaWindowProfiler::closeWindow ; (; bool ; ). signal . ◆ createChart(). void sofa::gui::qt::SofaWindowProfiler::createChart ; (; ). protected . Method called at creation to init the chart. . ◆ createTreeView(). void sofa::gui::qt::SofaWindowProfiler::createTreeView ; (; ). protected . Method called at creation to init the QTreeWidget. . ◆ expandRootNodeOnly. void sofa::gui::qt::SofaWindowProfiler::expandRootNodeOnly ; (; ); const. slot . ◆ onStepSelected. void sofa::gui::qt::SofaWindowProfiler::onStepSelected ; (; QTreeWidgetItem * ; item, . int ; column . ). slot . Method called when a QTreeWidgetItem is selected in the Tree view. . ◆ pushStepData(). void sofa::gui::qt::SofaWindowProfiler::pushStepData ; (; ). main method to iterate on the AdvancedTimer Data and update the info in the widgets . ◆ resetGraph(). void sofa::gui::qt::SofaWindowProfiler::resetGraph ; (; ). Method to clear all Data and reset graph. . ◆ updateChart(). void sofa::gui::qt::SofaWindowProfiler::updateChart ; (; ). protected . Method called at each iteration to update the chart. . ◆ updateFromSelectedStep. void sofa::gui::qt::SofaWindowProfiler::updateFromSelectedStep ; (; int ; step). slot . Method to update all widgets from select absisse on the graph. . ◆ updateSummaryLabels. void sofa::gui::qt::SofaWindowProfiler::updateSummaryLabels ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update summary information . ◆ updateTree. void sofa::gui::qt::SofaWindowProfiler::updateTree ; (; int ; step). slot . Method called when a given. ; Parameters. stepis triggered to update the QTreeView . sofaguiqtSofaWindowProfiler; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html:8075,clear,clear,8075,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_profiler.html,1,['clear'],['clear']
Usability,"◆ x0. template<class TDataTypes > . VecCoord sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >::x0. initial constrained DOFs position . ◆ xf. template<class TDataTypes > . VecCoord sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >::xf. final constrained DOFs position . Constructor details. ◆ AffineMovementProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::AffineMovementProjectiveConstraint. protected . ◆ ~AffineMovementProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::~AffineMovementProjectiveConstraint. protectedvirtual . Function details. ◆ addConstraint(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::addConstraint ; (; Index ; index). ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Draw the constrained points (= border mesh points) ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getFinalPositions(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::getFinalPositions ; (; VecCoord & ; finalPos, . DataVecCoord & ; xData . ). Compute the theoretical final positions. . ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ project",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html:26614,clear,clearConstraints,26614,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,1,['clear'],['clearConstraints']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::animationloop::ConstraintProblem Member List . This is the complete list of members for sofa::component::animationloop::ConstraintProblem, including all inherited members. _constraintsResolutionssofa::component::animationloop::ConstraintProblemprotected; _dsofa::component::animationloop::ConstraintProblemprotected; _dfsofa::component::animationloop::ConstraintProblemprotected; _dFreesofa::component::animationloop::ConstraintProblemprotected; _dimsofa::component::animationloop::ConstraintProblemprotected; _forcesofa::component::animationloop::ConstraintProblemprotected; _timersofa::component::animationloop::ConstraintProblemprotected; _tolsofa::component::animationloop::ConstraintProblemprotected; _Wsofa::component::animationloop::ConstraintProblemprotected; clear(int dim, const SReal &tol)sofa::component::animationloop::ConstraintProblemvirtual; ConstraintProblem(bool printLog=false)sofa::component::animationloop::ConstraintProblem; gaussSeidelConstraintTimed(SReal &timeout, int numItMax)sofa::component::animationloop::ConstraintProblem; getConstraintResolutions(void)sofa::component::animationloop::ConstraintProbleminline; getD(void)sofa::component::animationloop::ConstraintProbleminline; getdF(void)sofa::component::animationloop::ConstraintProbleminline; getDfree(void)sofa::component::animationloop::ConstraintProbleminline; getF(void)sofa::component::animationloop::ConstraintProbleminline; getSize(void)sofa::component::animationloop::ConstraintProbleminline; getTolerance(void)sofa::component::animationloop::ConstraintProbleminline; getW(void)sofa::component::animationloop::ConstraintProbleminline; ~ConstraintProblem()sofa::component::animationloop::ConstraintProblemvirtual. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem-members.html:885,clear,clear,885,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM, including all inherited members. add(Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; add(core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod)sofa::component::collision::detection::algorithm::CollidingPMinline; clear()sofa::component::collision::detection::algorithm::CollidingPMinline; CollidingPM()sofa::component::collision::detection::algorithm::CollidingPMinline; intersect(core::collision::NarrowPhaseDetection *phase)sofa::component::collision::detection::algorithm::CollidingPMinline; remove(int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; umap_collision typedefsofa::component::collision::detection::algorithm::CollidingPM. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html:641,clear,clear,641,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::solver::ConstraintProblem Member List . This is the complete list of members for sofa::component::constraint::lagrangian::solver::ConstraintProblem, including all inherited members. clear(int nbConstraints)sofa::component::constraint::lagrangian::solver::ConstraintProblemvirtual; ConstraintProblem()sofa::component::constraint::lagrangian::solver::ConstraintProblem; dFreesofa::component::constraint::lagrangian::solver::ConstraintProblem; dimensionsofa::component::constraint::lagrangian::solver::ConstraintProblemprotected; fsofa::component::constraint::lagrangian::solver::ConstraintProblem; getDfree()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; getDimension()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; getF()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; getProblemId()sofa::component::constraint::lagrangian::solver::ConstraintProblem; getW()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; maxIterationssofa::component::constraint::lagrangian::solver::ConstraintProblem; problemIdsofa::component::constraint::lagrangian::solver::ConstraintProblemprotected; solveTimed(SReal tolerance, int maxIt, SReal timeout)=0sofa::component::constraint::lagrangian::solver::ConstraintProblempure virtual; tolerancesofa::component::constraint::lagrangian::solver::ConstraintProblem; Wsofa::component::constraint::lagrangian::solver::ConstraintProblem; ~ConstraintProblem()sofa::component::constraint::lagrangian::solver::ConstraintProblemvirtual. Generated on Mon Nov 11 2024 02:36:36 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem-members.html:323,clear,clear,323,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::constraint::lagrangian::solver::LCPConstraintProblem Member List . This is the complete list of members for sofa::component::constraint::lagrangian::solver::LCPConstraintProblem, including all inherited members. clear(int nbConstraints)sofa::component::constraint::lagrangian::solver::ConstraintProblemvirtual; ConstraintProblem()sofa::component::constraint::lagrangian::solver::ConstraintProblem; dFreesofa::component::constraint::lagrangian::solver::ConstraintProblem; dimensionsofa::component::constraint::lagrangian::solver::ConstraintProblemprotected; fsofa::component::constraint::lagrangian::solver::ConstraintProblem; getDfree()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; getDimension()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; getF()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; getProblemId()sofa::component::constraint::lagrangian::solver::ConstraintProblem; getW()sofa::component::constraint::lagrangian::solver::ConstraintProbleminline; maxIterationssofa::component::constraint::lagrangian::solver::ConstraintProblem; musofa::component::constraint::lagrangian::solver::LCPConstraintProblem; problemIdsofa::component::constraint::lagrangian::solver::ConstraintProblemprotected; solveTimed(SReal tolerance, int maxIt, SReal timeout) overridesofa::component::constraint::lagrangian::solver::LCPConstraintProblemvirtual; tolerancesofa::component::constraint::lagrangian::solver::ConstraintProblem; Wsofa::component::constraint::lagrangian::solver::ConstraintProblem; ~ConstraintProblem()sofa::component::constraint::lagrangian::solver::ConstraintProblemvirtual. Generated on Mon Nov 11 2024 02:36:36 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_problem-members.html:329,clear,clear,329,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_problem-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_problem-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsolver::GraphScatteredVector Member List . This is the complete list of members for sofa::component::linearsolver::GraphScatteredVector, including all inherited members. add(int, SReal)sofa::component::linearsolver::GraphScatteredVectorinline; AllMultiVecId typedefsofa::core::behavior::TMultiVec< V_DERIV >; clear()sofa::core::behavior::TMultiVec< V_DERIV >inline; ConstAllMultiVecId typedefsofa::core::behavior::TMultiVec< V_DERIV >; ConstMyMultiVecId typedefsofa::core::behavior::TMultiVec< V_DERIV >; dot(MyMultiVecId a)sofa::core::behavior::TMultiVec< V_DERIV >inline; dynamicsofa::core::behavior::TMultiVec< V_DERIV >protected; element(int)sofa::component::linearsolver::GraphScatteredVectorinline; eq(MyMultiVecId a)sofa::core::behavior::TMultiVec< V_DERIV >inline; eq(MyMultiVecId a, SReal f)sofa::core::behavior::TMultiVec< V_DERIV >inline; eq(AllMultiVecId a, AllMultiVecId b, SReal f=1.0)sofa::core::behavior::TMultiVec< V_DERIV >inline; GraphScatteredMatrix classsofa::component::linearsolver::GraphScatteredVectorfriend; GraphScatteredVector(core::behavior::BaseVectorOperations *p, core::VecDerivId id)sofa::component::linearsolver::GraphScatteredVectorinline; GraphScatteredVector(core::behavior::BaseVectorOperations *p)sofa::component::linearsolver::GraphScatteredVectorinline; id() constsofa::core::behavior::TMultiVec< V_DERIV >inline; id()sofa::core::behavior::TMultiVec< V_DERIV >inline; Inherit typedefsofa::component::linearsolver::GraphScatteredVector; MyMultiVecId typedefsofa::core::behavior::TMultiVec< V_DERIV >; Name()sofa::component::linearsolver::GraphScatteredVectorinlinestatic; norm()sofa::core::behavior::TMultiVec< V_DERIV >inline; norm(unsigned l)sofa::core::behavior::TMultiVec< V_DERIV >inline; operator AllMultiVecId()sofa::core::behavior::TMultiVec< V_DERIV >inline; operator ConstAllMultiVecId()sofa::core::behavior::TMultiVec< V_DERIV ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_graph_scattered_vector-members.html:432,clear,clear,432,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_graph_scattered_vector-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_graph_scattered_vector-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::linearsystem::LocalMatrixMaps< c, Real > Member List . This is the complete list of members for sofa::component::linearsystem::LocalMatrixMaps< c, Real >, including all inherited members. clear()sofa::component::linearsystem::LocalMatrixMaps< c, Real >inline; componentLocalMatrixsofa::component::linearsystem::LocalMatrixMaps< c, Real >; ComponentType typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >; indexVerificationStrategysofa::component::linearsystem::LocalMatrixMaps< c, Real >; ListMatrixType typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >; mappedLocalMatrixsofa::component::linearsystem::LocalMatrixMaps< c, Real >; PairMechanicalStates typedefsofa::component::linearsystem::LocalMatrixMaps< c, Real >. Generated on Mon Nov 11 2024 02:47:33 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps-members.html:305,clear,clear,305,api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsystem_1_1_local_matrix_maps-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::ListMatrixAccumulator< TMatrixAccumulator > Member List . This is the complete list of members for sofa::core::ListMatrixAccumulator< TMatrixAccumulator >, including all inherited members. add(sofa::SignedIndex i, sofa::SignedIndex j, float value) overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; add(sofa::SignedIndex i, sofa::SignedIndex j, double value) overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; add(sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; add(sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; clear() overridesofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; empty() constsofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; getAccumulators() constsofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; push_back(TMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; remove(TMatrixAccumulator *m)sofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline; size() constsofa::core::ListMatrixAccumulator< TMatrixAccumulator >inline. Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator-members.html:864,clear,clear,864,api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::SofaLibrary Member List . This is the complete list of members for sofa::core::SofaLibrary, including all inherited members. addCategory(CategoryLibrary *)sofa::core::SofaLibraryprotectedvirtual; build(const std::vector< std::string > &examples=std::vector< std::string >())sofa::core::SofaLibraryvirtual; categoriessofa::core::SofaLibraryprotected; clear()sofa::core::SofaLibraryvirtual; computeNumComponents()sofa::core::SofaLibraryprotected; createCategory(const std::string &category, unsigned int)sofa::core::SofaLibraryinlineprotectedvirtual; exampleFilessofa::core::SofaLibraryprotected; getCategories() constsofa::core::SofaLibraryinline; getCategory(const std::string &categoryName) constsofa::core::SofaLibrary; getComponent(const std::string &componentName) constsofa::core::SofaLibrary; getComponentDescription(const std::string &componentName) constsofa::core::SofaLibrary; getNumComponents() constsofa::core::SofaLibraryinline; numComponentssofa::core::SofaLibraryprotected; VecCategory typedefsofa::core::SofaLibrary; VecCategoryIterator typedefsofa::core::SofaLibrary; ~SofaLibrary()sofa::core::SofaLibraryinlinevirtual. Generated on Mon Nov 11 2024 03:14:10 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_sofa_library-members.html:462,clear,clear,462,api/master/sofa/html/classsofa_1_1core_1_1_sofa_library-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_sofa_library-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::MultiMatrix< Parent > Member List . This is the complete list of members for sofa::core::behavior::MultiMatrix< Parent >, including all inherited members. clear()sofa::core::behavior::MultiMatrix< Parent >inline; MultiMatrix(const MultiMatrix< Parent > &)=deletesofa::core::behavior::MultiMatrix< Parent >; MultiMatrix(Parent *parent)sofa::core::behavior::MultiMatrix< Parent >inlineexplicit; operator<<(std::ostream &out, const MultiMatrix< Parent > &m)sofa::core::behavior::MultiMatrix< Parent >friend; parentsofa::core::behavior::MultiMatrix< Parent >protected; reset()sofa::core::behavior::MultiMatrix< Parent >inline; setSystemMBKMatrix(const MechanicalMatrix &m)sofa::core::behavior::MultiMatrix< Parent >inline; solve(MultiVecDerivId solution, MultiVecDerivId rh)sofa::core::behavior::MultiMatrix< Parent >inline; VecId typedefsofa::core::behavior::MultiMatrix< Parent >; ~MultiMatrix()=defaultsofa::core::behavior::MultiMatrix< Parent >. Generated on Mon Nov 11 2024 03:15:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_multi_matrix-members.html:277,clear,clear,277,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_multi_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_multi_matrix-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::behavior::TMultiVec< vtype > Member List . This is the complete list of members for sofa::core::behavior::TMultiVec< vtype >, including all inherited members. AllMultiVecId typedefsofa::core::behavior::TMultiVec< vtype >; clear()sofa::core::behavior::TMultiVec< vtype >inline; ConstAllMultiVecId typedefsofa::core::behavior::TMultiVec< vtype >; ConstMyMultiVecId typedefsofa::core::behavior::TMultiVec< vtype >; dot(MyMultiVecId a)sofa::core::behavior::TMultiVec< vtype >inline; dynamicsofa::core::behavior::TMultiVec< vtype >protected; eq(MyMultiVecId a)sofa::core::behavior::TMultiVec< vtype >inline; eq(MyMultiVecId a, SReal f)sofa::core::behavior::TMultiVec< vtype >inline; eq(AllMultiVecId a, AllMultiVecId b, SReal f=1.0)sofa::core::behavior::TMultiVec< vtype >inline; id() constsofa::core::behavior::TMultiVec< vtype >inline; id()sofa::core::behavior::TMultiVec< vtype >inline; MyMultiVecId typedefsofa::core::behavior::TMultiVec< vtype >; norm()sofa::core::behavior::TMultiVec< vtype >inline; norm(unsigned l)sofa::core::behavior::TMultiVec< vtype >inline; operator AllMultiVecId()sofa::core::behavior::TMultiVec< vtype >inline; operator ConstAllMultiVecId()sofa::core::behavior::TMultiVec< vtype >inline; operator ConstMyMultiVecId()sofa::core::behavior::TMultiVec< vtype >inline; operator MyMultiVecId()sofa::core::behavior::TMultiVec< vtype >inline; operator*(MyMultiVecId a)sofa::core::behavior::TMultiVec< vtype >inline; operator*=(SReal f)sofa::core::behavior::TMultiVec< vtype >inline; operator+=(MyMultiVecId a)sofa::core::behavior::TMultiVec< vtype >inline; operator-=(MyMultiVecId a)sofa::core::behavior::TMultiVec< vtype >inline; operator/=(SReal f)sofa::core::behavior::TMultiVec< vtype >inline; operator<<(std::ostream &out, const TMultiVec< vtype > &mv)sofa::core::behavior::TMultiVec< vtype >friend; operator=(MyMultiVecId a)sofa::core::behavior::TMultiVec< vtype >i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec-members.html:334,clear,clear,334,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_t_multi_vec-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::collision::DetectionOutputVector Member List . This is the complete list of members for sofa::core::collision::DetectionOutputVector, including all inherited members. clear()=0sofa::core::collision::DetectionOutputVectorpure virtual; empty() constsofa::core::collision::DetectionOutputVectorinline; getFirstPosition(unsigned idx)=0sofa::core::collision::DetectionOutputVectorpure virtual; getSecondPosition(unsigned idx)=0sofa::core::collision::DetectionOutputVectorpure virtual; release()sofa::core::collision::DetectionOutputVectorinlinevirtual; size() const =0sofa::core::collision::DetectionOutputVectorpure virtual; ~DetectionOutputVector()sofa::core::collision::DetectionOutputVectorinlineprotectedvirtual. Generated on Mon Nov 11 2024 03:15:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector-members.html:279,clear,clear,279,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::AspectBuffer Member List . This is the complete list of members for sofa::core::objectmodel::AspectBuffer, including all inherited members. allocate()sofa::core::objectmodel::AspectBuffer; AspectBuffer(AspectPool &pool)sofa::core::objectmodel::AspectBuffer; AtomicInt typedefsofa::core::objectmodel::AspectBufferprotected; availableIDsofa::core::objectmodel::AspectBufferprotected; clear()sofa::core::objectmodel::AspectBuffer; latestIDsofa::core::objectmodel::AspectBufferprotected; poolsofa::core::objectmodel::AspectBufferprotected; pop(AspectRef &id)sofa::core::objectmodel::AspectBuffer; push(AspectRef id)sofa::core::objectmodel::AspectBuffer; ~AspectBuffer()sofa::core::objectmodel::AspectBuffer. Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer-members.html:507,clear,clear,507,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_aspect_buffer-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::BaseObjectDescription Member List . This is the complete list of members for sofa::core::objectmodel::BaseObjectDescription, including all inherited members. AttributeMap typedefsofa::core::objectmodel::BaseObjectDescription; attributessofa::core::objectmodel::BaseObjectDescriptionprotected; BaseObjectDescription(const char *name=nullptr, const char *type=nullptr)sofa::core::objectmodel::BaseObjectDescription; clearErrors()sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; errorssofa::core::objectmodel::BaseObjectDescriptionprotected; find(const char *nodeName, bool absolute=false)sofa::core::objectmodel::BaseObjectDescriptionvirtual; findObject(const char *nodeName)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttribute(const std::string &attr, const char *defaultVal=nullptr)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsFloat(const std::string &attr, const float defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeAsInt(const std::string &attr, const int defaultVal=0.0)sofa::core::objectmodel::BaseObjectDescriptionvirtual; getAttributeList(T &container) constsofa::core::objectmodel::BaseObjectDescriptioninline; getAttributeMap() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; getBaseFile()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getErrors() constsofa::core::objectmodel::BaseObjectDescriptioninline; getFullName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getName()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getObject()sofa::core::objectmodel::BaseObjectDescriptionvirtual; getParent() constsofa::core::objectmodel::BaseObjectDescriptionvirtual; logError(const std::string &s)sofa::core::objectmodel::BaseObjectDescriptioninlinevirtual; logErrors(const std::vector< std::string > &e)sofa::core::objectmodel::BaseObjectDescriptionin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html:539,clear,clearErrors,539,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description-members.html,1,['clear'],['clearErrors']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false > Member List . This is the complete list of members for sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >, including all inherited members. add(T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; clear(T &c)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; find(const T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; remove(T &c, std::size_t index)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; resize(T &c, size_t newsize)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >inlinestatic; T typedefsofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_d676823968d82043c559156e041c5978.html:484,clear,clear,484,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_d676823968d82043c559156e041c5978.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_d676823968d82043c559156e041c5978.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true > Member List . This is the complete list of members for sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >, including all inherited members. add(T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; addBegin(T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; clear(T &c)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; find(const T &c, TDestPtr v)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; remove(T &c, std::size_t index)sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >inlinestatic; T typedefsofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >. Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_32d6d50c3570276461072c49bb55b5e8.html:606,clear,clear,606,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_32d6d50c3570276461072c49bb55b5e8.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_32d6d50c3570276461072c49bb55b5e8.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::defaulttype::MapMapSparseMatrix< T > Member List . This is the complete list of members for sofa::defaulttype::MapMapSparseMatrix< T >, including all inherited members. addLine(KeyType lIndex, RowType row)sofa::defaulttype::MapMapSparseMatrix< T >inline; begin() constsofa::defaulttype::MapMapSparseMatrix< T >inline; begin()sofa::defaulttype::MapMapSparseMatrix< T >inline; clear()sofa::defaulttype::MapMapSparseMatrix< T >inline; Data typedefsofa::defaulttype::MapMapSparseMatrix< T >; empty() constsofa::defaulttype::MapMapSparseMatrix< T >inline; end() constsofa::defaulttype::MapMapSparseMatrix< T >inline; end()sofa::defaulttype::MapMapSparseMatrix< T >inline; KeyType typedefsofa::defaulttype::MapMapSparseMatrix< T >; m_datasofa::defaulttype::MapMapSparseMatrix< T >protected; multTransposeBaseVector(VecDeriv &res, const sofa::linearalgebra::BaseVector *lambda) constsofa::defaulttype::MapMapSparseMatrix< T >inline; newLine()sofa::defaulttype::MapMapSparseMatrix< T >inline; operator<<(std::ostream &out, const MapMapSparseMatrix< T > &sc)sofa::defaulttype::MapMapSparseMatrix< T >friend; operator>>(std::istream &in, MapMapSparseMatrix< T > &sc)sofa::defaulttype::MapMapSparseMatrix< T >friend; readLine(KeyType lIndex) constsofa::defaulttype::MapMapSparseMatrix< T >inline; RowType typedefsofa::defaulttype::MapMapSparseMatrix< T >; size() constsofa::defaulttype::MapMapSparseMatrix< T >inline; SparseMatrix typedefsofa::defaulttype::MapMapSparseMatrix< T >protected; writeLine(KeyType lIndex)sofa::defaulttype::MapMapSparseMatrix< T >inline; writeLine(KeyType lIndex, RowType row)sofa::defaulttype::MapMapSparseMatrix< T >inline. Generated on Mon Nov 11 2024 03:17:12 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix-members.html:481,clear,clear,481,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::Cylinder Member List . This is the complete list of members for sofa::gl::Cylinder, including all inherited members. clear()sofa::gl::Cylinderinlinestatic; Cylinder(SReal len=1.0_sreal)sofa::gl::Cylinder; Cylinder(const Vec3 &len)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const Quaternion &orient, const Vec3 &length)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const double orient[4][4], const Vec3 &length)sofa::gl::Cylinder; Cylinder(const double *mat, const Vec3 &length)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal)sofa::gl::Cylinder; Cylinder(const Vec3 &center, const double orient[4][4], SReal length=1.0_sreal)sofa::gl::Cylinder; Cylinder(const double *mat, SReal length=1.0_sreal)sofa::gl::Cylinder; draw()sofa::gl::Cylinder; draw(const Vec3 &center, const Quaternion &orient, const Vec3 &length)sofa::gl::Cylinderstatic; draw(const Vec3 &center, const double orient[4][4], const Vec3 &length)sofa::gl::Cylinderstatic; draw(const double *mat, const Vec3 &length)sofa::gl::Cylinderstatic; draw(const Vec3 &center, const Quaternion &orient, SReal length=1.0_sreal)sofa::gl::Cylinderstatic; draw(const Vec3 &center, const double orient[4][4], SReal length=1.0_sreal)sofa::gl::Cylinderstatic; draw(const double *mat, SReal length=1.0_sreal)sofa::gl::Cylinderstatic; Quaternion typedefsofa::gl::Cylinder; SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(Vector3, sofa::type::Vec3)sofa::gl::Cylinder; update(const Vec3 &center, const Quaternion &orient=Quaternion())sofa::gl::Cylinder; update(const Vec3 &center, const double orient[4][4])sofa::gl::Cylinder; update(const double *mat)sofa::gl::Cylinder; ~Cylinder()sofa::gl::Cylinder. Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_cylinder-members.html:227,clear,clear,227,api/master/sofa/html/classsofa_1_1gl_1_1_cylinder-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_cylinder-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gl::DrawToolGL Member List . This is the complete list of members for sofa::gl::DrawToolGL, including all inherited members. clear() overridesofa::gl::DrawToolGLvirtual; disableBlending() overridesofa::gl::DrawToolGLvirtual; disableDepthTest() overridesofa::gl::DrawToolGLvirtual; disableLighting() overridesofa::gl::DrawToolGLvirtual; disablePolygonOffset() overridesofa::gl::DrawToolGLvirtual; draw3DText(const type::Vec3 &p, float scale, const type::RGBAColor &color, const char *text) overridesofa::gl::DrawToolGLvirtual; draw3DText_Indices(const std::vector< type::Vec3 > &positions, float scale, const type::RGBAColor &color) overridesofa::gl::DrawToolGLvirtual; drawArrow(const type::Vec3 &p1, const type::Vec3 &p2, float radius, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawArrow(const type::Vec3 &p1, const type::Vec3 &p2, float radius, float coneLength, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawArrow(const type::Vec3 &p1, const type::Vec3 &p2, float radius, float coneLength, float coneRadius, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawBoundingBox(const type::Vec3 &min, const type::Vec3 &max, float size=1.0) overridesofa::gl::DrawToolGLvirtual; drawCapsule(const type::Vec3 &p1, const type::Vec3 &p2, float radius, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawCircle(float radius, float lineThickness, int resolution, const type::RGBAColor &color) overridesofa::gl::DrawToolGLvirtual; drawCone(const type::Vec3 &p1, const type::Vec3 &p2, float radius1, float radius2, const type::RGBAColor &color, int subd=16) overridesofa::gl::DrawToolGLvirtual; drawCross(const type::Vec3 &p, float length, const type::RGBAColor &color) overridesofa::gl::DrawToolGLvirtual; drawCube(const float &radius, const type::RGBAColor &color,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l-members.html:231,clear,clear,231,api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::ChartsWidget Member List . This is the complete list of members for sofa::gui::qt::ChartsWidget, including all inherited members. ChartsWidget(const std::string &name, QWidget *parent)sofa::gui::qt::ChartsWidget; clear()sofa::gui::qt::ChartsWidget; piesofa::gui::qt::ChartsWidgetprotected; selectionsofa::gui::qt::ChartsWidgetprotected; setChart(std::vector< dataTime > &value, unsigned int s)sofa::gui::qt::ChartsWidget; tablesofa::gui::qt::ChartsWidgetprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_charts_widget-members.html:328,clear,clear,328,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_charts_widget-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_charts_widget-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::PieWidget Member List . This is the complete list of members for sofa::gui::qt::PieWidget, including all inherited members. clear()sofa::gui::qt::PieWidget; colorArraysofa::gui::qt::PieWidgetstatic; datasofa::gui::qt::PieWidgetprotected; getColor(int i)sofa::gui::qt::PieWidgetstatic; paintEvent(QPaintEvent *)sofa::gui::qt::PieWidget; PieWidget(QWidget *parent)sofa::gui::qt::PieWidget; selectionsofa::gui::qt::PieWidgetprotected; setChart(std::vector< dataTime > &value, unsigned int s)sofa::gui::qt::PieWidget; sizePiesofa::gui::qt::PieWidgetprotected; totalTimesofa::gui::qt::PieWidgetprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget-members.html:239,clear,clear,239,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::QVisitorControlPanel Member List . This is the complete list of members for sofa::gui::qt::QVisitorControlPanel, including all inherited members. activateTraceStateVectors(bool)sofa::gui::qt::QVisitorControlPanelslot; changeFirstIndex(int)sofa::gui::qt::QVisitorControlPanel; changeFirstIndex()sofa::gui::qt::QVisitorControlPanelslot; changeRange(int)sofa::gui::qt::QVisitorControlPanel; changeRange()sofa::gui::qt::QVisitorControlPanelslot; clearGraph()sofa::gui::qt::QVisitorControlPanelsignal; filterResults()sofa::gui::qt::QVisitorControlPanelslot; focusOn(QString)sofa::gui::qt::QVisitorControlPanelsignal; QVisitorControlPanel(QWidget *parent)sofa::gui::qt::QVisitorControlPanel; spinIndexsofa::gui::qt::QVisitorControlPanelprotected; spinRangesofa::gui::qt::QVisitorControlPanelprotected; textFiltersofa::gui::qt::QVisitorControlPanelprotected. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel-members.html:557,clear,clearGraph,557,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel-members.html,1,['clear'],['clearGraph']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::qt::SofaWindowDataGraph Member List . This is the complete list of members for sofa::gui::qt::SofaWindowDataGraph, including all inherited members. addSimulationObject(sofa::core::objectmodel::BaseObject *bObject)sofa::gui::qt::SofaWindowDataGraphprotected; clearNodeData()sofa::gui::qt::SofaWindowDataGraphprotected; connectNodeData()sofa::gui::qt::SofaWindowDataGraphprotected; debugNodeGraphsofa::gui::qt::SofaWindowDataGraphprotected; m_exceptionssofa::gui::qt::SofaWindowDataGraphprotected; m_graphScenesofa::gui::qt::SofaWindowDataGraphprotected; m_graphViewsofa::gui::qt::SofaWindowDataGraphprotected; m_posXsofa::gui::qt::SofaWindowDataGraphprotected; m_posYsofa::gui::qt::SofaWindowDataGraphprotected; m_rootNodesofa::gui::qt::SofaWindowDataGraphprotected; m_scaleXsofa::gui::qt::SofaWindowDataGraphprotected; m_scaleYsofa::gui::qt::SofaWindowDataGraphprotected; parseSimulationNode(sofa::simulation::Node *node, int posX=0)sofa::gui::qt::SofaWindowDataGraphprotected; resetNodeGraph(sofa::simulation::Node *scene)sofa::gui::qt::SofaWindowDataGraph; SofaWindowDataGraph(QWidget *parent, sofa::simulation::Node *scene)sofa::gui::qt::SofaWindowDataGraph; ~SofaWindowDataGraph()sofa::gui::qt::SofaWindowDataGraph. Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph-members.html:369,clear,clearNodeData,369,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph-members.html,1,['clear'],['clearNodeData']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::TimerData Member List . This is the complete list of members for sofa::helper::TimerData, including all inherited members. clear()sofa::helper::TimerData; createJSONArray(int s, json jsonObject, StepData &data)sofa::helper::TimerData; defaultIntervalsofa::helper::TimerData; getJson(std::string stepNumber)sofa::helper::TimerData; getLightJson(std::string stepNumber)sofa::helper::TimerData; idsofa::helper::TimerData; init(AdvancedTimer::IdTimer id)sofa::helper::TimerDatainline; intervalsofa::helper::TimerData; nbItersofa::helper::TimerData; print()sofa::helper::TimerData; print(std::ostream &result)sofa::helper::TimerData; process()sofa::helper::TimerData; recordssofa::helper::TimerData; stepDatasofa::helper::TimerData; stepssofa::helper::TimerData; TimerData()sofa::helper::TimerDatainline; timerOutputTypesofa::helper::TimerData; valDatasofa::helper::TimerData; valssofa::helper::TimerData. Generated on Mon Nov 11 2024 03:27:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_timer_data-members.html:237,clear,clear,237,api/master/sofa/html/classsofa_1_1helper_1_1_timer_data-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_timer_data-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > > Member List . This is the complete list of members for sofa::helper::WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >, including all inherited members. back()sofa::helper::WriteAccessorVector< VectorLikeType >inline; back() constsofa::helper::WriteAccessorVector< VectorLikeType >inline; begin() constsofa::helper::WriteAccessorVector< VectorLikeType >inline; begin()sofa::helper::WriteAccessorVector< VectorLikeType >inline; clear()sofa::helper::WriteAccessorVector< VectorLikeType >inline; const_container_type typedefsofa::helper::WriteAccessorVector< VectorLikeType >; const_iterator typedefsofa::helper::WriteAccessorVector< VectorLikeType >; const_reference typedefsofa::helper::WriteAccessorVector< VectorLikeType >; container_type typedefsofa::helper::WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >; emplace_back(Args &&... args)sofa::helper::WriteAccessorVector< VectorLikeType >inline; empty() constsofa::helper::WriteAccessorVector< VectorLikeType >inline; end() constsofa::helper::WriteAccessorVector< VectorLikeType >inline; end()sofa::helper::WriteAccessorVector< VectorLikeType >inline; erase(iterator pos)sofa::helper::WriteAccessorVector< VectorLikeType >inline; erase(const_iterator pos)sofa::helper::WriteAccessorVector< VectorLikeType >inline; front()sofa::helper::WriteAccessorVector< VectorLikeType >inline; front() constsofa::helper::WriteAccessorVector< VectorLikeType >inline; Inherit typedefsofa::helper::WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >; insert(const_iterator pos, const VectorLikeType &value)sofa::helper::WriteAccessorVector< VectorLikeType >inline; iterator ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6dcf90292ffb456668b7ef670f29264b.html:705,clear,clear,705,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6dcf90292ffb456668b7ef670f29264b.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6dcf90292ffb456668b7ef670f29264b.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::WriteAccessorVector< T > Member List . This is the complete list of members for sofa::helper::WriteAccessorVector< T >, including all inherited members. back()sofa::helper::WriteAccessorVector< T >inline; back() constsofa::helper::WriteAccessorVector< T >inline; begin() constsofa::helper::WriteAccessorVector< T >inline; begin()sofa::helper::WriteAccessorVector< T >inline; clear()sofa::helper::WriteAccessorVector< T >inline; const_container_type typedefsofa::helper::WriteAccessorVector< T >; const_iterator typedefsofa::helper::WriteAccessorVector< T >; const_reference typedefsofa::helper::WriteAccessorVector< T >; container_type typedefsofa::helper::WriteAccessorVector< T >; emplace_back(Args &&... args)sofa::helper::WriteAccessorVector< T >inline; empty() constsofa::helper::WriteAccessorVector< T >inline; end() constsofa::helper::WriteAccessorVector< T >inline; end()sofa::helper::WriteAccessorVector< T >inline; erase(iterator pos)sofa::helper::WriteAccessorVector< T >inline; erase(const_iterator pos)sofa::helper::WriteAccessorVector< T >inline; front()sofa::helper::WriteAccessorVector< T >inline; front() constsofa::helper::WriteAccessorVector< T >inline; insert(const_iterator pos, const T &value)sofa::helper::WriteAccessorVector< T >inline; iterator typedefsofa::helper::WriteAccessorVector< T >; operator const_container_type() constsofa::helper::WriteAccessorVector< T >inline; operator container_type()sofa::helper::WriteAccessorVector< T >inline; operator*()sofa::helper::WriteAccessorVector< T >inline; operator*() constsofa::helper::WriteAccessorVector< T >inline; operator->()sofa::helper::WriteAccessorVector< T >inline; operator->() constsofa::helper::WriteAccessorVector< T >inline; operator[](Size pos)sofa::helper::WriteAccessorVector< T >inline; operator[](Size pos) constsofa::helper::WriteAccessorVector< T >inline; pop_back()sofa::helper::WriteAccesso",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector-members.html:489,clear,clear,489,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > > Member List . This is the complete list of members for sofa::helper::WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >, including all inherited members. back()sofa::helper::WriteAccessorVector< VectorLikeType >inline; back() constsofa::helper::WriteAccessorVector< VectorLikeType >inline; begin() constsofa::helper::WriteAccessorVector< VectorLikeType >inline; begin()sofa::helper::WriteAccessorVector< VectorLikeType >inline; clear()sofa::helper::WriteAccessorVector< VectorLikeType >inline; const_container_type typedefsofa::helper::WriteAccessorVector< VectorLikeType >; const_iterator typedefsofa::helper::WriteAccessorVector< VectorLikeType >; const_reference typedefsofa::helper::WriteAccessorVector< VectorLikeType >; container_type typedefsofa::helper::WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >; emplace_back(Args &&... args)sofa::helper::WriteAccessorVector< VectorLikeType >inline; empty() constsofa::helper::WriteAccessorVector< VectorLikeType >inline; end() constsofa::helper::WriteAccessorVector< VectorLikeType >inline; end()sofa::helper::WriteAccessorVector< VectorLikeType >inline; erase(iterator pos)sofa::helper::WriteAccessorVector< VectorLikeType >inline; erase(const_iterator pos)sofa::helper::WriteAccessorVector< VectorLikeType >inline; front()sofa::helper::WriteAccessorVector< VectorLikeType >inline; front() constsofa::helper::WriteAccessorVector< VectorLikeType >inline; Inherit typedefsofa::helper::WriteOnlyAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >; insert(const_iterator pos, const VectorLikeType &value)sofa::helper::WriteAccessorVector< VectorLikeType >i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_011420d37b4786f4786be62ecee28766b4.html:713,clear,clear,713,api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_011420d37b4786f4786be62ecee28766b4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_only_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_011420d37b4786f4786be62ecee28766b4.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::MessageDispatcher Member List . This is the complete list of members for sofa::helper::logging::MessageDispatcher, including all inherited members. addHandler(MessageHandler *o)sofa::helper::logging::MessageDispatcherstatic; advice(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; clearHandlers()sofa::helper::logging::MessageDispatcherstatic; deprecated(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; error(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; fatal(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; getHandlers()sofa::helper::logging::MessageDispatcherstatic; info(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; log(Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic; null()sofa::helper::logging::MessageDispatcherinlinestatic; process(sofa::helper::logging::Message &m)sofa::helper::logging::MessageDispatcherstatic; rmHandler(MessageHandler *o)sofa::helper::logging::MessageDispatcherstatic; warning(Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::MessageDispatcherstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher-members.html:505,clear,clearHandlers,505,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher-members.html,1,['clear'],['clearHandlers']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::MessageDispatcherImpl Member List . This is the complete list of members for sofa::helper::logging::MessageDispatcherImpl, including all inherited members. addHandler(MessageHandler *o)sofa::helper::logging::MessageDispatcherImplinline; clearHandlers()sofa::helper::logging::MessageDispatcherImplinline; getHandlers()sofa::helper::logging::MessageDispatcherImplinline; getMutex()sofa::helper::logging::MessageDispatcherImplinline; m_messageHandlerssofa::helper::logging::MessageDispatcherImpl; m_mutexsofa::helper::logging::MessageDispatcherImpl; process(sofa::helper::logging::Message &m)sofa::helper::logging::MessageDispatcherImplinline; rmHandler(MessageHandler *o)sofa::helper::logging::MessageDispatcherImplinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_impl-members.html:360,clear,clearHandlers,360,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_impl-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_impl-members.html,1,['clear'],['clearHandlers']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy > Member List . This is the complete list of members for sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >, including all inherited members. CircularQueue()sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >; isEmpty() constsofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >; isFull() constsofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >; pop(T &item, bool clear=true)sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >; pop(OutputIterator out, unsigned maxsize, bool clear=true)sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >; push(const T &item)sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >; size() constsofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >; skip(unsigned maxsize, bool clear=true)sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >; ~CircularQueue()sofa::helper::system::thread::CircularQueue< T, StoragePolicy, ThreadAccessPolicy >. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue-members.html:674,clear,clear,674,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_circular_queue-members.html,3,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::thread::ManyThreadsPerEnd Member List . This is the complete list of members for sofa::helper::system::thread::ManyThreadsPerEnd, including all inherited members. AtomicInt typedefsofa::helper::system::thread::ManyThreadsPerEndprotected; headsofa::helper::system::thread::ManyThreadsPerEndprotected; init(AtomicInt array[], int maxCapacity)sofa::helper::system::thread::ManyThreadsPerEndinlineprotected; isEmpty(unsigned maxSize) constsofa::helper::system::thread::ManyThreadsPerEndinlineprotected; isFull(unsigned maxSize) constsofa::helper::system::thread::ManyThreadsPerEndinlineprotected; ManyThreadsPerEnd()sofa::helper::system::thread::ManyThreadsPerEndinlineprotected; pop(AtomicInt array[], int maxSize, int maxCapacity, AtomicInt &item, bool clear=true)sofa::helper::system::thread::ManyThreadsPerEndinlineprotected; pop(AtomicInt array[], int maxSize, int maxCapacity, OutputIterator out, unsigned outmaxsize, bool clear=true)sofa::helper::system::thread::ManyThreadsPerEndprotected; push(AtomicInt array[], int maxSize, int maxCapacity, const AtomicInt &item)sofa::helper::system::thread::ManyThreadsPerEndinlineprotected; size(unsigned maxSize) constsofa::helper::system::thread::ManyThreadsPerEndinlineprotected; skip(AtomicInt array[], int maxSize, int maxCapacity, unsigned outmaxsize, bool clear=true)sofa::helper::system::thread::ManyThreadsPerEndinlineprotected; tailsofa::helper::system::thread::ManyThreadsPerEndprotected. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end-members.html:873,clear,clear,873,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_many_threads_per_end-members.html,3,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::system::thread::OneThreadPerEnd Member List . This is the complete list of members for sofa::helper::system::thread::OneThreadPerEnd, including all inherited members. headsofa::helper::system::thread::OneThreadPerEndprotected; init(T array[], unsigned maxCapacity)sofa::helper::system::thread::OneThreadPerEndprotected; isEmpty(unsigned maxSize) constsofa::helper::system::thread::OneThreadPerEndinlineprotected; isFull(unsigned maxSize) constsofa::helper::system::thread::OneThreadPerEndinlineprotected; OneThreadPerEnd()sofa::helper::system::thread::OneThreadPerEndinlineprotected; pop(T array[], unsigned maxSize, unsigned maxCapacity, T &item, bool clear=true)sofa::helper::system::thread::OneThreadPerEndprotected; pop(T array[], unsigned maxSize, unsigned maxCapacity, OutputIterator out, unsigned outmaxsize, bool clear=true)sofa::helper::system::thread::OneThreadPerEndprotected; push(T array[], unsigned maxSize, unsigned maxCapacity, const T &item)sofa::helper::system::thread::OneThreadPerEndprotected; size(unsigned maxSize) constsofa::helper::system::thread::OneThreadPerEndinlineprotected; skip(T array[], unsigned maxSize, unsigned maxCapacity, unsigned outmaxsize, bool clear=true)sofa::helper::system::thread::OneThreadPerEndprotected; tailsofa::helper::system::thread::OneThreadPerEndprotected. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_one_thread_per_end-members.html:767,clear,clear,767,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_one_thread_per_end-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_one_thread_per_end-members.html,3,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::visual::DrawTool Member List . This is the complete list of members for sofa::helper::visual::DrawTool, including all inherited members. clear()sofa::helper::visual::DrawToolinlinevirtual; disableBlending()=0sofa::helper::visual::DrawToolpure virtual; disableDepthTest()=0sofa::helper::visual::DrawToolpure virtual; disableLighting()=0sofa::helper::visual::DrawToolpure virtual; disablePolygonOffset()=0sofa::helper::visual::DrawToolpure virtual; draw3DText(const Vec3 &p, float scale, const RGBAColor &color, const char *text)=0sofa::helper::visual::DrawToolpure virtual; draw3DText_Indices(const std::vector< Vec3 > &positions, float scale, const RGBAColor &color)=0sofa::helper::visual::DrawToolpure virtual; drawArrow(const Vec3 &p1, const Vec3 &p2, float radius, const RGBAColor &color, int subd=16)=0sofa::helper::visual::DrawToolpure virtual; drawArrow(const Vec3 &p1, const Vec3 &p2, float radius, float coneLength, const RGBAColor &color, int subd=16)=0sofa::helper::visual::DrawToolpure virtual; drawArrow(const Vec3 &p1, const Vec3 &p2, float radius, float coneLength, float coneRadius, const RGBAColor &color, int subd=16)=0sofa::helper::visual::DrawToolpure virtual; drawBoundingBox(const Vec3 &min, const Vec3 &max, float size=1.0)=0sofa::helper::visual::DrawToolpure virtual; drawCapsule(const Vec3 &p1, const Vec3 &p2, float radius, const RGBAColor &color, int subd=16)=0sofa::helper::visual::DrawToolpure virtual; drawCircle(float radius, float lineThickness, int resolution, const RGBAColor &color)=0sofa::helper::visual::DrawToolpure virtual; drawCone(const Vec3 &p1, const Vec3 &p2, float radius1, float radius2, const RGBAColor &color, int subd=16)=0sofa::helper::visual::DrawToolpure virtual; drawCross(const Vec3 &p, float length, const RGBAColor &color)=0sofa::helper::visual::DrawToolpure virtual; drawCube(const float &radius, const RGBAColor &color, const int ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool-members.html:251,clear,clear,251,api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::matrix_bloc_traits< T, IndexType > Member List . This is the complete list of members for sofa::linearalgebra::matrix_bloc_traits< T, IndexType >, including all inherited members. Block typedefsofa::linearalgebra::matrix_bloc_traits< T, IndexType >; BlockTranspose typedefsofa::linearalgebra::matrix_bloc_traits< T, IndexType >; clear(Block &b)sofa::linearalgebra::matrix_bloc_traits< T, IndexType >inlinestatic; empty(const Block &b)sofa::linearalgebra::matrix_bloc_traits< T, IndexType >inlinestatic; getElementType()sofa::linearalgebra::matrix_bloc_traits< T, IndexType >inlinestatic; invert(Block &result, const Block &b)sofa::linearalgebra::matrix_bloc_traits< T, IndexType >inlinestatic; NC enum valuesofa::linearalgebra::matrix_bloc_traits< T, IndexType >; NL enum valuesofa::linearalgebra::matrix_bloc_traits< T, IndexType >; Real typedefsofa::linearalgebra::matrix_bloc_traits< T, IndexType >; split_col_index(IndexType &index, IndexType &modulo)sofa::linearalgebra::matrix_bloc_traits< T, IndexType >inlinestatic; split_row_index(IndexType &index, IndexType &modulo)sofa::linearalgebra::matrix_bloc_traits< T, IndexType >inlinestatic; subBlock(const Block &b, IndexType row, IndexType col, TSubBlock &subBlock)sofa::linearalgebra::matrix_bloc_traits< T, IndexType >inlinestatic; v(Block &b, IndexType row, IndexType col)sofa::linearalgebra::matrix_bloc_traits< T, IndexType >inlinestatic; v(const Block &b, IndexType row, IndexType col)sofa::linearalgebra::matrix_bloc_traits< T, IndexType >inlinestatic; vadd(Block &b, int row, int col, Real val)sofa::linearalgebra::matrix_bloc_traits< T, IndexType >inlinestatic; vset(Block &b, int row, int col, Real val)sofa::linearalgebra::matrix_bloc_traits< T, IndexType >inlinestatic. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits-members.html:450,clear,clear,450,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::linearalgebra::matrix_bloc_traits< int, IndexType > Member List . This is the complete list of members for sofa::linearalgebra::matrix_bloc_traits< int, IndexType >, including all inherited members. Block typedefsofa::linearalgebra::matrix_bloc_traits< int, IndexType >; BlockTranspose typedefsofa::linearalgebra::matrix_bloc_traits< int, IndexType >; clear(Block &b)sofa::linearalgebra::matrix_bloc_traits< int, IndexType >inlinestatic; empty(const Block &b)sofa::linearalgebra::matrix_bloc_traits< int, IndexType >inlinestatic; getElementType()sofa::linearalgebra::matrix_bloc_traits< int, IndexType >inlinestatic; invert(Block &result, const Block &b)sofa::linearalgebra::matrix_bloc_traits< int, IndexType >inlinestatic; Name()sofa::linearalgebra::matrix_bloc_traits< int, IndexType >inlinestatic; NC enum valuesofa::linearalgebra::matrix_bloc_traits< int, IndexType >; NL enum valuesofa::linearalgebra::matrix_bloc_traits< int, IndexType >; Real typedefsofa::linearalgebra::matrix_bloc_traits< int, IndexType >; split_col_index(int &index, int &modulo)sofa::linearalgebra::matrix_bloc_traits< int, IndexType >inlinestatic; split_row_index(int &index, int &modulo)sofa::linearalgebra::matrix_bloc_traits< int, IndexType >inlinestatic; subBlock(const Block &b, IndexType row, IndexType col, TSubBlock &subBlock)sofa::linearalgebra::matrix_bloc_traits< int, IndexType >inlinestatic; v(Block &b, int, int)sofa::linearalgebra::matrix_bloc_traits< int, IndexType >inlinestatic; v(const Block &b, int, int)sofa::linearalgebra::matrix_bloc_traits< int, IndexType >inlinestatic; vadd(Block &b, int, int, Real val)sofa::linearalgebra::matrix_bloc_traits< int, IndexType >inlinestatic; vset(Block &b, int, int, Real val)sofa::linearalgebra::matrix_bloc_traits< int, IndexType >inlinestatic. Generated on Mon Nov 11 2024 03:32:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01int_00_01_index_type_01_4-members.html:458,clear,clear,458,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01int_00_01_index_type_01_4-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01int_00_01_index_type_01_4-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::MainTaskSchedulerRegistry Member List . This is the complete list of members for sofa::simulation::MainTaskSchedulerRegistry, including all inherited members. addTaskSchedulerToRegistry(TaskScheduler *taskScheduler, const std::string &taskSchedulerName)sofa::simulation::MainTaskSchedulerRegistrystatic; clear()sofa::simulation::MainTaskSchedulerRegistrystatic; getLastInserted()sofa::simulation::MainTaskSchedulerRegistrystatic; getTaskScheduler(const std::string &taskSchedulerName)sofa::simulation::MainTaskSchedulerRegistrystatic; hasScheduler(const std::string &taskSchedulerName)sofa::simulation::MainTaskSchedulerRegistrystatic. Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry-members.html:422,clear,clear,422,api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SceneCheckMainRegistry Member List . This is the complete list of members for sofa::simulation::SceneCheckMainRegistry, including all inherited members. addToRegistry(const SceneCheck::SPtr &sceneCheck)sofa::simulation::SceneCheckMainRegistrystatic; clearRegistry()sofa::simulation::SceneCheckMainRegistrystatic; getRegisteredSceneChecks()sofa::simulation::SceneCheckMainRegistrystatic; removeFromRegistry(const SceneCheck::SPtr &sceneCheck)sofa::simulation::SceneCheckMainRegistrystatic. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_main_registry-members.html:368,clear,clearRegistry,368,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_main_registry-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_main_registry-members.html,1,['clear'],['clearRegistry']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::SceneCheckRegistry Member List . This is the complete list of members for sofa::simulation::SceneCheckRegistry, including all inherited members. addToRegistry(const SceneCheck::SPtr &sceneCheck)sofa::simulation::SceneCheckRegistry; clearRegistry()sofa::simulation::SceneCheckRegistry; getRegisteredSceneChecks() constsofa::simulation::SceneCheckRegistry; removeFromRegistry(const SceneCheck::SPtr &sceneCheck)sofa::simulation::SceneCheckRegistry. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_registry-members.html:350,clear,clearRegistry,350,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_registry-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_registry-members.html,1,['clear'],['clearRegistry']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::TaskSchedulerRegistry Member List . This is the complete list of members for sofa::simulation::TaskSchedulerRegistry, including all inherited members. addTaskSchedulerToRegistry(TaskScheduler *taskScheduler, const std::string &taskSchedulerName)sofa::simulation::TaskSchedulerRegistry; clear()sofa::simulation::TaskSchedulerRegistry; getLastInserted() constsofa::simulation::TaskSchedulerRegistry; getTaskScheduler(const std::string &taskSchedulerName) constsofa::simulation::TaskSchedulerRegistry; hasScheduler(const std::string &taskSchedulerName) constsofa::simulation::TaskSchedulerRegistry; m_lastInsertedsofa::simulation::TaskSchedulerRegistryprotected; m_schedulerssofa::simulation::TaskSchedulerRegistryprotected; ~TaskSchedulerRegistry()sofa::simulation::TaskSchedulerRegistry. Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry-members.html:404,clear,clear,404,api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::simulation::common::MechanicalOperations Member List . This is the complete list of members for sofa::simulation::common::MechanicalOperations, including all inherited members. accFromF(core::MultiVecDerivId a, core::ConstMultiVecDerivId f)sofa::simulation::common::MechanicalOperations; addMBK_ToMatrix(const sofa::core::behavior::MultiMatrixAccessor *matrix, SReal mFact, SReal bFact, SReal kFact)sofa::simulation::common::MechanicalOperations; addMBKdx(core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; addMBKv(core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; addMdx(core::MultiVecDerivId res, core::MultiVecDerivId dx, SReal factor=1.0)sofa::simulation::common::MechanicalOperations; addSeparateGravity(SReal dt, core::MultiVecDerivId result=core::VecDerivId::velocity())sofa::simulation::common::MechanicalOperations; baseVector2MultiVector(const linearalgebra::BaseVector *src, core::MultiVecId dest, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::simulation::common::MechanicalOperations; bFactsofa::simulation::common::MechanicalOperations; computeAcc(SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; computeContactAcc(SReal t, core::MultiVecDerivId a, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; computeContactDf(core::MultiVecDerivId df)sofa::simulation::common::MechanicalOperations; computeContactForce(core::MultiVecDerivId result)sofa::simulation::common::MechanicalOperations; computeDf(core::MultiVecDerivId df, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; computeDfV(core::MultiVecDerivId df, bool clear=true",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html:620,clear,clear,620,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html,2,['clear'],['clear']
Usability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::type::Frame Member List . This is the complete list of members for sofa::type::Frame, including all inherited members. clear()sofa::type::Frame; Frame(const Vec3 &origin, const Mat33 &matrix)sofa::type::Frame; Frame(const Vec3 &origin, const Quat &orientation, const Vec3 &scale=Vec3(1_sreal, 1_sreal, 1_sreal))sofa::type::Frame; Frame(const Vec3 &origin)sofa::type::Frame; Frame()sofa::type::Frame; getBasis()sofa::type::Frame; getBasis() constsofa::type::Frame; getOrigin()sofa::type::Frame; getOrigin() constsofa::type::Frame; identity()sofa::type::Framestatic; inversed() constsofa::type::Frame; Mat33 typedefsofa::type::Frame; mult(const Frame &c) constsofa::type::Frame; multRight(const Frame &c)sofa::type::Frame; operator<<(std::ostream &out, const Frame &c)sofa::type::Framefriend; projectPoint(const V &v) constsofa::type::Frameinline; projectVector(const V &v) constsofa::type::Frameinline; Quat typedefsofa::type::Frame; setBasis(const Mat33 &m)sofa::type::Frame; setOrigin(const Vec3 &origin)sofa::type::Frame; setTransform(const Vec3 &origin, const Quat &orientation, const Vec3 &scale)sofa::type::Frame; writeOpenGlMatrix(float *m) constsofa::type::Frame; writeOpenGlMatrix(double *m) constsofa::type::Frame. Generated on Mon Nov 11 2024 03:36:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_frame-members.html:225,clear,clear,225,api/master/sofa/html/classsofa_1_1type_1_1_frame-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_frame-members.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions |; Variables . sofa Namespace Reference . Namespaces;  collision_test;  ;  component;  ;  core;  ;  defaulttype;  ;  framework;  ;  geometry;  ;  gl;  Forward declaration. ;  ;  gui;  ;  helper;  ;  linearalgebra;  ;  mapping_test;  ;  simpleapi;  ;  simulation;  ;  testing;  ;  topology;  ;  type;  for std::pair ;  . Classes; class  TestDataEngine;  ; struct  DataEngine_test;  Helper for writing DataEngine tests. More...;  ; struct  MultiMapping_test;  Base class for the MultiMapping tests, directly adapted from Mapping_test. More...;  ; struct  AffinePatch_sofa_test;  ; struct  CylinderTractionStruct;  Structure which contains the nodes and the pointers useful for the cylindertraction test. More...;  ; struct  LinearElasticity_test;  ; struct  ForceField_test;  Helper for writing ForceField tests. The constructor creates a root node and adds it a State and a ForceField (of the parameter type of this template class). Pointers to node, state and force are available. Deriving the ForceField test from this class makes it easy to write: just call function run_test with positions, velocities and the corresponding expected forces. This function automatically checks not only the forces (function addForce), but also the stiffness (methods addDForce and addKToMatrix), using finite differences. More...;  ; struct  PatchTestStruct;  Structure which contains the nodes and the pointers useful for the patch test. More...;  ; class  TemplateAliasTest;  ; struct  AdvancedTimerTest;  ; struct  DefaultAnimationLoop_test;  . Typedefs; typedef Types< Vec3Types > DataTypes;  ; typedef component::statecontainer::MechanicalObject< defaulttype::Vec3Types > MechanicalObject3;  ; template<typename DataTypes > ; using Coord_t = typename DataTypes::Coord;  ; template<typename DataTypes > ; using Real_t = typename DataTypes::Real;  ; tem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html:396,simpl,simpleapi,396,api/master/sofa/html/namespacesofa.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa.html,1,['simpl'],['simpleapi']
Usability,"﻿. SOFA API: sofa::LinearElasticity_test< _DataTypes > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::LinearElasticity_test< _DataTypes > Struct Template Reference . Inheritance diagram for sofa::LinearElasticity_test< _DataTypes >:. [legend]; Detailed Description; template<typename _DataTypes>; struct sofa::LinearElasticity_test< _DataTypes >; Test force fields implementing linear elasticity on tetrahedral mesh. Implement traction applied on the top part of a cylinder and test that the deformation is simply related with the Young Modulus and Poisson Ratio of the isotropc linear elastic material . Public Attributes; simulation::Simulation * simulation;  Simulation. More...;  ; CylinderTractionStruct< DataTypes > tractionStruct;  struct with the pointer of the main components More...;  ; size_t vIndex;  index of the vertex used to compute the compute the deformation More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions; void SetUp () override;  ; ForceFieldSPtr addTetrahedralLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; ForceFieldSPtr addTetrahedralCorotationalFEMLinearElastic (simulation::Node::SPtr root, double youngModulus, double poissonRatio);  ; bool testLinearElasticityInTraction (LinearElasticityFF createForceField);  ; void TearDown () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html:637,simpl,simply,637,api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_linear_elasticity__test.html,1,['simpl'],['simply']
Usability,"﻿. SOFA API: sofa::component::animationloop::MultiTagAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::animationloop::MultiTagAnimationLoop Class Reference . #include <MultiTagAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::MultiTagAnimationLoop:. [legend]; Detailed Description; Simple animation loop that given a list of tags, animate the graph one tag after another. . Public Member Functions;  SOFA_CLASS (MultiTagAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ;  MultiTagAnimationLoop ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void clear ();  ;  ~MultiTagAnimationLoop () override;  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:797,clear,clear,797,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM Class Reference . #include <CollisionPM.h>. Classes; struct  CollModID;  . Public Member Functions;  CollidingPM ();  ; void add (Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void add (core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod);  ; void remove (int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void clear ();  ; void intersect (core::collision::NarrowPhaseDetection *phase);  . Constructor details. ◆ CollidingPM(). sofa::component::collision::detection::algorithm::CollidingPM::CollidingPM ; (; ). inline . Function details. ◆ add() [1/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; core::CollisionModel * ; cm, . sofa::core::collision::Intersection * ; interMehtod . ). inline . ◆ add() [2/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; Index ; a, . Index ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . ◆ clear(). void sofa::component::collision::detection::algorithm::CollidingPM::clear ; (; ). inline . ◆ intersect(). void sofa::component::collision::detection::algorithm::CollidingPM::intersect ; (; core::collision::NarrowPhaseDetection * ; phase). inline . ◆ remove(). void sofa::component::collision::detection::algorithm::CollidingPM::remove ; (; int ; a, . int ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPM; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html:746,clear,clear,746,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html,3,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DSAPBox Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DSAPBox Class Reference . #include <DSAPBox.h>; Detailed Description; SAPBox is a simple bounding box. It contains a Cube which contains only one final CollisionElement and pointers to min and max EndPoints. min and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:364,simpl,simple,364,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,1,['simpl'],['simple']
Usability,"﻿. SOFA API: sofa::component::collision::detection::algorithm::ISAPBox Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::ISAPBox Class Reference . #include <IncrSAP.h>; Detailed Description; ISAPBox is a simple bounding box. It contains a Cube which contains only one final CollisionElement and pointers to min and max EndPoints along the three dimensions. min and max end points are respectively min and max coordinates of the cube on a coordinate axis. The between end points (d_min, d_max) and the field cube is that cube is always updated whereas d_min and d_max are stored values of the cube end points at previous time step. . Public Attributes; collision::geometry::Cube cube;  ; EndPointID * _min [3];  ; EndPointID * _max [3];  . Static Public Attributes; static double tolerance = (double)(1e-7);  . Public Member Functions;  ISAPBox ();  ;  ISAPBox (collision::geometry::Cube c);  ; bool endPointsOverlap (const ISAPBox &other, int axis) const;  ; bool overlaps (const ISAPBox &other, double alarmDist) const;  ; double squaredDistance (const ISAPBox &other) const;  ; void show () const;  ; void showEndPoints () const;  ; bool moving (int axis, double alarmDist) const;  ; bool moving (double alarmDist) const;  ; void init (int boxID, EndPointID **endPts);  ; void update (double alarmDist);  ; void updatedMin (int dim, EndPointID &end_point, double alarmDist) const;  ; void updatedMax (int dim, EndPointID &end_point, double alarmDist) const;  ; void updateMin (int dim, double alarmDist);  ; void updateMax (int dim, double alarmDist);  ; bool minMoving (int axis, double alarmDist) const;  ; bool maxMoving (int axis, double alarmDist) const;  ; const core::CollisionElementIterator finalElement () const;  ; EndPointID & min (int dim);  ; const EndPointID & min (int dim) const;  ; EndPointID",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_i_s_a_p_box.html:393,simpl,simple,393,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_i_s_a_p_box.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_i_s_a_p_box.html,1,['simpl'],['simple']
Usability,"﻿. SOFA API: sofa::component::constraint::lagrangian::solver::ConstraintProblem Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::component::constraint::lagrangian::solver::ConstraintProblem Class Referenceabstract . #include <ConstraintSolverImpl.h>. Inheritance diagram for sofa::component::constraint::lagrangian::solver::ConstraintProblem:. [legend]. Public Attributes; sofa::linearalgebra::LPtrFullMatrix< SReal > W;  ; sofa::linearalgebra::FullVector< SReal > dFree;  ; sofa::linearalgebra::FullVector< SReal > f;  ; SReal tolerance;  ; int maxIterations;  . Protected Attributes; int dimension;  ; unsigned int problemId;  . Public Member Functions;  ConstraintProblem ();  ; virtual ~ConstraintProblem ();  ; virtual void clear (int nbConstraints);  ; int getDimension ();  ; SReal ** getW ();  ; SReal * getDfree ();  ; SReal * getF ();  ; virtual void solveTimed (SReal tolerance, int maxIt, SReal timeout)=0;  ; unsigned int getProblemId ();  . Attribute details. ◆ dFree. sofa::linearalgebra::FullVector<SReal> sofa::component::constraint::lagrangian::solver::ConstraintProblem::dFree. ◆ dimension. int sofa::component::constraint::lagrangian::solver::ConstraintProblem::dimension. protected . ◆ f. sofa::linearalgebra::FullVector<SReal> sofa::component::constraint::lagrangian::solver::ConstraintProblem::f. ◆ maxIterations. int sofa::component::constraint::lagrangian::solver::ConstraintProblem::maxIterations. ◆ problemId. unsigned int sofa::component::constraint::lagrangian::solver::ConstraintProblem::problemId. protected . ◆ tolerance. SReal sofa::component::constraint::lagrangian::solver::ConstraintProblem::tolerance. ◆ W. sofa::linearalgebra::LPtrFullMatrix<SReal> sofa::component::constraint::lagrangian::solver::ConstraintProblem::W. Constructor details. ◆ ConstraintProblem(). sofa::component::constraint::lagrangian::solver::Constrai",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html:871,clear,clear,871,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_problem.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::component::constraint::lagrangian::solver::LCPConstraintProblem Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::constraint::lagrangian::solver::LCPConstraintProblem Class Reference . #include <LCPConstraintSolver.h>. Inheritance diagram for sofa::component::constraint::lagrangian::solver::LCPConstraintProblem:. [legend]. Public Attributes; SReal mu;  ;  Public Attributes inherited from sofa::component::constraint::lagrangian::solver::ConstraintProblem; sofa::linearalgebra::LPtrFullMatrix< SReal > W;  ; sofa::linearalgebra::FullVector< SReal > dFree;  ; sofa::linearalgebra::FullVector< SReal > f;  ; SReal tolerance;  ; int maxIterations;  . Public Member Functions; void solveTimed (SReal tolerance, int maxIt, SReal timeout) override;  ;  Public Member Functions inherited from sofa::component::constraint::lagrangian::solver::ConstraintProblem;  ConstraintProblem ();  ; virtual ~ConstraintProblem ();  ; virtual void clear (int nbConstraints);  ; int getDimension ();  ; SReal ** getW ();  ; SReal * getDfree ();  ; SReal * getF ();  ; unsigned int getProblemId ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::component::constraint::lagrangian::solver::ConstraintProblem; int dimension;  ; unsigned int problemId;  . Attribute details. ◆ mu. SReal sofa::component::constraint::lagrangian::solver::LCPConstraintProblem::mu. Function details. ◆ solveTimed(). void sofa::component::constraint::lagrangian::solver::LCPConstraintProblem::solveTimed ; (; SReal ; tolerance, . int ; maxIt, . SReal ; timeout . ). overridevirtual . Implements sofa::component::constraint::lagrangian::solver::ConstraintProblem. sofacomponentconstraintlagrangiansolverLCPConstraintProblem; Generated on Mon Nov 11 2024 02:36:36 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_problem.html:1076,clear,clear,1076,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_problem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_problem.html,1,['clear'],['clear']
Usability,﻿. SOFA API: sofa::component::haptics Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::component::haptics Namespace Reference . Classes; class  ForceFeedback;  Base class implementing forcefeedback as a force field. More...;  ; class  LCPForceFeedback;  ; class  MechanicalStateForceFeedback;  ; class  NullForceFeedback;  Null force feedback for haptic feedback device. More...;  ; class  NullForceFeedbackT;  Null force feedback for haptic feedback device. More...;  . Functions; void registerLCPForceFeedback (sofa::core::ObjectFactory *factory);  ; void registerNullForceFeedback (sofa::core::ObjectFactory *factory);  ; void registerNullForceFeedbackT (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Function Documentation. ◆ getModuleName(). const char * sofa::component::haptics::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::haptics::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_HAPTICS_API void sofa::component::haptics::init ; (; ). ◆ initExternalModule(). void sofa::component::haptics::initExternalModule ; (; ). ◆ registerLCPForceFeedback(). void sofa::component::haptics::registerLCPForceFeedback ; (; sofa::core::ObjectFactory * ; factory). ◆ registerNullForceFeedback(). void sofa::component::haptics::registerNullForceFeedback ; (; sofa::core::ObjectFactory * ; factory). ◆ registerNullForceFeedbackT(). void sofa::component::haptics::registerNullForceFeedbackT ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::haptics::registerObjects ; (; sofa::core::ObjectFactory * ; factory). sofacomponenthaptics; Generated on Mon Nov 11 2024 02:46:05 for SOFA A,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1haptics.html:409,feedback,feedback,409,api/master/sofa/html/namespacesofa_1_1component_1_1haptics.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1haptics.html,4,['feedback'],['feedback']
Usability,"﻿. SOFA API: sofa::component::haptics::NullForceFeedback Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::haptics::NullForceFeedback Class Reference . #include <NullForceFeedback.h>; Null force feedback for haptic feedback device. ; More... Inheritance diagram for sofa::component::haptics::NullForceFeedback:. [legend]; Detailed Description; Null force feedback for haptic feedback device. . Public Member Functions;  SOFA_CLASS (NullForceFeedback, ForceFeedback);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void computeForce (SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz) override;  ; void computeWrench (const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &V_tool_world, sofa::type::SpatialVector< SReal > &W_tool_world) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual void setReferencePosition (sofa::type::Transform< SReal > &referencePosition);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html:302,feedback,feedback,302,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,4,['feedback'],['feedback']
Usability,"﻿. SOFA API: sofa::component::haptics::NullForceFeedbackT< TDataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::haptics::NullForceFeedbackT< TDataTypes > Class Template Reference . #include <NullForceFeedbackT.h>; Null force feedback for haptic feedback device. ; More... Inheritance diagram for sofa::component::haptics::NullForceFeedbackT< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::component::haptics::NullForceFeedbackT< TDataTypes >; Null force feedback for haptic feedback device. . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(NullForceFeedbackT, TDataTypes), MechanicalStateForceFeedback< TDataTypes >);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void computeForce (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz) override;  ; void computeForce (const VecCoord &, VecDeriv &) override;  ; void computeWrench (const sofa::type::Transform< SReal > &, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world) override;  ;  Public Member Functions inherited from sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(MechanicalStateForceFeedback, TDataTypes), ForceFeedback);  ; void setReferencePosition (sofa::type::Transform< SReal > &) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html:351,feedback,feedback,351,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html,4,['feedback'],['feedback']
Usability,﻿. SOFA API: sofa::component::io::mesh::MeshVTKLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::io::mesh::MeshVTKLoader Class Reference . #include <MeshVTKLoader.h>. Inheritance diagram for sofa::component::io::mesh::MeshVTKLoader:. [legend]; Detailed Description; Format doc: http://www.vtk.org/VTK/img/file-formats.pdf http://www.cacr.caltech.edu/~slombey/asci/vtk/vtk_formats.simple.html . Public Attributes; core::objectmodel::BaseData * pointsData;  ; core::objectmodel::BaseData * edgesData;  ; core::objectmodel::BaseData * trianglesData;  ; core::objectmodel::BaseData * quadsData;  ; core::objectmodel::BaseData * tetrasData;  ; core::objectmodel::BaseData * hexasData;  ;  Public Attributes inherited from sofa::core::loader::MeshLoader; Data< type::vector< Vec3 > > d_positions;  Vertices of the mesh loaded. More...;  ; Data< type::vector< Polyline > > d_polylines;  Polylines of the mesh loaded. More...;  ; Data< type::vector< Edge > > d_edges;  Edges of the mesh loaded. More...;  ; Data< type::vector< Triangle > > d_triangles;  Triangles of the mesh loaded. More...;  ; Data< type::vector< Quad > > d_quads;  Quads of the mesh loaded. More...;  ; Data< type::vector< type::vector< Topology::ElemID > > > d_polygons;  Polygons of the mesh loaded. More...;  ; Data< type::vector< HighOrderEdgePosition > > d_highOrderEdgePositions;  High order edge points of the mesh loaded. More...;  ; Data< type::vector< HighOrderTrianglePosition > > d_highOrderTrianglePositions;  High order triangle points of the mesh loaded. More...;  ; Data< type::vector< HighOrderQuadPosition > > d_highOrderQuadPositions;  High order quad points of the mesh loaded. More...;  ; Data< type::vector< Tetrahedron > > d_tetrahedra;  Tetrahedra of the mesh loaded. More...;  ; Data< type::vector< Hexahedron > > d_hexahedra,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html:569,simpl,simple,569,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,1,['simpl'],['simple']
Usability,"﻿. SOFA API: sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes > Class Template Reference . #include <MeshMatrixMass.h>; This component computes the integral of this mass density over the volume of the object geometry. ; More... Inheritance diagram for sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >:. [legend]; Detailed Description; template<class DataTypes, class GeometricalTypes = DataTypes>; class sofa::component::mass::MeshMatrixMass< DataTypes, GeometricalTypes >; This component computes the integral of this mass density over the volume of the object geometry. ; template <class DataTypes, class TMassType>; RemarksSimilar to DiagonalMass which simplifies the Mass Matrix as diagonal. . https://www.sofa-framework.org/community/doc/components/masses/meshmatrixmass/ ; Template Parameters. DataTypestype of the state associated to this mass ; GeometricalTypestype of the geometry, i.e type of the state associated with the topology (if the topology and the mass relates to the same state, this will be the same as DataTypes) . Public Attributes; core::topology::PointData< type::vector< MassType > > d_vertexMass;  Values of the particles masses stored on vertices. More...;  ; core::topology::EdgeData< type::vector< MassType > > d_edgeMass;  Values of the particles masses stored on edges. More...;  ; Data< bool > d_computeMassOnRest;  if true, the mass of every element is computed based on the rest position rather than the position More...;  ; Data< bool > d_showCenterOfGravity;  to display the center of gravity of the system More...;  ; Data< Real > d_showAxisSize;  scale to change the axis size More...;  ; Data< bool > d_lumping;  if mas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:998,simpl,simplifies,998,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['simpl'],['simplifies']
Usability,"﻿. SOFA API: sofa::component::odesolver::forward::CentralDifferenceSolver Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::odesolver::forward::CentralDifferenceSolver Class Reference . #include <CentralDifferenceSolver.h>. Inheritance diagram for sofa::component::odesolver::forward::CentralDifferenceSolver:. [legend]; Detailed Description; Explicit time integrator using central difference (also known as Verlet of Leap-frop).; See alsohttp://www.dynasupport.com/support/tutorial/users.guide/time.integration . http://en.wikipedia.org/wiki/Leapfrog_method . Public Attributes; sofa::core::objectmodel::RenamedData< SReal > f_rayleighMass;  ; Data< SReal > d_rayleighMass;  Rayleigh damping coefficient related to mass. More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Pu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html:647,guid,guide,647,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html,1,['guid'],['guide']
Usability,"﻿. SOFA API: sofa::component::odesolver::forward::EulerExplicitSolver Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; List of all members . sofa::component::odesolver::forward::EulerExplicitSolver Class Reference . #include <EulerExplicitSolver.h>. Inheritance diagram for sofa::component::odesolver::forward::EulerExplicitSolver:. [legend]; Detailed Description; The simplest time integration. Two variants of the Euler solver are available in this component:; forward Euler method, also called explicit Euler method; semi-implicit Euler method, also called semi-explicit Euler method or symplectic Euler. In both variants, acceleration is first computed. The system to compute the acceleration is M * a = f, where M is the mass matrix and f can be a force. In case of a diagonal mass matrix, M is trivially invertible and the acceleration can be computed without a linear solver.; f is accumulated by force fields through the addForce function. Mappings can also contribute by projecting forces of mapped objects. f is computed based on the current state (current velocity and position).; Explicit Euler method: The option ""symplectic"" must be set to false to use this variant. The explicit Euler method produces an approximate discrete solution by iterating x_{n+1} = x_n + v_n * dt v_{n+1} = v_n + a * dt; Semi-implicit Euler method: The option ""symplectic"" must be set to true to use this variant. The semi-implicit Euler method produces an approximate discrete solution by iterating v_{n+1} = v_n + a * dt x_{n+1} = x_n + v_{n+1} * dt; The semi-implicit Euler method is more robust than the standard Euler method. . Public Attributes; Data< bool > d_symplectic;  If true (default), the velocities are updated before the positions and the method is symplectic, more robust. If false, the positions are updated before the velocities (stand",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html:526,simpl,simplest,526,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,1,['simpl'],['simplest']
Usability,"﻿. SOFA API: sofa::component::sceneutility::PauseAnimation Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::sceneutility::PauseAnimation Class Referenceabstract . #include <PauseAnimation.h>. Inheritance diagram for sofa::component::sceneutility::PauseAnimation:. [legend]; Detailed Description; Abstract class defining how to pause the animation. . Protected Attributes; sofa::core::objectmodel::BaseNode * root;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool isPaused ()=0;  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html:489,pause,pause,489,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,1,['pause'],['pause']
Usability,"﻿. SOFA API: sofa::component::sceneutility::PauseAnimationOnEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::sceneutility::PauseAnimationOnEvent Class Reference . #include <PauseAnimationOnEvent.h>. Inheritance diagram for sofa::component::sceneutility::PauseAnimationOnEvent:. [legend]. Public Attributes; bool paused;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PauseAnimationOnEvent, PauseAnimation);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool isPaused () override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::component::sceneutility::PauseAnimation;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; virtual void pause ();  ;  Publi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html:477,pause,paused,477,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,1,['pause'],['paused']
Usability,﻿. SOFA API: sofa::component::solidmechanics::spring Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs |; Functions |; Variables . sofa::component::solidmechanics::spring Namespace Reference . Classes; class  AngularSpringForceField;  This class describes a simple elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  FastTriangularBendingSprings;  ; class  FrameSpringForceFieldInternalData;  ; class  FrameSpringForceField;  ; class  GearSpring;  ; class  GearSpringForceFieldInternalData;  ; class  GearSpringForceField;  ; class  JointSpring;  JOINTSPRING. More...;  ; class  JointSpringForceFieldInternalData;  ; class  JointSpringForceField;  ; class  LinearSpring;  This class contains the description of one linear spring. More...;  ; class  MeshSpringForceField;  ; class  PolynomialRestShapeSpringsForceField;  This class describes a polynomial elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  PolynomialSpringsForceField;  This class describes a polynomial elastic springs ForceField. More...;  ; class  QuadBendingSprings;  ; class  QuadularBendingSprings;  ; class  RegularGridSpringForceField;  ; class  RepulsiveSpringForceField;  ; class  RestShapeSpringsForceField;  This class describes a simple elastic springs ForceField between DOFs positions and rest positions. More...;  ; class  SpringForceFieldInternalData;  This class can be overridden if needed for additional storage within template specializations. More...;  ; class  SpringForceField;  Set of simple springs between particles. More...;  ; class  TriangleBendingSprings;  ; class  TriangularBendingSprings;  ; class  TriangularBiquadraticSpringsForceField;  ; class  TriangularQuadraticSpringsForceField;  ; class  VectorSpringForceField;  . Typedefs; typedef core::topology::BaseMeshTopology::EdgesInTriangle EdgesInTriangle;  ; typedef core::topology::BaseMeshTopology::Quad Qua,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html:323,simpl,simple,323,api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1solidmechanics_1_1spring.html,1,['simpl'],['simple']
Usability,﻿. SOFA API: sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes > Class Template Reference . #include <AngularSpringForceField.h>; This class describes a simple elastic springs ForceField between DOFs positions and rest positions. ; More... Inheritance diagram for sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::spring::AngularSpringForceField< DataTypes >; This class describes a simple elastic springs ForceField between DOFs positions and rest positions. ; Springs are applied to given degrees of freedom between their current positions and their rest shape positions. An external MechanicalState reference can also be passed to the ForceField as rest shape position. . Public Attributes; sofa::core::objectmodel::RenamedData< type::vector< sofa::Index > > indices;  ; sofa::core::objectmodel::RenamedData< VecReal > angularStiffness;  ; sofa::core::objectmodel::RenamedData< VecReal > angularLimit;  ; sofa::core::objectmodel::RenamedData< bool > drawSpring;  ; sofa::core::objectmodel::RenamedData< type::RGBAColor > springColor;  ; Data< type::vector< sofa::Index > > d_indices;  index of nodes controlled by the angular springs More...;  ; Data< VecReal > d_angularStiffness;  angular stiffness for the controlled nodes More...;  ; Data< VecReal > d_angularLimit;  angular limit (max; min) values where the force applies More...;  ; Data< bool > d_drawSpring;  draw Spring More...;  ; Data< type::RGBAColor > d_springColor;  spring color More...;  ; linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real > matS;  ;  Public Attr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html:481,simpl,simple,481,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,2,['simpl'],['simple']
Usability,﻿. SOFA API: sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Protected Attributes |; Static Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes > Class Template Reference . #include <RestShapeSpringsForceField.h>; This class describes a simple elastic springs ForceField between DOFs positions and rest positions. ; More... Inheritance diagram for sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::spring::RestShapeSpringsForceField< DataTypes >; This class describes a simple elastic springs ForceField between DOFs positions and rest positions. ; Springs are applied to given degrees of freedom between their current positions and their rest shape positions. An external MechanicalState reference can also be passed to the ForceField as rest shape position. . Public Attributes; DataSubsetIndex d_points;  points controlled by the rest shape springs More...;  ; Data< VecReal > d_stiffness;  stiffness values between the actual position and the rest shape position More...;  ; Data< VecReal > d_angularStiffness;  angularStiffness assigned when controlling the rotation of the points More...;  ; Data< type::vector< CPos > > d_pivotPoints;  global pivot points used when translations instead of the rigid mass centers More...;  ; Data< VecIndex > d_external_points;  points from the external Mechanical State that define the rest shape springs More...;  ; Data< bool > d_recompute_indices;  Recompute indices (should be false for BBOX) More...;  ; Data< bool > d_drawSpring;  draw Spring More...;  ; Data< sofa::type::RGBAColor > d_springColor;  spring col,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html:549,simpl,simple,549,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,2,['simpl'],['simple']
Usability,"﻿. SOFA API: sofa::component::solidmechanics::spring::SpringForceField< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Static Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; Friends |; List of all members . sofa::component::solidmechanics::spring::SpringForceField< DataTypes > Class Template Reference . #include <SpringForceField.h>; Set of simple springs between particles. ; More... Inheritance diagram for sofa::component::solidmechanics::spring::SpringForceField< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; Set of simple springs between particles. . Classes; class  Loader;  ; struct  SpringForce;  . Public Attributes; Data< float > d_showArrowSize;  size of the axis More...;  ; Data< int > d_drawMode;  The way springs will be drawn: - 0: Line - 1:Cylinder - 2: Arrow. More...;  ; Data< type::vector< SReal > > d_ks;  List of stiffness for the all springs. Must have the same size as indices1 & indices2, or if only one element, it will be applied to all springs. If empty, 0 will be applied everywhere. More...;  ; Data< type::vector< SReal > > d_kd;  List of damping for the all springs. Must have the same size as indices1 & indices2, or if only one element, it will be applied to all springs. If empty, 0 will be applied everywhere. More...;  ; Data< type::vector< Spring > > d_springs;  pairs of indices, stiffness, damping, rest length More...;  ; Data< type::vector< SReal > > d_lengths;  List of lengths to create the springs. Must have the same size as indices1 & indices2, or if only one element, it will be applied to all springs. If empty, 0 will be applied everywhere. More...;  ; Data< type::vector< bool > > d_elongationOnly;  List of boolean stating on the fact that the spring sh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html:531,simpl,simple,531,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,2,['simpl'],['simple']
Usability,﻿. SOFA API: sofa::component::statecontainer Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs |; Functions |; Variables . sofa::component::statecontainer Namespace Reference . Classes; class  MappedObjectInternalData;  This class can be overridden if needed for additional storage within template specializations. More...;  ; class  MappedObject;  ; class  MechanicalObject;  This class can be overridden if needed for additional storage within template specializations. More...;  ; class  MechanicalObjectInternalData;  . Typedefs; typedef std::size_t nat;  . Functions; void registerMechanicalObject (sofa::core::ObjectFactory *factory);  ; void registerMappedObject (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  ; template<class T > ; void clear (T &t);  ; template<> ; void clear (float &t);  ; template<> ; void clear (double &t);  . Variables; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Vec6Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MappedObject< Rigid2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec3Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec2Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec1Types >;  ; template class SOFA_COMPONENT_STATECONTAINER_API MechanicalObject< Vec6T,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html:1095,clear,clear,1095,api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1statecontainer.html,3,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::core Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::core Namespace Reference . Namespaces;  behavior;  For BaseMatrix. ;  ;  collision;  ;  constraintparams;  ;  execparams;  ;  loader;  ;  matrixaccumulator;  ;  mechanicalparams;  ;  objectmodel;  ;  topology;  ;  visual;  . Classes; class  State;  Component storing position and velocity vectors. More...;  ; struct  AccumulationVecId;  Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. More...;  ; class  MappingMatrixAccumulator;  ; class  ListMappingMatrixAccumulator;  ; class  GeometricStiffnessMatrix;  ; class  BaseMapping;  ; class  BaseMatrixAccumulatorComponent;  ; struct  get_base_object_strong;  ; class  BaseState;  Component storing position and velocity vectors. More...;  ; class  BehaviorModel;  Abstract Interface of components defining the behavior of a simulated object. More...;  ; class  CategoryLibrary;  An Generic Category of the Sofa Library. More...;  ; class  BaseCollisionElementIterator;  Base class for reference to an collision element defin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html:867,simpl,simplified,867,api/master/sofa/html/namespacesofa_1_1core.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html,1,['simpl'],['simplified']
Usability,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:669,simpl,simplified,669,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,1,['simpl'],['simplified']
Usability,"﻿. SOFA API: sofa::core::BehaviorModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::BehaviorModel Class Referenceabstract . #include <BehaviorModel.h>; Abstract Interface of components defining the behavior of a simulated object. ; More... Inheritance diagram for sofa::core::BehaviorModel:. [legend]; Detailed Description; Abstract Interface of components defining the behavior of a simulated object. ; This Interface is used by ""black-box"" objects (such as some fluid algorithms) that are present in a SOFA simulation but which do not use the internal behavior components (MechanicalState, ForceField, etc) defined in the sofa::core::behavior namespace.; A BehaviorModel simply has to implement the updatePosition method to compute a new simulation step. . Public Member Functions;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual void updatePosition (SReal dt)=0;  Computation of a new simulation step. More...;  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html:810,simpl,simply,810,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,1,['simpl'],['simply']
Usability,"﻿. SOFA API: sofa::core::ListMatrixAccumulator< TMatrixAccumulator > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::ListMatrixAccumulator< TMatrixAccumulator > Class Template Reference . #include <MatrixAccumulator.h>. Inheritance diagram for sofa::core::ListMatrixAccumulator< TMatrixAccumulator >:. [legend]; Detailed Description; template<class TMatrixAccumulator>; class sofa::core::ListMatrixAccumulator< TMatrixAccumulator >; Composite class of MatrixAccumulatorInterface . Public Member Functions; void push_back (TMatrixAccumulator *m);  ; void remove (TMatrixAccumulator *m);  ; bool empty () const;  ; void clear () override;  ; InternalListMatrixAccumulator::size_type size () const;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, float value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, double value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3f &value) override;  ; void add (sofa::SignedIndex i, sofa::SignedIndex j, const sofa::type::Mat3x3d &value) override;  ; const InternalListMatrixAccumulator & getAccumulators () const;  . Function details. ◆ add() [1/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . const sofa::type::Mat3x3d & ; value . ). inlineoverride . ◆ add() [2/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . const sofa::type::Mat3x3f & ; value . ). inlineoverride . ◆ add() [3/4]. template<class TMatrixAccumulator > . void sofa::core::ListMatrixAccumulator< TMatrixAccumulator >::add ; (; sofa::SignedIndex ; i, . sofa::SignedIndex ; j, . double ; value . ). inlineoverride . ◆ add() [4/4]. template<class TMatrixAccumulator > . void sofa::core::List",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator.html:731,clear,clear,731,api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_list_matrix_accumulator.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::core::MappingMatrixAccumulator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::MappingMatrixAccumulator Class Reference . #include <BaseLocalMappingMatrix.h>. Inheritance diagram for sofa::core::MappingMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, float);  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, double);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; virtual void clear ();  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacoreMappingMatrixAccumulator; Generated on Mon Nov 11 2024 03:13:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping_matrix_accumulator.html:1545,clear,clear,1545,api/master/sofa/html/classsofa_1_1core_1_1_mapping_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping_matrix_accumulator.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::core::SofaLibrary Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::SofaLibrary Class Reference . #include <SofaLibrary.h>; An Generic Library. ; More...; Detailed Description; An Generic Library. ; It reads the content of the Object Factory and builds a library of components sorted inside categories. This Interface is used for the Modeler mainly. . Protected Attributes; VecCategory categories;  ; std::vector< std::string > exampleFiles;  ; unsigned int numComponents;  . Public Member Functions; virtual ~SofaLibrary ();  ; virtual void build (const std::vector< std::string > &examples=std::vector< std::string >());  ; virtual void clear ();  ; std::string getComponentDescription (const std::string &componentName) const;  ; const VecCategory & getCategories () const;  ; const CategoryLibrary * getCategory (const std::string &categoryName) const;  ; const ComponentLibrary * getComponent (const std::string &componentName) const;  ; unsigned int getNumComponents () const;  . Protected Member Functions; virtual CategoryLibrary * createCategory (const std::string &category, unsigned int);  ; virtual void addCategory (CategoryLibrary *);  ; void computeNumComponents ();  . Attribute details. ◆ categories. VecCategory sofa::core::SofaLibrary::categories. protected . ◆ exampleFiles. std::vector< std::string > sofa::core::SofaLibrary::exampleFiles. protected . ◆ numComponents. unsigned int sofa::core::SofaLibrary::numComponents. protected . Constructor details. ◆ ~SofaLibrary(). virtual sofa::core::SofaLibrary::~SofaLibrary ; (; ). inlinevirtual . Function details. ◆ addCategory(). void sofa::core::SofaLibrary::addCategory ; (; CategoryLibrary * ; category). protectedvirtual . ◆ build(). void sofa::core::SofaLibrary::build ; (; const std::vector< std::string > & ; examples = std::vector< std::string >()).",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_sofa_library.html:814,clear,clear,814,api/master/sofa/html/classsofa_1_1core_1_1_sofa_library.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_sofa_library.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::core::behavior::ApplyConstraintCompat Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::behavior::ApplyConstraintCompat Class Reference . #include <MatrixAPICompatibility.h>. Inheritance diagram for sofa::core::behavior::ApplyConstraintCompat:. [legend]; Detailed Description; A fake BaseMatrix redirecting its clearRowCol method to the ZeroDirichletCondition API This class exists only for compatibility reasons. To be removed once the deprecated API applyConstraint is removed . Public Attributes; BaseProjectiveConstraintSet * component { nullptr };  ; sofa::core::behavior::ZeroDirichletCondition * zeroDirichletCondition { nullptr };  . Public Member Functions; Index rowSize () const override;  Number of rows. More...;  ; Index colSize () const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index row, Index col, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clearRowCol (Index i) override;  Reset the value of both row and column i to 0. More...;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html:453,clear,clearRowCol,453,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_apply_constraint_compat.html,1,['clear'],['clearRowCol']
Usability,"﻿. SOFA API: sofa::core::behavior::DampingMatrixAccumulator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::behavior::DampingMatrixAccumulator Class Reference . #include <BaseLocalForceFieldMatrix.h>. Inheritance diagram for sofa::core::behavior::DampingMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, float);  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, double);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; virtual void clear ();  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacorebehaviorDampingMatrixAccumulator; Generated on Mon Nov 11 2024 03:15:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_damping_matrix_accumulator.html:1578,clear,clear,1578,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_damping_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_damping_matrix_accumulator.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::core::behavior::MassMatrix Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::behavior::MassMatrix Class Reference . #include <BaseLocalMassMatrix.h>. Inheritance diagram for sofa::core::behavior::MassMatrix:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, float);  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, double);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; virtual void clear ();  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacorebehaviorMassMatrix; Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix.html:1530,clear,clear,1530,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::core::behavior::MassMatrixAccumulator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::behavior::MassMatrixAccumulator Class Reference . #include <BaseLocalMassMatrix.h>. Inheritance diagram for sofa::core::behavior::MassMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, float);  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, double);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; virtual void clear ();  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacorebehaviorMassMatrixAccumulator; Generated on Mon Nov 11 2024 03:15:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix_accumulator.html:1563,clear,clear,1563,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass_matrix_accumulator.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::core::behavior::MultiMatrix< Parent > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::core::behavior::MultiMatrix< Parent > Class Template Reference . #include <MultiMatrix.h>; Detailed Description; template<class Parent>; class sofa::core::behavior::MultiMatrix< Parent >; Helper class providing a high-level view of underlying linear system matrices.; It is used to convert math-like operations to call to computation methods. . Protected Attributes; Parent * parent { nullptr };  Solver who is using this matrix. More...;  . Public Member Functions;  MultiMatrix (const MultiMatrix< Parent > &)=delete;  Copy-constructor is forbidden. More...;  ;  MultiMatrix (Parent *parent);  ;  ~MultiMatrix ()=default;  ; void clear ();  m = 0 More...;  ; void reset ();  m = 0 More...;  ; void setSystemMBKMatrix (const MechanicalMatrix &m);  ; void solve (MultiVecDerivId solution, MultiVecDerivId rh);  . Friends; std::ostream & operator<< (std::ostream &out, const MultiMatrix< Parent > &m);  . Attribute details. ◆ parent. template<class Parent > . Parent* sofa::core::behavior::MultiMatrix< Parent >::parent { nullptr }. protected . Solver who is using this matrix. . Constructor details. ◆ MultiMatrix() [1/2]. template<class Parent > . sofa::core::behavior::MultiMatrix< Parent >::MultiMatrix ; (; const MultiMatrix< Parent > & ; ). delete . Copy-constructor is forbidden. . ◆ MultiMatrix() [2/2]. template<class Parent > . sofa::core::behavior::MultiMatrix< Parent >::MultiMatrix ; (; Parent * ; parent). inlineexplicit . ◆ ~MultiMatrix(). template<class Parent > . sofa::core::behavior::MultiMatrix< Parent >::~MultiMatrix ; (; ). default . Function details. ◆ clear(). template<class Parent > . void sofa::core::behavior::MultiMatrix< Parent >::clear ; (; ). inline . m = 0 . ◆ reset(). template<class Parent > . void sofa::core::behavior",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_multi_matrix.html:879,clear,clear,879,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_multi_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_multi_matrix.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::core::behavior::StiffnessMatrixAccumulator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::behavior::StiffnessMatrixAccumulator Class Reference . #include <BaseLocalForceFieldMatrix.h>. Inheritance diagram for sofa::core::behavior::StiffnessMatrixAccumulator:. [legend]. Additional Inherited Members;  Public Member Functions inherited from sofa::core::MatrixAccumulatorInterface; virtual ~MatrixAccumulatorInterface ()=default;  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, float);  ; virtual void add (sofa::SignedIndex, sofa::SignedIndex, double);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 1, 1, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value);  ; virtual void add (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value);  ; virtual void clear ();  ; template<sofa::Size L, sofa::Size C, class real > ; void matAdd (sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< L, C, real > &value);  ; virtual void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy >);  . sofacorebehaviorStiffnessMatrixAccumulator; Generated on Mon Nov 11 2024 03:15:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_stiffness_matrix_accumulator.html:1584,clear,clear,1584,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_stiffness_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_stiffness_matrix_accumulator.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::core::collision::CollisionGroupManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::collision::CollisionGroupManager Class Referenceabstract . #include <CollisionGroupManager.h>; Given a set of contacts, create integration groups. ; More... Inheritance diagram for sofa::core::collision::CollisionGroupManager:. [legend]; Detailed Description; Given a set of contacts, create integration groups. ; For each pair of objects in contacts :. Look which mechanical integration algorithm is used; If they are “compatible”, create a algorithm merging them; Often simply the most stable of the two. Explicit Euler + Explicit Runge Kutta -> Explicit Runge Kutta; Explicit * + Implicit Euler -> Implicit Euler . Protected Attributes; sofa::type::vector< core::objectmodel::BaseContext::SPtr > groups;  integration groups More...;  ; std::map< Instance, sofa::type::vector< core::objectmodel::BaseContext::SPtr > > storedGroups;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Function",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:736,simpl,simply,736,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,1,['simpl'],['simply']
Usability,"﻿. SOFA API: sofa::core::collision::DetectionOutputVector Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::collision::DetectionOutputVector Class Referenceabstract . #include <DetectionOutput.h>; Abstract description of a set of contact point. ; More... Inheritance diagram for sofa::core::collision::DetectionOutputVector:. [legend]; Detailed Description; Abstract description of a set of contact point. . Public Member Functions; virtual void clear ()=0;  Clear the content of this vector. More...;  ; virtual unsigned int size () const =0;  Current size (number of detected contacts. More...;  ; bool empty () const;  Test if the vector is empty. More...;  ; virtual void release ();  Delete this vector from memory once the contact pair is no longer active. More...;  ; virtual type::Vec3 getFirstPosition (unsigned idx)=0;  Const iterator to iterate the detection pairs. More...;  ; virtual type::Vec3 getSecondPosition (unsigned idx)=0;  Const iterator end to iterate the detection pairs. More...;  . Protected Member Functions; virtual ~DetectionOutputVector ();  . Constructor details. ◆ ~DetectionOutputVector(). virtual sofa::core::collision::DetectionOutputVector::~DetectionOutputVector ; (; ). inlineprotectedvirtual . Function details. ◆ clear(). virtual void sofa::core::collision::DetectionOutputVector::clear ; (; ). pure virtual . Clear the content of this vector. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ empty(). bool sofa::core::collision::DetectionOutputVector::empty ; (; ); const. inline . Test if the vector is empty. . ◆ getFirstPosition(). virtual type::Vec3 sofa::core::collision::DetectionOutputVector::getFirstPosition ; (; unsigned ; idx). pure virtual . Const iterator to iterate the detection pairs. ; Implemented in sofa::core::collision::TDetectionOutputVector< CM1, CM2 >. ◆ getSecondPosition().",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html:578,clear,clear,578,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection_output_vector.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::core::collision::TDetectionOutputVector< CM1, CM2 > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::collision::TDetectionOutputVector< CM1, CM2 > Class Template Reference . #include <DetectionOutput.h>; Generic description of a set of contact point between two specific collision models. ; More... Inheritance diagram for sofa::core::collision::TDetectionOutputVector< CM1, CM2 >:. [legend]; Detailed Description; template<class CM1, class CM2>; class sofa::core::collision::TDetectionOutputVector< CM1, CM2 >; Generic description of a set of contact point between two specific collision models. . Public Member Functions;  ~TDetectionOutputVector () override;  ; void clear () override;  Clear the content of this vector. More...;  ; unsigned int size () const override;  Current size (number of detected contacts) More...;  ; virtual type::Vec3 getFirstPosition (unsigned idx) override;  Const iterator to iterate the detection pairs. More...;  ; virtual type::Vec3 getSecondPosition (unsigned idx) override;  Const iterator end to iterate the detection pairs. More...;  ;  Public Member Functions inherited from sofa::core::collision::DetectionOutputVector; bool empty () const;  Test if the vector is empty. More...;  ; virtual void release ();  Delete this vector from memory once the contact pair is no longer active. More...;  ;  Public Member Functions inherited from sofa::type::vector< DetectionOutput >;  vector ();  Basic constructor. More...;  ;  vector (Size n, const DetectionOutput &value);  Constructor. More...;  ;  vector (Size n);  Constructor. More...;  ;  vector (const std::vector< DetectionOutput, Alloc > &x);  Constructor. More...;  ;  vector (const std::initializer_list< DetectionOutput > &t);  Brace initializer constructor. More...;  ;  vector (std::vector< DetectionOutput, Alloc > &&v);  Move constructor. More...;  ;  vector (typename v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector.html:801,clear,clear,801,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_t_detection_output_vector.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::core::objectmodel::BaseContext Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::core::objectmodel::BaseContext Class Reference . #include <BaseContext.h>; Base class for Context classes, storing shared variables and parameters. ; More... Inheritance diagram for sofa::core::objectmodel::BaseContext:. [legend]; Detailed Description; Base class for Context classes, storing shared variables and parameters. ; A Context contains values or pointers to variables and parameters shared by a group of objects, typically referring to the same simulated body. Derived classes can defined simple isolated contexts or more powerful hierarchical representations (scene-graphs), in which case the context also implements the BaseNode interface.; AuthorJeremie Allard . Classes; class  GetObjectsCallBack;  ; class  GetObjectsCallBackT;  Helper functor allowing to insert an object into a container. More...;  . Protected Attributes; ComponentNameHelper m_nameHelper;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BaseContext, Base);  ; virtual const Vec3 & getGravity () const;  Gravity in local coordinates. More...;  ; virtual void setGravity (const Vec3 &);  Gravity in local coordinates. More...;  ; virtual BaseContext * getRootContext () const;  Get the root context of the graph. More...;  ; virtual bool hasAncestor (const BaseContext *) const;  ; Compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:806,simpl,simple,806,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['simpl'],['simple']
Usability,"﻿. SOFA API: sofa::core::objectmodel::BaseObjectDescription Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::core::objectmodel::BaseObjectDescription Class Reference . #include <BaseObjectDescription.h>; Base Interface for classes containing the description of an object, used to construct it. ; More... Inheritance diagram for sofa::core::objectmodel::BaseObjectDescription:. [legend]; Detailed Description; Base Interface for classes containing the description of an object, used to construct it. ; This class defines what information are used as input (read from a file for instance) to create an object. This default implementation simply stores an attributes map and does not support any hierarchy. . Classes; class  Attribute;  . Protected Attributes; AttributeMap attributes;  ; std::vector< std::string > errors;  . Public Member Functions;  BaseObjectDescription (const char *name=nullptr, const char *type=nullptr);  ; virtual ~BaseObjectDescription ();  ; virtual Base * getObject ();  Get the associated object (or nullptr if it is not created yet) More...;  ; virtual std::string getName ();  Get the object instance name. More...;  ; virtual void setName (const std::string &name);  Set the object instance name. More...;  ; virtual BaseObjectDescription * getParent () const;  Get the parent node. More...;  ; virtual std::string getBaseFile ();  Get the file where this description was read from. Useful to resolve relative file paths. More...;  ; virtual const AttributeMap & getAttributeMap () const;  ; template<class T > ; void getAttributeList (T &container) const;  ; virtual BaseObjectDescription * find (const char *nodeName, bool absolute=false);  Find an object description given its name (relative to this object) More...;  ; virtual Base * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:768,simpl,simply,768,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,1,['simpl'],['simply']
Usability,"﻿. SOFA API: sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false > Class Template Reference . #include <Link.h>. Static Public Member Functions; static void resize (T &c, size_t newsize);  ; static void clear (T &c);  ; static std::size_t add (T &c, TDestPtr v);  ; static std::size_t find (const T &c, TDestPtr v);  ; static void remove (T &c, std::size_t index);  . Function details. ◆ add(). template<class TDestType , class TDestPtr , class TValueType > . static std::size_t sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >::add ; (; T & ; c, . TDestPtr ; v . ). inlinestatic . ◆ clear(). template<class TDestType , class TDestPtr , class TValueType > . static void sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >::clear ; (; T & ; c). inlinestatic . ◆ find(). template<class TDestType , class TDestPtr , class TValueType > . static std::size_t sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >::find ; (; const T & ; c, . TDestPtr ; v . ). inlinestatic . ◆ remove(). template<class TDestType , class TDestPtr , class TValueType > . static void sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >::remove ; (; T & ; c, . std::size_t ; index . ). inlinestatic . ◆ resize(). template<class TDestType , class TDestPtr , class TValueType > . static void sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >::resize ; (; T & ; c, . size_t ; newsize . ). inlinestatic . sofacoreobjectmodelLinkTraitsContainer< TDestType, TDestPtr, TValueType, false >; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_01_t_value_type_00_01false_01_4.html:479,clear,clear,479,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_01_t_value_type_00_01false_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_01_t_value_type_00_01false_01_4.html,3,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true > Class Template Reference . #include <Link.h>. Static Public Member Functions; static void clear (T &c);  ; static std::size_t add (T &c, TDestPtr v);  ; static std::size_t addBegin (T &c, TDestPtr v);  ; static std::size_t find (const T &c, TDestPtr v);  ; static void remove (T &c, std::size_t index);  . Function details. ◆ add(). template<class TDestType , class TDestPtr , class TValueType > . static std::size_t sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >::add ; (; T & ; c, . TDestPtr ; v . ). inlinestatic . ◆ addBegin(). template<class TDestType , class TDestPtr , class TValueType > . static std::size_t sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >::addBegin ; (; T & ; c, . TDestPtr ; v . ). inlinestatic . ◆ clear(). template<class TDestType , class TDestPtr , class TValueType > . static void sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >::clear ; (; T & ; c). inlinestatic . ◆ find(). template<class TDestType , class TDestPtr , class TValueType > . static std::size_t sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >::find ; (; const T & ; c, . TDestPtr ; v . ). inlinestatic . ◆ remove(). template<class TDestType , class TDestPtr , class TValueType > . static void sofa::core::objectmodel::LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >::remove ; (; T & ; c, . std::size_t ; index . ). inlinestatic . sofacoreobjectmodelLinkTraitsContainer< TDestType, TDestPtr, TValueType, true >; Generated on Mon Nov 11 2024 03:15:53 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_01_t_value_type_00_01true_01_4.html:431,clear,clear,431,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_01_t_value_type_00_01true_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_link_traits_container_3_01_t_dest_type_00_01_t_dest_ptr_00_01_t_value_type_00_01true_01_4.html,3,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::defaulttype::AbstractTypeInfo Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::defaulttype::AbstractTypeInfo Class Referenceabstract . #include <AbstractTypeInfo.h>. Inheritance diagram for sofa::defaulttype::AbstractTypeInfo:. [legend]; Detailed Description; Information about the type of a value stored in a Data.; AbstractTypeInfo is part of the introspection/reflection capabilities of the Sofa scene graph API. It provides information about the type of the content of Data objects (Is it a simple type? A container? How much memory should be allocated to copy it?), and allows manipulating Data generically, without knowing their exact type.; This class is primarily used to copy information across BaseData objects, for example when there exists a link between two instances of BaseData. E.g. this mechanism allows you to copy the content of a Data<vector<int>> into a Data<vector<double>>, because there is an acceptable conversion between integer and double, and because both Data use a resizable container.; Using TypeInfo; Use BaseData::getValueTypeInfo() to get a pointer to an AbtractTypeInfo, and BaseData::getValueVoidPtr() to get a pointer to the content of a Data. You can then use the methods of AbtractTypeInfo to access the Data generically.; Very basic example: BaseData *data = getADataFromSomewhere();; const AbstractTypeInfo *typeinfo = data->getValueTypeInfo();; const void* ptr = data->getValueVoidPtr();; for (int i = 0 ; i < typeinfo->size(ptr) ; i++); std::string value = typeinfo->getTextValue(ptr, 0);; sofa::defaulttype::AbstractTypeInfo::AbstractTypeInfoAbstractTypeInfo()Definition: AbstractTypeInfo.h:177; Note about size and indices; All the getValue() and setValue() methods take an index as a parameter, which means that every type is abstracted to a one-dimensional container. See the detailed description of DataType",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html:641,simpl,simple,641,api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_abstract_type_info.html,1,['simpl'],['simple']
Usability,"﻿. SOFA API: sofa::defaulttype::MapMapSparseMatrix< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::defaulttype::MapMapSparseMatrix< T > Class Template Reference . #include <MapMapSparseMatrix.h>. Inheritance diagram for sofa::defaulttype::MapMapSparseMatrix< T >:. [legend]. Classes; class  ColConstIterator;  Sparse Matrix columns constant Iterator. More...;  ; class  ColIterator;  ; class  RowConstIterator;  ; class  RowIterator;  . Protected Attributes; SparseMatrix m_data;  Data container. More...;  . Public Member Functions; void clear ();  Removes every matrix elements. More...;  ; bool empty () const;  ; std::size_t size () const;  ; template<class VecDeriv > ; void multTransposeBaseVector (VecDeriv &res, const sofa::linearalgebra::BaseVector *lambda) const;  ; RowConstIterator begin () const;  ; RowConstIterator end () const;  ; RowIterator begin ();  ; RowIterator end ();  ; RowConstIterator readLine (KeyType lIndex) const;  ; RowIterator writeLine (KeyType lIndex);  ; std::pair< RowIterator, bool > writeLine (KeyType lIndex, RowType row);  ; std::pair< RowIterator, bool > addLine (KeyType lIndex, RowType row);  ; RowIterator newLine ();  . Friends; std::ostream & operator<< (std::ostream &out, const MapMapSparseMatrix< T > &sc);  write to an output stream More...;  ; std::istream & operator>> (std::istream &in, MapMapSparseMatrix< T > &sc);  read from an input stream More...;  . Attribute details. ◆ m_data. template<class T > . SparseMatrix sofa::defaulttype::MapMapSparseMatrix< T >::m_data. protected . Data container. . Function details. ◆ addLine(). template<class T > . std::pair< RowIterator, bool > sofa::defaulttype::MapMapSparseMatrix< T >::addLine ; (; KeyType ; lIndex, . RowType ; row . ). inline . ReturnsPair of Iterator on specified row and boolean on true if addition took place ; Parameters. lI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix.html:697,clear,clear,697,api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_map_map_sparse_matrix.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::gui::qt::ChartsWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gui::qt::ChartsWidget Class Reference . #include <PieWidget.h>. Inheritance diagram for sofa::gui::qt::ChartsWidget:. [legend]. Protected Attributes; unsigned int selection;  ; PieWidget * pie;  ; QTableWidget * table;  . Public Member Functions;  ChartsWidget (const std::string &name, QWidget *parent);  ; void setChart (std::vector< dataTime > &value, unsigned int s);  ; void clear ();  . Attribute details. ◆ pie. PieWidget* sofa::gui::qt::ChartsWidget::pie. protected . ◆ selection. unsigned int sofa::gui::qt::ChartsWidget::selection. protected . ◆ table. QTableWidget* sofa::gui::qt::ChartsWidget::table. protected . Constructor details. ◆ ChartsWidget(). sofa::gui::qt::ChartsWidget::ChartsWidget ; (; const std::string & ; name, . QWidget * ; parent . ). Function details. ◆ clear(). void sofa::gui::qt::ChartsWidget::clear ; (; ). ◆ setChart(). void sofa::gui::qt::ChartsWidget::setChart ; (; std::vector< dataTime > & ; value, . unsigned int ; s . ). sofaguiqtChartsWidget; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_charts_widget.html:591,clear,clear,591,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_charts_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_charts_widget.html,3,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::gui::qt::PieWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::gui::qt::PieWidget Class Reference . #include <PieWidget.h>. Inheritance diagram for sofa::gui::qt::PieWidget:. [legend]. Static Public Attributes; static std::vector< type::Vec< 3, int > > colorArray;  . Protected Attributes; std::vector< dataTime > data;  ; unsigned int selection;  ; double totalTime;  ; int sizePie;  . Public Member Functions;  PieWidget (QWidget *parent);  ; void paintEvent (QPaintEvent *);  ; void setChart (std::vector< dataTime > &value, unsigned int s);  ; void clear ();  . Static Public Member Functions; static type::Vec< 3, int > getColor (int i);  . Attribute details. ◆ colorArray. std::vector< type::Vec< 3, int > > sofa::gui::qt::PieWidget::colorArray. static . ◆ data. std::vector< dataTime > sofa::gui::qt::PieWidget::data. protected . ◆ selection. unsigned int sofa::gui::qt::PieWidget::selection. protected . ◆ sizePie. int sofa::gui::qt::PieWidget::sizePie. protected . ◆ totalTime. double sofa::gui::qt::PieWidget::totalTime. protected . Constructor details. ◆ PieWidget(). sofa::gui::qt::PieWidget::PieWidget ; (; QWidget * ; parent). Function details. ◆ clear(). void sofa::gui::qt::PieWidget::clear ; (; ). ◆ getColor(). type::Vec< 3, int > sofa::gui::qt::PieWidget::getColor ; (; int ; i). static . ◆ paintEvent(). void sofa::gui::qt::PieWidget::paintEvent ; (; QPaintEvent * ; ). ◆ setChart(). void sofa::gui::qt::PieWidget::setChart ; (; std::vector< dataTime > & ; value, . unsigned int ; s . ). sofaguiqtPieWidget; Generated on Mon Nov 11 2024 03:23:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget.html:760,clear,clear,760,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_pie_widget.html,3,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::gui::qt::QDisplayPropertyWidget Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Protected Slots |; Friends |; List of all members . sofa::gui::qt::QDisplayPropertyWidget Class Reference . #include <QDisplayPropertyWidget.h>. Inheritance diagram for sofa::gui::qt::QDisplayPropertyWidget:. [legend]. Public Member Functions;  QDisplayPropertyWidget (const ModifyObjectFlags &modifyFlags, QWidget *parent=nullptr);  ;  ~QDisplayPropertyWidget () override;  ; void addComponent (const QString &component, core::objectmodel::Base *base, QTreeWidgetItem *listItem, bool clear=true);  ; void addGroup (const QString &component, const QString &group);  ; void addData (const QString &component, const QString &group, sofa::core::objectmodel::BaseData *data);  ; void addLink (const QString &component, const QString &group, sofa::core::objectmodel::BaseLink *link);  ; void setDescription (const QString &component, const QString &group, sofa::core::objectmodel::Base *base);  ; void setConsoleOutput (const QString &component, const QString &group, sofa::core::objectmodel::Base *base);  ; void clear ();  ; void clearAll ();  . Static Public Member Functions; static QString DefaultDataGroup ();  ; static QString DefaultLinkGroup ();  ; static QString DefaultInfoGroup ();  ; static QString DefaultLogGroup ();  . Protected Member Functions; void addDescriptionItem (QTreeWidgetItem *groupItem, const QString &name, const QString &description);  ; QTreeWidgetItem * findComponent (const QString &component) const;  ; QTreeWidgetItem * findGroup (const QString &component, const QString &group) const;  . Protected Slots; void clearComponentOutput ();  ; void clearComponentWarning ();  . Friends; class GraphHistoryManager;  ; class LinkComponent;  . Constructor details. ◆ QDisplayPropertyWidget(). sofa::gui::qt::QDisplayPropertyWidget::QDisplayPrope",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html:718,clear,clear,718,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_display_property_widget.html,3,['clear'],"['clear', 'clearAll']"
Usability,﻿. SOFA API: sofa::gui::qt::QVisitorControlPanel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::QVisitorControlPanel Class Reference . #include <QVisitorControlPanel.h>. Inheritance diagram for sofa::gui::qt::QVisitorControlPanel:. [legend]. Protected Attributes; QLineEdit * textFilter;  ; WDoubleLineEdit * spinIndex;  ; WDoubleLineEdit * spinRange;  . Public Member Functions;  QVisitorControlPanel (QWidget *parent);  ; void changeFirstIndex (int);  ; void changeRange (int);  . Signals; void focusOn (QString);  ; void clearGraph ();  . Public Slots; void activateTraceStateVectors (bool);  ; void changeFirstIndex ();  ; void changeRange ();  ; void filterResults ();  . Attribute details. ◆ spinIndex. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinIndex. protected . ◆ spinRange. WDoubleLineEdit* sofa::gui::qt::QVisitorControlPanel::spinRange. protected . ◆ textFilter. QLineEdit* sofa::gui::qt::QVisitorControlPanel::textFilter. protected . Constructor details. ◆ QVisitorControlPanel(). sofa::gui::qt::QVisitorControlPanel::QVisitorControlPanel ; (; QWidget * ; parent). Function details. ◆ activateTraceStateVectors. void sofa::gui::qt::QVisitorControlPanel::activateTraceStateVectors ; (; bool ; active). slot . ◆ changeFirstIndex [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; ). slot . ◆ changeFirstIndex() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeFirstIndex ; (; int ; idx). ◆ changeRange [1/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; ). slot . ◆ changeRange() [2/2]. void sofa::gui::qt::QVisitorControlPanel::changeRange ; (; int ; range). ◆ clearGraph. void sofa::gui::qt::QVisitorControlPanel::clearGraph ; (; ). signal . ◆ filterResults. void sofa::gui::qt::QVisitorControlPanel::filterResults ; (; ). slot . ◆ focusOn. void sofa::gui::qt::QVisitorContr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html:683,clear,clearGraph,683,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_visitor_control_panel.html,1,['clear'],['clearGraph']
Usability,"﻿. SOFA API: sofa::gui::qt::data_widget_trait< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::gui::qt::data_widget_trait< T > Class Template Reference . #include <SimpleDataWidget.h>; Detailed Description; template<class T>; class sofa::gui::qt::data_widget_trait< T >; This class is used to specify how to graphically represent a data type, by default using a simple QLineEdit . Static Public Member Functions; static Widget * create (QWidget *parent, const data_type &);  ; static void readFromData (Widget *w, const data_type &d);  ; static void writeToData (Widget *w, data_type &d);  ; static void setReadOnly (Widget *w, bool readOnly);  ; static void connectChanged (Widget *w, DataWidget *datawidget);  . Function details. ◆ connectChanged(). template<class T > . static void sofa::gui::qt::data_widget_trait< T >::connectChanged ; (; Widget * ; w, . DataWidget * ; datawidget . ). inlinestatic . ◆ create(). template<class T > . static Widget* sofa::gui::qt::data_widget_trait< T >::create ; (; QWidget * ; parent, . const data_type & ;  . ). inlinestatic . ◆ readFromData(). template<class T > . static void sofa::gui::qt::data_widget_trait< T >::readFromData ; (; Widget * ; w, . const data_type & ; d . ). inlinestatic . ◆ setReadOnly(). template<class T > . static void sofa::gui::qt::data_widget_trait< T >::setReadOnly ; (; Widget * ; w, . bool ; readOnly . ). inlinestatic . ◆ writeToData(). template<class T > . static void sofa::gui::qt::data_widget_trait< T >::writeToData ; (; Widget * ; w, . data_type & ; d . ). inlinestatic . sofaguiqtdata_widget_trait; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait.html:480,simpl,simple,480,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1data__widget__trait.html,1,['simpl'],['simple']
Usability,"﻿. SOFA API: sofa::gui::qt::viewer::qgl::QtGLViewer Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; List of all members . sofa::gui::qt::viewer::qgl::QtGLViewer Class Reference . #include <QtGLViewer.h>. Inheritance diagram for sofa::gui::qt::viewer::qgl::QtGLViewer:. [legend]. Public Member Functions; virtual void drawColourPicking (common::ColourPickingVisitor::ColourCode code) override;  ;  QtGLViewer (QWidget *parent, const char *name="""");  ;  ~QtGLViewer () override;  ; QWidget * getQWidget () override;  ; int getWidth () override;  ; int getHeight () override;  ; bool ready () override;  ; void wait () override;  ask the viewer to resume its activity More...;  ; void UpdateOBJ (void);  ; void moveRayPickInteractor (int eventX, int eventY) override;  RayCasting PickHandler. More...;  ; void setCameraMode (core::visual::VisualParams::CameraType mode) override;  ; void screenshot (const std::string &filename, int compression_level=-1) override;  ; QString helpString () const override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >;  CustomPolicySofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; void captureEvent () override;  ; bool isControlPressed () const;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void setBack",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html:806,resume,resume,806,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,1,['resume'],['resume']
Usability,"﻿. SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::ScopedAdvancedTimer Struct Reference . #include <ScopedAdvancedTimer.h>; Detailed Description; Scoped (RAII) AdvancedTimer to simplify a basic usage Example of use { ///< open a scope to start measuring ScopedAdvancedTimer t(""myMeasurement"") ... ... } ///< close the scope... the timer t is destructed and the measurement recorded. . Public Attributes; AdvancedTimer::IdStep m_id;  ; std::optional< AdvancedTimer::IdObj > m_objId;  . Public Member Functions;  ScopedAdvancedTimer (const std::string &message);  ;  ScopedAdvancedTimer (const char *message);  ; template<class T > ;  ScopedAdvancedTimer (const char *message, T *obj);  ;  ~ScopedAdvancedTimer ();  . Attribute details. ◆ m_id. AdvancedTimer::IdStep sofa::helper::ScopedAdvancedTimer::m_id. ◆ m_objId. std::optional<AdvancedTimer::IdObj> sofa::helper::ScopedAdvancedTimer::m_objId. Constructor details. ◆ ScopedAdvancedTimer() [1/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const std::string & ; message). explicit . ◆ ScopedAdvancedTimer() [2/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message). explicit . ◆ ScopedAdvancedTimer() [3/3]. template<class T > . sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message, . T * ; obj . ). explicit . ◆ ~ScopedAdvancedTimer(). sofa::helper::ScopedAdvancedTimer::~ScopedAdvancedTimer ; (; ). sofahelperScopedAdvancedTimer; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html:349,simpl,simplify,349,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html,1,['simpl'],['simplify']
Usability,"﻿. SOFA API: sofa::helper::TSimpleTimer< nIter, nStep > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::TSimpleTimer< nIter, nStep > Class Template Reference . #include <SimpleTimer.h>; Detailed Description; template<int nIter = 100, int nStep = 100>; class sofa::helper::TSimpleTimer< nIter, nStep >; Very simple timer; Usage example :; sofa::helper::SimpleTimer mytimer;; void myComputationCode() {; bool timer = true; // should I print performance stats if (timer) mytimer.start(""mystep1);; ... // step 1 code; if (timer) mytimer.step(""mystep2"");; ... // step 2 code; if (timer) mytimer.stop(); } . Public Attributes; ctime_t timer_total;  ; ctime_t timer_current;  ; ctime_t timer_freq;  ; ctime_t timer_start;  ; ctime_t timers_start;  ; const char * timers_name [T_NSTEPS];  ; ctime_t timers_total [T_NSTEPS];  ; ctime_t timers_current [T_NSTEPS];  ; int timer_niter;  ; int timer_nstep;  ; const char * timer_lastname;  . Public Member Functions;  TSimpleTimer ();  ; void start (const char *name);  ; void step (const char *name="""");  ; void stop ();  . Attribute details. ◆ timer_current. template<int nIter = 100, int nStep = 100> . ctime_t sofa::helper::TSimpleTimer< nIter, nStep >::timer_current. ◆ timer_freq. template<int nIter = 100, int nStep = 100> . ctime_t sofa::helper::TSimpleTimer< nIter, nStep >::timer_freq. ◆ timer_lastname. template<int nIter = 100, int nStep = 100> . const char* sofa::helper::TSimpleTimer< nIter, nStep >::timer_lastname. ◆ timer_niter. template<int nIter = 100, int nStep = 100> . int sofa::helper::TSimpleTimer< nIter, nStep >::timer_niter. ◆ timer_nstep. template<int nIter = 100, int nStep = 100> . int sofa::helper::TSimpleTimer< nIter, nStep >::timer_nstep. ◆ timer_start. template<int nIter = 100, int nStep = 100> . ctime_t sofa::helper::TSimpleTimer< nIter, nStep >::timer_start. ◆ timer_total. template<int nI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_t_simple_timer.html:443,simpl,simple,443,api/master/sofa/html/classsofa_1_1helper_1_1_t_simple_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_t_simple_timer.html,1,['simpl'],['simple']
Usability,"﻿. SOFA API: sofa::helper::TimerData Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Public Member Functions |; List of all members . sofa::helper::TimerData Class Reference . Classes; class  ValData;  . Public Attributes; AdvancedTimer::IdTimer id;  ; type::vector< Record > records;  ; int nbIter;  ; int interval;  ; int defaultInterval;  ; AdvancedTimer::outputType timerOutputType;  ; std::map< AdvancedTimer::IdStep, StepData > stepData;  ; type::vector< AdvancedTimer::IdStep > steps;  ; std::map< AdvancedTimer::IdVal, ValData > valData;  ; type::vector< AdvancedTimer::IdVal > vals;  . Public Member Functions;  TimerData ();  ; void init (AdvancedTimer::IdTimer id);  ; void clear ();  ; void process ();  ; void print ();  ; void print (std::ostream &result);  ; json getJson (std::string stepNumber);  ; json getLightJson (std::string stepNumber);  ; json createJSONArray (int s, json jsonObject, StepData &data);  . Attribute details. ◆ defaultInterval. int sofa::helper::TimerData::defaultInterval. ◆ id. AdvancedTimer::IdTimer sofa::helper::TimerData::id. ◆ interval. int sofa::helper::TimerData::interval. ◆ nbIter. int sofa::helper::TimerData::nbIter. ◆ records. type::vector<Record> sofa::helper::TimerData::records. ◆ stepData. std::map<AdvancedTimer::IdStep, StepData> sofa::helper::TimerData::stepData. ◆ steps. type::vector<AdvancedTimer::IdStep> sofa::helper::TimerData::steps. ◆ timerOutputType. AdvancedTimer::outputType sofa::helper::TimerData::timerOutputType. ◆ valData. std::map<AdvancedTimer::IdVal, ValData> sofa::helper::TimerData::valData. ◆ vals. type::vector<AdvancedTimer::IdVal> sofa::helper::TimerData::vals. Constructor details. ◆ TimerData(). sofa::helper::TimerData::TimerData ; (; ). inline . Function details. ◆ clear(). void sofa::helper::TimerData::clear ; (; ). ◆ createJSONArray(). json sofa::helper::TimerData::createJSONArray ; (; int ; s, . json ; jsonObject, . StepData & ; d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_timer_data.html:760,clear,clear,760,api/master/sofa/html/classsofa_1_1helper_1_1_timer_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_timer_data.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::helper::WriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::WriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > > Class Template Reference . #include <integer_id.h>. Inheritance diagram for sofa::helper::WriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >:. [legend]. Public Member Functions;  WriteAccessor (container_type &c);  ;  Public Member Functions inherited from sofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >;  WriteAccessorVectorId (container_type &container);  ;  ~WriteAccessorVectorId ();  ; const container_type & ref () const;  ; container_type & wref ();  ; bool empty () const;  ; Size size () const;  ; const_reference operator[] (Index i) const;  ; reference operator[] (Index i);  ; const_reference operator() (Index i) const;  ; reference operator() (Index i);  ; const_iterator begin () const;  ; iterator begin ();  ; const_iterator end () const;  ; iterator end ();  ; void clear ();  ; void resize (Size s, bool=true);  ; void reserve (Size s);  ; Index push_back (const_reference v);  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::WriteAccessorVectorId< vector_id< T, TIndex, CheckIndices, MemoryManager > >; container_type & vref;  . Constructor details. ◆ WriteAccessor(). template<class T , class TIndex , bool CheckIndices, class MemoryManager > . sofa::helper::WriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >::WriteAccessor ; (; container_type & ; c). inline . sofahelperWriteAccessor< vector_id< T, TIndex, CheckIndices, MemoryManager > >; Generated on Mon Nov 11 2024 03:30:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_00_01_memory_manager_01_4_01_4.html:1174,clear,clear,1174,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_00_01_memory_manager_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01vector__id_3_01_t_00_01_t_index_00_01_check_indices_00_01_memory_manager_01_4_01_4.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::helper::WriteAccessorVector< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::WriteAccessorVector< T > Class Template Reference . #include <WriteAccessorVector.h>; WriteAccessor implementation class for vector types. ; More... Inheritance diagram for sofa::helper::WriteAccessorVector< T >:. [legend]; Detailed Description; template<class T>; class sofa::helper::WriteAccessorVector< T >; WriteAccessor implementation class for vector types. . Protected Attributes; container_type * vref;  . Public Member Functions;  WriteAccessorVector (container_type &container);  ; bool empty () const;  ; Size size () const;  ; void reserve (Size s);  ; reference operator[] (Size pos);  ; const_reference operator[] (Size pos) const;  ; reference front ();  ; const_reference front () const;  ; reference back ();  ; const_reference back () const;  ; const_iterator begin () const;  ; iterator begin ();  ; const_iterator end () const;  ; iterator end ();  ; void clear ();  ; void resize (Size s);  ; iterator insert (const_iterator pos, const T &value);  ; iterator erase (iterator pos);  ; iterator erase (const_iterator pos);  ; void push_back (const value_type &v);  ; template<class... Args> ; reference emplace_back (Args &&... args);  ; void pop_back ();  ;  operator container_type ();  ; container_type * operator-> ();  ; container_type & operator* ();  ; container_type & wref ();  ;  operator const_container_type () const;  ; const_container_type * operator-> () const;  ; const_container_type & operator* () const;  ; const container_type & ref () const;  this one duplicate operator* More...;  . Attribute details. ◆ vref. template<class T > . container_type* sofa::helper::WriteAccessorVector< T >::vref. protected . Constructor details. ◆ WriteAccessorVector(). template<class T > . sofa::helper::WriteAccessorVector< T >::WriteAcce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector.html:1115,clear,clear,1115,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::helper::WriteAccessorVectorId< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::WriteAccessorVectorId< T > Class Template Reference . #include <integer_id.h>; WriteAccessor implementation class for vector_id types. ; More... Inheritance diagram for sofa::helper::WriteAccessorVectorId< T >:. [legend]; Detailed Description; template<class T>; class sofa::helper::WriteAccessorVectorId< T >; WriteAccessor implementation class for vector_id types. . Protected Attributes; container_type & vref;  . Public Member Functions;  WriteAccessorVectorId (container_type &container);  ;  ~WriteAccessorVectorId ();  ; const container_type & ref () const;  ; container_type & wref ();  ; bool empty () const;  ; Size size () const;  ; const_reference operator[] (Index i) const;  ; const_reference operator() (Index i) const;  ; reference operator[] (Index i);  ; reference operator() (Index i);  ; const_iterator begin () const;  ; iterator begin ();  ; const_iterator end () const;  ; iterator end ();  ; void clear ();  ; void resize (Size s, bool=true);  ; void reserve (Size s);  ; Index push_back (const_reference v);  . Friends; std::ostream & operator<< (std::ostream &os, const WriteAccessorVectorId< T > &vec);  ; std::istream & operator>> (std::istream &in, WriteAccessorVectorId< T > &vec);  . Attribute details. ◆ vref. template<class T > . container_type& sofa::helper::WriteAccessorVectorId< T >::vref. protected . Constructor details. ◆ WriteAccessorVectorId(). template<class T > . sofa::helper::WriteAccessorVectorId< T >::WriteAccessorVectorId ; (; container_type & ; container). inline . ◆ ~WriteAccessorVectorId(). template<class T > . sofa::helper::WriteAccessorVectorId< T >::~WriteAccessorVectorId ; (; ). inline . Function details. ◆ begin() [1/2]. template<class T > . iterator sofa::helper::WriteAccessorVectorId<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html:1173,clear,clear,1173,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_vector_id.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::logging::DefaultStyleMessageFormatter Class Reference . #include <DefaultStyleMessageFormatter.h>. Inheritance diagram for sofa::helper::logging::DefaultStyleMessageFormatter:. [legend]; Detailed Description; Format the message using a very simple sofa style. For more advanced formatting style have a look at RichStyleMessageFormatter. Example: [ERROR] ClassName(instanceName): this is a message printed somewhere. . Public Member Functions; void formatMessage (const Message &m, std::ostream &out) override;  . Static Public Member Functions; static MessageFormatter & getInstance ();  . Additional Inherited Members;  Protected Member Functions inherited from sofa::helper::logging::MessageFormatter;  MessageFormatter ();  ; virtual std::string getPrefixText (unsigned int type) const;  ; virtual std::ostream & setColor (std::ostream &stream, unsigned int type) const;  . Function details. ◆ formatMessage(). void sofa::helper::logging::DefaultStyleMessageFormatter::formatMessage ; (; const Message & ; m, . std::ostream & ; out . ). overridevirtual . Implements sofa::helper::logging::MessageFormatter. ◆ getInstance(). static MessageFormatter& sofa::helper::logging::DefaultStyleMessageFormatter::getInstance ; (; ). inlinestatic . sofahelperloggingDefaultStyleMessageFormatter; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_default_style_message_formatter.html:494,simpl,simple,494,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_default_style_message_formatter.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_default_style_message_formatter.html,1,['simpl'],['simple']
Usability,"﻿. SOFA API: sofa::helper::logging::MessageDispatcher Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Static Public Member Functions |; List of all members . sofa::helper::logging::MessageDispatcher Class Reference . #include <MessageDispatcher.h>; Detailed Description; static interface to manage the list of MessageHandlers that process the Messages . Classes; class  LoggerStream;  ; class  NullLoggerStream;  . Static Public Member Functions; static int addHandler (MessageHandler *o);  to add a MessageHandler More...;  ; static int rmHandler (MessageHandler *o);  to remove a MessageHandler More...;  ; static void clearHandlers ();  to remove every MessageHandlers More...;  ; static std::vector< MessageHandler * > & getHandlers ();  the list of MessageHandlers More...;  ; static LoggerStream info (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream deprecated (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream warning (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream error (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream fatal (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream advice (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static const NullLoggerStream & null ();  ; static MessageDispatcher::LoggerStream log (Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static void process (sofa::helper::logging::Message &m);  . Function details. ◆ addHandler(). int sofa::helper::logging::MessageDispatcher:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html:675,clear,clearHandlers,675,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,1,['clear'],['clearHandlers']
Usability,﻿. SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::logging::MessageDispatcherImpl Class Reference . Public Attributes; mutex m_mutex;  ; std::vector< MessageHandler * > m_messageHandlers = getDefaultMessageHandlers();  . Public Member Functions; mutex & getMutex ();  ; std::vector< MessageHandler * > & getHandlers ();  ; int addHandler (MessageHandler *o);  ; int rmHandler (MessageHandler *o);  ; void clearHandlers ();  ; void process (sofa::helper::logging::Message &m);  . Attribute details. ◆ m_messageHandlers. std::vector<MessageHandler*> sofa::helper::logging::MessageDispatcherImpl::m_messageHandlers = getDefaultMessageHandlers(). ◆ m_mutex. mutex sofa::helper::logging::MessageDispatcherImpl::m_mutex. Function details. ◆ addHandler(). int sofa::helper::logging::MessageDispatcherImpl::addHandler ; (; MessageHandler * ; o). inline . ◆ clearHandlers(). void sofa::helper::logging::MessageDispatcherImpl::clearHandlers ; (; ). inline . ◆ getHandlers(). std::vector<MessageHandler*>& sofa::helper::logging::MessageDispatcherImpl::getHandlers ; (; ). inline . ◆ getMutex(). mutex& sofa::helper::logging::MessageDispatcherImpl::getMutex ; (; ). inline . ◆ process(). void sofa::helper::logging::MessageDispatcherImpl::process ; (; sofa::helper::logging::Message & ; m). inline . ◆ rmHandler(). int sofa::helper::logging::MessageDispatcherImpl::rmHandler ; (; MessageHandler * ; o). inline . sofahelperloggingMessageDispatcherImpl; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_impl.html:587,clear,clearHandlers,587,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_impl.html,3,['clear'],['clearHandlers']
Usability,﻿. SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::SilentMessageHandler Class Reference . #include <SilentMessageHandler.h>; This class is a MessageHandler that simply do nothing with the message. ; More... Inheritance diagram for sofa::helper::logging::SilentMessageHandler:. [legend]; Detailed Description; This class is a MessageHandler that simply do nothing with the message. . Public Member Functions; void process (Message &) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::SilentMessageHandler::process ; (; Message & ; ). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingSilentMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler.html:330,simpl,simply,330,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler.html,2,['simpl'],['simply']
Usability,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:897,clear,clear,897,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::helper::system::thread::OneThreadPerEnd Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Protected Member Functions |; List of all members . sofa::helper::system::thread::OneThreadPerEnd Class Reference . #include <CircularQueue.h>; Detailed Description; This is a lock-free single-producer single-consumer implementation of a circular queue matching the ThreadAccessPolicy of CircularQueue. . Protected Attributes; volatile unsigned head;  ; volatile unsigned tail;  . Protected Member Functions;  OneThreadPerEnd ();  ; bool isEmpty (unsigned maxSize) const;  ; bool isFull (unsigned maxSize) const;  ; unsigned size (unsigned maxSize) const;  ; template<class T > ; void init (T array[], unsigned maxCapacity);  ; template<class T > ; bool push (T array[], unsigned maxSize, unsigned maxCapacity, const T &item);  ; template<class T > ; bool pop (T array[], unsigned maxSize, unsigned maxCapacity, T &item, bool clear=true);  ; template<class T > ; unsigned skip (T array[], unsigned maxSize, unsigned maxCapacity, unsigned outmaxsize, bool clear=true);  ; template<class T , class OutputIterator > ; unsigned pop (T array[], unsigned maxSize, unsigned maxCapacity, OutputIterator out, unsigned outmaxsize, bool clear=true);  . Attribute details. ◆ head. volatile unsigned sofa::helper::system::thread::OneThreadPerEnd::head. protected . ◆ tail. volatile unsigned sofa::helper::system::thread::OneThreadPerEnd::tail. protected . Constructor details. ◆ OneThreadPerEnd(). SOFA_HELPER_API sofa::helper::system::thread::OneThreadPerEnd::OneThreadPerEnd ; (; ). inlineprotected . Function details. ◆ init(). template<class T > . void sofa::helper::system::thread::OneThreadPerEnd::init ; (; T ; array[], . unsigned ; maxCapacity . ). protected . ◆ isEmpty(). SOFA_HELPER_API bool sofa::helper::system::thread::OneThreadPerEnd::isEmpty ; (; unsigned ; maxSize); const. inlineprotected . ◆ isFull(). SOFA_HELPER_API boo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_one_thread_per_end.html:1000,clear,clear,1000,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_one_thread_per_end.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1thread_1_1_one_thread_per_end.html,3,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::linearalgebra::BaseVector Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::linearalgebra::BaseVector Class Referenceabstract . #include <BaseVector.h>. Inheritance diagram for sofa::linearalgebra::BaseVector:. [legend]; Detailed Description; Generic vector API, allowing to fill and use a vector independently of the linear algebra library in use.; Note that accessing values using this class is rather slow and should only be used in codes where the provided genericity is necessary. . Public Member Functions; virtual ~BaseVector ();  ; virtual Index size (void) const =0;  Number of elements. More...;  ; virtual SReal element (Index i) const =0;  Read the value of element i. More...;  ; virtual void resize (Index dim)=0;  Resize the vector, and reset all values to 0. More...;  ; virtual void clear ()=0;  Reset all values to 0. More...;  ; virtual void set (Index i, SReal v)=0;  Write the value of element i. More...;  ; virtual void add (Index i, SReal v)=0;  Add v to the existing value of element i. More...;  ; virtual const float * elements (Index i0, Index n, float *src) const;  Get the values of n elements, starting at element i0, into given float buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual const double * elements (Index i0, Index n, double *src) const;  Get the values of n elements, starting at element i0, into given double buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual const int * elements (Index i0, Index n, int *src) const;  Get the values of n elements, starting at element i0, into given int buffer, or return the pointer to the data if the in-memory format is compatible. More...;  ; virtual void set (Index i0, Index n, const float *src);  Write the values of n float elements, starting at element i0. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html:956,clear,clear,956,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_base_vector.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::linearalgebra::matrix_bloc_traits< T, IndexType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< T, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, IndexType row, IndexType col);  ; static const Real & v (const Block &b, IndexType row, IndexType col);  ; static void vset (Block &b, int row, int col, Real val);  ; static void vadd (Block &b, int row, int col, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; template<class TSubBlock > ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  . Function details. ◆ clear(). template<class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<class T , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<class T , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ split_col_index(). template<class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< T, IndexType >::split_col_index ; (; IndexTyp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits.html:639,clear,clear,639,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType > Class Template Reference . #include <RigidDeriv.h>. Static Public Member Functions; static const Real & v (const Block &b, int, int col);  ; static Real & v (Block &b, int, int col);  ; static void vset (Block &b, int, int col, Real v);  ; static void vadd (Block &b, int, int col, Real v);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static BlockTranspose transposed (const Block &b);  ; static void transpose (BlockTranspose &res, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const char * Name ();  . Function details. ◆ clear(). template<Size N, class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<Size N, class T , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<Size N, class T , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::getElementType ; (; ). inlinestatic . ◆ Name(). template<Size N, class T , typename IndexType > . static const char* sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType >::Name ; (; ). inlinestatic . ◆ subBlock(). templ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html:647,clear,clear,647,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01defaulttype_1_1_rigid_deriv_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::linearalgebra::matrix_bloc_traits< double, IndexType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< double, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, IndexType, IndexType);  ; static void vset (Block &b, int, int, Real val);  ; static void vadd (Block &b, int, int, Real val);  ; static const Real & v (const Block &b, IndexType, IndexType);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< double, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ Name(). template<typename IndexType > . static const std::string sofa::linearalgebra::matrix_bloc_tr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4.html:617,clear,clear,617,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01double_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::linearalgebra::matrix_bloc_traits< float, IndexType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< float, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, IndexType, IndexType);  ; static const Real & v (const Block &b, IndexType, IndexType);  ; static void vset (Block &b, int, int, Real val);  ; static void vadd (Block &b, int, int, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static const std::string Name ();  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static IndexType getElementSize ();  . Function details. ◆ clear(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementSize(). template<typename IndexType > . static IndexType sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::getElementSize ; (; ). inlinestatic . ◆ getElementType(). template<typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< float, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4.html:615,clear,clear,615,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01float_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::linearalgebra::matrix_bloc_traits< int, IndexType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< int, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, int, int);  ; static const Real & v (const Block &b, int, int);  ; static void vset (Block &b, int, int, Real val);  ; static void vadd (Block &b, int, int, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static void split_row_index (int &index, int &modulo);  ; static void split_col_index (int &index, int &modulo);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::invert ; (; Block & ; result, . const Block & ; b . ). inlinestatic . ◆ Name(). template<typename IndexType > . static const std::string sofa::linearalgebra::matrix_bloc_traits< int, IndexType >::Name ; (; ). inlinestatic . ◆ split_col_in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01int_00_01_index_type_01_4.html:587,clear,clear,587,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01int_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01int_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, int, int col);  ; static const Real & v (const Block &b, int, int col);  ; static void vset (Block &b, int, int col, Real v);  ; static void vadd (Block &b, int, int col, Real v);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static Block transposed (const Block &b);  ; static void transpose (Block &res, const Block &b);  ; template<class TSubBlock , std::enable_if_t< std::is_scalar_v< TSubBlock >, bool > = true> ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<Size N, class T , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<Size N, class T , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<Size N, class T , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >::getElementType ; (; ). inlinestatic . ◆ Name(). template<Size N, class T , typename IndexType > . static const std::string sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType >::Name ; (; ). inlinestatic . ◆ subBlock(). template<Size N, class T , typename IndexType > . te",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html:639,clear,clear,639,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01sofa_1_1type_1_1_vec_3_01_n_00_01_t_01_4_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType > Class Template Reference . #include <matrix_bloc_traits.h>. Static Public Member Functions; static Real & v (Block &b, Index row, Index col);  ; static const Real & v (const Block &b, Index row, Index col);  ; static void vset (Block &b, int row, int col, Real val);  ; static void vadd (Block &b, int row, int col, Real val);  ; static void clear (Block &b);  ; static bool empty (const Block &b);  ; static void invert (Block &result, const Block &b);  ; static void split_row_index (IndexType &index, IndexType &modulo);  ; static void split_col_index (IndexType &index, IndexType &modulo);  ; template<class TSubBlock > ; static void subBlock (const Block &b, IndexType row, IndexType col, TSubBlock &subBlock);  ; static sofa::linearalgebra::BaseMatrix::ElementType getElementType ();  ; static const std::string Name ();  . Function details. ◆ clear(). template<Size L, Size C, class real , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::clear ; (; Block & ; b). inlinestatic . ◆ empty(). template<Size L, Size C, class real , typename IndexType > . static bool sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::empty ; (; const Block & ; b). inlinestatic . ◆ getElementType(). template<Size L, Size C, class real , typename IndexType > . static sofa::linearalgebra::BaseMatrix::ElementType sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::getElementType ; (; ). inlinestatic . ◆ invert(). template<Size L, Size C, class real , typename IndexType > . static void sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType >::in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html:667,clear,clear,667,api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1matrix__bloc__traits_3_01type_1_1_mat_3_01_l_00_01_c_00_01real_01_4_00_01_index_type_01_4.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::simpleapi Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simpleapi Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMPLEAPI_API void init ();  Initialize the Sofa.SimpleApi library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isInitialized ();  Return true if and only if the Sofa.SimpleApi library has been initialized. More...;  ; SOFA_SIMPLEAPI_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isCleanedUp ();  Return true if and only if the Sofa.SimpleApi library has been cleaned up. More...;  ; bool importPlugin (const std::string &name);  ; void dumpScene (Node::SPtr root);  ; Simulation::SPtr createSimulation (const std::string &type);  ; Node::SPtr createRootNode (Simulation::SPtr s, const std::string &name, const std::map< std::string, std::string > &params);  ; NodeSPtr createRootNode (Simulation *s, const std::string &name, const std::map< std::string, std::string > &params);  ; BaseObject::SPtr createObject (Node::SPtr parent, BaseObjectDescription &desc);  ; BaseObject::SPtr createObject (Node::SPtr parent, const std::string &type, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, const std::string &name, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, BaseObjectDescription &desc);  ; Node::SPtr createNode (const std::string &name);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; sofa::core::sptr< BaseObject > SOFA_SIMPLEAPI_API createObject (NodeSPtr node, BaseObjectDescription &params);  Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:19,simpl,simpleapi,19,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,2,['simpl'],['simpleapi']
Usability,"﻿. SOFA API: sofa::simulation::MainTaskSchedulerRegistry Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::MainTaskSchedulerRegistry Class Reference . #include <MainTaskSchedulerRegistry.h>; Detailed Description; A set of static functions with the same interface than a @TaskSchedulerRegistry, working on a single instance of a @TaskSchedulerRegistry. All functions are thread-safe. . Static Public Member Functions; static bool addTaskSchedulerToRegistry (TaskScheduler *taskScheduler, const std::string &taskSchedulerName);  ; static TaskScheduler * getTaskScheduler (const std::string &taskSchedulerName);  ; static bool hasScheduler (const std::string &taskSchedulerName);  ; static const std::optional< std::pair< std::string, TaskScheduler * > > & getLastInserted ();  ; static void clear ();  . Function details. ◆ addTaskSchedulerToRegistry(). bool sofa::simulation::MainTaskSchedulerRegistry::addTaskSchedulerToRegistry ; (; TaskScheduler * ; taskScheduler, . const std::string & ; taskSchedulerName . ). static . ◆ clear(). void sofa::simulation::MainTaskSchedulerRegistry::clear ; (; ). static . ◆ getLastInserted(). const std::optional< std::pair< std::string, TaskScheduler * > > & sofa::simulation::MainTaskSchedulerRegistry::getLastInserted ; (; ). static . ◆ getTaskScheduler(). TaskScheduler * sofa::simulation::MainTaskSchedulerRegistry::getTaskScheduler ; (; const std::string & ; taskSchedulerName). static . ◆ hasScheduler(). bool sofa::simulation::MainTaskSchedulerRegistry::hasScheduler ; (; const std::string & ; taskSchedulerName). static . sofasimulationMainTaskSchedulerRegistry; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry.html:904,clear,clear,904,api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry.html,3,['clear'],['clear']
Usability,﻿. SOFA API: sofa::simulation::SceneCheckMainRegistry Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::SceneCheckMainRegistry Class Reference . #include <SceneCheckMainRegistry.h>. Static Public Member Functions; static bool addToRegistry (const SceneCheck::SPtr &sceneCheck);  ; static void removeFromRegistry (const SceneCheck::SPtr &sceneCheck);  ; static void clearRegistry ();  ; static const type::vector< SceneCheck::SPtr > & getRegisteredSceneChecks ();  . Function details. ◆ addToRegistry(). bool sofa::simulation::SceneCheckMainRegistry::addToRegistry ; (; const SceneCheck::SPtr & ; sceneCheck). static . ◆ clearRegistry(). void sofa::simulation::SceneCheckMainRegistry::clearRegistry ; (; ). static . ◆ getRegisteredSceneChecks(). const type::vector< SceneCheck::SPtr > & sofa::simulation::SceneCheckMainRegistry::getRegisteredSceneChecks ; (; ). static . ◆ removeFromRegistry(). void sofa::simulation::SceneCheckMainRegistry::removeFromRegistry ; (; const SceneCheck::SPtr & ; sceneCheck). static . sofasimulationSceneCheckMainRegistry; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_main_registry.html:480,clear,clearRegistry,480,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_main_registry.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_main_registry.html,3,['clear'],['clearRegistry']
Usability,﻿. SOFA API: sofa::simulation::SceneCheckRegistry Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::SceneCheckRegistry Class Reference . #include <SceneCheckRegistry.h>. Public Member Functions; bool addToRegistry (const SceneCheck::SPtr &sceneCheck);  ; void removeFromRegistry (const SceneCheck::SPtr &sceneCheck);  ; void clearRegistry ();  ; const type::vector< SceneCheck::SPtr > & getRegisteredSceneChecks () const;  . Function details. ◆ addToRegistry(). bool sofa::simulation::SceneCheckRegistry::addToRegistry ; (; const SceneCheck::SPtr & ; sceneCheck). ◆ clearRegistry(). void sofa::simulation::SceneCheckRegistry::clearRegistry ; (; ). ◆ getRegisteredSceneChecks(). const type::vector< SceneCheck::SPtr > & sofa::simulation::SceneCheckRegistry::getRegisteredSceneChecks ; (; ); const. ◆ removeFromRegistry(). void sofa::simulation::SceneCheckRegistry::removeFromRegistry ; (; const SceneCheck::SPtr & ; sceneCheck). sofasimulationSceneCheckRegistry; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_registry.html:433,clear,clearRegistry,433,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_registry.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_check_registry.html,3,['clear'],['clearRegistry']
Usability,"﻿. SOFA API: sofa::simulation::TaskSchedulerRegistry Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::simulation::TaskSchedulerRegistry Class Reference . #include <TaskSchedulerRegistry.h>; Detailed Description; Container for task schedulers and its associated name The registry is also owner of the schedulers: it destroys them in its destructor . Protected Attributes; std::map< std::string, TaskScheduler * > m_schedulers;  ; std::optional< std::pair< std::string, TaskScheduler * > > m_lastInserted {};  . Public Member Functions; bool addTaskSchedulerToRegistry (TaskScheduler *taskScheduler, const std::string &taskSchedulerName);  ; TaskScheduler * getTaskScheduler (const std::string &taskSchedulerName) const;  ; bool hasScheduler (const std::string &taskSchedulerName) const;  ; const std::optional< std::pair< std::string, TaskScheduler * > > & getLastInserted () const;  ; void clear ();  ;  ~TaskSchedulerRegistry ();  . Attribute details. ◆ m_lastInserted. std::optional<std::pair<std::string, TaskScheduler*> > sofa::simulation::TaskSchedulerRegistry::m_lastInserted {}. protected . ◆ m_schedulers. std::map<std::string, TaskScheduler*> sofa::simulation::TaskSchedulerRegistry::m_schedulers. protected . Constructor details. ◆ ~TaskSchedulerRegistry(). sofa::simulation::TaskSchedulerRegistry::~TaskSchedulerRegistry ; (; ). Function details. ◆ addTaskSchedulerToRegistry(). bool sofa::simulation::TaskSchedulerRegistry::addTaskSchedulerToRegistry ; (; TaskScheduler * ; taskScheduler, . const std::string & ; taskSchedulerName . ). Add a task scheduler to the registry and transfer the ownership . ◆ clear(). void sofa::simulation::TaskSchedulerRegistry::clear ; (; ). Clear the registry and destroy the task schedulers sstored in the registry . ◆ getLastInserted(). const std::optional< std::pair< std::string, TaskScheduler * > > & sofa::simulation::TaskSchedule",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry.html:1011,clear,clear,1011,api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_scheduler_registry.html,1,['clear'],['clear']
Usability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalApplyConstraintsVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalApplyConstraintsVisitor Class Reference . #include <MechanicalApplyConstraintsVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalApplyConstraintsVisitor:. [legend]; Detailed Description; Apply the constraints as filters to the given vector. This works for simple independent constraints, like maintaining a fixed point. . Public Attributes; sofa::core::MultiVecDerivId res;  ; double ** W;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalApplyConstraintsVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiVecDerivId res, double **W=nullptr);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; void bwdProjectiveConstraintSet (simulation::Node *, sofa::core::behavior::BaseProjectiveConstraintSet *c) override;  Process all the BaseProjectiveConstraintSet. More...;  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor.html:580,simpl,simple,580,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_apply_constraints_visitor.html,1,['simpl'],['simple']
Usability,"﻿. SOFA API: sofa::testing Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::testing Namespace Reference . Classes; struct  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:397,simpl,simple,397,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['simpl'],['simple']
Usability,"﻿. SOFA API: sofa::testing::BaseTest Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::testing::BaseTest Class Reference . #include <BaseTest.h>; Base class for Sofa test fixtures. ; More... Inheritance diagram for sofa::testing::BaseTest:. [legend]; Detailed Description; Base class for Sofa test fixtures. . Public Attributes; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Attribute details. ◆ m_error. sofa::testing::MessageAsTestFailure sofa::testing::BaseTest::m_error. ◆ m_fatal. sofa::testing::MessageAsTestFailure sofa::testing::BaseTest::m_fatal. To prevent that you simply need to add the line EXPECT_MSG_EMIT(Error); Where you want to allow a message. . ◆ seed. int sofa::testing::BaseTest::seed = (unsigned int)time(nullptr). static . Seed value. . Constructor details. ◆ BaseTest(). sofa::testing::BaseTest::BaseTest ; (; ). Initialize Sofa and the random number generator. . ◆ ~BaseTest(). sofa::testing::BaseTest::~BaseTest ; (; ). override . Function details. ◆ onSetUp(). virtual void sofa::testing::BaseTest::onSetUp ; (; ). inlinevirtual . Reimplemented in sofa::linearalgebra::testing::TestBaseMatrix< T >, and sofa::AdvancedTimerTest. ◆ onTearDown(). virtual void sofa::testing::BaseTest::onTearDown ; (; ). inlinevirtual . Reimplemented in sofa::linearalgebra::testing::TestBaseMatrix< T >. sofatestingBaseTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html:1056,simpl,simply,1056,api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html,1,['simpl'],['simply']
Usability,"﻿. SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::LinearCongruentialRandomGenerator Class Reference . #include <LinearCongruentialRandomGenerator.h>; A simple deterministic and portable random number generator. ; More...; Detailed Description; A simple deterministic and portable random number generator. ; This class implements a Linear Congruential Generator (LCG) algorithm to generate pseudo-random numbers. It is designed to provide deterministic and portable random number generation, making it well-suited for testing purposes. . Public Member Functions;  LinearCongruentialRandomGenerator (unsigned int initialSeed);  ; unsigned int generateRandom ();  Generates the next pseudo-random number. More...;  ; template<class Scalar > ; Scalar generateInUnitRange ();  Generates a pseudo-random value within the unit interval [0, 1]. More...;  ; double generateInRange (double rmin, double rmax);  Generates a pseudo-random double value within a specified range. More...;  ; float generateInRange (float rmin, float rmax);  Generates a pseudo-random float value within a specified range. More...;  . Constructor details. ◆ LinearCongruentialRandomGenerator(). sofa::testing::LinearCongruentialRandomGenerator::LinearCongruentialRandomGenerator ; (; unsigned int ; initialSeed). explicit . Function details. ◆ generateInRange() [1/2]. double sofa::testing::LinearCongruentialRandomGenerator::generateInRange ; (; double ; rmin, . double ; rmax . ). Generates a pseudo-random double value within a specified range. ; This function generates a pseudo-random double value between the provided minimum (rmin) and maximum (rmax) values.; Parameters. rminThe minimum value of the desired range (inclusive). ; rmaxThe maximum value of the desired range (inclusive). . ReturnsA pseudo-random double value in the specified range [rmin, rmax]",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html:319,simpl,simple,319,api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_linear_congruential_random_generator.html,2,['simpl'],['simple']
Usability,"﻿. SOFA API: sofa::type::trait Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Variables . sofa::type::trait Namespace Reference . Classes; struct  is_container;  Detect if a type T has iterator/const iterator function. More...;  ; struct  is_specialization_of;  Trait to check if a type T is a specialization of a given template class Template. More...;  ; struct  is_specialization_of< Template< Args... >, Template >;  Partial specialization for the case where T is an instance of Template<Args...>. More...;  ; struct  is_vector;  Detect if a type T has iterator/const iterator function and operator[](size_t) More...;  . Variables; template<typename T , template< typename... > class Template> ; constexpr bool is_specialization_of_v = is_specialization_of<T, Template>::value;  Helper variable template to simplify the syntax for checking if T is a specialization of Template. More...;  . Variable Documentation. ◆ is_specialization_of_v. template<typename T , template< typename... > class Template> . constexpr bool sofa::type::trait::is_specialization_of_v = is_specialization_of<T, Template>::value. inlineconstexpr . Helper variable template to simplify the syntax for checking if T is a specialization of Template. ; This variable template provides a cleaner and more concise way to use the is_specialization_of trait. Instead of writing is_specialization_of<T, Template>::value, you can use is_specialization_of_v<T, Template>.; Template Parameters. TThe type to be checked. ; TemplateThe template class to check against. . See alsois_specialization_of . sofatypetrait; Generated on Mon Nov 11 2024 03:36:34 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html:870,simpl,simplify,870,api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1type_1_1trait.html,2,['simpl'],['simplify']
Usability,"﻿. SOFA API: sofa::type::vector< T, MemoryManager > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Friends |; List of all members . sofa::type::vector< T, MemoryManager > Class Template Reference . #include <vector_T.h>. Inheritance diagram for sofa::type::vector< T, MemoryManager >:. [legend]; Detailed Description; template<class T, class MemoryManager = CPUMemoryManager<T>>; class sofa::type::vector< T, MemoryManager >; Regular vector Using CPUMemoryManager, it has the same behavior as std::vector with extra conveniences:; string serialization (making it usable in Data); operator[] is checking if the index is within the bounds in debug . Public Member Functions;  vector ();  Basic constructor. More...;  ;  vector (Size n, const T &value);  Constructor. More...;  ;  vector (Size n);  Constructor. More...;  ;  vector (const std::vector< T, Alloc > &x);  Constructor. More...;  ;  vector (const std::initializer_list< T > &t);  Brace initializer constructor. More...;  ;  vector (std::vector< T, Alloc > &&v);  Move constructor. More...;  ; vector & operator= (const std::vector< T, Alloc > &x);  Copy operator. More...;  ; vector & operator= (std::vector< T, Alloc > &&v);  Move assignment operator. More...;  ;  vector (typename vector< T >::const_iterator first, typename vector< T >::const_iterator last);  Constructor. More...;  ; reference operator[] (Size n);  Read/write random access. More...;  ; const_reference operator[] (Size n) const;  Read-only random access. More...;  ; std::ostream & write (std::ostream &os) const;  ; std::istream & read (std::istream &in);  ; void fill (const T &value);  Sets every element to 'value'. More...;  ; void fastResize (Size n);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::istream & read (std::istream &in);  ; SOFA_TYPE_API std::ostream & write (std::ostream &os) const;  ; SOFA_TYPE_API std::istream & read (std::istream &in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector.html:643,usab,usable,643,api/master/sofa/html/classsofa_1_1type_1_1vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector.html,1,['usab'],['usable']
Usability,"﻿. SOFA API: sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Static Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager > Class Template Reference . #include <vector_device.h>. Protected Attributes; Size vectorSize;  Current size of the vector. More...;  ; Size allocSize;  Allocated size on host. More...;  ; Size deviceVectorSize [MemoryManager::MAX_DEVICES];  Initialized size on each device. More...;  ; Size deviceAllocSize [MemoryManager::MAX_DEVICES];  Allocated size on each device. More...;  ; device_pointer devicePointer [MemoryManager::MAX_DEVICES];  Pointer to the data on the GPU side. More...;  ; Size clearSize;  when initializing missing device data, up to where entries should be set to zero ? More...;  ; T * hostPointer;  Pointer to the data on the CPU side. More...;  ; int deviceIsValid;  True if the data on the GPU is currently valid (up to the given deviceVectorSize of each device, i.e. additional space may need to be allocated and/or initialized) More...;  ; bool hostIsValid;  True if the data on the CPU is currently valid. More...;  ; bool bufferIsRegistered;  True if the buffer is registered with CUDA. More...;  ; buffer_id_type bufferObject;  Optional associated buffer ID. More...;  . Static Protected Attributes; static int cptid = 0;  . Public Member Functions;  vector_device ();  ;  vector_device (const Size n);  ;  vector_device (const vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ;  vector_device (const std::initializer_list< T > &t);  ; bool isHostValid () const;  ; bool isDeviceValid (unsigned gpu) const;  ; void clear ();  ; void operator= (const vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ;  ~vector_device ();  ; Size size () const;  ; Size capac",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html:887,clear,clearSize,887,api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,1,['clear'],['clearSize']
